<Type Name="Comparer&lt;T&gt;" FullName="System.Collections.Generic.Comparer&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d214f7889fbdab93064b96bc15ba3ba839da000e" /><Meta Name="ms.sourcegitcommit" Value="943c8cdbe5b47c6c296a6f4b73038bbd43da0dd2" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/12/2021" /><Meta Name="ms.locfileid" Value="100318981" /></Metadata><TypeSignature Language="C#" Value="public abstract class Comparer&lt;T&gt; : System.Collections.Generic.IComparer&lt;T&gt;, System.Collections.IComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Comparer`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IComparer`1&lt;!T&gt;, class System.Collections.IComparer" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.Comparer`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Comparer(Of T)&#xA;Implements IComparer, IComparer(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class Comparer abstract : System::Collections::Generic::IComparer&lt;T&gt;, System::Collections::IComparer" />
  <TypeSignature Language="F#" Value="type Comparer&lt;'T&gt; = class&#xA;    interface IComparer&lt;'T&gt;&#xA;    interface IComparer" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Comparer`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IComparer`1&lt;!T&gt;, class System.Collections.IComparer" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type Comparer&lt;'T&gt; = class&#xA;    interface IComparer&#xA;    interface IComparer&lt;'T&gt;" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Collections" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Collections" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IComparer&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><span data-ttu-id="a4550-101">要比较的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="a4550-101">The type of objects to compare.</span></span></typeparam>
    <summary><span data-ttu-id="a4550-102">为 <see cref="T:System.Collections.Generic.IComparer`1" /> 泛型接口的实现提供基类。</span><span class="sxs-lookup"><span data-stu-id="a4550-102">Provides a base class for implementations of the <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4550-103">从此类派生，以提供接口的自定义实现以用于 <xref:System.Collections.Generic.IComparer%601> 集合类，如 <xref:System.Collections.Generic.SortedList%602> 和 <xref:System.Collections.Generic.SortedDictionary%602> 泛型类。</span><span class="sxs-lookup"><span data-stu-id="a4550-103">Derive from this class to provide a custom implementation of the <xref:System.Collections.Generic.IComparer%601> interface for use with collection classes such as the <xref:System.Collections.Generic.SortedList%602> and <xref:System.Collections.Generic.SortedDictionary%602> generic classes.</span></span>  
  
 <span data-ttu-id="a4550-104">从 <xref:System.Collections.Generic.Comparer%601> 类派生并实现接口的区别 <xref:System.IComparable?displayProperty=nameWithType> 如下：</span><span class="sxs-lookup"><span data-stu-id="a4550-104">The difference between deriving from the <xref:System.Collections.Generic.Comparer%601> class and implementing the <xref:System.IComparable?displayProperty=nameWithType> interface is as follows:</span></span>  
  
-   <span data-ttu-id="a4550-105">若要指定默认情况下应如何比较两个对象，请 <xref:System.IComparable?displayProperty=nameWithType> 在类中实现接口。</span><span class="sxs-lookup"><span data-stu-id="a4550-105">To specify how two objects should be compared by default, implement the <xref:System.IComparable?displayProperty=nameWithType> interface in your class.</span></span> <span data-ttu-id="a4550-106">这可确保排序操作将使用您提供的默认比较代码。</span><span class="sxs-lookup"><span data-stu-id="a4550-106">This ensures that sort operations will use the default comparison code that you provided.</span></span>  
  
-   <span data-ttu-id="a4550-107">若要定义要使用的比较器而不是默认比较器，请从 <xref:System.Collections.Generic.Comparer%601> 类派生。</span><span class="sxs-lookup"><span data-stu-id="a4550-107">To define a comparer to use instead of the default comparer, derive from the <xref:System.Collections.Generic.Comparer%601> class.</span></span> <span data-ttu-id="a4550-108">然后，您可以在采用比较器作为参数的排序操作中使用此比较器。</span><span class="sxs-lookup"><span data-stu-id="a4550-108">You can then use this comparer in sort operations that take a comparer as a parameter.</span></span>  
  
 <span data-ttu-id="a4550-109">属性返回的对象 <xref:System.Collections.Generic.Comparer%601.Default%2A> 使用 <xref:System.IComparable%601?displayProperty=nameWithType> c # 中 (的泛型接口 `IComparable<T>` ， `IComparable(Of T)` 在 Visual Basic) 中，用于比较两个对象。</span><span class="sxs-lookup"><span data-stu-id="a4550-109">The object returned by the <xref:System.Collections.Generic.Comparer%601.Default%2A> property uses the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface (`IComparable<T>` in C#, `IComparable(Of T)` in Visual Basic) to compare two objects.</span></span> <span data-ttu-id="a4550-110">如果类型 `T` 未实现 <xref:System.IComparable%601?displayProperty=nameWithType> 泛型接口，则属性将 <xref:System.Collections.Generic.Comparer%601.Default%2A> 返回 <xref:System.Collections.Generic.Comparer%601> 使用 <xref:System.IComparable?displayProperty=nameWithType> 接口的。</span><span class="sxs-lookup"><span data-stu-id="a4550-110">If type `T` does not implement the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, the <xref:System.Collections.Generic.Comparer%601.Default%2A> property returns a <xref:System.Collections.Generic.Comparer%601> that uses the <xref:System.IComparable?displayProperty=nameWithType> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4550-111">下面的示例从类派生一个类 `BoxLengthFirst` <xref:System.Collections.Generic.Comparer%601> 。</span><span class="sxs-lookup"><span data-stu-id="a4550-111">The following example derives a class, `BoxLengthFirst`, from the <xref:System.Collections.Generic.Comparer%601> class.</span></span> <span data-ttu-id="a4550-112">此比较器比较类型的两个对象 `Box` 。</span><span class="sxs-lookup"><span data-stu-id="a4550-112">This comparer compares two objects of type `Box`.</span></span> <span data-ttu-id="a4550-113">首先按长度、按高度和宽度对它们进行排序。</span><span class="sxs-lookup"><span data-stu-id="a4550-113">It sorts them first by length, then by height, and then by width.</span></span> <span data-ttu-id="a4550-114">`Box`类实现 <xref:System.IComparable%601> 接口，以控制两个对象之间的默认比较 `Box` 。</span><span class="sxs-lookup"><span data-stu-id="a4550-114">The `Box` class implements the <xref:System.IComparable%601> interface to control the default comparison between two `Box` objects.</span></span> <span data-ttu-id="a4550-115">此默认实现首先按高度进行排序，然后按长度和宽度进行排序。</span><span class="sxs-lookup"><span data-stu-id="a4550-115">This default implementation sorts first by height, then by length, and then by width.</span></span> <span data-ttu-id="a4550-116">该示例 `Box` 首先通过使用 `BoxLengthFirst` 比较器并使用默认比较器对对象列表进行排序，从而显示两个比较之间的差异。</span><span class="sxs-lookup"><span data-stu-id="a4550-116">The example shows the differences between the two comparisons by sorting a list of `Box` objects first by using the `BoxLengthFirst` comparer and then by using the default comparer.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb" id="Snippet1":::

 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="a4550-117">
        <see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> 和 <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,\`0)" /> 在区域性敏感性和区分大小写方面的行为可能有所不同。</span><span class="sxs-lookup"><span data-stu-id="a4550-117">
        <see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,\`0)" /> and <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,\`0)" /> may behave differently in terms of culture-sensitivity and case-sensitivity.</span></span>  
  
<span data-ttu-id="a4550-118">对于字符串比较， <see cref="T:System.StringComparer" /> 建议使用类，而不是<c>比较器 &lt; 字符串 &gt; </c>。</span><span class="sxs-lookup"><span data-stu-id="a4550-118">For string comparisons, the <see cref="T:System.StringComparer" /> class is recommended over <c>Comparer&lt;String&gt;</c>.</span></span>  <span data-ttu-id="a4550-119">类的属性 <see cref="T:System.StringComparer" /> 返回预定义实例，这些实例执行与区域性敏感性和区分大小写的不同组合的字符串比较。</span><span class="sxs-lookup"><span data-stu-id="a4550-119">Properties of the <see cref="T:System.StringComparer" /> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.</span></span>  <span data-ttu-id="a4550-120">在同一实例的成员之间区分大小写和区分区域性 <see cref="T:System.StringComparer" /> 。</span><span class="sxs-lookup"><span data-stu-id="a4550-120">The case-sensitivity and culture-sensitivity are consistent among the members of the same <see cref="T:System.StringComparer" /> instance.</span></span>  
  
<span data-ttu-id="a4550-121">有关区域性特定比较的详细信息，请参阅 <see cref="N:System.Globalization" /> 命名空间和 [全球化和本地化](/dotnet/standard/globalization-localization/)。</span><span class="sxs-lookup"><span data-stu-id="a4550-121">For more information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](/dotnet/standard/globalization-localization/).</span></span></para></block>
    <altmember cref="T:System.Collections.Generic.IComparer`1" />
    <altmember cref="T:System.IComparable`1" />
    <altmember cref="T:System.StringComparer" />
    <altmember cref="T:System.Globalization.CultureInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Comparer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Comparer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a4550-122">初始化 <see cref="T:System.Collections.Generic.Comparer`1" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a4550-122">Initializes a new instance of the <see cref="T:System.Collections.Generic.Comparer`1" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public abstract int Compare (T x, T y);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(!T x, !T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Compare (x As T, y As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int Compare(T x, T y);" />
      <MemberSignature Language="F#" Value="abstract member Compare : 'T * 'T -&gt; int" Usage="comparer.Compare (x, y)" />
      <MemberSignature Language="C#" Value="public abstract int Compare (T? x, T? y);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IComparer`1.Compare(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="a4550-123">要比较的第一个对象。</span><span class="sxs-lookup"><span data-stu-id="a4550-123">The first object to compare.</span></span></param>
        <param name="y"><span data-ttu-id="a4550-124">要比较的第二个对象。</span><span class="sxs-lookup"><span data-stu-id="a4550-124">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="a4550-125">在派生类中重写时，对同一类型的两个对象执行比较并返回一个值，指示一个对象是小于、等于还是大于另一个对象。</span><span class="sxs-lookup"><span data-stu-id="a4550-125">When overridden in a derived class, performs a comparison of two objects of the same type and returns a value indicating whether one object is less than, equal to, or greater than the other.</span></span></summary>
        <returns><span data-ttu-id="a4550-126">一个有符号整数，指示 <paramref name="x" /> 和 <paramref name="y" /> 的相对值，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="a4550-126">A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="a4550-127">值</span><span class="sxs-lookup"><span data-stu-id="a4550-127">Value</span></span> 
 </term><description> <span data-ttu-id="a4550-128">含义</span><span class="sxs-lookup"><span data-stu-id="a4550-128">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="a4550-129">小于零</span><span class="sxs-lookup"><span data-stu-id="a4550-129">Less than zero</span></span> 
 </term><description><span data-ttu-id="a4550-130"><paramref name="x" /> 小于 <paramref name="y" />。</span><span class="sxs-lookup"><span data-stu-id="a4550-130"><paramref name="x" /> is less than <paramref name="y" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="a4550-131">零</span><span class="sxs-lookup"><span data-stu-id="a4550-131">Zero</span></span> 
 </term><description><span data-ttu-id="a4550-132"><paramref name="x" /> 等于 <paramref name="y" />。</span><span class="sxs-lookup"><span data-stu-id="a4550-132"><paramref name="x" /> equals <paramref name="y" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="a4550-133">大于零</span><span class="sxs-lookup"><span data-stu-id="a4550-133">Greater than zero</span></span> 
 </term><description><span data-ttu-id="a4550-134"><paramref name="x" /> 大于 <paramref name="y" />。</span><span class="sxs-lookup"><span data-stu-id="a4550-134"><paramref name="x" /> is greater than <paramref name="y" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4550-135">实现此方法可以为类型提供自定义排序顺序比较 `T` 。</span><span class="sxs-lookup"><span data-stu-id="a4550-135">Implement this method to provide a customized sort order comparison for type `T`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4550-136">下面的示例定义了 `Box` 可代替默认比较器使用的对象的比较器。</span><span class="sxs-lookup"><span data-stu-id="a4550-136">The following example defines a comparer of `Box` objects that can be used instead of the default comparer.</span></span> <span data-ttu-id="a4550-137">此示例是为类提供的更大示例的一部分 <xref:System.Collections.Generic.Comparer%601> 。</span><span class="sxs-lookup"><span data-stu-id="a4550-137">This example is part of a larger example provided for the <xref:System.Collections.Generic.Comparer%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#5)]
 [!code-vb[System.Collections.Generic.BoxCompare#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a4550-138">类型 <paramref name="T" /> 没有实现 <see cref="T:System.IComparable`1" /> 泛型接口或 <see cref="T:System.IComparable" /> 接口。</span><span class="sxs-lookup"><span data-stu-id="a4550-138">Type <paramref name="T" /> does not implement either the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="a4550-139"><see langword="null" />允许与任何引用类型进行比较，并且不会生成异常。</span><span class="sxs-lookup"><span data-stu-id="a4550-139">Comparing <see langword="null" /> with any reference type is allowed and does not generate an exception.</span></span> <span data-ttu-id="a4550-140">空引用被视为小于任何非空引用。</span><span class="sxs-lookup"><span data-stu-id="a4550-140">A null reference is considered to be less than any reference that is not null.</span></span>  
  
<span data-ttu-id="a4550-141">有关区域性特定的比较信息，请参阅 <see cref="N:System.Globalization" /> 命名空间和 [全球化和本地化](/dotnet/standard/globalization-localization/)。</span><span class="sxs-lookup"><span data-stu-id="a4550-141">For information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](/dotnet/standard/globalization-localization/).</span></span></para></block>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.StringComparer" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Comparer&lt;T&gt; Create (Comparison&lt;T&gt; comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Comparer`1&lt;!T&gt; Create(class System.Comparison`1&lt;!T&gt; comparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.Create(System.Comparison{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (comparison As Comparison(Of T)) As Comparer(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::Comparer&lt;T&gt; ^ Create(Comparison&lt;T&gt; ^ comparison);" />
      <MemberSignature Language="F#" Value="static member Create : Comparison&lt;'T&gt; -&gt; System.Collections.Generic.Comparer&lt;'T&gt;" Usage="System.Collections.Generic.Comparer&lt;'T&gt;.Create comparison" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Comparer&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparison" Type="System.Comparison&lt;T&gt;" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="comparison"><span data-ttu-id="a4550-142">要使用的比较。</span><span class="sxs-lookup"><span data-stu-id="a4550-142">The comparison to use.</span></span></param>
        <summary><span data-ttu-id="a4550-143">用指定的比较创建一个比较器。 </span><span class="sxs-lookup"><span data-stu-id="a4550-143">Creates a comparer by using the specified comparison.</span></span></summary>
        <returns><span data-ttu-id="a4550-144">新的比较器。</span><span class="sxs-lookup"><span data-stu-id="a4550-144">The new comparer.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Comparer&lt;T&gt; Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.Comparer`1&lt;!T&gt; Default" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Comparer`1.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As Comparer(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::Comparer&lt;T&gt; ^ Default { System::Collections::Generic::Comparer&lt;T&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Collections.Generic.Comparer&lt;'T&gt;" Usage="System.Collections.Generic.Comparer&lt;'T&gt;.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Comparer&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a4550-145">返回由泛型参数指定的类型的默认排序顺序比较器。</span><span class="sxs-lookup"><span data-stu-id="a4550-145">Returns a default sort order comparer for the type specified by the generic argument.</span></span></summary>
        <value><span data-ttu-id="a4550-146">继承 <see cref="T:System.Collections.Generic.Comparer`1" /> 并作为 <paramref name="T" /> 类型的排序顺序比较器的对象。</span><span class="sxs-lookup"><span data-stu-id="a4550-146">An object that inherits <see cref="T:System.Collections.Generic.Comparer`1" /> and serves as a sort order comparer for type <paramref name="T" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4550-147"><xref:System.Collections.Generic.Comparer%601>此属性返回的使用 <xref:System.IComparable%601?displayProperty=nameWithType> (c # 中的泛型接口 `IComparable<T>` ， `IComparable(Of T)` 在 Visual Basic) 中，用于比较两个对象。</span><span class="sxs-lookup"><span data-stu-id="a4550-147">The <xref:System.Collections.Generic.Comparer%601> returned by this property uses the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface (`IComparable<T>` in C#, `IComparable(Of T)` in Visual Basic) to compare two objects.</span></span> <span data-ttu-id="a4550-148">如果类型 `T` 未实现 <xref:System.IComparable%601?displayProperty=nameWithType> 泛型接口，则此属性将返回一个 <xref:System.Collections.Generic.Comparer%601> 使用接口的 <xref:System.IComparable?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="a4550-148">If type `T` does not implement the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, this property returns a <xref:System.Collections.Generic.Comparer%601> that uses the <xref:System.IComparable?displayProperty=nameWithType> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4550-149">下面的示例演示如何使用 <xref:System.Collections.Generic.Comparer%601.Default%2A> 属性获取执行默认比较的对象。</span><span class="sxs-lookup"><span data-stu-id="a4550-149">The following example shows how to use the <xref:System.Collections.Generic.Comparer%601.Default%2A> property to get an object that performs the default comparison.</span></span> <span data-ttu-id="a4550-150">此示例是为类提供的更大示例的一部分 <xref:System.Collections.Generic.Comparer%601> 。</span><span class="sxs-lookup"><span data-stu-id="a4550-150">This example is part of a larger example provided for the <xref:System.Collections.Generic.Comparer%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#3)]
 [!code-vb[System.Collections.Generic.BoxCompare#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="a4550-151">对于字符串比较， <see cref="T:System.StringComparer" /> 建议使用类，而不是 Visual Basic) 中<c>字符串)  (比较</c>器<c> &lt; 字符串 &gt; </c> (。</span><span class="sxs-lookup"><span data-stu-id="a4550-151">For string comparisons, the <see cref="T:System.StringComparer" /> class is recommended over <c>Comparer&lt;String&gt;</c> (<c>Comparer(Of String)</c> in Visual Basic).</span></span>  <span data-ttu-id="a4550-152">类的属性 <see cref="T:System.StringComparer" /> 返回预定义实例，这些实例执行与区域性敏感性和区分大小写的不同组合的字符串比较。</span><span class="sxs-lookup"><span data-stu-id="a4550-152">Properties of the <see cref="T:System.StringComparer" /> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.</span></span>  <span data-ttu-id="a4550-153">在同一实例的成员之间区分大小写和区分区域性 <see cref="T:System.StringComparer" /> 。</span><span class="sxs-lookup"><span data-stu-id="a4550-153">The case-sensitivity and culture-sensitivity are consistent among the members of the same <see cref="T:System.StringComparer" /> instance.</span></span>  
  
<span data-ttu-id="a4550-154">有关区域性特定比较的详细信息，请参阅 <see cref="N:System.Globalization" /> 命名空间和 [全球化和本地化](/dotnet/standard/globalization-localization/)。</span><span class="sxs-lookup"><span data-stu-id="a4550-154">For more information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](/dotnet/standard/globalization-localization/).</span></span></para></block>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.StringComparer" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IComparer.Compare">
      <MemberSignature Language="C#" Value="int IComparer.Compare (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IComparer.Compare(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Compare (x As Object, y As Object) As Integer Implements IComparer.Compare" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IComparer.Compare(System::Object ^ x, System::Object ^ y) = System::Collections::IComparer::Compare;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IComparer.Compare : obj * obj -&gt; int&#xA;override this.System.Collections.IComparer.Compare : obj * obj -&gt; int" Usage="comparer.System.Collections.IComparer.Compare (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="a4550-155">要比较的第一个对象。</span><span class="sxs-lookup"><span data-stu-id="a4550-155">The first object to compare.</span></span></param>
        <param name="y"><span data-ttu-id="a4550-156">要比较的第二个对象。</span><span class="sxs-lookup"><span data-stu-id="a4550-156">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="a4550-157">比较两个对象并返回一个值，该值指示一个对象小于、等于还是大于另一个对象。</span><span class="sxs-lookup"><span data-stu-id="a4550-157">Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.</span></span></summary>
        <returns><span data-ttu-id="a4550-158">一个有符号整数，指示 <paramref name="x" /> 和 <paramref name="y" /> 的相对值，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="a4550-158">A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="a4550-159">值</span><span class="sxs-lookup"><span data-stu-id="a4550-159">Value</span></span> 
 </term><description> <span data-ttu-id="a4550-160">含义</span><span class="sxs-lookup"><span data-stu-id="a4550-160">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="a4550-161">小于零</span><span class="sxs-lookup"><span data-stu-id="a4550-161">Less than zero</span></span> 
 </term><description><span data-ttu-id="a4550-162"><paramref name="x" /> 小于 <paramref name="y" />。</span><span class="sxs-lookup"><span data-stu-id="a4550-162"><paramref name="x" /> is less than <paramref name="y" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="a4550-163">零</span><span class="sxs-lookup"><span data-stu-id="a4550-163">Zero</span></span> 
 </term><description><span data-ttu-id="a4550-164"><paramref name="x" /> 等于 <paramref name="y" />。</span><span class="sxs-lookup"><span data-stu-id="a4550-164"><paramref name="x" /> equals <paramref name="y" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="a4550-165">大于零</span><span class="sxs-lookup"><span data-stu-id="a4550-165">Greater than zero</span></span> 
 </term><description><span data-ttu-id="a4550-166"><paramref name="x" /> 大于 <paramref name="y" />。</span><span class="sxs-lookup"><span data-stu-id="a4550-166"><paramref name="x" /> is greater than <paramref name="y" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4550-167">此方法是方法的包装 <xref:System.Collections.Generic.Comparer%601.Compare%28%600%2C%600%29> ，因此 `obj` 必须强制转换为当前实例的泛型参数所指定的类型 `T` 。</span><span class="sxs-lookup"><span data-stu-id="a4550-167">This method is a wrapper for the <xref:System.Collections.Generic.Comparer%601.Compare%28%600%2C%600%29> method, so `obj` must be cast to the type specified by the generic argument `T` of the current instance.</span></span> <span data-ttu-id="a4550-168">如果无法将它强制转换为 `T` ，则 <xref:System.ArgumentException> 会引发。</span><span class="sxs-lookup"><span data-stu-id="a4550-168">If it cannot be cast to `T`, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="a4550-169">`null`允许与任何引用类型进行比较，并且不会生成异常。</span><span class="sxs-lookup"><span data-stu-id="a4550-169">Comparing `null` with any reference type is allowed and does not generate an exception.</span></span> <span data-ttu-id="a4550-170">进行排序时， `null` 视为小于任何其他对象。</span><span class="sxs-lookup"><span data-stu-id="a4550-170">When sorting, `null` is considered to be less than any other object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4550-171">下面的示例演示如何使用 <xref:System.Collections.Generic.Comparer%601.System%23Collections%23IComparer%23Compare%2A> 方法比较两个对象。</span><span class="sxs-lookup"><span data-stu-id="a4550-171">The following example shows how to use the <xref:System.Collections.Generic.Comparer%601.System%23Collections%23IComparer%23Compare%2A> method to compare two objects.</span></span> <span data-ttu-id="a4550-172">此示例是为类提供的更大示例的一部分 <xref:System.Collections.Generic.Comparer%601> 。</span><span class="sxs-lookup"><span data-stu-id="a4550-172">This example is part of a larger example provided for the <xref:System.Collections.Generic.Comparer%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#4)]
 [!code-vb[System.Collections.Generic.BoxCompare#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a4550-173"><paramref name="x" /> 或 <paramref name="y" /> 所属的类型无法被强制转换为类型 <paramref name="T" />。</span><span class="sxs-lookup"><span data-stu-id="a4550-173"><paramref name="x" /> or <paramref name="y" /> is of a type that cannot be cast to type <paramref name="T" />.</span></span>  
  
<span data-ttu-id="a4550-174">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a4550-174">-or-</span></span> 
 <span data-ttu-id="a4550-175"><paramref name="x" /> 和 <paramref name="y" /> 不实现 <see cref="T:System.IComparable`1" /> 泛型接口或 <see cref="T:System.IComparable" /> 接口。</span><span class="sxs-lookup"><span data-stu-id="a4550-175"><paramref name="x" /> and <paramref name="y" /> do not implement either the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="a4550-176">
            <see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> 和 <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(\`0,\`0)" /> 在区域性敏感性和区分大小写方面具有不同的行为。</span><span class="sxs-lookup"><span data-stu-id="a4550-176">
            <see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> and <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(\`0,\`0)" /> behave differently in terms of culture-sensitivity and case-sensitivity.</span></span>  
  
<span data-ttu-id="a4550-177">对于字符串比较， <see cref="T:System.StringComparer" /> 建议使用类，而不是<c>比较器 &lt; 字符串 &gt; </c>。</span><span class="sxs-lookup"><span data-stu-id="a4550-177">For string comparisons, the <see cref="T:System.StringComparer" /> class is recommended over <c>Comparer&lt;String&gt;</c>.</span></span>  <span data-ttu-id="a4550-178">类的属性 <see cref="T:System.StringComparer" /> 返回预定义实例，这些实例执行与区域性敏感性和区分大小写的不同组合的字符串比较。</span><span class="sxs-lookup"><span data-stu-id="a4550-178">Properties of the <see cref="T:System.StringComparer" /> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.</span></span>  <span data-ttu-id="a4550-179">在同一实例的成员之间区分大小写和区分区域性 <see cref="T:System.StringComparer" /> 。</span><span class="sxs-lookup"><span data-stu-id="a4550-179">The case-sensitivity and culture-sensitivity are consistent among the members of the same <see cref="T:System.StringComparer" /> instance.</span></span>  
  
<span data-ttu-id="a4550-180">有关区域性特定比较的详细信息，请参阅 <see cref="N:System.Globalization" /> 命名空间和 [全球化和本地化](/dotnet/standard/globalization-localization/)。</span><span class="sxs-lookup"><span data-stu-id="a4550-180">For more information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](/dotnet/standard/globalization-localization/).</span></span></para></block>
        <altmember cref="T:System.StringComparer" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
  </Members>
</Type>
