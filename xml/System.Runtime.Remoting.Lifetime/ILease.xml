<Type Name="ILease" FullName="System.Runtime.Remoting.Lifetime.ILease">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fc1393f23bc954eeb6b3fdca2a2d142fefd07ffa" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89700476" /></Metadata><TypeSignature Language="C#" Value="public interface ILease" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ILease" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Lifetime.ILease" />
  <TypeSignature Language="VB.NET" Value="Public Interface ILease" />
  <TypeSignature Language="C++ CLI" Value="public interface class ILease" />
  <TypeSignature Language="F#" Value="type ILease = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>定义远程处理生存期服务所使用的生存期租约对象。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 分布式垃圾回收控制可以删除服务器应用程序的时间。 传统上，分布式垃圾回收使用引用计数和 ping 控制。 如果每个对象有少量的客户端，则这种方法很有效，但当每个对象有数千个客户端时，此功能就不能正常工作。 生存期服务可以假定传统分布式垃圾回收器的功能，并且在客户端数量增加时可以很好地进行缩放。  
  
 生存期服务将租约与每个远程激活的对象相关联。 当租约过期时，将删除该对象。 租约可以指定对象具有无限生存期。  
  
 每个都 <xref:System.AppDomain> 包含一个管理域中的租约的租约管理器。 租约管理器定期检查租约的时间是否过期。 如果租约过期，则可以通过删除租约的引用来取消它，或通过调用一个或多个租约的主办方来续订。  
  
 租约包含确定其策略的属性，以及用于续订租约时间的方法。 租约公开 <xref:System.Runtime.Remoting.Lifetime.ILease> 接口。  
  
 有关演示如何使用接口的示例， <xref:System.Runtime.Remoting.Lifetime.ILease> 请参阅 [生存期](https://msdn.microsoft.com/library/334a30e5-33cb-4f0f-a38a-ed4abc5560fa)。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CurrentLeaseTime">
      <MemberSignature Language="C#" Value="public TimeSpan CurrentLeaseTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan CurrentLeaseTime" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentLeaseTime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan CurrentLeaseTime { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentLeaseTime : TimeSpan" Usage="System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取租约的剩余时间。</summary>
        <value>租约的剩余时间。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">直接调用方通过引用接口进行调用，且没有基础结构权限。</exception>
      </Docs>
    </Member>
    <Member MemberName="CurrentState">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Lifetime.LeaseState CurrentState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Remoting.Lifetime.LeaseState CurrentState" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.ILease.CurrentState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentState As LeaseState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Remoting::Lifetime::LeaseState CurrentState { System::Runtime::Remoting::Lifetime::LeaseState get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentState : System.Runtime.Remoting.Lifetime.LeaseState" Usage="System.Runtime.Remoting.Lifetime.ILease.CurrentState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Lifetime.LeaseState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取租约的当前 <see cref="T:System.Runtime.Remoting.Lifetime.LeaseState" />。</summary>
        <value>租约的当前 <see cref="T:System.Runtime.Remoting.Lifetime.LeaseState" />。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">直接调用方通过引用接口进行调用，且没有基础结构权限。</exception>
        <altmember cref="T:System.Runtime.Remoting.Lifetime.LeaseState" />
      </Docs>
    </Member>
    <Member MemberName="InitialLeaseTime">
      <MemberSignature Language="C#" Value="public TimeSpan InitialLeaseTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan InitialLeaseTime" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.ILease.InitialLeaseTime" />
      <MemberSignature Language="VB.NET" Value="Public Property InitialLeaseTime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan InitialLeaseTime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.InitialLeaseTime : TimeSpan with get, set" Usage="System.Runtime.Remoting.Lifetime.ILease.InitialLeaseTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[set: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置租约的初始时间。</summary>
        <value>租约的初始时间。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果将 <xref:System.Runtime.Remoting.Lifetime.ILease.InitialLeaseTime%2A> 属性设置为 <xref:System.TimeSpan.Zero?displayProperty=nameWithType> ，则租约将永远不会超时，而与之关联的对象将具有无限生存期。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">直接调用方通过引用接口进行调用，且没有基础结构权限。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Register">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>为该租约注册主办方。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public void Register (System.Runtime.Remoting.Lifetime.ISponsor obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Register(class System.Runtime.Remoting.Lifetime.ISponsor obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Lifetime.ILease.Register(System.Runtime.Remoting.Lifetime.ISponsor)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Register (obj As ISponsor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Register(System::Runtime::Remoting::Lifetime::ISponsor ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Register : System.Runtime.Remoting.Lifetime.ISponsor -&gt; unit" Usage="iLease.Register obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Runtime.Remoting.Lifetime.ISponsor" />
      </Parameters>
      <Docs>
        <param name="obj">主办方的回调对象。</param>
        <summary>在不续订租约的前提下为该租约注册主办方。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果主办方已注册到当前方法，则不会续订该租约。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">直接调用方通过引用接口进行调用，且没有基础结构权限。</exception>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public void Register (System.Runtime.Remoting.Lifetime.ISponsor obj, TimeSpan renewalTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Register(class System.Runtime.Remoting.Lifetime.ISponsor obj, valuetype System.TimeSpan renewalTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Lifetime.ILease.Register(System.Runtime.Remoting.Lifetime.ISponsor,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Register (obj As ISponsor, renewalTime As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Register(System::Runtime::Remoting::Lifetime::ISponsor ^ obj, TimeSpan renewalTime);" />
      <MemberSignature Language="F#" Value="abstract member Register : System.Runtime.Remoting.Lifetime.ISponsor * TimeSpan -&gt; unit" Usage="iLease.Register (obj, renewalTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Runtime.Remoting.Lifetime.ISponsor" />
        <Parameter Name="renewalTime" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="obj">主办方的回调对象。</param>
        <param name="renewalTime">租约的续订期时间长度。</param>
        <summary>为该租约注册主办方，并将其续订指定的 <see cref="T:System.TimeSpan" />。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">直接调用方通过引用接口进行调用，且没有基础结构权限。</exception>
      </Docs>
    </Member>
    <Member MemberName="Renew">
      <MemberSignature Language="C#" Value="public TimeSpan Renew (TimeSpan renewalTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TimeSpan Renew(valuetype System.TimeSpan renewalTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Lifetime.ILease.Renew(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Renew (renewalTime As TimeSpan) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan Renew(TimeSpan renewalTime);" />
      <MemberSignature Language="F#" Value="abstract member Renew : TimeSpan -&gt; TimeSpan" Usage="iLease.Renew renewalTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="renewalTime" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="renewalTime">租约的续订期时间长度。</param>
        <summary>将租约续订指定的时间。</summary>
        <returns>该租约新的到期时间。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 租约时间设置为 <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A> 或当前时间加上续订时间的最大值。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">直接调用方通过引用接口进行调用，且没有基础结构权限。</exception>
      </Docs>
    </Member>
    <Member MemberName="RenewOnCallTime">
      <MemberSignature Language="C#" Value="public TimeSpan RenewOnCallTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan RenewOnCallTime" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime" />
      <MemberSignature Language="VB.NET" Value="Public Property RenewOnCallTime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan RenewOnCallTime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.RenewOnCallTime : TimeSpan with get, set" Usage="System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[set: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置对远程对象的调用续订 <see cref="P:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime" /> 的时间。</summary>
        <value>对远程对象的调用续订 <see cref="P:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime" /> 的时间。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当你调用远程对象时，生存期服务会将添加 <xref:System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime%2A> 到，前提是在 <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A> <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A> 下放置了 <xref:System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime%2A> 。 因此，顺序调用不会增加 <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A> 而不进行绑定。 相反，在调用后，将 <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A> 保证是 <xref:System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime%2A> 或更长时间。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">直接调用方通过引用接口进行调用，且没有基础结构权限。</exception>
      </Docs>
    </Member>
    <Member MemberName="SponsorshipTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan SponsorshipTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan SponsorshipTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.ILease.SponsorshipTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property SponsorshipTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan SponsorshipTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.SponsorshipTimeout : TimeSpan with get, set" Usage="System.Runtime.Remoting.Lifetime.ILease.SponsorshipTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[set: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置等待主办方返回租约续订时间的时间。</summary>
        <value>等待主办方返回租约续订时间的时间。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 <xref:System.Runtime.Remoting.Lifetime.ILease.SponsorshipTimeout%2A> 为 <xref:System.TimeSpan.Zero?displayProperty=nameWithType> ，则此租约不会接受主办方。  
  
 如果主办方在超时期限内未响应续订租约的调用，则假定它是死的，并从当前租约的主办方列表中删除。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">直接调用方通过引用接口进行调用，且没有基础结构权限。</exception>
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public void Unregister (System.Runtime.Remoting.Lifetime.ISponsor obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unregister(class System.Runtime.Remoting.Lifetime.ISponsor obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Lifetime.ILease.Unregister(System.Runtime.Remoting.Lifetime.ISponsor)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unregister (obj As ISponsor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unregister(System::Runtime::Remoting::Lifetime::ISponsor ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Unregister : System.Runtime.Remoting.Lifetime.ISponsor -&gt; unit" Usage="iLease.Unregister obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Runtime.Remoting.Lifetime.ISponsor" />
      </Parameters>
      <Docs>
        <param name="obj">要注销的租约赞助商。</param>
        <summary>从赞助商列表中删除赞助商。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">直接调用方通过引用接口进行调用，且没有基础结构权限。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
