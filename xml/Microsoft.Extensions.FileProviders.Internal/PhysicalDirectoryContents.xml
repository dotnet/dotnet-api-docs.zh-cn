<Type Name="PhysicalDirectoryContents" FullName="Microsoft.Extensions.FileProviders.Internal.PhysicalDirectoryContents">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9a0659c11eef133d2fddda2ceeb0c6b151d8ce03" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89842616" /></Metadata><TypeSignature Language="C#" Value="public class PhysicalDirectoryContents : Microsoft.Extensions.FileProviders.IDirectoryContents, System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.FileProviders.IFileInfo&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PhysicalDirectoryContents extends System.Object implements class Microsoft.Extensions.FileProviders.IDirectoryContents, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.FileProviders.IFileInfo&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.FileProviders.Internal.PhysicalDirectoryContents" />
  <TypeSignature Language="VB.NET" Value="Public Class PhysicalDirectoryContents&#xA;Implements IDirectoryContents, IEnumerable(Of IFileInfo)" />
  <TypeSignature Language="C++ CLI" Value="public ref class PhysicalDirectoryContents : Microsoft::Extensions::FileProviders::IDirectoryContents, System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::FileProviders::IFileInfo ^&gt;" />
  <TypeSignature Language="F#" Value="type PhysicalDirectoryContents = class&#xA;    interface IDirectoryContents&#xA;    interface seq&lt;IFileInfo&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.FileProviders.Physical</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.FileProviders.IDirectoryContents</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.FileProviders.IFileInfo&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="91cf4-101">表示物理文件目录的内容。</span><span class="sxs-lookup"><span data-stu-id="91cf4-101">Represents the contents of a physical file directory.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PhysicalDirectoryContents (string directory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string directory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileProviders.Internal.PhysicalDirectoryContents.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (directory As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PhysicalDirectoryContents(System::String ^ directory);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.FileProviders.Internal.PhysicalDirectoryContents : string -&gt; Microsoft.Extensions.FileProviders.Internal.PhysicalDirectoryContents" Usage="new Microsoft.Extensions.FileProviders.Internal.PhysicalDirectoryContents directory" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Physical</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="91cf4-102">目录</span><span class="sxs-lookup"><span data-stu-id="91cf4-102">The directory</span></span></param>
        <summary><span data-ttu-id="91cf4-103">初始化 <see cref="T:Microsoft.Extensions.FileProviders.Internal.PhysicalDirectoryContents" /> 的实例</span><span class="sxs-lookup"><span data-stu-id="91cf4-103">Initializes an instance of <see cref="T:Microsoft.Extensions.FileProviders.Internal.PhysicalDirectoryContents" /></span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PhysicalDirectoryContents (string directory, Microsoft.Extensions.FileProviders.Physical.ExclusionFilters filters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string directory, valuetype Microsoft.Extensions.FileProviders.Physical.ExclusionFilters filters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileProviders.Internal.PhysicalDirectoryContents.#ctor(System.String,Microsoft.Extensions.FileProviders.Physical.ExclusionFilters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (directory As String, filters As ExclusionFilters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PhysicalDirectoryContents(System::String ^ directory, Microsoft::Extensions::FileProviders::Physical::ExclusionFilters filters);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.FileProviders.Internal.PhysicalDirectoryContents : string * Microsoft.Extensions.FileProviders.Physical.ExclusionFilters -&gt; Microsoft.Extensions.FileProviders.Internal.PhysicalDirectoryContents" Usage="new Microsoft.Extensions.FileProviders.Internal.PhysicalDirectoryContents (directory, filters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Physical</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="directory" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="filters" Type="Microsoft.Extensions.FileProviders.Physical.ExclusionFilters" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="91cf4-104">目录</span><span class="sxs-lookup"><span data-stu-id="91cf4-104">The directory</span></span></param>
        <param name="filters"><span data-ttu-id="91cf4-105">指定要从枚举排除的文件或目录。</span><span class="sxs-lookup"><span data-stu-id="91cf4-105">Specifies which files or directories are excluded from enumeration.</span></span></param>
        <summary><span data-ttu-id="91cf4-106">初始化 <see cref="T:Microsoft.Extensions.FileProviders.Internal.PhysicalDirectoryContents" /> 的实例</span><span class="sxs-lookup"><span data-stu-id="91cf4-106">Initializes an instance of <see cref="T:Microsoft.Extensions.FileProviders.Internal.PhysicalDirectoryContents" /></span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public bool Exists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Exists" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.FileProviders.Internal.PhysicalDirectoryContents.Exists" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Exists { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Exists : bool" Usage="Microsoft.Extensions.FileProviders.Internal.PhysicalDirectoryContents.Exists" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Extensions.FileProviders.IDirectoryContents.Exists</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Physical</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="91cf4-107">确定目录是否位于给定的路径。</span><span class="sxs-lookup"><span data-stu-id="91cf4-107">Determines if a directory was located at the given path.</span></span></summary>
        <value><span data-ttu-id="91cf4-108"><see langword="true" /> 如果目录位于给定路径，则为; <see langword="false" /> 否则为。</span><span class="sxs-lookup"><span data-stu-id="91cf4-108"><see langword="true" /> if a directory was located at the given path; <see langword="false" /> otherwise.</span></span></value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;Microsoft.Extensions.FileProviders.IFileInfo&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class Microsoft.Extensions.FileProviders.IFileInfo&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileProviders.Internal.PhysicalDirectoryContents.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of IFileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;Microsoft::Extensions::FileProviders::IFileInfo ^&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;Microsoft.Extensions.FileProviders.IFileInfo&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;Microsoft.Extensions.FileProviders.IFileInfo&gt;" Usage="physicalDirectoryContents.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Physical</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;Microsoft.Extensions.FileProviders.IFileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="91cf4-109">返回一个循环访问集合的枚举器。</span><span class="sxs-lookup"><span data-stu-id="91cf4-109">Returns an enumerator that iterates through the collection.</span></span></summary>
        <returns><span data-ttu-id="91cf4-110">用于循环访问集合的枚举数。</span><span class="sxs-lookup"><span data-stu-id="91cf4-110">An enumerator that can be used to iterate through the collection.</span></span></returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileProviders.Internal.PhysicalDirectoryContents.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="physicalDirectoryContents.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Physical</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="91cf4-111">返回循环访问集合的枚举数。</span><span class="sxs-lookup"><span data-stu-id="91cf4-111">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="91cf4-112">用于循环访问集合的枚举数。</span><span class="sxs-lookup"><span data-stu-id="91cf4-112">An enumerator that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="91cf4-113">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="91cf4-113">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="91cf4-114">它只能在 <xref:Microsoft.Extensions.FileProviders.Internal.PhysicalDirectoryContents> 实例被强制转换为 <xref:System.Collections.IEnumerable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="91cf4-114">It can be used only when the <xref:Microsoft.Extensions.FileProviders.Internal.PhysicalDirectoryContents> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
