<Type Name="IDesignerFilter" FullName="System.ComponentModel.Design.IDesignerFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4e27b543b8857294d2bea9c4c7819aab67d65d37" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89772161" /></Metadata><TypeSignature Language="C#" Value="public interface IDesignerFilter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerFilter" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IDesignerFilter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerFilter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerFilter" />
  <TypeSignature Language="F#" Value="type IDesignerFilter = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.ComponentModel.TypeConverter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d4a96-101">提供使设计器能够访问和筛选 <see cref="T:System.ComponentModel.TypeDescriptor" /> 字典的接口，它存储组件设计器可以向设计时环境公开的属性、特性和事件说明符。</span><span class="sxs-lookup"><span data-stu-id="d4a96-101">Provides an interface that enables a designer to access and filter the dictionaries of a <see cref="T:System.ComponentModel.TypeDescriptor" /> that stores the property, attribute, and event descriptors that a component designer can expose to the design-time environment.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4a96-102"><xref:System.ComponentModel.Design.IDesignerFilter> 使设计器可以筛选其关联组件通过公开的属性、特性和事件说明符集 <xref:System.ComponentModel.TypeDescriptor> 。</span><span class="sxs-lookup"><span data-stu-id="d4a96-102"><xref:System.ComponentModel.Design.IDesignerFilter> enables a designer to filter the set of property, attribute, and event descriptors that its associated component exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="d4a96-103">此接口的名称以开头的方法 `Pre` 立即在名称以开头的方法之前调用 `Post` 。</span><span class="sxs-lookup"><span data-stu-id="d4a96-103">The methods of this interface whose names begin with `Pre` are called immediately before the methods whose names begin with `Post`.</span></span>  
  
 <span data-ttu-id="d4a96-104">如果要添加特性、事件或属性说明符，请使用 <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A> 、 <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A> 或 <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="d4a96-104">If you want to add attribute, event, or property descriptors, use a <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>, or <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> method.</span></span>  
  
 <span data-ttu-id="d4a96-105">若要更改或删除属性、事件或属性描述符，请使用 <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A> 、 <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A> 或 <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="d4a96-105">If you want to change or remove attribute, event, or property descriptors, use a <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>, or <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4a96-106">下面的示例演示在 <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> 设计时选择设计器的控件时，将设计器的属性添加到属性窗口的的重写。</span><span class="sxs-lookup"><span data-stu-id="d4a96-106">The following example demonstrates an override of <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> that adds a property of the designer to the Properties window when the designer's control is selected at design time.</span></span> <span data-ttu-id="d4a96-107"><xref:System.Windows.Forms.Design.ControlDesigner>有关使用接口的完整设计器示例，请参阅类的示例 <xref:System.ComponentModel.Design.IDesignerFilter> 。</span><span class="sxs-lookup"><span data-stu-id="d4a96-107">See the example for the <xref:System.Windows.Forms.Design.ControlDesigner> class for a complete designer example that uses the <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span></span>  
  
 [!code-cpp[ControlDesignerExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlDesignerExample/CPP/controldesignerexample.cpp#2)]
 [!code-csharp[ControlDesignerExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlDesignerExample/CS/controldesignerexample.cs#2)]
 [!code-vb[ControlDesignerExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlDesignerExample/VB/controldesignerexample.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.ITypeDescriptorFilterService" />
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
  </Docs>
  <Members>
    <Member MemberName="PostFilterAttributes">
      <MemberSignature Language="C#" Value="public void PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="d4a96-108">组件的类的 <see cref="T:System.Attribute" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="d4a96-108">The <see cref="T:System.Attribute" /> objects for the class of the component.</span></span> <span data-ttu-id="d4a96-109">特性字典中的关键字是特性的 <see cref="P:System.Attribute.TypeId" /> 值。</span><span class="sxs-lookup"><span data-stu-id="d4a96-109">The keys in the dictionary of attributes are the <see cref="P:System.Attribute.TypeId" /> values of the attributes.</span></span></param>
        <summary><span data-ttu-id="d4a96-110">当在派生类中被重写后，允许设计器更改或移除它通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的特性集中的项。</span><span class="sxs-lookup"><span data-stu-id="d4a96-110">When overridden in a derived class, allows a designer to change or remove items from the set of attributes that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4a96-111">此方法提供了一种方法，用于更改或移除属性字典中的项，实现此接口的设计器的关联组件通过公开这些特性 <xref:System.ComponentModel.TypeDescriptor> 。</span><span class="sxs-lookup"><span data-stu-id="d4a96-111">This method provides a way to change or remove items within the dictionary of attributes that the associated component of the designer implementing this interface exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="d4a96-112">属性字典中的键是属性的类型 Id。</span><span class="sxs-lookup"><span data-stu-id="d4a96-112">The keys in the dictionary of attributes are the type IDs of the attributes.</span></span> <span data-ttu-id="d4a96-113">对象的类型为 <xref:System.Attribute> 。</span><span class="sxs-lookup"><span data-stu-id="d4a96-113">The objects are of type <xref:System.Attribute>.</span></span> <span data-ttu-id="d4a96-114">立即调用此方法 <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A> 。</span><span class="sxs-lookup"><span data-stu-id="d4a96-114">This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>.</span></span>  
  
 <span data-ttu-id="d4a96-115">特性的类型 ID 可以是任何对象。</span><span class="sxs-lookup"><span data-stu-id="d4a96-115">The type ID of an attribute can be any object.</span></span> <span data-ttu-id="d4a96-116">默认情况下，将 <xref:System.Attribute> 其 <xref:System.Type> 作为其属性的值返回 <xref:System.Attribute.TypeId%2A> 。</span><span class="sxs-lookup"><span data-stu-id="d4a96-116">By default, <xref:System.Attribute> returns its <xref:System.Type> as the value of its <xref:System.Attribute.TypeId%2A> property.</span></span> <span data-ttu-id="d4a96-117">您可以 <xref:System.Attribute.TypeId%2A> 在字典中检查属性的是否与已知的等效，以便对 <xref:System.Attribute.TypeId%2A> 属性进行标识，或使用 <xref:System.Reflection> 标识特性对象本身。</span><span class="sxs-lookup"><span data-stu-id="d4a96-117">You can check the <xref:System.Attribute.TypeId%2A> of an attribute in the dictionary for equivalence with a known <xref:System.Attribute.TypeId%2A> for an attribute to identify it, or use <xref:System.Reflection> to identify the attribute object itself.</span></span>  
  
 <span data-ttu-id="d4a96-118">将与 <xref:System.Attribute.TypeId%2A> 现有或继承属性相同的属性添加到组件时，新属性将替换旧属性。</span><span class="sxs-lookup"><span data-stu-id="d4a96-118">When an attribute that has the same <xref:System.Attribute.TypeId%2A> as an existing or inherited attribute is added to a component, the new attribute replaces the old attribute.</span></span> <span data-ttu-id="d4a96-119">对于很多特性，相同类型的新属性将替换该类型的任何以前的特性。</span><span class="sxs-lookup"><span data-stu-id="d4a96-119">For many attributes, a new attribute of the same type will replace any previous attribute of the type.</span></span> <span data-ttu-id="d4a96-120">但是，某些类型的属性返回 <xref:System.Attribute.TypeId%2A> 可有选择地区分该属性的。</span><span class="sxs-lookup"><span data-stu-id="d4a96-120">However, some types of attributes return a <xref:System.Attribute.TypeId%2A> that distinguishes the attribute selectively.</span></span> <span data-ttu-id="d4a96-121">例如，若要为某一类型（如和）提供不同类型的同时处于活动状态的设计器， <xref:System.ComponentModel.Design.IRootDesigner> <xref:System.ComponentModel.Design.IDesigner> 则 <xref:System.ComponentModel.DesignerAttribute> 类将返回一个 <xref:System.Attribute.TypeId%2A> ，它唯一标识特性和基设计器类型。</span><span class="sxs-lookup"><span data-stu-id="d4a96-121">For example, in order to provide different types of simultaneously active designers for a type, such as an <xref:System.ComponentModel.Design.IRootDesigner> and an <xref:System.ComponentModel.Design.IDesigner>, the <xref:System.ComponentModel.DesignerAttribute> class returns a <xref:System.Attribute.TypeId%2A> that uniquely identifies both the attribute and the base designer type.</span></span> <span data-ttu-id="d4a96-122"><xref:System.ComponentModel.DesignerAttribute>构造函数允许除了特定类型外，还指定设计器的基设计器类型，并 <xref:System.ComponentModel.DesignerAttribute> 返回一个 <xref:System.Attribute.TypeId%2A> 反映此的。</span><span class="sxs-lookup"><span data-stu-id="d4a96-122">The <xref:System.ComponentModel.DesignerAttribute> constructor allows you to specify the base designer type of the designer in addition to its specific type, and <xref:System.ComponentModel.DesignerAttribute> returns a <xref:System.Attribute.TypeId%2A> that reflects this.</span></span> <span data-ttu-id="d4a96-123">因此，当 <xref:System.ComponentModel.DesignerAttribute> 使用与现有的基设计器类型相同的类型的基本设计器类型添加新的时 <xref:System.ComponentModel.DesignerAttribute> ，旧属性将替换为新的属性。</span><span class="sxs-lookup"><span data-stu-id="d4a96-123">Therefore when you add a new <xref:System.ComponentModel.DesignerAttribute> with a base designer type of the same type as the base designer type of an existing <xref:System.ComponentModel.DesignerAttribute>, the old attribute is replaced with the new attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d4a96-124">可以直接筛选可通过参数访问的字典 <paramref name="attributes" /> ，也可以将其保持不变。</span><span class="sxs-lookup"><span data-stu-id="d4a96-124">You can directly filter the dictionary that is accessible through the <paramref name="attributes" /> parameter, or you can leave it unchanged.</span></span> <span data-ttu-id="d4a96-125">如果要重写此方法，请在执行您自己的筛选后调用基实现。</span><span class="sxs-lookup"><span data-stu-id="d4a96-125">If you are overriding this method, call the base implementation after you perform your own filtering.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterEvents">
      <MemberSignature Language="C#" Value="public void PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterEvents events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events"><span data-ttu-id="d4a96-126"><see cref="T:System.ComponentModel.EventDescriptor" /> 对象，它表示组件的类的事件。</span><span class="sxs-lookup"><span data-stu-id="d4a96-126">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component.</span></span> <span data-ttu-id="d4a96-127">事件字典中的关键字是事件名。</span><span class="sxs-lookup"><span data-stu-id="d4a96-127">The keys in the dictionary of events are event names.</span></span></param>
        <summary><span data-ttu-id="d4a96-128">当在派生类中重写后，允许设计器更改或移除它通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的事件集中的项。</span><span class="sxs-lookup"><span data-stu-id="d4a96-128">When overridden in a derived class, allows a designer to change or remove items from the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4a96-129">此方法提供了一种方法，用于在通过公开的事件字典中更改或移除项 <xref:System.ComponentModel.TypeDescriptor> 。</span><span class="sxs-lookup"><span data-stu-id="d4a96-129">This method provides a way to change or remove items within the dictionary of events that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="d4a96-130">事件字典中的键是事件的名称。</span><span class="sxs-lookup"><span data-stu-id="d4a96-130">The keys in the dictionary of events are the names of the events.</span></span> <span data-ttu-id="d4a96-131">对象的类型为 <xref:System.ComponentModel.EventDescriptor> 。</span><span class="sxs-lookup"><span data-stu-id="d4a96-131">The objects are of type <xref:System.ComponentModel.EventDescriptor>.</span></span> <span data-ttu-id="d4a96-132">立即调用此方法 <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A> 。</span><span class="sxs-lookup"><span data-stu-id="d4a96-132">This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d4a96-133">可以直接筛选可通过参数访问的字典 <paramref name="events" /> ，也可以将其保持不变。</span><span class="sxs-lookup"><span data-stu-id="d4a96-133">You can directly filter the dictionary that is accessible through the <paramref name="events" /> parameter, or you can leave it unchanged.</span></span> <span data-ttu-id="d4a96-134">如果要重写此方法，请在执行您自己的筛选后调用基实现。</span><span class="sxs-lookup"><span data-stu-id="d4a96-134">If you are overriding this method, call the base implementation after you perform your own filtering.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterProperties">
      <MemberSignature Language="C#" Value="public void PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties"><span data-ttu-id="d4a96-135"><see cref="T:System.ComponentModel.PropertyDescriptor" /> 对象，它表示组件的类的属性。</span><span class="sxs-lookup"><span data-stu-id="d4a96-135">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component.</span></span> <span data-ttu-id="d4a96-136">属性字典中的关键字是属性名。</span><span class="sxs-lookup"><span data-stu-id="d4a96-136">The keys in the dictionary of properties are property names.</span></span></param>
        <summary><span data-ttu-id="d4a96-137">当在派生类中重写后，允许设计器更改或移除它通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的属性集中的项。</span><span class="sxs-lookup"><span data-stu-id="d4a96-137">When overridden in a derived class, allows a designer to change or remove items from the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4a96-138">此方法提供了一种方法，用于更改或移除通过公开的属性字典中的项 <xref:System.ComponentModel.TypeDescriptor> 。</span><span class="sxs-lookup"><span data-stu-id="d4a96-138">This method provides a way to change or remove items within the dictionary of properties that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="d4a96-139">属性字典中的键是属性的名称。</span><span class="sxs-lookup"><span data-stu-id="d4a96-139">The keys in the dictionary of properties are the names of the properties.</span></span> <span data-ttu-id="d4a96-140">对象的类型为 <xref:System.ComponentModel.PropertyDescriptor> 。</span><span class="sxs-lookup"><span data-stu-id="d4a96-140">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="d4a96-141">立即调用此方法 <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> 。</span><span class="sxs-lookup"><span data-stu-id="d4a96-141">This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d4a96-142">可以直接筛选可通过参数访问的字典 <paramref name="properties" /> ，也可以将其保持不变。</span><span class="sxs-lookup"><span data-stu-id="d4a96-142">You can directly filter the dictionary that is accessible through the <paramref name="properties" /> parameter, or you can leave it unchanged.</span></span> <span data-ttu-id="d4a96-143">如果要重写此方法，请在执行您自己的筛选后调用基实现。</span><span class="sxs-lookup"><span data-stu-id="d4a96-143">If you are overriding this method, call the base implementation after you perform your own filtering.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterAttributes">
      <MemberSignature Language="C#" Value="public void PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="d4a96-144">组件的类的 <see cref="T:System.Attribute" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="d4a96-144">The <see cref="T:System.Attribute" /> objects for the class of the component.</span></span> <span data-ttu-id="d4a96-145">特性字典中的关键字是特性的 <see cref="P:System.Attribute.TypeId" /> 值。</span><span class="sxs-lookup"><span data-stu-id="d4a96-145">The keys in the dictionary of attributes are the <see cref="P:System.Attribute.TypeId" /> values of the attributes.</span></span></param>
        <summary><span data-ttu-id="d4a96-146">当在派生类中被重写时，允许设计器将项添加到它通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的特性集中。</span><span class="sxs-lookup"><span data-stu-id="d4a96-146">When overridden in a derived class, allows a designer to add items to the set of attributes that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4a96-147">此方法提供了一种方法，可将项添加到特性的字典中，实现此接口的设计器的关联组件通过公开 <xref:System.ComponentModel.TypeDescriptor> 。</span><span class="sxs-lookup"><span data-stu-id="d4a96-147">This method provides a way to add items to the dictionary of attributes that the associated component of the designer implementing this interface exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="d4a96-148">属性字典中的键是属性的类型 Id。</span><span class="sxs-lookup"><span data-stu-id="d4a96-148">The keys in the dictionary of attributes are the type IDs of the attributes.</span></span> <span data-ttu-id="d4a96-149">对象的类型为 <xref:System.Attribute> 。</span><span class="sxs-lookup"><span data-stu-id="d4a96-149">The objects are of type <xref:System.Attribute>.</span></span> <span data-ttu-id="d4a96-150">立即调用此方法 <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A> 。</span><span class="sxs-lookup"><span data-stu-id="d4a96-150">This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>.</span></span>  
  
 <span data-ttu-id="d4a96-151">特性的类型 ID 可以是任何对象。</span><span class="sxs-lookup"><span data-stu-id="d4a96-151">The type ID of an attribute can be any object.</span></span> <span data-ttu-id="d4a96-152">默认情况下，将 <xref:System.Attribute> 其 <xref:System.Type> 作为其属性的值返回 <xref:System.Attribute.TypeId%2A> 。</span><span class="sxs-lookup"><span data-stu-id="d4a96-152">By default, <xref:System.Attribute> returns its <xref:System.Type> as the value of its <xref:System.Attribute.TypeId%2A> property.</span></span> <span data-ttu-id="d4a96-153">您可以 <xref:System.Attribute.TypeId%2A> 在字典中检查属性的是否与已知的等效，以便对 <xref:System.Attribute.TypeId%2A> 属性进行标识，或使用 <xref:System.Reflection> 标识特性对象本身。</span><span class="sxs-lookup"><span data-stu-id="d4a96-153">You can check the <xref:System.Attribute.TypeId%2A> of an attribute in the dictionary for equivalence with a known <xref:System.Attribute.TypeId%2A> for an attribute to identify it, or use <xref:System.Reflection> to identify the attribute object itself.</span></span>  
  
 <span data-ttu-id="d4a96-154">将与 <xref:System.Attribute.TypeId%2A> 现有或继承属性相同的属性添加到组件时，新属性将替换旧属性。</span><span class="sxs-lookup"><span data-stu-id="d4a96-154">When an attribute that has the same <xref:System.Attribute.TypeId%2A> as an existing or inherited attribute is added to a component, the new attribute replaces the old attribute.</span></span> <span data-ttu-id="d4a96-155">对于很多特性，相同类型的新属性将替换该类型的任何以前的特性。</span><span class="sxs-lookup"><span data-stu-id="d4a96-155">For many attributes, a new attribute of the same type will replace any previous attribute of the type.</span></span> <span data-ttu-id="d4a96-156">但是，某些类型的属性返回 <xref:System.Attribute.TypeId%2A> 可有选择地区分该属性的。</span><span class="sxs-lookup"><span data-stu-id="d4a96-156">However, some types of attributes return a <xref:System.Attribute.TypeId%2A> that distinguishes the attribute selectively.</span></span> <span data-ttu-id="d4a96-157">例如，若要为某一类型（如和）提供不同类型的同时处于活动状态的设计器， <xref:System.ComponentModel.Design.IRootDesigner> <xref:System.ComponentModel.Design.IDesigner> 则 <xref:System.ComponentModel.DesignerAttribute> 类将返回一个 <xref:System.Attribute.TypeId%2A> ，它唯一标识特性和基设计器类型。</span><span class="sxs-lookup"><span data-stu-id="d4a96-157">For example, in order to provide different types of simultaneously active designers for a type, such as an <xref:System.ComponentModel.Design.IRootDesigner> and an <xref:System.ComponentModel.Design.IDesigner>, the <xref:System.ComponentModel.DesignerAttribute> class returns a <xref:System.Attribute.TypeId%2A> that uniquely identifies both the attribute and the base designer type.</span></span> <span data-ttu-id="d4a96-158"><xref:System.ComponentModel.DesignerAttribute>构造函数允许除了特定类型外，还指定设计器的基设计器类型，并 <xref:System.ComponentModel.DesignerAttribute> 返回一个 <xref:System.Attribute.TypeId%2A> 反映此的。</span><span class="sxs-lookup"><span data-stu-id="d4a96-158">The <xref:System.ComponentModel.DesignerAttribute> constructor allows you to specify the base designer type of the designer in addition to its specific type, and <xref:System.ComponentModel.DesignerAttribute> returns a <xref:System.Attribute.TypeId%2A> that reflects this.</span></span> <span data-ttu-id="d4a96-159">因此，当 <xref:System.ComponentModel.DesignerAttribute> 使用与现有的基设计器类型相同的类型的基本设计器类型添加新的时 <xref:System.ComponentModel.DesignerAttribute> ，旧属性将替换为新的属性。</span><span class="sxs-lookup"><span data-stu-id="d4a96-159">Therefore when you add a new <xref:System.ComponentModel.DesignerAttribute> with a base designer type of the same type as the base designer type of an existing <xref:System.ComponentModel.DesignerAttribute>, the old attribute is replaced with the new attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d4a96-160">可以直接筛选可通过参数访问的字典 <paramref name="attributes" /> ，也可以将其保持不变。</span><span class="sxs-lookup"><span data-stu-id="d4a96-160">You can directly filter the dictionary that is accessible through the <paramref name="attributes" /> parameter, or you can leave it unchanged.</span></span> <span data-ttu-id="d4a96-161">如果要重写此方法，请在执行您自己的筛选后调用基实现。</span><span class="sxs-lookup"><span data-stu-id="d4a96-161">If you are overriding this method, call the base implementation after you perform your own filtering.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterEvents">
      <MemberSignature Language="C#" Value="public void PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterEvents events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events"><span data-ttu-id="d4a96-162"><see cref="T:System.ComponentModel.EventDescriptor" /> 对象，它表示组件的类的事件。</span><span class="sxs-lookup"><span data-stu-id="d4a96-162">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component.</span></span> <span data-ttu-id="d4a96-163">事件字典中的关键字是事件名。</span><span class="sxs-lookup"><span data-stu-id="d4a96-163">The keys in the dictionary of events are event names.</span></span></param>
        <summary><span data-ttu-id="d4a96-164">当在派生类中被重写时，允许设计器将项添加到它通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的事件集中。</span><span class="sxs-lookup"><span data-stu-id="d4a96-164">When overridden in a derived class, allows a designer to add items to the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4a96-165">此方法提供了一种方法，用于向设计器通过公开的事件字典添加项 <xref:System.ComponentModel.TypeDescriptor> 。</span><span class="sxs-lookup"><span data-stu-id="d4a96-165">This method provides a way to add items to the dictionary of events that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="d4a96-166">事件字典中的键是事件的名称。</span><span class="sxs-lookup"><span data-stu-id="d4a96-166">The keys in the dictionary of events are the names of the events.</span></span> <span data-ttu-id="d4a96-167">对象的类型为 <xref:System.ComponentModel.EventDescriptor> 。</span><span class="sxs-lookup"><span data-stu-id="d4a96-167">The objects are of type <xref:System.ComponentModel.EventDescriptor>.</span></span> <span data-ttu-id="d4a96-168">立即调用此方法 <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A> 。</span><span class="sxs-lookup"><span data-stu-id="d4a96-168">This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d4a96-169">可以直接修改可通过参数访问的字典 <paramref name="events" /> ，也可以将其保持不变。</span><span class="sxs-lookup"><span data-stu-id="d4a96-169">You can directly modify the dictionary that is accessible through the <paramref name="events" /> parameter, or you can leave it unchanged.</span></span> <span data-ttu-id="d4a96-170">如果要重写此方法，请在执行您自己的筛选之前调用基实现。</span><span class="sxs-lookup"><span data-stu-id="d4a96-170">If you are overriding this method, call the base implementation before you perform your own filtering.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="public void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties"><span data-ttu-id="d4a96-171"><see cref="T:System.ComponentModel.PropertyDescriptor" /> 对象，它表示组件的类的属性。</span><span class="sxs-lookup"><span data-stu-id="d4a96-171">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component.</span></span> <span data-ttu-id="d4a96-172">属性字典中的关键字是属性名。</span><span class="sxs-lookup"><span data-stu-id="d4a96-172">The keys in the dictionary of properties are property names.</span></span></param>
        <summary><span data-ttu-id="d4a96-173">当在派生类中被重写时，允许设计器将项添加到它通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的属性集中。</span><span class="sxs-lookup"><span data-stu-id="d4a96-173">When overridden in a derived class, allows a designer to add items to the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4a96-174">此方法提供了一种方法，用于向设计器通过公开的属性字典添加项 <xref:System.ComponentModel.TypeDescriptor> 。</span><span class="sxs-lookup"><span data-stu-id="d4a96-174">This method provides a way to add items to the dictionary of properties that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="d4a96-175">属性字典中的键是属性的名称。</span><span class="sxs-lookup"><span data-stu-id="d4a96-175">The keys in the dictionary of properties are the names of the properties.</span></span> <span data-ttu-id="d4a96-176">对象的类型为 <xref:System.ComponentModel.PropertyDescriptor> 。</span><span class="sxs-lookup"><span data-stu-id="d4a96-176">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="d4a96-177">立即调用此方法 <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A> 。</span><span class="sxs-lookup"><span data-stu-id="d4a96-177">This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d4a96-178">可以直接修改可通过参数访问的字典 <paramref name="properties" /> ，也可以将其保持不变。</span><span class="sxs-lookup"><span data-stu-id="d4a96-178">You can directly modify the dictionary that is accessible through the <paramref name="properties" /> parameter, or you can leave it unchanged.</span></span> <span data-ttu-id="d4a96-179">如果要重写此方法，请在执行您自己的筛选之前调用基实现。</span><span class="sxs-lookup"><span data-stu-id="d4a96-179">If you are overriding this method, call the base implementation before you perform your own filtering.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
  </Members>
</Type>
