<Type Name="IDesignerFilter" FullName="System.ComponentModel.Design.IDesignerFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4e27b543b8857294d2bea9c4c7819aab67d65d37" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89772161" /></Metadata><TypeSignature Language="C#" Value="public interface IDesignerFilter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerFilter" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IDesignerFilter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerFilter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerFilter" />
  <TypeSignature Language="F#" Value="type IDesignerFilter = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.ComponentModel.TypeConverter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Interfaces />
  <Docs>
    <summary>提供使设计器能够访问和筛选 <see cref="T:System.ComponentModel.TypeDescriptor" /> 字典的接口，它存储组件设计器可以向设计时环境公开的属性、特性和事件说明符。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.IDesignerFilter> 使设计器可以筛选其关联组件通过公开的属性、特性和事件说明符集 <xref:System.ComponentModel.TypeDescriptor> 。 此接口的名称以开头的方法 `Pre` 立即在名称以开头的方法之前调用 `Post` 。  
  
 如果要添加特性、事件或属性说明符，请使用 <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A> 、 <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A> 或 <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> 方法。  
  
 若要更改或删除属性、事件或属性描述符，请使用 <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A> 、 <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A> 或 <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A> 方法。  
  
   
  
## Examples  
 下面的示例演示在 <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> 设计时选择设计器的控件时，将设计器的属性添加到属性窗口的的重写。 <xref:System.Windows.Forms.Design.ControlDesigner>有关使用接口的完整设计器示例，请参阅类的示例 <xref:System.ComponentModel.Design.IDesignerFilter> 。  
  
 [!code-cpp[ControlDesignerExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlDesignerExample/CPP/controldesignerexample.cpp#2)]
 [!code-csharp[ControlDesignerExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlDesignerExample/CS/controldesignerexample.cs#2)]
 [!code-vb[ControlDesignerExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlDesignerExample/VB/controldesignerexample.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.ITypeDescriptorFilterService" />
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
  </Docs>
  <Members>
    <Member MemberName="PostFilterAttributes">
      <MemberSignature Language="C#" Value="public void PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">组件的类的 <see cref="T:System.Attribute" /> 对象。 特性字典中的关键字是特性的 <see cref="P:System.Attribute.TypeId" /> 值。</param>
        <summary>当在派生类中被重写后，允许设计器更改或移除它通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的特性集中的项。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法提供了一种方法，用于更改或移除属性字典中的项，实现此接口的设计器的关联组件通过公开这些特性 <xref:System.ComponentModel.TypeDescriptor> 。  
  
 属性字典中的键是属性的类型 Id。 对象的类型为 <xref:System.Attribute> 。 立即调用此方法 <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A> 。  
  
 特性的类型 ID 可以是任何对象。 默认情况下，将 <xref:System.Attribute> 其 <xref:System.Type> 作为其属性的值返回 <xref:System.Attribute.TypeId%2A> 。 您可以 <xref:System.Attribute.TypeId%2A> 在字典中检查属性的是否与已知的等效，以便对 <xref:System.Attribute.TypeId%2A> 属性进行标识，或使用 <xref:System.Reflection> 标识特性对象本身。  
  
 将与 <xref:System.Attribute.TypeId%2A> 现有或继承属性相同的属性添加到组件时，新属性将替换旧属性。 对于很多特性，相同类型的新属性将替换该类型的任何以前的特性。 但是，某些类型的属性返回 <xref:System.Attribute.TypeId%2A> 可有选择地区分该属性的。 例如，若要为某一类型（如和）提供不同类型的同时处于活动状态的设计器， <xref:System.ComponentModel.Design.IRootDesigner> <xref:System.ComponentModel.Design.IDesigner> 则 <xref:System.ComponentModel.DesignerAttribute> 类将返回一个 <xref:System.Attribute.TypeId%2A> ，它唯一标识特性和基设计器类型。 <xref:System.ComponentModel.DesignerAttribute>构造函数允许除了特定类型外，还指定设计器的基设计器类型，并 <xref:System.ComponentModel.DesignerAttribute> 返回一个 <xref:System.Attribute.TypeId%2A> 反映此的。 因此，当 <xref:System.ComponentModel.DesignerAttribute> 使用与现有的基设计器类型相同的类型的基本设计器类型添加新的时 <xref:System.ComponentModel.DesignerAttribute> ，旧属性将替换为新的属性。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>可以直接筛选可通过参数访问的字典 <paramref name="attributes" /> ，也可以将其保持不变。 如果要重写此方法，请在执行您自己的筛选后调用基实现。</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterEvents">
      <MemberSignature Language="C#" Value="public void PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterEvents events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events"><see cref="T:System.ComponentModel.EventDescriptor" /> 对象，它表示组件的类的事件。 事件字典中的关键字是事件名。</param>
        <summary>当在派生类中重写后，允许设计器更改或移除它通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的事件集中的项。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法提供了一种方法，用于在通过公开的事件字典中更改或移除项 <xref:System.ComponentModel.TypeDescriptor> 。  
  
 事件字典中的键是事件的名称。 对象的类型为 <xref:System.ComponentModel.EventDescriptor> 。 立即调用此方法 <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A> 。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>可以直接筛选可通过参数访问的字典 <paramref name="events" /> ，也可以将其保持不变。 如果要重写此方法，请在执行您自己的筛选后调用基实现。</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterProperties">
      <MemberSignature Language="C#" Value="public void PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties"><see cref="T:System.ComponentModel.PropertyDescriptor" /> 对象，它表示组件的类的属性。 属性字典中的关键字是属性名。</param>
        <summary>当在派生类中重写后，允许设计器更改或移除它通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的属性集中的项。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法提供了一种方法，用于更改或移除通过公开的属性字典中的项 <xref:System.ComponentModel.TypeDescriptor> 。  
  
 属性字典中的键是属性的名称。 对象的类型为 <xref:System.ComponentModel.PropertyDescriptor> 。 立即调用此方法 <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> 。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>可以直接筛选可通过参数访问的字典 <paramref name="properties" /> ，也可以将其保持不变。 如果要重写此方法，请在执行您自己的筛选后调用基实现。</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterAttributes">
      <MemberSignature Language="C#" Value="public void PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">组件的类的 <see cref="T:System.Attribute" /> 对象。 特性字典中的关键字是特性的 <see cref="P:System.Attribute.TypeId" /> 值。</param>
        <summary>当在派生类中被重写时，允许设计器将项添加到它通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的特性集中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法提供了一种方法，可将项添加到特性的字典中，实现此接口的设计器的关联组件通过公开 <xref:System.ComponentModel.TypeDescriptor> 。  
  
 属性字典中的键是属性的类型 Id。 对象的类型为 <xref:System.Attribute> 。 立即调用此方法 <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A> 。  
  
 特性的类型 ID 可以是任何对象。 默认情况下，将 <xref:System.Attribute> 其 <xref:System.Type> 作为其属性的值返回 <xref:System.Attribute.TypeId%2A> 。 您可以 <xref:System.Attribute.TypeId%2A> 在字典中检查属性的是否与已知的等效，以便对 <xref:System.Attribute.TypeId%2A> 属性进行标识，或使用 <xref:System.Reflection> 标识特性对象本身。  
  
 将与 <xref:System.Attribute.TypeId%2A> 现有或继承属性相同的属性添加到组件时，新属性将替换旧属性。 对于很多特性，相同类型的新属性将替换该类型的任何以前的特性。 但是，某些类型的属性返回 <xref:System.Attribute.TypeId%2A> 可有选择地区分该属性的。 例如，若要为某一类型（如和）提供不同类型的同时处于活动状态的设计器， <xref:System.ComponentModel.Design.IRootDesigner> <xref:System.ComponentModel.Design.IDesigner> 则 <xref:System.ComponentModel.DesignerAttribute> 类将返回一个 <xref:System.Attribute.TypeId%2A> ，它唯一标识特性和基设计器类型。 <xref:System.ComponentModel.DesignerAttribute>构造函数允许除了特定类型外，还指定设计器的基设计器类型，并 <xref:System.ComponentModel.DesignerAttribute> 返回一个 <xref:System.Attribute.TypeId%2A> 反映此的。 因此，当 <xref:System.ComponentModel.DesignerAttribute> 使用与现有的基设计器类型相同的类型的基本设计器类型添加新的时 <xref:System.ComponentModel.DesignerAttribute> ，旧属性将替换为新的属性。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>可以直接筛选可通过参数访问的字典 <paramref name="attributes" /> ，也可以将其保持不变。 如果要重写此方法，请在执行您自己的筛选后调用基实现。</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterEvents">
      <MemberSignature Language="C#" Value="public void PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterEvents events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events"><see cref="T:System.ComponentModel.EventDescriptor" /> 对象，它表示组件的类的事件。 事件字典中的关键字是事件名。</param>
        <summary>当在派生类中被重写时，允许设计器将项添加到它通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的事件集中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法提供了一种方法，用于向设计器通过公开的事件字典添加项 <xref:System.ComponentModel.TypeDescriptor> 。  
  
 事件字典中的键是事件的名称。 对象的类型为 <xref:System.ComponentModel.EventDescriptor> 。 立即调用此方法 <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A> 。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>可以直接修改可通过参数访问的字典 <paramref name="events" /> ，也可以将其保持不变。 如果要重写此方法，请在执行您自己的筛选之前调用基实现。</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="public void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties"><see cref="T:System.ComponentModel.PropertyDescriptor" /> 对象，它表示组件的类的属性。 属性字典中的关键字是属性名。</param>
        <summary>当在派生类中被重写时，允许设计器将项添加到它通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的属性集中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法提供了一种方法，用于向设计器通过公开的属性字典添加项 <xref:System.ComponentModel.TypeDescriptor> 。  
  
 属性字典中的键是属性的名称。 对象的类型为 <xref:System.ComponentModel.PropertyDescriptor> 。 立即调用此方法 <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A> 。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>可以直接修改可通过参数访问的字典 <paramref name="properties" /> ，也可以将其保持不变。 如果要重写此方法，请在执行您自己的筛选之前调用基实现。</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
  </Members>
</Type>
