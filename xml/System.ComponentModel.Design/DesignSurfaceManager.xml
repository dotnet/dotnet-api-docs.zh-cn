<Type Name="DesignSurfaceManager" FullName="System.ComponentModel.Design.DesignSurfaceManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="be264781c61cdfa959a70567d2e63197939e83d6" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86734667" /></Metadata><TypeSignature Language="C#" Value="public class DesignSurfaceManager : IDisposable, IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DesignSurfaceManager extends System.Object implements class System.IDisposable, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.DesignSurfaceManager" />
  <TypeSignature Language="VB.NET" Value="Public Class DesignSurfaceManager&#xA;Implements IDisposable, IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignSurfaceManager : IDisposable, IServiceProvider" />
  <TypeSignature Language="F#" Value="type DesignSurfaceManager = class&#xA;    interface IServiceProvider&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Design" FromVersion="5.0.0.0" To="System.Windows.Forms.Design" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1c743-101">管理 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="1c743-101">Manages a collection of <see cref="T:System.ComponentModel.Design.DesignSurface" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c743-102"><xref:System.ComponentModel.Design.DesignSurfaceManager>类设计为对象的容器 <xref:System.ComponentModel.Design.DesignSurface> 。</span><span class="sxs-lookup"><span data-stu-id="1c743-102">The <xref:System.ComponentModel.Design.DesignSurfaceManager> class is designed to be a container of <xref:System.ComponentModel.Design.DesignSurface> objects.</span></span> <span data-ttu-id="1c743-103">它提供处理设计器、属性窗口和其他全局对象之间的事件路由的通用服务。</span><span class="sxs-lookup"><span data-stu-id="1c743-103">It provides common services that handle event routing between designers, property windows, and other global objects.</span></span> <span data-ttu-id="1c743-104">使用 <xref:System.ComponentModel.Design.DesignSurfaceManager> 是可选的，但如果您希望拥有多个设计器窗口，则建议使用。</span><span class="sxs-lookup"><span data-stu-id="1c743-104">Using <xref:System.ComponentModel.Design.DesignSurfaceManager> is optional, but it is recommended if you intend to have several designer windows.</span></span>  
  
 <span data-ttu-id="1c743-105"><xref:System.ComponentModel.Design.DesignSurfaceManager>类自动提供若干设计时服务。</span><span class="sxs-lookup"><span data-stu-id="1c743-105">The <xref:System.ComponentModel.Design.DesignSurfaceManager> class provides several design-time services automatically.</span></span> <span data-ttu-id="1c743-106">可以通过将这些服务替换为受保护的属性来重写每个服务 <xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A> 。</span><span class="sxs-lookup"><span data-stu-id="1c743-106">You can override each of these services by replacing them in the protected <xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A> property.</span></span> <span data-ttu-id="1c743-107">若要替换服务，请重写构造函数、调用基，并通过 protected 属性进行任何更改 <xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A> 。</span><span class="sxs-lookup"><span data-stu-id="1c743-107">To replace a service, override the constructor, call base, and make any changes through the protected <xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A> property.</span></span> <span data-ttu-id="1c743-108"><xref:System.IDisposable>当处理设计图面管理器时，将释放添加到服务容器中并实现接口的所有服务。</span><span class="sxs-lookup"><span data-stu-id="1c743-108">All services added to the service container that implement the <xref:System.IDisposable> interface are disposed when the design surface manager is disposed.</span></span> <span data-ttu-id="1c743-109"><xref:System.ComponentModel.Design.DesignSurfaceManager>类将 <xref:System.ComponentModel.Design.IDesignerEventService> 接口作为默认服务提供。</span><span class="sxs-lookup"><span data-stu-id="1c743-109">The <xref:System.ComponentModel.Design.DesignSurfaceManager> class provides the <xref:System.ComponentModel.Design.IDesignerEventService> interface as the default service.</span></span> <span data-ttu-id="1c743-110"><xref:System.ComponentModel.Design.IDesignerEventService> 为设计器事件提供全局事件处理机制。</span><span class="sxs-lookup"><span data-stu-id="1c743-110"><xref:System.ComponentModel.Design.IDesignerEventService> provides a global eventing mechanism for designer events.</span></span> <span data-ttu-id="1c743-111">利用这种机制，在设计器变为活动状态时，应用程序会得到通知。</span><span class="sxs-lookup"><span data-stu-id="1c743-111">With this mechanism, an application is informed when a designer becomes active.</span></span> <span data-ttu-id="1c743-112">该服务提供设计器集合和单个位置，全局对象（如属性窗口）可监视选择更改事件。</span><span class="sxs-lookup"><span data-stu-id="1c743-112">The service provides a collection of designers and a single place where global objects, such as the Properties window, can monitor selection change events.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerEventService" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.IServiceProvider" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1c743-113">初始化 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1c743-113">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurfaceManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurfaceManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1c743-114">初始化 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1c743-114">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurfaceManager (IServiceProvider parentProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider parentProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parentProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurfaceManager(IServiceProvider ^ parentProvider);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.DesignSurfaceManager : IServiceProvider -&gt; System.ComponentModel.Design.DesignSurfaceManager" Usage="new System.ComponentModel.Design.DesignSurfaceManager parentProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parentProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="parentProvider"><span data-ttu-id="1c743-115">父服务提供程序。</span><span class="sxs-lookup"><span data-stu-id="1c743-115">A parent service provider.</span></span> <span data-ttu-id="1c743-116">如果设计图面管理器无法解析服务请求，则将它们转发到此提供程序。</span><span class="sxs-lookup"><span data-stu-id="1c743-116">Service requests are forwarded to this provider if they cannot be resolved by the design surface manager.</span></span></param>
        <summary><span data-ttu-id="1c743-117">初始化 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1c743-117">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="ActiveDesignSurface">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.DesignSurface ActiveDesignSurface { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignSurface ActiveDesignSurface" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ActiveDesignSurface As DesignSurface" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Design::DesignSurface ^ ActiveDesignSurface { System::ComponentModel::Design::DesignSurface ^ get(); void set(System::ComponentModel::Design::DesignSurface ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ActiveDesignSurface : System.ComponentModel.Design.DesignSurface with get, set" Usage="System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurface</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1c743-118">获取或设置活动设计器。</span><span class="sxs-lookup"><span data-stu-id="1c743-118">Gets or sets the active designer.</span></span></summary>
        <value><span data-ttu-id="1c743-119">活动设计器。</span><span class="sxs-lookup"><span data-stu-id="1c743-119">The active designer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c743-120"><xref:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface%2A>每当设计器成为活动窗口时，设计器的用户界面都应该设置属性。</span><span class="sxs-lookup"><span data-stu-id="1c743-120">The <xref:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface%2A> property should be set by the designer's user interface whenever a designer becomes the active window.</span></span> <span data-ttu-id="1c743-121">此属性的默认实现与接口的默认实现一起使用， <xref:System.ComponentModel.Design.IDesignerEventService> 通知感兴趣方现在新设计器已处于活动状态。</span><span class="sxs-lookup"><span data-stu-id="1c743-121">The default implementation of this property works with the default implementation of the <xref:System.ComponentModel.Design.IDesignerEventService> interface to notify interested parties that a new designer is now active.</span></span> <span data-ttu-id="1c743-122">如果您提供自己的实现 <xref:System.ComponentModel.Design.IDesignerEventService> ，则应重写此属性以适当地通知您的服务。</span><span class="sxs-lookup"><span data-stu-id="1c743-122">If you provide your own implementation of <xref:System.ComponentModel.Design.IDesignerEventService>, you should override this property to notify your service appropriately.</span></span> <span data-ttu-id="1c743-123">此属性可设置为 `null` ，指示没有任何设计器处于活动状态。</span><span class="sxs-lookup"><span data-stu-id="1c743-123">This property can be set to `null`, indicating that no designer is active.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveDesignSurfaceChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler ActiveDesignSurfaceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler ActiveDesignSurfaceChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ActiveDesignSurfaceChanged As ActiveDesignSurfaceChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::ActiveDesignSurfaceChangedEventHandler ^ ActiveDesignSurfaceChanged;" />
      <MemberSignature Language="F#" Value="member this.ActiveDesignSurfaceChanged : System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler " Usage="member this.ActiveDesignSurfaceChanged : System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1c743-124">在当前处于活动状态的设计器更改时发生。</span><span class="sxs-lookup"><span data-stu-id="1c743-124">Occurs when the currently active designer changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateDesignSurface">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1c743-125">创建设计图面的实例。</span><span class="sxs-lookup"><span data-stu-id="1c743-125">Creates an instance of a design surface.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateDesignSurface">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignSurface CreateDesignSurface ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Design.DesignSurface CreateDesignSurface() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDesignSurface () As DesignSurface" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::DesignSurface ^ CreateDesignSurface();" />
      <MemberSignature Language="F#" Value="member this.CreateDesignSurface : unit -&gt; System.ComponentModel.Design.DesignSurface" Usage="designSurfaceManager.CreateDesignSurface " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurface</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1c743-126">创建设计图面的实例。</span><span class="sxs-lookup"><span data-stu-id="1c743-126">Creates an instance of a design surface.</span></span></summary>
        <returns><span data-ttu-id="1c743-127">新的设计图面实例。</span><span class="sxs-lookup"><span data-stu-id="1c743-127">A new design surface instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerEventService" />
      </Docs>
    </Member>
    <Member MemberName="CreateDesignSurface">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignSurface CreateDesignSurface (IServiceProvider parentProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Design.DesignSurface CreateDesignSurface(class System.IServiceProvider parentProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDesignSurface (parentProvider As IServiceProvider) As DesignSurface" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::DesignSurface ^ CreateDesignSurface(IServiceProvider ^ parentProvider);" />
      <MemberSignature Language="F#" Value="member this.CreateDesignSurface : IServiceProvider -&gt; System.ComponentModel.Design.DesignSurface" Usage="designSurfaceManager.CreateDesignSurface parentProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="parentProvider"><span data-ttu-id="1c743-128">父服务提供程序。</span><span class="sxs-lookup"><span data-stu-id="1c743-128">A parent service provider.</span></span> <span data-ttu-id="1c743-129">将创建一个新的合并服务提供程序，它将首先向此提供程序请求一个服务，然后将任何失败委托给设计图面管理器对象。</span><span class="sxs-lookup"><span data-stu-id="1c743-129">A new merged service provider will be created that will first ask this provider for a service, and then delegate any failures to the design surface manager object.</span></span> <span data-ttu-id="1c743-130">此合并提供程序将被传递到 <see cref="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)" /> 方法中。</span><span class="sxs-lookup"><span data-stu-id="1c743-130">This merged provider will be passed into the <see cref="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)" /> method.</span></span></param>
        <summary><span data-ttu-id="1c743-131">创建设计图面的实例。</span><span class="sxs-lookup"><span data-stu-id="1c743-131">Creates an instance of a design surface.</span></span></summary>
        <returns><span data-ttu-id="1c743-132">新的设计图面实例。</span><span class="sxs-lookup"><span data-stu-id="1c743-132">A new design surface instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c743-133">如果要方便地添加其他每个设计器服务，请使用 `parentProvider` 参数为此设计图面提供服务提供程序。</span><span class="sxs-lookup"><span data-stu-id="1c743-133">If you want to conveniently add additional per-designer services, use the `parentProvider` parameter to provide a service provider for this design surface.</span></span> <span data-ttu-id="1c743-134"><xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A>方法创建一个合并服务提供程序，该提供程序可满足来自给定服务提供程序和自身的服务请求 <xref:System.ComponentModel.Design.DesignSurfaceManager> 。</span><span class="sxs-lookup"><span data-stu-id="1c743-134">The <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> method creates a merged service provider that can satisfy service requests from both the given service provider as well as the <xref:System.ComponentModel.Design.DesignSurfaceManager> itself.</span></span> <span data-ttu-id="1c743-135"><xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A>然后，方法将此服务提供程序传递给 <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1c743-135">The <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> method then passes this service provider into the <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> method.</span></span>  
  
 <span data-ttu-id="1c743-136">在 <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> 返回设计图面后，该 <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> 方法将尝试获取 <xref:System.ComponentModel.Design.IDesignerEventService> 。</span><span class="sxs-lookup"><span data-stu-id="1c743-136">After <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> returns the design surface, the <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> method tries to obtain the <xref:System.ComponentModel.Design.IDesignerEventService>.</span></span> <span data-ttu-id="1c743-137">如果它存在，并且它是默认提供的服务的实例 <xref:System.ComponentModel.Design.DesignSurfaceManager> ，则该 <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> 方法引发 <xref:System.ComponentModel.Design.IDesignerEventService.DesignerCreated> 事件。</span><span class="sxs-lookup"><span data-stu-id="1c743-137">If it is present, and if it is the instance of the service that <xref:System.ComponentModel.Design.DesignSurfaceManager> provided by default, the <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> method raises the <xref:System.ComponentModel.Design.IDesignerEventService.DesignerCreated> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1c743-138"><paramref name="parentProvider" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1c743-138"><paramref name="parentProvider" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="1c743-139">如果提供了服务的外部实现，则从类派生的类负责 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 引发 <see cref="E:System.ComponentModel.Design.IDesignerEventService.DesignerCreated" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="1c743-139">If an external implementation of the service was provided, it is the responsibility of the class that derives from the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class to raise the <see cref="E:System.ComponentModel.Design.IDesignerEventService.DesignerCreated" /> event.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerEventService" />
      </Docs>
    </Member>
    <Member MemberName="CreateDesignSurfaceCore">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.Design.DesignSurface CreateDesignSurfaceCore (IServiceProvider parentProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ComponentModel.Design.DesignSurface CreateDesignSurfaceCore(class System.IServiceProvider parentProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDesignSurfaceCore (parentProvider As IServiceProvider) As DesignSurface" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ComponentModel::Design::DesignSurface ^ CreateDesignSurfaceCore(IServiceProvider ^ parentProvider);" />
      <MemberSignature Language="F#" Value="abstract member CreateDesignSurfaceCore : IServiceProvider -&gt; System.ComponentModel.Design.DesignSurface&#xA;override this.CreateDesignSurfaceCore : IServiceProvider -&gt; System.ComponentModel.Design.DesignSurface" Usage="designSurfaceManager.CreateDesignSurfaceCore parentProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="parentProvider"><span data-ttu-id="1c743-140">传递给设计图面的服务提供程序。</span><span class="sxs-lookup"><span data-stu-id="1c743-140">A service provider to pass to the design surface.</span></span> <span data-ttu-id="1c743-141">它既可以是 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 的实例，也可以是实现 <see cref="T:System.IServiceProvider" /> 的对象，表示 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 类的服务提供程序与外部传递的提供程序之间的合并。</span><span class="sxs-lookup"><span data-stu-id="1c743-141">This is either an instance of <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> or an object that implements <see cref="T:System.IServiceProvider" />, and represents a merge between the service provider of the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class and an externally passed provider.</span></span></param>
        <summary><span data-ttu-id="1c743-142">可创建设计图面的实现。</span><span class="sxs-lookup"><span data-stu-id="1c743-142">Implementation that creates the design surface.</span></span></summary>
        <returns><span data-ttu-id="1c743-143">新的设计图面实例。</span><span class="sxs-lookup"><span data-stu-id="1c743-143">A new design surface instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c743-144"><xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A>这两种方法都调用方法 <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> 。</span><span class="sxs-lookup"><span data-stu-id="1c743-144">The <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> method is called by both <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> methods.</span></span> <span data-ttu-id="1c743-145">它是实际创建设计图面的实现。</span><span class="sxs-lookup"><span data-stu-id="1c743-145">It is the implementation that actually creates the design surface.</span></span> <span data-ttu-id="1c743-146">默认实现只返回一个新的 <xref:System.ComponentModel.Design.DesignSurface> 。</span><span class="sxs-lookup"><span data-stu-id="1c743-146">The default implementation just returns a new <xref:System.ComponentModel.Design.DesignSurface>.</span></span> <span data-ttu-id="1c743-147">您可以重写此方法以提供从类派生的自定义对象 <xref:System.ComponentModel.Design.DesignSurface> 。</span><span class="sxs-lookup"><span data-stu-id="1c743-147">You may override this method to provide a custom object that derives from the <xref:System.ComponentModel.Design.DesignSurface> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="DesignSurfaceCreated">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.Design.DesignSurfaceEventHandler DesignSurfaceCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.DesignSurfaceEventHandler DesignSurfaceCreated" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DesignSurfaceCreated As DesignSurfaceEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::DesignSurfaceEventHandler ^ DesignSurfaceCreated;" />
      <MemberSignature Language="F#" Value="member this.DesignSurfaceCreated : System.ComponentModel.Design.DesignSurfaceEventHandler " Usage="member this.DesignSurfaceCreated : System.ComponentModel.Design.DesignSurfaceEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurfaceEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1c743-148">在创建设计器时发生。</span><span class="sxs-lookup"><span data-stu-id="1c743-148">Occurs when a designer is created.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignSurfaceDisposed">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.Design.DesignSurfaceEventHandler DesignSurfaceDisposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.DesignSurfaceEventHandler DesignSurfaceDisposed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DesignSurfaceDisposed As DesignSurfaceEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::DesignSurfaceEventHandler ^ DesignSurfaceDisposed;" />
      <MemberSignature Language="F#" Value="member this.DesignSurfaceDisposed : System.ComponentModel.Design.DesignSurfaceEventHandler " Usage="member this.DesignSurfaceDisposed : System.ComponentModel.Design.DesignSurfaceEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurfaceEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1c743-149">在释放设计器时发生。</span><span class="sxs-lookup"><span data-stu-id="1c743-149">Occurs when a designer is disposed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignSurfaces">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignSurfaceCollection DesignSurfaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignSurfaceCollection DesignSurfaces" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DesignSurfaces As DesignSurfaceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Design::DesignSurfaceCollection ^ DesignSurfaces { System::ComponentModel::Design::DesignSurfaceCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DesignSurfaces : System.ComponentModel.Design.DesignSurfaceCollection" Usage="System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurfaceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1c743-150">获取设计图面的集合。</span><span class="sxs-lookup"><span data-stu-id="1c743-150">Gets a collection of design surfaces.</span></span></summary>
        <value><span data-ttu-id="1c743-151">当前由设计图面管理器承载的设计图面的集合。</span><span class="sxs-lookup"><span data-stu-id="1c743-151">A collection of design surfaces that are currently hosted by the design surface manager.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c743-152"><xref:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces%2A>属性是直接在之上实现的 <xref:System.ComponentModel.Design.IDesignerEventService> ，因此，如果您提供该服务的自己的实现，则此属性将使用您的实现。</span><span class="sxs-lookup"><span data-stu-id="1c743-152">The <xref:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces%2A> property is implemented directly on top of <xref:System.ComponentModel.Design.IDesignerEventService>, so if you provide your own implementation of that service, this property uses your implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerEventService" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1c743-153">释放由 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 占用的资源。</span><span class="sxs-lookup"><span data-stu-id="1c743-153">Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="designSurfaceManager.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1c743-154">释放由 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 占用的资源。</span><span class="sxs-lookup"><span data-stu-id="1c743-154">Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c743-155">公共 <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A> 方法遵循标准 <xref:System.IDisposable> 模式。</span><span class="sxs-lookup"><span data-stu-id="1c743-155">The public <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A> method follows the standard <xref:System.IDisposable> pattern.</span></span> <span data-ttu-id="1c743-156">调用此方法会销毁设计图面管理器。</span><span class="sxs-lookup"><span data-stu-id="1c743-156">Calling this method destroys the design surface manager.</span></span> <span data-ttu-id="1c743-157">它还会释放服务容器，使实现的所有服务 <xref:System.IDisposable> 也被释放。</span><span class="sxs-lookup"><span data-stu-id="1c743-157">It also disposes the service container, which causes all services that implement <xref:System.IDisposable> to also be disposed.</span></span> <span data-ttu-id="1c743-158">此方法的受保护版本为 `virtual` ，并遵循正常 <xref:System.IDisposable> 模式。</span><span class="sxs-lookup"><span data-stu-id="1c743-158">The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1c743-159">由于没有 <xref:System.ComponentModel.Design.DesignSurfaceManager> 要清理的本机代码，因此它没有调用的终结器 <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A> 。</span><span class="sxs-lookup"><span data-stu-id="1c743-159">Because <xref:System.ComponentModel.Design.DesignSurfaceManager> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>.</span></span> <span data-ttu-id="1c743-160">如果需要调用 <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A> ，则必须自行添加终结器。</span><span class="sxs-lookup"><span data-stu-id="1c743-160">If you need to call <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>, you must add a finalizer yourself.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="designSurfaceManager.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="1c743-161">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1c743-161"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="1c743-162">释放由 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 占用的非托管资源，还可以另外再释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="1c743-162">Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c743-163">公共 <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A> 方法遵循标准 <xref:System.IDisposable> 模式。</span><span class="sxs-lookup"><span data-stu-id="1c743-163">The public <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A> method follows the standard <xref:System.IDisposable> pattern.</span></span> <span data-ttu-id="1c743-164">调用此方法会销毁设计图面管理器。</span><span class="sxs-lookup"><span data-stu-id="1c743-164">Calling this method destroys the design surface manager.</span></span> <span data-ttu-id="1c743-165">它还会释放服务容器，使实现的所有服务 <xref:System.IDisposable> 也被释放。</span><span class="sxs-lookup"><span data-stu-id="1c743-165">It also disposes the service container, which causes all services that implement <xref:System.IDisposable> to also be disposed.</span></span> <span data-ttu-id="1c743-166">此方法的受保护版本为 `virtual` ，并遵循正常 <xref:System.IDisposable> 模式。</span><span class="sxs-lookup"><span data-stu-id="1c743-166">The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1c743-167">由于没有 <xref:System.ComponentModel.Design.DesignSurfaceManager> 要清理的本机代码，因此它没有调用的终结器 <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A> 。</span><span class="sxs-lookup"><span data-stu-id="1c743-167">Because <xref:System.ComponentModel.Design.DesignSurfaceManager> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>.</span></span> <span data-ttu-id="1c743-168">如果需要调用 <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A> ，则必须自行添加终结器。</span><span class="sxs-lookup"><span data-stu-id="1c743-168">If you need to call <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>, you must add a finalizer yourself.</span></span>  
  
 <span data-ttu-id="1c743-169">此方法由公共 `Dispose()` 方法和 <xref:System.Object.Finalize%2A> 方法调用。</span><span class="sxs-lookup"><span data-stu-id="1c743-169">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="1c743-170">`Dispose()` 调用受保护的 `Dispose(Boolean)` 方法，并将 `disposing` 参数设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="1c743-170">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="1c743-171"><xref:System.Object.Finalize%2A>`Dispose`在设置为的情况调用 `disposing` `false` 。</span><span class="sxs-lookup"><span data-stu-id="1c743-171"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="1c743-172">当 `disposing` 参数为 true 时，此方法释放该引用的任何托管对象所持有的所有资源 <xref:System.ComponentModel.Design.DesignSurfaceManager> 。</span><span class="sxs-lookup"><span data-stu-id="1c743-172">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.DesignSurfaceManager> references.</span></span> <span data-ttu-id="1c743-173">此方法将调用每个被引用对象的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="1c743-173">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1c743-174">
            <see langword="Dispose" /> 可以由其他对象多次调用。</span><span class="sxs-lookup"><span data-stu-id="1c743-174">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="1c743-175">当重写时， <see langword="Dispose(Boolean)" /> 请注意不要引用先前在调用时已释放的对象 <see langword="Dispose" /> 。</span><span class="sxs-lookup"><span data-stu-id="1c743-175">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="1c743-176">有关如何实现的详细信息 <see langword="Dispose(Boolean)" /> ，请参阅 [实现 Dispose 方法](/dotnet/standard/garbage-collection/implementing-dispose)。</span><span class="sxs-lookup"><span data-stu-id="1c743-176">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](/dotnet/standard/garbage-collection/implementing-dispose).</span></span>  
  
<span data-ttu-id="1c743-177">有关和的详细 <see langword="Dispose" /> 信息 <see cref="M:System.Object.Finalize" /> ，请参阅 [清理非托管资源](/dotnet/standard/garbage-collection/unmanaged) 和 [重写 Finalize 方法](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="1c743-177">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](/dotnet/standard/garbage-collection/unmanaged) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj&#xA;override this.GetService : Type -&gt; obj" Usage="designSurfaceManager.GetService serviceType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IServiceProvider.GetService(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="1c743-178">要检索的服务类型。</span><span class="sxs-lookup"><span data-stu-id="1c743-178">The service type to retrieve.</span></span></param>
        <summary><span data-ttu-id="1c743-179">获取设计图面管理器的服务容器中的服务。</span><span class="sxs-lookup"><span data-stu-id="1c743-179">Gets a service in the design surface manager's service container.</span></span></summary>
        <returns><span data-ttu-id="1c743-180">实现给定服务类型或作为其派生类的对象；否则，如果服务容器中不存在该服务，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1c743-180">An object that implements, or is a derived class of, the given service type; otherwise, <see langword="null" /> if the service does not exist in the service container.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c743-181"><xref:System.ComponentModel.Design.DesignSurfaceManager.GetService%2A>方法转发到在构造时提供给设计图面管理器的任何服务提供程序。</span><span class="sxs-lookup"><span data-stu-id="1c743-181">The <xref:System.ComponentModel.Design.DesignSurfaceManager.GetService%2A> method forwards to any service provider that was given to the design surface manager at construction time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectionChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectionChanged : EventHandler " Usage="member this.SelectionChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1c743-182">在全局选择更改时发生。</span><span class="sxs-lookup"><span data-stu-id="1c743-182">Occurs when the global selection changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c743-183">当活动设计器的组件集选择发生更改时，将引发此事件。</span><span class="sxs-lookup"><span data-stu-id="1c743-183">This event is raised when the active designer's selection of component set changes.</span></span> <span data-ttu-id="1c743-184">这是通过接口映射的 <xref:System.ComponentModel.Design.IDesignerEventService> 。</span><span class="sxs-lookup"><span data-stu-id="1c743-184">This is mapped through the <xref:System.ComponentModel.Design.IDesignerEventService> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceContainer">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.ServiceContainer ServiceContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.ServiceContainer ServiceContainer" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ServiceContainer As ServiceContainer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::Design::ServiceContainer ^ ServiceContainer { System::ComponentModel::Design::ServiceContainer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceContainer : System.ComponentModel.Design.ServiceContainer" Usage="System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ServiceContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1c743-185">获取设计图面管理器的 <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />。</span><span class="sxs-lookup"><span data-stu-id="1c743-185">Gets the design surface manager's <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />.</span></span></summary>
        <value><span data-ttu-id="1c743-186">设计图面管理器的 <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />。</span><span class="sxs-lookup"><span data-stu-id="1c743-186">The design surface manager's <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />.</span></span></value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1c743-187">从类继承的类 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 可以使用此属性来添加和删除服务。</span><span class="sxs-lookup"><span data-stu-id="1c743-187">Classes inheriting from the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class can use this property to add and remove services.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>
