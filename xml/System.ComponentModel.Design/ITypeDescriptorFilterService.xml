<Type Name="ITypeDescriptorFilterService" FullName="System.ComponentModel.Design.ITypeDescriptorFilterService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9901e39ffc90dcca7d8a9e308da17913bb629315" /><Meta Name="ms.sourcegitcommit" Value="a40c6a601bd45917c35e255d860c96b8b3853a79" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/05/2021" /><Meta Name="ms.locfileid" Value="97890564" /></Metadata><TypeSignature Language="C#" Value="public interface ITypeDescriptorFilterService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypeDescriptorFilterService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ITypeDescriptorFilterService" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITypeDescriptorFilterService" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITypeDescriptorFilterService" />
  <TypeSignature Language="F#" Value="type ITypeDescriptorFilterService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.ComponentModel.TypeConverter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Interfaces />
  <Docs>
    <summary>提供在设计模式下修改组件的成员描述符集的接口。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.ITypeDescriptorFilterService>接口提供了一个接口，该接口允许在设计时修改组件的属性、事件和类级别属性。 此修改通过组件通过提供的一组描述符进行 <xref:System.ComponentModel.TypeDescriptor> 。 类型描述符将在组件的站点中查询服务， <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> 如果它存在，则类型描述符会将它收集到的所有元数据传递到此服务。 然后，该服务可通过添加、删除和更改组件的现有特性来修改元数据。  
  
 例如，可以通过调用方法修改组件的属性 <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> 。 筛选器服务获取一个字典，其中包含类型的属性名称及其属性说明符 <xref:System.ComponentModel.PropertyDescriptor> 。 使用以下逻辑实现修改。  
  
|修改|实现|  
|------------------|--------------------|  
|删除|删除字典中的相应条目。|  
|加法|将相应的项添加到字典中。|  
|更改|调用现有的属性描述符方法，替换关联的属性描述符条目，或者替换字典中的整个属性键/值对。|  
  
 的返回值 <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> 确定此属性集是否是固定的。 如果此方法返回 `true` ，则 <xref:System.ComponentModel.TypeDescriptor> 此组件的可以缓存结果。 在对组件进行垃圾回收或调用类型描述符的方法之前，将保留此缓存 <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> 。  
  
   
  
## Examples  
 下面的代码示例演示一个设计器，该设计器使用 <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> 来筛选任何新的或现有的特性集合 <xref:System.Windows.Forms.Button> ，以便在加载或重新加载该按钮的设计器之前为新设计器添加设计器特性。  
  
 若要使用此示例，请将代码添加到 Windows 窗体项目，然后将类库中的组件加载到工具箱。  
  
 另请参阅 [演练：用自定义组件自动填充工具箱](/dotnet/desktop/winforms/controls/walkthrough-automatically-populating-the-toolbox-with-custom-components)。  
  
 向窗体中添加一些按钮。 将添加 `ButtonDesignerFilterComponent` 到窗体中，它将显示在组件栏中。 `ButtonDesignerFilterComponent`将添加 `ButtonDesignerFilterService` <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> 作为设计模式服务提供程序实现的。 窗体上的现有或新的 <xref:System.Windows.Forms.Button> 对象将在将 `ButtonDesignerFilterService` 每个现有和新按钮的设计器替换为后开始颜色重启 `ColorCycleButtonDesigner` 。 当将鼠标指针移到按钮上时，按钮会变成颜色循环，并可继续循环或重置事件的背景色和前景色 `MouseLeave` 。 将为新 <xref:System.Windows.Forms.Button> 对象提供 `ColorCycleButtonDesigner` 已加载的的 <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes%2A> 方法 `ButtonDesignerFilterService` ，直到 `ButtonDesignerFilterComponent` 释放并替换原始 <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> 。 `ColorCycleButton`此示例中的类是 <xref:System.Windows.Forms.Button> 与关联的 `ColorCycleButtonDesigner` 。  
  
 [!code-cpp[ITypeDescriptorFilterService#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ITypeDescriptorFilterService/CPP/source.cpp#1)]
 [!code-csharp[ITypeDescriptorFilterService#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ITypeDescriptorFilterService/CS/source.cs#1)]
 [!code-vb[ITypeDescriptorFilterService#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ITypeDescriptorFilterService/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>若要筛选由公开的成员说明符 <see cref="T:System.ComponentModel.TypeDescriptor" /> ，请在组件上实现此接口，并重 <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" /> 写 <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" /> 此类的、或 <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" /> 方法，以分别筛选特性、事件或属性。</para></block>
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
    <altmember cref="T:System.ComponentModel.EventDescriptor" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.Collections.IDictionary" />
  </Docs>
  <Members>
    <Member MemberName="FilterAttributes">
      <MemberSignature Language="C#" Value="public bool FilterAttributes (System.ComponentModel.IComponent component, System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterAttributes(class System.ComponentModel.IComponent component, class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterAttributes (component As IComponent, attributes As IDictionary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterAttributes(System::ComponentModel::IComponent ^ component, System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member FilterAttributes : System.ComponentModel.IComponent * System.Collections.IDictionary -&gt; bool" Usage="iTypeDescriptorFilterService.FilterAttributes (component, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component">要筛选其属性的组件。</param>
        <param name="attributes">可修改的属性字典。</param>
        <summary>筛选组件通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的特性。</summary>
        <returns>如果将缓存经过筛选的特性集，则为 <see langword="true" />；如果筛选服务必须再次查询，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当用户请求组件的一组属性时，将调用此方法。 这些特性将添加到字典中，其中特性的 <xref:System.Attribute.TypeId%2A> 作为键，实际特性作为值。 此服务的实施者可以在字典中添加、删除或更改现有属性项。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see langword="false" />仅在必要时返回，因为对类型描述符筛选器服务的重复查询会降低性能。</para></block>
        <altmember cref="T:System.Attribute" />
        <altmember cref="P:System.Attribute.TypeId" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="FilterEvents">
      <MemberSignature Language="C#" Value="public bool FilterEvents (System.ComponentModel.IComponent component, System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterEvents(class System.ComponentModel.IComponent component, class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterEvents (component As IComponent, events As IDictionary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterEvents(System::ComponentModel::IComponent ^ component, System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member FilterEvents : System.ComponentModel.IComponent * System.Collections.IDictionary -&gt; bool" Usage="iTypeDescriptorFilterService.FilterEvents (component, events)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component">要为其筛选事件的组件。</param>
        <param name="events">可修改的事件字典。</param>
        <summary>筛选组件通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的事件。</summary>
        <returns>如果将缓存经过筛选的事件集，则为 <see langword="true" />；如果筛选服务必须再次查询，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当用户请求组件的一组事件时，将调用此方法。 事件会添加到字典中，其中事件名称为键，相应 <xref:System.ComponentModel.EventDescriptor> 对象作为值。 此服务的实现者可以在字典中添加、移除或更改事件项。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see langword="false" />仅在必要时返回，因为对类型描述符筛选器服务的重复查询会降低性能。</para></block>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="FilterProperties">
      <MemberSignature Language="C#" Value="public bool FilterProperties (System.ComponentModel.IComponent component, System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterProperties(class System.ComponentModel.IComponent component, class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterProperties (component As IComponent, properties As IDictionary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterProperties(System::ComponentModel::IComponent ^ component, System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member FilterProperties : System.ComponentModel.IComponent * System.Collections.IDictionary -&gt; bool" Usage="iTypeDescriptorFilterService.FilterProperties (component, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component">要为其筛选属性的组件。</param>
        <param name="properties">可修改的属性字典。</param>
        <summary>筛选组件通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的属性。</summary>
        <returns>如果将缓存经过筛选的属性集，则为 <see langword="true" />；如果筛选服务必须再次查询，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当用户请求组件的一组属性时，将调用此方法。 这些属性将添加到字典中，其中的属性名作为键，并将相应的 <xref:System.ComponentModel.PropertyDescriptor> 对象作为值。 此服务的实现者可以在字典中添加、删除或更改属性项。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see langword="false" />仅在必要时返回，因为对类型描述符筛选器服务的重复查询会降低性能。</para></block>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
  </Members>
</Type>
