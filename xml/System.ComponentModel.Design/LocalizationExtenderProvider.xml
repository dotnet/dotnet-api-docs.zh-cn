<Type Name="LocalizationExtenderProvider" FullName="System.ComponentModel.Design.LocalizationExtenderProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="43eb817ddb5e861e118c18ab3a513a0c675ef090" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89730419" /></Metadata><TypeSignature Language="C#" Value="public class LocalizationExtenderProvider : IDisposable, System.ComponentModel.IExtenderProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LocalizationExtenderProvider extends System.Object implements class System.ComponentModel.IExtenderProvider, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.LocalizationExtenderProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class LocalizationExtenderProvider&#xA;Implements IDisposable, IExtenderProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class LocalizationExtenderProvider : IDisposable, System::ComponentModel::IExtenderProvider" />
  <TypeSignature Language="F#" Value="type LocalizationExtenderProvider = class&#xA;    interface IExtenderProvider&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IExtenderProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.ProvideProperty("Localizable", typeof(System.Object))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.ProvideProperty("Localizable", typeof(System.Object))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.ProvideProperty("Language", typeof(System.Object))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.ProvideProperty("Language", typeof(System.Object))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.ProvideProperty("LoadLanguage", typeof(System.Object))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.ProvideProperty("LoadLanguage", typeof(System.Object))&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Obsolete("This class has been deprecated. Use CodeDomLocalizationProvider instead.  http://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("This class has been deprecated. Use CodeDomLocalizationProvider instead.  http://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>向根设计器提供本地化功能的设计时支持。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.LocalizationExtenderProvider> 可 <xref:System.ComponentModel.Design.IRootDesigner> 使用一组属性和方法来扩展，这些属性和方法提供对 .NET Framework 本地化体系结构的支持。 有关使用资源的详细信息，请参阅 [本地化](/dotnet/standard/globalization-localization/localization)。  
  
 使用本地化支持体系结构，设计人员可以使用可在运行时交换以支持各种语言、区域性特定样式和动态可配置功能的资源文件来初始化组件属性。 您可以使用此类的方法，使设计器和代码生成的序列化程序从资源加载并生成使用本地化功能的初始化代码。  
  
 随 Visual Studio 一起提供的默认序列化程序已经能够本地化组件和控件，但它们只是在找到对 .NET Framework 本地化体系结构的支持时才这样做。 若要检测本地化支持的状态，序列化系统必须 <xref:System.Boolean> 在根设计器组件上找到名为 "可本地化" 的公共属性。 如果序列化程序找到此属性，它将搜索 <xref:System.Globalization.CultureInfo> 名为 "Language" 的类型的属性以确定当前的资源配置。 默认序列化程序使用这些属性来确定它是否应该本地化组件的任何可本地化资源，如果是，则 <xref:System.Globalization.CultureInfo> 应将资源信息保存在什么格式。  
  
   
  
## Examples  
 下面的代码示例将添加 <xref:System.ComponentModel.Design.LocalizationExtenderProvider> 到组件。  
  
 [!code-cpp[LocalizationExtenderProviderExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/LocalizationExtenderProviderExample/CPP/class1.cpp#2)]
 [!code-csharp[LocalizationExtenderProviderExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/LocalizationExtenderProviderExample/CS/class1.cs#2)]
 [!code-vb[LocalizationExtenderProviderExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/LocalizationExtenderProviderExample/VB/class1.vb#2)]  
  
 下面的代码示例包含一个示例组件和设计器。 设计器使用 <xref:System.ComponentModel.Design.LocalizationExtenderProvider> 为组件添加本地化支持属性。  
  
 [!code-cpp[LocalizationExtenderProviderExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/LocalizationExtenderProviderExample/CPP/class1.cpp#1)]
 [!code-csharp[LocalizationExtenderProviderExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/LocalizationExtenderProviderExample/CS/class1.cs#1)]
 [!code-vb[LocalizationExtenderProviderExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/LocalizationExtenderProviderExample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LocalizationExtenderProvider (System.ComponentModel.ISite serviceProvider, System.ComponentModel.IComponent baseComponent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.ISite serviceProvider, class System.ComponentModel.IComponent baseComponent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.LocalizationExtenderProvider.#ctor(System.ComponentModel.ISite,System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serviceProvider As ISite, baseComponent As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LocalizationExtenderProvider(System::ComponentModel::ISite ^ serviceProvider, System::ComponentModel::IComponent ^ baseComponent);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.LocalizationExtenderProvider : System.ComponentModel.ISite * System.ComponentModel.IComponent -&gt; System.ComponentModel.Design.LocalizationExtenderProvider" Usage="new System.ComponentModel.Design.LocalizationExtenderProvider (serviceProvider, baseComponent)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.ComponentModel.ISite" />
        <Parameter Name="baseComponent" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">指定组件的服务提供程序。</param>
        <param name="baseComponent">要本地化的基组件。</param>
        <summary>使用指定的服务提供程序和基组件初始化 <see cref="T:System.ComponentModel.Design.LocalizationExtenderProvider" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下，新的 <xref:System.ComponentModel.Design.LocalizationExtenderProvider> 将当前语言设置为 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> ，这是一般和默认的语言资源设置。 此设置将导致设计器生成引用通用语言资源的代码。 您可以创建其他 <xref:System.Globalization.CultureInfo> 对象来表示和标识程序在运行时可以使用的其他本地化资源数据。  
  
   
  
## Examples  
 下面的代码示例创建一个新的 <xref:System.ComponentModel.Design.LocalizationExtenderProvider> 对象。  
  
 [!code-cpp[LocalizationExtenderProviderExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/LocalizationExtenderProviderExample/CPP/class1.cpp#2)]
 [!code-csharp[LocalizationExtenderProviderExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/LocalizationExtenderProviderExample/CS/class1.cs#2)]
 [!code-vb[LocalizationExtenderProviderExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/LocalizationExtenderProviderExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanExtend">
      <MemberSignature Language="C#" Value="public bool CanExtend (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanExtend(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.LocalizationExtenderProvider.CanExtend(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExtend (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanExtend(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="abstract member CanExtend : obj -&gt; bool&#xA;override this.CanExtend : obj -&gt; bool" Usage="localizationExtenderProvider.CanExtend o" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">要接收扩展程序属性的对象。</param>
        <summary>指示此对象是否可以将其扩展程序属性提供给指定的对象。</summary>
        <returns>如果此对象可以扩展程序属性提供给指定对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>释放由 <see cref="T:System.ComponentModel.Design.LocalizationExtenderProvider" /> 占用的资源。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.LocalizationExtenderProvider.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="localizationExtenderProvider.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>处置由 <see cref="T:System.ComponentModel.Design.LocalizationExtenderProvider" /> 占用的资源（内存除外）。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在完成使用 <xref:System.ComponentModel.Design.LocalizationExtenderProvider.Dispose%2A> 后，应调用 <xref:System.ComponentModel.Design.LocalizationExtenderProvider>。 <xref:System.ComponentModel.Design.LocalizationExtenderProvider.Dispose%2A> 方法使 <xref:System.ComponentModel.Design.LocalizationExtenderProvider> 处于不可用状态。 调用后 <xref:System.ComponentModel.Design.LocalizationExtenderProvider.Dispose%2A> ，必须释放对的所有引用， <xref:System.ComponentModel.Design.LocalizationExtenderProvider> 以便垃圾回收器能够回收占用的内存 <xref:System.ComponentModel.Design.LocalizationExtenderProvider> 。 有关详细信息，请参阅 [清理非托管资源](/dotnet/standard/garbage-collection/unmanaged) 和 [实现 Dispose 方法](/dotnet/standard/garbage-collection/implementing-dispose)。  
  
> [!NOTE]
>  每次释放对 <xref:System.ComponentModel.Design.LocalizationExtenderProvider.Dispose%2A> 的最后一个引用前，均应调用 <xref:System.ComponentModel.Design.LocalizationExtenderProvider>。 否则，在垃圾回收器调用 <xref:System.ComponentModel.Design.LocalizationExtenderProvider> 对象的 `Finalize` 方法之前，该对象正在使用的资源不会被释放。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.LocalizationExtenderProvider.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="localizationExtenderProvider.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="disposing">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
        <summary>释放由 <see cref="T:System.ComponentModel.Design.LocalizationExtenderProvider" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法由公共 `Dispose()` 方法和 <xref:System.Object.Finalize%2A> 方法调用。 `Dispose()` 调用受保护的 `Dispose(Boolean)` 方法，并将 `disposing` 参数设置为 `true` 。 <xref:System.Object.Finalize%2A>`Dispose`在设置为的情况调用 `disposing` `false` 。  
  
 当 `disposing` 参数为 true 时，此方法释放该引用的任何托管对象所持有的所有资源 <xref:System.ComponentModel.Design.LocalizationExtenderProvider> 。 此方法将调用每个被引用对象的 `Dispose()` 方法。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see langword="Dispose" /> 可以由其他对象多次调用。 当重写时， <see langword="Dispose(Boolean)" /> 请注意不要引用先前在调用时已释放的对象 <see langword="Dispose" /> 。 有关如何实现的详细信息 <see langword="Dispose(Boolean)" /> ，请参阅 [实现 Dispose 方法](/dotnet/standard/garbage-collection/implementing-dispose)。  
  
有关和的详细 <see langword="Dispose" /> 信息 <see cref="M:System.Object.Finalize" /> ，请参阅 [清理非托管资源](/dotnet/standard/garbage-collection/unmanaged) 和 [重写 Finalize 方法](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))。</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetLanguage">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo GetLanguage (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Globalization.CultureInfo GetLanguage(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.LocalizationExtenderProvider.GetLanguage(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLanguage (o As Object) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Globalization::CultureInfo ^ GetLanguage(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="member this.GetLanguage : obj -&gt; System.Globalization.CultureInfo" Usage="localizationExtenderProvider.GetLanguage o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignOnly(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignOnly(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">要获取其当前资源区域性的对象。</param>
        <summary>获取指定对象的当前资源区域性。</summary>
        <returns>指示资源种类的 <see cref="T:System.Globalization.CultureInfo" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法返回用于访问指定对象的资源数据的当前资源区域性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLoadLanguage">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo GetLoadLanguage (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Globalization.CultureInfo GetLoadLanguage(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.LocalizationExtenderProvider.GetLoadLanguage(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLoadLanguage (o As Object) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Globalization::CultureInfo ^ GetLoadLanguage(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="member this.GetLoadLanguage : obj -&gt; System.Globalization.CultureInfo" Usage="localizationExtenderProvider.GetLoadLanguage o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignOnly(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignOnly(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">要获取其资源区域性的对象。</param>
        <summary>获取默认的资源区域性，在设计时初始化本地化对象的值时将使用该区域性。</summary>
        <returns><see cref="T:System.Globalization.CultureInfo" />，指示用于初始化指定对象的值的资源区域性。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLocalizable">
      <MemberSignature Language="C#" Value="public bool GetLocalizable (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetLocalizable(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.LocalizationExtenderProvider.GetLocalizable(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLocalizable (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetLocalizable(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="member this.GetLocalizable : obj -&gt; bool" Usage="localizationExtenderProvider.GetLocalizable o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignOnly(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignOnly(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">要检查本地化支持的对象。</param>
        <summary>获取一个值，用以指示指定对象是否支持资源本地化。</summary>
        <returns>如果指定对象支持资源本地化，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetLanguage">
      <MemberSignature Language="C#" Value="public void ResetLanguage (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetLanguage(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.LocalizationExtenderProvider.ResetLanguage(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetLanguage (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetLanguage(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="member this.ResetLanguage : obj -&gt; unit" Usage="localizationExtenderProvider.ResetLanguage o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">要重置其资源区域性的对象。</param>
        <summary>重置指定对象的资源区域性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果在加载设计器时使用本地化资源初始化了指定的对象，则此方法会将指定对象的资源区域性设置为加载设计器时用于初始化指定对象的值的资源区域性。 如果指定的对象没有以前的资源区域性设置，则当前资源区域性设置为 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLanguage">
      <MemberSignature Language="C#" Value="public void SetLanguage (object o, System.Globalization.CultureInfo language);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLanguage(object o, class System.Globalization.CultureInfo language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.LocalizationExtenderProvider.SetLanguage(System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLanguage (o As Object, language As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLanguage(System::Object ^ o, System::Globalization::CultureInfo ^ language);" />
      <MemberSignature Language="F#" Value="member this.SetLanguage : obj * System.Globalization.CultureInfo -&gt; unit" Usage="localizationExtenderProvider.SetLanguage (o, language)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="language" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="o">要设置其资源区域性的基组件。</param>
        <param name="language">指示要使用的资源区域性的 <see cref="T:System.Globalization.CultureInfo" />。</param>
        <summary>将指定对象的当前资源区域性设置为指定的资源区域性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLocalizable">
      <MemberSignature Language="C#" Value="public void SetLocalizable (object o, bool localizable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLocalizable(object o, bool localizable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.LocalizationExtenderProvider.SetLocalizable(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLocalizable (o As Object, localizable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLocalizable(System::Object ^ o, bool localizable);" />
      <MemberSignature Language="F#" Value="member this.SetLocalizable : obj * bool -&gt; unit" Usage="localizationExtenderProvider.SetLocalizable (o, localizable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="localizable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="o">要设置为可本地化或不可本地化的基组件。</param>
        <param name="localizable">如果此对象支持资源本地化，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>设置一个值，该值指示指定的对象是否支持经过本地化的资源。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeLanguage">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeLanguage (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeLanguage(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.LocalizationExtenderProvider.ShouldSerializeLanguage(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeLanguage (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeLanguage(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeLanguage : obj -&gt; bool" Usage="localizationExtenderProvider.ShouldSerializeLanguage o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">要获取语言支持持久性标志的对象。</param>
        <summary>获取一个值，该值指示指定的对象是否必须将其可本地化的值保持在资源中。</summary>
        <returns>如果可本地化的值应该保持在资源中，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
