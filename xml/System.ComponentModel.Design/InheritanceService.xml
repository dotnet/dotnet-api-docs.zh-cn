<Type Name="InheritanceService" FullName="System.ComponentModel.Design.InheritanceService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a3cab89faf830a657b80a9a219c722242175e67f" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86734186" /></Metadata><TypeSignature Language="C#" Value="public class InheritanceService : IDisposable, System.ComponentModel.Design.IInheritanceService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InheritanceService extends System.Object implements class System.ComponentModel.Design.IInheritanceService, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.InheritanceService" />
  <TypeSignature Language="VB.NET" Value="Public Class InheritanceService&#xA;Implements IDisposable, IInheritanceService" />
  <TypeSignature Language="C++ CLI" Value="public ref class InheritanceService : IDisposable, System::ComponentModel::Design::IInheritanceService" />
  <TypeSignature Language="F#" Value="type InheritanceService = class&#xA;    interface IInheritanceService&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Design" FromVersion="5.0.0.0" To="System.Windows.Forms.Design" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Design" FromVersion="4.0.0.0" To="System.Windows.Forms.Design" ToVersion="4.0.0.0" FrameworkAlternate="netcore-3.0;netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IInheritanceService</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="57e59-101">提供了一组用于标识继承的组件的方法。</span><span class="sxs-lookup"><span data-stu-id="57e59-101">Provides a set of methods for identifying inherited components.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e59-102"><xref:System.ComponentModel.Design.InheritanceService>可用于查找继承的组件，选择要忽略的组件，并检索服务跟踪的每个继承类的继承特性。</span><span class="sxs-lookup"><span data-stu-id="57e59-102">The <xref:System.ComponentModel.Design.InheritanceService> can be used to find inherited components, select which ones to ignore, and retrieve the inheritance attribute of each inherited class that is tracked by the service.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.InheritanceAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InheritanceService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.InheritanceService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InheritanceService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="57e59-103">初始化 <see cref="T:System.ComponentModel.Design.InheritanceService" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="57e59-103">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.InheritanceService" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddInheritedComponents">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="57e59-104">将由指定组件继承的组件添加到 <see cref="T:System.ComponentModel.Design.InheritanceService" />。</span><span class="sxs-lookup"><span data-stu-id="57e59-104">Adds the components inherited by the specified component to the <see cref="T:System.ComponentModel.Design.InheritanceService" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddInheritedComponents">
      <MemberSignature Language="C#" Value="public void AddInheritedComponents (System.ComponentModel.IComponent component, System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddInheritedComponents(class System.ComponentModel.IComponent component, class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddInheritedComponents (component As IComponent, container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddInheritedComponents(System::ComponentModel::IComponent ^ component, System::ComponentModel::IContainer ^ container);" />
      <MemberSignature Language="F#" Value="abstract member AddInheritedComponents : System.ComponentModel.IComponent * System.ComponentModel.IContainer -&gt; unit&#xA;override this.AddInheritedComponents : System.ComponentModel.IComponent * System.ComponentModel.IContainer -&gt; unit" Usage="inheritanceService.AddInheritedComponents (component, container)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IInheritanceService.AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="57e59-105">用于搜索继承的组件以添加到指定容器中的组件。</span><span class="sxs-lookup"><span data-stu-id="57e59-105">The component to search for inherited components to add to the specified container.</span></span></param>
        <param name="container"><span data-ttu-id="57e59-106">要将继承的组件添加到其中的容器。</span><span class="sxs-lookup"><span data-stu-id="57e59-106">The container to add the inherited components to.</span></span></param>
        <summary><span data-ttu-id="57e59-107">将由指定组件继承的组件添加到 <see cref="T:System.ComponentModel.Design.InheritanceService" />。</span><span class="sxs-lookup"><span data-stu-id="57e59-107">Adds the components inherited by the specified component to the <see cref="T:System.ComponentModel.Design.InheritanceService" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e59-108">此方法搜索指定组件的所有基类的所有字段。</span><span class="sxs-lookup"><span data-stu-id="57e59-108">This method searches all the fields of all base classes of the specified component.</span></span> <span data-ttu-id="57e59-109">实现的每个字段 <xref:System.ComponentModel.IComponent> 都将添加到指定的容器中。</span><span class="sxs-lookup"><span data-stu-id="57e59-109">Each field that implements <xref:System.ComponentModel.IComponent> is added to the specified container.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IInheritanceService" />
      </Docs>
    </Member>
    <Member MemberName="AddInheritedComponents">
      <MemberSignature Language="C#" Value="protected virtual void AddInheritedComponents (Type type, System.ComponentModel.IComponent component, System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddInheritedComponents(class System.Type type, class System.ComponentModel.IComponent component, class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.Type,System.ComponentModel.IComponent,System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddInheritedComponents (type As Type, component As IComponent, container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddInheritedComponents(Type ^ type, System::ComponentModel::IComponent ^ component, System::ComponentModel::IContainer ^ container);" />
      <MemberSignature Language="F#" Value="abstract member AddInheritedComponents : Type * System.ComponentModel.IComponent * System.ComponentModel.IContainer -&gt; unit&#xA;override this.AddInheritedComponents : Type * System.ComponentModel.IComponent * System.ComponentModel.IContainer -&gt; unit" Usage="inheritanceService.AddInheritedComponents (type, component, container)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="57e59-110">要搜索的基类型。</span><span class="sxs-lookup"><span data-stu-id="57e59-110">The base type to search for.</span></span></param>
        <param name="component"><span data-ttu-id="57e59-111">用于搜索继承的组件以添加到指定容器中的组件。</span><span class="sxs-lookup"><span data-stu-id="57e59-111">The component to search for inherited components to add to the specified container.</span></span></param>
        <param name="container"><span data-ttu-id="57e59-112">要将继承的组件添加到其中的容器。</span><span class="sxs-lookup"><span data-stu-id="57e59-112">The container to add the inherited components to.</span></span></param>
        <summary><span data-ttu-id="57e59-113">将由指定组件继承的指定类型的组件添加到 <see cref="T:System.ComponentModel.Design.InheritanceService" /> 中。</span><span class="sxs-lookup"><span data-stu-id="57e59-113">Adds the components of the specified type that are inherited by the specified component to the <see cref="T:System.ComponentModel.Design.InheritanceService" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e59-114">此方法搜索组件的所有基类的所有字段。</span><span class="sxs-lookup"><span data-stu-id="57e59-114">This method searches all the fields of all base classes of component.</span></span> <span data-ttu-id="57e59-115">实现的每个字段 <xref:System.ComponentModel.IComponent> 都将添加到一个内部列表，该列表存储用于 <xref:System.ComponentModel.InheritanceAttribute> 标识组件的继承级别的。</span><span class="sxs-lookup"><span data-stu-id="57e59-115">Each field that implements <xref:System.ComponentModel.IComponent> is added to an internal list that stores an <xref:System.ComponentModel.InheritanceAttribute> that identifies the inheritance level of the component.</span></span> <span data-ttu-id="57e59-116">然后，将该组件添加到指定容器。</span><span class="sxs-lookup"><span data-stu-id="57e59-116">The component is then added to the specified container.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="57e59-117">释放由 <see cref="T:System.ComponentModel.Design.InheritanceService" /> 占用的资源。</span><span class="sxs-lookup"><span data-stu-id="57e59-117">Releases the resources used by the <see cref="T:System.ComponentModel.Design.InheritanceService" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.InheritanceService.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="inheritanceService.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="57e59-118">释放由 <see cref="T:System.ComponentModel.Design.InheritanceService" /> 使用的所有资源。</span><span class="sxs-lookup"><span data-stu-id="57e59-118">Releases all resources used by the <see cref="T:System.ComponentModel.Design.InheritanceService" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e59-119">调用 <xref:System.ComponentModel.Design.InheritanceService.Dispose%2A> 会允许出于其他目的重新分配所使用的资源 <xref:System.ComponentModel.Design.InheritanceService> 。</span><span class="sxs-lookup"><span data-stu-id="57e59-119">Calling <xref:System.ComponentModel.Design.InheritanceService.Dispose%2A> allows the resources used by the <xref:System.ComponentModel.Design.InheritanceService> to be reallocated for other purposes.</span></span> <span data-ttu-id="57e59-120">有关的详细信息 <xref:System.ComponentModel.Design.InheritanceService.Dispose%2A> ，请参阅 [清理非托管资源](/dotnet/standard/garbage-collection/unmanaged)。</span><span class="sxs-lookup"><span data-stu-id="57e59-120">For more information about <xref:System.ComponentModel.Design.InheritanceService.Dispose%2A>, see [Cleaning Up Unmanaged Resources](/dotnet/standard/garbage-collection/unmanaged).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.InheritanceService.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="inheritanceService.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="57e59-121">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="57e59-121"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="57e59-122">释放由 <see cref="T:System.ComponentModel.Design.InheritanceService" /> 占用的非托管资源，还可以另外再释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="57e59-122">Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Design.InheritanceService" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e59-123">此方法由公共 `Dispose()` 方法和 <xref:System.Object.Finalize%2A> 方法调用。</span><span class="sxs-lookup"><span data-stu-id="57e59-123">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="57e59-124">`Dispose()` 调用受保护的 `Dispose(Boolean)` 方法，并将 `disposing` 参数设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="57e59-124">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="57e59-125"><xref:System.Object.Finalize%2A>`Dispose`在设置为的情况调用 `disposing` `false` 。</span><span class="sxs-lookup"><span data-stu-id="57e59-125"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="57e59-126">当 `disposing` 参数为 true 时，此方法释放该引用的任何托管对象所持有的所有资源 <xref:System.ComponentModel.Design.InheritanceService> 。</span><span class="sxs-lookup"><span data-stu-id="57e59-126">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.InheritanceService> references.</span></span> <span data-ttu-id="57e59-127">此方法将调用每个被引用对象的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="57e59-127">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="57e59-128">
            <see langword="Dispose" /> 可以由其他对象多次调用。</span><span class="sxs-lookup"><span data-stu-id="57e59-128">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="57e59-129">当重写时， <see langword="Dispose(Boolean)" /> 请注意不要引用先前在调用时已释放的对象 <see langword="Dispose" /> 。</span><span class="sxs-lookup"><span data-stu-id="57e59-129">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="57e59-130">有关如何实现的详细信息 <see langword="Dispose(Boolean)" /> ，请参阅 [实现 Dispose 方法](/dotnet/standard/garbage-collection/implementing-dispose)。</span><span class="sxs-lookup"><span data-stu-id="57e59-130">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](/dotnet/standard/garbage-collection/implementing-dispose).</span></span>  
  
<span data-ttu-id="57e59-131">有关和的详细 <see langword="Dispose" /> 信息 <see cref="M:System.Object.Finalize" /> ，请参阅 [清理非托管资源](/dotnet/standard/garbage-collection/unmanaged) 和 [重写 Finalize 方法](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="57e59-131">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](/dotnet/standard/garbage-collection/unmanaged) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetInheritanceAttribute">
      <MemberSignature Language="C#" Value="public System.ComponentModel.InheritanceAttribute GetInheritanceAttribute (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.InheritanceAttribute GetInheritanceAttribute(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.InheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInheritanceAttribute (component As IComponent) As InheritanceAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::InheritanceAttribute ^ GetInheritanceAttribute(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="abstract member GetInheritanceAttribute : System.ComponentModel.IComponent -&gt; System.ComponentModel.InheritanceAttribute&#xA;override this.GetInheritanceAttribute : System.ComponentModel.IComponent -&gt; System.ComponentModel.InheritanceAttribute" Usage="inheritanceService.GetInheritanceAttribute component" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IInheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.InheritanceAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="57e59-132">要为其检索继承特性的组件。</span><span class="sxs-lookup"><span data-stu-id="57e59-132">The component to retrieve the inheritance attribute for.</span></span></param>
        <summary><span data-ttu-id="57e59-133">获取指定组件的继承特性。</span><span class="sxs-lookup"><span data-stu-id="57e59-133">Gets the inheritance attribute of the specified component.</span></span></summary>
        <returns><span data-ttu-id="57e59-134">描述此组件的继承级别的 <see cref="T:System.ComponentModel.InheritanceAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="57e59-134">An <see cref="T:System.ComponentModel.InheritanceAttribute" /> that describes the level of inheritance that this component comes from.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57e59-135">如果组件不是继承的，则此方法返回值 <xref:System.ComponentModel.InheritanceAttribute.NotInherited> 。</span><span class="sxs-lookup"><span data-stu-id="57e59-135">If the component is not inherited, this method returns the value <xref:System.ComponentModel.InheritanceAttribute.NotInherited>.</span></span> <span data-ttu-id="57e59-136">否则，它将返回此组件的继承特性。</span><span class="sxs-lookup"><span data-stu-id="57e59-136">Otherwise, it returns the inheritance attribute for this component.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.InheritanceAttribute" />
        <altmember cref="T:System.ComponentModel.Design.IInheritanceService" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreInheritedMember">
      <MemberSignature Language="C#" Value="protected virtual bool IgnoreInheritedMember (System.Reflection.MemberInfo member, System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IgnoreInheritedMember(class System.Reflection.MemberInfo member, class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.InheritanceService.IgnoreInheritedMember(System.Reflection.MemberInfo,System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IgnoreInheritedMember (member As MemberInfo, component As IComponent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IgnoreInheritedMember(System::Reflection::MemberInfo ^ member, System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="abstract member IgnoreInheritedMember : System.Reflection.MemberInfo * System.ComponentModel.IComponent -&gt; bool&#xA;override this.IgnoreInheritedMember : System.Reflection.MemberInfo * System.ComponentModel.IComponent -&gt; bool" Usage="inheritanceService.IgnoreInheritedMember (member, component)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="member"><span data-ttu-id="57e59-137">要检查的成员。</span><span class="sxs-lookup"><span data-stu-id="57e59-137">The member to check.</span></span> <span data-ttu-id="57e59-138">此成员是 <see cref="T:System.Reflection.FieldInfo" /> 或 <see cref="T:System.Reflection.MethodInfo" />。</span><span class="sxs-lookup"><span data-stu-id="57e59-138">This member is either a <see cref="T:System.Reflection.FieldInfo" /> or a <see cref="T:System.Reflection.MethodInfo" />.</span></span></param>
        <param name="component"><span data-ttu-id="57e59-139">此成员所绑定到的组件实例。</span><span class="sxs-lookup"><span data-stu-id="57e59-139">The component instance this member is bound to.</span></span></param>
        <summary><span data-ttu-id="57e59-140">指示是否忽略指定的成员。</span><span class="sxs-lookup"><span data-stu-id="57e59-140">Indicates whether to ignore the specified member.</span></span></summary>
        <returns><span data-ttu-id="57e59-141">如果指定的成员应该包含在继承的组件集中，为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="57e59-141"><see langword="true" /> if the specified member should be included in the set of inherited components; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="57e59-142">通过重写此方法，用户可以修改继承服务忽略的成员集。</span><span class="sxs-lookup"><span data-stu-id="57e59-142">By overriding this method, users can modify the set of members that the inheritance service ignores.</span></span> <span data-ttu-id="57e59-143">默认实现将忽略所有私有成员，并且仅允许公共或受保护的成员。</span><span class="sxs-lookup"><span data-stu-id="57e59-143">The default implementation ignores all members that are private, and allows only public or protected members.</span></span></para></block>
        <altmember cref="T:System.Reflection.FieldInfo" />
        <altmember cref="T:System.Reflection.MethodInfo" />
      </Docs>
    </Member>
  </Members>
</Type>
