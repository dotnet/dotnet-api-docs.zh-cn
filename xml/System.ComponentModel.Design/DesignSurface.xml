<Type Name="DesignSurface" FullName="System.ComponentModel.Design.DesignSurface">
  <Metadata><Meta Name="ms.openlocfilehash" Value="834d7abfc995123c16443f935cc12714885b155f" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86734732" /></Metadata><TypeSignature Language="C#" Value="public class DesignSurface : IDisposable, IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DesignSurface extends System.Object implements class System.IDisposable, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.DesignSurface" />
  <TypeSignature Language="VB.NET" Value="Public Class DesignSurface&#xA;Implements IDisposable, IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignSurface : IDisposable, IServiceProvider" />
  <TypeSignature Language="F#" Value="type DesignSurface = class&#xA;    interface IDisposable&#xA;    interface IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Design" FromVersion="5.0.0.0" To="System.Windows.Forms.Design" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Design" FromVersion="4.0.0.0" To="System.Windows.Forms.Design" ToVersion="4.0.0.0" FrameworkAlternate="netcore-3.0;netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="43bd2-101">为设计组件提供一个用户界面。</span><span class="sxs-lookup"><span data-stu-id="43bd2-101">Presents a user interface for designing components.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43bd2-102"><xref:System.ComponentModel.Design.DesignSurface>类实现用户视为设计器的内容。</span><span class="sxs-lookup"><span data-stu-id="43bd2-102">The <xref:System.ComponentModel.Design.DesignSurface> class implements what the user perceives as a designer.</span></span> <span data-ttu-id="43bd2-103"><xref:System.ComponentModel.Design.DesignSurface> 用户操作以更改设计时功能的用户界面。</span><span class="sxs-lookup"><span data-stu-id="43bd2-103"><xref:System.ComponentModel.Design.DesignSurface> is the user interface the user manipulates to change design-time features.</span></span> <span data-ttu-id="43bd2-104"><xref:System.ComponentModel.Design.DesignSurface> 提供完全独立的设计图面。</span><span class="sxs-lookup"><span data-stu-id="43bd2-104"><xref:System.ComponentModel.Design.DesignSurface> provides a completely self-contained design surface.</span></span>  
  
 <span data-ttu-id="43bd2-105">类可用作 <xref:System.ComponentModel.Design.DesignSurface> 独立设计器，或者它可以与类结合使用， <xref:System.ComponentModel.Design.DesignSurfaceManager> 以便为承载多个对象的应用程序提供公共实现 <xref:System.ComponentModel.Design.DesignSurface> 。</span><span class="sxs-lookup"><span data-stu-id="43bd2-105">The <xref:System.ComponentModel.Design.DesignSurface> class may be used as a stand-alone designer, or it may be coupled with the <xref:System.ComponentModel.Design.DesignSurfaceManager> class to provide a common implementation for an application that hosts multiple <xref:System.ComponentModel.Design.DesignSurface> objects.</span></span>  
  
 <span data-ttu-id="43bd2-106"><xref:System.ComponentModel.Design.DesignSurface>类可以单独使用，也可以由用户派生新类并增加行为。</span><span class="sxs-lookup"><span data-stu-id="43bd2-106">The <xref:System.ComponentModel.Design.DesignSurface> class can be used by itself, or the user can derive a new class from it and augment the behavior.</span></span>  
  
 <span data-ttu-id="43bd2-107"><xref:System.ComponentModel.Design.DesignSurface>类自动提供若干设计时服务。</span><span class="sxs-lookup"><span data-stu-id="43bd2-107">The <xref:System.ComponentModel.Design.DesignSurface> class provides several design-time services automatically.</span></span> <span data-ttu-id="43bd2-108"><xref:System.ComponentModel.Design.DesignSurface>类在其构造函数中添加了它的所有服务。</span><span class="sxs-lookup"><span data-stu-id="43bd2-108">The <xref:System.ComponentModel.Design.DesignSurface> class adds all of its services in its constructor.</span></span> <span data-ttu-id="43bd2-109">其中的大多数服务都可以通过在受保护的属性中替换来进行重写 <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> 。</span><span class="sxs-lookup"><span data-stu-id="43bd2-109">Most of these services can be overridden by replacing them in the protected <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> property.</span></span> <span data-ttu-id="43bd2-110">若要替换服务，请重写构造函数、调用基，并通过 protected 属性进行任何更改 <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> 。</span><span class="sxs-lookup"><span data-stu-id="43bd2-110">To replace a service, override the constructor, call base, and make any changes through the protected <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> property.</span></span> <span data-ttu-id="43bd2-111">在释放设计图面时，将释放添加到服务容器和实现的所有服务 <xref:System.IDisposable> 。</span><span class="sxs-lookup"><span data-stu-id="43bd2-111">All services that are added to the service container and that implement <xref:System.IDisposable> are disposed when the design surface is disposed.</span></span> <span data-ttu-id="43bd2-112">下表显示了类提供的一组默认可替换服务 <xref:System.ComponentModel.Design.DesignSurface> 。</span><span class="sxs-lookup"><span data-stu-id="43bd2-112">The default set of replaceable services that the <xref:System.ComponentModel.Design.DesignSurface> class provides is shown in the following table.</span></span>  
  
|<span data-ttu-id="43bd2-113">服务</span><span class="sxs-lookup"><span data-stu-id="43bd2-113">Service</span></span>|<span data-ttu-id="43bd2-114">说明</span><span class="sxs-lookup"><span data-stu-id="43bd2-114">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.ComponentModel.Design.IExtenderProviderService>|<span data-ttu-id="43bd2-115">启用不属于容器组件集合的对象，以提供其自己的扩展程序提供程序。</span><span class="sxs-lookup"><span data-stu-id="43bd2-115">Enables objects that are not part of the container's components collection to provide their own extender providers.</span></span>|  
|<xref:System.ComponentModel.Design.IExtenderListService>|<span data-ttu-id="43bd2-116">用于 <xref:System.ComponentModel.TypeDescriptor> 获取扩展程序提供程序的列表。</span><span class="sxs-lookup"><span data-stu-id="43bd2-116">Used by <xref:System.ComponentModel.TypeDescriptor> to get a list of extender providers.</span></span> <span data-ttu-id="43bd2-117">对于此服务，扩展程序提供程序可以在容器的外部。</span><span class="sxs-lookup"><span data-stu-id="43bd2-117">With this service, extender providers can live outside of the container.</span></span>|  
|<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>|<span data-ttu-id="43bd2-118">提供设计器元数据挂钩。</span><span class="sxs-lookup"><span data-stu-id="43bd2-118">Provides designer metadata hooks.</span></span> <span data-ttu-id="43bd2-119">这是用于元数据筛选的主接口。</span><span class="sxs-lookup"><span data-stu-id="43bd2-119">This is the primary interface for metadata filtering.</span></span>|  
|<xref:System.ComponentModel.Design.ISelectionService>|<span data-ttu-id="43bd2-120">提供在设计器中选择组件的方法。</span><span class="sxs-lookup"><span data-stu-id="43bd2-120">Provides a way to select components in the designer.</span></span>|  
|<xref:System.ComponentModel.Design.IReferenceService>|<span data-ttu-id="43bd2-121">提供了一种方法来获取对象的名称，即使这些对象未放置。</span><span class="sxs-lookup"><span data-stu-id="43bd2-121">Provides a way to get a name for objects, even when those objects are not sited.</span></span>|  
|<xref:System.ComponentModel.Design.DesignSurface>|<span data-ttu-id="43bd2-122">以服务的形式提供设计图面本身。</span><span class="sxs-lookup"><span data-stu-id="43bd2-122">Offers the design surface itself as a service.</span></span>|  
|<xref:System.ComponentModel.Design.DesignerOptionService>|<span data-ttu-id="43bd2-123">提供用于获取和设置设计器选项值的基类。</span><span class="sxs-lookup"><span data-stu-id="43bd2-123">Provides a base class for getting and setting option values for a designer.</span></span>|  
  
 <span data-ttu-id="43bd2-124">下表显示了默认情况下提供的不可替换服务。</span><span class="sxs-lookup"><span data-stu-id="43bd2-124">The following table shows the non-replaceable services provided by default.</span></span>  
  
|<span data-ttu-id="43bd2-125">服务</span><span class="sxs-lookup"><span data-stu-id="43bd2-125">Service</span></span>|<span data-ttu-id="43bd2-126">说明</span><span class="sxs-lookup"><span data-stu-id="43bd2-126">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.ComponentModel.Design.IComponentChangeService>|<span data-ttu-id="43bd2-127">对组件进行更改时引发事件。</span><span class="sxs-lookup"><span data-stu-id="43bd2-127">Raises events as changes are made to components.</span></span>|  
|<xref:System.ComponentModel.Design.IDesignerHost>|<span data-ttu-id="43bd2-128">控制对类型、服务和事务的访问。</span><span class="sxs-lookup"><span data-stu-id="43bd2-128">Controls access to types, services, and transactions.</span></span> <span data-ttu-id="43bd2-129">设计器的主接口。</span><span class="sxs-lookup"><span data-stu-id="43bd2-129">Master interface for designers.</span></span>|  
|<xref:System.ComponentModel.IContainer>|<span data-ttu-id="43bd2-130">拥有正在设计的一组组件。</span><span class="sxs-lookup"><span data-stu-id="43bd2-130">Owns the set of components that are being designed.</span></span> <span data-ttu-id="43bd2-131">每个设计器都有一个 <xref:System.ComponentModel.IContainer> 拥有组件的。</span><span class="sxs-lookup"><span data-stu-id="43bd2-131">Each designer has an <xref:System.ComponentModel.IContainer> that owns the components.</span></span>|  
|<xref:System.ComponentModel.Design.IServiceContainer>|<span data-ttu-id="43bd2-132">派生自 <xref:System.IServiceProvider> ，并提供一种在设计器中添加和移除服务的方法。</span><span class="sxs-lookup"><span data-stu-id="43bd2-132">Derives from <xref:System.IServiceProvider> and provides a way to add and remove services from the designer.</span></span>|  
  
 <span data-ttu-id="43bd2-133">除了这些服务， <xref:System.ComponentModel.Design.DesignSurface> 类还提供了可通过组件的站点获得的单个服务。</span><span class="sxs-lookup"><span data-stu-id="43bd2-133">In addition to these services, the <xref:System.ComponentModel.Design.DesignSurface> class also provides a single service that is available through a component's site.</span></span> <span data-ttu-id="43bd2-134">对于每个组件，此服务都是唯一的。</span><span class="sxs-lookup"><span data-stu-id="43bd2-134">This service is unique for each component.</span></span> <span data-ttu-id="43bd2-135">下表显示了无法替换的服务。</span><span class="sxs-lookup"><span data-stu-id="43bd2-135">The following table shows the services that cannot be replaced.</span></span>  
  
|<span data-ttu-id="43bd2-136">服务</span><span class="sxs-lookup"><span data-stu-id="43bd2-136">Service</span></span>|<span data-ttu-id="43bd2-137">说明</span><span class="sxs-lookup"><span data-stu-id="43bd2-137">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.ComponentModel.Design.IDictionaryService>|<span data-ttu-id="43bd2-138">键/值对的泛型字典，可用于存储有关组件的任意数据。</span><span class="sxs-lookup"><span data-stu-id="43bd2-138">A generic dictionary of key/value pairs that can be used to store arbitrary data about a component.</span></span>|  
|<xref:System.ComponentModel.INestedContainer>|<span data-ttu-id="43bd2-139">允许组件将其他子组件添加到设计器中的容器。</span><span class="sxs-lookup"><span data-stu-id="43bd2-139">A container that enables a component to add additional child components to the designer.</span></span> <span data-ttu-id="43bd2-140">这些组件将是设计图面的一部分，但不会参与序列化。</span><span class="sxs-lookup"><span data-stu-id="43bd2-140">These components will be part of the design surface, but will not participate in serialization.</span></span> <span data-ttu-id="43bd2-141">当您希望设计一个能够在设计器中公开其本身的区域，但不希望该区域参与序列化的控件时，这非常有用。</span><span class="sxs-lookup"><span data-stu-id="43bd2-141">This is useful when you want to design a control that is capable of exposing a region of itself in a designer, but you do not want the region to participate in serialization.</span></span>|  
  
 <span data-ttu-id="43bd2-142">除了之外 <xref:System.ComponentModel.ISite> ，该网站还实现以下接口。</span><span class="sxs-lookup"><span data-stu-id="43bd2-142">In addition to <xref:System.ComponentModel.ISite>, the site also implements the following interfaces.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="43bd2-143">检查是否存在这些接口，而不是使用任意强制转换，因为其他站点实现可能不会实现它们。</span><span class="sxs-lookup"><span data-stu-id="43bd2-143">Check for the existence of these interfaces, rather than use indiscriminate casting, because other site implementations may not implement them.</span></span>  
  
|<span data-ttu-id="43bd2-144">服务</span><span class="sxs-lookup"><span data-stu-id="43bd2-144">Service</span></span>|<span data-ttu-id="43bd2-145">说明</span><span class="sxs-lookup"><span data-stu-id="43bd2-145">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.ComponentModel.Design.IServiceContainer>|<span data-ttu-id="43bd2-146">提供一种方法来访问站点特定的服务的容器。</span><span class="sxs-lookup"><span data-stu-id="43bd2-146">Provides a way to get to the container of site-specific services.</span></span> <span data-ttu-id="43bd2-147">例如， <xref:System.ComponentModel.Design.IDictionaryService> 是特定于站点的服务。</span><span class="sxs-lookup"><span data-stu-id="43bd2-147">For example, <xref:System.ComponentModel.Design.IDictionaryService> is a site-specific service.</span></span> <span data-ttu-id="43bd2-148">通过此服务，你可以添加其他特定于站点的服务。</span><span class="sxs-lookup"><span data-stu-id="43bd2-148">With this service, you can add additional site-specific services.</span></span>|  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.IServiceProvider" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="43bd2-149">初始化 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="43bd2-149">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurface ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurface();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="43bd2-150">初始化 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="43bd2-150">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="43bd2-151">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</span><span class="sxs-lookup"><span data-stu-id="43bd2-151">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurface (IServiceProvider parentProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider parentProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parentProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurface(IServiceProvider ^ parentProvider);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.DesignSurface : IServiceProvider -&gt; System.ComponentModel.Design.DesignSurface" Usage="new System.ComponentModel.Design.DesignSurface parentProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parentProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="parentProvider"><span data-ttu-id="43bd2-152">父服务提供程序；如果不存在用于解决服务的父服务提供程序，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="43bd2-152">The parent service provider, or <see langword="null" /> if there is no parent used to resolve services.</span></span></param>
        <summary><span data-ttu-id="43bd2-153">初始化 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="43bd2-153">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43bd2-154">当 `parentProvide` 存在时，该图中包含的设计器可以从应用程序中检索服务。</span><span class="sxs-lookup"><span data-stu-id="43bd2-154">When `parentProvide` is present, designers contained within the surface can retrieve services from the application.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="43bd2-155">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</span><span class="sxs-lookup"><span data-stu-id="43bd2-155">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurface (Type rootComponentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type rootComponentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rootComponentType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurface(Type ^ rootComponentType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.DesignSurface : Type -&gt; System.ComponentModel.Design.DesignSurface" Usage="new System.ComponentModel.Design.DesignSurface rootComponentType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="rootComponentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="rootComponentType"><span data-ttu-id="43bd2-156">要创建的根组件的类型。</span><span class="sxs-lookup"><span data-stu-id="43bd2-156">The type of root component to create.</span></span></param>
        <summary><span data-ttu-id="43bd2-157">初始化 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="43bd2-157">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43bd2-158">使用 <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> 构造函数时，它将创建一个简单的设计器加载程序，进而创建给定类型的组件，然后结束加载进程。</span><span class="sxs-lookup"><span data-stu-id="43bd2-158">When you use the <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> constructor, it creates a simple designer loader that, in turn, creates a component of the given type and then ends the loading process.</span></span> <span data-ttu-id="43bd2-159">这是创建设计器的一种简单方法，在假定所有状态保存都将从外部完成。</span><span class="sxs-lookup"><span data-stu-id="43bd2-159">This is a straightforward way to create a designer, under the assumption that all saving of state will be done externally.</span></span> <span data-ttu-id="43bd2-160">在内部，此调用 <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> 并传递根组件类型。</span><span class="sxs-lookup"><span data-stu-id="43bd2-160">Internally, this calls <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> and passes the root component type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="43bd2-161"><xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A>重载不受影响 <xref:System.Windows.Forms.Design.DesignerOptions> 。</span><span class="sxs-lookup"><span data-stu-id="43bd2-161">The <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> overload is not affected by <xref:System.Windows.Forms.Design.DesignerOptions>.</span></span> <span data-ttu-id="43bd2-162">在 <xref:System.Windows.Forms.Design.DesignerOptions> 加载设计图面之前，必须在服务容器中。</span><span class="sxs-lookup"><span data-stu-id="43bd2-162">The <xref:System.Windows.Forms.Design.DesignerOptions> must be in the service container before the design surface loads.</span></span> <span data-ttu-id="43bd2-163">如果需要访问 <xref:System.Windows.Forms.Design.DesignerOptions> ，请调用空构造函数，将添加 <xref:System.Windows.Forms.Design.DesignerOptions> 到 <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> 并 <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> 使用调用 `rootComponentType` 。</span><span class="sxs-lookup"><span data-stu-id="43bd2-163">If you need access to <xref:System.Windows.Forms.Design.DesignerOptions>, call the empty constructor, add the <xref:System.Windows.Forms.Design.DesignerOptions> to the <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> and call <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> with `rootComponentType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="43bd2-164"><paramref name="rootComponent" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="43bd2-164"><paramref name="rootComponent" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="43bd2-165">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</span><span class="sxs-lookup"><span data-stu-id="43bd2-165">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurface (IServiceProvider parentProvider, Type rootComponentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider parentProvider, class System.Type rootComponentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parentProvider As IServiceProvider, rootComponentType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurface(IServiceProvider ^ parentProvider, Type ^ rootComponentType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.DesignSurface : IServiceProvider * Type -&gt; System.ComponentModel.Design.DesignSurface" Usage="new System.ComponentModel.Design.DesignSurface (parentProvider, rootComponentType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parentProvider" Type="System.IServiceProvider" />
        <Parameter Name="rootComponentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="parentProvider"><span data-ttu-id="43bd2-166">父服务提供程序；如果不存在用于解决服务的父服务提供程序，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="43bd2-166">The parent service provider, or <see langword="null" /> if there is no parent used to resolve services.</span></span></param>
        <param name="rootComponentType"><span data-ttu-id="43bd2-167">要创建的根组件的类型。</span><span class="sxs-lookup"><span data-stu-id="43bd2-167">The type of root component to create.</span></span></param>
        <summary><span data-ttu-id="43bd2-168">初始化 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="43bd2-168">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43bd2-169">使用 <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> 构造函数将创建一个简单的设计器加载程序，用于创建给定类型的组件，然后结束加载进程。</span><span class="sxs-lookup"><span data-stu-id="43bd2-169">Using the <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> constructor creates a simple designer loader that creates a component of the given type and then ends the loading process.</span></span> <span data-ttu-id="43bd2-170">这是创建设计器的一种简单方法，在假定所有状态保存都将从外部完成。</span><span class="sxs-lookup"><span data-stu-id="43bd2-170">This is a straightforward way to create a designer, under the assumption that all saving of state will be done externally.</span></span> <span data-ttu-id="43bd2-171">在内部，此调用 <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> 并传递根组件类型。</span><span class="sxs-lookup"><span data-stu-id="43bd2-171">Internally, this calls <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> and passes the root component type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="43bd2-172"><paramref name="rootComponent" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="43bd2-172"><paramref name="rootComponent" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="43bd2-173">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</span><span class="sxs-lookup"><span data-stu-id="43bd2-173">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginLoad">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="43bd2-174">开始加载过程。</span><span class="sxs-lookup"><span data-stu-id="43bd2-174">Begins the loading process.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public void BeginLoad (System.ComponentModel.Design.Serialization.DesignerLoader loader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginLoad(class System.ComponentModel.Design.Serialization.DesignerLoader loader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginLoad (loader As DesignerLoader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginLoad(System::ComponentModel::Design::Serialization::DesignerLoader ^ loader);" />
      <MemberSignature Language="F#" Value="member this.BeginLoad : System.ComponentModel.Design.Serialization.DesignerLoader -&gt; unit" Usage="designSurface.BeginLoad loader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loader" Type="System.ComponentModel.Design.Serialization.DesignerLoader" />
      </Parameters>
      <Docs>
        <param name="loader"><span data-ttu-id="43bd2-175">用于加载设计器的设计器加载程序。</span><span class="sxs-lookup"><span data-stu-id="43bd2-175">The designer loader to use for loading the designer.</span></span></param>
        <summary><span data-ttu-id="43bd2-176">使用给定的设计器加载程序开始加载过程。</span><span class="sxs-lookup"><span data-stu-id="43bd2-176">Begins the loading process with the given designer loader.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43bd2-177">设计器加载可以是异步的，因此，在此调用返回后加载可能会继续进行。</span><span class="sxs-lookup"><span data-stu-id="43bd2-177">Designer loading can be asynchronous, so the loading may continue to progress after this call has returned.</span></span> <span data-ttu-id="43bd2-178">将事件处理程序附加到 <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete> 事件，以在设计图面完成加载时收到通知。</span><span class="sxs-lookup"><span data-stu-id="43bd2-178">Attach an event handler to the <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete> event to be notified when the design surface has completed loading.</span></span>  
  
 <span data-ttu-id="43bd2-179"><xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A>调用后，您可以立即获取设计器的视图，因为设计器加载程序在异步加载时必须至少提供根组件。</span><span class="sxs-lookup"><span data-stu-id="43bd2-179">After <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> is called, you can immediately obtain the view for the designer, because designer loaders must provide at least the root component when loading asynchronously.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="43bd2-180"><paramref name="loader" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="43bd2-180"><paramref name="loader" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="43bd2-181">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</span><span class="sxs-lookup"><span data-stu-id="43bd2-181">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public void BeginLoad (Type rootComponentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginLoad(class System.Type rootComponentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginLoad (rootComponentType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginLoad(Type ^ rootComponentType);" />
      <MemberSignature Language="F#" Value="member this.BeginLoad : Type -&gt; unit" Usage="designSurface.BeginLoad rootComponentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootComponentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="rootComponentType"><span data-ttu-id="43bd2-182">要在设计模式中创建的组件的类型。</span><span class="sxs-lookup"><span data-stu-id="43bd2-182">The type of component to create in design mode.</span></span></param>
        <summary><span data-ttu-id="43bd2-183">开始加载过程。</span><span class="sxs-lookup"><span data-stu-id="43bd2-183">Begins the loading process.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43bd2-184">如果 `rootComponentType` 指定了，则将使用只创建的实例的默认设计器加载程序 `rootComponentType` 。</span><span class="sxs-lookup"><span data-stu-id="43bd2-184">When `rootComponentType` is specified, a default designer loader that simply creates an instance of `rootComponentType` will be used.</span></span> <span data-ttu-id="43bd2-185">设计器加载可以是异步的，因此，在此调用返回后加载可能会继续进行。</span><span class="sxs-lookup"><span data-stu-id="43bd2-185">Designer loading can be asynchronous, so the loading may continue to progress after this call has returned.</span></span> <span data-ttu-id="43bd2-186">将事件处理程序附加到 <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete> 事件，以在设计图面完成加载时收到通知。</span><span class="sxs-lookup"><span data-stu-id="43bd2-186">Attach an event handler to the <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete> event to be notified when the design surface has completed loading.</span></span>  
  
 <span data-ttu-id="43bd2-187"><xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A>调用后，您可以立即获取设计器的视图，因为设计器加载程序在异步加载时必须至少提供根组件。</span><span class="sxs-lookup"><span data-stu-id="43bd2-187">After <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> is called, you can immediately obtain the view for the designer, because designer loaders must provide at least the root component when loading asynchronously.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="43bd2-188"><xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A>方法创建组件类型的实例，并为此实例初始化设计器。</span><span class="sxs-lookup"><span data-stu-id="43bd2-188">The <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> method creates an instance of the component type and initializes a designer for this instance.</span></span> <span data-ttu-id="43bd2-189"><xref:System.ComponentModel.Design.DesignSurface.Loaded>此方法返回前引发事件。</span><span class="sxs-lookup"><span data-stu-id="43bd2-189">The <xref:System.ComponentModel.Design.DesignSurface.Loaded> event is raised before this method returns.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="43bd2-190"><paramref name="rootComponentType" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="43bd2-190"><paramref name="rootComponentType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="43bd2-191">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</span><span class="sxs-lookup"><span data-stu-id="43bd2-191">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ComponentContainer">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IContainer ComponentContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IContainer ComponentContainer" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.ComponentContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ComponentContainer As IContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IContainer ^ ComponentContainer { System::ComponentModel::IContainer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ComponentContainer : System.ComponentModel.IContainer" Usage="System.ComponentModel.Design.DesignSurface.ComponentContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bd2-192">获取设计图面中的 <see cref="T:System.ComponentModel.IContainer" /> 实现。</span><span class="sxs-lookup"><span data-stu-id="43bd2-192">Gets the <see cref="T:System.ComponentModel.IContainer" /> implementation within the design surface.</span></span></summary>
        <value><span data-ttu-id="43bd2-193">设计图面中的 <see cref="T:System.ComponentModel.IContainer" /> 实现。</span><span class="sxs-lookup"><span data-stu-id="43bd2-193">The <see cref="T:System.ComponentModel.IContainer" /> implementation within the design surface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43bd2-194"><xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A>属性保存当前处于设计模式下的所有对象。</span><span class="sxs-lookup"><span data-stu-id="43bd2-194">The <xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A> property holds all objects that are currently in design mode.</span></span> <span data-ttu-id="43bd2-195">将组件添加到时 <xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A> ，将加载其设计器（如果有）。</span><span class="sxs-lookup"><span data-stu-id="43bd2-195">When components are added to <xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A>, their designer, if any, is loaded.</span></span> <span data-ttu-id="43bd2-196">该组件被放置在一个提供对设计图面的完全访问权限的站点上。</span><span class="sxs-lookup"><span data-stu-id="43bd2-196">The component is sited with a site that provides full access to the design surface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="43bd2-197">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</span><span class="sxs-lookup"><span data-stu-id="43bd2-197">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateComponent">
      <MemberSignature Language="C#" Value="protected internal virtual System.ComponentModel.IComponent CreateComponent (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ComponentModel.IComponent CreateComponent(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateComponent (componentType As Type) As IComponent" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::ComponentModel::IComponent ^ CreateComponent(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="abstract member CreateComponent : Type -&gt; System.ComponentModel.IComponent&#xA;override this.CreateComponent : Type -&gt; System.ComponentModel.IComponent" Usage="designSurface.CreateComponent componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Obsolete("CreateComponent has been replaced by CreateInstance and will be removed after Beta2")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("CreateComponent has been replaced by CreateInstance and will be removed after Beta2")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="43bd2-198">要创建的组件的类型。</span><span class="sxs-lookup"><span data-stu-id="43bd2-198">The type of component to create.</span></span></param>
        <summary><span data-ttu-id="43bd2-199">创建组件的实例。</span><span class="sxs-lookup"><span data-stu-id="43bd2-199">Creates an instance of a component.</span></span></summary>
        <returns><span data-ttu-id="43bd2-200">新创建的组件。</span><span class="sxs-lookup"><span data-stu-id="43bd2-200">The newly created component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43bd2-201"><xref:System.ComponentModel.Design.DesignSurface.CreateComponent%2A>方法由设计图面的 <xref:System.ComponentModel.Design.IDesignerHost.CreateComponent%2A> 方法调用以创建组件的实例。</span><span class="sxs-lookup"><span data-stu-id="43bd2-201">The <xref:System.ComponentModel.Design.DesignSurface.CreateComponent%2A> method is called by the design surface's <xref:System.ComponentModel.Design.IDesignerHost.CreateComponent%2A> method to create an instance of a component.</span></span> <span data-ttu-id="43bd2-202">应创建组件，并将其添加到设计图面上的公共容器中。</span><span class="sxs-lookup"><span data-stu-id="43bd2-202">The component should be created and added to the public container on the design surface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="43bd2-203"><paramref name="componentType" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="43bd2-203"><paramref name="componentType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="43bd2-204">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</span><span class="sxs-lookup"><span data-stu-id="43bd2-204">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDesigner">
      <MemberSignature Language="C#" Value="protected internal virtual System.ComponentModel.Design.IDesigner CreateDesigner (System.ComponentModel.IComponent component, bool rootDesigner);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ComponentModel.Design.IDesigner CreateDesigner(class System.ComponentModel.IComponent component, bool rootDesigner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateDesigner (component As IComponent, rootDesigner As Boolean) As IDesigner" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::ComponentModel::Design::IDesigner ^ CreateDesigner(System::ComponentModel::IComponent ^ component, bool rootDesigner);" />
      <MemberSignature Language="F#" Value="abstract member CreateDesigner : System.ComponentModel.IComponent * bool -&gt; System.ComponentModel.Design.IDesigner&#xA;override this.CreateDesigner : System.ComponentModel.IComponent * bool -&gt; System.ComponentModel.Design.IDesigner" Usage="designSurface.CreateDesigner (component, rootDesigner)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.IDesigner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="rootDesigner" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="43bd2-205">应为其创建设计器的组件。</span><span class="sxs-lookup"><span data-stu-id="43bd2-205">The component for which the designer should be created.</span></span></param>
        <param name="rootDesigner"><span data-ttu-id="43bd2-206"><see langword="true" /> 表示创建根设计器；<see langword="false" /> 表示创建普通设计器。</span><span class="sxs-lookup"><span data-stu-id="43bd2-206"><see langword="true" /> to create a root designer; <see langword="false" /> to create a normal designer.</span></span></param>
        <summary><span data-ttu-id="43bd2-207">在将组件添加到容器时创建设计器。</span><span class="sxs-lookup"><span data-stu-id="43bd2-207">Creates a designer when a component is added to the container.</span></span></summary>
        <returns><span data-ttu-id="43bd2-208">所请求的设计器的实例，如果找不到匹配的设计器，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="43bd2-208">An instance of the requested designer, or <see langword="null" /> if no matching designer could be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43bd2-209">将 <xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A> <xref:System.ComponentModel.IContainer> 组件添加到容器时，设计图面将调用方法。</span><span class="sxs-lookup"><span data-stu-id="43bd2-209">The <xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A> method is called by the design surface's <xref:System.ComponentModel.IContainer> when a component is added to the container.</span></span> <span data-ttu-id="43bd2-210">此方法将创建一个设计器，但不会对其进行初始化。</span><span class="sxs-lookup"><span data-stu-id="43bd2-210">This method creates a designer, but does not initialize it.</span></span> <span data-ttu-id="43bd2-211">当它返回时，由容器初始化设计器。</span><span class="sxs-lookup"><span data-stu-id="43bd2-211">When it returns, the designer is initialized by the container.</span></span>  
  
 <span data-ttu-id="43bd2-212"><xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A> 可创建两种不同类型的设计器：根设计器和正常设计器。</span><span class="sxs-lookup"><span data-stu-id="43bd2-212"><xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A> can create two different types of designers: root designers and normal designers.</span></span> <span data-ttu-id="43bd2-213">根设计器是设计图面中根组件的设计器，根据定义，它是添加到容器中的第一个组件。</span><span class="sxs-lookup"><span data-stu-id="43bd2-213">A root designer is a designer for the root component in the design surface, which by definition is the first component added to the container.</span></span> <span data-ttu-id="43bd2-214">根设计器不同于普通设计器，因为它们负责向最终用户显示的用户界面。</span><span class="sxs-lookup"><span data-stu-id="43bd2-214">Root designers differ from normal designers because they are responsible for the user interface presented to the end user.</span></span> <span data-ttu-id="43bd2-215">根设计器通常与设计图面上的其他设计器协调器来提供此接口。</span><span class="sxs-lookup"><span data-stu-id="43bd2-215">Root designers typically coordinate with the rest of the designers on a design surface to provide this interface.</span></span>  
  
 <span data-ttu-id="43bd2-216">此方法的默认实现将委托给 <xref:System.ComponentModel.TypeDescriptor> ，并传入 <xref:System.ComponentModel.Design.IRootDesigner> 作为根设计器的设计器类型或 <xref:System.ComponentModel.Design.IDesigner> 用于正常设计器。</span><span class="sxs-lookup"><span data-stu-id="43bd2-216">The default implementation of this method delegates to <xref:System.ComponentModel.TypeDescriptor>, passing in <xref:System.ComponentModel.Design.IRootDesigner> as the designer type for root designers, or <xref:System.ComponentModel.Design.IDesigner> for normal designers.</span></span> <span data-ttu-id="43bd2-217">可以重写此方法来请求特定类型的设计器。</span><span class="sxs-lookup"><span data-stu-id="43bd2-217">You can override this method to request a specific type of designer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="43bd2-218"><paramref name="component" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="43bd2-218"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="43bd2-219">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</span><span class="sxs-lookup"><span data-stu-id="43bd2-219">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected internal virtual object CreateInstance (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object CreateInstance(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateInstance (type As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ CreateInstance(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : Type -&gt; obj&#xA;override this.CreateInstance : Type -&gt; obj" Usage="designSurface.CreateInstance type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="43bd2-220">要创建的类型。</span><span class="sxs-lookup"><span data-stu-id="43bd2-220">The type to create.</span></span></param>
        <summary><span data-ttu-id="43bd2-221">创建给定类型的实例。</span><span class="sxs-lookup"><span data-stu-id="43bd2-221">Creates an instance of the given type.</span></span></summary>
        <returns><span data-ttu-id="43bd2-222">新创建的对象。</span><span class="sxs-lookup"><span data-stu-id="43bd2-222">The newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43bd2-223">如果 `type` 为 <xref:System.ComponentModel.IComponent> ，则 <xref:System.ComponentModel.Design.DesignSurface.CreateInstance%2A> 搜索类型为 first 的构造函数 <xref:System.ComponentModel.IContainer> ，后跟空构造函数。</span><span class="sxs-lookup"><span data-stu-id="43bd2-223">If `type` is an <xref:System.ComponentModel.IComponent>, <xref:System.ComponentModel.Design.DesignSurface.CreateInstance%2A> searches for a constructor of type <xref:System.ComponentModel.IContainer> first, followed by an empty constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="43bd2-224"><paramref name="type" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="43bd2-224"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="43bd2-225">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</span><span class="sxs-lookup"><span data-stu-id="43bd2-225">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateNestedContainer">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="43bd2-226">创建一个适合嵌套控件或组件的容器。</span><span class="sxs-lookup"><span data-stu-id="43bd2-226">Creates a container suitable for nesting controls or components.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateNestedContainer">
      <MemberSignature Language="C#" Value="public System.ComponentModel.INestedContainer CreateNestedContainer (System.ComponentModel.IComponent owningComponent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.INestedContainer CreateNestedContainer(class System.ComponentModel.IComponent owningComponent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateNestedContainer (owningComponent As IComponent) As INestedContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::INestedContainer ^ CreateNestedContainer(System::ComponentModel::IComponent ^ owningComponent);" />
      <MemberSignature Language="F#" Value="member this.CreateNestedContainer : System.ComponentModel.IComponent -&gt; System.ComponentModel.INestedContainer" Usage="designSurface.CreateNestedContainer owningComponent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.INestedContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owningComponent" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="owningComponent"><span data-ttu-id="43bd2-227">管理嵌套容器的组件。</span><span class="sxs-lookup"><span data-stu-id="43bd2-227">The component that manages the nested container.</span></span></param>
        <summary><span data-ttu-id="43bd2-228">创建一个适合嵌套控件或组件的容器。</span><span class="sxs-lookup"><span data-stu-id="43bd2-228">Creates a container suitable for nesting controls or components.</span></span></summary>
        <returns><span data-ttu-id="43bd2-229">嵌套容器。</span><span class="sxs-lookup"><span data-stu-id="43bd2-229">The nested container.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43bd2-230">如果将组件添加到嵌套容器，则将创建其设计器，并使其符合设计图面中可用的所有服务。</span><span class="sxs-lookup"><span data-stu-id="43bd2-230">Adding a component to a nested container creates its designer and makes it eligible for all services available from the design surface.</span></span> <span data-ttu-id="43bd2-231">添加到嵌套容器的组件不参与序列化。</span><span class="sxs-lookup"><span data-stu-id="43bd2-231">Components added to nested containers do not participate in serialization.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="43bd2-232"><paramref name="owningComponent" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="43bd2-232"><paramref name="owningComponent" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="43bd2-233">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</span><span class="sxs-lookup"><span data-stu-id="43bd2-233">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNestedContainer">
      <MemberSignature Language="C#" Value="public System.ComponentModel.INestedContainer CreateNestedContainer (System.ComponentModel.IComponent owningComponent, string containerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.INestedContainer CreateNestedContainer(class System.ComponentModel.IComponent owningComponent, string containerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateNestedContainer (owningComponent As IComponent, containerName As String) As INestedContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::INestedContainer ^ CreateNestedContainer(System::ComponentModel::IComponent ^ owningComponent, System::String ^ containerName);" />
      <MemberSignature Language="F#" Value="member this.CreateNestedContainer : System.ComponentModel.IComponent * string -&gt; System.ComponentModel.INestedContainer" Usage="designSurface.CreateNestedContainer (owningComponent, containerName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.INestedContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owningComponent" Type="System.ComponentModel.IComponent" />
        <Parameter Name="containerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owningComponent"><span data-ttu-id="43bd2-234">管理嵌套容器的组件。</span><span class="sxs-lookup"><span data-stu-id="43bd2-234">The component that manages the nested container.</span></span></param>
        <param name="containerName"><span data-ttu-id="43bd2-235">嵌套容器的其他名称。</span><span class="sxs-lookup"><span data-stu-id="43bd2-235">An additional name for the nested container.</span></span></param>
        <summary><span data-ttu-id="43bd2-236">创建一个适合嵌套控件或组件的容器。</span><span class="sxs-lookup"><span data-stu-id="43bd2-236">Creates a container suitable for nesting controls or components.</span></span></summary>
        <returns><span data-ttu-id="43bd2-237">嵌套容器。</span><span class="sxs-lookup"><span data-stu-id="43bd2-237">The nested container.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43bd2-238">如果将组件添加到嵌套容器，则将创建其设计器，并使其符合设计图面中可用的所有服务。</span><span class="sxs-lookup"><span data-stu-id="43bd2-238">Adding a component to a nested container creates its designer and makes it eligible for all services available from the design surface.</span></span> <span data-ttu-id="43bd2-239">添加到嵌套容器的组件不参与序列化。</span><span class="sxs-lookup"><span data-stu-id="43bd2-239">Components added to nested containers do not participate in serialization.</span></span>  
  
 <span data-ttu-id="43bd2-240">可以 <xref:System.ComponentModel.Design.DesignSurface.CreateNestedContainer%2A> 通过将值传递到来提供方法的其他名称 `containerName` 。</span><span class="sxs-lookup"><span data-stu-id="43bd2-240">You can provide an additional name for the <xref:System.ComponentModel.Design.DesignSurface.CreateNestedContainer%2A> method by passing a value into `containerName`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="43bd2-241"><paramref name="owningComponent" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="43bd2-241"><paramref name="owningComponent" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="43bd2-242">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</span><span class="sxs-lookup"><span data-stu-id="43bd2-242">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="43bd2-243">释放由 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 占用的资源。</span><span class="sxs-lookup"><span data-stu-id="43bd2-243">Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="designSurface.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="43bd2-244">释放由 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 占用的资源。</span><span class="sxs-lookup"><span data-stu-id="43bd2-244">Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43bd2-245">公共 <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> 方法遵循标准 <xref:System.IDisposable> 模式。</span><span class="sxs-lookup"><span data-stu-id="43bd2-245">The public <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> method follows the standard <xref:System.IDisposable> pattern.</span></span> <span data-ttu-id="43bd2-246">调用此方法会销毁设计图面。</span><span class="sxs-lookup"><span data-stu-id="43bd2-246">Calling this method destroys the design surface.</span></span> <span data-ttu-id="43bd2-247">此方法的受保护版本为 `virtual` ，并遵循正常 <xref:System.IDisposable> 模式。</span><span class="sxs-lookup"><span data-stu-id="43bd2-247">The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="43bd2-248">由于没有 <xref:System.ComponentModel.Design.DesignSurface> 要清理的本机代码，因此它没有调用的终结器 <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29> 。</span><span class="sxs-lookup"><span data-stu-id="43bd2-248">Because <xref:System.ComponentModel.Design.DesignSurface> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>.</span></span> <span data-ttu-id="43bd2-249">如果需要调用 <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29> ，则必须自行添加终结器。</span><span class="sxs-lookup"><span data-stu-id="43bd2-249">If you need to call <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>, you must add a finalizer yourself.</span></span>  
  
 <span data-ttu-id="43bd2-250">在完成使用 <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> 后，应调用 <xref:System.ComponentModel.Design.DesignSurface>。</span><span class="sxs-lookup"><span data-stu-id="43bd2-250">Call <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.DesignSurface>.</span></span> <span data-ttu-id="43bd2-251"><xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> 方法使 <xref:System.ComponentModel.Design.DesignSurface> 处于不可用状态。</span><span class="sxs-lookup"><span data-stu-id="43bd2-251">The <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.DesignSurface> in an unusable state.</span></span> <span data-ttu-id="43bd2-252">调用后 <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> ，必须释放对的所有引用， <xref:System.ComponentModel.Design.DesignSurface> 以便垃圾回收器能够回收占用的内存 <xref:System.ComponentModel.Design.DesignSurface> 。</span><span class="sxs-lookup"><span data-stu-id="43bd2-252">After calling <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.DesignSurface> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.DesignSurface> was occupying.</span></span> <span data-ttu-id="43bd2-253">有关详细信息，请参阅 [清理非托管资源](/dotnet/standard/garbage-collection/unmanaged) 和 [实现 Dispose 方法](/dotnet/standard/garbage-collection/implementing-dispose)。</span><span class="sxs-lookup"><span data-stu-id="43bd2-253">For more information, see [Cleaning Up Unmanaged Resources](/dotnet/standard/garbage-collection/unmanaged) and [Implementing a Dispose Method](/dotnet/standard/garbage-collection/implementing-dispose).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="43bd2-254">每次释放对 <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> 的最后一个引用前，均应调用 <xref:System.ComponentModel.Design.DesignSurface>。</span><span class="sxs-lookup"><span data-stu-id="43bd2-254">Always call <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.DesignSurface>.</span></span> <span data-ttu-id="43bd2-255">否则，在垃圾回收器调用 <xref:System.ComponentModel.Design.DesignSurface> 对象的 `Finalize` 方法之前，该对象正在使用的资源不会被释放。</span><span class="sxs-lookup"><span data-stu-id="43bd2-255">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.DesignSurface> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="designSurface.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="43bd2-256">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="43bd2-256"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="43bd2-257">释放由 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 占用的资源。</span><span class="sxs-lookup"><span data-stu-id="43bd2-257">Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43bd2-258">公共 <xref:System.ComponentModel.Design.DesignSurface.Dispose> 方法遵循标准 <xref:System.IDisposable> 模式。</span><span class="sxs-lookup"><span data-stu-id="43bd2-258">The public <xref:System.ComponentModel.Design.DesignSurface.Dispose> method follows the standard <xref:System.IDisposable> pattern.</span></span> <span data-ttu-id="43bd2-259">调用此方法会销毁设计图面。</span><span class="sxs-lookup"><span data-stu-id="43bd2-259">Calling this method destroys the design surface.</span></span> <span data-ttu-id="43bd2-260">此方法的受保护版本为 `virtual` ，并遵循正常 <xref:System.IDisposable> 模式。</span><span class="sxs-lookup"><span data-stu-id="43bd2-260">The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="43bd2-261">由于没有 <xref:System.ComponentModel.Design.DesignSurface> 要清理的本机代码，因此它没有调用的终结器 <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> 。</span><span class="sxs-lookup"><span data-stu-id="43bd2-261">Because <xref:System.ComponentModel.Design.DesignSurface> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>.</span></span> <span data-ttu-id="43bd2-262">如果需要调用 <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> ，则必须自行添加终结器。</span><span class="sxs-lookup"><span data-stu-id="43bd2-262">If you need to call <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>, you must add a finalizer yourself.</span></span>  
  
 <span data-ttu-id="43bd2-263">此方法由公共 `Dispose()` 方法和 <xref:System.Object.Finalize%2A> 方法调用。</span><span class="sxs-lookup"><span data-stu-id="43bd2-263">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="43bd2-264">`Dispose()` 调用受保护的 `Dispose(Boolean)` 方法，并将 `disposing` 参数设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="43bd2-264">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="43bd2-265"><xref:System.Object.Finalize%2A>`Dispose`在设置为的情况调用 `disposing` `false` 。</span><span class="sxs-lookup"><span data-stu-id="43bd2-265"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="43bd2-266">当 `disposing` 参数为 true 时，此方法释放该引用的任何托管对象所持有的所有资源 <xref:System.ComponentModel.Design.DesignSurface> 。</span><span class="sxs-lookup"><span data-stu-id="43bd2-266">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.DesignSurface> references.</span></span> <span data-ttu-id="43bd2-267">此方法将调用每个被引用对象的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="43bd2-267">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="43bd2-268">
            <see langword="Dispose" /> 可以由其他对象多次调用。</span><span class="sxs-lookup"><span data-stu-id="43bd2-268">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="43bd2-269">当重写时， <see langword="Dispose(Boolean)" /> 请注意不要引用先前在调用时已释放的对象 <see langword="Dispose" /> 。</span><span class="sxs-lookup"><span data-stu-id="43bd2-269">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="43bd2-270">有关如何实现的详细信息 <see langword="Dispose(Boolean)" /> ，请参阅 [实现 Dispose 方法](/dotnet/standard/garbage-collection/implementing-dispose)。</span><span class="sxs-lookup"><span data-stu-id="43bd2-270">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](/dotnet/standard/garbage-collection/implementing-dispose).</span></span>  
  
<span data-ttu-id="43bd2-271">有关和的详细 <see langword="Dispose" /> 信息 <see cref="M:System.Object.Finalize" /> ，请参阅 [清理非托管资源](/dotnet/standard/garbage-collection/unmanaged) 和 [重写 Finalize 方法](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="43bd2-271">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](/dotnet/standard/garbage-collection/unmanaged) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Disposed">
      <MemberSignature Language="C#" Value="public event EventHandler Disposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Disposed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Disposed" />
      <MemberSignature Language="VB.NET" Value="Public Event Disposed As EventHandler " FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Disposed;" />
      <MemberSignature Language="F#" Value="member this.Disposed : EventHandler " Usage="member this.Disposed : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Disposed As EventHandler " FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bd2-272">在释放设计图面时发生。</span><span class="sxs-lookup"><span data-stu-id="43bd2-272">Occurs when the design surface is disposed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43bd2-273">仅当调用上的公共方法时，才会释放图面 <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> <xref:System.ComponentModel.Design.DesignSurface> 。</span><span class="sxs-lookup"><span data-stu-id="43bd2-273">The surface is only disposed when the public <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> method on <xref:System.ComponentModel.Design.DesignSurface> is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DtelLoading">
      <MemberSignature Language="C#" Value="public bool DtelLoading { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DtelLoading" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.DtelLoading" />
      <MemberSignature Language="VB.NET" Value="Public Property DtelLoading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DtelLoading { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DtelLoading : bool with get, set" Usage="System.ComponentModel.Design.DesignSurface.DtelLoading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bd2-274">获取一个值，该值指示是否正在加载“设计时错误列表”\*\*\*\*。</span><span class="sxs-lookup"><span data-stu-id="43bd2-274">Gets a value indicating whether the **Design-time Error List** is loading.</span></span></summary>
        <value><span data-ttu-id="43bd2-275"><see langword="true" /> 如果正在加载 **设计时错误列表** ，则为;否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="43bd2-275"><see langword="true" /> if the **Design-time Error List** is loading; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/framework/winforms/controls/design-time-errors-in-the-windows-forms-designer"><span data-ttu-id="43bd2-276">Windows 窗体设计器中的设计时错误</span><span class="sxs-lookup"><span data-stu-id="43bd2-276">Design-Time Errors in the Windows Forms Designer</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="designSurface.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="43bd2-277">序列化对设计图面的更改。</span><span class="sxs-lookup"><span data-stu-id="43bd2-277">Serializes changes to the design surface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43bd2-278"><xref:System.ComponentModel.Design.DesignSurface.Flush%2A>可以调用方法，将对设计图面的更改向下推送到序列化程序。</span><span class="sxs-lookup"><span data-stu-id="43bd2-278">The <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> method can be called to push changes made to the design surface down to the serializer.</span></span> <span data-ttu-id="43bd2-279">这可确保设计图面及其序列化状态已同步。</span><span class="sxs-lookup"><span data-stu-id="43bd2-279">This ensures that the design surface and its serialized state are synchronized.</span></span> <span data-ttu-id="43bd2-280">此方法的实际实现将转发到与设计图面关联的设计器加载程序。</span><span class="sxs-lookup"><span data-stu-id="43bd2-280">The actual implementation of this method is forwarded to the designer loader associated with design surface.</span></span> <span data-ttu-id="43bd2-281">设计器加载程序可以选择在调用之前延迟更改 <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> ，也可以选择将序列化的数据与所有用户更改保持为最新状态。</span><span class="sxs-lookup"><span data-stu-id="43bd2-281">The designer loader may choose to defer changes until <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> is called, or it may choose to keep the serialized data up to date with all user changes.</span></span> <span data-ttu-id="43bd2-282"><xref:System.ComponentModel.Design.DesignSurface.Flush%2A>方法可确保无论设计器加载器选择使用哪种模型，序列化状态都与实际的设计图面同步。</span><span class="sxs-lookup"><span data-stu-id="43bd2-282">The <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> method ensures that regardless of the model the designer loader chooses to use, the serialized state is synchronized with the actual design surface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flushed">
      <MemberSignature Language="C#" Value="public event EventHandler Flushed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Flushed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Flushed" />
      <MemberSignature Language="VB.NET" Value="Public Event Flushed As EventHandler " FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Flushed;" />
      <MemberSignature Language="F#" Value="member this.Flushed : EventHandler " Usage="member this.Flushed : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Flushed As EventHandler " FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bd2-283">调用 <see cref="M:System.ComponentModel.Design.DesignSurface.Flush" /> 的 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 方法时发生。</span><span class="sxs-lookup"><span data-stu-id="43bd2-283">Occurs when a call is made to the <see cref="M:System.ComponentModel.Design.DesignSurface.Flush" /> method of <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43bd2-284">首先刷新设计器加载程序，然后 <xref:System.ComponentModel.Design.DesignSurface.Flushed> 引发事件。</span><span class="sxs-lookup"><span data-stu-id="43bd2-284">The designer loader is flushed first, and then the <xref:System.ComponentModel.Design.DesignSurface.Flushed> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj&#xA;override this.GetService : Type -&gt; obj" Usage="designSurface.GetService serviceType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IServiceProvider.GetService(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="43bd2-285">要检索的服务类型。</span><span class="sxs-lookup"><span data-stu-id="43bd2-285">The type of service to retrieve.</span></span></param>
        <summary><span data-ttu-id="43bd2-286">从服务容器中获取服务。</span><span class="sxs-lookup"><span data-stu-id="43bd2-286">Gets a service from the service container.</span></span></summary>
        <returns><span data-ttu-id="43bd2-287">实现 <paramref name="serviceType" /> 或作为其派生类的对象，如果服务容器中不存在该服务，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="43bd2-287">An object that implements, or is a derived class of, <paramref name="serviceType" />, or <see langword="null" /> if the service does not exist in the service container.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43bd2-288"><xref:System.ComponentModel.Design.DesignSurface.GetService%2A>方法检索设计图面的服务容器中的服务。</span><span class="sxs-lookup"><span data-stu-id="43bd2-288">The <xref:System.ComponentModel.Design.DesignSurface.GetService%2A> method retrieves a service in the design surface's service container.</span></span> <span data-ttu-id="43bd2-289">此外，此操作还会转发到在构造时提供给设计图面的任何服务提供程序。</span><span class="sxs-lookup"><span data-stu-id="43bd2-289">In addition, this will forward to any service provider that was given to the design surface at construction time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLoaded">
      <MemberSignature Language="C#" Value="public bool IsLoaded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLoaded" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.IsLoaded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLoaded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLoaded { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLoaded : bool" Usage="System.ComponentModel.Design.DesignSurface.IsLoaded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bd2-290">获取一个值，该值指示当前是否正在加载设计图面。</span><span class="sxs-lookup"><span data-stu-id="43bd2-290">Gets a value indicating whether the design surface is currently loaded.</span></span></summary>
        <value><span data-ttu-id="43bd2-291">如果当前正在加载设计图面，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="43bd2-291"><see langword="true" /> if the design surface is currently loaded; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Loaded">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.Design.LoadedEventHandler Loaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.LoadedEventHandler Loaded" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Loaded" />
      <MemberSignature Language="VB.NET" Value="Public Event Loaded As LoadedEventHandler " FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::LoadedEventHandler ^ Loaded;" />
      <MemberSignature Language="F#" Value="member this.Loaded : System.ComponentModel.Design.LoadedEventHandler " Usage="member this.Loaded : System.ComponentModel.Design.LoadedEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Loaded As LoadedEventHandler " FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.LoadedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bd2-292">在设计器加载完成时发生。</span><span class="sxs-lookup"><span data-stu-id="43bd2-292">Occurs when the designer load has completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43bd2-293">如果 <xref:System.ComponentModel.Design.DesignSurface.Loaded> 成功加载，则会引发事件。</span><span class="sxs-lookup"><span data-stu-id="43bd2-293">The <xref:System.ComponentModel.Design.DesignSurface.Loaded> event is raised for successful loads as well as unsuccessful ones.</span></span> <span data-ttu-id="43bd2-294">如果此事件处理程序中的代码引发异常，则将卸载设计器。</span><span class="sxs-lookup"><span data-stu-id="43bd2-294">If code in this event handler throws an exception, the designer is unloaded.</span></span>  
  
 <span data-ttu-id="43bd2-295"><xref:System.ComponentModel.Design.LoadedEventArgs>对象可用于确定加载是否成功，还可以提供在加载过程中发生的错误的列表。</span><span class="sxs-lookup"><span data-stu-id="43bd2-295">The <xref:System.ComponentModel.Design.LoadedEventArgs> object can be used to determine if loading succeeded, and it can also provide a list of errors that occurred during the load.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="43bd2-296">如果序列化系统可以容忍错误，则也可能会发生成功的加载错误。</span><span class="sxs-lookup"><span data-stu-id="43bd2-296">Errors can occur for successful loads as well, provided that the serialization system can tolerate errors.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadErrors">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection LoadErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection LoadErrors" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.LoadErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LoadErrors As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ LoadErrors { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LoadErrors : System.Collections.ICollection" Usage="System.ComponentModel.Design.DesignSurface.LoadErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bd2-297">返回加载错误的集合或空集合。</span><span class="sxs-lookup"><span data-stu-id="43bd2-297">Returns a collection of loading errors or a void collection.</span></span></summary>
        <value><span data-ttu-id="43bd2-298">加载错误的 <see cref="T:System.Collections.ICollection" />。</span><span class="sxs-lookup"><span data-stu-id="43bd2-298">A <see cref="T:System.Collections.ICollection" /> of loading errors.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Loading">
      <MemberSignature Language="C#" Value="public event EventHandler Loading;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Loading" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Loading" />
      <MemberSignature Language="VB.NET" Value="Public Event Loading As EventHandler " FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Loading;" />
      <MemberSignature Language="F#" Value="member this.Loading : EventHandler " Usage="member this.Loading : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Loading As EventHandler " FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bd2-299">在将要加载设计器时发生。</span><span class="sxs-lookup"><span data-stu-id="43bd2-299">Occurs when the designer is about to be loaded.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLoaded">
      <MemberSignature Language="C#" Value="protected virtual void OnLoaded (System.ComponentModel.Design.LoadedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoaded(class System.ComponentModel.Design.LoadedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoaded (e As LoadedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoaded(System::ComponentModel::Design::LoadedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoaded : System.ComponentModel.Design.LoadedEventArgs -&gt; unit&#xA;override this.OnLoaded : System.ComponentModel.Design.LoadedEventArgs -&gt; unit" Usage="designSurface.OnLoaded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.LoadedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="43bd2-300">包含事件数据的 <see cref="T:System.ComponentModel.Design.LoadedEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="43bd2-300">A <see cref="T:System.ComponentModel.Design.LoadedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="43bd2-301">引发 <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="43bd2-301">Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLoading">
      <MemberSignature Language="C#" Value="protected virtual void OnLoading (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoading(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoading (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoading(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoading : EventArgs -&gt; unit&#xA;override this.OnLoading : EventArgs -&gt; unit" Usage="designSurface.OnLoading e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="43bd2-302">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="43bd2-302">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="43bd2-303">引发 <see cref="E:System.ComponentModel.Design.DesignSurface.Loading" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="43bd2-303">Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.Loading" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnloaded">
      <MemberSignature Language="C#" Value="protected virtual void OnUnloaded (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUnloaded(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUnloaded (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUnloaded(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUnloaded : EventArgs -&gt; unit&#xA;override this.OnUnloaded : EventArgs -&gt; unit" Usage="designSurface.OnUnloaded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="43bd2-304">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="43bd2-304">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="43bd2-305">引发 <see cref="E:System.ComponentModel.Design.DesignSurface.Unloaded" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="43bd2-305">Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.Unloaded" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnloading">
      <MemberSignature Language="C#" Value="protected virtual void OnUnloading (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUnloading(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUnloading (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUnloading(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUnloading : EventArgs -&gt; unit&#xA;override this.OnUnloading : EventArgs -&gt; unit" Usage="designSurface.OnUnloading e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="43bd2-306">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="43bd2-306">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="43bd2-307">引发 <see cref="E:System.ComponentModel.Design.DesignSurface.Unloading" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="43bd2-307">Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.Unloading" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnViewActivate">
      <MemberSignature Language="C#" Value="protected virtual void OnViewActivate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnViewActivate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnViewActivate (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnViewActivate(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnViewActivate : EventArgs -&gt; unit&#xA;override this.OnViewActivate : EventArgs -&gt; unit" Usage="designSurface.OnViewActivate e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="43bd2-308">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="43bd2-308">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="43bd2-309">引发 <see cref="E:System.ComponentModel.Design.DesignSurface.ViewActivated" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="43bd2-309">Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.ViewActivated" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceContainer">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.ServiceContainer ServiceContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.ServiceContainer ServiceContainer" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.ServiceContainer" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ServiceContainer As ServiceContainer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::Design::ServiceContainer ^ ServiceContainer { System::ComponentModel::Design::ServiceContainer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceContainer : System.ComponentModel.Design.ServiceContainer" Usage="System.ComponentModel.Design.DesignSurface.ServiceContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ServiceContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bd2-310">获取服务容器。</span><span class="sxs-lookup"><span data-stu-id="43bd2-310">Gets the service container.</span></span></summary>
        <value><span data-ttu-id="43bd2-311">为设计图面中包含的设计器提供所有服务的服务容器。</span><span class="sxs-lookup"><span data-stu-id="43bd2-311">The service container that provides all services to designers contained within the design surface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43bd2-312">在构造时， <xref:System.ComponentModel.Design.DesignSurface> 将默认服务添加到此服务容器中。</span><span class="sxs-lookup"><span data-stu-id="43bd2-312">At construction time, <xref:System.ComponentModel.Design.DesignSurface> adds default services into this service container.</span></span> <span data-ttu-id="43bd2-313">你可以保留默认服务的当前状态，也可以删除它们并将其替换为你自己的服务。</span><span class="sxs-lookup"><span data-stu-id="43bd2-313">You can leave the default services in their present state, or you can remove them and replace them with your own.</span></span> <span data-ttu-id="43bd2-314">默认服务都是按需创建的，因此在构造时添加它们的性能没有损失。</span><span class="sxs-lookup"><span data-stu-id="43bd2-314">The default services are all demand-created, so there is no loss in performance for adding them at construction time.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="43bd2-315">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</span><span class="sxs-lookup"><span data-stu-id="43bd2-315">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Unloaded">
      <MemberSignature Language="C#" Value="public event EventHandler Unloaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Unloaded" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Unloaded" />
      <MemberSignature Language="VB.NET" Value="Public Event Unloaded As EventHandler " FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Unloaded;" />
      <MemberSignature Language="F#" Value="member this.Unloaded : EventHandler " Usage="member this.Unloaded : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Unloaded As EventHandler " FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bd2-316">在设计器完成卸载时发生。</span><span class="sxs-lookup"><span data-stu-id="43bd2-316">Occurs when a designer has finished unloading.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unloading">
      <MemberSignature Language="C#" Value="public event EventHandler Unloading;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Unloading" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Unloading" />
      <MemberSignature Language="VB.NET" Value="Public Event Unloading As EventHandler " FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Unloading;" />
      <MemberSignature Language="F#" Value="member this.Unloading : EventHandler " Usage="member this.Unloading : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Unloading As EventHandler " FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bd2-317">在设计器将要卸载时发生。</span><span class="sxs-lookup"><span data-stu-id="43bd2-317">Occurs when a designer is about to unload.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43bd2-318">当设计器卸载时，将销毁该设计器的整个状态，包括设计器的视图。</span><span class="sxs-lookup"><span data-stu-id="43bd2-318">When a designer unloads, the entire state for that designer is destroyed, including the designer's view.</span></span> <span data-ttu-id="43bd2-319">此时，视图应为 unparented。</span><span class="sxs-lookup"><span data-stu-id="43bd2-319">The view should be unparented at this time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="public object View { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object View" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.View" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property View As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ View { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.View : obj" Usage="System.ComponentModel.Design.DesignSurface.View" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bd2-320">获取根设计器的视图。</span><span class="sxs-lookup"><span data-stu-id="43bd2-320">Gets the view for the root designer.</span></span></summary>
        <value><span data-ttu-id="43bd2-321">根设计器的视图。</span><span class="sxs-lookup"><span data-stu-id="43bd2-321">The view for the root designer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43bd2-322"><xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A>必须事先调用方法以启动加载过程。</span><span class="sxs-lookup"><span data-stu-id="43bd2-322">The <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> method must be called beforehand to start the loading process.</span></span> <span data-ttu-id="43bd2-323">可以在设计器加载程序完成加载之前返回视图，因为提供视图的根设计器是设计器加载程序创建的第一个对象。</span><span class="sxs-lookup"><span data-stu-id="43bd2-323">It is possible to return a view before the designer loader finishes loading because the root designer, which supplies the view, is the first object created by the designer loader.</span></span> <span data-ttu-id="43bd2-324">如果视图不可用，将 <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> 引发异常。</span><span class="sxs-lookup"><span data-stu-id="43bd2-324">If a view is unavailable, <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> raises an exception.</span></span>  
  
 <span data-ttu-id="43bd2-325">视图技术的概念已过时。</span><span class="sxs-lookup"><span data-stu-id="43bd2-325">The notion of a view technology is obsolete.</span></span> <span data-ttu-id="43bd2-326">但它仍保留在根设计器的接口中，以实现向后兼容性。</span><span class="sxs-lookup"><span data-stu-id="43bd2-326">But, it remains in the interfaces for root designers for backward compatibility.</span></span> <span data-ttu-id="43bd2-327">使用对象的任何人都不会看到其使用情况 <xref:System.ComponentModel.Design.DesignSurface> 。</span><span class="sxs-lookup"><span data-stu-id="43bd2-327">Its use is hidden from anyone using <xref:System.ComponentModel.Design.DesignSurface> objects.</span></span> <span data-ttu-id="43bd2-328"><xref:System.ComponentModel.Design.DesignSurface.View%2A>属性通过将支持的技术传递回根设计器来隐藏视图技术。</span><span class="sxs-lookup"><span data-stu-id="43bd2-328">The <xref:System.ComponentModel.Design.DesignSurface.View%2A> property hides view technologies by passing the supported technologies back into the root designer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43bd2-329">下面的代码示例演示如何 <xref:System.ComponentModel.Design.DesignSurface.View%2A> 隐藏视图技术。</span><span class="sxs-lookup"><span data-stu-id="43bd2-329">The following code example shows how <xref:System.ComponentModel.Design.DesignSurface.View%2A> hides view technologies.</span></span>  
  
 ```csharp 
 IRootDesigner d;  
  
 ViewTechnology[] supported = d.SupportedTechnologies;  
  
 return d.GetView(supported[0]);
 ``` 
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="43bd2-330">设计图面当前未加载，设计器加载程序尚未创建根设计器，或者设计图面虽已完成加载，但加载失败。</span><span class="sxs-lookup"><span data-stu-id="43bd2-330">The design surface is not loading, the designer loader has not yet created a root designer, or the design surface finished the load, but failed.</span></span> <span data-ttu-id="43bd2-331">在 <see cref="P:System.Exception.InnerException" /> 中可能提供了更多信息。</span><span class="sxs-lookup"><span data-stu-id="43bd2-331">More information may available in the <see cref="P:System.Exception.InnerException" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="43bd2-332">设计器已加载，但是它没有提供与此设计图面兼容的视图。</span><span class="sxs-lookup"><span data-stu-id="43bd2-332">The designer loaded, but it does not offer a view compatible with this design surface.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="43bd2-333">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</span><span class="sxs-lookup"><span data-stu-id="43bd2-333">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ViewActivated">
      <MemberSignature Language="C#" Value="public event EventHandler ViewActivated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ViewActivated" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.ViewActivated" />
      <MemberSignature Language="VB.NET" Value="Public Event ViewActivated As EventHandler " FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ViewActivated;" />
      <MemberSignature Language="F#" Value="member this.ViewActivated : EventHandler " Usage="member this.ViewActivated : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ViewActivated As EventHandler " FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43bd2-334">在 <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> 上已调用 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 方法时发生。</span><span class="sxs-lookup"><span data-stu-id="43bd2-334">Occurs when the <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> method has been called on <see cref="T:System.ComponentModel.Design.IDesignerHost" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43bd2-335">如果要支持 <xref:System.ComponentModel.Design.IDesignerHost.Activate%2A> 方法，事件处理程序应为此设计图面激活窗口。</span><span class="sxs-lookup"><span data-stu-id="43bd2-335">If you want to support the <xref:System.ComponentModel.Design.IDesignerHost.Activate%2A> method, your event handler should activate the window for this design surface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
  </Members>
</Type>
