<Type Name="ITypeResolutionService" FullName="System.ComponentModel.Design.ITypeResolutionService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e4d88dc6632b95c0fe8af4d0e9eee8a318065f7e" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89940515" /></Metadata><TypeSignature Language="C#" Value="public interface ITypeResolutionService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypeResolutionService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ITypeResolutionService" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITypeResolutionService" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITypeResolutionService" />
  <TypeSignature Language="F#" Value="type ITypeResolutionService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.ComponentModel.TypeConverter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="21eaa-101">提供按名称检索程序集或类型的接口。</span><span class="sxs-lookup"><span data-stu-id="21eaa-101">Provides an interface to retrieve an assembly or type by name.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21eaa-102">此服务用于在设计时加载类型。</span><span class="sxs-lookup"><span data-stu-id="21eaa-102">This service is used to load types at design time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21eaa-103">下面的示例控件提供一个接口，用于 <xref:System.ComponentModel.Design.ITypeResolutionService> 从设计模式调用的方法。</span><span class="sxs-lookup"><span data-stu-id="21eaa-103">The following example control provides an interface to call methods of the <xref:System.ComponentModel.Design.ITypeResolutionService> from design mode.</span></span>  
  
 [!code-cpp[ITypeResolutionServiceExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ITypeResolutionServiceExample/CPP/ityperesolutionservicecontrol.cpp#1)]
 [!code-csharp[ITypeResolutionServiceExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ITypeResolutionServiceExample/CS/ityperesolutionservicecontrol.cs#1)]
 [!code-vb[ITypeResolutionServiceExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ITypeResolutionServiceExample/VB/ityperesolutionservicecontrol.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="GetAssembly">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="21eaa-104">获取请求的程序集。</span><span class="sxs-lookup"><span data-stu-id="21eaa-104">Gets the requested assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly GetAssembly (System.Reflection.AssemblyName name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly GetAssembly(class System.Reflection.AssemblyName name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAssembly (name As AssemblyName) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ GetAssembly(System::Reflection::AssemblyName ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetAssembly : System.Reflection.AssemblyName -&gt; System.Reflection.Assembly" Usage="iTypeResolutionService.GetAssembly name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="21eaa-105">要检索的程序集的名称。</span><span class="sxs-lookup"><span data-stu-id="21eaa-105">The name of the assembly to retrieve.</span></span></param>
        <summary><span data-ttu-id="21eaa-106">获取请求的程序集。</span><span class="sxs-lookup"><span data-stu-id="21eaa-106">Gets the requested assembly.</span></span></summary>
        <returns><span data-ttu-id="21eaa-107">所请求的程序集的实例，或者如果找不到任何程序集，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="21eaa-107">An instance of the requested assembly, or <see langword="null" /> if no assembly can be located.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly GetAssembly (System.Reflection.AssemblyName name, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly GetAssembly(class System.Reflection.AssemblyName name, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAssembly (name As AssemblyName, throwOnError As Boolean) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ GetAssembly(System::Reflection::AssemblyName ^ name, bool throwOnError);" />
      <MemberSignature Language="F#" Value="abstract member GetAssembly : System.Reflection.AssemblyName * bool -&gt; System.Reflection.Assembly" Usage="iTypeResolutionService.GetAssembly (name, throwOnError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="21eaa-108">要检索的程序集的名称。</span><span class="sxs-lookup"><span data-stu-id="21eaa-108">The name of the assembly to retrieve.</span></span></param>
        <param name="throwOnError"><span data-ttu-id="21eaa-109">如果在无法找到程序集时此方法应引发异常，则为 <see langword="true" />；否则为 <see langword="false" />，而且当无法找到程序集时，此方法将返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="21eaa-109"><see langword="true" /> if this method should throw an exception if the assembly cannot be located; otherwise, <see langword="false" />, and this method returns <see langword="null" /> if the assembly cannot be located.</span></span></param>
        <summary><span data-ttu-id="21eaa-110">获取请求的程序集。</span><span class="sxs-lookup"><span data-stu-id="21eaa-110">Gets the requested assembly.</span></span></summary>
        <returns><span data-ttu-id="21eaa-111">所请求的程序集的实例，或者如果找不到任何程序集，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="21eaa-111">An instance of the requested assembly, or <see langword="null" /> if no assembly can be located.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPathOfAssembly">
      <MemberSignature Language="C#" Value="public string GetPathOfAssembly (System.Reflection.AssemblyName name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPathOfAssembly(class System.Reflection.AssemblyName name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeResolutionService.GetPathOfAssembly(System.Reflection.AssemblyName)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPathOfAssembly (name As AssemblyName) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPathOfAssembly(System::Reflection::AssemblyName ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetPathOfAssembly : System.Reflection.AssemblyName -&gt; string" Usage="iTypeResolutionService.GetPathOfAssembly name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="21eaa-112">程序集的名称。</span><span class="sxs-lookup"><span data-stu-id="21eaa-112">The name of the assembly.</span></span></param>
        <summary><span data-ttu-id="21eaa-113">获取从中加载程序集的文件的路径。</span><span class="sxs-lookup"><span data-stu-id="21eaa-113">Gets the path to the file from which the assembly was loaded.</span></span></summary>
        <returns><span data-ttu-id="21eaa-114">从中加载程序集的文件的路径。</span><span class="sxs-lookup"><span data-stu-id="21eaa-114">The path to the file from which the assembly was loaded.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetType">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="21eaa-115">用指定的名称加载类型。</span><span class="sxs-lookup"><span data-stu-id="21eaa-115">Loads a type with the specified name.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (name As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetType : string -&gt; Type" Usage="iTypeResolutionService.GetType name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="21eaa-116">类型的名称。</span><span class="sxs-lookup"><span data-stu-id="21eaa-116">The name of the type.</span></span> <span data-ttu-id="21eaa-117">如果类型名不是指示程序集的完全限定名，则此服务将搜索其引用的程序集的内部集合。</span><span class="sxs-lookup"><span data-stu-id="21eaa-117">If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.</span></span></param>
        <summary><span data-ttu-id="21eaa-118">用指定的名称加载类型。</span><span class="sxs-lookup"><span data-stu-id="21eaa-118">Loads a type with the specified name.</span></span></summary>
        <returns><span data-ttu-id="21eaa-119">与指定名称对应的 <see cref="T:System.Type" /> 的实例，或者如果找不到任何类型，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="21eaa-119">An instance of <see cref="T:System.Type" /> that corresponds to the specified name, or <see langword="null" /> if no type can be found.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string name, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (name As String, throwOnError As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ name, bool throwOnError);" />
      <MemberSignature Language="F#" Value="abstract member GetType : string * bool -&gt; Type" Usage="iTypeResolutionService.GetType (name, throwOnError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="21eaa-120">类型的名称。</span><span class="sxs-lookup"><span data-stu-id="21eaa-120">The name of the type.</span></span> <span data-ttu-id="21eaa-121">如果类型名不是指示程序集的完全限定名，则此服务将搜索其引用的程序集的内部集合。</span><span class="sxs-lookup"><span data-stu-id="21eaa-121">If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.</span></span></param>
        <param name="throwOnError"><span data-ttu-id="21eaa-122">如果在无法找到程序集时此方法应引发异常，则为 <see langword="true" />；否则为 <see langword="false" />，而且当无法找到程序集时，此方法将返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="21eaa-122"><see langword="true" /> if this method should throw an exception if the assembly cannot be located; otherwise, <see langword="false" />, and this method returns <see langword="null" /> if the assembly cannot be located.</span></span></param>
        <summary><span data-ttu-id="21eaa-123">用指定的名称加载类型。</span><span class="sxs-lookup"><span data-stu-id="21eaa-123">Loads a type with the specified name.</span></span></summary>
        <returns><span data-ttu-id="21eaa-124">与指定名称对应的 <see cref="T:System.Type" /> 的实例，或者如果找不到任何类型，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="21eaa-124">An instance of <see cref="T:System.Type" /> that corresponds to the specified name, or <see langword="null" /> if no type can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21eaa-125">如果无法加载该类型，并且 `throwOnError` 参数为 `true` ，则将引发异常。</span><span class="sxs-lookup"><span data-stu-id="21eaa-125">If the type cannot be loaded and the `throwOnError` parameter is `true`, this will throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string name, bool throwOnError, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name, bool throwOnError, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (name As String, throwOnError As Boolean, ignoreCase As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ name, bool throwOnError, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="abstract member GetType : string * bool * bool -&gt; Type" Usage="iTypeResolutionService.GetType (name, throwOnError, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="21eaa-126">类型的名称。</span><span class="sxs-lookup"><span data-stu-id="21eaa-126">The name of the type.</span></span> <span data-ttu-id="21eaa-127">如果类型名不是指示程序集的完全限定名，则此服务将搜索其引用的程序集的内部集合。</span><span class="sxs-lookup"><span data-stu-id="21eaa-127">If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.</span></span></param>
        <param name="throwOnError"><span data-ttu-id="21eaa-128">如果在无法找到程序集时此方法应引发异常，则为 <see langword="true" />；否则为 <see langword="false" />，而且当无法找到程序集时，此方法将返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="21eaa-128"><see langword="true" /> if this method should throw an exception if the assembly cannot be located; otherwise, <see langword="false" />, and this method returns <see langword="null" /> if the assembly cannot be located.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="21eaa-129">如果为 <see langword="true" />，则在搜索类型时忽略大小写；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="21eaa-129"><see langword="true" /> to ignore case when searching for types; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="21eaa-130">用指定的名称加载类型。</span><span class="sxs-lookup"><span data-stu-id="21eaa-130">Loads a type with the specified name.</span></span></summary>
        <returns><span data-ttu-id="21eaa-131">与指定名称对应的 <see cref="T:System.Type" /> 的实例，或者如果找不到任何类型，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="21eaa-131">An instance of <see cref="T:System.Type" /> that corresponds to the specified name, or <see langword="null" /> if no type can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21eaa-132">如果无法加载该类型，并且 `throwOnError` 参数为 `true` ，则将引发异常。</span><span class="sxs-lookup"><span data-stu-id="21eaa-132">If the type cannot be loaded and the `throwOnError` parameter is `true`, this will throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceAssembly">
      <MemberSignature Language="C#" Value="public void ReferenceAssembly (System.Reflection.AssemblyName name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReferenceAssembly(class System.Reflection.AssemblyName name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeResolutionService.ReferenceAssembly(System.Reflection.AssemblyName)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReferenceAssembly (name As AssemblyName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReferenceAssembly(System::Reflection::AssemblyName ^ name);" />
      <MemberSignature Language="F#" Value="abstract member ReferenceAssembly : System.Reflection.AssemblyName -&gt; unit" Usage="iTypeResolutionService.ReferenceAssembly name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="21eaa-133">此 <see cref="T:System.Reflection.AssemblyName" /> 指示要引用的程序集。</span><span class="sxs-lookup"><span data-stu-id="21eaa-133">An <see cref="T:System.Reflection.AssemblyName" /> that indicates the assembly to reference.</span></span></param>
        <summary><span data-ttu-id="21eaa-134">将引用添加到指定程序集中。</span><span class="sxs-lookup"><span data-stu-id="21eaa-134">Adds a reference to the specified assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21eaa-135">将对程序集的引用添加到此服务后，此服务可以从未指定程序集的名称加载类型。</span><span class="sxs-lookup"><span data-stu-id="21eaa-135">Once a reference to an assembly has been added to this service, this service can load types from names that do not specify an assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.AssemblyName" />
      </Docs>
    </Member>
  </Members>
</Type>
