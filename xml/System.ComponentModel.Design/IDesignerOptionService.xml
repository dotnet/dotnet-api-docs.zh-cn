<Type Name="IDesignerOptionService" FullName="System.ComponentModel.Design.IDesignerOptionService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7f96b33271868e6344886ee2ed88b7a6e1be8222" /><Meta Name="ms.sourcegitcommit" Value="f828282420515ef705e09bbdb6c22116df98b5e3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="83469946" /></Metadata><TypeSignature Language="C#" Value="public interface IDesignerOptionService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerOptionService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IDesignerOptionService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerOptionService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerOptionService" />
  <TypeSignature Language="F#" Value="type IDesignerOptionService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.ComponentModel.TypeConverter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Interfaces />
  <Docs>
    <summary>提供对设计器选项的访问；在 Visual Studio 开发环境中，设计器选项位于“选项”命令下的“工具”菜单上。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.IDesignerOptionService>提供一个接口，该接口可用于检索和更新 Windows 窗体设计器选项的值，这些选项列在 Visual Studio 开发环境的 "**工具**" 菜单的 "**选项**" 命令所显示的对话框中。 <xref:System.ComponentModel.Design.IDesignerOptionService.GetOptionValue%2A>方法检索指定选项的值。 <xref:System.ComponentModel.Design.IDesignerOptionService.SetOptionValue%2A>方法为指定选项设置指定的值。  
  
   
  
## Examples  
 下面的代码示例演示如何访问 <xref:System.ComponentModel.Design.IDesignerOptionService> 以显示标准选项的当前值。  
  
 [!code-cpp[IDesignerOptionServiceExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IDesignerOptionServiceExample/CPP/idesigneroptionservicecontrol.cpp#1)]
 [!code-csharp[IDesignerOptionServiceExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IDesignerOptionServiceExample/CS/idesigneroptionservicecontrol.cs#1)]
 [!code-vb[IDesignerOptionServiceExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IDesignerOptionServiceExample/VB/idesigneroptionservicecontrol.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.IDesigner" />
    <altmember cref="T:System.ComponentModel.Design.DesignerOptionService" />
  </Docs>
  <Members>
    <Member MemberName="GetOptionValue">
      <MemberSignature Language="C#" Value="public object GetOptionValue (string pageName, string valueName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetOptionValue(string pageName, string valueName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerOptionService.GetOptionValue(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOptionValue (pageName As String, valueName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetOptionValue(System::String ^ pageName, System::String ^ valueName);" />
      <MemberSignature Language="F#" Value="abstract member GetOptionValue : string * string -&gt; obj" Usage="iDesignerOptionService.GetOptionValue (pageName, valueName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageName" Type="System.String" />
        <Parameter Name="valueName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pageName">定义该选项的页的名称。</param>
        <param name="valueName">该选项属性的名称。</param>
        <summary>获取指定的 Windows 窗体设计器选项的值。</summary>
        <returns>指定选项的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `pageName`参数应包含 "WindowsFormsDesigner \\ *CategoryName*类名"，其中*类别*名称是不含任何空白字符的选项类别名称。 类别名称通常为 "常规"。 因此，你可以使用英语页面名称 "WindowsFormsDesigner\General" 访问 "常规" 设计器选项类别。  
  
> [!NOTE]
>  页面和值名称始终应为英语。 因此，提供了下表来帮助您访问所需的选项。  
  
 下表指明了英语值名称、它们的数据格式以及每个值的说明：  
  
|值名称|值格式|描述|  
|----------------|------------------|-----------------|  
|GridSize|<xref:System.Drawing.Size>|每个网格正方形的大小。|  
|GridSize|<xref:System.Int32>|每个网格正方形的宽度。 当通过设计器选项服务访问时，此嵌套属性是只读的。|  
|GridSize|<xref:System.Int32>|每个网格正方形的高度。 当通过设计器选项服务访问时，此嵌套属性是只读的。|  
|ShowGrid|<xref:System.Boolean>|`true`如果应显示网格，则为; 否则为。`false`如果不应显示网格，则为。|  
|SnapToGrid|<xref:System.Boolean>|`true`如果组件的位置应与网格对齐，则为; 否则为。`false`如果不一定要对齐位置，则为。|  
|LayoutMode|`Microsoft.VisualStudio.Windows.Forms.LayoutMode`|`SnapLines`若要使用对齐线或将 `SnapToGrid` 控件与网格对齐，|  
|ObjectBoundSmartTagAutoShow|<xref:System.Boolean>|如果允许组件的智能标记面板在创建时自动打开，则为 `true`；否则为 `false`。|  
|AutoToolboxPopulate|<xref:System.Boolean>|`true`自动将解决方案的自定义控件和组件添加到**工具箱**;否则为 `false` 。|  
|UseOptimizedCodeGeneration|<xref:System.Boolean>|如果启用组件缓存，则为 `true`；否则为 `false`。|  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.ComponentModel.Design.IDesignerOptionService.GetOptionValue%2A> 方法来查询选项的值 `GridSize` 。  
  
 [!code-cpp[IDesignerOptionServiceExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/IDesignerOptionServiceExample/CPP/idesigneroptionservicecontrol.cpp#2)]
 [!code-csharp[IDesignerOptionServiceExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/IDesignerOptionServiceExample/CS/idesigneroptionservicecontrol.cs#2)]
 [!code-vb[IDesignerOptionServiceExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IDesignerOptionServiceExample/VB/idesigneroptionservicecontrol.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.IDesignerOptionService.SetOptionValue(System.String,System.String,System.Object)" />
        <altmember cref="T:System.ComponentModel.Design.DesignerOptionService" />
      </Docs>
    </Member>
    <Member MemberName="SetOptionValue">
      <MemberSignature Language="C#" Value="public void SetOptionValue (string pageName, string valueName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOptionValue(string pageName, string valueName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerOptionService.SetOptionValue(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOptionValue (pageName As String, valueName As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOptionValue(System::String ^ pageName, System::String ^ valueName, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetOptionValue : string * string * obj -&gt; unit" Usage="iDesignerOptionService.SetOptionValue (pageName, valueName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageName" Type="System.String" />
        <Parameter Name="valueName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pageName">定义该选项的页的名称。</param>
        <param name="valueName">该选项属性的名称。</param>
        <param name="value">新值。</param>
        <summary>设置指定的 Windows 窗体设计器选项的值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `pageName`参数应包含 "WindowsFormsDesigner \\ *CategoryName*类名"，其中*类别*名称是不含任何空白字符的选项类别名称。 类别名称通常为 "常规"。 因此，你可以使用英语页面名称 "WindowsFormsDesigner\General" 访问 "常规" 设计器选项类别。  
  
> [!NOTE]
>  页面和值名称始终应为英语。 因此，提供了下表来帮助您访问所需的选项。  
  
 下表指明了英语值名称、它们的数据格式以及每个值的说明：  
  
|值名称|值格式|描述|  
|----------------|------------------|-----------------|  
|GridSize|<xref:System.Drawing.Size>|每个网格正方形的大小。|  
|GridSize|<xref:System.Int32>|每个网格正方形的宽度。 当通过设计器选项服务访问时，此嵌套属性是只读的。|  
|GridSize|<xref:System.Int32>|每个网格正方形的高度。 当通过设计器选项服务访问时，此嵌套属性是只读的。|  
|ShowGrid|<xref:System.Boolean>|`true`如果应显示网格，则为; 否则为。`false`如果不应显示网格，则为。|  
|SnapToGrid|<xref:System.Boolean>|`true`如果组件的位置应与网格对齐，则为; 否则为。`false`如果不一定要对齐位置，则为。|  
|LayoutMode|`Microsoft.VisualStudio.Windows.Forms.LayoutMode`|`SnapLines`若要使用对齐线或将 `SnapToGrid` 控件与网格对齐，|  
|ObjectBoundSmartTagAutoShow|<xref:System.Boolean>|如果允许组件的智能标记面板在创建时自动打开，则为 `true`；否则为 `false`。|  
|AutoToolboxPopulate|<xref:System.Boolean>|`true`自动将解决方案的自定义控件和组件添加到**工具箱**;否则为 `false` 。|  
|UseOptimizedCodeGeneration|<xref:System.Boolean>|如果启用组件缓存，则为 `true`；否则为 `false`。|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.IDesignerOptionService.GetOptionValue(System.String,System.String)" />
        <altmember cref="T:System.ComponentModel.Design.DesignerOptionService" />
      </Docs>
    </Member>
  </Members>
</Type>
