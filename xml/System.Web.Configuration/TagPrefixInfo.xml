<Type Name="TagPrefixInfo" FullName="System.Web.Configuration.TagPrefixInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="20a1bb867986bf42a754f63d7e4955af3018bdae" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89781463" /></Metadata><TypeSignature Language="C#" Value="public sealed class TagPrefixInfo : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TagPrefixInfo extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.TagPrefixInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TagPrefixInfo&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class TagPrefixInfo sealed : System::Configuration::ConfigurationElement" />
  <TypeSignature Language="F#" Value="type TagPrefixInfo = class&#xA;    inherit ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>定义包含与标记相关的信息的配置元素。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.TagPrefixInfo>类可让你以编程方式访问和修改存储在配置文件中的标记前缀信息。 它提供与 ASP.NET 指令相同的功能 `@Register` 。 标记前缀将 ASP.NET 中的 "命名空间" 关联到自定义控件和用户控件正确工作所必须包含的程序集和命名空间。 <xref:System.Web.Configuration.TagPrefixInfo> 对象存储为对象的成员 <xref:System.Web.Configuration.TagPrefixCollection> 。 <xref:System.Web.Configuration.TagPrefixCollection>类允许以编程方式访问和修改 `controls` `pages` 配置文件的节的子节。  
  
 <xref:System.Web.Configuration.TagPrefixInfo> 对象使用元素添加到集合中 `add` ，并为属性指定一个值 `tagPrefix` 以及其他相关属性的值。 所需的其他信息根据要用于指定标记前缀的控件类型而有所不同：  
  
-   如果它是用户控件，则必须定义 <xref:System.Web.Configuration.TagPrefixInfo.TagPrefix%2A> 、 <xref:System.Web.Configuration.TagPrefixInfo.TagName%2A> 和 <xref:System.Web.Configuration.TagPrefixInfo.Source%2A> 属性。  
  
-   如果它是自定义控件，则必须定义 <xref:System.Web.Configuration.TagPrefixInfo.TagPrefix%2A> 、 <xref:System.Web.Configuration.TagPrefixInfo.Namespace%2A> 和 <xref:System.Web.Configuration.TagPrefixInfo.Assembly%2A> 属性。 <xref:System.Web.Configuration.TagPrefixInfo.Assembly%2A>如果控件在应用程序代码目录中，则不需要属性。  
  
 同一个 `tagPrefix` 值可以用于映射到多个程序集或命名空间。  
  
> [!NOTE]
>  当指定源时，用户控件本身不得与页面位于同一目录中。 如果是，则在尝试加载页时，会收到运行时错误。  
  
   
  
## Examples  
 此示例演示如何以声明方式为部分的多个属性指定值 `controls` ，该部分也可以作为类的成员进行访问 <xref:System.Web.Configuration.TagPrefixInfo> 。  
  
```  
  
<system.web>  
  <pages>  
    <controls>  
      <!-- Searches all linked assemblies for the namespace -->  
      <add tagPrefix="MyTags1" namespace=" MyNameSpace "/>  
      <!-- Uses a specified assembly -->  
      <add tagPrefix="MyTags2" namespace="MyNameSpace"   
        assembly="MyAssembly"/>  
      <!-- Uses the specified source for the user control -->  
      <add tagprefix="MyTags3" tagname="MyCtrl" src="MyControl.ascx"/>  
    </controls>  
   </pages>  
</system.web>  
```  
  
 下面的代码示例演示如何使用类以 <xref:System.Web.Configuration.TagPrefixInfo> 编程方式修改标记前缀设置。 此代码示例是为类提供的更大示例的一部分 <xref:System.Web.Configuration.PagesSection> 。  
  
 [!code-csharp[System.Web.Configuration.PagesSection#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#12)]
 [!code-vb[System.Web.Configuration.PagesSection#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#12)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.PagesSection" />
    <altmember cref="T:System.Web.Configuration.TagPrefixCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TagPrefixInfo (string tagPrefix, string nameSpace, string assembly, string tagName, string source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tagPrefix, string nameSpace, string assembly, string tagName, string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.TagPrefixInfo.#ctor(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tagPrefix As String, nameSpace As String, assembly As String, tagName As String, source As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TagPrefixInfo(System::String ^ tagPrefix, System::String ^ nameSpace, System::String ^ assembly, System::String ^ tagName, System::String ^ source);" />
      <MemberSignature Language="F#" Value="new System.Web.Configuration.TagPrefixInfo : string * string * string * string * string -&gt; System.Web.Configuration.TagPrefixInfo" Usage="new System.Web.Configuration.TagPrefixInfo (tagPrefix, nameSpace, assembly, tagName, source)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tagPrefix" Type="System.String" />
        <Parameter Name="nameSpace" Type="System.String" />
        <Parameter Name="assembly" Type="System.String" />
        <Parameter Name="tagName" Type="System.String" />
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagPrefix">正映射到源文件或命名空间和程序集的标记前缀。</param>
        <param name="nameSpace">与标记前缀关联的命名空间。</param>
        <param name="assembly">命名空间所驻留的程序集。</param>
        <param name="tagName">要在页中使用的控件的名称。</param>
        <param name="source">包含用户控件文件的名称。</param>
        <summary>使用传递的值初始化 <see cref="T:System.Web.Configuration.TagPrefixInfo" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数创建类的实例 <xref:System.Web.Configuration.TagPrefixInfo> 并使用传递的参数对其进行初始化。 你为其指定值的参数取决于你用指定标记前缀引用的控件的类型。 标记前缀不需要的参数应留空。  (使用空字符串。 )   
  
-   如果控件是用户控件，则必须为 `tagPrefix` 、 `tagName` 和参数指定值 `source` 。  
  
-   如果控件是自定义控件，则必须指定和参数的值 `tagPrefix` `nameSpace` 。 如果控件不在应用程序代码目录中，则还必须指定 `assembly` 参数。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.Configuration.TagPrefixInfo.%23ctor%2A> 构造函数。 此代码示例是为类提供的更大示例的一部分 <xref:System.Web.Configuration.PagesSection> 。  
  
 [!code-csharp[System.Web.Configuration.PagesSection#32](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#32)]
 [!code-vb[System.Web.Configuration.PagesSection#32](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#32)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.PagesSection" />
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public string Assembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TagPrefixInfo.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public Property Assembly As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Assembly { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Assembly : string with get, set" Usage="System.Web.Configuration.TagPrefixInfo.Assembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("assembly")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("assembly")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置包含控件实现的程序集的名称。</summary>
        <value>程序集的名称（无扩展名）。 默认值为一个空字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性指定控件所在的程序集。 它仅适用于自定义控件，如果该控件位于应用程序代码目录中，则不需要该控件。  
  
   
  
## Examples  
 下面的代码示例说明如何使用 <xref:System.Web.Configuration.TagPrefixInfo.Assembly%2A> 属性。 此代码示例是为类提供的更大示例的一部分 <xref:System.Web.Configuration.PagesSection> 。  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.PagesSection" />
        <altmember cref="P:System.Web.Configuration.TagPrefixInfo.TagPrefix" />
        <altmember cref="P:System.Web.Configuration.TagPrefixInfo.Namespace" />
      </Docs>
    </Member>
    <Member MemberName="ElementProperty">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationElementProperty ElementProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationElementProperty ElementProperty" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TagPrefixInfo.ElementProperty" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ElementProperty As ConfigurationElementProperty" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationElementProperty ^ ElementProperty { System::Configuration::ConfigurationElementProperty ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementProperty : System.Configuration.ConfigurationElementProperty" Usage="System.Web.Configuration.TagPrefixInfo.ElementProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationElementProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.TagPrefixInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (prefix As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ prefix);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="tagPrefixInfo.Equals prefix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="prefix">要比较的对象。</param>
        <summary>将此实例与另一个对象进行比较。</summary>
        <returns>如果对象完全相同，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Configuration.PagesSection" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.TagPrefixInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="tagPrefixInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回当前实例的哈希值。</summary>
        <returns>当前实例的哈希值。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Configuration.PagesSection" />
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TagPrefixInfo.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Web.Configuration.TagPrefixInfo.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("namespace")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("namespace")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置控件所驻留的命名空间。</summary>
        <value>命名空间的名称。 默认值为一个空字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性指定控件所在的命名空间。 它仅适用于自定义控件。  
  
   
  
## Examples  
 下面的代码示例说明如何使用 <xref:System.Web.Configuration.TagPrefixInfo.Namespace%2A> 属性。 此代码示例是为类提供的更大示例的一部分 <xref:System.Web.Configuration.PagesSection> 。  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.PagesSection" />
        <altmember cref="P:System.Web.Configuration.TagPrefixInfo.TagPrefix" />
        <altmember cref="P:System.Web.Configuration.TagPrefixInfo.Assembly" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TagPrefixInfo.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Web.Configuration.TagPrefixInfo.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TagPrefixInfo.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : string with get, set" Usage="System.Web.Configuration.TagPrefixInfo.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("src")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("src")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置包含用户控件的文件的名称和路径。</summary>
        <value>包含用户控件的文件的名称和路径。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性指定包含用户控件实现的文件的名称和路径。 它仅适用于用户控件。 该路径可以是相对于应用程序或应用程序根目录的路径。  
  
> [!NOTE]
>  用户控件本身不得与页面位于同一目录中。 如果是，则在尝试加载页时，会收到运行时错误。  
  
   
  
## Examples  
 下面的代码示例说明如何使用 <xref:System.Web.Configuration.TagPrefixInfo.Source%2A> 属性。 此代码示例是为类提供的更大示例的一部分 <xref:System.Web.Configuration.PagesSection> 。  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.PagesSection" />
        <altmember cref="P:System.Web.Configuration.TagPrefixInfo.TagPrefix" />
        <altmember cref="P:System.Web.Configuration.TagPrefixInfo.TagName" />
      </Docs>
    </Member>
    <Member MemberName="TagName">
      <MemberSignature Language="C#" Value="public string TagName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TagPrefixInfo.TagName" />
      <MemberSignature Language="VB.NET" Value="Public Property TagName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TagName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TagName : string with get, set" Usage="System.Web.Configuration.TagPrefixInfo.TagName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("tagName")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("tagName")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用户控件的名称。</summary>
        <value>用户控件的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性指定控件的名称。 它仅适用于用户控件。 这是 ASP.NET 代码中的标记前缀后面的值。 例如，中的 "Mycontrol.xaml" `<myTag: myControl />` 。  
  
   
  
## Examples  
 下面的代码示例说明如何使用 <xref:System.Web.Configuration.TagPrefixInfo.TagName%2A> 属性。 此代码示例是为类提供的更大示例的一部分 <xref:System.Web.Configuration.PagesSection> 。  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.PagesSection" />
        <altmember cref="P:System.Web.Configuration.TagPrefixInfo.TagPrefix" />
        <altmember cref="P:System.Web.Configuration.TagPrefixInfo.Source" />
      </Docs>
    </Member>
    <Member MemberName="TagPrefix">
      <MemberSignature Language="C#" Value="public string TagPrefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagPrefix" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TagPrefixInfo.TagPrefix" />
      <MemberSignature Language="VB.NET" Value="Public Property TagPrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TagPrefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TagPrefix : string with get, set" Usage="System.Web.Configuration.TagPrefixInfo.TagPrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("tagPrefix", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("tagPrefix", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.StringValidator(MinLength=1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.StringValidator(MinLength=1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置正与源文件或命名空间和程序集关联的标记前缀。</summary>
        <value>标记前缀。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.TagPrefixInfo.TagPrefix%2A>属性定义用于控件所在的命名空间的别名。 它适用于用户控件和自定义控件。 这是 ASP.NET 代码中标记名称前面的值。 例如 "myTag" `<myTag: myControl />` 。  
  
   
  
## Examples  
 下面的代码示例说明如何使用 <xref:System.Web.Configuration.TagPrefixInfo.TagPrefix%2A> 属性。 此代码示例是为类提供的更大示例的一部分 <xref:System.Web.Configuration.PagesSection> 。  
  
 [!code-csharp[System.Web.Configuration.PagesSection#30](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#30)]
 [!code-vb[System.Web.Configuration.PagesSection#30](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#30)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.PagesSection" />
        <altmember cref="P:System.Web.Configuration.TagPrefixInfo.Assembly" />
        <altmember cref="P:System.Web.Configuration.TagPrefixInfo.Namespace" />
        <altmember cref="P:System.Web.Configuration.TagPrefixInfo.TagName" />
      </Docs>
    </Member>
  </Members>
</Type>
