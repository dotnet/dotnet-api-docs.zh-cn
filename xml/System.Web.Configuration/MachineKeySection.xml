<Type Name="MachineKeySection" FullName="System.Web.Configuration.MachineKeySection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f5b1b9ad3fe8a7ed88ebd5208980b465daf09710" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89991188" /></Metadata><TypeSignature Language="C#" Value="public sealed class MachineKeySection : System.Configuration.ConfigurationSection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed MachineKeySection extends System.Configuration.ConfigurationSection" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.MachineKeySection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MachineKeySection&#xA;Inherits ConfigurationSection" />
  <TypeSignature Language="C++ CLI" Value="public ref class MachineKeySection sealed : System::Configuration::ConfigurationSection" />
  <TypeSignature Language="F#" Value="type MachineKeySection = class&#xA;    inherit ConfigurationSection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationSection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>定义控制密钥生成和算法的配置设置，这些密钥生成和算法在 Windows Forms 身份验证、视图状态验证和会话状态应用程序隔离中用于加密、解密和消息身份验证代码 (MAC) 操作。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.MachineKeySection>类提供了一种以编程方式访问和修改 `MachineKey` 配置文件中部分的内容的方法。 `MachineKey`可以在计算机 ( # A0) 或应用程序 ( # A1) 级别配置节，并控制用于 Windows 窗体身份验证、视图状态验证和会话状态应用程序隔离的密钥和算法。 若要在 web 服务器 (的 web 服务器网络上使用任何这些功能) ， `DecryptionKey` `ValidationKey` `MachineKey` 必须使用有效的密钥值显式配置部分的和属性。 此 `AutoGenerate` 值对 Web 场不起作用，因为它依赖于密码随机密钥，该密钥是使用计算机本地保护持久保存的，在多台计算机上不会相同。  
  
   
  
## Examples  
 本节中的示例演示如何以声明方式为 [machineKey](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/w8h3skw9(v=vs.100)) 部分的多个属性指定值，也可以将这些属性作为类的成员进行访问 <xref:System.Web.Configuration.MachineKeySection> 。  
  
 以下来自配置文件的示例演示如何以声明方式为 [machineKey](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/w8h3skw9(v=vs.100)) 节指定值。  
  
```  
<system.web>  
  <machineKey validationKey="AutoGenerate,IsolateApps"   
    decryptionKey="AutoGenerate,IsolateApps"   
    validation="SHA1"/>  
</system.web>  
```  

 此示例使用 SHA1。 由于与 SHA1 冲突，Microsoft 建议使用 SHA256。  

 下面的示例演示如何 <xref:System.Web.Configuration.MachineKeySection> 在代码中使用类。  
  
 [!code-csharp[System.Web.Configuration.MachineKeySection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.MachineKeySection/CS/machinekeysection.cs#1)]
 [!code-vb[System.Web.Configuration.MachineKeySection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.MachineKeySection/VB/machinekeysection.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>如果要在此配置节中指定密钥，在 Web 场方案中，建议使用受保护的配置来加密此部分。</para></block>
    <altmember cref="T:System.Configuration.ConfigurationSection" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/da0adyye(v=vs.100)">Forms 身份验证凭据</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MachineKeySection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.MachineKeySection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MachineKeySection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>使用默认设置初始化 <see cref="T:System.Web.Configuration.MachineKeySection" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 构造函数不应在代码中直接使用。 它由 ASP.NET 配置系统调用。 您可以 <xref:System.Web.Configuration.MachineKeySection> 使用方法获取类的实例 <xref:System.Configuration.Configuration.GetSection%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.MachineKeySection.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Configuration.MachineKeySection.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("applicationName", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("applicationName", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置应用程序的名称。</summary>
        <value>应用程序的名称。 默认值为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果设置了属性，则必须设置此属性 <xref:System.Web.Configuration.MachineKeySection.DataProtectorType%2A> 。 属性值将传递给 <xref:System.Security.Cryptography.DataProtector.Create%2A?displayProperty=nameWithType> 工厂方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompatibilityMode">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.MachineKeyCompatibilityMode CompatibilityMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.MachineKeyCompatibilityMode CompatibilityMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.MachineKeySection.CompatibilityMode" />
      <MemberSignature Language="VB.NET" Value="Public Property CompatibilityMode As MachineKeyCompatibilityMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::MachineKeyCompatibilityMode CompatibilityMode { System::Web::Configuration::MachineKeyCompatibilityMode get(); void set(System::Web::Configuration::MachineKeyCompatibilityMode value); };" />
      <MemberSignature Language="F#" Value="member this.CompatibilityMode : System.Web.Configuration.MachineKeyCompatibilityMode with get, set" Usage="System.Web.Configuration.MachineKeySection.CompatibilityMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("compatibilityMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("compatibilityMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.MachineKeyCompatibilityMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指定视图状态的升级加密方法是否在使用 .NET Framework 2.0 版 Service Pack 1 发行版后引入。</summary>
        <value>一个指示是否在使用 .NET Framework 2.0 SP1 发行版后引入的加密方法的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 更高版本中升级的加密方法可降低攻击者成功对值进行反向工程的风险 `DecryptionKey` 。 为了保持向后兼容性，可以使用较旧的加密方法。  
  
 Web 场中的所有服务器都应将 <xref:System.Web.Configuration.MachineKeySection.CompatibilityMode%2A> 属性设置为相同的值。 如果读取 forms 身份验证票证的服务器的 <xref:System.Web.Configuration.MachineKeySection.CompatibilityMode%2A> 设置与创建该票证的服务器的设置不同，则不能识别该票证。  
  
 可以为属性指定以下值 <xref:System.Web.Configuration.MachineKeySection.CompatibilityMode%2A> ：  
  
-   `Framework20SP1`. 此值指定 ASP.NET 使用 2.0 SP2 之前版本的 ASP.NET 中提供的加密方法。 如果任何服务器具有早于 2.0 SP2 的 .NET Framework 版本，请将此值用于 web 场中的所有服务器。 这是默认值，除非应用程序 Web.config 文件的 `targetFramework` 属性 `httpRuntime` 设置为 "4.5"。  
  
-   `Framework20SP2`. 此值指定 ASP.NET 使用 .NET Framework 2.0 SP2 中引入的升级加密方法。 如果所有服务器都有 .NET Framework 2.0 SP2 或更高版本，但至少有一台服务器没有 .NET Framework 4.5，则将此值用于 web 场中的所有服务器。  
  
-   `Framework45`. ASP.NET 4.5 的加密增强功能有效。 如果应用程序 Web.config 文件的 `targetFramework` 属性 `httpRuntime` 设置为 "4.5"，则此值为默认值。  
  
 当此属性设置为时 `Framework45` ，以下限制有效：  
  
-   如果 <xref:System.Web.Configuration.MachineKeySection.DataProtectorType%2A> 属性有值，则 <xref:System.Web.Configuration.MachineKeySection.ApplicationName%2A> 属性必须有值。 <xref:System.Security.Cryptography.DataProtector>类要求提供非空的应用程序名称。  
  
-   该 <xref:System.Web.Configuration.MachineKeySection.Validation%2A> 属性必须是实际的验证算法 (例如，MD5、SHA1、HMACSHA256、HMACSHA384、HMACSHA512) 或子类类型的自定义算法 <xref:System.Security.Cryptography.KeyedHashAlgorithm> 。 禁止值 AES 和3DES。  
  
-   框架不会生成仅限签名的负载。 不管如何 `protection` `forms` 在 Web.config 文件中设置元素的属性，Forms 身份验证票证始终都是加密和签名的。 如果 `EnableViewStateMac` `RequireViewStateEncryption` 为给定页面设置了或，则将始终对视图状态进行加密和签名。  
  
 由于 [Microsoft 安全公告 MS10-070](https://docs.microsoft.com/security-updates/SecurityBulletins/2010/ms10-070)中所述的安全更新，默认的加密行为对于和设置是相同的 `Framework20SP1` `Framework20SP2` 。 不建议更改默认行为，但如果想要执行此操作，请参阅 [如何在 ASP.NET 中配置旧加密模式](https://support.microsoft.com/kb/2425938)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataProtectorType">
      <MemberSignature Language="C#" Value="public string DataProtectorType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataProtectorType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.MachineKeySection.DataProtectorType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataProtectorType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataProtectorType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataProtectorType : string with get, set" Usage="System.Web.Configuration.MachineKeySection.DataProtectorType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("dataProtectorType", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("dataProtectorType", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置数据保护器类型名称。 默认值为 <see cref="F:System.String.Empty" />。</summary>
        <value>数据保护器类型的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要为 ASP.NET 指定自定义数据保护算法，请将 <xref:System.Web.Configuration.MachineKeySection.CompatibilityMode%2A?displayProperty=nameWithType> 属性设置为， <xref:System.Web.Configuration.MachineKeyCompatibilityMode.Framework45> 并将此属性设置为表示从类派生的类的字符串 <xref:System.Security.Cryptography.DataProtector> 。 此字符串对应于 `providerClass` 传递给静态 <xref:System.Security.Cryptography.DataProtector.Create%2A?displayProperty=nameWithType> 工厂方法的参数。 你指定的类将由 <xref:System.Web.Security.MachineKey.Protect%2A?displayProperty=nameWithType> 和方法使用， <xref:System.Web.Security.MachineKey.Unprotect%2A?displayProperty=nameWithType> 即使你未指定此选项也是如此 <xref:System.Web.Configuration.MachineKeyCompatibilityMode.Framework45> 。  
  
 如果设置此属性，则还必须设置 <xref:System.Web.Configuration.MachineKeySection.ApplicationName%2A> 属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Decryption">
      <MemberSignature Language="C#" Value="public string Decryption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Decryption" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.MachineKeySection.Decryption" />
      <MemberSignature Language="VB.NET" Value="Public Property Decryption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Decryption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Decryption : string with get, set" Usage="System.Web.Configuration.MachineKeySection.Decryption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("decryption", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("decryption", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.StringValidator(MinLength=1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.StringValidator(MinLength=1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定用于加密和解密 Forms 身份验证数据的加密算法。</summary>
        <value>指示用于加密和解密 Forms 身份验证数据的算法的值。 （有关如何指定视图状态加密时所使用算法的信息，请参见 <see cref="P:System.Web.Configuration.MachineKeySection.Validation" /> 属性。）<see langword="Auto" /> 是默认值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.MachineKeySection.Decryption%2A>属性支持以下解密值：  
  
-   `Auto`（默认值）指定 ASP.NET 根据配置默认设置确定要使用的加密算法。  
  
-   `AES`，指定 ASP.NET 使用 <xref:System.Web.Configuration.MachineKeyValidation.AES> 算法加密数据。 `AES` 用于加密数据的默认算法。  
  
-   `3DES`，指定 ASP.NET 使用 <xref:System.Web.Configuration.MachineKeyValidation.TripleDES> 算法加密数据。  
  
-   自定义算法。  
  
 通常在 `decryption` Web.config 文件的 [machineKey](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/w8h3skw9(v=vs.100)) 元素的属性中以声明方式设置此属性。 有关详细信息，请参阅 [machineKey](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/w8h3skw9(v=vs.100)) 元素。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">所选值不是解密值之一。</exception>
        <altmember cref="T:System.Web.Configuration.MachineKeyValidation" />
      </Docs>
    </Member>
    <Member MemberName="DecryptionKey">
      <MemberSignature Language="C#" Value="public string DecryptionKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DecryptionKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.MachineKeySection.DecryptionKey" />
      <MemberSignature Language="VB.NET" Value="Public Property DecryptionKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DecryptionKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DecryptionKey : string with get, set" Usage="System.Web.Configuration.MachineKeySection.DecryptionKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("decryptionKey", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("decryptionKey", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.StringValidator(MinLength=1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.StringValidator(MinLength=1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用来加密和解密数据的密钥，或生成密钥的过程。</summary>
        <value>密钥值或指示如何生成密钥的值。 默认值为“AutoGenerate,IsolateApps”。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.MachineKeySection.DecryptionKey%2A>属性将用于加密和解密，如在 Windows 窗体 authentication 中，当 <xref:System.Web.Configuration.MachineKeySection.Validation%2A> 属性设置为 "3des" 或 "AES" 时，用于视图状态。  
  
 使用 "自动生成" 选项指定 ASP.NET 生成随机密钥并将其存储在本地安全机构中。 "自动生成" 选项属于默认值。  
  
 如果将 "IsolateApps" 修饰符添加到 "自动生成" <xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A> 值，则 ASP.NET 将使用每个应用程序为每个应用程序生成唯一的加密密钥 <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> 。 这是默认设置。  
  
 如果将 "IsolateByAppId" 修饰符添加到 "自动生成" <xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A> 值，则 ASP.NET 将使用每个应用程序为每个应用程序生成唯一的加密密钥 <xref:System.Web.HttpRuntime.AppDomainAppId%2A> 。 如果两个不同的应用程序共享一个虚拟路径 (可能是由于这些应用程序在不同的端口上运行) ，则可以使用此标志进一步区分它们。 "IsolateByAppId" 标志只能由 ASP.NET 4.5 理解，但不管设置如何，都可以使用它 <xref:System.Web.Configuration.MachineKeySection.CompatibilityMode?displayProperty=nameWithType> 。  
  
 如果需要跨 Web 服务器的网络支持配置 (Web 场) ，请 <xref:System.Web.Configuration.MachineKeySection.DecryptionKey%2A> 手动设置属性以确保配置一致。 有关如何为属性手动生成值的信息 `DecryptionKey` ，请参阅 How [To： Configure MachineKey in ASP.NET 2.0](https://go.microsoft.com/fwlink/?linkid=155113)。  
  
 通常在 `DecryptionKey` Web.config 文件的 [machineKey](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/w8h3skw9(v=vs.100)) 元素的属性中以声明方式设置此属性。 有关详细信息，请参阅 [machineKey](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/w8h3skw9(v=vs.100)) 元素。  
  
   
  
## Examples  
 下面的示例演示如何 <xref:System.Web.Configuration.MachineKeySection.DecryptionKey%2A> 使用代码设置属性。 此示例是为类提供的更大示例的一部分 <xref:System.Web.Configuration.MachineKeySection> 。  
  
 [!code-csharp[System.Web.Configuration.MachineKeySection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.MachineKeySection/CS/machinekeysection.cs#3)]
 [!code-vb[System.Web.Configuration.MachineKeySection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.MachineKeySection/VB/machinekeysection.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.MachineKeySection" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.MachineKeySection.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Web.Configuration.MachineKeySection.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="protected override void Reset (System.Configuration.ConfigurationElement parentElement);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Reset(class System.Configuration.ConfigurationElement parentElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.MachineKeySection.Reset(System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Reset (parentElement As ConfigurationElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Reset(System::Configuration::ConfigurationElement ^ parentElement);" />
      <MemberSignature Language="F#" Value="override this.Reset : System.Configuration.ConfigurationElement -&gt; unit" Usage="machineKeySection.Reset parentElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentElement" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="parentElement">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetReadOnly">
      <MemberSignature Language="C#" Value="protected override void SetReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.MachineKeySection.SetReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetReadOnly ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetReadOnly();" />
      <MemberSignature Language="F#" Value="override this.SetReadOnly : unit -&gt; unit" Usage="machineKeySection.SetReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validation">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.MachineKeyValidation Validation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.MachineKeyValidation Validation" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.MachineKeySection.Validation" />
      <MemberSignature Language="VB.NET" Value="Public Property Validation As MachineKeyValidation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::MachineKeyValidation Validation { System::Web::Configuration::MachineKeyValidation get(); void set(System::Web::Configuration::MachineKeyValidation value); };" />
      <MemberSignature Language="F#" Value="member this.Validation : System.Web.Configuration.MachineKeyValidation with get, set" Usage="System.Web.Configuration.MachineKeySection.Validation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Web.Configuration.MachineKeyValidationConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Web.Configuration.MachineKeyValidationConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("validation", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("validation", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.MachineKeyValidation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定用于验证 Forms 身份验证和视图状态数据的哈希算法。</summary>
        <value>指示用于验证 Forms 身份验证和视图状态数据的哈希算法的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.MachineKeySection.Validation%2A>属性支持枚举定义的加密算法 <xref:System.Web.Configuration.MachineKeyValidation> 。 通常在 `decryption` Web.config 文件的 [machineKey](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/w8h3skw9(v=vs.100)) 元素的属性中以声明方式设置此属性。 有关详细信息，请参阅 [machineKey](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/w8h3skw9(v=vs.100)) 元素。  
  
   
  
## Examples  
 下面的示例演示如何 <xref:System.Web.Configuration.MachineKeySection.Validation%2A> 使用代码设置属性。 此示例是为类提供的更大示例的一部分 <xref:System.Web.Configuration.MachineKeySection> 。  
  
 [!code-csharp[System.Web.Configuration.MachineKeySection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.MachineKeySection/CS/machinekeysection.cs#4)]
 [!code-vb[System.Web.Configuration.MachineKeySection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.MachineKeySection/VB/machinekeysection.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.MachineKeySection" />
      </Docs>
    </Member>
    <Member MemberName="ValidationAlgorithm">
      <MemberSignature Language="C#" Value="public string ValidationAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.MachineKeySection.ValidationAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValidationAlgorithm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationAlgorithm : string with get, set" Usage="System.Web.Configuration.MachineKeySection.ValidationAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("validation", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("validation", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Configuration.StringValidator(MinLength=1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.StringValidator(MinLength=1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置指示用于验证 Forms 身份验证和视图状态数据的算法的名称。</summary>
        <value>一个字符串，包含预定义算法的名称或自定义算法的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可用的预定义算法由 <xref:System.Web.Configuration.MachineKeyValidation> 枚举定义。 如果要使用自定义算法，则无需设置此属性。 将 <xref:System.Web.Configuration.MachineKeySection.Validation%2A> 属性设置为自定义算法的名称。 当你执行此操作时，此属性将自动设置为 <xref:System.Web.Configuration.MachineKeyValidation.Custom> 。  
  
 可以 <xref:System.Web.Configuration.MachineKeySection.ValidationAlgorithm%2A> 通过声明方式在 Web.config 文件中或以编程方式在代码中设置属性。  
  
 若要以声明方式设置此属性，请使用 `validationAlgorithm` 配置文件中的 [machineKey](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/w8h3skw9(v=vs.100)) 元素的特性。 此属性可设置为预定义算法的名称或自定义算法的名称。 预定义的算法由枚举定义 <xref:System.Web.Configuration.MachineKeyValidation> 。 自定义算法是 `validationAlgorithm` 使用 "alg：" 前缀后跟算法名称在属性中指定的。 如果使用此格式指定自定义算法，则属性将 <xref:System.Web.Configuration.MachineKeySection.Validation%2A> 设置为， <xref:System.Web.Configuration.MachineKeyValidation.Custom> 并且此属性设置为 "alg：" 前缀后面的名称。  
  
 若要以编程方式设置此属性，请使用枚举定义的其中一个预定义算法的值 <xref:System.Web.Configuration.MachineKeyValidation> ，或将此属性设置为自定义算法名称。 如果将此属性设置为自定义算法的名称，请将 <xref:System.Web.Configuration.MachineKeySection.Validation%2A> 属性设置为 <xref:System.Web.Configuration.MachineKeyValidation.Custom> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationKey">
      <MemberSignature Language="C#" Value="public string ValidationKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.MachineKeySection.ValidationKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValidationKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationKey : string with get, set" Usage="System.Web.Configuration.MachineKeySection.ValidationKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("validationKey", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("validationKey", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.StringValidator(MinLength=1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.StringValidator(MinLength=1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置键，用来验证 Forms 身份验证和视图状态数据的代码，或生成密钥的过程。</summary>
        <value>密钥值或指示如何生成密钥的值。 默认值为“AutoGenerate,IsolateApps”。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A>当 `enableViewStateMAC` `true` 要创建 (MAC) 的消息身份验证代码以使 ASP.NET 能够确定视图状态是否已被篡改时，使用属性。 <xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A>属性还用于生成进程外特定于应用程序的会话 id，以确保会话状态变量在应用程序之间隔离。  
  
 使用 "自动生成" 选项指定 ASP.NET 生成随机密钥并将其存储在本地安全机构中。 "自动生成" 选项属于默认值。  
  
 如果将 "IsolateApps" 修饰符添加到 "自动生成" <xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A> 值，则 ASP.NET 将使用每个应用程序为每个应用程序生成唯一的加密密钥 <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> 。 这是默认设置。  
  
 如果将 "IsolateByAppId" 修饰符添加到 "自动生成" <xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A> 值，则 ASP.NET 将使用每个应用程序为每个应用程序生成唯一的加密密钥 <xref:System.Web.HttpRuntime.AppDomainAppId%2A> 。 如果两个不同的应用程序共享一个虚拟路径 (可能是由于这些应用程序在不同的端口上运行) ，则可以使用此标志进一步区分它们。 "IsolateByAppId" 标志只能由 ASP.NET 4.5 理解，但不管设置如何，都可以使用它 <xref:System.Web.Configuration.MachineKeySection.CompatibilityMode?displayProperty=nameWithType> 。  
  
 如果需要跨 Web 服务器的网络支持配置 (Web 场) ，请 <xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A> 手动设置属性以确保配置一致。 有关如何为属性手动生成值的信息 `DecryptionKey` ，请参阅 How [To： Configure MachineKey in ASP.NET 2.0](https://go.microsoft.com/fwlink/?linkid=155113)。  
  
 通常在 `validationKey` Web.config 文件的 [machineKey](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/w8h3skw9(v=vs.100)) 元素的属性中以声明方式设置此属性。  
  
   
  
## Examples  
 下面的示例演示如何 <xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A> 使用代码设置属性。 此示例是为类提供的更大示例的一部分 <xref:System.Web.Configuration.MachineKeySection> 。  
  
 [!code-csharp[System.Web.Configuration.MachineKeySection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.MachineKeySection/CS/machinekeysection.cs#2)]
 [!code-vb[System.Web.Configuration.MachineKeySection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.MachineKeySection/VB/machinekeysection.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
