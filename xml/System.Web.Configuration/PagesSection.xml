<Type Name="PagesSection" FullName="System.Web.Configuration.PagesSection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="26f7d2cc7ce0ade8fba0205d62f231b2e9b7ccb0" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86616796" /></Metadata><TypeSignature Language="C#" Value="public sealed class PagesSection : System.Configuration.ConfigurationSection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PagesSection extends System.Configuration.ConfigurationSection" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.PagesSection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PagesSection&#xA;Inherits ConfigurationSection" />
  <TypeSignature Language="C++ CLI" Value="public ref class PagesSection sealed : System::Configuration::ConfigurationSection" />
  <TypeSignature Language="F#" Value="type PagesSection = class&#xA;    inherit ConfigurationSection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationSection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供对配置文件的 <see href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/950xf363(v=vs.100)">pages</see> 部分的编程访问。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Configuration.PagesSection>类提供了一种以编程方式访问和修改配置文件[页](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/950xf363(v=vs.100))的内容的方法。 此配置节支持为配置文件范围内的所有页面和控件全局设置某些 ASP.NET 页面和控制指令。 这包括 `@ Page` 指令、 `@ Import` 通过集合属性的指令以及 <xref:System.Web.Configuration.PagesSection.Namespaces%2A> `@ Register` 通过 <xref:System.Web.Configuration.PagesSection.Controls%2A> 集合属性的指令。 它还支持在运行时通过集合属性将标记类型映射到其他标记类型 <xref:System.Web.Configuration.PagesSection.TagMapping%2A> 。

 指令指定页和用户控件编译器在处理 ASP.NET Web 窗体页 ( .aspx) 和用户控件 ( .ascx) 文件时使用的设置。



## Examples
 此示例演示如何以声明方式为部分的多个属性指定值 `pages` ，该部分也可以作为类的成员进行访问 <xref:System.Web.Configuration.PagesSection> 。

 下面的配置文件示例演示如何以声明方式为 [pages](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/950xf363(v=vs.100)) 节指定值。

```
<system.web>
  <pages buffer="true"
    enableSessionState="true"
    enableViewState="true"
    enableViewStateMac="true"
    autoEventWireup="true"
    validateRequest="true"
    asyncTimeout="45"
    maintainScrollPositionOnPostBack = "False"
    viewStateEncryptionMode = "Auto">
    <namespaces>
      <add namespace="System" />
      <add namespace="System.Collections" />
      <add namespace="System.Collections.Specialized" />
      <add namespace="System.ComponentModel" />
      <add namespace="System.Configuration" />
      <add namespace="System.Web" />
    </namespaces>
    <controls>
      <clear />
      <remove tagPrefix="MyTags" />
      <!-- Searches all linked assemblies for the namespace -->
      <add tagPrefix="MyTags1" namespace=" MyNameSpace "/>
      <!-- Uses a specified assembly -->
      <add tagPrefix="MyTags2" namespace="MyNameSpace"
        assembly="MyAssembly"/>
      <!-- Uses the specified source for the user control -->
      <add tagprefix="MyTags3" tagname="MyCtrl"
        src="MyControl.ascx"/>
    </controls>
    <tagMapping>
      <clear />
      <add
        tagTypeName=
          "System.Web.UI.WebControls.WebParts.WebPartManager"
        mappedTagTypeName=
          "Microsoft.Sharepoint.WebPartPartManager,
          MSPS.Web.dll, Version='2.0.0.0'"
      />
      <remove tagTypeName="SomeOtherNS.Class, Assemblyname" />
    </tagMapping>
  </pages>
</system.web>
```

 下面的代码示例演示如何使用 <xref:System.Web.Configuration.PagesSection> 类。

 [!code-csharp[System.Web.Configuration.PagesSection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#1)]
 [!code-vb[System.Web.Configuration.PagesSection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#1)]

 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ConfigurationSection" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t8syafc7(v=vs.100)">Web 窗体页的指令</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PagesSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.PagesSection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PagesSection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>使用默认设置初始化 <see cref="T:System.Web.Configuration.PagesSection" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Configuration.PagesSection.%23ctor%2A>构造函数不应在代码中直接使用。 它由 ASP.NET 配置系统调用。 您可以 <xref:System.Web.Configuration.PagesSection> 使用方法获取类的实例 <xref:System.Configuration.Configuration.GetSection%2A> 。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan AsyncTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan AsyncTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.AsyncTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan AsyncTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncTimeout : TimeSpan with get, set" Usage="System.Web.Configuration.PagesSection.AsyncTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanSecondsConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanSecondsConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("asyncTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("asyncTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.TimeSpanValidator(MaxValueString="10675199.02:48:05.4775807", MinValueString="00:00:00")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.TimeSpanValidator(MaxValueString="10675199.02:48:05.4775807", MinValueString="00:00:00")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示在异步页处理过程中等待异步处理程序完成的秒数。</summary>
        <value>一个 <see cref="T:System.TimeSpan" /> 值，指示在异步页处理过程中等待异步处理程序完成的时间量（以秒为单位）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 默认值为45秒。

 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="AutoEventWireup">
      <MemberSignature Language="C#" Value="public bool AutoEventWireup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoEventWireup" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.AutoEventWireup" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoEventWireup As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoEventWireup { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoEventWireup : bool with get, set" Usage="System.Web.Configuration.PagesSection.AutoEventWireup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("autoEventWireup", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("autoEventWireup", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 ASP.NET 页的事件是否自动连接到事件处理函数。</summary>
        <value>如果 ASP.NET 页的事件自动连接到事件处理函数，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 当 <xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A> 为时 `true` ，ASP.NET 不要求你将事件处理程序显式绑定到页面事件（如） <xref:System.Web.UI.Control.Load> 。

 当 <xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A> 为时 `false` ，必须将事件显式绑定到方法。 例如，如果在 `Page_Load` 代码中有一个用于页的方法，则 <xref:System.Web.UI.Control.Load> 仅当你在下面的示例中编写如下所示的代码时，才会调用方法来响应事件， (请注意 Visual Basic 中的 `Handles` 语句以及 c # 中的事件处理程序代码 ) ：

```vb
Partial Class AutoEventWireupExample
    Inherits System.Web.UI.Page
    Protected Sub Page_Load(ByVal sender As Object, _
            ByVal e As System.EventArgs) Handles Me.Load
        Response.Write("Executing Page_Load")
    End Sub
End Class
```

```csharp
public partial class AutoEventWireupExample : System.Web.UI.Page
{
    protected void Page_Load(object sender, System.EventArgs e)
    {
        Response.Write("Executing Page_Load");
    }
    override protected void OnInit(EventArgs e)
    {
        this.Load += new System.EventHandler(this.Page_Load);
    }
}
```

 如果 <xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A> 为 `true` ，则在运行时，处理程序将基于其名称和签名自动绑定到事件。 对于每个事件，ASP.NET 会根据模式 `Page_` *事件名称*（如或）搜索名为的方法 `Page_Load` `Page_Init` 。 ASP.NET 首先检查具有典型事件处理程序签名 (的重载，该重载 <xref:System.Object>) 指定和 <xref:System.EventArgs> 参数。 如果找不到具有此签名的事件处理程序，ASP.NET 将检查是否有没有参数的重载。

 当 <xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A> 为时 `false` ，必须将事件处理程序显式绑定到事件，如前面的示例中所示。 在这种情况下，方法名称不必遵循模式。

 `true`如果 <xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A> 指令中未指定，则默认值为 `@ Page` 。 当 Visual Studio 创建代码隐藏文件时，它会自动包含特性。 对于用 c # 编写的 ASP.NET 页面，Visual Studio 会将值设置为 `true` 。 对于 Visual Basic，Visual Studio 会将值设置为， `false` 因为处理程序是使用 [Handles](/dotnet/visual-basic/language-reference/statements/handles-clause) 关键字绑定到事件的，它会在生成事件处理程序时由 Visual Studio 自动插入。 如果将设置 <xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A> 为 `true` ，则可以省略 (或删除 [Handles](/dotnet/visual-basic/language-reference/statements/handles-clause) 关键字) 。

 <xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A> `true` 如果性能是关键因素，请不要将设置为。 启用自动事件绑定时，ASP.NET 必须介于15和30之间，尝试将事件与方法进行匹配。

 请注意以下有关将事件处理程序绑定到事件的内容：

-   如果将设置 <xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A> 为 `true` ，请确保不要将页面事件处理程序手动附加到事件。 如果这样做，则可能会多次调用处理程序。

-   仅对页面事件执行自动绑定，而不是针对页面上的控件的事件执行。

-   作为将事件绑定到处理程序的替代方法，您可以重写 `On` 页面或控件的事件*名称*方法。



## Examples
 下面的代码示例演示如何 <xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A> 在代码中设置或读取属性。

 [!code-csharp[System.Web.Configuration.PagesSection#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#9)]
 [!code-vb[System.Web.Configuration.PagesSection#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#9)]

 下面的示例演示了在为时自动附加到页面事件的方法签名的两种形式 <xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A> `true` 。

 [!code-aspx-csharp[System.Web.Configuration.PagesSection#50](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/Default.aspx#50)]
 [!code-csharp[System.Web.Configuration.PagesSection#50](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/Default2.aspx.cs#50)]
 [!code-aspx-vb[System.Web.Configuration.PagesSection#50](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/Default.aspx#50)]
 [!code-vb[System.Web.Configuration.PagesSection#50](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/Default2.aspx.vb#50)]

 下面的示例演示如何在为时显式绑定事件 <xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A> `false` 。

 [!code-csharp[System.Web.Configuration.PagesSection#51](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/Default.aspx.cs#51)]
 [!code-vb[System.Web.Configuration.PagesSection#51](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/Default.aspx.vb#51)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Buffer">
      <MemberSignature Language="C#" Value="public bool Buffer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Buffer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.Buffer" />
      <MemberSignature Language="VB.NET" Value="Public Property Buffer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Buffer { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Buffer : bool with get, set" Usage="System.Web.Configuration.PagesSection.Buffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("buffer", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("buffer", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指定 .aspx 页和 .ascx 控件是否使用响应缓冲。</summary>
        <value>如果 .aspx 页和 .ascx 控件使用响应缓冲，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 打开响应缓冲时，将缓冲页面或控件输出，直到处理完整个页面或控制。 <xref:System.Web.Configuration.PagesSection.Buffer%2A> `true` 如果性能是关键因素，请不要将设置为。



## Examples
 下面的代码示例说明如何使用 <xref:System.Web.Configuration.PagesSection.Buffer%2A> 属性。

 [!code-csharp[System.Web.Configuration.PagesSection#16](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#16)]
 [!code-vb[System.Web.Configuration.PagesSection#16](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#16)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientIDMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.ClientIDMode ClientIDMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ClientIDMode ClientIDMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.ClientIDMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientIDMode As ClientIDMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ClientIDMode ClientIDMode { System::Web::UI::ClientIDMode get(); void set(System::Web::UI::ClientIDMode value); };" />
      <MemberSignature Language="F#" Value="member this.ClientIDMode : System.Web.UI.ClientIDMode with get, set" Usage="System.Web.Configuration.PagesSection.ClientIDMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("clientIDMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("clientIDMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ClientIDMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于生成控件的标识符的默认算法。</summary>
        <value>一个值，指示如何生成 <see cref="P:System.Web.UI.Control.ClientID" /> 属性中的值。 默认值为 <see cref="F:System.Web.UI.ClientIDMode.Predictable" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.Configuration.PagesSection.ClientIDMode%2A> 属性设置整个网站的默认值。 您可以为单个网页或单个控件覆盖此值。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ClientIDMode" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/1d04y8ss(v=vs.140)">ASP.NET 控件标识</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd410598(v=vs.140)">如何：按 ID 从 JavaScript 访问控件</related>
      </Docs>
    </Member>
    <Member MemberName="CompilationMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.CompilationMode CompilationMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.CompilationMode CompilationMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.CompilationMode" />
      <MemberSignature Language="VB.NET" Value="Public Property CompilationMode As CompilationMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::CompilationMode CompilationMode { System::Web::UI::CompilationMode get(); void set(System::Web::UI::CompilationMode value); };" />
      <MemberSignature Language="F#" Value="member this.CompilationMode : System.Web.UI.CompilationMode with get, set" Usage="System.Web.Configuration.PagesSection.CompilationMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("compilationMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("compilationMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.CompilationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值确定如何编译 .aspx 页和 .ascx 控件。</summary>
        <value><see cref="P:System.Web.Configuration.PagesSection.CompilationMode" /> 属性的某个值，指定 .aspx 页和 .ascx 控件的编译方式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 默认值为 <xref:System.Web.UI.CompilationMode.Always>。



## Examples
 下面的代码示例说明如何使用 <xref:System.Web.Configuration.PagesSection.CompilationMode%2A> 属性。

 [!code-csharp[System.Web.Configuration.PagesSection#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#6)]
 [!code-vb[System.Web.Configuration.PagesSection#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#6)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.CompilationMode" />
      </Docs>
    </Member>
    <Member MemberName="ControlRenderingCompatibilityVersion">
      <MemberSignature Language="C#" Value="public Version ControlRenderingCompatibilityVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ControlRenderingCompatibilityVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlRenderingCompatibilityVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ ControlRenderingCompatibilityVersion { Version ^ get(); void set(Version ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ControlRenderingCompatibilityVersion : Version with get, set" Usage="System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Web.Configuration.VersionConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Web.Configuration.VersionConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("controlRenderingCompatibilityVersion", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("controlRenderingCompatibilityVersion", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Configuration.ConfigurationValidator(typeof(System.Web.Configuration.VersionValidator))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationValidator(typeof(System.Web.Configuration.VersionValidator))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指定将与任何呈现的 HTML 兼容的 ASP.NET 版本。</summary>
        <value>将与任何呈现的 HTML 兼容的 ASP.NET 版本。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此值由 `controlRenderingCompatibilityVersion` `pages` Web.config 文件中元素的属性设置。 此属性的值为属性的默认值 <xref:System.Web.UI.Control.RenderingCompatibility%2A?displayProperty=nameWithType> 。 有关使用方法的信息，请参见 <xref:System.Web.UI.Control.RenderingCompatibility%2A?displayProperty=nameWithType> 属性。

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">尝试将该属性设置为 <see langword="null" />。</exception>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.TagPrefixCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Configuration.TagPrefixCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.Controls" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Controls As TagPrefixCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::TagPrefixCollection ^ Controls { System::Web::Configuration::TagPrefixCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.Configuration.TagPrefixCollection" Usage="System.Web.Configuration.PagesSection.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("controls")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("controls")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.TagPrefixCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.Configuration.TagPrefixInfo" /> 对象的集合。</summary>
        <value>一个由 <see cref="T:System.Web.Configuration.TagPrefixCollection" /> 对象构成的 <see cref="T:System.Web.Configuration.TagPrefixInfo" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Configuration.TagPrefixInfo>对象对应于 `@ Register` ASP.NET 页上的指令。 `@ Register`指令允许您为用户控件指定标记前缀。



## Examples
 下面的代码示例说明如何使用 <xref:System.Web.Configuration.PagesSection.Controls%2A> 属性。

 [!code-csharp[System.Web.Configuration.PagesSection#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#12)]
 [!code-vb[System.Web.Configuration.PagesSection#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#12)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.TagPrefixCollection" />
        <altmember cref="T:System.Web.Configuration.TagPrefixInfo" />
      </Docs>
    </Member>
    <Member MemberName="DeserializeSection">
      <MemberSignature Language="C#" Value="protected override void DeserializeSection (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DeserializeSection(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.PagesSection.DeserializeSection(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DeserializeSection (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DeserializeSection(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.DeserializeSection : System.Xml.XmlReader -&gt; unit" Usage="pagesSection.DeserializeSection reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableEventValidation">
      <MemberSignature Language="C#" Value="public bool EnableEventValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableEventValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.EnableEventValidation" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableEventValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableEventValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableEventValidation : bool with get, set" Usage="System.Web.Configuration.PagesSection.EnableEventValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("enableEventValidation", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("enableEventValidation", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指定是否启用事件验证。</summary>
        <value>如果启用事件验证，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Configuration.PagesSection.EnableEventValidation%2A>属性指示是否应执行事件验证。 默认值为 `true`。 Web 应用程序可以选择禁用事件验证以还原到 .NET Framework 版本1.0 行为。

 基本控件将检查此特性，以确定它是否应该验证事件。 派生的控件不继承此基控件属性，因此默认情况下它不会被事件验证。 你仍通过向 <xref:System.Web.Configuration.PagesSection.EnableEventValidation%2A> 派生控件本身添加特性并将其设置为来指示 ASP.NET 对派生控件执行事件验证 `true` 。

> [!NOTE]
>  事件验证可降低未经授权的回发请求和回调的风险。 它指示 ASP.NET 仅验证可在回发请求或回调期间在控件中引发的事件。 使用此模型时，控件在呈现期间注册其事件，并在回发或回拨处理期间验证事件。 默认情况下，ASP.NET 中的所有事件驱动型控件都使用此功能。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSessionState">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.PagesEnableSessionState EnableSessionState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.PagesEnableSessionState EnableSessionState" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.EnableSessionState" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSessionState As PagesEnableSessionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::PagesEnableSessionState EnableSessionState { System::Web::Configuration::PagesEnableSessionState get(); void set(System::Web::Configuration::PagesEnableSessionState value); };" />
      <MemberSignature Language="F#" Value="member this.EnableSessionState : System.Web.Configuration.PagesEnableSessionState with get, set" Usage="System.Web.Configuration.PagesSection.EnableSessionState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("enableSessionState", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("enableSessionState", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.PagesEnableSessionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指定会话状态是启用、禁用还是只读。</summary>
        <value><see cref="P:System.Web.Configuration.PagesSection.EnableSessionState" /> 属性的某个值，指定会话状态为启用、禁用还是只读。 默认为 <see cref="F:System.Web.Configuration.PagesEnableSessionState.True" />，该值指示启用会话状态。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 下面的代码示例说明如何使用 <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> 属性。

 [!code-csharp[System.Web.Configuration.PagesSection#14](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#14)]
 [!code-vb[System.Web.Configuration.PagesSection#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#14)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">该值不是有效的 <see cref="T:System.Web.Configuration.PagesEnableSessionState" /> 枚举值。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">ASP.NET 会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="EnableViewState">
      <MemberSignature Language="C#" Value="public bool EnableViewState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.EnableViewState" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableViewState { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableViewState : bool with get, set" Usage="System.Web.Configuration.PagesSection.EnableViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("enableViewState", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("enableViewState", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是启用还是禁用视图状态。</summary>
        <value>如果启用视图状态，则为 <see langword="true" />；如果禁用视图状态，则为 <see langword="false" />。 默认为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 下面的代码示例说明如何使用 <xref:System.Web.Configuration.PagesSection.EnableViewState%2A> 属性。

 [!code-csharp[System.Web.Configuration.PagesSection#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#5)]
 [!code-vb[System.Web.Configuration.PagesSection#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#5)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb386448(v=vs.100)">ASP.NET 视图状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="EnableViewStateMac">
      <MemberSignature Language="C#" Value="public bool EnableViewStateMac { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableViewStateMac" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.EnableViewStateMac" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableViewStateMac As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableViewStateMac { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableViewStateMac : bool with get, set" Usage="System.Web.Configuration.PagesSection.EnableViewStateMac" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("enableViewStateMac", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("enableViewStateMac", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指定当页从客户端回发时，ASP.NET 是否应在页的视图状态上运行消息验证代码 (MAC)。</summary>
        <value>如果页从客户端回发时，ASP.NET 应在页的视图状态上运行消息验证代码 (MAC)，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 视图状态 MAC 是隐藏变量的加密版本，当页面发送到浏览器时，该页的视图状态将保存到该变量中。 当此属性设置为时 `true` ，将检查已加密的视图状态，以确认它在客户端上未被篡改。

> [!IMPORTANT]
>  `false`即使应用程序或页不使用视图状态，也不应在生产网站中将此特性设置为。 视图状态 MAC 有助于确保其他 ASP.NET 函数的安全性以及视图状态。



## Examples
 下面的代码示例说明如何使用 <xref:System.Web.Configuration.PagesSection.EnableViewStateMac%2A> 属性。

 [!code-csharp[System.Web.Configuration.PagesSection#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#8)]
 [!code-vb[System.Web.Configuration.PagesSection#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#8)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreDeviceFilters">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.IgnoreDeviceFilterElementCollection IgnoreDeviceFilters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Configuration.IgnoreDeviceFilterElementCollection IgnoreDeviceFilters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.IgnoreDeviceFilters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IgnoreDeviceFilters As IgnoreDeviceFilterElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::IgnoreDeviceFilterElementCollection ^ IgnoreDeviceFilters { System::Web::Configuration::IgnoreDeviceFilterElementCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreDeviceFilters : System.Web.Configuration.IgnoreDeviceFilterElementCollection" Usage="System.Web.Configuration.PagesSection.IgnoreDeviceFilters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("ignoreDeviceFilters")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("ignoreDeviceFilters")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.IgnoreDeviceFilterElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 ASP.NET 在呈现页面时应忽略的设备标记的集合。</summary>
        <value>ASP.NET 应忽略的设备标记的集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 要忽略的设备标记被指定为 HTML 命名空间前缀，它们应在浏览器中传递，而不是由 ASP.NET 处理。 例如， `sys` 用于 Microsoft Ajax 元素的前缀。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.IgnoreDeviceFilterElement" />
      </Docs>
    </Member>
    <Member MemberName="MaintainScrollPositionOnPostBack">
      <MemberSignature Language="C#" Value="public bool MaintainScrollPositionOnPostBack { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MaintainScrollPositionOnPostBack" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.MaintainScrollPositionOnPostBack" />
      <MemberSignature Language="VB.NET" Value="Public Property MaintainScrollPositionOnPostBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MaintainScrollPositionOnPostBack { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MaintainScrollPositionOnPostBack : bool with get, set" Usage="System.Web.Configuration.PagesSection.MaintainScrollPositionOnPostBack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("maintainScrollPositionOnPostBack", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("maintainScrollPositionOnPostBack", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示在从来自服务器的回发返回的过程中是否应保持页滚动位置。</summary>
        <value>如果在回发后应保持页滚动位置，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Page.IsPostBack" />
      </Docs>
    </Member>
    <Member MemberName="MasterPageFile">
      <MemberSignature Language="C#" Value="public string MasterPageFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MasterPageFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.MasterPageFile" />
      <MemberSignature Language="VB.NET" Value="Public Property MasterPageFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MasterPageFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MasterPageFile : string with get, set" Usage="System.Web.Configuration.PagesSection.MasterPageFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("masterPageFile", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("masterPageFile", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置对应用程序母版页的引用。</summary>
        <value>一个对应用程序母版页的引用。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此属性的值可以是相对路径或绝对路径。



## Examples
 下面的代码示例说明如何使用 <xref:System.Web.Configuration.PagesSection.MasterPageFile%2A> 属性。

 [!code-csharp[System.Web.Configuration.PagesSection#15](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#15)]
 [!code-vb[System.Web.Configuration.PagesSection#15](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#15)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/wtxbf3hh(v=vs.100)">ASP.NET 母版页简介</related>
      </Docs>
    </Member>
    <Member MemberName="MaxPageStateFieldLength">
      <MemberSignature Language="C#" Value="public int MaxPageStateFieldLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxPageStateFieldLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.MaxPageStateFieldLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxPageStateFieldLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxPageStateFieldLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxPageStateFieldLength : int with get, set" Usage="System.Web.Configuration.PagesSection.MaxPageStateFieldLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("maxPageStateFieldLength", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("maxPageStateFieldLength", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置单个视图状态字段可以包含的最大字符数。</summary>
        <value>单个视图状态字段可以包含的最大字符数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 呈现页面或控件时，页面和控件视图状态将存储在隐藏视图状态字段中。 如果存储的数据的长度超过 <xref:System.Web.Configuration.PagesSection.MaxPageStateFieldLength%2A> 值，则会在多个视图状态字段之间拆分数据。



## Examples
 下面的代码示例说明如何使用 <xref:System.Web.Configuration.PagesSection.MaxPageStateFieldLength%2A> 属性。

 [!code-csharp[System.Web.Configuration.PagesSection#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#10)]
 [!code-vb[System.Web.Configuration.PagesSection#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#10)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb386448(v=vs.100)">ASP.NET 视图状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="Namespaces">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.NamespaceCollection Namespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Configuration.NamespaceCollection Namespaces" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.Namespaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Namespaces As NamespaceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::NamespaceCollection ^ Namespaces { System::Web::Configuration::NamespaceCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Namespaces : System.Web.Configuration.NamespaceCollection" Usage="System.Web.Configuration.PagesSection.Namespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("namespaces")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("namespaces")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.NamespaceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.Configuration.NamespaceInfo" /> 对象的集合。</summary>
        <value>一个由 <see cref="T:System.Web.Configuration.NamespaceCollection" /> 对象构成的 <see cref="T:System.Web.Configuration.NamespaceInfo" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Configuration.TagPrefixInfo>对象对应于 `@ Import` ASP.NET 页上的指令。 `Import`指令允许指定自动导入到应用程序的所有页中的命名空间。



## Examples
 下面的代码示例说明如何使用 <xref:System.Web.Configuration.PagesSection.Namespaces%2A> 属性。

 [!code-csharp[System.Web.Configuration.PagesSection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#2)]
 [!code-vb[System.Web.Configuration.PagesSection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.NamespaceCollection" />
        <altmember cref="T:System.Web.Configuration.NamespaceInfo" />
      </Docs>
    </Member>
    <Member MemberName="PageBaseType">
      <MemberSignature Language="C#" Value="public string PageBaseType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PageBaseType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.PageBaseType" />
      <MemberSignature Language="VB.NET" Value="Public Property PageBaseType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PageBaseType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PageBaseType : string with get, set" Usage="System.Web.Configuration.PagesSection.PageBaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("pageBaseType", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("pageBaseType", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指定 .aspx 页在默认情况下继承的代码隐藏类。</summary>
        <value>一个字符串，指定 .aspx 页在默认情况下继承的代码隐藏类。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 下面的代码示例说明如何使用 <xref:System.Web.Configuration.PagesSection.PageBaseType%2A> 属性。

 [!code-csharp[System.Web.Configuration.PagesSection#18](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#18)]
 [!code-vb[System.Web.Configuration.PagesSection#18](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#18)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageParserFilterType">
      <MemberSignature Language="C#" Value="public string PageParserFilterType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PageParserFilterType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.PageParserFilterType" />
      <MemberSignature Language="VB.NET" Value="Public Property PageParserFilterType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PageParserFilterType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PageParserFilterType : string with get, set" Usage="System.Web.Configuration.PagesSection.PageParserFilterType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("pageParserFilterType", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("pageParserFilterType", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指定分析器筛选器类型。</summary>
        <value>一个指定分析器筛选器类型的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 分析器筛选器是类的一个实例，在 <xref:System.Web.UI.PageParserFilter> 分析步骤之前由页面编译过程调用，以允许在运行时对源代码进行更改。



## Examples
 下面的代码示例说明如何使用 <xref:System.Web.Configuration.PagesSection.PageParserFilterType%2A> 属性。

 [!code-csharp[System.Web.Configuration.PagesSection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#3)]
 [!code-vb[System.Web.Configuration.PagesSection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#3)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.PageParserFilter" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Web.Configuration.PagesSection.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderAllHiddenFieldsAtTopOfForm">
      <MemberSignature Language="C#" Value="public bool RenderAllHiddenFieldsAtTopOfForm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RenderAllHiddenFieldsAtTopOfForm" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.RenderAllHiddenFieldsAtTopOfForm" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderAllHiddenFieldsAtTopOfForm As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RenderAllHiddenFieldsAtTopOfForm { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RenderAllHiddenFieldsAtTopOfForm : bool with get, set" Usage="System.Web.Configuration.PagesSection.RenderAllHiddenFieldsAtTopOfForm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("renderAllHiddenFieldsAtTopOfForm", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("renderAllHiddenFieldsAtTopOfForm", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否系统生成的所有隐藏域都呈现在表单的顶部。</summary>
        <value>如果系统生成的隐藏域呈现在表单的顶部，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 您可以使用 <xref:System.Web.Configuration.PagesSection.RenderAllHiddenFieldsAtTopOfForm%2A> 属性来指定在窗体末尾呈现一些系统生成的隐藏字段。

 在早于 .NET Framework 3.5 SP1 的 ASP.NET 版本中，ASP.NET 将呈现一些隐藏 (字段，例如， `__VIEWSTATE`) 在窗体的顶部。 其他隐藏字段 (例如， `__EVENTVALIDATION`) 在窗体底部附近呈现，就在结束 `</div>` 标记之前。 默认情况下，在 ASP.NET 3.5 SP1 中，所有系统生成的隐藏字段都呈现在页面顶部。 这可以确保这些字段中的信息会发送到服务器，即使在页面加载完成之前执行了回发也是如此。 如果 <xref:System.Web.Configuration.PagesSection.RenderAllHiddenFieldsAtTopOfForm%2A> 设置为，则在 `false` 页面加载完成之前执行回发可能导致 "回发或回调参数无效" 错误。

> [!NOTE]
>  尽管属性名称指示 "所有隐藏字段"，但用户创建的隐藏字段不受此属性的设置影响。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetReadOnly">
      <MemberSignature Language="C#" Value="protected override void SetReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.PagesSection.SetReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetReadOnly ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetReadOnly();" />
      <MemberSignature Language="F#" Value="override this.SetReadOnly : unit -&gt; unit" Usage="pagesSection.SetReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartNavigation">
      <MemberSignature Language="C#" Value="public bool SmartNavigation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SmartNavigation" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.SmartNavigation" />
      <MemberSignature Language="VB.NET" Value="Public Property SmartNavigation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SmartNavigation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SmartNavigation : bool with get, set" Usage="System.Web.Configuration.PagesSection.SmartNavigation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("smartNavigation", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("smartNavigation", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否启用智能导航。</summary>
        <value>如果已启用智能导航，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
>  智能导航需要 Microsoft Internet Explorer 5.5 或更高版本。



## Examples
 下面的代码示例说明如何使用 <xref:System.Web.Configuration.PagesSection.SmartNavigation%2A> 属性。

 [!code-csharp[System.Web.Configuration.PagesSection#19](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#19)]
 [!code-vb[System.Web.Configuration.PagesSection#19](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#19)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StyleSheetTheme">
      <MemberSignature Language="C#" Value="public string StyleSheetTheme { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StyleSheetTheme" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.StyleSheetTheme" />
      <MemberSignature Language="VB.NET" Value="Public Property StyleSheetTheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StyleSheetTheme { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StyleSheetTheme : string with get, set" Usage="System.Web.Configuration.PagesSection.StyleSheetTheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("styleSheetTheme", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("styleSheetTheme", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 ASP.NET 样式表主题的名称。</summary>
        <value>ASP.NET 样式表主题的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 下面的代码示例说明如何使用 <xref:System.Web.Configuration.PagesSection.StyleSheetTheme%2A> 属性。

 [!code-csharp[System.Web.Configuration.PagesSection#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#13)]
 [!code-vb[System.Web.Configuration.PagesSection#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#13)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.StyleSheetTheme" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100)">ASP.NET 主题和外观概述</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/0yy5hxdk(v=vs.100)">如何：应用 ASP.NET 主题</related>
      </Docs>
    </Member>
    <Member MemberName="TagMapping">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.TagMapCollection TagMapping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Configuration.TagMapCollection TagMapping" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.TagMapping" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TagMapping As TagMapCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::TagMapCollection ^ TagMapping { System::Web::Configuration::TagMapCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TagMapping : System.Web.Configuration.TagMapCollection" Usage="System.Web.Configuration.PagesSection.TagMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("tagMapping")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("tagMapping")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.TagMapCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.Configuration.TagMapInfo" /> 对象的集合。</summary>
        <value>一个由 <see cref="T:System.Web.Configuration.TagMapCollection" /> 对象构成的 <see cref="T:System.Web.Configuration.TagMapInfo" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Configuration.TagPrefixInfo>对象在 ASP.NET 页上没有相应的指令。 这些 <xref:System.Web.Configuration.TagPrefixInfo> 对象允许在编译时将标记类型名称重新映射到其他类型名称。



## Examples
 下面的代码示例说明如何使用 <xref:System.Web.Configuration.PagesSection.TagMapping%2A> 属性。

 [!code-csharp[System.Web.Configuration.PagesSection#17](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#17)]
 [!code-vb[System.Web.Configuration.PagesSection#17](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#17)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Theme">
      <MemberSignature Language="C#" Value="public string Theme { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Theme" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.Theme" />
      <MemberSignature Language="VB.NET" Value="Public Property Theme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Theme { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Theme : string with get, set" Usage="System.Web.Configuration.PagesSection.Theme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("theme", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("theme", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 ASP.NET 页主题的名称。</summary>
        <value>ASP.NET 页主题的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 下面的代码示例说明如何使用 <xref:System.Web.Configuration.PagesSection.Theme%2A> 属性。

 [!code-csharp[System.Web.Configuration.PagesSection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#4)]
 [!code-vb[System.Web.Configuration.PagesSection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#4)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.Theme" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100)">ASP.NET 主题和外观概述</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/0yy5hxdk(v=vs.100)">如何：应用 ASP.NET 主题</related>
      </Docs>
    </Member>
    <Member MemberName="UserControlBaseType">
      <MemberSignature Language="C#" Value="public string UserControlBaseType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserControlBaseType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.UserControlBaseType" />
      <MemberSignature Language="VB.NET" Value="Public Property UserControlBaseType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserControlBaseType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UserControlBaseType : string with get, set" Usage="System.Web.Configuration.PagesSection.UserControlBaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("userControlBaseType", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("userControlBaseType", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指定用户控件在默认情况下继承的代码隐藏类。</summary>
        <value>一个字符串，指定用户控件在默认情况下继承的代码隐藏文件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 下面的代码示例说明如何使用 <xref:System.Web.Configuration.PagesSection.UserControlBaseType%2A> 属性。

 [!code-csharp[System.Web.Configuration.PagesSection#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#11)]
 [!code-vb[System.Web.Configuration.PagesSection#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#11)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateRequest">
      <MemberSignature Language="C#" Value="public bool ValidateRequest { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateRequest" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.ValidateRequest" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateRequest As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateRequest { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateRequest : bool with get, set" Usage="System.Web.Configuration.PagesSection.ValidateRequest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("validateRequest", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("validateRequest", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值确定 ASP.NET 是否针对危险值检查来自浏览器的输入。 有关详细信息，请参阅<see href="https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)">脚本侵入概述</see>。</summary>
        <value>如果 ASP.NET 针对危险值检查来自浏览器的输入，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 请求验证的执行方式是将所有输入数据与潜在危险值的列表进行比较。 如果出现匹配项，ASP.NET 将引发 <xref:System.Web.HttpRequestValidationException>。



## Examples
 下面的代码示例说明如何使用 <xref:System.Web.Configuration.PagesSection.ValidateRequest%2A> 属性。

 [!code-csharp[System.Web.Configuration.PagesSection#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#7)]
 [!code-vb[System.Web.Configuration.PagesSection#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#7)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)">脚本攻击概述</related>
      </Docs>
    </Member>
    <Member MemberName="ViewStateEncryptionMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.ViewStateEncryptionMode ViewStateEncryptionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ViewStateEncryptionMode ViewStateEncryptionMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.ViewStateEncryptionMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewStateEncryptionMode As ViewStateEncryptionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ViewStateEncryptionMode ViewStateEncryptionMode { System::Web::UI::ViewStateEncryptionMode get(); void set(System::Web::UI::ViewStateEncryptionMode value); };" />
      <MemberSignature Language="F#" Value="member this.ViewStateEncryptionMode : System.Web.UI.ViewStateEncryptionMode with get, set" Usage="System.Web.Configuration.PagesSection.ViewStateEncryptionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("viewStateEncryptionMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("viewStateEncryptionMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ViewStateEncryptionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 ASP.NET 在保留 <see langword="ViewState" /> 值时所使用的加密模式。</summary>
        <value>一个 <see cref="T:System.Web.UI.ViewStateEncryptionMode" /> 枚举值，指示 <see langword="ViewState" /> 值在何时加密。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 可能的 <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> 枚举值为 `Always` 、 `Auto` 和 `Never` 。 默认值为 `Auto`。 如果将 <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> 属性设置为 `Auto` ，则 `ViewState` 在控件请求它时将对其进行加密。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ViewStateEncryptionMode" />
      </Docs>
    </Member>
  </Members>
</Type>
