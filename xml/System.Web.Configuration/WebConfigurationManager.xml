<Type Name="WebConfigurationManager" FullName="System.Web.Configuration.WebConfigurationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="69ce8822e68248cb17ec60e81582a20e5abdd5e2" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89781472" /></Metadata><TypeSignature Language="C#" Value="public static class WebConfigurationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WebConfigurationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.WebConfigurationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class WebConfigurationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebConfigurationManager abstract sealed" />
  <TypeSignature Language="F#" Value="type WebConfigurationManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>在配置文件应用于 Web 应用程序时提供对配置文件的访问。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.Configuration.WebConfigurationManager> 类可以访问计算机和应用程序信息。  
  
 使用 <xref:System.Web.Configuration.WebConfigurationManager> 是使用与 Web 应用程序相关的配置文件的首选方法。 对于客户端应用程序，请使用 <xref:System.Configuration.ConfigurationManager> 类。  
  
 应用程序可以扩展 <xref:System.Configuration> 类型，也可以直接使用它们来处理配置信息，如下面的列表中所述：  
  
-   `Handling configuration`. 若要使用标准类型处理配置信息，请使用下列方法之一：  
  
    -   `Accessing a section`. 若要访问应用程序的配置信息，必须使用 `GetSection` 提供的方法之一 <xref:System.Web.Configuration.WebConfigurationManager> 。 对于 `<appSettings>` 和 `<connectionStrings>` ，请使用 <xref:System.Web.Configuration.WebConfigurationManager.AppSettings%2A> 和 <xref:System.Web.Configuration.WebConfigurationManager.ConnectionStrings%2A> 属性。 这些方法执行只读操作，使用配置的单个缓存实例，并且可以识别多线程。  
  
    -   `Accessing configuration files`. 应用程序可以在本地或远程读取和写入任意级别的配置设置。 使用由 `open` 提供的方法之一 <xref:System.Web.Configuration.WebConfigurationManager> 。 这些方法将返回一个 <xref:System.Configuration.Configuration> 对象，该对象进而提供处理基础配置文件所需的方法和属性。 这些方法执行读取或写入操作，并在每次打开文件时重新创建配置数据。  
  
    -   `Advanced configuration`. 更高级的配置处理由类型、、、、、 <xref:System.Configuration.SectionInformation> <xref:System.Configuration.PropertyInformation> 和提供 <xref:System.Configuration.PropertyInformationCollection> <xref:System.Configuration.ElementInformation> <xref:System.Configuration.ContextInformation> <xref:System.Configuration.ConfigurationSectionGroup> <xref:System.Configuration.ConfigurationSectionGroupCollection> 。  
  
-   `Extending configuration standard types`. 你还可以通过 <xref:System.Configuration.ConfigurationElement> <xref:System.Configuration.ConfigurationElementCollection> <xref:System.Configuration.ConfigurationProperty> <xref:System.Configuration.ConfigurationSection> 使用编程或特性化模型扩展标准配置类型（如、、和）来提供自定义配置元素。 <xref:System.Configuration.ConfigurationSection>有关如何以编程方式扩展标准配置类型的示例，请参阅类。 <xref:System.Configuration.ConfigurationElement>有关如何使用特性化模型扩展标准配置类型的示例，请参阅类。  
  
   
  
## Examples  
 下面的示例演示如何使用  
  
 <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> 方法。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#2)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><see cref="T:System.Configuration.Configuration" />类允许以编程方式访问配置文件。 使用由提供的打开方法之一 <see cref="T:System.Web.Configuration.WebConfigurationManager" /> 。 这些方法将返回一个 <see cref="T:System.Configuration.Configuration" /> 对象，该对象进而提供处理基础配置文件所需的方法和属性。 可以按如下所示访问这些文件以进行读取或写入： 
你使用 <see cref="M:System.Configuration.Configuration.GetSection(System.String)" /> 或 <see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" /> 来读取配置信息。 请注意，读取的用户或进程必须具有以下权限： 
-对当前配置层次结构级别的配置文件的读取权限。  
  
-对所有父配置文件的读取权限。  
  
如果你的应用程序需要对自己的配置进行只读访问，则建议你使用这些 <see cref="Overload:System.Web.Configuration.WebConfigurationManager.GetSection" /> 方法。 这些方法提供对当前应用程序的缓存配置值的访问，该配置值具有比类更好的性能 <see cref="T:System.Configuration.Configuration" /> 。  
  
 <block subset="none" type="note"><para>  
 如果使用 <see langword="GetSection" /> 采用参数的静态方法 <paramref name="path" /> ，则 path 参数必须引用运行代码的应用程序; 否则，将忽略该参数并返回当前正在运行的应用程序的配置信息。  
  
</para></block>  
  
 使用其中一种 <see cref="Overload:System.Configuration.Configuration.Save" /> 方法来编写配置信息。 请注意，写入的用户或进程必须具有以下权限： 
-对当前配置层次结构级别的配置文件和目录具有写入权限。  
  
-对所有配置文件的读取权限。</para></block>
    <altmember cref="T:System.Configuration.Configuration" />
    <altmember cref="T:System.Configuration.ConfigurationManager" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178683(v=vs.100)">ASP.NET 配置概述</related>
  </Docs>
  <Members>
    <Member MemberName="AppSettings">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.NameValueCollection AppSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Specialized.NameValueCollection AppSettings" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.WebConfigurationManager.AppSettings" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AppSettings As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Specialized::NameValueCollection ^ AppSettings { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AppSettings : System.Collections.Specialized.NameValueCollection" Usage="System.Web.Configuration.WebConfigurationManager.AppSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取该网站的应用程序设置。</summary>
        <value>一个 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 对象，它包含当前 Web 应用程序的默认配置的 <see cref="T:System.Configuration.AppSettingsSection" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一个 <xref:System.Configuration.AppSettingsSection> 对象，它包含配置文件的 `<appSettings>` 节。  
  
   
  
## Examples  
 下面的示例演示如何使用方法访问配置信息 <xref:System.Web.Configuration.WebConfigurationManager.AppSettings%2A> 。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#8)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">未能使用该应用程序设置数据检索到有效的 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 对象。</exception>
        <altmember cref="T:System.Configuration.AppSettingsSection" />
        <altmember cref="T:System.Collections.Specialized.NameValueCollection" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionStrings">
      <MemberSignature Language="C#" Value="public static System.Configuration.ConnectionStringSettingsCollection ConnectionStrings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Configuration.ConnectionStringSettingsCollection ConnectionStrings" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.WebConfigurationManager.ConnectionStrings" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ConnectionStrings As ConnectionStringSettingsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Configuration::ConnectionStringSettingsCollection ^ ConnectionStrings { System::Configuration::ConnectionStringSettingsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionStrings : System.Configuration.ConnectionStringSettingsCollection" Usage="System.Web.Configuration.WebConfigurationManager.ConnectionStrings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConnectionStringSettingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取网站的连接字符串。</summary>
        <value>一个 <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> 对象，它包含当前 Web 应用程序的默认配置的 <see cref="T:System.Configuration.ConnectionStringsSection" /> 对象的内容。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例演示如何使用 <xref:System.Web.Configuration.WebConfigurationManager.ConnectionStrings%2A> 属性访问配置信息并枚举结果。 若要访问特定的连接字符串，请使用返回的，并将所 <xref:System.Configuration.ConnectionStringSettingsCollection> 需的连接字符串的名称用作索引器。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#7)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">未能检索到有效的 <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> 对象。</exception>
        <altmember cref="T:System.Configuration.ConnectionStringsSection" />
        <altmember cref="T:System.Configuration.ConnectionStringSettingsCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSection">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>从当前 Web 应用程序的默认配置文件中检索指定的配置节。</summary>
        <altmember cref="T:System.Configuration.Configuration" />
        <altmember cref="T:System.Configuration.ConfigurationManager" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178683(v=vs.100)">ASP.NET 配置概述</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSection">
      <MemberSignature Language="C#" Value="public static object GetSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.GetSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSection (sectionName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetSection(System::String ^ sectionName);" />
      <MemberSignature Language="F#" Value="static member GetSection : string -&gt; obj" Usage="System.Web.Configuration.WebConfigurationManager.GetSection sectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName">配置节名称。</param>
        <summary>从当前 Web 应用程序的配置文件中检索指定的配置节。</summary>
        <returns>指定的配置节对象或 <see langword="null" />（如果该节不存在）。 请记住，将 <see cref="M:System.Web.Configuration.WebConfigurationManager.GetSection(System.String)" /> 用作运行时操作存在安全限制。 例如，您可能无法在运行时访问某节以进行修改。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> 从 web 应用程序中调用，它将从系统根据 Web 应用程序配置层次结构选择的配置文件中获取部分。  
  
> [!CAUTION]
>  如果你的应用程序使用的协议不同于 HTTP，则在 <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> 其参数列表中采用节名称和路径的重载是要使用的协议。 您必须指定配置文件路径，因为系统无法对配置层次结构级别作出任何假设。 如果使用 <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> 只采用部分名称的重载，则系统将始终尝试在应用程序级别返回配置设置。 但请注意，如果其指定的路径不在当前应用程序的范围内，则采用路径的重载也将返回当前正在运行的应用程序的应用程序级别的配置设置。  
  
 你可以 <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> 从客户端应用程序中调用。 在这种情况下，它会根据客户端配置层次结构从系统所选的配置文件中获取默认节。 通常，这是 Machine.config 文件，除非已设置了映射的配置。 有关映射配置文件的详细说明，请参阅下一步所述的映射方法。  
  
> [!NOTE]
>  此 <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> 方法是一种运行时方法，可对应用程序运行时所在的层次结构级别的配置文件的部分进行操作。 对于非运行时操作，请 <xref:System.Configuration.Configuration.GetSection%2A> 改用。 此方法在配置文件的指定节上操作，该配置文件使用一种用于打开配置文件的重载方法获取 <xref:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration%2A> 。  
  
   
  
## Examples  
 本节中的示例演示如何使用方法访问配置信息 <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> 。  
  
 下面的示例演示了一个可从 Web 应用程序或控制台应用程序访问的部分。  
  
> [!NOTE]
>  此示例演示如何使用 <xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A> 方法 <xref:System.Configuration.ConfigurationSection> 从配置文件中获取对象。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#2)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">未能加载有效的配置文件。</exception>
        <block subset="none" type="overrides"><para>在使用之前，必须将返回值强制转换为所需的配置类型。 为了避免可能的强制转换异常，应 <see langword="as" /> 在 c # 中使用运算符或 Visual Basic 中的函数时使用条件转换运算。</para></block>
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
    <Member MemberName="GetSection">
      <MemberSignature Language="C#" Value="public static object GetSection (string sectionName, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetSection(string sectionName, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.GetSection(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSection (sectionName As String, path As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetSection(System::String ^ sectionName, System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetSection : string * string -&gt; obj" Usage="System.Web.Configuration.WebConfigurationManager.GetSection (sectionName, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName">配置节名称。</param>
        <param name="path">虚拟配置文件路径。</param>
        <summary>从指定的 Web 应用程序的配置文件中的指定位置检索指定的配置节。</summary>
        <returns>指定的配置节对象或 <see langword="null" />（如果该节不存在）。 请记住，将 <see cref="M:System.Web.Configuration.WebConfigurationManager.GetSection(System.String,System.String)" /> 用作运行时操作存在安全限制。 例如，您可能无法在运行时访问某节以进行修改。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> 从 Web 应用程序中调用，它将从配置层次结构中由指定路径定义的配置文件中获取部分。  
  
> [!CAUTION]
>  如果你的应用程序使用的协议不同于 HTTP，则在 <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> 其参数列表中采用节名称和路径的重载是要使用的协议。 您必须指定配置文件路径，因为系统无法对配置层次结构级别作出任何假设。 如果使用 <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> 只采用部分名称的重载，则系统将始终尝试在应用程序级别返回配置设置。 但请注意，如果其指定的路径不在当前应用程序的范围内，则采用路径的重载也将返回当前正在运行的应用程序的应用程序级别的配置设置。  
  
 不能从客户端应用程序中调用此方法。  
  
 如果要从位于当前 Web 应用程序目录级别的配置文件中检索配置节，请使用 <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> 方法。  
  
> [!NOTE]
>  <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A>方法是在应用程序运行的层次结构级别上的配置文件部分中操作的运行时方法。 对于非运行时操作，请 <xref:System.Configuration.Configuration.GetSection%2A> 改用。 此方法在使用配置文件方法之一获取的配置文件的指定节上操作 `open` 。  
  
   
  
## Examples  
 下面的示例演示如何使用方法访问配置信息 <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> 。  
  
> [!NOTE]
>  此示例演示如何使用 <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> 方法 <xref:System.Configuration.ConfigurationSection> 从指定的配置文件中获取一个对象。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#5)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">从 Web 应用程序外调用方法。</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">未能加载有效的配置文件。</exception>
        <block subset="none" type="overrides"><para>在使用之前，必须将返回值强制转换为所需的配置类型。 为了避免可能的强制转换异常，应 <see langword="as" /> 在 c # 中使用运算符或 Visual Basic 中的函数时使用条件转换运算。</para></block>
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
    <Member MemberName="GetWebApplicationSection">
      <MemberSignature Language="C#" Value="public static object GetWebApplicationSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetWebApplicationSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetWebApplicationSection (sectionName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetWebApplicationSection(System::String ^ sectionName);" />
      <MemberSignature Language="F#" Value="static member GetWebApplicationSection : string -&gt; obj" Usage="System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection sectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName">配置节名称。</param>
        <summary>从当前 Web 应用程序的配置文件中检索指定的配置节。</summary>
        <returns>指定的配置节对象，或 <see langword="null" />（如果该节不存在），或某个内部对象（如果该节不能在运行时访问）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 <xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A> 从 web 应用程序中调用，它将从系统根据 Web 应用程序配置层次结构选择的配置文件中获取部分。  
  
 你可以 <xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A> 从客户端应用程序中调用。 在这种情况下，它会根据客户端配置层次结构从系统所选的配置文件中获取默认节。 通常，这是 Machine.config 文件，除非已设置了映射的配置。 有关映射配置文件的详细说明，请参阅下一步所述的映射方法。  
  
> [!NOTE]
>  此 <xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A> 方法是一种运行时操作，用于操作位于当前级别的应用程序配置文件的部分。 <xref:System.Configuration.Configuration.GetSection%2A>但方法并不是运行时操作，而是在通过用于打开配置文件的方法之一获取的指定节上操作。  
  
   
  
## Examples  
 下面的示例演示如何使用方法访问配置信息 <xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A> 。  
  
> [!NOTE]
>  此示例演示如何使用 <xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A> 方法 <xref:System.Configuration.ConfigurationSection> 从默认的配置文件中获取一个对象。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#6)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">未能加载有效的配置文件。</exception>
        <block subset="none" type="overrides"><para>在使用之前，必须将返回值强制转换为所需的配置类型。 为了避免可能的强制转换异常，应 <see langword="as" /> 在 c # 中使用运算符或 Visual Basic 中的函数时使用条件转换运算。</para></block>
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenMachineConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将计算机配置文件作为 <see cref="T:System.Configuration.Configuration" /> 对象打开以允许读或写操作。</summary>
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMachineConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMachineConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMachineConfiguration () As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMachineConfiguration();" />
      <MemberSignature Language="F#" Value="static member OpenMachineConfiguration : unit -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将当前计算机上的计算机配置文件作为 <see cref="T:System.Configuration.Configuration" /> 对象打开以允许读或写操作。</summary>
        <returns><see cref="T:System.Configuration.Configuration" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A>方法打开运行应用程序的计算机上的计算机配置文件。 此文件位于标准生成目录%windir%\Microsoft.NET\Framework\version\config。  
  
   
  
## Examples  
 下面的示例演示如何使用方法访问配置信息 <xref:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration%2A> 。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#9)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">未能加载有效的配置文件。</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMachineConfiguration (string locationSubPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMachineConfiguration(string locationSubPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMachineConfiguration (locationSubPath As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMachineConfiguration(System::String ^ locationSubPath);" />
      <MemberSignature Language="F#" Value="static member OpenMachineConfiguration : string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration locationSubPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationSubPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="locationSubPath">应用计算机配置的应用程序路径。</param>
        <summary>将当前计算机上的计算机配置文件作为 <see cref="T:System.Configuration.Configuration" /> 对象打开以允许读或写操作。</summary>
        <returns><see cref="T:System.Configuration.Configuration" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法打开适用于参数所指定的目录的计算机配置文件 `locationSubPath` 。  
  
   
  
## Examples  
 下面的示例演示如何使用方法访问配置信息 <xref:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration%2A> 。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#10)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">未能加载有效的配置文件。</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMachineConfiguration (string locationSubPath, string server);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMachineConfiguration(string locationSubPath, string server) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMachineConfiguration (locationSubPath As String, server As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMachineConfiguration(System::String ^ locationSubPath, System::String ^ server);" />
      <MemberSignature Language="F#" Value="static member OpenMachineConfiguration : string * string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration (locationSubPath, server)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationSubPath" Type="System.String" />
        <Parameter Name="server" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="locationSubPath">配置应用的应用程序路径。</param>
        <param name="server">完全限定服务器名，将返回该服务器的配置。</param>
        <summary>将指定服务器上的指定计算机配置文件作为 <see cref="T:System.Configuration.Configuration" /> 对象打开以允许读或写操作。</summary>
        <returns><see cref="T:System.Configuration.Configuration" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法打开计算机配置文件，该文件位于参数所指定的目录 `locationSubPath` 和参数指定的计算机上 `server` 。  
  
   
  
## Examples  
 下面的示例演示如何使用方法访问配置信息 <xref:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration%2A> 。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#11)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">未能加载有效的配置文件。</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMachineConfiguration (string locationSubPath, string server, IntPtr userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMachineConfiguration(string locationSubPath, string server, native int userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration(System.String,System.String,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMachineConfiguration (locationSubPath As String, server As String, userToken As IntPtr) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMachineConfiguration(System::String ^ locationSubPath, System::String ^ server, IntPtr userToken);" />
      <MemberSignature Language="F#" Value="static member OpenMachineConfiguration : string * string * nativeint -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration (locationSubPath, server, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationSubPath" Type="System.String" />
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="userToken" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="locationSubPath">配置应用的应用程序路径。</param>
        <param name="server">完全限定服务器名，将返回该服务器的配置。</param>
        <param name="userToken">要使用的帐户标记。</param>
        <summary>使用指定的安全上下文将指定服务器上的指定计算机配置文件作为 <see cref="T:System.Configuration.Configuration" /> 对象打开以允许读或写操作。</summary>
        <returns><see cref="T:System.Configuration.Configuration" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法用于通过模拟访问配置文件。  
  
> [!NOTE]
>  通常从类的实例 <xref:System.Security.Principal.WindowsIdentity> 或通过调用非托管代码（如调用 WINDOWS API）来检索帐户令牌 `LogonUser` 。 有关非托管代码调用的详细信息，请参阅 [使用非托管 DLL 函数](/dotnet/framework/interop/consuming-unmanaged-dll-functions)。  
  
   
  
## Examples  
 下面的示例演示如何使用方法访问配置信息 <xref:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration%2A> 。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#12)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">没有为 <paramref name="server" /> 或 <paramref name="userToken" /> 参数提供有效值。</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">未能加载有效的配置文件。</exception>
        <altmember cref="T:System.Configuration.Configuration" />
        <altmember cref="T:System.Security.Principal.WindowsIdentity" />
        <related type="Article" href="/dotnet/framework/interop/consuming-unmanaged-dll-functions">使用非托管 DLL 函数</related>
      </Docs>
    </Member>
    <Member MemberName="OpenMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMachineConfiguration (string locationSubPath, string server, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMachineConfiguration(string locationSubPath, string server, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMachineConfiguration (locationSubPath As String, server As String, userName As String, password As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMachineConfiguration(System::String ^ locationSubPath, System::String ^ server, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="static member OpenMachineConfiguration : string * string * string * string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration (locationSubPath, server, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationSubPath" Type="System.String" />
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="locationSubPath">配置应用的应用程序路径。</param>
        <param name="server">完全限定服务器名，将返回该服务器的配置。</param>
        <param name="userName">打开文件时要使用的用户全名 (Domain\User)。</param>
        <param name="password">用户名的密码。</param>
        <summary>使用指定的安全上下文将指定服务器上的指定计算机配置文件作为 <see cref="T:System.Configuration.Configuration" /> 对象打开以允许读或写操作。</summary>
        <returns><see cref="T:System.Configuration.Configuration" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法用于通过模拟访问配置文件。  
  
   
  
## Examples  
 下面的示例演示如何使用方法访问配置信息 <xref:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration%2A> 。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#13)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="server" /> 或 <paramref name="userName" /> 和 <paramref name="password" /> 参数无效。</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">未能加载有效的配置文件。</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenMappedMachineConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将计算机配置文件作为 <see cref="T:System.Configuration.Configuration" /> 对象打开以允许读或写操作。</summary>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenMappedMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedMachineConfiguration (System.Configuration.ConfigurationFileMap fileMap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedMachineConfiguration(class System.Configuration.ConfigurationFileMap fileMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedMachineConfiguration (fileMap As ConfigurationFileMap) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedMachineConfiguration(System::Configuration::ConfigurationFileMap ^ fileMap);" />
      <MemberSignature Language="F#" Value="static member OpenMappedMachineConfiguration : System.Configuration.ConfigurationFileMap -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenMappedMachineConfiguration fileMap" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ConfigurationFileMap" />
      </Parameters>
      <Docs>
        <param name="fileMap">要取代默认计算机配置文件而使用的 <see cref="T:System.Configuration.ConfigurationFileMap" /> 对象。</param>
        <summary>使用指定的文件映射将计算机配置文件作为 <see cref="T:System.Configuration.Configuration" /> 对象打开以允许读或写操作。</summary>
        <returns><see cref="T:System.Configuration.Configuration" /> 对象。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">未能加载有效的配置文件。</exception>
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMapping" />
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />
      </Docs>
    </Member>
    <Member MemberName="OpenMappedMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedMachineConfiguration (System.Configuration.ConfigurationFileMap fileMap, string locationSubPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedMachineConfiguration(class System.Configuration.ConfigurationFileMap fileMap, string locationSubPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedMachineConfiguration (fileMap As ConfigurationFileMap, locationSubPath As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedMachineConfiguration(System::Configuration::ConfigurationFileMap ^ fileMap, System::String ^ locationSubPath);" />
      <MemberSignature Language="F#" Value="static member OpenMappedMachineConfiguration : System.Configuration.ConfigurationFileMap * string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenMappedMachineConfiguration (fileMap, locationSubPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ConfigurationFileMap" />
        <Parameter Name="locationSubPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileMap">要取代默认计算机配置文件而使用的 <see cref="T:System.Configuration.ConfigurationFileMap" /> 对象。</param>
        <param name="locationSubPath">配置应用的特定资源。</param>
        <summary>使用指定的文件映射和位置将计算机配置文件作为 <see cref="T:System.Configuration.Configuration" /> 对象打开以允许读或写操作。</summary>
        <returns><see cref="T:System.Configuration.Configuration" /> 对象。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">未能加载有效的配置文件。</exception>
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMapping" />
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenMappedWebConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>使用指定的文件映射将 Web 应用程序配置文件作为 <see cref="T:System.Configuration.Configuration" /> 对象打开以允许读或写操作。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 需要将虚拟目录层次结构映射到物理目录时，请使用映射机制。  
  
   
  
## Examples  
 下面的示例演示如何将虚拟目录层次结构映射到物理目录层次结构。 此处显示的示例用于重载成员。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#20](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#20)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMapping" />
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenMappedWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedWebConfiguration (System.Web.Configuration.WebConfigurationFileMap fileMap, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedWebConfiguration(class System.Web.Configuration.WebConfigurationFileMap fileMap, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration(System.Web.Configuration.WebConfigurationFileMap,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedWebConfiguration (fileMap As WebConfigurationFileMap, path As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedWebConfiguration(System::Web::Configuration::WebConfigurationFileMap ^ fileMap, System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member OpenMappedWebConfiguration : System.Web.Configuration.WebConfigurationFileMap * string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration (fileMap, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Web.Configuration.WebConfigurationFileMap" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileMap">用于替换默认 Web 应用程序配置文件的 <see cref="T:System.Web.Configuration.WebConfigurationFileMap" /> 对象。</param>
        <param name="path">配置文件的虚拟路径。</param>
        <summary>使用指定的文件映射和虚拟路径将指定的 Web 应用程序配置文件作为 <see cref="T:System.Configuration.Configuration" /> 对象打开以允许读或写操作。</summary>
        <returns><see cref="T:System.Configuration.Configuration" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要获取 <xref:System.Configuration.Configuration> 资源的对象，你的代码必须对它继承其设置的所有配置文件具有读取权限。 若要更新配置文件，你的代码还必须对配置文件及其所在的目录具有写入权限。  
  
   
  
## Examples  
 下面的示例显示如何使用 <xref:System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration%2A> 方法。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#21](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#21)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#21](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#21)]  
  
 前面的示例使用以下自定义方法生成 <xref:System.Configuration.ConfigurationFileMap> 对象。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#20](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#20)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#20)]  
  
 <xref:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration%2A>有关演示如何将虚拟目录层次结构映射到物理目录层次结构的示例，请参阅。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">未能加载有效的配置文件。</exception>
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMapping" />
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />
      </Docs>
    </Member>
    <Member MemberName="OpenMappedWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedWebConfiguration (System.Web.Configuration.WebConfigurationFileMap fileMap, string path, string site);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedWebConfiguration(class System.Web.Configuration.WebConfigurationFileMap fileMap, string path, string site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration(System.Web.Configuration.WebConfigurationFileMap,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedWebConfiguration (fileMap As WebConfigurationFileMap, path As String, site As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedWebConfiguration(System::Web::Configuration::WebConfigurationFileMap ^ fileMap, System::String ^ path, System::String ^ site);" />
      <MemberSignature Language="F#" Value="static member OpenMappedWebConfiguration : System.Web.Configuration.WebConfigurationFileMap * string * string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration (fileMap, path, site)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Web.Configuration.WebConfigurationFileMap" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="site" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileMap">用于替换默认 Web 应用程序配置文件映射的 <see cref="T:System.Web.Configuration.WebConfigurationFileMap" /> 对象。</param>
        <param name="path">配置文件的虚拟路径。</param>
        <param name="site">显示在 Internet 信息服务 (IIS) 配置中的应用程序网站的名称。</param>
        <summary>使用指定的文件映射、虚拟路径和站点名称将指定的 Web 应用程序配置文件作为 <see cref="T:System.Configuration.Configuration" /> 对象打开以允许读或写操作。</summary>
        <returns><see cref="T:System.Configuration.Configuration" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要获取 <xref:System.Configuration.Configuration> 资源的对象，你的代码必须对它继承其设置的所有配置文件具有读取权限。 若要更新配置文件，你的代码还必须对配置文件及其所在的目录具有写入权限。  
  
   
  
## Examples  
 下面的示例显示如何使用 <xref:System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration%2A> 方法。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#22](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#22)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#22](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#22)]  
  
 <xref:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration%2A>有关演示如何将虚拟目录层次结构映射到物理目录层次结构的示例，请参阅。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">未能加载有效的配置文件。</exception>
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMapping" />
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />
      </Docs>
    </Member>
    <Member MemberName="OpenMappedWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedWebConfiguration (System.Web.Configuration.WebConfigurationFileMap fileMap, string path, string site, string locationSubPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedWebConfiguration(class System.Web.Configuration.WebConfigurationFileMap fileMap, string path, string site, string locationSubPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration(System.Web.Configuration.WebConfigurationFileMap,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedWebConfiguration (fileMap As WebConfigurationFileMap, path As String, site As String, locationSubPath As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedWebConfiguration(System::Web::Configuration::WebConfigurationFileMap ^ fileMap, System::String ^ path, System::String ^ site, System::String ^ locationSubPath);" />
      <MemberSignature Language="F#" Value="static member OpenMappedWebConfiguration : System.Web.Configuration.WebConfigurationFileMap * string * string * string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration (fileMap, path, site, locationSubPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Web.Configuration.WebConfigurationFileMap" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="site" Type="System.String" />
        <Parameter Name="locationSubPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileMap">用于替换默认 Web 应用程序配置文件映射的 <see cref="T:System.Web.Configuration.WebConfigurationFileMap" /> 对象。</param>
        <param name="path">配置文件的虚拟路径。</param>
        <param name="site">显示在 Internet 信息服务 (IIS) 配置中的应用程序网站的名称。</param>
        <param name="locationSubPath">配置应用的特定资源。</param>
        <summary>使用指定的文件映射、虚拟路径、站点名称和位置将指定的 Web 应用程序配置文件作为 <see cref="T:System.Configuration.Configuration" /> 对象打开以允许读或写操作。</summary>
        <returns><see cref="T:System.Configuration.Configuration" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要获取 <xref:System.Configuration.Configuration> 资源的对象，你的代码必须对它继承其设置的所有配置文件具有读取权限。 若要更新配置文件，你的代码还必须对配置文件及其所在的目录具有写入权限。  
  
   
  
## Examples  
 下面的示例显示如何使用 <xref:System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration%2A> 方法。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#23](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#23)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#23](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#23)]  
  
 <xref:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration%2A>有关演示如何将虚拟目录层次结构映射到物理目录层次结构的示例，请参阅。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">未能加载有效的配置文件。</exception>
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMapping" />
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenWebConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将 Web 应用程序配置文件作为 <see cref="T:System.Configuration.Configuration" /> 对象打开。</summary>
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMapping" />
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenWebConfiguration (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenWebConfiguration(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenWebConfiguration (path As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenWebConfiguration(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member OpenWebConfiguration : string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">配置文件的虚拟路径。 如果为 <see langword="null" />，则打开根 Web.config 文件。</param>
        <summary>使用指定的虚拟路径将 Web 应用程序配置文件作为 <see cref="T:System.Configuration.Configuration" /> 对象打开以允许读或写操作。</summary>
        <returns><see cref="T:System.Configuration.Configuration" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要获取 <xref:System.Configuration.Configuration> 资源的对象，你的代码必须对它继承其设置的所有配置文件具有读取权限。 若要更新配置文件，你的代码还必须对配置文件及其所在的目录具有写入权限。  
  
   
  
## Examples  
 下面的示例演示如何使用方法访问配置信息 <xref:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration%2A> 。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#14](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#14)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">未能加载有效的配置文件。</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenWebConfiguration (string path, string site);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenWebConfiguration(string path, string site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenWebConfiguration (path As String, site As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenWebConfiguration(System::String ^ path, System::String ^ site);" />
      <MemberSignature Language="F#" Value="static member OpenWebConfiguration : string * string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration (path, site)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="site" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">配置文件的虚拟路径。</param>
        <param name="site">显示在 Internet 信息服务 (IIS) 配置中的应用程序网站的名称。</param>
        <summary>使用指定的虚拟路径和站点名称将 Web 应用程序配置文件作为 <see cref="T:System.Configuration.Configuration" /> 对象打开以允许读或写操作。</summary>
        <returns><see cref="T:System.Configuration.Configuration" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要获取 <xref:System.Configuration.Configuration> 资源的对象，你的代码必须对它继承其设置的所有配置文件具有读取权限。 若要更新配置文件，你的代码还必须对配置文件及其所在的目录具有写入权限。  
  
   
  
## Examples  
 下面的示例演示如何使用方法访问配置信息 <xref:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration%2A> 。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#15](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#15)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#15](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">未能加载有效的配置文件。</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenWebConfiguration (string path, string site, string locationSubPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenWebConfiguration(string path, string site, string locationSubPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenWebConfiguration (path As String, site As String, locationSubPath As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenWebConfiguration(System::String ^ path, System::String ^ site, System::String ^ locationSubPath);" />
      <MemberSignature Language="F#" Value="static member OpenWebConfiguration : string * string * string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration (path, site, locationSubPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="site" Type="System.String" />
        <Parameter Name="locationSubPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">配置文件的虚拟路径。</param>
        <param name="site">显示在 Internet 信息服务 (IIS) 配置中的应用程序网站的名称。</param>
        <param name="locationSubPath">配置应用的特定资源。</param>
        <summary>使用指定的虚拟路径、网站名称和位置将 Web 应用程序配置文件作为 <see cref="T:System.Configuration.Configuration" /> 对象打开以允许读或写操作。</summary>
        <returns><see cref="T:System.Configuration.Configuration" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要获取 <xref:System.Configuration.Configuration> 资源的对象，你的代码必须对它继承其设置的所有配置文件具有读取权限。 若要更新配置文件，你的代码还必须对配置文件及其所在的目录具有写入权限。  
  
   
  
## Examples  
 下面的示例演示如何使用方法访问配置信息 <xref:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration%2A> 。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#16](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#16)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#16](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">未能加载有效的配置文件。</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenWebConfiguration (string path, string site, string locationSubPath, string server);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenWebConfiguration(string path, string site, string locationSubPath, string server) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenWebConfiguration (path As String, site As String, locationSubPath As String, server As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenWebConfiguration(System::String ^ path, System::String ^ site, System::String ^ locationSubPath, System::String ^ server);" />
      <MemberSignature Language="F#" Value="static member OpenWebConfiguration : string * string * string * string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration (path, site, locationSubPath, server)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="site" Type="System.String" />
        <Parameter Name="locationSubPath" Type="System.String" />
        <Parameter Name="server" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">配置文件的虚拟路径。</param>
        <param name="site">显示在 Internet 信息服务 (IIS) 配置中的应用程序网站的名称。</param>
        <param name="locationSubPath">配置应用的特定资源。</param>
        <param name="server">Web 应用程序所在的服务器的网络名称。</param>
        <summary>使用指定的虚拟路径、站点名称、位置和服务器将 Web 应用程序配置文件作为 <see cref="T:System.Configuration.Configuration" /> 对象打开以允许读或写操作。</summary>
        <returns><see cref="T:System.Configuration.Configuration" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要获取 <xref:System.Configuration.Configuration> 远程资源的对象，你的代码必须具有远程计算机上的管理权限。  
  
   
  
## Examples  
 下面的示例演示如何使用方法访问配置信息 <xref:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration%2A> 。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#17](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#17)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#17](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">服务器参数无效。</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">未能加载有效的配置文件。</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenWebConfiguration (string path, string site, string locationSubPath, string server, IntPtr userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenWebConfiguration(string path, string site, string locationSubPath, string server, native int userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration(System.String,System.String,System.String,System.String,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenWebConfiguration (path As String, site As String, locationSubPath As String, server As String, userToken As IntPtr) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenWebConfiguration(System::String ^ path, System::String ^ site, System::String ^ locationSubPath, System::String ^ server, IntPtr userToken);" />
      <MemberSignature Language="F#" Value="static member OpenWebConfiguration : string * string * string * string * nativeint -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration (path, site, locationSubPath, server, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="site" Type="System.String" />
        <Parameter Name="locationSubPath" Type="System.String" />
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="userToken" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="path">配置文件的虚拟路径。</param>
        <param name="site">显示在 Internet 信息服务 (IIS) 配置中的应用程序网站的名称。</param>
        <param name="locationSubPath">配置应用的特定资源。</param>
        <param name="server">Web 应用程序所在的服务器的网络名称。</param>
        <param name="userToken">要使用的帐户标记。</param>
        <summary>使用指定的虚拟路径、站点名称、位置、服务器和安全上下文将 Web 应用程序配置文件作为 <see cref="T:System.Configuration.Configuration" /> 对象打开以允许读或写操作。</summary>
        <returns><see cref="T:System.Configuration.Configuration" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法用于通过模拟访问配置文件。  
  
> [!NOTE]
>  通常从类的实例 <xref:System.Security.Principal.WindowsIdentity> 或通过调用非托管代码（如调用 WINDOWS API）来检索帐户令牌 `LogonUser` 。 有关非托管代码调用的详细信息，请参阅 [使用非托管 DLL 函数](/dotnet/framework/interop/consuming-unmanaged-dll-functions)。  
  
 若要获取 <xref:System.Configuration.Configuration> 远程资源的对象，你的代码必须具有远程计算机上的管理权限。  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration%2A> 方法来访问配置信息。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#19](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#19)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#19](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="server" /> 或 <paramref name="userToken" /> 参数无效。</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">未能加载有效的配置文件。</exception>
        <altmember cref="T:System.Configuration.Configuration" />
        <altmember cref="T:System.Security.Principal.WindowsIdentity" />
        <related type="Article" href="/dotnet/framework/interop/consuming-unmanaged-dll-functions">使用非托管 DLL 函数</related>
      </Docs>
    </Member>
    <Member MemberName="OpenWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenWebConfiguration (string path, string site, string locationSubPath, string server, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenWebConfiguration(string path, string site, string locationSubPath, string server, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration(System.String,System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenWebConfiguration (path As String, site As String, locationSubPath As String, server As String, userName As String, password As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenWebConfiguration(System::String ^ path, System::String ^ site, System::String ^ locationSubPath, System::String ^ server, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="static member OpenWebConfiguration : string * string * string * string * string * string -&gt; System.Configuration.Configuration" Usage="System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration (path, site, locationSubPath, server, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="site" Type="System.String" />
        <Parameter Name="locationSubPath" Type="System.String" />
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">配置文件的虚拟路径。</param>
        <param name="site">显示在 Internet 信息服务 (IIS) 配置中的应用程序网站的名称。</param>
        <param name="locationSubPath">配置应用的特定资源。</param>
        <param name="server">Web 应用程序所在的服务器的网络名称。</param>
        <param name="userName">打开文件时要使用的用户全名 (Domain\User)。</param>
        <param name="password">用户名的密码。</param>
        <summary>使用指定的虚拟路径、站点名称、位置、服务器和安全上下文将 Web 应用程序配置文件作为 <see cref="T:System.Configuration.Configuration" /> 对象打开以允许读或写操作。</summary>
        <returns><see cref="T:System.Configuration.Configuration" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法用于通过模拟访问配置文件。  
  
 若要获取 <xref:System.Configuration.Configuration> 远程资源的对象，你的代码必须具有远程计算机上的管理权限。  
  
 你可能需要运行 [ASP.NET IIS 注册工具 ( # A0) ](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/k6h9cz8h(v=vs.90)) ，其中包含 `-config+` 用于启用对远程计算机上的配置文件的访问的选项。  
  
   
  
## Examples  
 下面的示例演示如何使用方法访问配置信息 <xref:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration%2A> 。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager#18](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#18)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager#18](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="server" /> 或 <paramref name="userName" /> 和 <paramref name="password" /> 参数无效。</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">未能加载有效的配置文件。</exception>
        <altmember cref="T:System.Configuration.Configuration" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/k6h9cz8h(v=vs.90)">ASP.NET IIS 注册工具 ( # A0) </related>
      </Docs>
    </Member>
  </Members>
</Type>
