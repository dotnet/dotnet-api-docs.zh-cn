<Type Name="HttpHandlerAction" FullName="System.Web.Configuration.HttpHandlerAction">
  <Metadata><Meta Name="ms.openlocfilehash" Value="60b31a36a8125dca7ec12d3de01553ff5246bf4c" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89698176" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpHandlerAction : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed HttpHandlerAction extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.HttpHandlerAction" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpHandlerAction&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpHandlerAction sealed : System::Configuration::ConfigurationElement" />
  <TypeSignature Language="F#" Value="type HttpHandlerAction = class&#xA;    inherit ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>配置 <see cref="T:System.Web.Configuration.HttpHandlersSection" /> 配置节。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Configuration.HttpHandlerAction>类提供了一种以编程方式访问和修改 `add` 配置节中的元素的方法 `httpHandlers` 。

 此类型是包含和类型的组的一部分 <xref:System.Web.Configuration.HttpHandlerActionCollection> <xref:System.Web.Configuration.HttpHandlersSection> 。

> [!NOTE]
>  <xref:System.Web.Configuration.HttpHandlerAction>根据值为的节属性，可以读取和写入配置文件的相关部分的信息 <xref:System.Configuration.SectionInformation.AllowDefinition%2A> <xref:System.Configuration.ConfigurationAllowDefinition.Everywhere> 。

 ASP.NET 首先在应用程序的专用 \bin 目录中搜索处理程序程序集 DLL，然后搜索系统程序集缓存。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.Configuration.HttpModuleAction> 类型。

 [!code-csharp[System.Web.Configuration.HttpHandlers#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpHandlers/CS/httphandlers.cs#2)]
 [!code-vb[System.Web.Configuration.HttpHandlers#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpHandlers/VB/httphandlers.vb#2)]

 以下配置摘录显示了如何以声明方式为节指定值 `httpHandlers` 。

```
<httpHandlers>
  <add path="Calculator.custom"
    type="Samples.Aspnet.SystemWebConfiguration.Calculator, CalculatorHandler"
    verb="GET" validate="false" />
</httpHandlers>
```

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.HttpHandlerActionCollection" />
    <altmember cref="T:System.Web.Configuration.HttpHandlersSection" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398986(v=vs.100)">HTTP 处理程序和 HTTP 模块概述</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Configuration.HttpHandlerAction" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpHandlerAction (string path, string type, string verb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, string type, string verb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpHandlerAction.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, type As String, verb As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpHandlerAction(System::String ^ path, System::String ^ type, System::String ^ verb);" />
      <MemberSignature Language="F#" Value="new System.Web.Configuration.HttpHandlerAction : string * string * string -&gt; System.Web.Configuration.HttpHandlerAction" Usage="new System.Web.Configuration.HttpHandlerAction (path, type, verb)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="verb" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><see cref="T:System.Web.Configuration.HttpHandlerAction" /> URL 路径。</param>
        <param name="type">由版本、区域性和公钥标记组成的以逗号分隔的类/程序集组合。</param>
        <param name="verb">以逗号分隔的 HTTP 谓词列表（如，“GET, PUT, POST”）。</param>
        <summary>使用传递的参数初始化 <see cref="T:System.Web.Configuration.HttpHandlerAction" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Configuration.HttpHandlerAction.%23ctor%2A>构造函数不应在代码中直接使用。 它由 ASP.NET 配置系统调用。 使用属性获取类的实例 <xref:System.Web.Configuration.HttpHandlerAction> <xref:System.Web.Configuration.HttpHandlersSection.Handlers%2A> 。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpHandlerAction (string path, string type, string verb, bool validate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, string type, string verb, bool validate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpHandlerAction.#ctor(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, type As String, verb As String, validate As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpHandlerAction(System::String ^ path, System::String ^ type, System::String ^ verb, bool validate);" />
      <MemberSignature Language="F#" Value="new System.Web.Configuration.HttpHandlerAction : string * string * string * bool -&gt; System.Web.Configuration.HttpHandlerAction" Usage="new System.Web.Configuration.HttpHandlerAction (path, type, verb, validate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="verb" Type="System.String" />
        <Parameter Name="validate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path"><see cref="T:System.Web.Configuration.HttpHandlerAction" /> URL 路径。</param>
        <param name="type">由版本、区域性和公钥标记组成的以逗号分隔的类/程序集组合。</param>
        <param name="verb">以逗号分隔的 HTTP 谓词列表（如，“GET, PUT, POST”）。</param>
        <param name="validate">为 <see langword="true" />，则允许验证；否则为 <see langword="false" />。 如果为 <see langword="false" />，则 ASP.NET 在实际的匹配请求到来之前不会尝试加载该类，这可能会延迟错误但改进了启动时间。</param>
        <summary>使用传递的参数初始化 <see cref="T:System.Web.Configuration.HttpHandlerAction" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Configuration.HttpHandlerAction.%23ctor%2A>构造函数不应在代码中直接使用。 它由 ASP.NET 配置系统调用。 使用属性获取类的实例 <xref:System.Web.Configuration.HttpHandlerAction> <xref:System.Web.Configuration.HttpHandlersSection.Handlers%2A> 。



## Examples
 下面的代码示例演示如何创建 <xref:System.Web.Configuration.HttpHandlerAction> 对象。

 [!code-csharp[System.Web.Configuration.HttpHandlers#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpHandlers/CS/httphandlers.cs#3)]
 [!code-vb[System.Web.Configuration.HttpHandlers#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpHandlers/VB/httphandlers.vb#3)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpHandlerAction.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Web.Configuration.HttpHandlerAction.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("path", IsKey=true, IsRequired=true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("path", IsKey=true, IsRequired=true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.Configuration.HttpHandlerAction" /> 路径。</summary>
        <value><see cref="T:System.Web.Configuration.HttpHandlerAction" /> URL 路径。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Configuration.HttpHandlerAction.Path%2A>属性可以包含单个 URL 或通配符字符串。



## Examples
 下面的代码示例演示如何访问 <xref:System.Web.Configuration.HttpHandlerAction.Path%2A> 属性。

 [!code-csharp[System.Web.Configuration.HttpHandlers#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpHandlers/CS/httphandlers.cs#5)]
 [!code-vb[System.Web.Configuration.HttpHandlers#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpHandlers/VB/httphandlers.vb#5)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpHandlerAction.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Web.Configuration.HttpHandlerAction.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpHandlerAction.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Type { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : string with get, set" Usage="System.Web.Configuration.HttpHandlerAction.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("type", IsRequired=true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("type", IsRequired=true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.Configuration.HttpHandlerAction" /> 类型。</summary>
        <value><see cref="T:System.Web.Configuration.HttpHandlerAction" /> 类型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Configuration.HttpHandlerAction.Type%2A>属性是由版本、区域性和公钥标记组成的以逗号分隔的类/程序集组合。

> [!NOTE]
>  ASP.NET 首先在应用程序的专用 \bin 目录中搜索处理程序程序集 DLL，然后搜索系统程序集缓存。



## Examples
 下面的代码示例演示如何访问 <xref:System.Web.Configuration.HttpHandlerAction.Type%2A> 属性。

 [!code-csharp[System.Web.Configuration.HttpHandlers#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpHandlers/CS/httphandlers.cs#6)]
 [!code-vb[System.Web.Configuration.HttpHandlers#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpHandlers/VB/httphandlers.vb#6)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public bool Validate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Validate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpHandlerAction.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Property Validate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Validate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Validate : bool with get, set" Usage="System.Web.Configuration.HttpHandlerAction.Validate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("validate", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("validate", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.Configuration.HttpHandlerAction" /> 验证。</summary>
        <value>如果允许验证，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 如果 <xref:System.Web.Configuration.HttpHandlerAction.Validate%2A> 属性为，则在 `false` 实际匹配请求出现之前，ASP.NET 将不会尝试加载类，这可能会延迟错误，但会缩短启动时间。



## Examples
 下面的代码示例演示如何访问 <xref:System.Web.Configuration.HttpHandlerAction.Validate%2A> 属性。

 [!code-csharp[System.Web.Configuration.HttpHandlers#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpHandlers/CS/httphandlers.cs#8)]
 [!code-vb[System.Web.Configuration.HttpHandlers#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpHandlers/VB/httphandlers.vb#8)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Verb">
      <MemberSignature Language="C#" Value="public string Verb { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Verb" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpHandlerAction.Verb" />
      <MemberSignature Language="VB.NET" Value="Public Property Verb As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Verb { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Verb : string with get, set" Usage="System.Web.Configuration.HttpHandlerAction.Verb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("verb", IsKey=true, IsRequired=true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("verb", IsKey=true, IsRequired=true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.Configuration.HttpHandlerAction" /> 对象所允许的谓词。</summary>
        <value>该对象所允许的谓词。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此 <xref:System.Web.Configuration.HttpHandlerAction.Verb%2A> 属性可以是以逗号分隔的 HTTP 谓词列表， (例如 "GET，PUT，POST" ) 。



## Examples
 下面的代码示例演示如何访问 <xref:System.Web.Configuration.HttpHandlerAction.Verb%2A> 属性。

 [!code-csharp[System.Web.Configuration.HttpHandlers#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpHandlers/CS/httphandlers.cs#7)]
 [!code-vb[System.Web.Configuration.HttpHandlers#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpHandlers/VB/httphandlers.vb#7)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
