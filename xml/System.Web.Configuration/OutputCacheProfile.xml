<Type Name="OutputCacheProfile" FullName="System.Web.Configuration.OutputCacheProfile">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7a4f936715e653a0d424dc84a73a8a0001105559" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86846537" /></Metadata><TypeSignature Language="C#" Value="public sealed class OutputCacheProfile : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed OutputCacheProfile extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.OutputCacheProfile" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OutputCacheProfile&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class OutputCacheProfile sealed : System::Configuration::ConfigurationElement" />
  <TypeSignature Language="F#" Value="type OutputCacheProfile = class&#xA;    inherit ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>配置可由应用程序页使用的输出缓存配置文件。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Configuration.OutputCacheProfile>类提供了一种以编程方式访问和修改 `add` `outputCacheProfiles` 配置文件的节中的部分元素的方法 `caching` 。

 <xref:System.Web.Configuration.OutputCacheProfile>对象集中经常使用的配置设置（例如依赖项、缓存位置和缓存过期时间），无需在每个页面上指定它们。

 <xref:System.Web.Configuration.OutputCacheProfile>可以使用指令的特性将应用于页 `CacheProfile` 。

> [!NOTE]
>  指令可以重写对象所包含的所有设置 <xref:System.Web.Configuration.OutputCacheProfile> （属性除外） <xref:System.Web.Configuration.OutputCacheProfile.Enabled%2A> 。 这是为了启用或禁用， <xref:System.Web.Configuration.OutputCacheProfile> 而不需要修改可能已覆盖的所有页中的指令。

 <xref:System.Web.Caching.CacheDependency>类监视依赖关系，以便在任何缓存项发生更改时，将自动删除缓存项。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.Configuration.OutputCacheSettingsSection.OutputCacheProfiles%2A> 集合来访问其 <xref:System.Web.Configuration.OutputCacheProfile> 对象。

 [!code-csharp[System.Web.Configuration.OutputCacheProfile#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#1)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#1)]

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.OutputCacheProfileCollection" />
    <altmember cref="T:System.Web.Caching.CacheDependency" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/6hbbsfk6(v=vs.100)">缓存应用程序数据</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zd1ysf1y(v=vs.100)">如何：以声明方式设置页面的可缓存性</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/z852zf6b(v=vs.100)">如何以编程方式设置页面的可缓存性</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutputCacheProfile (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.OutputCacheProfile.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutputCacheProfile(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Web.Configuration.OutputCacheProfile : string -&gt; System.Web.Configuration.OutputCacheProfile" Usage="new System.Web.Configuration.OutputCacheProfile name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">要使用的名称值。</param>
        <summary>初始化 <see cref="T:System.Web.Configuration.OutputCacheProfile" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public int Duration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Duration" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.Duration" />
      <MemberSignature Language="VB.NET" Value="Public Property Duration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Duration { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Duration : int with get, set" Usage="System.Web.Configuration.OutputCacheProfile.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("duration", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("duration", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置缓存页或缓存控件过程的持续时间。</summary>
        <value>以秒为单位的持续时间。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Configuration.OutputCacheProfile.Duration%2A>表示缓存页或用户控件的时间（以秒为单位）。 设置此属性将为 HTTP 响应从应用到的页面或控件建立过期策略，并将自动导致缓存其输出。

> [!NOTE]
>  <xref:System.Web.Configuration.OutputCacheProfile.Duration%2A>必须使用配置文件在页的配置文件或指令中进行定义。



## Examples
 下面的代码示例说明如何使用 <xref:System.Web.Configuration.OutputCacheProfile.Duration%2A> 属性。

 [!code-csharp[System.Web.Configuration.OutputCacheProfile#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#10)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#10)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpCachePolicy" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/06bh14hk(v=vs.100)">缓存 ASP.NET 页</related>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Web.Configuration.OutputCacheProfile.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("enabled", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("enabled", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否启用缓存。</summary>
        <value>如果启用缓存，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Configuration.OutputCacheProfile.Enabled%2A>属性仅允许在一个位置启用或禁用缓存机制。 它会影响使用此的所有页面或控件 <xref:System.Web.Configuration.OutputCacheProfile> 。



## Examples
 下面的代码示例说明如何使用 <xref:System.Web.Configuration.OutputCacheProfile.Enabled%2A> 属性。

 [!code-csharp[System.Web.Configuration.OutputCacheProfile#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#12)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#12)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/06bh14hk(v=vs.100)">缓存 ASP.NET 页</related>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public System.Web.UI.OutputCacheLocation Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.OutputCacheLocation Location" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As OutputCacheLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::OutputCacheLocation Location { System::Web::UI::OutputCacheLocation get(); void set(System::Web::UI::OutputCacheLocation value); };" />
      <MemberSignature Language="F#" Value="member this.Location : System.Web.UI.OutputCacheLocation with get, set" Usage="System.Web.Configuration.OutputCacheProfile.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("location")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("location")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.OutputCacheLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置输出缓存位置。</summary>
        <value><see cref="T:System.Web.UI.OutputCacheLocation" /> 枚举值之一。 默认值为 <see langword="Any" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 如果 <xref:System.Web.Configuration.OutputCacheProfile.Location%2A> 设置为 `Any` ，则输出缓存可位于发出请求的浏览器客户端、代理服务器或参与请求的任何其他服务器上，或者位于处理请求的服务器上。



## Examples
 下面的代码示例说明如何使用 <xref:System.Web.Configuration.OutputCacheProfile.Location%2A> 属性。

 [!code-csharp[System.Web.Configuration.OutputCacheProfile#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#5)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#5)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.OutputCacheLocation" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/06bh14hk(v=vs.100)">缓存 ASP.NET 页</related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.Configuration.OutputCacheProfile.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("name", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsKey=true, IsRequired=true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("name", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsKey=true, IsRequired=true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.StringValidator(MinLength=1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.StringValidator(MinLength=1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.Configuration.OutputCacheProfile" /> 名称。</summary>
        <value><see cref="T:System.Web.Configuration.OutputCacheProfile" /> 名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Configuration.OutputCacheProfile.Name%2A> `CacheProfile` 如果要将值应用于 <xref:System.Web.Configuration.OutputCacheProfile> 页或控件，请使用将值分配给指令的特性。



## Examples
 下面的代码示例说明如何使用 <xref:System.Web.Configuration.OutputCacheProfile.Name%2A> 属性。

 [!code-csharp[System.Web.Configuration.OutputCacheProfile#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#11)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#11)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoStore">
      <MemberSignature Language="C#" Value="public bool NoStore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NoStore" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.NoStore" />
      <MemberSignature Language="VB.NET" Value="Public Property NoStore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NoStore { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NoStore : bool with get, set" Usage="System.Web.Configuration.OutputCacheProfile.NoStore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("noStore", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("noStore", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否启用辅助存储。</summary>
        <value>如果启用次要存储，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Configuration.OutputCacheProfile.NoStore%2A?displayProperty=nameWithType>将属性设置为发出响应的页面，该 `true` 响应在其标头中指定以防止敏感信息的辅助存储。

 将此特性设置为 `true` 等效于在 <xref:System.Web.HttpCachePolicy.SetNoStore%2A?displayProperty=nameWithType> Web 请求过程中调用方法。



## Examples
 下面的代码示例说明如何使用 <xref:System.Web.Configuration.OutputCacheProfile.NoStore%2A> 属性。

 [!code-csharp[System.Web.Configuration.OutputCacheProfile#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#4)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#4)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpCachePolicy" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Web.Configuration.OutputCacheProfile.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlDependency">
      <MemberSignature Language="C#" Value="public string SqlDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SqlDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.SqlDependency" />
      <MemberSignature Language="VB.NET" Value="Public Property SqlDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SqlDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SqlDependency : string with get, set" Usage="System.Web.Configuration.OutputCacheProfile.SqlDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("sqlDependency")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("sqlDependency")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="P:System.Web.Configuration.OutputCacheProfile.SqlDependency" /> 属性。</summary>
        <value><see cref="P:System.Web.Configuration.OutputCacheProfile.SqlDependency" /> 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Configuration.OutputCacheProfile.SqlDependency%2A>定义 Web 应用程序和 SQL Server 的实例之间的关系，允许检测服务器上数据的更改。 <xref:System.Web.Configuration.OutputCacheProfile.SqlDependency%2A>确保每次从缓存中删除输出缓存的页时，它们所依赖的 SQL 表都已更改。

> [!NOTE]
>  <xref:System.Web.Caching.SqlCacheDependency>类监视表，以便在表发生更改时，将自动从缓存中删除该项。 此类不能被继承。



## Examples
 下面的代码示例说明如何使用 <xref:System.Web.Configuration.OutputCacheProfile.SqlDependency%2A> 属性。

 [!code-csharp[System.Web.Configuration.OutputCacheProfile#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#7)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#7)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
      </Docs>
    </Member>
    <Member MemberName="VaryByContentEncoding">
      <MemberSignature Language="C#" Value="public string VaryByContentEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.VaryByContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property VaryByContentEncoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VaryByContentEncoding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VaryByContentEncoding : string with get, set" Usage="System.Web.Configuration.OutputCacheProfile.VaryByContentEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("varyByContentEncoding")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("varyByContentEncoding")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要缓存的一组内容编码（以分号分隔）。</summary>
        <value>内容编码列表。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 这些 <xref:System.Web.Configuration.OutputCacheProfile.VaryByContentEncoding%2A> 设置与指令的属性使用的设置相同 `VaryByContentEncoding` 。

 <xref:System.Web.Configuration.OutputCacheProfile.VaryByContentEncoding%2A> .NET Framework 版本3.5 中引入。  有关详细信息，请参见[版本和依赖关系](/dotnet/framework/migration-guide/versions-and-dependencies)。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.OutputCacheParameters.VaryByContentEncoding" />
      </Docs>
    </Member>
    <Member MemberName="VaryByControl">
      <MemberSignature Language="C#" Value="public string VaryByControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.VaryByControl" />
      <MemberSignature Language="VB.NET" Value="Public Property VaryByControl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VaryByControl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VaryByControl : string with get, set" Usage="System.Web.Configuration.OutputCacheProfile.VaryByControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("varyByControl")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("varyByControl")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByControl" /> 属性。</summary>
        <value><see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByControl" /> 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Configuration.OutputCacheProfile.VaryByControl%2A>是要缓存的控件的 id 的分号分隔集。

 有关详细信息，请参阅 [缓存用户控件输出的多个版本](https://msdn.microsoft.com/library/7f7d839a-c060-4d2a-9c4e-7fd1080ec0ad)。

> [!NOTE]
>  这些 <xref:System.Web.Configuration.OutputCacheProfile.VaryByControl%2A> 设置与指令的属性使用的设置相同 `VaryByControls` 。



## Examples
 下面的代码示例说明如何使用 <xref:System.Web.Configuration.OutputCacheProfile.VaryByControl%2A> 属性。

 [!code-csharp[System.Web.Configuration.OutputCacheProfile#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#3)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#3)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7f7d839a-c060-4d2a-9c4e-7fd1080ec0ad">缓存用户控件输出的多个版本</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1bcaf2d0-0803-49be-a831-c0714a60e81c">如何：基于参数缓存用户控件的多个版本</related>
      </Docs>
    </Member>
    <Member MemberName="VaryByCustom">
      <MemberSignature Language="C#" Value="public string VaryByCustom { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByCustom" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.VaryByCustom" />
      <MemberSignature Language="VB.NET" Value="Public Property VaryByCustom As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VaryByCustom { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VaryByCustom : string with get, set" Usage="System.Web.Configuration.OutputCacheProfile.VaryByCustom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("varyByCustom")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("varyByCustom")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByCustom" /> 属性。</summary>
        <value><see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByCustom" /> 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Configuration.OutputCacheProfile.VaryByCustom%2A>可以是表示自定义输出缓存要求的任何文本。 如果输入了自定义字符串，则必须重写 <xref:System.Web.HttpApplication.GetVaryByCustomString%2A> 应用程序的 global.asax 文件中的方法。

> [!NOTE]
>  这些 <xref:System.Web.Configuration.OutputCacheProfile.VaryByCustom%2A> 设置与指令的属性使用的设置相同 `VaryByCustom` 。



## Examples
 下面的代码示例说明如何使用 <xref:System.Web.Configuration.OutputCacheProfile.VaryByCustom%2A> 属性。

 [!code-csharp[System.Web.Configuration.OutputCacheProfile#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#9)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#9)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/7f7d839a-c060-4d2a-9c4e-7fd1080ec0ad">缓存用户控件输出的多个版本</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/06bh14hk(v=vs.100)">缓存 ASP.NET 页</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/5ecf4420(v=vs.100)">如何：基于自定义字符串缓存页面版本</related>
      </Docs>
    </Member>
    <Member MemberName="VaryByHeader">
      <MemberSignature Language="C#" Value="public string VaryByHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.VaryByHeader" />
      <MemberSignature Language="VB.NET" Value="Public Property VaryByHeader As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VaryByHeader { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VaryByHeader : string with get, set" Usage="System.Web.Configuration.OutputCacheProfile.VaryByHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("varyByHeader")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("varyByHeader")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByHeader" /> 属性。</summary>
        <value><see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByHeader" /> 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Configuration.OutputCacheProfile.VaryByHeader%2A>是一组用分号分隔的标头，用于改变缓存的输出。 这些是与请求关联的 HTTP 标头。 有关详细信息，请参阅 [缓存页面的多个版本](https://docs.microsoft.com/previous-versions/aspnet/xadzbzd6(v=vs.100))。

> [!NOTE]
> 这些 <xref:System.Web.Configuration.OutputCacheProfile.VaryByHeader%2A> 设置与 `VaryByHeader` [@ OutputCache](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/hdxfb6cy(v=vs.100))的属性使用的设置相同。 不建议通过设置 "" 的值来区分所有标头 \* 。 这可能会导致在 Web 服务器上发生缓存溢出或拒绝服务攻击。



## Examples
 下面的代码示例说明如何使用 <xref:System.Web.Configuration.OutputCacheProfile.VaryByHeader%2A> 属性。

 [!code-csharp[System.Web.Configuration.OutputCacheProfile#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#2)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#2)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/06bh14hk(v=vs.100)">缓存 ASP.NET 页</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/xadzbzd6(v=vs.100)">缓存页面的多个版本</related>
      </Docs>
    </Member>
    <Member MemberName="VaryByParam">
      <MemberSignature Language="C#" Value="public string VaryByParam { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByParam" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.VaryByParam" />
      <MemberSignature Language="VB.NET" Value="Public Property VaryByParam As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VaryByParam { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VaryByParam : string with get, set" Usage="System.Web.Configuration.OutputCacheProfile.VaryByParam" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("varyByParam")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("varyByParam")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByParam" /> 属性。</summary>
        <value><see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByParam" /> 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Configuration.OutputCacheProfile.VaryByParam%2A>是一组用分号分隔的参数，用于改变缓存的输出。 它允许通过 GET 查询字符串或窗体 POST 参数改变缓存的输出。 例如，通过指定用户控件名称以及查询字符串或窗体 POST 参数，可以将用户控件输出与缓存发生变化。 有关详细信息，请参阅 [缓存用户控件输出的多个版本](https://msdn.microsoft.com/library/7f7d839a-c060-4d2a-9c4e-7fd1080ec0ad)。

 此 <xref:System.Web.Configuration.OutputCacheProfile.VaryByParam%2A> 设置必须在配置文件或使用配置文件的页面的指令中进行定义。

> [!NOTE]
> 这些 <xref:System.Web.Configuration.OutputCacheProfile.VaryByParam%2A?displayProperty=nameWithType> 设置与 `VaryByParam` [@ OutputCache](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/hdxfb6cy(v=vs.100))的属性使用的设置相同。 不建议通过设置 "" 的值来区分所有参数 \* 。 这可能会导致在 Web 服务器上发生缓存溢出或拒绝服务攻击。



## Examples
 下面的代码示例说明如何使用 <xref:System.Web.Configuration.OutputCacheProfile.VaryByParam%2A> 属性。

 [!code-csharp[System.Web.Configuration.OutputCacheProfile#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#8)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#8)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpCacheVaryByParams" />
        <altmember cref="P:System.Web.HttpCachePolicy.VaryByParams" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/06bh14hk(v=vs.100)">缓存 ASP.NET 页</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/xadzbzd6(v=vs.100)">缓存页面的多个版本</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1bcaf2d0-0803-49be-a831-c0714a60e81c">如何：基于参数缓存用户控件的多个版本</related>
      </Docs>
    </Member>
  </Members>
</Type>
