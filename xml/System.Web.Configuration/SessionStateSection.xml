<Type Name="SessionStateSection" FullName="System.Web.Configuration.SessionStateSection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dcaa49526d60c10be1941f1a34aa91a4f2f412fb" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86681419" /></Metadata><TypeSignature Language="C#" Value="public sealed class SessionStateSection : System.Configuration.ConfigurationSection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SessionStateSection extends System.Configuration.ConfigurationSection" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.SessionStateSection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SessionStateSection&#xA;Inherits ConfigurationSection" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionStateSection sealed : System::Configuration::ConfigurationSection" />
  <TypeSignature Language="F#" Value="type SessionStateSection = class&#xA;    inherit ConfigurationSection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationSection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>配置 Web 应用程序的会话状态。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Configuration.SessionStateSection>类引用 Machine.config 或由标记标识的 Web.config 配置文件中的元素 `sessionState` 。

 当新客户端开始与 Web 应用程序交互时，将在会话有效期间发出会话 ID 并将其与来自同一客户端的所有后续请求关联。 此 ID 用于维护每个请求之间与客户端会话关联的服务器端状态。 <xref:System.Web.Configuration.SessionStateSection>控制 ASP.NET 应用程序代表每个客户端建立和维护此关联的方式。

 此机制非常灵活，并使你能够在进程外托管会话状态信息，并在不使用 cookie 的情况下跟踪状态。



## Examples
 本部分提供了两个代码示例。 第一个示例演示如何以声明方式为部分的多个属性指定值 `sessionState` ，该部分也可以作为类的成员进行访问 <xref:System.Web.Configuration.SessionStateSection> 。 第二个示例演示如何使用 <xref:System.Web.Configuration.SessionStateSection> 类。

 下面的配置文件示例演示如何以声明方式为节指定值 `sessionState` 。

```
<configuration>
  <system.web>
    <sessionState mode="InProc"
      stateConnectionString="tcpip=127.0.0.1:42424"
      stateNetworkTimeout="10"
      sqlConnectionString="data source=127.0.0.1;
        Integrated Security=SSPI"
      sqlCommandTimeout="30"
      customProvider=""
      cookieless="UseDeviceProfile"
      cookieName="ASP.NET_SessionId"
      timeout="20"
      allowCustomSqlDatabase="False"
      regenerateExpiredSessionId="False"
      partitionResolverType=""
      useHostingIdentity="True">
      <providers>
        <clear />
      </providers>
    </sessionState>
  </system.web>
</configuration>
```

 下面的代码示例演示如何使用 <xref:System.Web.Configuration.SessionStateSection> 类。

 [!code-csharp[System.Web.Configuration.SessionStateSection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/CS/sessionstatesection.cs#1)]
 [!code-vb[System.Web.Configuration.SessionStateSection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/VB/sessionstatesection.vb#1)]

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.HttpContext" />
    <altmember cref="T:System.Web.SessionState.HttpSessionState" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100)">ASP.NET 状态管理概述</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">ASP.NET 会话状态概述</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/a3x0d1zt(v=vs.100)">控制会话状态</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionStateSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.SessionStateSection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionStateSection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Configuration.SessionStateSection" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Configuration.SessionStateSection.%23ctor%2A>构造函数不应在代码中直接使用。 它由 ASP.NET 配置系统调用。 您可以 <xref:System.Web.Configuration.SessionStateSection> 使用方法获取类的实例 <xref:System.Configuration.Configuration.GetSection%2A> 。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowCustomSqlDatabase">
      <MemberSignature Language="C#" Value="public bool AllowCustomSqlDatabase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowCustomSqlDatabase" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.SessionStateSection.AllowCustomSqlDatabase" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowCustomSqlDatabase As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowCustomSqlDatabase { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowCustomSqlDatabase : bool with get, set" Usage="System.Web.Configuration.SessionStateSection.AllowCustomSqlDatabase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("allowCustomSqlDatabase", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("allowCustomSqlDatabase", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示用户能否在 <see cref="P:System.Web.Configuration.SessionStateSection.SqlConnectionString" /> 属性中指定初始目录值。</summary>
        <value>如果允许用户指定目录，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 下面的代码示例演示如何获取 <xref:System.Web.Configuration.SessionStateSection.AllowCustomSqlDatabase%2A> 属性。 有关如何访问对象的详细说明，请参阅类主题中的代码示例 <xref:System.Web.Configuration.SessionStateSection> <xref:System.Web.Configuration.SessionStateSection> 。

 [!code-csharp[System.Web.Configuration.SessionStateSection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/CS/sessionstatesection.cs#2)]
 [!code-vb[System.Web.Configuration.SessionStateSection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/VB/sessionstatesection.vb#2)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressionEnabled">
      <MemberSignature Language="C#" Value="public bool CompressionEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CompressionEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.SessionStateSection.CompressionEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property CompressionEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CompressionEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CompressionEnabled : bool with get, set" Usage="System.Web.Configuration.SessionStateSection.CompressionEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("compressionEnabled", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("compressionEnabled", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否对会话状态数据启用压缩。</summary>
        <value>如果启用压缩，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 如果将 <xref:System.Web.Configuration.SessionStateSection.CompressionEnabled%2A> 值设置为 `true` ，则 ASP.NET 将使用 <xref:System.IO.Compression.GZipStream> 类来压缩和扩展会话状态数据。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cookieless">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookieMode Cookieless { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.HttpCookieMode Cookieless" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.SessionStateSection.Cookieless" />
      <MemberSignature Language="VB.NET" Value="Public Property Cookieless As HttpCookieMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCookieMode Cookieless { System::Web::HttpCookieMode get(); void set(System::Web::HttpCookieMode value); };" />
      <MemberSignature Language="F#" Value="member this.Cookieless : System.Web.HttpCookieMode with get, set" Usage="System.Web.Configuration.SessionStateSection.Cookieless" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("cookieless")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("cookieless")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookieMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否使用 Cookie 标识客户端会话。</summary>
        <value>如果所有请求都被视为无 Cookie，则为 <see langword="true" />；如果没有任何请求被视为无 Cookie，则为 <see langword="false" />；或者为 <see cref="T:System.Web.HttpCookieMode" /> 值之一。 在 ASP.NET 2.0 版中，默认值为 <see cref="F:System.Web.HttpCookieMode.AutoDetect" />。 在早期版本中，默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 会话状态可以通过两种方式来存储将客户端与服务器会话关联的唯一 ID：在客户端上存储 HTTP cookie，或对 URL 中的会话 ID 进行编码。 将会话 ID 存储在 cookie 中会更安全，但要求客户端浏览器支持 cookie。

 对于允许不支持 cookie 的客户端的应用程序（如多种移动设备），可以将会话 ID 存储在 URL 中。 URL 选项具有几个缺点。 它要求站点上的链接是相对的，并且在会话开始时将使用新的查询字符串值重定向页面，并且它会在查询字符串中公开会话 ID，可以在该字符串中选取该会话 ID 以在安全攻击中使用。

 如果你需要支持缺少 cookie 支持的客户端，则建议你仅使用无 cookie 模式。

 会话状态还支持另外两个选项： <xref:System.Web.HttpCookieMode.UseDeviceProfile> 和 <xref:System.Web.HttpCookieMode.AutoDetect> 。 前者启用会话状态模块，以根据浏览器功能确定基于每个客户端使用哪种模式 (cookie 或无 cookie) 。  <xref:System.Web.HttpCookieMode.AutoDetect>选项使用浏览器执行握手，以验证是否可以存储 cookie，并因此需要额外的请求来做出决定。 如果需要支持无 cookie 的客户端，则强烈考虑使用 <xref:System.Web.HttpCookieMode.UseDeviceProfile> 只为需要它们的客户端生成无 Cookie url。

> [!NOTE]
>  UP。Browser 4.1 或更高。浏览器3.2 的 <xref:System.Web.HttpResponse.Redirect%2A> 行为方式始终与对象的属性的值相同 <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie%2A> <xref:System.Web.HttpBrowserCapabilities> `false` ，除非 <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> Web.config 的部分中的属性 <xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A> 显式设置为 `true` 。
>
>  在 ASP.NET 版本1.1 中，此设置的选项为 `true` 或 `false` ，但对于 ASP.NET 2.0，将展开选项，并且 <xref:System.Web.HttpCookieMode.AutoDetect> 现在为默认设置。 如果你的 Web 应用程序 <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> 将属性设置为布尔值，则 <xref:System.Web.HttpResponse.Redirect%2A> 应对这些浏览器按预期方式工作。



## Examples
 下面的代码示例演示如何获取 <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> 属性。 有关如何访问对象的详细说明，请参阅类主题中的代码示例 <xref:System.Web.Configuration.SessionStateSection> <xref:System.Web.Configuration.SessionStateSection> 。

 [!code-csharp[System.Web.Configuration.SessionStateSection#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/CS/sessionstatesection.cs#7)]
 [!code-vb[System.Web.Configuration.SessionStateSection#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/VB/sessionstatesection.vb#7)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpCookieMode" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zdh19h94(v=vs.100)">Basic Security Practices for Web Applications（Web 应用程序的基本安全实践）</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">ASP.NET 会话状态概述</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/a3x0d1zt(v=vs.100)">控制会话状态</related>
      </Docs>
    </Member>
    <Member MemberName="CookieName">
      <MemberSignature Language="C#" Value="public string CookieName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CookieName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.SessionStateSection.CookieName" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CookieName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CookieName : string with get, set" Usage="System.Web.Configuration.SessionStateSection.CookieName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("cookieName", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("cookieName", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 Cookie 名称。</summary>
        <value>用于会话标识的 HTTP Cookie 名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 默认值为 `"ASP.NET_SessionId"`。



## Examples
 下面的代码示例演示如何获取 <xref:System.Web.Configuration.SessionStateSection.CookieName%2A> 属性。 请参阅类主题中的代码示例 <xref:System.Web.Configuration.SessionStateSection> ，了解如何获取部分。

 [!code-csharp[System.Web.Configuration.SessionStateSection#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/CS/sessionstatesection.cs#5)]
 [!code-vb[System.Web.Configuration.SessionStateSection#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/VB/sessionstatesection.vb#5)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieSameSite">
      <MemberSignature Language="C#" Value="public System.Web.SameSiteMode CookieSameSite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.SameSiteMode CookieSameSite" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.SessionStateSection.CookieSameSite" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieSameSite As SameSiteMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SameSiteMode CookieSameSite { System::Web::SameSiteMode get(); void set(System::Web::SameSiteMode value); };" />
      <MemberSignature Language="F#" Value="member this.CookieSameSite : System.Web.SameSiteMode with get, set" Usage="System.Web.Configuration.SessionStateSection.CookieSameSite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("cookieSameSite")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("cookieSameSite")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.SameSiteMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 cookie 的 SameSite 属性的值。</summary>
        <value>一个枚举值，它表示 cookie 的强制模式。 如果应用程序面向 .NET Framework 4.7.2 或更高版本，则默认值为 <see cref="F:System.Web.SameSiteMode.Lax" />；否则默认值为 <see cref="F:System.Web.SameSiteMode.None" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomProvider">
      <MemberSignature Language="C#" Value="public string CustomProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CustomProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.SessionStateSection.CustomProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomProvider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CustomProvider { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomProvider : string with get, set" Usage="System.Web.Configuration.SessionStateSection.CustomProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("customProvider", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("customProvider", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="P:System.Web.Configuration.SessionStateSection.Providers" /> 集合中的自定义提供程序的名称。</summary>
        <value>自定义提供程序的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 仅当会话状态模式设置为时，才使用该提供程序 <xref:System.Web.SessionState.SessionStateMode.Custom> 。



## Examples
 下面的代码示例演示如何获取 <xref:System.Web.Configuration.SessionStateSection.CustomProvider%2A> 属性。

 [!code-csharp[System.Web.Configuration.SessionStateSection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/CS/sessionstatesection.cs#4)]
 [!code-vb[System.Web.Configuration.SessionStateSection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/VB/sessionstatesection.vb#4)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.SessionState.SessionStateMode" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">ASP.NET 会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="ElementProperty">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationElementProperty ElementProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationElementProperty ElementProperty" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.SessionStateSection.ElementProperty" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ElementProperty As ConfigurationElementProperty" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationElementProperty ^ ElementProperty { System::Configuration::ConfigurationElementProperty ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementProperty : System.Configuration.ConfigurationElementProperty" Usage="System.Web.Configuration.SessionStateSection.ElementProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationElementProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Web.SessionState.SessionStateMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.SessionState.SessionStateMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.SessionStateSection.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As SessionStateMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SessionState::SessionStateMode Mode { System::Web::SessionState::SessionStateMode get(); void set(System::Web::SessionState::SessionStateMode value); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.Web.SessionState.SessionStateMode with get, set" Usage="System.Web.Configuration.SessionStateSection.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("mode", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("mode", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指定存储会话状态的位置。</summary>
        <value><see cref="T:System.Web.SessionState.SessionStateMode" /> 值之一。 默认值为 <see cref="F:System.Web.SessionState.SessionStateMode.InProc" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.SessionState.SessionStateMode>不是必需的属性，并且可以从配置层次结构中的更高级别或从默认值继承。 但是，此部分的配置处理程序将始终在写入此部分时根据当前继承的值写出模式。



## Examples
 下面的代码示例演示如何获取 <xref:System.Web.Configuration.SessionStateSection.Mode%2A> 属性。 有关如何访问对象的详细说明，请参阅类主题中的代码示例 <xref:System.Web.Configuration.SessionStateSection> <xref:System.Web.Configuration.SessionStateSection> 。

 [!code-csharp[System.Web.Configuration.SessionStateSection#14](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/CS/sessionstatesection.cs#14)]
 [!code-vb[System.Web.Configuration.SessionStateSection#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/VB/sessionstatesection.vb#14)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PartitionResolverType">
      <MemberSignature Language="C#" Value="public string PartitionResolverType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PartitionResolverType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.SessionStateSection.PartitionResolverType" />
      <MemberSignature Language="VB.NET" Value="Public Property PartitionResolverType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PartitionResolverType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PartitionResolverType : string with get, set" Usage="System.Web.Configuration.SessionStateSection.PartitionResolverType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("partitionResolverType", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("partitionResolverType", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指定存储会话状态的位置。</summary>
        <value>指定存储会话状态的位置的值，或空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 如果 <xref:System.Web.Configuration.SessionStateSection.PartitionResolverType%2A> 指定了属性，则 <xref:System.Web.Configuration.SessionStateSection.SqlConnectionString%2A> 忽略属性和 <xref:System.Web.Configuration.SessionStateSection.StateConnectionString%2A> 属性。  <xref:System.Web.Configuration.SessionStateSection.PartitionResolverType%2A>可以通过 <xref:System.Configuration.ConfigurationElement.LockAttributes%2A> 属性（如 sessionState 元素中的其他属性）锁定， [ (ASP.NET Settings Schema) ](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/h6bb9cz9(v=vs.100))元素。 返回的连接字符串 <xref:System.Web.Configuration.SessionStateSection.PartitionResolverType%2A> 将用于每个请求，以连接到请求的其余部分的适当服务器位置。  如果连接字符串无效，则 ASP.NET 将引发与服务器的配置连接字符串无效时引发的相同异常。

 在 SQL 或状态服务器模式下，此属性用于对多个后端节点上的会话状态数据进行分区。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PostDeserialize">
      <MemberSignature Language="C#" Value="protected override void PostDeserialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PostDeserialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.SessionStateSection.PostDeserialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PostDeserialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PostDeserialize();" />
      <MemberSignature Language="F#" Value="override this.PostDeserialize : unit -&gt; unit" Usage="sessionStateSection.PostDeserialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.SessionStateSection.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Web.Configuration.SessionStateSection.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public System.Configuration.ProviderSettingsCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ProviderSettingsCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.SessionStateSection.Providers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Providers As ProviderSettingsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::ProviderSettingsCollection ^ Providers { System::Configuration::ProviderSettingsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Providers : System.Configuration.ProviderSettingsCollection" Usage="System.Web.Configuration.SessionStateSection.Providers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("providers")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("providers")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ProviderSettingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取当前的 <see cref="T:System.Configuration.ProviderSettingsCollection" /> 提供程序。</summary>
        <value>包含 <see cref="T:System.Web.Configuration.SessionStateSection" /> 提供程序的集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此属性引用由元素标识的配置标记所包含的信息 `providers` 。



## Examples
 下面的代码示例演示如何获取 <xref:System.Web.Configuration.SessionStateSection.Providers%2A> 属性。 有关如何访问对象的详细说明，请参阅类主题中的代码示例 <xref:System.Web.Configuration.SessionStateSection> <xref:System.Web.Configuration.SessionStateSection> 。

 [!code-csharp[System.Web.Configuration.SessionStateSection#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/CS/sessionstatesection.cs#10)]
 [!code-vb[System.Web.Configuration.SessionStateSection#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/VB/sessionstatesection.vb#10)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegenerateExpiredSessionId">
      <MemberSignature Language="C#" Value="public bool RegenerateExpiredSessionId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RegenerateExpiredSessionId" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.SessionStateSection.RegenerateExpiredSessionId" />
      <MemberSignature Language="VB.NET" Value="Public Property RegenerateExpiredSessionId As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RegenerateExpiredSessionId { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RegenerateExpiredSessionId : bool with get, set" Usage="System.Web.Configuration.SessionStateSection.RegenerateExpiredSessionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("regenerateExpiredSessionId", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("regenerateExpiredSessionId", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示当客户端指定过期的会话 ID 时是否重新生成会话 ID。</summary>
        <value>如果必须重新生成会话 ID，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 默认情况下，启用时只重新颁发无 cookie 的 Url <xref:System.Web.Configuration.SessionStateSection.RegenerateExpiredSessionId%2A> 。



## Examples
 下面的代码示例演示如何获取 <xref:System.Web.Configuration.SessionStateSection.RegenerateExpiredSessionId%2A> 属性。 有关如何访问对象的详细说明，请参阅类主题中的代码示例 <xref:System.Web.Configuration.SessionStateSection> <xref:System.Web.Configuration.SessionStateSection> 。

 [!code-csharp[System.Web.Configuration.SessionStateSection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/CS/sessionstatesection.cs#3)]
 [!code-vb[System.Web.Configuration.SessionStateSection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/VB/sessionstatesection.vb#3)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionIDManagerType">
      <MemberSignature Language="C#" Value="public string SessionIDManagerType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SessionIDManagerType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.SessionStateSection.SessionIDManagerType" />
      <MemberSignature Language="VB.NET" Value="Public Property SessionIDManagerType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SessionIDManagerType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SessionIDManagerType : string with get, set" Usage="System.Web.Configuration.SessionStateSection.SessionIDManagerType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("sessionIDManagerType", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("sessionIDManagerType", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指定会话 ID 管理器的完全限定类型。</summary>
        <value>会话 ID 管理器的完全限定类型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 会 <xref:System.Web.Configuration.SessionStateSection.SessionIDManagerType%2A> 替代自定义会话 id 管理方案的会话 id 生成和管理。 默认值为空字符串 ("")。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlCommandTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan SqlCommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan SqlCommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.SessionStateSection.SqlCommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property SqlCommandTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan SqlCommandTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.SqlCommandTimeout : TimeSpan with get, set" Usage="System.Web.Configuration.SessionStateSection.SqlCommandTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanSecondsOrInfiniteConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanSecondsOrInfiniteConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("sqlCommandTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("sqlCommandTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置使用 SQL Server 会话状态模式的 SQL 命令的超时时间。</summary>
        <value>SQL 命令超时之前的时间量（以秒为单位）。默认值为30秒。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 下面的代码示例演示如何获取 <xref:System.Web.Configuration.SessionStateSection.SqlCommandTimeout%2A> 属性。 有关如何访问对象的详细说明，请参阅类主题中的代码示例 <xref:System.Web.Configuration.SessionStateSection> <xref:System.Web.Configuration.SessionStateSection> 。

 [!code-csharp[System.Web.Configuration.SessionStateSection#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/CS/sessionstatesection.cs#13)]
 [!code-vb[System.Web.Configuration.SessionStateSection#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/VB/sessionstatesection.vb#13)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlConnectionRetryInterval">
      <MemberSignature Language="C#" Value="public TimeSpan SqlConnectionRetryInterval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan SqlConnectionRetryInterval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.SessionStateSection.SqlConnectionRetryInterval" />
      <MemberSignature Language="VB.NET" Value="Public Property SqlConnectionRetryInterval As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan SqlConnectionRetryInterval { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.SqlConnectionRetryInterval : TimeSpan with get, set" Usage="System.Web.Configuration.SessionStateSection.SqlConnectionRetryInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanSecondsOrInfiniteConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanSecondsOrInfiniteConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("sqlConnectionRetryInterval", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("sqlConnectionRetryInterval", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 ASP.NET 重新连接到数据库之前应经过的时间间隔。</summary>
        <value>ASP.NET 重新连接到数据库之前应经过的时间间隔。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Configuration.SessionStateSection.SqlConnectionRetryInterval%2A>指定发生连接错误时重新连接到数据库之前的时间间隔（以秒为单位）。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlConnectionString">
      <MemberSignature Language="C#" Value="public string SqlConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SqlConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.SessionStateSection.SqlConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Property SqlConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SqlConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SqlConnectionString : string with get, set" Usage="System.Web.Configuration.SessionStateSection.SqlConnectionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("sqlConnectionString", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("sqlConnectionString", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 SQL 连接字符串。</summary>
        <value>SQL 连接字符串。 其默认值为泛型字符串："data source=127.0.0.1;Integrated Security=SSPI"</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 `sqlConnectionString`当设置为时，此属性是必需的 <xref:System.Web.Configuration.SessionStateSection.Mode%2A> <xref:System.Web.SessionState.SessionStateMode.SQLServer> 。

> [!NOTE]
>  若要使用 <xref:System.Web.SessionState.SessionStateMode.SQLServer> 会话状态模式，你必须在*drive* \\ 运行将存储会话状态的 SQL Server 的计算机上，运行安装在 [drive：] \WINDOWS\Microsoft.NET\Framework) .NET Framework*VersionNumber*中的 InstallSqlState sql 脚本 (。 这将创建一个名为 ASPState 的数据库，其中包含新的存储过程，并在 TempDB 数据库中创建新的 ASPStateTempApplications 和 ASPStateTempSessions 表。



## Examples
 下面的代码示例演示如何获取 <xref:System.Web.Configuration.SessionStateSection.SqlConnectionString%2A> 属性。 有关如何访问对象的详细说明，请参阅类主题中的代码示例 <xref:System.Web.Configuration.SessionStateSection> <xref:System.Web.Configuration.SessionStateSection> 。

 [!code-csharp[System.Web.Configuration.SessionStateSection#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/CS/sessionstatesection.cs#8)]
 [!code-vb[System.Web.Configuration.SessionStateSection#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/VB/sessionstatesection.vb#8)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateConnectionString">
      <MemberSignature Language="C#" Value="public string StateConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StateConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.SessionStateSection.StateConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Property StateConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StateConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StateConnectionString : string with get, set" Usage="System.Web.Configuration.SessionStateSection.StateConnectionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("stateConnectionString", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("stateConnectionString", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置状态服务器连接字符串。</summary>
        <value>状态服务器连接字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 当远程存储会话状态时，此属性指定服务器名称和端口。 `stateConnectionString`当设置为时，属性是必需的 <xref:System.Web.Configuration.SessionStateSection.Mode%2A> <xref:System.Web.SessionState.SessionStateMode.StateServer> 。

> [!NOTE]
>  请确保 ASP.NET 状态服务正在存储会话状态信息的远程服务器上运行。 此服务随 ASP.NET 一起安装，默认情况下位于 [*drive*：] \WINDOWS\Microsoft.NET\Framework \\ *VersionNumber*\aspnet_state.exe。



## Examples
 下面的代码示例演示如何获取 <xref:System.Web.Configuration.SessionStateSection.StateConnectionString%2A> 属性。 有关如何访问对象的详细说明，请参阅类主题中的代码示例 <xref:System.Web.Configuration.SessionStateSection> <xref:System.Web.Configuration.SessionStateSection> 。

 [!code-csharp[System.Web.Configuration.SessionStateSection#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/CS/sessionstatesection.cs#9)]
 [!code-vb[System.Web.Configuration.SessionStateSection#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/VB/sessionstatesection.vb#9)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateNetworkTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan StateNetworkTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan StateNetworkTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.SessionStateSection.StateNetworkTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property StateNetworkTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan StateNetworkTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.StateNetworkTimeout : TimeSpan with get, set" Usage="System.Web.Configuration.SessionStateSection.StateNetworkTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanSecondsOrInfiniteConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanSecondsOrInfiniteConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("stateNetworkTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("stateNetworkTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 Web 服务器和状态服务器间的网络连接可保持空闲的时间量。</summary>
        <value>放弃会话前 Web 服务器和状态服务器间的网络连接可保持空闲的时间（以秒为单位）。 默认值为 10 秒。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 `sessionStateSection`当 <xref:System.Web.Configuration.SessionStateSection.Mode%2A> 属性设置为时，此属性是必需的 <xref:System.Web.SessionState.SessionStateMode.StateServer> 。



## Examples
 下面的代码示例演示如何获取 <xref:System.Web.Configuration.SessionStateSection.StateNetworkTimeout%2A> 属性。 有关如何访问对象的详细说明，请参阅类主题中的代码示例 <xref:System.Web.Configuration.SessionStateSection> <xref:System.Web.Configuration.SessionStateSection> 。

 [!code-csharp[System.Web.Configuration.SessionStateSection#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/CS/sessionstatesection.cs#6)]
 [!code-vb[System.Web.Configuration.SessionStateSection#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/VB/sessionstatesection.vb#6)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public TimeSpan Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.SessionStateSection.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Timeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : TimeSpan with get, set" Usage="System.Web.Configuration.SessionStateSection.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanMinutesOrInfiniteConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanMinutesOrInfiniteConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("timeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("timeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.TimeSpanValidator(MaxValueString="10675199.02:48:05.4775807", MinValueString="00:01:00")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.TimeSpanValidator(MaxValueString="10675199.02:48:05.4775807", MinValueString="00:01:00")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置会话超时。</summary>
        <value>会话超时（以秒为单位）。 默认值为 20 分钟。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此 <xref:System.Web.Configuration.SessionStateSection.Timeout%2A> 属性的值不能设置为大于525601分钟 (1 年) 。



## Examples
 下面的代码示例演示如何获取 <xref:System.Web.Configuration.SessionStateSection.Timeout%2A> 属性。 有关如何访问对象的详细说明，请参阅类主题中的代码示例 <xref:System.Web.Configuration.SessionStateSection> <xref:System.Web.Configuration.SessionStateSection> 。

 [!code-csharp[System.Web.Configuration.SessionStateSection#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/CS/sessionstatesection.cs#11)]
 [!code-vb[System.Web.Configuration.SessionStateSection#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/VB/sessionstatesection.vb#11)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseHostingIdentity">
      <MemberSignature Language="C#" Value="public bool UseHostingIdentity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseHostingIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.SessionStateSection.UseHostingIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Property UseHostingIdentity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseHostingIdentity { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseHostingIdentity : bool with get, set" Usage="System.Web.Configuration.SessionStateSection.UseHostingIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("useHostingIdentity", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("useHostingIdentity", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指定会话状态是在可用时使用客户端模拟，还是始终恢复为承载标识。</summary>
        <value>如果 Web 应用程序应恢复为承载标识，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
