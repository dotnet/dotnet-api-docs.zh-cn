<Type Name="ITask" FullName="Microsoft.Build.Framework.ITask">
  <Metadata><Meta Name="ms.openlocfilehash" Value="896c2617c32c3864ea36d7134057e2d45e9bf951" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89843303" /></Metadata><TypeSignature Language="C#" Value="public interface ITask" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITask" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Framework.ITask" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITask" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITask" />
  <TypeSignature Language="F#" Value="type ITask = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Framework</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="eff2e-101">此接口定义生成系统中的 "任务"。</span><span class="sxs-lookup"><span data-stu-id="eff2e-101">This interface defines a "task" in the build system.</span></span> <span data-ttu-id="eff2e-102">任务是生成操作的原子单元。</span><span class="sxs-lookup"><span data-stu-id="eff2e-102">A task is an atomic unit of build operation.</span></span> <span data-ttu-id="eff2e-103">所有任务类都必须实现此接口，才能由生成引擎识别。</span><span class="sxs-lookup"><span data-stu-id="eff2e-103">All task classes must implement this interface to be recognized by the build engine.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eff2e-104">所有任务类都必须实现此接口，才能由生成引擎识别。</span><span class="sxs-lookup"><span data-stu-id="eff2e-104">All task classes must implement this interface to be recognized by the build engine.</span></span> <span data-ttu-id="eff2e-105">你还可以从帮助器类派生类， <xref:Microsoft.Build.Utilities.Task> 它提供某些成员的默认实现，而不是直接实现此接口 <xref:Microsoft.Build.Framework.ITask> 。</span><span class="sxs-lookup"><span data-stu-id="eff2e-105">Instead of implementing this interface directly, you can also derive your class from the helper class, <xref:Microsoft.Build.Utilities.Task>, which provides default implementations of some <xref:Microsoft.Build.Framework.ITask> members.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eff2e-106">下面的示例演示了完整任务实现中的代码。</span><span class="sxs-lookup"><span data-stu-id="eff2e-106">The following example shows the code from a complete task implementation.</span></span>  
  
 [!code-csharp[msbuild_MakeDirTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_MakeDirTask/CS/msbuild_MakeDirTask.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BuildEngine">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.IBuildEngine BuildEngine { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.IBuildEngine BuildEngine" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Framework.ITask.BuildEngine" />
      <MemberSignature Language="VB.NET" Value="Public Property BuildEngine As IBuildEngine" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Framework::IBuildEngine ^ BuildEngine { Microsoft::Build::Framework::IBuildEngine ^ get(); void set(Microsoft::Build::Framework::IBuildEngine ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BuildEngine : Microsoft.Build.Framework.IBuildEngine with get, set" Usage="Microsoft.Build.Framework.ITask.BuildEngine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.IBuildEngine</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eff2e-107">此属性由生成引擎设置为允许任务回调到其中。</span><span class="sxs-lookup"><span data-stu-id="eff2e-107">This property is set by the build engine to allow a task to call back into it.</span></span></summary>
        <value><span data-ttu-id="eff2e-108">可供任务使用的生成引擎上的接口。</span><span class="sxs-lookup"><span data-stu-id="eff2e-108">The interface on the build engine available to tasks.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public bool Execute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Execute() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.ITask.Execute" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Execute();" />
      <MemberSignature Language="F#" Value="abstract member Execute : unit -&gt; bool" Usage="iTask.Execute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eff2e-109">此方法由生成引擎调用以开始执行任务。</span><span class="sxs-lookup"><span data-stu-id="eff2e-109">This method is called by the build engine to begin task execution.</span></span> <span data-ttu-id="eff2e-110">任务使用返回值来指示是否成功。</span><span class="sxs-lookup"><span data-stu-id="eff2e-110">A task uses the return value to indicate whether it was successful.</span></span> <span data-ttu-id="eff2e-111">如果任务在此方法中引发异常，则引擎将自动假定任务已失败。</span><span class="sxs-lookup"><span data-stu-id="eff2e-111">If a task throws an exception out of this method, the engine will automatically assume that the task has failed.</span></span></summary>
        <returns><span data-ttu-id="eff2e-112">如果成功，则为 true</span><span class="sxs-lookup"><span data-stu-id="eff2e-112">true, if successful</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eff2e-113">此方法由生成引擎调用以执行任务。</span><span class="sxs-lookup"><span data-stu-id="eff2e-113">This method is called by the build engine to execute a task.</span></span> <span data-ttu-id="eff2e-114">此方法终止后，任务应指示执行是否成功。</span><span class="sxs-lookup"><span data-stu-id="eff2e-114">Upon termination of this method, a task should indicate if the execution was successful.</span></span> <span data-ttu-id="eff2e-115">如果任务从此方法引发异常，则引擎将假定该任务失败。</span><span class="sxs-lookup"><span data-stu-id="eff2e-115">If a task throws an exception from this method, the engine assumes that the task has failed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostObject">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskHost HostObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskHost HostObject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Framework.ITask.HostObject" />
      <MemberSignature Language="VB.NET" Value="Public Property HostObject As ITaskHost" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Framework::ITaskHost ^ HostObject { Microsoft::Build::Framework::ITaskHost ^ get(); void set(Microsoft::Build::Framework::ITaskHost ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HostObject : Microsoft.Build.Framework.ITaskHost with get, set" Usage="Microsoft.Build.Framework.ITask.HostObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eff2e-116">如果主机 IDE 具有与此特定任务关联的主机对象，则生成引擎会设置此属性。</span><span class="sxs-lookup"><span data-stu-id="eff2e-116">The build engine sets this property if the host IDE has associated a host object with this particular task.</span></span></summary>
        <value><span data-ttu-id="eff2e-117">宿主对象实例 (可以为 null) 。</span><span class="sxs-lookup"><span data-stu-id="eff2e-117">The host object instance (can be null).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eff2e-118">此属性可以为空引用（在 Visual Basic 中为 `Nothing`）。</span><span class="sxs-lookup"><span data-stu-id="eff2e-118">This property can be a null reference (`Nothing` in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
