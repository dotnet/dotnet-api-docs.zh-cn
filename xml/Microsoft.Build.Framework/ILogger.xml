<Type Name="ILogger" FullName="Microsoft.Build.Framework.ILogger">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ebf57ee75d546be75ec599d110577858603762f7" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89843358" /></Metadata><TypeSignature Language="C#" Value="public interface ILogger" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ILogger" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Framework.ILogger" />
  <TypeSignature Language="VB.NET" Value="Public Interface ILogger" />
  <TypeSignature Language="C++ CLI" Value="public interface class ILogger" />
  <TypeSignature Language="F#" Value="type ILogger = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Framework</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="477a4-101">此接口在生成系统中定义“记录器”。</span><span class="sxs-lookup"><span data-stu-id="477a4-101">This interface defines a "logger" in the build system.</span></span> <span data-ttu-id="477a4-102">记录器订阅用于生成系统事件。</span><span class="sxs-lookup"><span data-stu-id="477a4-102">A logger subscribes to build system events.</span></span> <span data-ttu-id="477a4-103">所有记录器类都必须实现此接口，才能由生成引擎识别。</span><span class="sxs-lookup"><span data-stu-id="477a4-103">All logger classes must implement this interface to be recognized by the build engine.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="477a4-104">所有记录器类都必须实现此接口，才能被 [!INCLUDE[vstecmsbuild](~/includes/vstecmsbuild-md.md)] 引擎识别。</span><span class="sxs-lookup"><span data-stu-id="477a4-104">All logger classes must implement this interface to be recognized by the [!INCLUDE[vstecmsbuild](~/includes/vstecmsbuild-md.md)] engine.</span></span>  
  
 <span data-ttu-id="477a4-105">你还可以从帮助器类派生类， <xref:Microsoft.Build.Utilities.Logger> 它提供某些成员的默认实现，而不是直接实现此接口 <xref:Microsoft.Build.Framework.ILogger> 。</span><span class="sxs-lookup"><span data-stu-id="477a4-105">Instead of implementing this interface directly, you can also derive your class from the helper class, <xref:Microsoft.Build.Utilities.Logger>, which provides default implementations of some <xref:Microsoft.Build.Framework.ILogger> members.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="477a4-106">下面的示例演示如何编写基本记录器。</span><span class="sxs-lookup"><span data-stu-id="477a4-106">The following example shows how to write a basic logger.</span></span>  
  
 [!code-csharp[msbuild_BasicLogger#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_BasicLogger/CS/msbuild_BasicLogger.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (Microsoft.Build.Framework.IEventSource eventSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class Microsoft.Build.Framework.IEventSource eventSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.ILogger.Initialize(Microsoft.Build.Framework.IEventSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (eventSource As IEventSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize(Microsoft::Build::Framework::IEventSource ^ eventSource);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : Microsoft.Build.Framework.IEventSource -&gt; unit" Usage="iLogger.Initialize eventSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="Microsoft.Build.Framework.IEventSource" />
      </Parameters>
      <Docs>
        <param name="eventSource"><span data-ttu-id="477a4-107">记录器可用的事件。</span><span class="sxs-lookup"><span data-stu-id="477a4-107">The events available to loggers.</span></span></param>
        <summary><span data-ttu-id="477a4-108">由生成引擎调用，以允许记录器订阅所需的事件。</span><span class="sxs-lookup"><span data-stu-id="477a4-108">Called by the build engine to allow loggers to subscribe to the events they desire.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public string Parameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Framework.ILogger.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public Property Parameters As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Parameters { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : string with get, set" Usage="Microsoft.Build.Framework.ILogger.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="477a4-109">此属性将用户指定的参数保存到记录器。</span><span class="sxs-lookup"><span data-stu-id="477a4-109">This property holds the user-specified parameters to the logger.</span></span> <span data-ttu-id="477a4-110">如果未提供参数，则记录器应恢复为默认值。</span><span class="sxs-lookup"><span data-stu-id="477a4-110">If parameters are not provided, a logger should revert to defaults.</span></span> <span data-ttu-id="477a4-111">如果记录器不采用参数，则可以忽略此属性。</span><span class="sxs-lookup"><span data-stu-id="477a4-111">If a logger does not take parameters, it can ignore this property.</span></span></summary>
        <value><span data-ttu-id="477a4-112">参数字符串 (可以为 null) 。</span><span class="sxs-lookup"><span data-stu-id="477a4-112">The parameter string (can be null).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="477a4-113">参数可以采用任何格式用此属性表示。</span><span class="sxs-lookup"><span data-stu-id="477a4-113">Parameters may be represented in this property in any format.</span></span> <span data-ttu-id="477a4-114">例如，若要表示两个参数和值，可以使用字符串 "parameter1 = value1; parameter2 = value2"。</span><span class="sxs-lookup"><span data-stu-id="477a4-114">For example, to represent two parameters and values, you could use the string "parameter1=value1;parameter2=value2".</span></span>  
  
 <span data-ttu-id="477a4-115">此属性可以为空引用（在 Visual Basic 中为 `Nothing`）。</span><span class="sxs-lookup"><span data-stu-id="477a4-115">This property can be a null reference (`Nothing` in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.ILogger.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shutdown();" />
      <MemberSignature Language="F#" Value="abstract member Shutdown : unit -&gt; unit" Usage="iLogger.Shutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="477a4-116">由生成引擎调用，以便记录器释放在初始化时或在生成期间分配的任何资源。</span><span class="sxs-lookup"><span data-stu-id="477a4-116">Called by the build engine to allow loggers to release any resources they may have allocated at initialization time, or during the build.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbosity">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.LoggerVerbosity Verbosity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.LoggerVerbosity Verbosity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Framework.ILogger.Verbosity" />
      <MemberSignature Language="VB.NET" Value="Public Property Verbosity As LoggerVerbosity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Framework::LoggerVerbosity Verbosity { Microsoft::Build::Framework::LoggerVerbosity get(); void set(Microsoft::Build::Framework::LoggerVerbosity value); };" />
      <MemberSignature Language="F#" Value="member this.Verbosity : Microsoft.Build.Framework.LoggerVerbosity with get, set" Usage="Microsoft.Build.Framework.ILogger.Verbosity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.LoggerVerbosity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="477a4-117">详细级别指示在记录器的事件日志中显示的详细信息的数量。</span><span class="sxs-lookup"><span data-stu-id="477a4-117">The verbosity level directs the amount of detail that appears in a logger's event log.</span></span> <span data-ttu-id="477a4-118">尽管这只是基于用户首选项的建议，并且记录器可以随意选择它所记录的确切事件，但为了获得良好的用户体验，仍需遵循每个级别的指导原则。</span><span class="sxs-lookup"><span data-stu-id="477a4-118">Though this is only a recommendation based on user preferences, and a logger is free to choose the exact events it logs, it is still important that the guidelines for each level be followed, for a good user experience.</span></span></summary>
        <value><span data-ttu-id="477a4-119">详细级别。</span><span class="sxs-lookup"><span data-stu-id="477a4-119">The verbosity level.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="477a4-120">尽管记录器可以随意选择它所记录的事件，但遵循详细级别准则后，会产生一致的用户体验。</span><span class="sxs-lookup"><span data-stu-id="477a4-120">While a logger is free to choose the events it logs, following the verbosity guidelines creates a consistent user experience.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
