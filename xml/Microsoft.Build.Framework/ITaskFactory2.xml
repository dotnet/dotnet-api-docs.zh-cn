<Type Name="ITaskFactory2" FullName="Microsoft.Build.Framework.ITaskFactory2">
  <Metadata><Meta Name="ms.openlocfilehash" Value="85f72d2a1281340ff2b0b47c4bfa7ff0b6df46a3" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="86315690" /></Metadata><TypeSignature Language="C#" Value="public interface ITaskFactory2 : Microsoft.Build.Framework.ITaskFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITaskFactory2 implements class Microsoft.Build.Framework.ITaskFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Framework.ITaskFactory2" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITaskFactory2&#xA;Implements ITaskFactory" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITaskFactory2 : Microsoft::Build::Framework::ITaskFactory" />
  <TypeSignature Language="F#" Value="type ITaskFactory2 = interface&#xA;    interface ITaskFactory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Framework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.ITaskFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>如果任务工厂实例希望能够使用运行时和体系结构等新的 UsingTask 参数，则应实现的接口。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateTask">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITask CreateTask (Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost, System.Collections.Generic.IDictionary&lt;string,string&gt; taskIdentityParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Build.Framework.ITask CreateTask(class Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; taskIdentityParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.ITaskFactory2.CreateTask(Microsoft.Build.Framework.IBuildEngine,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTask (taskFactoryLoggingHost As IBuildEngine, taskIdentityParameters As IDictionary(Of String, String)) As ITask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Framework::ITask ^ CreateTask(Microsoft::Build::Framework::IBuildEngine ^ taskFactoryLoggingHost, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ taskIdentityParameters);" />
      <MemberSignature Language="F#" Value="abstract member CreateTask : Microsoft.Build.Framework.IBuildEngine * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Microsoft.Build.Framework.ITask" Usage="iTaskFactory2.CreateTask (taskFactoryLoggingHost, taskIdentityParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskFactoryLoggingHost" Type="Microsoft.Build.Framework.IBuildEngine" />
        <Parameter Name="taskIdentityParameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="taskFactoryLoggingHost">任务工厂的日志记录主机将记录任务上下文中的消息。</param>
        <param name="taskIdentityParameters">任务工厂的特殊参数可用于修改它怎么执行任务，例如运行时和建筑学。  
            密钥是参数的名称并且值是参数值。  这是设置为任务调用本身的参数集，例如特殊的 MSBuildRuntime 和 MSBuildArchitecture 参数。</param>
        <summary>创建要使用的任务的实例，具有在单个任务中设置的“特殊”参数的可选集，该任务使用 MSBuildRuntime 和 MSBuildArchitecture 默认任务参数调用。  MSBuild 提供此接口的实现，该 TaskHostFactory 使用 "MSBuildRuntime"，其值为 "CLR2"、"CLR4"、"CurrentRuntime" 和 "*" (任何) ;和 "MSBuildArchitecture"，值为 "x86"、"x64"、"CurrentArchitecture" 和 "*" (任何) 。  ITaskFactory2 的实现可以选择使用这些预定义的 MSBuildRuntime 和 MSBuildArchitecture 值，或可以为这些参数指定新值。</summary>
        <returns>生成的任务；如果任务创建失败，则为 <c>null</c>。</returns>
        <remarks>如果任务工厂实现 ITaskFactory2，则 MSBuild 将调用此方法，而不是 ITaskFactory. CreateTask。</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public bool Initialize (string taskName, System.Collections.Generic.IDictionary&lt;string,string&gt; factoryIdentityParameters, System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Framework.TaskPropertyInfo&gt; parameterGroup, string taskBody, Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Initialize(string taskName, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; factoryIdentityParameters, class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Framework.TaskPropertyInfo&gt; parameterGroup, string taskBody, class Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.ITaskFactory2.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)" />
      <MemberSignature Language="VB.NET" Value="Public Function Initialize (taskName As String, factoryIdentityParameters As IDictionary(Of String, String), parameterGroup As IDictionary(Of String, TaskPropertyInfo), taskBody As String, taskFactoryLoggingHost As IBuildEngine) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Initialize(System::String ^ taskName, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ factoryIdentityParameters, System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Framework::TaskPropertyInfo ^&gt; ^ parameterGroup, System::String ^ taskBody, Microsoft::Build::Framework::IBuildEngine ^ taskFactoryLoggingHost);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Framework.TaskPropertyInfo&gt; * string * Microsoft.Build.Framework.IBuildEngine -&gt; bool" Usage="iTaskFactory2.Initialize (taskName, factoryIdentityParameters, parameterGroup, taskBody, taskFactoryLoggingHost)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskName" Type="System.String" />
        <Parameter Name="factoryIdentityParameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="parameterGroup" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Framework.TaskPropertyInfo&gt;" />
        <Parameter Name="taskBody" Type="System.String" />
        <Parameter Name="taskFactoryLoggingHost" Type="Microsoft.Build.Framework.IBuildEngine" />
      </Parameters>
      <Docs>
        <param name="taskName">任务的名称。</param>
        <param name="factoryIdentityParameters">任务工厂的特殊参数可用于修改它怎么执行任务，例如运行时和建筑学。  密钥是参数的名称并且值是参数值。 这是使用一些参数（如 UsingTask Runtime 和 Architecture）在 UsingTask 上设置的参数集。</param>
        <param name="parameterGroup">参数组。</param>
        <param name="taskBody">任务正文。</param>
        <param name="taskFactoryLoggingHost">任务工厂日志记录主机。</param>
        <summary>初始化此工厂，以对带特定内联任务块的任务和一组 UsingTask 参数进行实例化。  MSBuild 提供此接口的实现，该 TaskHostFactory 使用 "Runtime"，其值为 "CLR2"、"CLR4"、"CurrentRuntime" 和 "*" (任意) ;"体系结构"，值为 "x86"、"x64"、"CurrentArchitecture" 和 "*" (任何) 。  ITaskFactory2 的实现可以选择使用这些预定义的运行时和体系结构值，或可以为这些参数指定新值。</summary>
        <returns>一个指示初始化是否成功的值。</returns>
        <remarks><para>MSBuild 引擎将调用此方法来初始化工厂。 此方法应足以初始化工厂，以便可以询问工厂是否可以由工厂创建任务名称。  如果任务工厂实现 ITaskFactory2，则将调用此 Initialize 方法来代替 ITaskFactory.Initialize。</para>
          <para>
TaskFactoryLoggingHost 会将消息记录到首次使用该任务的目标的上下文中。
            </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
