<Type Name="IListContract&lt;C&gt;" FullName="System.AddIn.Contract.Collections.IListContract&lt;C&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9a7e34f5dd3bc7d110b71476cca06f802291cf6e" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="70495323" /></Metadata><TypeSignature Language="C#" Value="public interface IListContract&lt;C&gt; : System.AddIn.Contract.Collections.ICollectionContract&lt;C&gt;, System.AddIn.Contract.Collections.IEnumerableContract&lt;C&gt; where C : IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IListContract`1&lt;(class System.AddIn.Contract.IContract) C&gt; implements class System.AddIn.Contract.Collections.ICollectionContract`1&lt;!C&gt;, class System.AddIn.Contract.Collections.IEnumerableContract`1&lt;!C&gt;, class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.Collections.IListContract`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IListContract(Of C)&#xA;Implements ICollectionContract(Of C), IEnumerableContract(Of C)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename C&gt;&#xA; where C : IContractpublic interface class IListContract : System::AddIn::Contract::Collections::ICollectionContract&lt;C&gt;, System::AddIn::Contract::Collections::IEnumerableContract&lt;C&gt;" />
  <TypeSignature Language="F#" Value="type IListContract&lt;'C (requires 'C :&gt; IContract)&gt; = interface&#xA;    interface ICollectionContract&lt;'C (requires 'C :&gt; IContract)&gt;&#xA;    interface IEnumerableContract&lt;'C (requires 'C :&gt; IContract)&gt;&#xA;    interface IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="C">
      <Constraints>
        <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.Collections.ICollectionContract&lt;C&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.AddIn.Contract.Collections.IEnumerableContract&lt;C&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="C"><span data-ttu-id="a1a5f-101">列表中的对象类型。</span><span class="sxs-lookup"><span data-stu-id="a1a5f-101">The type of objects in the list.</span></span> <span data-ttu-id="a1a5f-102"><paramref name="C" /> 必须实现 <see cref="T:System.AddIn.Contract.IContract" /> 接口。</span><span class="sxs-lookup"><span data-stu-id="a1a5f-102"><paramref name="C" /> must implement the <see cref="T:System.AddIn.Contract.IContract" /> interface.</span></span></typeparam>
    <summary><span data-ttu-id="a1a5f-103">表示可按照索引单独访问的 <see cref="T:System.AddIn.Contract.IContract" /> 对象的泛型集合。</span><span class="sxs-lookup"><span data-stu-id="a1a5f-103">Represents a generic collection of <see cref="T:System.AddIn.Contract.IContract" /> objects that can be individually accessed by index.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public C GetItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !C GetItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IListContract`1.GetItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItem (index As Integer) As C" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; C GetItem(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetItem : int -&gt; 'C" Usage="iListContract.GetItem index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>C</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="a1a5f-104">要获取的元素的索引(索引从零开始)。</span><span class="sxs-lookup"><span data-stu-id="a1a5f-104">The zero-based index of the element to get.</span></span></param>
        <summary><span data-ttu-id="a1a5f-105">返回指定索引处的元素。</span><span class="sxs-lookup"><span data-stu-id="a1a5f-105">Returns the element at the specified index.</span></span></summary>
        <returns><span data-ttu-id="a1a5f-106">指定索引处的元素。</span><span class="sxs-lookup"><span data-stu-id="a1a5f-106">The element at the specified index.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1a5f-107"><xref:System.AddIn.Contract.Collections.IListContract%601.GetItem%2A>方法不会移除指定索引处的元素。</span><span class="sxs-lookup"><span data-stu-id="a1a5f-107">The <xref:System.AddIn.Contract.Collections.IListContract%601.GetItem%2A> method does not remove the element at the specified index.</span></span> <span data-ttu-id="a1a5f-108">若要从中删除元素 <xref:System.AddIn.Contract.Collections.IListContract%601> ，请使用 <xref:System.AddIn.Contract.Collections.IListContract%601.RemoveAt%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="a1a5f-108">To remove an element from the <xref:System.AddIn.Contract.Collections.IListContract%601>, use the <xref:System.AddIn.Contract.Collections.IListContract%601.RemoveAt%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="a1a5f-109"><paramref name="index" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="a1a5f-109"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="a1a5f-110">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a1a5f-110">-or-</span></span> 
 <span data-ttu-id="a1a5f-111"><paramref name="index" /> 等于或大于 <see cref="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" /> 的返回值。</span><span class="sxs-lookup"><span data-stu-id="a1a5f-111"><paramref name="index" /> is equal to or greater than the return value of <see cref="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (C item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!C item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IListContract`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As C) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(C item);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : 'C -&gt; int" Usage="iListContract.IndexOf item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="C" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="a1a5f-112">要在 <see cref="T:System.AddIn.Contract.IContract" /> 中定位的 <see cref="T:System.AddIn.Contract.Collections.IListContract`1" />。</span><span class="sxs-lookup"><span data-stu-id="a1a5f-112">The <see cref="T:System.AddIn.Contract.IContract" /> to locate in the <see cref="T:System.AddIn.Contract.Collections.IListContract`1" />.</span></span></param>
        <summary><span data-ttu-id="a1a5f-113">返回 <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> 中的特定元素的索引。</span><span class="sxs-lookup"><span data-stu-id="a1a5f-113">Returns the index of a specific element in the <see cref="T:System.AddIn.Contract.Collections.IListContract`1" />.</span></span></summary>
        <returns><span data-ttu-id="a1a5f-114">如果在列表中找到，则为 <paramref name="item" /> 的索引；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="a1a5f-114">The index of <paramref name="item" /> if found in the list; otherwise, -1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, C item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, !C item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IListContract`1.Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As C)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, C item);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * 'C -&gt; unit" Usage="iListContract.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="C" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="a1a5f-115">从零开始的索引，在该处插入 <paramref name="item" />。</span><span class="sxs-lookup"><span data-stu-id="a1a5f-115">The zero-based index at which to insert <paramref name="item" />.</span></span></param>
        <param name="item"><span data-ttu-id="a1a5f-116">要插入 <see cref="T:System.AddIn.Contract.IContract" /> 中的 <see cref="T:System.AddIn.Contract.Collections.IListContract`1" />。</span><span class="sxs-lookup"><span data-stu-id="a1a5f-116">The <see cref="T:System.AddIn.Contract.IContract" /> to insert in the <see cref="T:System.AddIn.Contract.Collections.IListContract`1" />.</span></span></param>
        <summary><span data-ttu-id="a1a5f-117">将元素插入 <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> 中的指定索引处。</span><span class="sxs-lookup"><span data-stu-id="a1a5f-117">Inserts an element in the <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1a5f-118">调用之后 <xref:System.AddIn.Contract.Collections.IListContract%601.Insert%2A> ，插入点之后的元素会移动以容纳新元素。</span><span class="sxs-lookup"><span data-stu-id="a1a5f-118">After you call <xref:System.AddIn.Contract.Collections.IListContract%601.Insert%2A>, the elements that follow the insertion point move to accommodate the new element.</span></span> <span data-ttu-id="a1a5f-119">还会更新移动的元素的索引。</span><span class="sxs-lookup"><span data-stu-id="a1a5f-119">The indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="a1a5f-120">若要替换指定索引处的元素，请使用 <xref:System.AddIn.Contract.Collections.IListContract%601.SetItem%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="a1a5f-120">To replace an element at a specified index, use the <xref:System.AddIn.Contract.Collections.IListContract%601.SetItem%2A> method.</span></span>  
  
 <span data-ttu-id="a1a5f-121">若要确定是否 <xref:System.AddIn.Contract.Collections.IListContract%601> 为只读，请调用 <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="a1a5f-121">To determine whether an <xref:System.AddIn.Contract.Collections.IListContract%601> is read-only, call the <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="a1a5f-122"><paramref name="index" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="a1a5f-122"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="a1a5f-123">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a1a5f-123">-or-</span></span> 
 <span data-ttu-id="a1a5f-124"><paramref name="index" /> 等于或大于 <see cref="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" /> 的返回值。</span><span class="sxs-lookup"><span data-stu-id="a1a5f-124"><paramref name="index" /> is equal to or greater than the return value of <see cref="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a1a5f-125"><see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> 为只读。</span><span class="sxs-lookup"><span data-stu-id="a1a5f-125">The <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IListContract`1.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit" Usage="iListContract.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="a1a5f-126">要移除的元素的索引。</span><span class="sxs-lookup"><span data-stu-id="a1a5f-126">The index of the element to remove.</span></span></param>
        <summary><span data-ttu-id="a1a5f-127">移除指定索引处的元素。</span><span class="sxs-lookup"><span data-stu-id="a1a5f-127">Removes the element at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1a5f-128">调用后 <xref:System.AddIn.Contract.Collections.IListContract%601.RemoveAt%2A> ，删除的元素之后的元素会移动以占用空出的位置。</span><span class="sxs-lookup"><span data-stu-id="a1a5f-128">After you call <xref:System.AddIn.Contract.Collections.IListContract%601.RemoveAt%2A>, the elements that follow the removed element move to occupy the vacated spot.</span></span> <span data-ttu-id="a1a5f-129">还会更新移动的元素的索引。</span><span class="sxs-lookup"><span data-stu-id="a1a5f-129">The indexes of the elements that are moved are also updated.</span></span>  
  
 <span data-ttu-id="a1a5f-130">若要确定是否 <xref:System.AddIn.Contract.Collections.IListContract%601> 为只读，请调用 <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="a1a5f-130">To determine whether an <xref:System.AddIn.Contract.Collections.IListContract%601> is read-only, call the <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="a1a5f-131"><paramref name="index" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="a1a5f-131"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="a1a5f-132">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a1a5f-132">-or-</span></span> 
 <span data-ttu-id="a1a5f-133"><paramref name="index" /> 等于或大于 <see cref="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" /> 的返回值。</span><span class="sxs-lookup"><span data-stu-id="a1a5f-133"><paramref name="index" /> is equal to or greater than the return value of <see cref="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a1a5f-134"><see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> 为只读。</span><span class="sxs-lookup"><span data-stu-id="a1a5f-134">The <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="public void SetItem (int index, C value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetItem(int32 index, !C value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IListContract`1.SetItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetItem (index As Integer, value As C)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetItem(int index, C value);" />
      <MemberSignature Language="F#" Value="abstract member SetItem : int * 'C -&gt; unit" Usage="iListContract.SetItem (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="C" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="a1a5f-135">从零开始的索引，在此对元素进行设置。</span><span class="sxs-lookup"><span data-stu-id="a1a5f-135">The zero-based index at which to set the element.</span></span></param>
        <param name="value"><span data-ttu-id="a1a5f-136">要在指定索引处设置的元素。</span><span class="sxs-lookup"><span data-stu-id="a1a5f-136">The element to set at the specified index.</span></span></param>
        <summary><span data-ttu-id="a1a5f-137">替换指定索引处的元素。</span><span class="sxs-lookup"><span data-stu-id="a1a5f-137">Replaces the element at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1a5f-138"><xref:System.AddIn.Contract.Collections.IListContract%601.SetItem%2A>方法替换指定索引处的元素。</span><span class="sxs-lookup"><span data-stu-id="a1a5f-138">The <xref:System.AddIn.Contract.Collections.IListContract%601.SetItem%2A> method replaces the element at the specified index.</span></span> <span data-ttu-id="a1a5f-139">若要将元素添加到 <xref:System.AddIn.Contract.Collections.IListContract%601> 中，请使用 <xref:System.AddIn.Contract.Collections.IListContract%601.Insert%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="a1a5f-139">To add an element to the <xref:System.AddIn.Contract.Collections.IListContract%601>, use the <xref:System.AddIn.Contract.Collections.IListContract%601.Insert%2A> method.</span></span>  
  
 <span data-ttu-id="a1a5f-140">若要确定是否 <xref:System.AddIn.Contract.Collections.IListContract%601> 为只读，请调用 <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="a1a5f-140">To determine whether an <xref:System.AddIn.Contract.Collections.IListContract%601> is read-only, call the <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="a1a5f-141"><paramref name="index" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="a1a5f-141"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="a1a5f-142">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a1a5f-142">-or-</span></span> 
 <span data-ttu-id="a1a5f-143"><paramref name="index" /> 等于或大于 <see cref="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" /> 的返回值。</span><span class="sxs-lookup"><span data-stu-id="a1a5f-143"><paramref name="index" /> is equal to or greater than the return value of <see cref="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a1a5f-144"><see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> 为只读。</span><span class="sxs-lookup"><span data-stu-id="a1a5f-144">The <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
