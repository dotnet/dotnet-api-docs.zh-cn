<Type Name="IRemoteArgumentEnumeratorContract" FullName="System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract">
  <Metadata><Meta Name="ms.openlocfilehash" Value="760216bfa77d592e95a2a9b22e90c0a13fbf1099" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="69342990" /></Metadata><TypeSignature Language="C#" Value="public interface IRemoteArgumentEnumeratorContract : System.AddIn.Contract.IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRemoteArgumentEnumeratorContract implements class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRemoteArgumentEnumeratorContract&#xA;Implements IContract" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRemoteArgumentEnumeratorContract : System::AddIn::Contract::IContract" />
  <TypeSignature Language="F#" Value="type IRemoteArgumentEnumeratorContract = interface&#xA;    interface IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>枚举 <see cref="T:System.AddIn.Contract.RemoteArgument" /> 对象的集合的元素。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 枚举器可用于读取集合中的数据，但不能用于修改基础集合。  
  
 最初，枚举数定位在集合中第一个元素的前面。 在此位置，的返回值 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> 是不确定的。 因此，在调用之前，必须调用 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> 以将枚举数前移到集合的第一个元素 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> 。  
  
 在调用 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> 之前，<xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> 返回相同的对象。 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>将的返回值设置 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> 为下一个元素。  
  
 如果 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> 越过集合的末尾，则枚举器将定位在集合中最后一个元素之后，并 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> 返回 `false` 。 当枚举器位于此位置时，对的后续调用 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> 也将返回 `false` 。 如果最后一次调用 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> 返回 `false` ，则的返回值 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> 是不确定的。  
  
 只要集合保持不变，枚举数就保持有效。 如果对集合进行更改（如添加、修改或删除元素），则枚举数将失效且不可恢复，而且其行为是不确定的。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.RemoteArgument GetCurrent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.AddIn.Contract.RemoteArgument GetCurrent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrent () As RemoteArgument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::RemoteArgument GetCurrent();" />
      <MemberSignature Language="F#" Value="abstract member GetCurrent : unit -&gt; System.AddIn.Contract.RemoteArgument" Usage="iRemoteArgumentEnumeratorContract.GetCurrent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.RemoteArgument</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回集合中位于枚举数当前位置的 <see cref="T:System.AddIn.Contract.RemoteArgument" />。</summary>
        <returns>集合中位于枚举数当前位置的 <see cref="T:System.AddIn.Contract.RemoteArgument" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在下列任一情况下，的返回值未 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> 定义：  
  
-   枚举器位于集合中第一个元素之前，紧跟在创建或调用枚举器后 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A> 。 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>在调用之前，必须调用以将枚举数前移到集合的第一个元素 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> 。  
  
-   对返回的最后一个调用 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> `false` ，指示集合的末尾。  
  
-   由于对集合所做的更改（如添加、修改或删除元素），枚举器无效。  
  
 在调用 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> 之前，<xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> 返回相同的对象。 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>将的返回值设置 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> 为下一个元素。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool" Usage="iRemoteArgumentEnumeratorContract.MoveNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将枚举数推进到集合的下一个元素。</summary>
        <returns>如果枚举数已成功地推进到下一个元素，则为 <see langword="true" />；如果枚举数传递到集合的末尾，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在创建枚举器之后或在 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A> 调用方法之后，枚举数将定位到集合的第一个元素之前。 第一次调用方法时，会 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> 将枚举数移到集合的第一个元素。  
  
 如果 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> 越过集合的末尾，则枚举器将定位在集合中最后一个元素之后，并 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> 返回 `false` 。 当枚举器位于此位置时，对的后续调用 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> 也将返回， `false` 直到 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A> 调用。  
  
 只要集合保持不变，枚举数就保持有效。 如果对集合所做的更改（如添加、修改或删除元素），则枚举器将失效且不可恢复，并且对或的下一个调用将 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A> 引发 <xref:System.InvalidOperationException> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">集合在枚举器创建后被修改。</exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit" Usage="iRemoteArgumentEnumeratorContract.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将枚举数设置为其初始位置，该位置位于集合中第一个元素之前。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用后 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A> ，的值 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> 是不确定的。 调用 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> 方法以将枚举数移到集合的第一个元素。  
  
 只要集合保持不变，枚举数就保持有效。 如果对集合所做的更改（如添加、修改或删除元素），则枚举器将失效且不可恢复，并且对或的下一个调用将 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A> 引发 <xref:System.InvalidOperationException> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">集合在枚举器创建后被修改。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
