<Type Name="ActiveDirectorySecurity" FullName="System.DirectoryServices.ActiveDirectorySecurity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="10f1dc8afbb0473d2fc49761d1cf069801f16ffa" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89770731" /></Metadata><TypeSignature Language="C#" Value="public class ActiveDirectorySecurity : System.Security.AccessControl.DirectoryObjectSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ActiveDirectorySecurity extends System.Security.AccessControl.DirectoryObjectSecurity" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.ActiveDirectorySecurity" />
  <TypeSignature Language="VB.NET" Value="Public Class ActiveDirectorySecurity&#xA;Inherits DirectoryObjectSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActiveDirectorySecurity : System::Security::AccessControl::DirectoryObjectSecurity" />
  <TypeSignature Language="F#" Value="type ActiveDirectorySecurity = class&#xA;    inherit DirectoryObjectSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.DirectoryObjectSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0b8dd-101">使用托管 ACL 库的对象安全层来包装目录对象的访问控制功能。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-101">Uses the object security layer of the managed ACL library to wrap access control functionality for directory objects.</span></span></summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:System.Security.AccessControl.DirectoryObjectSecurity" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActiveDirectorySecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActiveDirectorySecurity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0b8dd-102">初始化 <see cref="T:System.DirectoryServices.ActiveDirectorySecurity" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-102">Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectorySecurity" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRightType">
      <MemberSignature Language="C#" Value="public override Type AccessRightType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRightType" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectorySecurity.AccessRightType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRightType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRightType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRightType : Type" Usage="System.DirectoryServices.ActiveDirectorySecurity.AccessRightType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b8dd-103">获取 <see cref="T:System.Type" /> 对象，它表示此对象的访问权限。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-103">Gets the <see cref="T:System.Type" /> object that represents an access right for this object.</span></span></summary>
        <value><span data-ttu-id="0b8dd-104">访问权限的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-104">The <see cref="T:System.Type" /> of the access right.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b8dd-105">此属性始终返回 <xref:System.Type> <xref:System.DirectoryServices.ActiveDirectoryRights> 枚举的。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-105">This property always returns the <xref:System.Type> of the <xref:System.DirectoryServices.ActiveDirectoryRights> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AccessRuleFactory">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0b8dd-106">创建一个 <see cref="T:System.Security.AccessControl.AccessRule" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-106">Creates an <see cref="T:System.Security.AccessControl.AccessRule" /> object.</span></span></summary>
        <altmember cref="T:System.Security.AccessControl.AccessRule" />
      </Docs>
    </MemberGroup>
    <Member MemberName="AccessRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AccessRule AccessRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function AccessRuleFactory (identityReference As IdentityReference, accessMask As Integer, isInherited As Boolean, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, type As AccessControlType) As AccessRule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AccessRule ^ AccessRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="override this.AccessRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.AccessRule" Usage="activeDirectorySecurity.AccessRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AccessRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identityReference"><span data-ttu-id="0b8dd-107">解析为安全标识符 (SID) 的 <see cref="T:System.Security.Principal.IdentityReference" /> 对象，例如 NTAccount 对象。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-107">An <see cref="T:System.Security.Principal.IdentityReference" /> object such as an NTAccount object that resolves to a security identifier (SID).</span></span></param>
        <param name="accessMask"><span data-ttu-id="0b8dd-108">一个 <see cref="T:System.Int32" /> 位掩码，显示要使用的访问特权。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-108">An <see cref="T:System.Int32" /> bitmask that shows the access privileges to use.</span></span></param>
        <param name="isInherited"><span data-ttu-id="0b8dd-109">一个 <see cref="T:System.Boolean" /> 对象，指示 ACE 是否可被继承。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-109">A <see cref="T:System.Boolean" /> object that indicates whether ACEs are inherited.</span></span> <span data-ttu-id="0b8dd-110">如果 ACE 可被继承，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-110"><see langword="true" /> if ACEs are inherited; otherwise, <see langword="false" />.</span></span></param>
        <param name="inheritanceFlags"><span data-ttu-id="0b8dd-111">一个 <see cref="T:System.Security.AccessControl.InheritanceFlags" /> 对象，其中包含目录对象上的继承标志。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-111">An <see cref="T:System.Security.AccessControl.InheritanceFlags" /> object that contains inheritance flags on a directory object.</span></span></param>
        <param name="propagationFlags"><span data-ttu-id="0b8dd-112">一个 <see cref="T:System.Security.AccessControl.PropagationFlags" /> 对象，其中包含目录对象的继承传播标志。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-112">A <see cref="T:System.Security.AccessControl.PropagationFlags" /> object that contains inheritance propagation flags on a directory object.</span></span></param>
        <param name="type"><span data-ttu-id="0b8dd-113">包含 ACE 类型的 <see cref="T:System.Security.AccessControl.AccessControlType" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-113">An <see cref="T:System.Security.AccessControl.AccessControlType" /> object that contains the ACE type.</span></span></param>
        <summary><span data-ttu-id="0b8dd-114">创建具有指定值的 <see cref="T:System.Security.AccessControl.AccessRule" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-114">Creates an <see cref="T:System.Security.AccessControl.AccessRule" /> object with the specified values.</span></span></summary>
        <returns><span data-ttu-id="0b8dd-115">与 <see cref="T:System.DirectoryServices.ActiveDirectorySecurity" /> 对象相对应的 <see cref="T:System.Security.AccessControl.AccessRule" />。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-115">The <see cref="T:System.Security.AccessControl.AccessRule" /> that corresponds to the <see cref="T:System.DirectoryServices.ActiveDirectorySecurity" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Security.AccessControl.AccessRule" />
      </Docs>
    </Member>
    <Member MemberName="AccessRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type, Guid objectGuid, Guid inheritedObjectGuid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AccessRule AccessRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type, valuetype System.Guid objectGuid, valuetype System.Guid inheritedObjectGuid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function AccessRuleFactory (identityReference As IdentityReference, accessMask As Integer, isInherited As Boolean, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, type As AccessControlType, objectGuid As Guid, inheritedObjectGuid As Guid) As AccessRule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AccessRule ^ AccessRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type, Guid objectGuid, Guid inheritedObjectGuid);" />
      <MemberSignature Language="F#" Value="override this.AccessRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType * Guid * Guid -&gt; System.Security.AccessControl.AccessRule" Usage="activeDirectorySecurity.AccessRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, type, objectGuid, inheritedObjectGuid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AccessRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
        <Parameter Name="objectGuid" Type="System.Guid" />
        <Parameter Name="inheritedObjectGuid" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="identityReference"><span data-ttu-id="0b8dd-116">解析为安全标识符 (SID) 的 <see cref="T:System.Security.Principal.IdentityReference" /> 对象，如 NTAccount 对象。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-116">An <see cref="T:System.Security.Principal.IdentityReference" /> object, such as an NTAccount object, that resolves to a security identifier (SID).</span></span></param>
        <param name="accessMask"><span data-ttu-id="0b8dd-117">一个 <see cref="T:System.Int32" /> 位掩码，显示要使用的访问特权。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-117">An <see cref="T:System.Int32" /> bitmask that shows the access privileges to use.</span></span></param>
        <param name="isInherited"><span data-ttu-id="0b8dd-118">一个 <see cref="T:System.Boolean" /> 对象，指示 ACE 是否可被继承。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-118">A <see cref="T:System.Boolean" /> object that indicates if ACEs are inherited.</span></span> <span data-ttu-id="0b8dd-119">如果 ACE 可被继承，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-119"><see langword="true" /> if ACEs are inherited; otherwise, <see langword="false" />.</span></span></param>
        <param name="inheritanceFlags"><span data-ttu-id="0b8dd-120">一个 <see cref="T:System.Security.AccessControl.InheritanceFlags" /> 对象，其中包含目录对象的继承标志。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-120">An <see cref="T:System.Security.AccessControl.InheritanceFlags" /> object that contains inheritance flags for a directory object.</span></span></param>
        <param name="propagationFlags"><span data-ttu-id="0b8dd-121">一个 <see cref="T:System.Security.AccessControl.PropagationFlags" /> 对象，其中包含目录对象的继承传播标志。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-121">A <see cref="T:System.Security.AccessControl.PropagationFlags" /> object that contains inheritance propagation flags for a directory object.</span></span></param>
        <param name="type"><span data-ttu-id="0b8dd-122">包含 ACE 类型的 <see cref="T:System.Security.AccessControl.AccessControlType" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-122">An <see cref="T:System.Security.AccessControl.AccessControlType" /> object that contains the ACE type.</span></span></param>
        <param name="objectGuid"><span data-ttu-id="0b8dd-123">一个 <see cref="T:System.Guid" /> 对象，其中包含目录对象的 GUID。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-123">A <see cref="T:System.Guid" /> object that contains the GUID of the directory object.</span></span></param>
        <param name="inheritedObjectGuid"><span data-ttu-id="0b8dd-124">一个 <see cref="T:System.Guid" /> 对象，其中包含继承的目录对象的 GUID。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-124">A <see cref="T:System.Guid" /> object that contains the GUID of the inherited directory object.</span></span></param>
        <summary><span data-ttu-id="0b8dd-125">创建具有指定值的 <see cref="T:System.Security.AccessControl.AccessRule" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-125">Creates an <see cref="T:System.Security.AccessControl.AccessRule" /> object with the specified values.</span></span></summary>
        <returns><span data-ttu-id="0b8dd-126">与 <see cref="T:System.DirectoryServices.ActiveDirectorySecurity" /> 对象相对应的 <see cref="T:System.Security.AccessControl.AccessRule" />。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-126">The <see cref="T:System.Security.AccessControl.AccessRule" /> that corresponds to the <see cref="T:System.DirectoryServices.ActiveDirectorySecurity" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Security.AccessControl.AccessRule" />
      </Docs>
    </Member>
    <Member MemberName="AccessRuleType">
      <MemberSignature Language="C#" Value="public override Type AccessRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRuleType" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRuleType : Type" Usage="System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b8dd-127">获取表示此对象访问规则的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-127">Gets the <see cref="T:System.Type" /> that represents an access rule for this object.</span></span></summary>
        <value><span data-ttu-id="0b8dd-128">访问规则的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-128">The <see cref="T:System.Type" /> of the access rule.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b8dd-129">此属性始终返回 <xref:System.Type> <xref:System.DirectoryServices.ActiveDirectoryAccessRule> 类的。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-129">This property always returns the <xref:System.Type> of the <xref:System.DirectoryServices.ActiveDirectoryAccessRule> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccessRule">
      <MemberSignature Language="C#" Value="public void AddAccessRule (System.DirectoryServices.ActiveDirectoryAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAccessRule(class System.DirectoryServices.ActiveDirectoryAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAccessRule (rule As ActiveDirectoryAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAccessRule(System::DirectoryServices::ActiveDirectoryAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.AddAccessRule : System.DirectoryServices.ActiveDirectoryAccessRule -&gt; unit" Usage="activeDirectorySecurity.AddAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.DirectoryServices.ActiveDirectoryAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="0b8dd-130">此操作应用于的 <see cref="M:System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-130">The <see cref="M:System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)" /> object to which this operation applies.</span></span></param>
        <summary><span data-ttu-id="0b8dd-131">向对象的 DACL 添加访问规则。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-131">Adds an access rule to the DACL of an object.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.DirectoryServices.ActiveDirectoryAccessRule" />
      </Docs>
    </Member>
    <Member MemberName="AddAuditRule">
      <MemberSignature Language="C#" Value="public void AddAuditRule (System.DirectoryServices.ActiveDirectoryAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAuditRule(class System.DirectoryServices.ActiveDirectoryAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAuditRule (rule As ActiveDirectoryAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAuditRule(System::DirectoryServices::ActiveDirectoryAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.AddAuditRule : System.DirectoryServices.ActiveDirectoryAuditRule -&gt; unit" Usage="activeDirectorySecurity.AddAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.DirectoryServices.ActiveDirectoryAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="0b8dd-132">此操作应用于的 <see cref="T:System.DirectoryServices.ActiveDirectoryAuditRule" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-132">The <see cref="T:System.DirectoryServices.ActiveDirectoryAuditRule" /> object to which this operation applies.</span></span></param>
        <summary><span data-ttu-id="0b8dd-133">向对象的 SACL 添加访问规则。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-133">Adds an audit rule to the SACL of an object.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.DirectoryServices.ActiveDirectoryAuditRule" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AuditRuleFactory">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0b8dd-134">创建一个 <see cref="T:System.Security.AccessControl.AuditRule" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-134">Creates an <see cref="T:System.Security.AccessControl.AuditRule" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuditRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AuditRule AuditRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function AuditRuleFactory (identityReference As IdentityReference, accessMask As Integer, isInherited As Boolean, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, flags As AuditFlags) As AuditRule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AuditRule ^ AuditRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="override this.AuditRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.AuditRule" Usage="activeDirectorySecurity.AuditRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuditRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identityReference"><span data-ttu-id="0b8dd-135">解析为安全标识符 (SID) 的 <see cref="T:System.Security.Principal.IdentityReference" /> 对象，如 NTAccount 对象。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-135">An <see cref="T:System.Security.Principal.IdentityReference" /> object such as an NTAccount object, that resolves to a security identifier (SID).</span></span></param>
        <param name="accessMask"><span data-ttu-id="0b8dd-136">一个 <see cref="T:System.Int32" /> 位掩码，显示要使用的访问特权。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-136">An <see cref="T:System.Int32" /> bitmask that shows the access privileges to use.</span></span></param>
        <param name="isInherited"><span data-ttu-id="0b8dd-137">一个 <see cref="T:System.Boolean" /> 对象，指示 ACE 是否可被继承。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-137">A <see cref="T:System.Boolean" /> object that indicates if ACEs are inherited.</span></span> <span data-ttu-id="0b8dd-138">如果 ACE 可被继承，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-138"><see langword="true" /> if ACEs are inherited; otherwise, <see langword="false" />.</span></span></param>
        <param name="inheritanceFlags"><span data-ttu-id="0b8dd-139">一个 <see cref="T:System.Security.AccessControl.InheritanceFlags" /> 对象，其中包含目录对象上的继承标志。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-139">An <see cref="T:System.Security.AccessControl.InheritanceFlags" /> object that contains inheritance flags on a directory object.</span></span></param>
        <param name="propagationFlags"><span data-ttu-id="0b8dd-140">一个 <see cref="T:System.Security.AccessControl.PropagationFlags" /> 对象，其中包含目录对象的继承传播标志。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-140">A <see cref="T:System.Security.AccessControl.PropagationFlags" /> object that contains inheritance propagation flags on a directory object.</span></span></param>
        <param name="flags"><span data-ttu-id="0b8dd-141">一个 <see cref="T:System.Security.AccessControl.AuditFlags" /> 对象，其中包含此 <see cref="T:System.DirectoryServices.ActiveDirectorySecurity" /> 对象的审核标志。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-141">An <see cref="T:System.Security.AccessControl.AuditFlags" /> object that contains the audit flags for this <see cref="T:System.DirectoryServices.ActiveDirectorySecurity" /> object.</span></span></param>
        <summary><span data-ttu-id="0b8dd-142">创建具有指定值的 <see cref="T:System.Security.AccessControl.AuditRule" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-142">Creates an <see cref="T:System.Security.AccessControl.AuditRule" /> object with the specified values.</span></span></summary>
        <returns><span data-ttu-id="0b8dd-143">与 <see cref="T:System.DirectoryServices.ActiveDirectorySecurity" /> 对象相对应的 <see cref="T:System.Security.AccessControl.AuditRule" />。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-143">The <see cref="T:System.Security.AccessControl.AuditRule" /> that corresponds to the <see cref="T:System.DirectoryServices.ActiveDirectorySecurity" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Security.AccessControl.AuditRule" />
      </Docs>
    </Member>
    <Member MemberName="AuditRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags, Guid objectGuid, Guid inheritedObjectGuid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AuditRule AuditRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags, valuetype System.Guid objectGuid, valuetype System.Guid inheritedObjectGuid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function AuditRuleFactory (identityReference As IdentityReference, accessMask As Integer, isInherited As Boolean, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, flags As AuditFlags, objectGuid As Guid, inheritedObjectGuid As Guid) As AuditRule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AuditRule ^ AuditRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags, Guid objectGuid, Guid inheritedObjectGuid);" />
      <MemberSignature Language="F#" Value="override this.AuditRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags * Guid * Guid -&gt; System.Security.AccessControl.AuditRule" Usage="activeDirectorySecurity.AuditRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, flags, objectGuid, inheritedObjectGuid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuditRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
        <Parameter Name="objectGuid" Type="System.Guid" />
        <Parameter Name="inheritedObjectGuid" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="identityReference"><span data-ttu-id="0b8dd-144">解析为安全标识符 (SID) 的 <see cref="T:System.Security.Principal.IdentityReference" /> 对象，例如 NTAccount 对象。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-144">An <see cref="T:System.Security.Principal.IdentityReference" /> object such as an NTAccount object that resolves to a security identifier (SID).</span></span></param>
        <param name="accessMask"><span data-ttu-id="0b8dd-145">一个 <see cref="T:System.Int32" /> 位掩码，显示要使用的访问特权。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-145">An <see cref="T:System.Int32" /> bitmask that shows the access privileges to use.</span></span></param>
        <param name="isInherited"><span data-ttu-id="0b8dd-146">一个 <see cref="T:System.Boolean" /> 对象，指示 ACE 是否可被继承。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-146">A <see cref="T:System.Boolean" /> object that indicates whether ACEs are inherited.</span></span> <span data-ttu-id="0b8dd-147">如果 ACE 可被继承，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-147"><see langword="true" /> if ACEs are inherited; otherwise, <see langword="false" />.</span></span></param>
        <param name="inheritanceFlags"><span data-ttu-id="0b8dd-148">一个 <see cref="T:System.Security.AccessControl.InheritanceFlags" /> 对象，其中包含目录对象上的继承标志。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-148">An <see cref="T:System.Security.AccessControl.InheritanceFlags" /> object that contains inheritance flags on a directory object.</span></span></param>
        <param name="propagationFlags"><span data-ttu-id="0b8dd-149">一个 <see cref="T:System.Security.AccessControl.PropagationFlags" /> 对象，其中包含目录对象的继承传播标志。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-149">A <see cref="T:System.Security.AccessControl.PropagationFlags" /> object that contains inheritance propagation flags on a directory object.</span></span></param>
        <param name="flags"><span data-ttu-id="0b8dd-150">一个 <see cref="T:System.Security.AccessControl.AuditFlags" /> 对象，其中包含此 <see cref="T:System.DirectoryServices.ActiveDirectorySecurity" /> 对象的审核标志。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-150">An <see cref="T:System.Security.AccessControl.AuditFlags" /> object that contains the audit flags for this <see cref="T:System.DirectoryServices.ActiveDirectorySecurity" /> object.</span></span></param>
        <param name="objectGuid"><span data-ttu-id="0b8dd-151">一个 <see cref="T:System.Guid" /> 对象，其中包含目录对象的 Guido。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-151">A <see cref="T:System.Guid" /> object that contains the Guido of the directory object.</span></span></param>
        <param name="inheritedObjectGuid"><span data-ttu-id="0b8dd-152">一个 <see cref="T:System.Guid" /> 对象，其中包含继承的目录对象的 Guido。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-152">A <see cref="T:System.Guid" /> object that contains the Guido of the inherited directory object.</span></span></param>
        <summary><span data-ttu-id="0b8dd-153">创建具有指定值的 <see cref="T:System.Security.AccessControl.AuditRule" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-153">Creates an <see cref="T:System.Security.AccessControl.AuditRule" /> object with the specified values.</span></span></summary>
        <returns><span data-ttu-id="0b8dd-154">与 <see cref="T:System.DirectoryServices.ActiveDirectorySecurity" /> 对象相对应的 <see cref="T:System.Security.AccessControl.AuditRule" />。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-154">The <see cref="T:System.Security.AccessControl.AuditRule" /> that corresponds to the <see cref="T:System.DirectoryServices.ActiveDirectorySecurity" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Security.AccessControl.AuditRule" />
      </Docs>
    </Member>
    <Member MemberName="AuditRuleType">
      <MemberSignature Language="C#" Value="public override Type AuditRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AuditRuleType" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AuditRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AuditRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuditRuleType : Type" Usage="System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b8dd-155">获取表示此对象审核规则的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-155">Gets the <see cref="T:System.Type" /> that represents an audit rule for this object.</span></span></summary>
        <value><span data-ttu-id="0b8dd-156">审核规则的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-156">The <see cref="T:System.Type" /> of the audit rule.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b8dd-157">此属性始终返回 <xref:System.Type> <xref:System.DirectoryServices.ActiveDirectoryAuditRule> 类的。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-157">This property always returns the <xref:System.Type> of the <xref:System.DirectoryServices.ActiveDirectoryAuditRule> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifyAccessRule">
      <MemberSignature Language="C#" Value="public override bool ModifyAccessRule (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AccessRule rule, out bool modified);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ModifyAccessRule(valuetype System.Security.AccessControl.AccessControlModification modification, class System.Security.AccessControl.AccessRule rule, [out] bool&amp; modified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ModifyAccessRule (modification As AccessControlModification, rule As AccessRule, ByRef modified As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ModifyAccessRule(System::Security::AccessControl::AccessControlModification modification, System::Security::AccessControl::AccessRule ^ rule, [Runtime::InteropServices::Out] bool % modified);" />
      <MemberSignature Language="F#" Value="override this.ModifyAccessRule : System.Security.AccessControl.AccessControlModification * System.Security.AccessControl.AccessRule * bool -&gt; bool" Usage="activeDirectorySecurity.ModifyAccessRule (modification, rule, modified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modification" Type="System.Security.AccessControl.AccessControlModification" />
        <Parameter Name="rule" Type="System.Security.AccessControl.AccessRule" />
        <Parameter Name="modified" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="modification"><span data-ttu-id="0b8dd-158">要执行的访问控制类型。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-158">The type of access control modification to perform.</span></span></param>
        <param name="rule"><span data-ttu-id="0b8dd-159">要修改的访问规则。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-159">The access rule to modify.</span></span></param>
        <param name="modified"><span data-ttu-id="0b8dd-160">如果实际已修改，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-160"><see langword="true" /> if actually modified; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="0b8dd-161">将指定修改应用到指定的 <see cref="T:System.Security.AccessControl.AccessRule" />。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-161">Applies the specified modification to the specified <see cref="T:System.Security.AccessControl.AccessRule" />.</span></span></summary>
        <returns><span data-ttu-id="0b8dd-162">如果修改成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-162"><see langword="true" /> if successfully modified; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifyAuditRule">
      <MemberSignature Language="C#" Value="public override bool ModifyAuditRule (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AuditRule rule, out bool modified);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ModifyAuditRule(valuetype System.Security.AccessControl.AccessControlModification modification, class System.Security.AccessControl.AuditRule rule, [out] bool&amp; modified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ModifyAuditRule (modification As AccessControlModification, rule As AuditRule, ByRef modified As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ModifyAuditRule(System::Security::AccessControl::AccessControlModification modification, System::Security::AccessControl::AuditRule ^ rule, [Runtime::InteropServices::Out] bool % modified);" />
      <MemberSignature Language="F#" Value="override this.ModifyAuditRule : System.Security.AccessControl.AccessControlModification * System.Security.AccessControl.AuditRule * bool -&gt; bool" Usage="activeDirectorySecurity.ModifyAuditRule (modification, rule, modified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modification" Type="System.Security.AccessControl.AccessControlModification" />
        <Parameter Name="rule" Type="System.Security.AccessControl.AuditRule" />
        <Parameter Name="modified" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="modification"><span data-ttu-id="0b8dd-163">要应用的修改。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-163">The modification to apply.</span></span></param>
        <param name="rule"><span data-ttu-id="0b8dd-164">要修改的审核规则。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-164">The audit rule to modify.</span></span></param>
        <param name="modified"><span data-ttu-id="0b8dd-165">如果实际已修改，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-165"><see langword="true" /> if actually modified; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="0b8dd-166">将指定修改应用到指定的 <see cref="T:System.Security.AccessControl.AuditRule" />。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-166">Applies the specified modification to the specified <see cref="T:System.Security.AccessControl.AuditRule" />.</span></span></summary>
        <returns><span data-ttu-id="0b8dd-167">如果修改成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-167"><see langword="true" /> if successfully modified; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PurgeAccessRules">
      <MemberSignature Language="C#" Value="public override void PurgeAccessRules (System.Security.Principal.IdentityReference identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void PurgeAccessRules(class System.Security.Principal.IdentityReference identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub PurgeAccessRules (identity As IdentityReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void PurgeAccessRules(System::Security::Principal::IdentityReference ^ identity);" />
      <MemberSignature Language="F#" Value="override this.PurgeAccessRules : System.Security.Principal.IdentityReference -&gt; unit" Usage="activeDirectorySecurity.PurgeAccessRules identity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="0b8dd-168">要删除其所有访问规则的 <see cref="T:System.Security.Principal.IdentityReference" />。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-168">The <see cref="T:System.Security.Principal.IdentityReference" /> for which to remove all access rules.</span></span></param>
        <summary><span data-ttu-id="0b8dd-169">删除与指定 <see cref="T:System.Security.Principal.IdentityReference" /> 关联的所有访问规则。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-169">Removes all access rules associated with the specified <see cref="T:System.Security.Principal.IdentityReference" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0b8dd-170">所有访问规则的顺序都不规范。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-170">All access rules are not in canonical order.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PurgeAuditRules">
      <MemberSignature Language="C#" Value="public override void PurgeAuditRules (System.Security.Principal.IdentityReference identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void PurgeAuditRules(class System.Security.Principal.IdentityReference identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub PurgeAuditRules (identity As IdentityReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void PurgeAuditRules(System::Security::Principal::IdentityReference ^ identity);" />
      <MemberSignature Language="F#" Value="override this.PurgeAuditRules : System.Security.Principal.IdentityReference -&gt; unit" Usage="activeDirectorySecurity.PurgeAuditRules identity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="0b8dd-171">要删除其所有审核规则的 <see cref="T:System.Security.Principal.IdentityReference" />。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-171">The <see cref="T:System.Security.Principal.IdentityReference" /> for which to remove all audit rules.</span></span></param>
        <summary><span data-ttu-id="0b8dd-172">删除与指定 <see cref="T:System.Security.Principal.IdentityReference" /> 关联的所有审核规则。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-172">Removes all audit rules associated with the specified <see cref="T:System.Security.Principal.IdentityReference" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0b8dd-173">所有审核规则的顺序都不规范。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-173">All audit rules are not in canonical order.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccess">
      <MemberSignature Language="C#" Value="public void RemoveAccess (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccess(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccess (identity As IdentityReference, type As AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccess(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="member this.RemoveAccess : System.Security.Principal.IdentityReference * System.Security.AccessControl.AccessControlType -&gt; unit" Usage="activeDirectorySecurity.RemoveAccess (identity, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="0b8dd-174">解析为安全标识符 (SID) 的 <see cref="T:System.Security.Principal.IdentityReference" /> 对象，如 NTAccount 对象。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-174">An <see cref="T:System.Security.Principal.IdentityReference" /> object such as an NTAccount object, that resolves to a security identifier (SID).</span></span></param>
        <param name="type"><span data-ttu-id="0b8dd-175">包含 ACE 类型的 <see cref="T:System.Security.AccessControl.AccessControlType" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-175">An <see cref="T:System.Security.AccessControl.AccessControlType" /> object that contains the ACE type.</span></span></param>
        <summary><span data-ttu-id="0b8dd-176">从对象的 DACL 中移除所有具有指定 <see cref="T:System.Security.Principal.IdentityReference" /> 对象和 <see cref="T:System.Security.AccessControl.AccessControlType" /> 对象的访问规则。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-176">Removes all access rules that have the specified <see cref="T:System.Security.Principal.IdentityReference" /> object and <see cref="T:System.Security.AccessControl.AccessControlType" /> object from the DACL of an object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRule">
      <MemberSignature Language="C#" Value="public bool RemoveAccessRule (System.DirectoryServices.ActiveDirectoryAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAccessRule(class System.DirectoryServices.ActiveDirectoryAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAccessRule (rule As ActiveDirectoryAccessRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAccessRule(System::DirectoryServices::ActiveDirectoryAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRule : System.DirectoryServices.ActiveDirectoryAccessRule -&gt; bool" Usage="activeDirectorySecurity.RemoveAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.DirectoryServices.ActiveDirectoryAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="0b8dd-177">此操作应用于的 <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-177">The <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule" /> object to which this operation applies.</span></span></param>
        <summary><span data-ttu-id="0b8dd-178">从对象的 DACL 中移除包含安全标识符和访问掩码（其与指定访问规则中的相同）的所有访问规则。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-178">Removes all access rules that contain the same security identifier and access mask as the specified access rule from the DACL of an object.</span></span></summary>
        <returns><span data-ttu-id="0b8dd-179">如果操作成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-179"><see langword="true" /> if the operation is successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleSpecific (System.DirectoryServices.ActiveDirectoryAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleSpecific(class System.DirectoryServices.ActiveDirectoryAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(System.DirectoryServices.ActiveDirectoryAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleSpecific (rule As ActiveDirectoryAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleSpecific(System::DirectoryServices::ActiveDirectoryAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRuleSpecific : System.DirectoryServices.ActiveDirectoryAccessRule -&gt; unit" Usage="activeDirectorySecurity.RemoveAccessRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.DirectoryServices.ActiveDirectoryAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="0b8dd-180">此操作应用于的 <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-180">The <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule" /> object to which this operation applies.</span></span></param>
        <summary><span data-ttu-id="0b8dd-181">从对象的 DACL 中移除所有与指定访问规则完全匹配的访问规则。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-181">Removes all access rules that exactly match the specified access rule from the DACL of an object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAudit">
      <MemberSignature Language="C#" Value="public void RemoveAudit (System.Security.Principal.IdentityReference identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAudit(class System.Security.Principal.IdentityReference identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit(System.Security.Principal.IdentityReference)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAudit (identity As IdentityReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAudit(System::Security::Principal::IdentityReference ^ identity);" />
      <MemberSignature Language="F#" Value="member this.RemoveAudit : System.Security.Principal.IdentityReference -&gt; unit" Usage="activeDirectorySecurity.RemoveAudit identity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="0b8dd-182">解析为安全标识符 (SID) 的 <see cref="T:System.Security.Principal.IdentityReference" /> 对象，如 NTAccount 对象。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-182">An <see cref="T:System.Security.Principal.IdentityReference" /> object such as an NTAccount object, that resolves to a security identifier (SID).</span></span></param>
        <summary><span data-ttu-id="0b8dd-183">从对象的 SACL 中移除所有具有指定 <see cref="T:System.Security.Principal.IdentityReference" /> 对象的审核规则。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-183">Removes all audit rules that have the specified <see cref="T:System.Security.Principal.IdentityReference" /> object from the SACL of an object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRule">
      <MemberSignature Language="C#" Value="public bool RemoveAuditRule (System.DirectoryServices.ActiveDirectoryAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAuditRule(class System.DirectoryServices.ActiveDirectoryAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAuditRule (rule As ActiveDirectoryAuditRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAuditRule(System::DirectoryServices::ActiveDirectoryAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRule : System.DirectoryServices.ActiveDirectoryAuditRule -&gt; bool" Usage="activeDirectorySecurity.RemoveAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.DirectoryServices.ActiveDirectoryAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="0b8dd-184">此操作应用于的 <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-184">The <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule" /> object to which this operation applies.</span></span></param>
        <summary><span data-ttu-id="0b8dd-185">从对象的系统访问控制列表 (SACL) 中移除包含安全标识符和访问掩码（其与指定审核规则中的相同）的所有审核规则。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-185">Removes all audit rules that contain the same security identifier and access mask as the specified audit rule from the System Access Control List (SACL) of an object.</span></span></summary>
        <returns><span data-ttu-id="0b8dd-186">如果操作成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-186"><see langword="true" /> if the operation is successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleSpecific (System.DirectoryServices.ActiveDirectoryAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleSpecific(class System.DirectoryServices.ActiveDirectoryAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(System.DirectoryServices.ActiveDirectoryAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleSpecific (rule As ActiveDirectoryAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleSpecific(System::DirectoryServices::ActiveDirectoryAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRuleSpecific : System.DirectoryServices.ActiveDirectoryAuditRule -&gt; unit" Usage="activeDirectorySecurity.RemoveAuditRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.DirectoryServices.ActiveDirectoryAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="0b8dd-187">此操作应用于的 <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-187">The <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule" /> object to which this operation applies.</span></span></param>
        <summary><span data-ttu-id="0b8dd-188">从对象的 SACL 中移除所有与指定审核规则完全匹配的审核规则。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-188">Removes all audit rules that exactly match the specified audit rule from the SACL of an object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetAccessRule">
      <MemberSignature Language="C#" Value="public void ResetAccessRule (System.DirectoryServices.ActiveDirectoryAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAccessRule(class System.DirectoryServices.ActiveDirectoryAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAccessRule (rule As ActiveDirectoryAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAccessRule(System::DirectoryServices::ActiveDirectoryAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.ResetAccessRule : System.DirectoryServices.ActiveDirectoryAccessRule -&gt; unit" Usage="activeDirectorySecurity.ResetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.DirectoryServices.ActiveDirectoryAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="0b8dd-189">此操作应用于的 <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-189">The <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule" /> object to which this operation applies.</span></span></param>
        <summary><span data-ttu-id="0b8dd-190">在对象的 DACL 中搜索所有所包含的安全标识符 (SID) 与 <paramref name="rule" /> 对象中指定的 SID 相匹配的访问规则，并将所有这些访问规则替换为 <paramref name="rule" /> 对象中包含的访问规则。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-190">Searches an object's DACL for all access rules that contain a security identifier (SID) that matches the SID specified in the <paramref name="rule" /> object, and replaces all of those access rules with the access rules that are contained in the <paramref name="rule" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b8dd-191">当 <xref:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule%2A> 用于在对象的 DACL 中用特定的 SID 替换所有访问规则时，将替换 Allow 和 Deny 类型的规则。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-191">When <xref:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule%2A> is used to replace all access rules with a particular SID in an object's DACL, both Allow- and Deny- type rules are replaced.</span></span>  <span data-ttu-id="0b8dd-192">若要仅替换 "允许" 规则而不影响拒绝规则，或替换 "拒绝规则" 而不影响允许规则，请改用 <xref:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-192">To replace only Allow rules without affecting Deny rules, or to replace Deny rules without affecting Allow rules, use <xref:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule%2A> instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAccessRule">
      <MemberSignature Language="C#" Value="public void SetAccessRule (System.DirectoryServices.ActiveDirectoryAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessRule(class System.DirectoryServices.ActiveDirectoryAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAccessRule (rule As ActiveDirectoryAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessRule(System::DirectoryServices::ActiveDirectoryAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.SetAccessRule : System.DirectoryServices.ActiveDirectoryAccessRule -&gt; unit" Usage="activeDirectorySecurity.SetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.DirectoryServices.ActiveDirectoryAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="0b8dd-193">此操作应用于的 <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-193">The <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule" /> object to which this operation applies.</span></span></param>
        <summary><span data-ttu-id="0b8dd-194">在对象的 DACL 中搜索所有所包含的安全标识符 (SID) 与 <paramref name="rule" /> 对象中指定的 SID 相匹配且访问控制类型（“允许”或“拒绝”）与 <paramref name="rule" /> 对象中指定的类型相匹配的访问规则，并将所有这些访问规则替换为 <paramref name="rule" /> 对象中包含的访问规则。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-194">Searches an object's DACL for all access rules that contain a security identifier (SID) that matches the SID specified in the <paramref name="rule" /> object, and an access control type (Allow or Deny) that matches the type specified in the <paramref name="rule" /> object, and replaces all of those access rules with the access rules that are contained in the <paramref name="rule" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b8dd-195">当 <xref:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule%2A> 用于替换所有与特定 SID 和访问控制类型相匹配的访问规则 (在对象的 DACL 中允许或拒绝) 时，该 DACL 中的所有规则以及与该对象中包含的 sid 和访问控制类型相匹配的 sid 和类型 `rule` 都将被替换。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-195">When <xref:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule%2A> is used to replace all access rules that match a particular SID and access control type (Allow or Deny) in an object's DACL, all rules in that DACL with an  SID and type that match the SID and access control type contained in the `rule` object are replaced.</span></span>  <span data-ttu-id="0b8dd-196">使用此方法，开发人员可以将该 SID 的任何允许规则替换为该对象，而不会影响现有的拒绝规则，或替换该对象上该 SID 的所有拒绝规则，而不会影响现有允许规则。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-196">Using this method, the developer can replace any Allow rules for that SID on that object without affecting existing Deny rules, or replace all Deny rules for that SID on that object without affecting existing Allow rules.</span></span>  <span data-ttu-id="0b8dd-197">若要将该对象的所有规则替换为与指定的 SID 相关，而不考虑类型，请改用 <xref:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-197">To replace all rules for that object pertaining to the specified SID, regardless of type, use <xref:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule%2A> instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAuditRule">
      <MemberSignature Language="C#" Value="public void SetAuditRule (System.DirectoryServices.ActiveDirectoryAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAuditRule(class System.DirectoryServices.ActiveDirectoryAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAuditRule (rule As ActiveDirectoryAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAuditRule(System::DirectoryServices::ActiveDirectoryAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.SetAuditRule : System.DirectoryServices.ActiveDirectoryAuditRule -&gt; unit" Usage="activeDirectorySecurity.SetAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.DirectoryServices.ActiveDirectoryAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="0b8dd-198">此操作应用于的 <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-198">The <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule" /> object to which this operation applies.</span></span></param>
        <summary><span data-ttu-id="0b8dd-199">将所有安全标识符与对象的 SACL 中指定审核规则相同的审核规则替换为指定的审核规则。</span><span class="sxs-lookup"><span data-stu-id="0b8dd-199">Replaces all audit rules that contain the same security identifier as the specified audit rule in the SACL of an object with the specified audit rule.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
