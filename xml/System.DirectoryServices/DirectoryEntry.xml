<Type Name="DirectoryEntry" FullName="System.DirectoryServices.DirectoryEntry">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fbc171043147f690d14157b3bd139346f4532eb3" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83959549" /></Metadata><TypeSignature Language="C#" Value="public class DirectoryEntry : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DirectoryEntry extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.DirectoryEntry" />
  <TypeSignature Language="VB.NET" Value="Public Class DirectoryEntry&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class DirectoryEntry : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type DirectoryEntry = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.DirectoryServices.Design.DirectoryEntryConverter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.DirectoryServices.DSDescription("DirectoryEntryDesc")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.DirectoryServices.DirectoryEntryConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="770e7-101"><see cref="T:System.DirectoryServices.DirectoryEntry" /> 类可封装 Active Directory 域服务层次结构中的节点或对象。</span><span class="sxs-lookup"><span data-stu-id="770e7-101">The <see cref="T:System.DirectoryServices.DirectoryEntry" /> class encapsulates a node or object in the Active Directory Domain Services hierarchy.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="770e7-102">使用此类可以绑定到对象，也可以读取和更新属性。</span><span class="sxs-lookup"><span data-stu-id="770e7-102">Use this class for binding to objects, or reading and updating attributes.</span></span> <span data-ttu-id="770e7-103"><xref:System.DirectoryServices.DirectoryEntry>，以及帮助器类，可提供对生命周期管理和导航方法的支持。</span><span class="sxs-lookup"><span data-stu-id="770e7-103"><xref:System.DirectoryServices.DirectoryEntry>, along with helper classes, provides support for life-cycle management and navigation methods.</span></span> <span data-ttu-id="770e7-104">其中包括创建、删除、重命名、移动子节点和枚举子级。</span><span class="sxs-lookup"><span data-stu-id="770e7-104">These include creating, deleting, renaming, moving a child node, and enumerating children.</span></span> <span data-ttu-id="770e7-105">修改节点后，必须提交更改，以便将其保存到树。</span><span class="sxs-lookup"><span data-stu-id="770e7-105">After you modify a node, you must commit your changes in order for them to be saved to the tree.</span></span> <span data-ttu-id="770e7-106">有关详细信息，请参阅 <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="770e7-106">For more information, see the <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> property.</span></span>  
  
 <span data-ttu-id="770e7-107"><xref:System.DirectoryServices.DirectoryEntry> 可用于访问架构条目中的常规条目和某些（但不是全部）信息。</span><span class="sxs-lookup"><span data-stu-id="770e7-107"><xref:System.DirectoryServices.DirectoryEntry> can be used to access regular entries and some, but not all, information from schema entries.</span></span>  
  
 <span data-ttu-id="770e7-108">Active Directory 域服务层次结构最多包含数千个节点。</span><span class="sxs-lookup"><span data-stu-id="770e7-108">The Active Directory Domain Services hierarchy contains up to several thousand nodes.</span></span> <span data-ttu-id="770e7-109">每个节点都表示一个对象，如网络打印机或域中的用户。</span><span class="sxs-lookup"><span data-stu-id="770e7-109">Each node represents an object, such as a network printer or a user in a domain.</span></span> <span data-ttu-id="770e7-110">公司网络会不断变化，因为雇用了新员工并添加了网络打印机和计算机等对象。</span><span class="sxs-lookup"><span data-stu-id="770e7-110">Corporate networks constantly change as new employees are hired and objects such as network printers and computers are added.</span></span> <span data-ttu-id="770e7-111">Active Directory 服务接口（ADSI）技术提供了以编程方式将这些对象添加到目录树的方式。</span><span class="sxs-lookup"><span data-stu-id="770e7-111">Active Directory Service Interfaces (ADSI) technology provides ways to programmatically add these objects to the directory tree.</span></span>  
  
 <span data-ttu-id="770e7-112">若要在层次结构中创建目录条目，请使用 <xref:System.DirectoryServices.DirectoryEntry.Children%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="770e7-112">To create a directory entry in the hierarchy, use the <xref:System.DirectoryServices.DirectoryEntry.Children%2A> property.</span></span> <span data-ttu-id="770e7-113"><xref:System.DirectoryServices.DirectoryEntry.Children%2A> 属性是一个提供 <xref:System.DirectoryServices.DirectoryEntries.Add%2A> 方法的集合，通过该方法，可将节点直接添加到当前绑定到的父节点下的集合中。</span><span class="sxs-lookup"><span data-stu-id="770e7-113">The <xref:System.DirectoryServices.DirectoryEntry.Children%2A> property is a collection that provides an <xref:System.DirectoryServices.DirectoryEntries.Add%2A> method, through which you add a node to the collection directly below the parent node that you are currently bound to.</span></span> <span data-ttu-id="770e7-114">向集合添加节点时，必须指定新节点的名称，以及要与节点关联的架构模板的名称。</span><span class="sxs-lookup"><span data-stu-id="770e7-114">When adding a node to the collection, you must specify a name for the new node and the name of a schema template that you want to associate with the node.</span></span> <span data-ttu-id="770e7-115">例如，你可能希望使用标题为 "Computer" 的架构将新计算机添加到层次结构中。</span><span class="sxs-lookup"><span data-stu-id="770e7-115">For example, you might want to use a schema titled "Computer" to add new computers to the hierarchy.</span></span>  
  
 <span data-ttu-id="770e7-116">此类还包含属性缓存，这对于优化网络流量很有用。</span><span class="sxs-lookup"><span data-stu-id="770e7-116">This class also contains attribute caching, which can be useful for optimizing network traffic.</span></span> <span data-ttu-id="770e7-117">若要使用属性缓存，请参阅 <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="770e7-117">To use attribute caching, see the <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A> property.</span></span>  
  
 <span data-ttu-id="770e7-118">与 <xref:System.DirectoryServices.DirectoryEntry> 组件关联的类可与任何 Active Directory 域服务服务提供程序一起使用。</span><span class="sxs-lookup"><span data-stu-id="770e7-118">The classes associated with the <xref:System.DirectoryServices.DirectoryEntry> component can be used with any of the Active Directory Domain Services service providers.</span></span> <span data-ttu-id="770e7-119">某些当前提供程序是 Internet Information Services （IIS）、轻型目录访问协议（LDAP）、Novell NetWare 目录服务（NDS）和 WinNT。</span><span class="sxs-lookup"><span data-stu-id="770e7-119">Some of the current providers are Internet Information Services (IIS), Lightweight Directory Access Protocol (LDAP), Novell NetWare Directory Service (NDS), and WinNT.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="770e7-120">假设您在使用此类之前，您大致了解 Active Directory 域服务。</span><span class="sxs-lookup"><span data-stu-id="770e7-120">It is assumed that you have a general understanding of Active Directory Domain Services before using this class.</span></span> <span data-ttu-id="770e7-121">有关详细信息，请参阅 <xref:System.DirectoryServices?displayProperty=nameWithType> 命名空间概述。</span><span class="sxs-lookup"><span data-stu-id="770e7-121">For more information, see the <xref:System.DirectoryServices?displayProperty=nameWithType> namespace overview.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="770e7-122">初始化 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="770e7-122">Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectoryEntry" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryEntry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntry.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryEntry();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="770e7-123">初始化 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="770e7-123">Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectoryEntry" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryEntry (object adsObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object adsObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntry.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (adsObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryEntry(System::Object ^ adsObject);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.DirectoryEntry : obj -&gt; System.DirectoryServices.DirectoryEntry" Usage="new System.DirectoryServices.DirectoryEntry adsObject" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="adsObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="adsObject"><span data-ttu-id="770e7-124">要绑定到的本机 Active Directory 域服务对象的名称。</span><span class="sxs-lookup"><span data-stu-id="770e7-124">The name of the native Active Directory Domain Services object to bind to.</span></span></param>
        <summary><span data-ttu-id="770e7-125">初始化 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 类的新实例，该类可绑定到指定的本机 Active Directory 域服务对象。</span><span class="sxs-lookup"><span data-stu-id="770e7-125">Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectoryEntry" /> class that binds to the specified native Active Directory Domain Services object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="770e7-126">此构造函数使程序可以通过本机 API 使用实现 IADs 接口的本机 Active Directory 域服务对象的方法和 <xref:System.DirectoryServices.DirectoryEntry> 属性。</span><span class="sxs-lookup"><span data-stu-id="770e7-126">This constructor enables a program to use the methods and properties of the <xref:System.DirectoryServices.DirectoryEntry> class on a native Active Directory Domain Services object that implements the IADs interface through a native API.</span></span> <span data-ttu-id="770e7-127">有关 IADs 接口的详细信息，请参阅[IADs](/windows/win32/api/iads/nn-iads-iads)一文。</span><span class="sxs-lookup"><span data-stu-id="770e7-127">For more information about the IADs interface, see the [IADs](/windows/win32/api/iads/nn-iads-iads) article.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryEntry (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryEntry(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.DirectoryEntry : string -&gt; System.DirectoryServices.DirectoryEntry" Usage="new System.DirectoryServices.DirectoryEntry path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="770e7-128">一个路径，在此处将 <see cref="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String)" /> 绑定到目录。</span><span class="sxs-lookup"><span data-stu-id="770e7-128">The path at which to bind the <see cref="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String)" /> to the directory.</span></span> <span data-ttu-id="770e7-129"><see cref="P:System.DirectoryServices.DirectoryEntry.Path" /> 属性初始化为该值。</span><span class="sxs-lookup"><span data-stu-id="770e7-129">The <see cref="P:System.DirectoryServices.DirectoryEntry.Path" /> property is initialized to this value.</span></span></param>
        <summary><span data-ttu-id="770e7-130">初始化 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 类的新实例，该类将此实例绑定到位于指定路径的 Active Directory 域服务中的节点。</span><span class="sxs-lookup"><span data-stu-id="770e7-130">Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectoryEntry" /> class that binds this instance to the node in Active Directory Domain Services located at the specified path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="770e7-131">下面的示例将 <xref:System.DirectoryServices.DirectoryEntry> 对象绑定到指定路径处的目录项，并显示节点的 <xref:System.DirectoryServices.DirectoryEntry.Children%2A> 属性指定的每个子项的 <xref:System.DirectoryServices.DirectoryEntry.Path%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="770e7-131">The following example binds a <xref:System.DirectoryServices.DirectoryEntry> object to the directory entry at the specified path, and displays the <xref:System.DirectoryServices.DirectoryEntry.Path%2A> property of each child entry that is specified by the node's <xref:System.DirectoryServices.DirectoryEntry.Children%2A> property.</span></span>  
  
```vb  
Public Class PrintChildren  
  
    'Entry point which delegates to C-style main Private Function.  
    Public Overloads Shared Sub Main()  
        Main(System.Environment.GetCommandLineArgs())  
    End Sub  
  
    Overloads Public Shared Sub Main(args() As String)  
        Dim objDE As DirectoryEntry  
        Dim strPath As String = "LDAP://DC=onecity,DC=corp,DC=fabrikam,DC=com"  
        If args.Length > 0 Then  
            strPath = args(1)  
        End If   
        ' Create a new DirectoryEntry with the given path.  
        objDE = New DirectoryEntry(strPath)  
  
        Dim objChildDE As DirectoryEntry  
        For Each objChildDE In  objDE.Children  
            Console.WriteLine(objChildDE.Path)  
        Next objChildDE  
    End Sub 'Main  
End Class 'PrintChildren  
```  
  
```csharp  
public class PrintChildren{  
   public static void Main(String[] args)  
   {  
      DirectoryEntry objDE;  
      String strPath="LDAP://DC=onecity,DC=corp,DC=fabrikam,DC=com";  
      if(args.Length>0)strPath=args[1];  
  
      // Create a new DirectoryEntry with the given path.  
      objDE=new DirectoryEntry(strPath);  
  
      foreach(DirectoryEntry objChildDE in objDE.Children)  
        Console.WriteLine(objChildDE.Path);  
   }  
 }  
```  
  
```cpp  
int main()  
{  
    String^ args[] = Environment::GetCommandLineArgs();  
    DirectoryEntry^ objDE;  
    String^ strPath = "LDAP://DC=onecity,DC=corp,DC=fabrikam,DC=com";  
    if(args->Length>1)  
    {  
        strPath=args[1];  
    }  
  
    // Create a new DirectoryEntry with the given path.  
    objDE = gcnew DirectoryEntry(strPath);  
  
    System::Collections::IEnumerator^ enum0 = objDE->Children->GetEnumerator();  
    while (enum0->MoveNext())  
    {  
        DirectoryEntry^ objChildDE = safe_cast<DirectoryEntry^>(enum0->Current);  
        Console::WriteLine(objChildDE->Path);  
    }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryEntry (string path, string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, username As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryEntry(System::String ^ path, System::String ^ username, System::String ^ password);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.DirectoryEntry : string * string * string -&gt; System.DirectoryServices.DirectoryEntry" Usage="new System.DirectoryServices.DirectoryEntry (path, username, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="770e7-132">此 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 的路径。</span><span class="sxs-lookup"><span data-stu-id="770e7-132">The path of this <see cref="T:System.DirectoryServices.DirectoryEntry" />.</span></span> <span data-ttu-id="770e7-133"><see cref="P:System.DirectoryServices.DirectoryEntry.Path" /> 属性初始化为该值。</span><span class="sxs-lookup"><span data-stu-id="770e7-133">The <see cref="P:System.DirectoryServices.DirectoryEntry.Path" /> property is initialized to this value.</span></span></param>
        <param name="username"><span data-ttu-id="770e7-134">在对客户端进行身份验证时要使用的用户名。</span><span class="sxs-lookup"><span data-stu-id="770e7-134">The user name to use when authenticating the client.</span></span> <span data-ttu-id="770e7-135"><see cref="P:System.DirectoryServices.DirectoryEntry.Username" /> 属性初始化为该值。</span><span class="sxs-lookup"><span data-stu-id="770e7-135">The <see cref="P:System.DirectoryServices.DirectoryEntry.Username" /> property is initialized to this value.</span></span></param>
        <param name="password"><span data-ttu-id="770e7-136">在对客户端进行身份验证时使用的密码。</span><span class="sxs-lookup"><span data-stu-id="770e7-136">The password to use when authenticating the client.</span></span> <span data-ttu-id="770e7-137"><see cref="P:System.DirectoryServices.DirectoryEntry.Password" /> 属性初始化为该值。</span><span class="sxs-lookup"><span data-stu-id="770e7-137">The <see cref="P:System.DirectoryServices.DirectoryEntry.Password" /> property is initialized to this value.</span></span></param>
        <summary><span data-ttu-id="770e7-138">初始化 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="770e7-138">Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectoryEntry" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryEntry (string path, string username, string password, System.DirectoryServices.AuthenticationTypes authenticationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, string username, string password, valuetype System.DirectoryServices.AuthenticationTypes authenticationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String,System.DirectoryServices.AuthenticationTypes)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, username As String, password As String, authenticationType As AuthenticationTypes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryEntry(System::String ^ path, System::String ^ username, System::String ^ password, System::DirectoryServices::AuthenticationTypes authenticationType);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.DirectoryEntry : string * string * string * System.DirectoryServices.AuthenticationTypes -&gt; System.DirectoryServices.DirectoryEntry" Usage="new System.DirectoryServices.DirectoryEntry (path, username, password, authenticationType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="authenticationType" Type="System.DirectoryServices.AuthenticationTypes" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="770e7-139">此 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 的路径。</span><span class="sxs-lookup"><span data-stu-id="770e7-139">The path of this <see cref="T:System.DirectoryServices.DirectoryEntry" />.</span></span> <span data-ttu-id="770e7-140"><see cref="P:System.DirectoryServices.DirectoryEntry.Path" /> 属性初始化为该值。</span><span class="sxs-lookup"><span data-stu-id="770e7-140">The <see cref="P:System.DirectoryServices.DirectoryEntry.Path" /> property is initialized to this value.</span></span></param>
        <param name="username"><span data-ttu-id="770e7-141">在对客户端进行身份验证时要使用的用户名。</span><span class="sxs-lookup"><span data-stu-id="770e7-141">The user name to use when authenticating the client.</span></span> <span data-ttu-id="770e7-142"><see cref="P:System.DirectoryServices.DirectoryEntry.Username" /> 属性初始化为该值。</span><span class="sxs-lookup"><span data-stu-id="770e7-142">The <see cref="P:System.DirectoryServices.DirectoryEntry.Username" /> property is initialized to this value.</span></span></param>
        <param name="password"><span data-ttu-id="770e7-143">在对客户端进行身份验证时使用的密码。</span><span class="sxs-lookup"><span data-stu-id="770e7-143">The password to use when authenticating the client.</span></span> <span data-ttu-id="770e7-144"><see cref="P:System.DirectoryServices.DirectoryEntry.Password" /> 属性初始化为该值。</span><span class="sxs-lookup"><span data-stu-id="770e7-144">The <see cref="P:System.DirectoryServices.DirectoryEntry.Password" /> property is initialized to this value.</span></span></param>
        <param name="authenticationType"><span data-ttu-id="770e7-145"><see cref="T:System.DirectoryServices.AuthenticationTypes" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="770e7-145">One of the <see cref="T:System.DirectoryServices.AuthenticationTypes" /> values.</span></span> <span data-ttu-id="770e7-146"><see cref="P:System.DirectoryServices.DirectoryEntry.AuthenticationType" /> 属性初始化为该值。</span><span class="sxs-lookup"><span data-stu-id="770e7-146">The <see cref="P:System.DirectoryServices.DirectoryEntry.AuthenticationType" /> property is initialized to this value.</span></span></param>
        <summary><span data-ttu-id="770e7-147">初始化 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="770e7-147">Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectoryEntry" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.DirectoryServices.DirectoryEntry.Path" />
        <altmember cref="P:System.DirectoryServices.DirectoryEntry.Username" />
        <altmember cref="P:System.DirectoryServices.DirectoryEntry.Password" />
        <altmember cref="T:System.DirectoryServices.AuthenticationTypes" />
        <altmember cref="P:System.DirectoryServices.DirectoryEntry.AuthenticationType" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.AuthenticationTypes AuthenticationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.AuthenticationTypes AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectoryEntry.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationType As AuthenticationTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::AuthenticationTypes AuthenticationType { System::DirectoryServices::AuthenticationTypes get(); void set(System::DirectoryServices::AuthenticationTypes value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationType : System.DirectoryServices.AuthenticationTypes with get, set" Usage="System.DirectoryServices.DirectoryEntry.AuthenticationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.DirectoryServices.DSDescription("DSAuthenticationType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AuthenticationTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="770e7-148">获取或设置要使用的身份验证的类型。</span><span class="sxs-lookup"><span data-stu-id="770e7-148">Gets or sets the type of authentication to use.</span></span></summary>
        <value><span data-ttu-id="770e7-149"><see cref="T:System.DirectoryServices.AuthenticationTypes" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="770e7-149">One of the <see cref="T:System.DirectoryServices.AuthenticationTypes" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="770e7-150">在 [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]之前，默认值为 "<xref:System.DirectoryServices.AuthenticationTypes.None>"。</span><span class="sxs-lookup"><span data-stu-id="770e7-150">Prior to [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], the default value is <xref:System.DirectoryServices.AuthenticationTypes.None>.</span></span> <span data-ttu-id="770e7-151">从 [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] 开始，默认值为 <xref:System.DirectoryServices.AuthenticationTypes.Secure>。</span><span class="sxs-lookup"><span data-stu-id="770e7-151">Beginning with [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], the default value is <xref:System.DirectoryServices.AuthenticationTypes.Secure>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DirectoryServices.AuthenticationTypes" />
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DirectoryEntries Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.DirectoryEntries Children" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectoryEntry.Children" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Children As DirectoryEntries" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::DirectoryEntries ^ Children { System::DirectoryServices::DirectoryEntries ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Children : System.DirectoryServices.DirectoryEntries" Usage="System.DirectoryServices.DirectoryEntry.Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.DirectoryServices.DSDescription("DSChildren")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectoryEntries</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="770e7-152">获取 Active Directory 域服务层次结构中此节点的子项。</span><span class="sxs-lookup"><span data-stu-id="770e7-152">Gets the child entries of this node in the Active Directory Domain Services hierarchy.</span></span></summary>
        <value><span data-ttu-id="770e7-153">一个 <see cref="T:System.DirectoryServices.DirectoryEntries" /> 对象，其中包含 Active Directory 域服务层次结构中此节点的子项。</span><span class="sxs-lookup"><span data-stu-id="770e7-153">A <see cref="T:System.DirectoryServices.DirectoryEntries" /> object containing the child entries of this node in the Active Directory Domain Services hierarchy.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="770e7-154">子条目只是此节点的直接子级。</span><span class="sxs-lookup"><span data-stu-id="770e7-154">The child entries are only the immediate children of this node.</span></span>  
  
 <span data-ttu-id="770e7-155">使用此属性可在层次结构中查找、检索或创建目录条目。</span><span class="sxs-lookup"><span data-stu-id="770e7-155">Use this property to find, retrieve, or create a directory entry in the hierarchy.</span></span> <span data-ttu-id="770e7-156">此属性是一个集合，它提供了一个 <xref:System.DirectoryServices.DirectoryEntries.Add%2A> 方法，通过该方法，你可以将节点直接添加到当前绑定到的父节点下的集合中。</span><span class="sxs-lookup"><span data-stu-id="770e7-156">This property is a collection that, along with the usual iteration capabilities, provides an <xref:System.DirectoryServices.DirectoryEntries.Add%2A> method through which you add a node to the collection directly below the parent node that you are currently bound to.</span></span> <span data-ttu-id="770e7-157">向集合添加节点时，必须指定新节点的名称，以及要与节点关联的架构模板的名称。</span><span class="sxs-lookup"><span data-stu-id="770e7-157">When adding a node to the collection, you must specify a name for the new node and the name of a schema template that you want to associate with the node.</span></span> <span data-ttu-id="770e7-158">例如，你可能希望使用标题为 "Computer" 的架构将新计算机添加到层次结构中。</span><span class="sxs-lookup"><span data-stu-id="770e7-158">For example, you might want to use a schema titled "Computer" to add new computers to the hierarchy.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="770e7-159">默认情况下，会在本地将更改保存到缓存中。</span><span class="sxs-lookup"><span data-stu-id="770e7-159">By default, changes are made locally to a cache.</span></span> <span data-ttu-id="770e7-160">修改或添加节点后，必须调用 <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> 方法来提交更改，以便将更改保存到树。</span><span class="sxs-lookup"><span data-stu-id="770e7-160">After you modify or add a node, you must call the <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> method to commit your changes in order for them to be saved to the tree.</span></span> <span data-ttu-id="770e7-161">如果在调用 <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A>之前调用 <xref:System.DirectoryServices.DirectoryEntry.RefreshCache>，则对属性缓存的任何未提交的更改都将丢失。</span><span class="sxs-lookup"><span data-stu-id="770e7-161">If you call <xref:System.DirectoryServices.DirectoryEntry.RefreshCache> before calling <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A>, any uncommitted changes to the property cache will be lost.</span></span> <span data-ttu-id="770e7-162">有关详细信息，请参阅 <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> 和 <xref:System.DirectoryServices.DirectoryEntry.RefreshCache> 方法以及 <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="770e7-162">For more information, see the <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> and <xref:System.DirectoryServices.DirectoryEntry.RefreshCache> methods, and the <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DirectoryServices.DirectoryEntries" />
        <altmember cref="M:System.DirectoryServices.DirectoryEntries.Add(System.String,System.String)" />
        <altmember cref="M:System.DirectoryServices.DirectoryEntry.CommitChanges" />
        <altmember cref="M:System.DirectoryServices.DirectoryEntry.RefreshCache" />
        <altmember cref="P:System.DirectoryServices.DirectoryEntry.UsePropertyCache" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntry.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="directoryEntry.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="770e7-163">关闭 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 对象并释放与此组件关联的任何系统资源。</span><span class="sxs-lookup"><span data-stu-id="770e7-163">Closes the <see cref="T:System.DirectoryServices.DirectoryEntry" /> object and releases any system resources that are associated with this component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="770e7-164">调用此方法以释放非托管系统资源，而无需等待垃圾回收。</span><span class="sxs-lookup"><span data-stu-id="770e7-164">Call this method to release unmanaged system resources, without waiting for garbage collection.</span></span>  
  
 <span data-ttu-id="770e7-165">调用 <xref:System.DirectoryServices.DirectoryEntry.Close%2A>后，对 <xref:System.DirectoryServices.DirectoryEntry> 的任何操作都可能引发异常。</span><span class="sxs-lookup"><span data-stu-id="770e7-165">Following a call to <xref:System.DirectoryServices.DirectoryEntry.Close%2A>, any operations on the <xref:System.DirectoryServices.DirectoryEntry> might raise exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitChanges">
      <MemberSignature Language="C#" Value="public void CommitChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CommitChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntry.CommitChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub CommitChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CommitChanges();" />
      <MemberSignature Language="F#" Value="member this.CommitChanges : unit -&gt; unit" Usage="directoryEntry.CommitChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="770e7-166">将目录项所作更改保存到基础目录存储中。</span><span class="sxs-lookup"><span data-stu-id="770e7-166">Saves changes that are made to a directory entry to the underlying directory store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="770e7-167">默认情况下，对属性所做的更改将在本地对缓存进行，并且在第一次读取后缓存属性值。</span><span class="sxs-lookup"><span data-stu-id="770e7-167">By default, changes to properties are made locally to a cache, and property values to be read are cached after the first read.</span></span> <span data-ttu-id="770e7-168">有关详细信息，请参阅 <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A>。</span><span class="sxs-lookup"><span data-stu-id="770e7-168">For more information, see <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A>.</span></span>  
  
 <span data-ttu-id="770e7-169">对缓存所做的更改包括对属性的更改，以及对 <xref:System.DirectoryServices.DirectoryEntries.Add%2A> 的调用（如果这是新创建的条目）。</span><span class="sxs-lookup"><span data-stu-id="770e7-169">Changes made to the cache include changes to the properties as well as calls to <xref:System.DirectoryServices.DirectoryEntries.Add%2A> (if this is the newly created entry).</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="770e7-170">如果在调用 <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A>之前调用 <xref:System.DirectoryServices.DirectoryEntry.RefreshCache%2A>，则对属性缓存的任何未提交的更改都将丢失。</span><span class="sxs-lookup"><span data-stu-id="770e7-170">If you call <xref:System.DirectoryServices.DirectoryEntry.RefreshCache%2A> before calling <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A>, any uncommitted changes to the property cache will be lost.</span></span>  
  
## <a name="security"></a><span data-ttu-id="770e7-171">安全性</span><span class="sxs-lookup"><span data-stu-id="770e7-171">Security</span></span>  
  
-   <span data-ttu-id="770e7-172">使用 <xref:System.DirectoryServices.DirectoryServicesPermission> 类来读取、写入、删除、更改和添加到 Active Directory 域服务层次结构。</span><span class="sxs-lookup"><span data-stu-id="770e7-172">Use the <xref:System.DirectoryServices.DirectoryServicesPermission> class for reading, writing, deleting, changing, and adding to the Active Directory Domain Services hierarchy.</span></span> <span data-ttu-id="770e7-173">关联的枚举：<xref:System.DirectoryServices.DirectoryServicesPermissionAccess>。</span><span class="sxs-lookup"><span data-stu-id="770e7-173">Associated enumeration: <xref:System.DirectoryServices.DirectoryServicesPermissionAccess>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DirectoryServices.DirectoryEntries.Add(System.String,System.String)" />
        <altmember cref="M:System.DirectoryServices.DirectoryEntries.Remove(System.DirectoryServices.DirectoryEntry)" />
        <altmember cref="M:System.DirectoryServices.DirectoryEntry.RefreshCache" />
        <altmember cref="P:System.DirectoryServices.DirectoryEntry.UsePropertyCache" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="770e7-174">创建此项的副本。</span><span class="sxs-lookup"><span data-stu-id="770e7-174">Creates a copy of this entry.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DirectoryEntry CopyTo (System.DirectoryServices.DirectoryEntry newParent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.DirectoryEntry CopyTo(class System.DirectoryServices.DirectoryEntry newParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (newParent As DirectoryEntry) As DirectoryEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::DirectoryEntry ^ CopyTo(System::DirectoryServices::DirectoryEntry ^ newParent);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.DirectoryServices.DirectoryEntry -&gt; System.DirectoryServices.DirectoryEntry" Usage="directoryEntry.CopyTo newParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectoryEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newParent" Type="System.DirectoryServices.DirectoryEntry" />
      </Parameters>
      <Docs>
        <param name="newParent"><span data-ttu-id="770e7-175"><see cref="T:System.DirectoryServices.DirectoryEntry" /> 对象的识别名，它将作为当前所建副本的父级。</span><span class="sxs-lookup"><span data-stu-id="770e7-175">The distinguished name of the <see cref="T:System.DirectoryServices.DirectoryEntry" /> object that will be the parent for the copy that is being created.</span></span></param>
        <summary><span data-ttu-id="770e7-176">创建此项的副本，并将其作为指定父级的子项。</span><span class="sxs-lookup"><span data-stu-id="770e7-176">Creates a copy of this entry as a child of the specified parent.</span></span></summary>
        <returns><span data-ttu-id="770e7-177"><see cref="T:System.DirectoryServices.DirectoryEntry" /> 对象，它将此项的副本作为新父级的子级。</span><span class="sxs-lookup"><span data-stu-id="770e7-177">A <see cref="T:System.DirectoryServices.DirectoryEntry" /> object that represents the copy of this entry as a child of the new parent.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="770e7-178">如果 `true`<xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A>，请对新的对象调用 <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> 以使副本永久化。</span><span class="sxs-lookup"><span data-stu-id="770e7-178">If <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A> is `true`, call <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> on the new object to make the copy permanent.</span></span>  
  
 <span data-ttu-id="770e7-179">轻型目录访问协议（LDAP）提供程序当前不支持 <xref:System.DirectoryServices.DirectoryEntry.CopyTo%28System.DirectoryServices.DirectoryEntry%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="770e7-179">The Lightweight Directory Access Protocol (LDAP) provider does not currently support the <xref:System.DirectoryServices.DirectoryEntry.CopyTo%28System.DirectoryServices.DirectoryEntry%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="770e7-180">指定的 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 不是容器。</span><span class="sxs-lookup"><span data-stu-id="770e7-180">The specified <see cref="T:System.DirectoryServices.DirectoryEntry" /> is not a container.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DirectoryEntry CopyTo (System.DirectoryServices.DirectoryEntry newParent, string newName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.DirectoryEntry CopyTo(class System.DirectoryServices.DirectoryEntry newParent, string newName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (newParent As DirectoryEntry, newName As String) As DirectoryEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::DirectoryEntry ^ CopyTo(System::DirectoryServices::DirectoryEntry ^ newParent, System::String ^ newName);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.DirectoryServices.DirectoryEntry * string -&gt; System.DirectoryServices.DirectoryEntry" Usage="directoryEntry.CopyTo (newParent, newName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectoryEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newParent" Type="System.DirectoryServices.DirectoryEntry" />
        <Parameter Name="newName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="newParent"><span data-ttu-id="770e7-181"><see cref="T:System.DirectoryServices.DirectoryEntry" /> 对象的识别名，该对象将作为当前所建副本的父级。</span><span class="sxs-lookup"><span data-stu-id="770e7-181">The DN of the <see cref="T:System.DirectoryServices.DirectoryEntry" /> object that will be the parent for the copy that is being created.</span></span></param>
        <param name="newName"><span data-ttu-id="770e7-182">此项的副本的名称。</span><span class="sxs-lookup"><span data-stu-id="770e7-182">The name of the copy of this entry.</span></span></param>
        <summary><span data-ttu-id="770e7-183">用指定的新名称创建 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 对象的副本，并将其作为指定父级 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 对象的子项。</span><span class="sxs-lookup"><span data-stu-id="770e7-183">Creates a copy of this <see cref="T:System.DirectoryServices.DirectoryEntry" /> object, as a child of the specified parent <see cref="T:System.DirectoryServices.DirectoryEntry" /> object, with the specified new name.</span></span></summary>
        <returns><span data-ttu-id="770e7-184">此项作为指定父级的子项的重命名的副本。</span><span class="sxs-lookup"><span data-stu-id="770e7-184">A renamed copy of this entry as a child of the specified parent.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="770e7-185">轻型目录访问协议（LDAP）提供程序当前不支持此方法。</span><span class="sxs-lookup"><span data-stu-id="770e7-185">The Lightweight Directory Access Protocol (LDAP) provider does not currently support this method.</span></span>  
  
 <span data-ttu-id="770e7-186">如果 `true`<xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A>，请对新的对象调用 <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> 以使副本永久化。</span><span class="sxs-lookup"><span data-stu-id="770e7-186">If <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A> is `true`, call <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> on the new object to make the copy permanent.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="770e7-187">指定的 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 对象不是容器。</span><span class="sxs-lookup"><span data-stu-id="770e7-187">The specified <see cref="T:System.DirectoryServices.DirectoryEntry" /> object is not a container.</span></span></exception>
        <altmember cref="P:System.DirectoryServices.DirectoryEntry.UsePropertyCache" />
        <altmember cref="M:System.DirectoryServices.DirectoryEntry.CommitChanges" />
      </Docs>
    </Member>
    <Member MemberName="DeleteTree">
      <MemberSignature Language="C#" Value="public void DeleteTree ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteTree() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntry.DeleteTree" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteTree ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteTree();" />
      <MemberSignature Language="F#" Value="member this.DeleteTree : unit -&gt; unit" Usage="directoryEntry.DeleteTree " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="770e7-188">从 Active Directory 域服务层次结构中删除此项及其整个子树。</span><span class="sxs-lookup"><span data-stu-id="770e7-188">Deletes this entry and its entire subtree from the Active Directory Domain Services hierarchy.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="770e7-189">在 Active Directory 服务接口（ADSI）系统提供的提供程序中，只有轻型目录访问协议（LDAP）当前支持此操作。</span><span class="sxs-lookup"><span data-stu-id="770e7-189">Of the Active Directory Service Interfaces (ADSI) system-supplied providers, only the Lightweight Directory Access Protocol (LDAP) currently supports this operation.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="770e7-190">将从 Active Directory 域服务层次结构中删除条目及其整个子树。</span><span class="sxs-lookup"><span data-stu-id="770e7-190">The entry and its entire subtree are deleted from the Active Directory Domain Services hierarchy.</span></span>  
  
## <a name="security"></a><span data-ttu-id="770e7-191">安全性</span><span class="sxs-lookup"><span data-stu-id="770e7-191">Security</span></span>  
  
-   <span data-ttu-id="770e7-192">使用 <xref:System.DirectoryServices.DirectoryServicesPermission> 从 Active Directory 域服务层次结构中删除条目。</span><span class="sxs-lookup"><span data-stu-id="770e7-192">Use <xref:System.DirectoryServices.DirectoryServicesPermission> for deleting entries from the Active Directory Domain Services hierarchy.</span></span> <span data-ttu-id="770e7-193">关联的枚举：<xref:System.DirectoryServices.DirectoryServicesPermissionAccess?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="770e7-193">Associated enumeration: <xref:System.DirectoryServices.DirectoryServicesPermissionAccess?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="770e7-194">指定的 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 不是容器。</span><span class="sxs-lookup"><span data-stu-id="770e7-194">The specified <see cref="T:System.DirectoryServices.DirectoryEntry" /> is not a container.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntry.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="directoryEntry.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="770e7-195">如果为 <see langword="true" />，则托管及非托管资源都释放；如果为 <see langword="false" />，则仅释放非托管资源。</span><span class="sxs-lookup"><span data-stu-id="770e7-195"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="770e7-196">释放 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 使用的资源（内存除外）。</span><span class="sxs-lookup"><span data-stu-id="770e7-196">Disposes of the resources (other than memory) that are used by the <see cref="T:System.DirectoryServices.DirectoryEntry" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="770e7-197">此方法由 public <xref:System.ComponentModel.Component.Dispose%2A> 方法和 <xref:System.Object.Finalize%2A> 方法调用。</span><span class="sxs-lookup"><span data-stu-id="770e7-197">This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="770e7-198"><xref:System.ComponentModel.Component.Dispose%2A> 调用受保护的 <xref:System.DirectoryServices.DirectoryEntry.Dispose%2A> 方法，并将 `disposing` 参数设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="770e7-198"><xref:System.ComponentModel.Component.Dispose%2A> invokes the protected <xref:System.DirectoryServices.DirectoryEntry.Dispose%2A> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="770e7-199"><xref:System.Object.Finalize%2A> 调用 `disposing` 设置为 `false`的 <xref:System.ComponentModel.Component.Dispose%2A>。</span><span class="sxs-lookup"><span data-stu-id="770e7-199"><xref:System.Object.Finalize%2A> invokes <xref:System.ComponentModel.Component.Dispose%2A> with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="770e7-200">当 `true``disposing` 参数时，此方法将释放此 <xref:System.DirectoryServices.DirectoryEntry> 对象引用的任何托管对象所持有的所有资源。</span><span class="sxs-lookup"><span data-stu-id="770e7-200">When the `disposing` parameter is `true`, this method releases all resources that are held by any managed objects that this <xref:System.DirectoryServices.DirectoryEntry> object references.</span></span> <span data-ttu-id="770e7-201">此方法将调用每个被引用对象的 <xref:System.ComponentModel.Component.Dispose%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="770e7-201">This method invokes the <xref:System.ComponentModel.Component.Dispose%2A> method of each referenced object.</span></span>  
  
 <span data-ttu-id="770e7-202">有关 <xref:System.ComponentModel.Component.Dispose%2A> 和 <xref:System.Object.Finalize%2A> 方法的详细信息，请参阅[重写 Finalize 方法](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="770e7-202">For more information about the <xref:System.ComponentModel.Component.Dispose%2A> and <xref:System.Object.Finalize%2A> methods, see [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="770e7-203">
            <see cref="M:System.ComponentModel.Component.Dispose" /> 可以由其他对象多次调用。</span><span class="sxs-lookup"><span data-stu-id="770e7-203">
            <see cref="M:System.ComponentModel.Component.Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="770e7-204">重写 <see cref="M:System.DirectoryServices.DirectoryEntry.Dispose(System.Boolean)" /> 时，请注意不要引用在以前调用 <see cref="M:System.ComponentModel.Component.Dispose" /> 时已释放的对象。</span><span class="sxs-lookup"><span data-stu-id="770e7-204">When overriding <see cref="M:System.DirectoryServices.DirectoryEntry.Dispose(System.Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see cref="M:System.ComponentModel.Component.Dispose" />.</span></span> <span data-ttu-id="770e7-205">有关如何实现 <see cref="M:System.ComponentModel.Component.Dispose" />的详细信息，请参阅[实现 Dispose 方法](/dotnet/standard/garbage-collection/implementing-dispose)。</span><span class="sxs-lookup"><span data-stu-id="770e7-205">For more information about how to implement <see cref="M:System.ComponentModel.Component.Dispose" />, see [Implementing a Dispose Method](/dotnet/standard/garbage-collection/implementing-dispose).</span></span></para></block>
        <altmember cref="M:System.ComponentModel.Component.Dispose" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static bool Exists (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntry.Exists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exists (path As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Exists(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member Exists : string -&gt; bool" Usage="System.DirectoryServices.DirectoryEntry.Exists path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="770e7-206">要验证的项路径。</span><span class="sxs-lookup"><span data-stu-id="770e7-206">The path of the entry to verify.</span></span></param>
        <summary><span data-ttu-id="770e7-207">确定指定路径是否表示目录服务实际项。</span><span class="sxs-lookup"><span data-stu-id="770e7-207">Determines if the specified path represents an actual entry in the directory service.</span></span></summary>
        <returns><span data-ttu-id="770e7-208">如果指定路径表示目录服务实际项，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="770e7-208"><see langword="true" /> if the specified path represents a valid entry in the directory service; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="770e7-209">下面的示例采用一个参数，并确定路径是否对应于有效的 <xref:System.DirectoryServices.DirectoryEntry>。</span><span class="sxs-lookup"><span data-stu-id="770e7-209">The following example takes one argument and determines whether the path corresponds to a valid <xref:System.DirectoryServices.DirectoryEntry>.</span></span>  
  
```vb  
Dim myADSPath As String = "LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com"  
' Determine whether the given path is correct for the DirectoryEntry.  
If DirectoryEntry.Exists(myADSPath) Then  
   Console.WriteLine("The path {0} is valid",myADSPath)  
Else  
   Console.WriteLine("The path {0} is invalid",myADSPath)  
End If  
```  
  
```csharp  
string myADSPath ="LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com";  
  
// Determine whether the given path is correct for the DirectoryEntry.  
if (DirectoryEntry.Exists(myADSPath))  
{  
    Console.WriteLine("The path {0} is valid",myADSPath);  
}  
    else  
{  
    Console.WriteLine("The path {0} is invalid",myADSPath);  
}  
```  
  
```cpp
String^ myADSPath = "LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com";  
// Determine whether the given path is correct for the DirectoryEntry.  
if (DirectoryEntry::Exists(myADSPath))   
{  
    Console::WriteLine("The path {0} is valid", myADSPath);  
}   
else   
{  
    Console::WriteLine("The path {0} is invalid", myADSPath);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Guid">
      <MemberSignature Language="C#" Value="public Guid Guid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Guid" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectoryEntry.Guid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Guid As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Guid { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.Guid : Guid" Usage="System.DirectoryServices.DirectoryEntry.Guid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.DirectoryServices.DSDescription("DSGuid")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="770e7-210">获取 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 的 GUID。</span><span class="sxs-lookup"><span data-stu-id="770e7-210">Gets the GUID of the <see cref="T:System.DirectoryServices.DirectoryEntry" />.</span></span></summary>
        <value><span data-ttu-id="770e7-211">一个 <see cref="T:System.Guid" /> 结构，表示 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 的 GUID。</span><span class="sxs-lookup"><span data-stu-id="770e7-211">A <see cref="T:System.Guid" /> structure that represents the GUID of the <see cref="T:System.DirectoryServices.DirectoryEntry" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="770e7-212">绑定到 Active Directory 域服务中的对象时，请使用 <xref:System.DirectoryServices.DirectoryEntry.NativeGuid%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="770e7-212">When binding to an object in Active Directory Domain Services, use the <xref:System.DirectoryServices.DirectoryEntry.NativeGuid%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="770e7-213">下面的示例演示 <xref:System.DirectoryServices.DirectoryEntry> 类的 <xref:System.DirectoryServices.DirectoryEntry.Guid%2A> 和 <xref:System.DirectoryServices.DirectoryEntry.NativeGuid%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="770e7-213">The following example demonstrates the <xref:System.DirectoryServices.DirectoryEntry.Guid%2A> and <xref:System.DirectoryServices.DirectoryEntry.NativeGuid%2A> properties of the <xref:System.DirectoryServices.DirectoryEntry> class.</span></span> <span data-ttu-id="770e7-214">此示例获取用户指定的 <xref:System.DirectoryServices.DirectoryEntry>，并显示其 <xref:System.DirectoryServices.DirectoryEntry.Guid%2A> 和 <xref:System.DirectoryServices.DirectoryEntry.NativeGuid%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="770e7-214">This example gets the user-specified <xref:System.DirectoryServices.DirectoryEntry> and displays its <xref:System.DirectoryServices.DirectoryEntry.Guid%2A> and <xref:System.DirectoryServices.DirectoryEntry.NativeGuid%2A> properties.</span></span>  
  
```vb  
Dim myADSPath As [String] = "LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com"  
Dim myDirectoryEntry As New DirectoryEntry(myADSPath)  
  
' Display the Guid and NativeGuid.  
Console.WriteLine("The GUID of the ADS object:" + myDirectoryEntry.Guid.ToString)  
Console.WriteLine("The Native GUID of the ADS" + "object:" + myDirectoryEntry.NativeGuid)  
```  
  
```csharp  
String myADSPath = "LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com";  
DirectoryEntry myDirectoryEntry=new DirectoryEntry(myADSPath);  
  
// Display the Guid and NativeGuid.  
Console.WriteLine("The GUID of the ADS object:"+  
                  myDirectoryEntry.Guid);  
Console.WriteLine("The Native GUID of the ADS"+  
                  "object:"+myDirectoryEntry.NativeGuid);  
```  
  
```cpp
String^ myADSPath = "LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com";  
DirectoryEntry^ myDirectoryEntry = gcnew DirectoryEntry(myADSPath);  
  
// Display the Guid and NativeGuid.  
Console::WriteLine("The GUID of the ADS object: {0}", myDirectoryEntry->Guid);  
Console::WriteLine("The Native GUID of the ADS object: {0}",  
                   myDirectoryEntry->NativeGuid);  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Guid" />
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (string methodName, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(string methodName, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntry.Invoke(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (methodName As String, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::String ^ methodName, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.Invoke : string * obj[] -&gt; obj" Usage="directoryEntry.Invoke (methodName, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="770e7-215">要调用的方法的名称。</span><span class="sxs-lookup"><span data-stu-id="770e7-215">The name of the method to invoke.</span></span></param>
        <param name="args"><span data-ttu-id="770e7-216"><see cref="T:System.Object" /> 对象类型的数组，它包含要调用的方法的自变量。</span><span class="sxs-lookup"><span data-stu-id="770e7-216">An array of type <see cref="T:System.Object" /> objects that contains the arguments of the method to invoke.</span></span></param>
        <summary><span data-ttu-id="770e7-217">对本机 Active Directory 域服务对象调用方法。</span><span class="sxs-lookup"><span data-stu-id="770e7-217">Calls a method on the native Active Directory Domain Services object.</span></span></summary>
        <returns><span data-ttu-id="770e7-218">被调用的方法的返回值。</span><span class="sxs-lookup"><span data-stu-id="770e7-218">The return value of the invoked method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="770e7-219">如果本机方法的返回值实现了 IADs 接口，则返回相应的 <xref:System.DirectoryServices.DirectoryEntry>。</span><span class="sxs-lookup"><span data-stu-id="770e7-219">If the return value of the native method implements the IADs interface, a corresponding <xref:System.DirectoryServices.DirectoryEntry> is returned.</span></span> <span data-ttu-id="770e7-220">有关 IADs 接口的详细信息，请参阅[IADs](/windows/win32/api/iads/nn-iads-iads)一文。</span><span class="sxs-lookup"><span data-stu-id="770e7-220">For more information about the IADs interface, see the [IADs](/windows/win32/api/iads/nn-iads-iads) article.</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.DirectoryServicesCOMException"><span data-ttu-id="770e7-221">本机方法引发了 <see cref="T:System.Runtime.InteropServices.COMException" /> 异常。</span><span class="sxs-lookup"><span data-stu-id="770e7-221">The native method threw a <see cref="T:System.Runtime.InteropServices.COMException" /> exception.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="770e7-222">本机方法引发了 <see cref="T:System.Reflection.TargetInvocationException" /> 异常。</span><span class="sxs-lookup"><span data-stu-id="770e7-222">The native method threw a <see cref="T:System.Reflection.TargetInvocationException" /> exception.</span></span> <span data-ttu-id="770e7-223"><see cref="P:System.Exception.InnerException" /> 属性包含带有实际发生错误信息的 <see cref="T:System.Runtime.InteropServices.COMException" /> 异常。</span><span class="sxs-lookup"><span data-stu-id="770e7-223">The <see cref="P:System.Exception.InnerException" /> property contains a <see cref="T:System.Runtime.InteropServices.COMException" /> exception that contains information about the actual error that occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InvokeGet">
      <MemberSignature Language="C#" Value="public object InvokeGet (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object InvokeGet(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntry.InvokeGet(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeGet (propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeGet(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.InvokeGet : string -&gt; obj" Usage="directoryEntry.InvokeGet propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="770e7-224">要获取的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="770e7-224">The name of the property to get.</span></span></param>
        <summary><span data-ttu-id="770e7-225">获取来自本机 Active Directory 域服务对象的属性。</span><span class="sxs-lookup"><span data-stu-id="770e7-225">Gets a property from the native Active Directory Domain Services object.</span></span></summary>
        <returns><span data-ttu-id="770e7-226">表示所请求属性的对象。</span><span class="sxs-lookup"><span data-stu-id="770e7-226">An object that represents the requested property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="770e7-227">不应使用此方法。</span><span class="sxs-lookup"><span data-stu-id="770e7-227">This method should not be used.</span></span> <span data-ttu-id="770e7-228">应使用 <xref:System.DirectoryServices.DirectoryEntry.Properties%2A> 属性访问 <xref:System.DirectoryServices.DirectoryEntry> 对象的属性。</span><span class="sxs-lookup"><span data-stu-id="770e7-228">The <xref:System.DirectoryServices.DirectoryEntry.Properties%2A> property should be used to access the properties of the <xref:System.DirectoryServices.DirectoryEntry> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DirectoryServices.DirectoryEntry.Properties" />
      </Docs>
    </Member>
    <Member MemberName="InvokeSet">
      <MemberSignature Language="C#" Value="public void InvokeSet (string propertyName, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvokeSet(string propertyName, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntry.InvokeSet(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvokeSet (propertyName As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvokeSet(System::String ^ propertyName, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.InvokeSet : string * obj[] -&gt; unit" Usage="directoryEntry.InvokeSet (propertyName, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="args" Type="System.Object[]" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="770e7-229">要设置的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="770e7-229">The name of the property to set.</span></span></param>
        <param name="args"><span data-ttu-id="770e7-230">要设置的 Active Directory 域服务对象。</span><span class="sxs-lookup"><span data-stu-id="770e7-230">The Active Directory Domain Services object to set.</span></span></param>
        <summary><span data-ttu-id="770e7-231">设置本机 Active Directory 域服务对象上的属性。</span><span class="sxs-lookup"><span data-stu-id="770e7-231">Sets a property on the native Active Directory Domain Services object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="770e7-232">不应使用此方法。</span><span class="sxs-lookup"><span data-stu-id="770e7-232">This method should not be used.</span></span> <span data-ttu-id="770e7-233">应使用 <xref:System.DirectoryServices.DirectoryEntry.Properties%2A> 属性访问 <xref:System.DirectoryServices.DirectoryEntry> 对象的属性。</span><span class="sxs-lookup"><span data-stu-id="770e7-233">The <xref:System.DirectoryServices.DirectoryEntry.Properties%2A> property should be used to access the properties of the <xref:System.DirectoryServices.DirectoryEntry> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DirectoryServices.DirectoryEntry.Properties" />
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveTo">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="770e7-234">移动此 <see cref="T:System.DirectoryServices.DirectoryEntry" />。</span><span class="sxs-lookup"><span data-stu-id="770e7-234">Moves this <see cref="T:System.DirectoryServices.DirectoryEntry" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public void MoveTo (System.DirectoryServices.DirectoryEntry newParent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveTo(class System.DirectoryServices.DirectoryEntry newParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveTo (newParent As DirectoryEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveTo(System::DirectoryServices::DirectoryEntry ^ newParent);" />
      <MemberSignature Language="F#" Value="member this.MoveTo : System.DirectoryServices.DirectoryEntry -&gt; unit" Usage="directoryEntry.MoveTo newParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newParent" Type="System.DirectoryServices.DirectoryEntry" />
      </Parameters>
      <Docs>
        <param name="newParent"><span data-ttu-id="770e7-235">要将此项移动到的父级。</span><span class="sxs-lookup"><span data-stu-id="770e7-235">The parent to which you want to move this entry.</span></span></param>
        <summary><span data-ttu-id="770e7-236">将此 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 对象移至指定父级。</span><span class="sxs-lookup"><span data-stu-id="770e7-236">Moves this <see cref="T:System.DirectoryServices.DirectoryEntry" /> object to the specified parent.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="770e7-237">如果 `true`<xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A>，请对新的对象调用 <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> 方法，使移动永久移动。</span><span class="sxs-lookup"><span data-stu-id="770e7-237">If <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A> is `true`, call the <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> method on the new object to make the move permanent.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="770e7-238">指定的 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 不是容器。</span><span class="sxs-lookup"><span data-stu-id="770e7-238">The specified <see cref="T:System.DirectoryServices.DirectoryEntry" /> is not a container.</span></span></exception>
        <altmember cref="P:System.DirectoryServices.DirectoryEntry.UsePropertyCache" />
        <altmember cref="M:System.DirectoryServices.DirectoryEntry.CommitChanges" />
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public void MoveTo (System.DirectoryServices.DirectoryEntry newParent, string newName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveTo(class System.DirectoryServices.DirectoryEntry newParent, string newName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveTo (newParent As DirectoryEntry, newName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveTo(System::DirectoryServices::DirectoryEntry ^ newParent, System::String ^ newName);" />
      <MemberSignature Language="F#" Value="member this.MoveTo : System.DirectoryServices.DirectoryEntry * string -&gt; unit" Usage="directoryEntry.MoveTo (newParent, newName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newParent" Type="System.DirectoryServices.DirectoryEntry" />
        <Parameter Name="newName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="newParent"><span data-ttu-id="770e7-239">要将此项移动到的父级。</span><span class="sxs-lookup"><span data-stu-id="770e7-239">The parent to which you want to move this entry.</span></span></param>
        <param name="newName"><span data-ttu-id="770e7-240">此项的新名称。</span><span class="sxs-lookup"><span data-stu-id="770e7-240">The new name of this entry.</span></span></param>
        <summary><span data-ttu-id="770e7-241">将此 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 对象移至指定父级，并将其名称变更为指定值。</span><span class="sxs-lookup"><span data-stu-id="770e7-241">Moves this <see cref="T:System.DirectoryServices.DirectoryEntry" /> object to the specified parent and changes its name to the specified value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="770e7-242">如果 `true`<xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A>，请对新的对象调用 <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A>，使移动永久移动。</span><span class="sxs-lookup"><span data-stu-id="770e7-242">If <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A> is `true`, call <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> on the new object to make the move permanent.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="770e7-243">指定的 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 不是容器。</span><span class="sxs-lookup"><span data-stu-id="770e7-243">The specified <see cref="T:System.DirectoryServices.DirectoryEntry" /> is not a container.</span></span></exception>
        <altmember cref="P:System.DirectoryServices.DirectoryEntry.UsePropertyCache" />
        <altmember cref="M:System.DirectoryServices.DirectoryEntry.CommitChanges" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectoryEntry.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.DirectoryServices.DirectoryEntry.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.DirectoryServices.DSDescription("DSName")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="770e7-244">获取用基础目录服务命名的对象的名称。</span><span class="sxs-lookup"><span data-stu-id="770e7-244">Gets the name of the object as named with the underlying directory service.</span></span></summary>
        <value><span data-ttu-id="770e7-245">用基础目录服务命名的对象的名称。</span><span class="sxs-lookup"><span data-stu-id="770e7-245">The name of the object as named with the underlying directory service.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="770e7-246">此名称以及 <xref:System.DirectoryServices.DirectoryEntry.SchemaClassName%2A>会将此项与同级区分开来，并且在每个容器中其同级中必须是唯一的。</span><span class="sxs-lookup"><span data-stu-id="770e7-246">This name, along with <xref:System.DirectoryServices.DirectoryEntry.SchemaClassName%2A>, distinguishes this entry from its siblings and must be unique among its siblings in each container.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="770e7-247">下面的示例为 Active Directory 域服务中的节点创建 <xref:System.DirectoryServices.DirectoryEntry>。</span><span class="sxs-lookup"><span data-stu-id="770e7-247">The following example creates a <xref:System.DirectoryServices.DirectoryEntry> for the node in the Active Directory Domain Services.</span></span> <span data-ttu-id="770e7-248">然后，它将显示其子节点的 <xref:System.DirectoryServices.DirectoryEntry.Name%2A> 和 <xref:System.DirectoryServices.DirectoryEntry.Path%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="770e7-248">It then displays the <xref:System.DirectoryServices.DirectoryEntry.Name%2A> and <xref:System.DirectoryServices.DirectoryEntry.Path%2A> properties of its child nodes.</span></span>  
  
```vb  
Dim myADSPath As String = "LDAP://onecity/CN=Users,DC=onecity,  
           _DC=corp,DC=fabrikam,DC=com"  
Dim myDirectoryEntry As New DirectoryEntry(myADSPath)  
  
Console.WriteLine("DirectoryEntry Name :" + myDirectoryEntry.Name)  
Console.WriteLine(ControlChars.NewLine _  
        + "The child entries for this node in the Active Directory Domain Services hierarchy")  
  
Dim myDirectoryEntryChild As DirectoryEntry  
For Each myDirectoryEntryChild In  myDirectoryEntry.Children  
   Console.WriteLine(myDirectoryEntryChild.Path)  
Next myDirectoryEntryChild  
```  
  
```csharp  
String myADSPath = "LDAP://onecity/CN=Users,  
             DC=onecity,DC=corp,DC=fabrikam,DC=com";  
DirectoryEntry myDirectoryEntry=new DirectoryEntry(myADSPath);  
  
Console.WriteLine("DirectoryEntry Name :"+ myDirectoryEntry.Name);  
Console.WriteLine("\nThe child entries for this node "+  
   "in the Active Directory Domain Services hierarchy");  
  
foreach(DirectoryEntry myDirectoryEntryChild in  
   myDirectoryEntry.Children)  
{  
   Console.WriteLine(myDirectoryEntryChild.Path);  
}  
```  
  
```cpp
String^ myADSPath = "LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com";  
DirectoryEntry^ myDirectoryEntry = gcnew DirectoryEntry(myADSPath);  
  
Console::WriteLine("DirectoryEntry Name : {0}", myDirectoryEntry->Name);  
Console::WriteLine("\nThe child entries for this node in the Active Directory Domain Services hierarchy");  
  
Collections::IEnumerator^ myEnumerator = myDirectoryEntry->Children->GetEnumerator();  
while (myEnumerator->MoveNext())   
{  
    DirectoryEntry^ myDirectoryEntryChild = safe_cast<DirectoryEntry^>(myEnumerator->Current);  
    Console::WriteLine(myDirectoryEntryChild->Path);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NativeGuid">
      <MemberSignature Language="C#" Value="public string NativeGuid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NativeGuid" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectoryEntry.NativeGuid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NativeGuid As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NativeGuid { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NativeGuid : string" Usage="System.DirectoryServices.DirectoryEntry.NativeGuid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.DirectoryServices.DSDescription("DSNativeGuid")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="770e7-249">获取提供程序返回的 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 的 GUID。</span><span class="sxs-lookup"><span data-stu-id="770e7-249">Gets the GUID of the <see cref="T:System.DirectoryServices.DirectoryEntry" />, as returned from the provider.</span></span></summary>
        <value><span data-ttu-id="770e7-250">一个 <see cref="T:System.Guid" /> 结构，表示提供程序返回的 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 的 GUID。</span><span class="sxs-lookup"><span data-stu-id="770e7-250">A <see cref="T:System.Guid" /> structure that represents the GUID of the <see cref="T:System.DirectoryServices.DirectoryEntry" />, as returned from the provider.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="770e7-251">在 Active Directory 域服务中绑定对象时，请使用 <xref:System.DirectoryServices.DirectoryEntry.NativeGuid%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="770e7-251">Use the <xref:System.DirectoryServices.DirectoryEntry.NativeGuid%2A> property when binding an object in Active Directory Domain Services.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="770e7-252">轻型目录访问协议（LDAP）提供程序以不同于 Internet Information Services （IIS）、Novell NetWare 目录服务器（NDS）和 WinNT 提供程序的格式返回 <xref:System.DirectoryServices.DirectoryEntry> 的全局唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="770e7-252">The Lightweight Directory Access Protocol (LDAP) provider returns the globally unique identifier of a <xref:System.DirectoryServices.DirectoryEntry> in a different format than the Internet Information Services (IIS), Novell NetWare Directory Server (NDS), and WinNT providers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="770e7-253">下面的示例演示 <xref:System.DirectoryServices.DirectoryEntry> 类的 <xref:System.DirectoryServices.DirectoryEntry.Guid%2A> 和 <xref:System.DirectoryServices.DirectoryEntry.NativeGuid%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="770e7-253">The following example demonstrates the <xref:System.DirectoryServices.DirectoryEntry.Guid%2A> and <xref:System.DirectoryServices.DirectoryEntry.NativeGuid%2A> properties of the <xref:System.DirectoryServices.DirectoryEntry> class.</span></span> <span data-ttu-id="770e7-254">此示例获取用户指定的 <xref:System.DirectoryServices.DirectoryEntry>，并显示其 <xref:System.DirectoryServices.DirectoryEntry.Guid%2A> 和 <xref:System.DirectoryServices.DirectoryEntry.NativeGuid%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="770e7-254">This example gets the user-specified <xref:System.DirectoryServices.DirectoryEntry> and displays its <xref:System.DirectoryServices.DirectoryEntry.Guid%2A> and <xref:System.DirectoryServices.DirectoryEntry.NativeGuid%2A> properties.</span></span>  
  
```vb  
Dim myADSPath As [String] = "LDAP://onecity/CN=Users,  
             DC=onecity,DC=corp,DC=fabrikam,DC=com"  
Dim myDirectoryEntry As New DirectoryEntry(myADSPath)  
  
' Display the Guid and NativeGuid.  
Console.WriteLine("The GUID of the ADS object:" + myDirectoryEntry.Guid.ToString)  
Console.WriteLine("The Native GUID of the ADS" + "object:" +   
             myDirectoryEntry.NativeGuid)  
```  
  
```csharp  
String myADSPath = "LDAP://onecity/CN=Users,  
             DC=onecity,DC=corp,DC=fabrikam,DC=com";  
DirectoryEntry myDirectoryEntry=new DirectoryEntry(myADSPath);  
  
// Display the Guid and NativeGuid.  
Console.WriteLine("The GUID of the ADS object:"+  
                  myDirectoryEntry.Guid);  
Console.WriteLine("The Native GUID of the ADS"+  
                  "object:"+myDirectoryEntry.NativeGuid);  
```  
  
```cpp
String^ myADSPath = "LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com";  
DirectoryEntry^ myDirectoryEntry = gcnew DirectoryEntry(myADSPath);  
  
// Display the Guid and NativeGuid.  
Console::WriteLine("The GUID of the ADS object: {0}", myDirectoryEntry->Guid));  
Console::WriteLine("The Native GUID of the ADS object: {0}",  
                   myDirectoryEntry->NativeGuid);  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Guid" />
      </Docs>
    </Member>
    <Member MemberName="NativeObject">
      <MemberSignature Language="C#" Value="public object NativeObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NativeObject" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectoryEntry.NativeObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NativeObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NativeObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NativeObject : obj" Usage="System.DirectoryServices.DirectoryEntry.NativeObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.DirectoryServices.DSDescription("DSNativeObject")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="770e7-255">获取本机 Active Directory 服务接口 (ADSI) 对象。</span><span class="sxs-lookup"><span data-stu-id="770e7-255">Gets the native Active Directory Service Interfaces (ADSI) object.</span></span></summary>
        <value><span data-ttu-id="770e7-256">本机 ADSI 对象。</span><span class="sxs-lookup"><span data-stu-id="770e7-256">The native ADSI object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="770e7-257">当要使用 COM 接口时，可以使用此属性强制转换用于实现 IADs 接口的本机 Active Directory 域服务对象。</span><span class="sxs-lookup"><span data-stu-id="770e7-257">Use this property to cast the native Active Directory Domain Services object, which implements the IADs interface, when you want to use a COM interface.</span></span> <span data-ttu-id="770e7-258">有关 IADs 接口的详细信息，请参阅[IADs](/windows/win32/api/iads/nn-iads-iads)一文。</span><span class="sxs-lookup"><span data-stu-id="770e7-258">For more information about the IADs interface, see the [IADs](/windows/win32/api/iads/nn-iads-iads) article.</span></span>
  
 <span data-ttu-id="770e7-259">此对象适用于无法通过单独 <xref:System.DirectoryServices?displayProperty=nameWithType> 类完成的高级方案。</span><span class="sxs-lookup"><span data-stu-id="770e7-259">This object is for advanced scenarios that cannot be accomplished with the <xref:System.DirectoryServices?displayProperty=nameWithType> classes alone.</span></span> <span data-ttu-id="770e7-260">若要使用它，需要从 IADs 家族导入一个 COM 接口，然后将此属性强制转换为该接口。</span><span class="sxs-lookup"><span data-stu-id="770e7-260">To use it, you need to import one of the COM interfaces from the IADs family, then cast this property to that interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectSecurity">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectorySecurity ObjectSecurity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectorySecurity ObjectSecurity" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectoryEntry.ObjectSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Property ObjectSecurity As ActiveDirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectorySecurity ^ ObjectSecurity { System::DirectoryServices::ActiveDirectorySecurity ^ get(); void set(System::DirectoryServices::ActiveDirectorySecurity ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ObjectSecurity : System.DirectoryServices.ActiveDirectorySecurity with get, set" Usage="System.DirectoryServices.DirectoryEntry.ObjectSecurity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.DirectoryServices.DSDescription("DSObjectSecurity")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectorySecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="770e7-261">获取或设置此项的安全说明符。</span><span class="sxs-lookup"><span data-stu-id="770e7-261">Gets or sets the security descriptor for this entry.</span></span></summary>
        <value><span data-ttu-id="770e7-262">一个 <see cref="T:System.DirectoryServices.ActiveDirectorySecurity" /> 对象，表示此目录项的安全说明符。</span><span class="sxs-lookup"><span data-stu-id="770e7-262">An <see cref="T:System.DirectoryServices.ActiveDirectorySecurity" /> object that represents the security descriptor for this directory entry.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DirectoryEntryConfiguration Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.DirectoryEntryConfiguration Options" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectoryEntry.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As DirectoryEntryConfiguration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::DirectoryEntryConfiguration ^ Options { System::DirectoryServices::DirectoryEntryConfiguration ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.DirectoryServices.DirectoryEntryConfiguration" Usage="System.DirectoryServices.DirectoryEntry.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.DirectoryServices.DSDescription("DSOptions")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectoryEntryConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="770e7-263">获取此项的提供程序特定选项。</span><span class="sxs-lookup"><span data-stu-id="770e7-263">Gets the provider-specific options for this entry.</span></span></summary>
        <value><span data-ttu-id="770e7-264">一个 <see cref="T:System.DirectoryServices.DirectoryEntryConfiguration" /> 对象，包含此项的提供程序特定选项。</span><span class="sxs-lookup"><span data-stu-id="770e7-264">A <see cref="T:System.DirectoryServices.DirectoryEntryConfiguration" /> object that contains the provider-specific options for this entry.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.DirectoryServices.DirectoryEntryConfiguration" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DirectoryEntry Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.DirectoryEntry Parent" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectoryEntry.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As DirectoryEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::DirectoryEntry ^ Parent { System::DirectoryServices::DirectoryEntry ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.DirectoryServices.DirectoryEntry" Usage="System.DirectoryServices.DirectoryEntry.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.DirectoryServices.DSDescription("DSParent")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectoryEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="770e7-265">获取 Active Directory 域服务层次结构中此项的父级。</span><span class="sxs-lookup"><span data-stu-id="770e7-265">Gets this entry's parent in the Active Directory Domain Services hierarchy.</span></span></summary>
        <value><span data-ttu-id="770e7-266">一个 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 对象，表示此项的父级。</span><span class="sxs-lookup"><span data-stu-id="770e7-266">A <see cref="T:System.DirectoryServices.DirectoryEntry" /> object that represents the parent of this entry.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="770e7-267">下面的示例搜索给定 <xref:System.DirectoryServices.DirectoryEntry>，并显示结果的 <xref:System.DirectoryServices.DirectoryEntry.Name%2A> 和 <xref:System.DirectoryServices.DirectoryEntry.Parent%2A>。</span><span class="sxs-lookup"><span data-stu-id="770e7-267">The following example searches a given <xref:System.DirectoryServices.DirectoryEntry> and displays the <xref:System.DirectoryServices.DirectoryEntry.Name%2A> and <xref:System.DirectoryServices.DirectoryEntry.Parent%2A> of the result.</span></span>  
  
```vb  
Dim myADSPath As String = _   
          "LDAP://onecity/CN=user,CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com"  
Dim myDirectoryEntry As New DirectoryEntry(myADSPath, UserName, SecurelyStoredPassword)  
  
Console.WriteLine("Parent is :" + myDirectoryEntry.Parent.Path)  
```  
  
```csharp  
String myADSPath = "LDAP://onecity/CN=user,CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com";  
DirectoryEntry myDirectoryEntry=new DirectoryEntry(myADSPath, UserName, SecurelyStoredPassword);  
  
Console.WriteLine("Parent is :"+myDirectoryEntry.Parent.Path);  
```  
  
```cpp  
String^ myADSPath = "LDAP://onecity/CN=user,CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com";  
DirectoryEntry^ myDirectoryEntry = gcnew DirectoryEntry(myADSPath, UserName, SecurelyStoredPassword);  
  
Console::WriteLine("Parent is :{0}", myDirectoryEntry->Parent->Path);  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public string Password { set; }" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectoryEntry.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Password {  void set(System::String ^ value); };" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.Password : string" Usage="System.DirectoryServices.DirectoryEntry.Password" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public string Password { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Password { System::String ^ get(); void set(System::String ^ value); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.Password : string with get, set" Usage="System.DirectoryServices.DirectoryEntry.Password" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.DirectoryServices.DSDescription("DSPassword")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="770e7-268">设置客户端身份验证所使用的密码。</span><span class="sxs-lookup"><span data-stu-id="770e7-268">Sets the password to use when authenticating the client.</span></span></summary>
        <value><span data-ttu-id="770e7-269">在对客户端进行身份验证时使用的密码。</span><span class="sxs-lookup"><span data-stu-id="770e7-269">The password to use when authenticating the client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="770e7-270">你可以设置 "<xref:System.DirectoryServices.DirectoryEntry.Username%2A>" 和 "<xref:System.DirectoryServices.DirectoryEntry.Password%2A> 属性" 以指定用于访问 Active Directory 域服务中信息的备用凭据。</span><span class="sxs-lookup"><span data-stu-id="770e7-270">You can set the <xref:System.DirectoryServices.DirectoryEntry.Username%2A> and <xref:System.DirectoryServices.DirectoryEntry.Password%2A> properties to specify alternate credentials with which to access the information in Active Directory Domain Services.</span></span> <span data-ttu-id="770e7-271">从此实例检索到的任何其他 <xref:System.DirectoryServices.DirectoryEntry> 对象（例如，通过 <xref:System.DirectoryServices.DirectoryEntry.Children%2A>）都是使用相同的备用凭据自动创建的。</span><span class="sxs-lookup"><span data-stu-id="770e7-271">Any other <xref:System.DirectoryServices.DirectoryEntry> objects retrieved from this instance (for example, through <xref:System.DirectoryServices.DirectoryEntry.Children%2A>) are automatically created with the same alternate credentials.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="770e7-272">下面的示例演示 <xref:System.DirectoryServices.DirectoryEntry> 类的 <xref:System.DirectoryServices.DirectoryEntry.Username%2A> 和 <xref:System.DirectoryServices.DirectoryEntry.Password%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="770e7-272">The following example demonstrates the <xref:System.DirectoryServices.DirectoryEntry.Username%2A> and <xref:System.DirectoryServices.DirectoryEntry.Password%2A> properties of the <xref:System.DirectoryServices.DirectoryEntry> class.</span></span> <span data-ttu-id="770e7-273">此示例获取用户指定的 <xref:System.DirectoryServices.DirectoryEntry> 及其所有 <xref:System.DirectoryServices.DirectoryEntry.Children%2A>的 <xref:System.DirectoryServices.DirectoryEntry.Path%2A>。</span><span class="sxs-lookup"><span data-stu-id="770e7-273">This example gets the user-specified <xref:System.DirectoryServices.DirectoryEntry> and the <xref:System.DirectoryServices.DirectoryEntry.Path%2A> of all its <xref:System.DirectoryServices.DirectoryEntry.Children%2A>.</span></span>  
  
```vb  
Dim myADSPath As String = _  
      "LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com"  
  
' Create an Instance of DirectoryEntry.  
Dim myDirectoryEntry As New DirectoryEntry(myADSPath)  
myDirectoryEntry.Username = UserName  
myDirectoryEntry.Password = SecurelyStoredPassword  
  
' Get the Child ADS objects.  
Console.WriteLine("The Child ADS objects are:")  
Dim myChildDirectoryEntry As DirectoryEntry  
For Each myChildDirectoryEntry In  myDirectoryEntry.Children  
   Console.WriteLine(myChildDirectoryEntry.Path)  
Next myChildDirectoryEntry   
```  
  
```csharp  
String myADSPath = "LDAP://onecity/CN=Users,  
         DC=onecity,DC=corp,DC=fabrikam,DC=com";  
  
// Create an Instance of DirectoryEntry.  
DirectoryEntry myDirectoryEntry = new DirectoryEntry(myADSPath);  
myDirectoryEntry.Username = UserName;  
myDirectoryEntry.Password = SecurelyStoredPassword;  
  
// Get the Child ADS objects.  
Console.WriteLine("The Child ADS objects are:");  
foreach(DirectoryEntry myChildDirectoryEntry in myDirectoryEntry.Children)  
   Console.WriteLine(myChildDirectoryEntry.Path);  
```  
  
```cpp
String^ myADSPath = "LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com";  
  
// Create an Instance of DirectoryEntry.  
DirectoryEntry^ myDirectoryEntry = gcnew DirectoryEntry(myADSPath);  
myDirectoryEntry->Username = UserName;  
myDirectoryEntry->Password = SecurelyStoredPassword;  
  
// Get the Child ADS objects.  
Console::WriteLine("The Child ADS objects are:");  
Collections::IEnumerator^ myEnum = myDirectoryEntry->Children->GetEnumerator();  
while (myEnum->MoveNext())   
{  
    DirectoryEntry^ myChildDirectoryEntry = safe_cast<DirectoryEntry^>  
             (myEnum->Current);  
    Console::WriteLine(myChildDirectoryEntry->Path);  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DirectoryServices.DirectoryEntry.Username" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectoryEntry.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.DirectoryServices.DirectoryEntry.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.DirectoryServices.DSDescription("DSPath")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="770e7-274">获取或设置此 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 的路径。</span><span class="sxs-lookup"><span data-stu-id="770e7-274">Gets or sets the path for this <see cref="T:System.DirectoryServices.DirectoryEntry" />.</span></span></summary>
        <value><span data-ttu-id="770e7-275">此 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 对象的路径。</span><span class="sxs-lookup"><span data-stu-id="770e7-275">The path of this <see cref="T:System.DirectoryServices.DirectoryEntry" /> object.</span></span> <span data-ttu-id="770e7-276">默认值为空字符串("")。</span><span class="sxs-lookup"><span data-stu-id="770e7-276">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="770e7-277"><xref:System.DirectoryServices.DirectoryEntry.Path%2A> 属性在网络环境中唯一标识此项。</span><span class="sxs-lookup"><span data-stu-id="770e7-277">The <xref:System.DirectoryServices.DirectoryEntry.Path%2A> property uniquely identifies this entry in a networked environment.</span></span> <span data-ttu-id="770e7-278">始终可以使用此 <xref:System.DirectoryServices.DirectoryEntry.Path%2A>检索此项。</span><span class="sxs-lookup"><span data-stu-id="770e7-278">This entry can always be retrieved using this <xref:System.DirectoryServices.DirectoryEntry.Path%2A>.</span></span>  
  
 <span data-ttu-id="770e7-279">设置 <xref:System.DirectoryServices.DirectoryEntry.Path%2A> 将从目录存储中检索新项;它不会更改当前绑定项的路径。</span><span class="sxs-lookup"><span data-stu-id="770e7-279">Setting the <xref:System.DirectoryServices.DirectoryEntry.Path%2A> retrieves a new entry from the directory store; it does not change the path of the currently bound entry.</span></span>  
  
 <span data-ttu-id="770e7-280">与 <xref:System.DirectoryServices.DirectoryEntry> 组件关联的类可与任何 Active Directory 域服务服务提供程序一起使用。</span><span class="sxs-lookup"><span data-stu-id="770e7-280">The classes associated with the <xref:System.DirectoryServices.DirectoryEntry> component can be used with any of the Active Directory Domain Services service providers.</span></span> <span data-ttu-id="770e7-281">某些当前提供程序是 Internet Information Services （IIS）、轻型目录访问协议（LDAP）、Novell NetWare 目录服务（NDS）和 WinNT。</span><span class="sxs-lookup"><span data-stu-id="770e7-281">Some of the current providers are Internet Information Services (IIS), Lightweight Directory Access Protocol (LDAP), Novell NetWare Directory Service (NDS), and WinNT.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="770e7-282">标识提供程序的 <xref:System.DirectoryServices.DirectoryEntry.Path%2A> 部分（在 "：//" 之前）区分大小写。</span><span class="sxs-lookup"><span data-stu-id="770e7-282">The section of the <xref:System.DirectoryServices.DirectoryEntry.Path%2A> that identifies the provider (precedes "://") is case-sensitive.</span></span> <span data-ttu-id="770e7-283">例如，"LDAP://" 或 "WinNT://"。</span><span class="sxs-lookup"><span data-stu-id="770e7-283">For example, "LDAP://" or "WinNT://".</span></span>  
  
 <span data-ttu-id="770e7-284"><xref:System.DirectoryServices.DirectoryEntry.Path%2A> 属性的语法因提供程序而异。</span><span class="sxs-lookup"><span data-stu-id="770e7-284">The syntax for the <xref:System.DirectoryServices.DirectoryEntry.Path%2A> property varies according to the provider.</span></span> <span data-ttu-id="770e7-285">一些常见的情况有：</span><span class="sxs-lookup"><span data-stu-id="770e7-285">Some common scenarios are:</span></span>  
  
 <span data-ttu-id="770e7-286">WinNT</span><span class="sxs-lookup"><span data-stu-id="770e7-286">WinNT</span></span>  
  
-   <span data-ttu-id="770e7-287">连接到计算机上的组。</span><span class="sxs-lookup"><span data-stu-id="770e7-287">Connect to a group on a computer.</span></span> <span data-ttu-id="770e7-288">例如，"WinNT://**\<域名 >/\<计算机名称 >/\<组名称 >**"。</span><span class="sxs-lookup"><span data-stu-id="770e7-288">For example, "WinNT://**\<domain name>/\<computer name>/\<group name>**".</span></span> <span data-ttu-id="770e7-289">如果要连接到本地计算机，"WinNT://**\<计算机名称 >/\<组名称 >**"。</span><span class="sxs-lookup"><span data-stu-id="770e7-289">If you are connecting to a local computer, "WinNT://**\<computer name>/\<group name>**".</span></span>  
  
-   <span data-ttu-id="770e7-290">连接到计算机上的用户。</span><span class="sxs-lookup"><span data-stu-id="770e7-290">Connect to a user on a computer.</span></span> <span data-ttu-id="770e7-291">例如，"WinNT://**\<域名 >/\<计算机名称 >/\<用户名 >**"。</span><span class="sxs-lookup"><span data-stu-id="770e7-291">For example, "WinNT://**\<domain name>/\<computer name>/\<user name>**".</span></span> <span data-ttu-id="770e7-292">如果要连接到本地计算机，"WinNT://**\<计算机名称 >/\<用户名 >**"。</span><span class="sxs-lookup"><span data-stu-id="770e7-292">If you are connecting to a local computer, "WinNT://**\<computer name>/\<user name>**".</span></span>  
  
-   <span data-ttu-id="770e7-293">连接到计算机上的服务。</span><span class="sxs-lookup"><span data-stu-id="770e7-293">Connect to services on a computer.</span></span> <span data-ttu-id="770e7-294">例如，"WinNT://**\<域名 >/\<计算机名称 >/\<服务名称 >**"。</span><span class="sxs-lookup"><span data-stu-id="770e7-294">For example, "WinNT://**\<domain name>/\<computer name>/\<service name>**".</span></span> <span data-ttu-id="770e7-295">如果要连接到本地计算机，"WinNT://**\<计算机名称 >/\<名称 >**"。</span><span class="sxs-lookup"><span data-stu-id="770e7-295">If you are connecting to a local computer, "WinNT://**\<computer name>/\<service name>**".</span></span>  
  
-   <span data-ttu-id="770e7-296">发现网络上的所有域。</span><span class="sxs-lookup"><span data-stu-id="770e7-296">Discover all domains on the network.</span></span> <span data-ttu-id="770e7-297">例如，通过枚举此项的子级，可以找到域。</span><span class="sxs-lookup"><span data-stu-id="770e7-297">For example, "WinNT:" The domains can be found by enumerating the children of this entry.</span></span>  
  
 <span data-ttu-id="770e7-298">LDAP</span><span class="sxs-lookup"><span data-stu-id="770e7-298">LDAP</span></span>  
  
-   <span data-ttu-id="770e7-299">连接到域中的组。</span><span class="sxs-lookup"><span data-stu-id="770e7-299">Connect to a group in a domain.</span></span> <span data-ttu-id="770e7-300">例如，"LDAP://CN =\<组名称 >，CN =\<Users >，DC =\<域组件 >，DC =\<域组件 >,..."。</span><span class="sxs-lookup"><span data-stu-id="770e7-300">For example, "LDAP://CN=\<group name>, CN =\<Users>, DC=\<domain component>, DC=\<domain component>,...".</span></span>  
  
-   <span data-ttu-id="770e7-301">连接到域中的用户。</span><span class="sxs-lookup"><span data-stu-id="770e7-301">Connect to a user in a domain.</span></span> <span data-ttu-id="770e7-302">例如，"LDAP://CN =\<完全用户名 >，CN =\<Users >，DC =\<域组件 >，DC =\<域组件 >,..."。</span><span class="sxs-lookup"><span data-stu-id="770e7-302">For example, "LDAP://CN=\<full user name>, CN=\<Users>, DC=\<domain component>, DC=\<domain component>,...".</span></span>  
  
-   <span data-ttu-id="770e7-303">连接到域中的计算机。</span><span class="sxs-lookup"><span data-stu-id="770e7-303">Connect to computers in a domain.</span></span> <span data-ttu-id="770e7-304">例如，"LDAP://CN =\<计算机名称 >，CN =\<计算机 >，DC =\<域组件 >，DC =\<域组件 >,..."。</span><span class="sxs-lookup"><span data-stu-id="770e7-304">For example, "LDAP://CN=\<computer name>, CN=\<Computers>, DC=\<domain component>, DC=\<domain component>,...".</span></span>  
  
 <span data-ttu-id="770e7-305">IIS</span><span class="sxs-lookup"><span data-stu-id="770e7-305">IIS</span></span>  
  
-   <span data-ttu-id="770e7-306">连接到 Web 目录。</span><span class="sxs-lookup"><span data-stu-id="770e7-306">Connect to a Web directory.</span></span> <span data-ttu-id="770e7-307">例如，"IIS://LocalHost/W3SVC/1/ROOT/\<Web directory name >"。</span><span class="sxs-lookup"><span data-stu-id="770e7-307">For example, "IIS://LocalHost/W3SVC/1/ROOT/\<Web directory name>".</span></span>  
  
 <span data-ttu-id="770e7-308">若要使用 LDAP 绑定到当前域，请使用路径 "LDAP://RootDSE"，然后获取默认命名上下文并重新绑定该条目。</span><span class="sxs-lookup"><span data-stu-id="770e7-308">To bind to the current domain using LDAP, use the path "LDAP://RootDSE", then get the default naming context and rebind the entry.</span></span> <span data-ttu-id="770e7-309">例如：</span><span class="sxs-lookup"><span data-stu-id="770e7-309">For example:</span></span>  
  
```csharp  
String str = ent.Properties["defaultNamingContext"][0];  
DirectoryEntry domain = new DirectoryEntry("LDAP://" + str);  
```  
  
 <span data-ttu-id="770e7-310">有关详细信息，请参阅提供程序的文档和[使用 Active Directory 服务接口](/windows/desktop/adsi/using-adsi)一文。</span><span class="sxs-lookup"><span data-stu-id="770e7-310">For more information, see the documentation for your provider and the [Using Active Directory Service Interfaces](/windows/desktop/adsi/using-adsi) article.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.PropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.PropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectoryEntry.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As PropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::PropertyCollection ^ Properties { System::DirectoryServices::PropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.DirectoryServices.PropertyCollection" Usage="System.DirectoryServices.DirectoryEntry.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.DirectoryServices.DSDescription("DSProperties")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.PropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="770e7-311">获取此 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 对象的 Active Directory 域服务属性。</span><span class="sxs-lookup"><span data-stu-id="770e7-311">Gets the Active Directory Domain Services properties for this <see cref="T:System.DirectoryServices.DirectoryEntry" /> object.</span></span></summary>
        <value><span data-ttu-id="770e7-312">一个 <see cref="T:System.DirectoryServices.PropertyCollection" /> 对象，包含此项所设属性。</span><span class="sxs-lookup"><span data-stu-id="770e7-312">A <see cref="T:System.DirectoryServices.PropertyCollection" /> object that contains the properties that are set on this entry.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="770e7-313">如果未初始化属性，<xref:System.DirectoryServices.DirectoryEntry.Properties%2A> 将调用 ADSI interface [IADs：： Get](/windows/win32/api/iads/nf-iads-iads-get)方法以从缓存中检索值。</span><span class="sxs-lookup"><span data-stu-id="770e7-313">If the property is not initialized, <xref:System.DirectoryServices.DirectoryEntry.Properties%2A> calls the ADSI interface [IADs::Get](/windows/win32/api/iads/nf-iads-iads-get) method to retrieve the value from the cache.</span></span> <span data-ttu-id="770e7-314">如果尚未加载基础缓存， [IADs：：](/windows/win32/api/iads/nf-iads-iads-get)将隐式调用[IADs：： GetInfo](/windows/win32/api/iads/nf-iads-iads-getinfo)。</span><span class="sxs-lookup"><span data-stu-id="770e7-314">If the underling cache has not been loaded, [IADs::Get](/windows/win32/api/iads/nf-iads-iads-get) implicitly calls [IADs::GetInfo](/windows/win32/api/iads/nf-iads-iads-getinfo).</span></span> <span data-ttu-id="770e7-315">此方法从基础目录存储区加载未在缓存中设置的受支持属性的值。</span><span class="sxs-lookup"><span data-stu-id="770e7-315">This method loads the values of the supported properties that have not been set in the cache from the underlying directory store.</span></span> <span data-ttu-id="770e7-316">对的后续调用 <xref:System.DirectoryServices.DirectoryEntry.Properties%2A> 仅检索缓存中的属性值。</span><span class="sxs-lookup"><span data-stu-id="770e7-316">Subsequent calls to <xref:System.DirectoryServices.DirectoryEntry.Properties%2A> retrieves the property values in the cache only.</span></span> <span data-ttu-id="770e7-317">若要控制属性缓存加载，请调用 <xref:System.DirectoryServices.DirectoryEntry.RefreshCache%2A>。</span><span class="sxs-lookup"><span data-stu-id="770e7-317">To control property cache loading, call <xref:System.DirectoryServices.DirectoryEntry.RefreshCache%2A>.</span></span>  
  
 <span data-ttu-id="770e7-318">**注意**不支持将 <xref:System.DirectoryServices.DirectoryEntry.Properties%2A> 属性用于 [!INCLUDE[WinNt4Family](~/includes/winnt4family-md.md)]的 Active Directory 客户端扩展（DSClient）。</span><span class="sxs-lookup"><span data-stu-id="770e7-318">**Note** The <xref:System.DirectoryServices.DirectoryEntry.Properties%2A> property is not supported for use with the Active Directory Client Extension (DSClient) for [!INCLUDE[WinNt4Family](~/includes/winnt4family-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DirectoryServices.PropertyCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RefreshCache">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="770e7-319">将此 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 对象的属性值加载到属性缓存中。</span><span class="sxs-lookup"><span data-stu-id="770e7-319">Loads the property values for this <see cref="T:System.DirectoryServices.DirectoryEntry" /> object into the property cache.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RefreshCache">
      <MemberSignature Language="C#" Value="public void RefreshCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RefreshCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntry.RefreshCache" />
      <MemberSignature Language="VB.NET" Value="Public Sub RefreshCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RefreshCache();" />
      <MemberSignature Language="F#" Value="member this.RefreshCache : unit -&gt; unit" Usage="directoryEntry.RefreshCache " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="770e7-320">将此 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 对象的属性值加载到属性缓存中。</span><span class="sxs-lookup"><span data-stu-id="770e7-320">Loads the property values for this <see cref="T:System.DirectoryServices.DirectoryEntry" /> object into the property cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="770e7-321">对属性缓存的任何未提交的更改都将丢失。</span><span class="sxs-lookup"><span data-stu-id="770e7-321">Any uncommitted changes to the property cache will be lost.</span></span> <span data-ttu-id="770e7-322">使用 <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> 方法可将更改保存到目录存储区。</span><span class="sxs-lookup"><span data-stu-id="770e7-322">Use the <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> method to persist changes to the directory store.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DirectoryServices.DirectoryEntry.CommitChanges" />
      </Docs>
    </Member>
    <Member MemberName="RefreshCache">
      <MemberSignature Language="C#" Value="public void RefreshCache (string[] propertyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RefreshCache(string[] propertyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntry.RefreshCache(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub RefreshCache (propertyNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RefreshCache(cli::array &lt;System::String ^&gt; ^ propertyNames);" />
      <MemberSignature Language="F#" Value="member this.RefreshCache : string[] -&gt; unit" Usage="directoryEntry.RefreshCache propertyNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="propertyNames"><span data-ttu-id="770e7-323">指定属性的数组。</span><span class="sxs-lookup"><span data-stu-id="770e7-323">An array of the specified properties.</span></span></param>
        <summary><span data-ttu-id="770e7-324">将指定属性的值加载到属性缓存中。</span><span class="sxs-lookup"><span data-stu-id="770e7-324">Loads the values of the specified properties into the property cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="770e7-325">对属性缓存的任何未提交的更改都将丢失。</span><span class="sxs-lookup"><span data-stu-id="770e7-325">Any uncommitted changes to the property cache will be lost.</span></span> <span data-ttu-id="770e7-326">使用 <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> 将更改保存到目录存储区。</span><span class="sxs-lookup"><span data-stu-id="770e7-326">Use <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> to persist changes to the directory store.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DirectoryServices.DirectoryEntry.CommitChanges" />
      </Docs>
    </Member>
    <Member MemberName="Rename">
      <MemberSignature Language="C#" Value="public void Rename (string newName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rename(string newName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntry.Rename(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rename (newName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rename(System::String ^ newName);" />
      <MemberSignature Language="F#" Value="member this.Rename : string -&gt; unit" Usage="directoryEntry.Rename newName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="newName"><span data-ttu-id="770e7-327">该项的新名称。</span><span class="sxs-lookup"><span data-stu-id="770e7-327">The new name of the entry.</span></span></param>
        <summary><span data-ttu-id="770e7-328">更改此 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 对象的名称。</span><span class="sxs-lookup"><span data-stu-id="770e7-328">Changes the name of this <see cref="T:System.DirectoryServices.DirectoryEntry" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="770e7-329">这也会影响用于引用此项的路径。</span><span class="sxs-lookup"><span data-stu-id="770e7-329">This will also affect the path that is used to refer to this entry.</span></span>  
  
 <span data-ttu-id="770e7-330">如果 `true`<xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A>，请确保对新的对象调用 <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> 方法，以使移动永久移动。</span><span class="sxs-lookup"><span data-stu-id="770e7-330">If <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A> is `true`, be sure to call the <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> method on the new object to make the move permanent.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DirectoryServices.DirectoryEntry.UsePropertyCache" />
        <altmember cref="M:System.DirectoryServices.DirectoryEntry.CommitChanges" />
      </Docs>
    </Member>
    <Member MemberName="SchemaClassName">
      <MemberSignature Language="C#" Value="public string SchemaClassName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SchemaClassName" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectoryEntry.SchemaClassName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SchemaClassName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SchemaClassName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaClassName : string" Usage="System.DirectoryServices.DirectoryEntry.SchemaClassName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.DirectoryServices.DSDescription("DSSchemaClassName")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="770e7-331">获取用于此 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 对象的架构类的名称。</span><span class="sxs-lookup"><span data-stu-id="770e7-331">Gets the name of the schema class for this <see cref="T:System.DirectoryServices.DirectoryEntry" /> object.</span></span></summary>
        <value><span data-ttu-id="770e7-332">用于此 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 对象的架构类的名称。</span><span class="sxs-lookup"><span data-stu-id="770e7-332">The name of the schema class for this <see cref="T:System.DirectoryServices.DirectoryEntry" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="770e7-333">这与 <xref:System.DirectoryServices.DirectoryEntry.SchemaEntry%2A> 属性的 <xref:System.DirectoryServices.DirectoryEntry.Name%2A> 属性相同。</span><span class="sxs-lookup"><span data-stu-id="770e7-333">This is the same as the <xref:System.DirectoryServices.DirectoryEntry.Name%2A> property of the <xref:System.DirectoryServices.DirectoryEntry.SchemaEntry%2A> property.</span></span>  
  
 <span data-ttu-id="770e7-334"><xref:System.DirectoryServices.DirectoryEntry> 对象的架构定义其属性和方法。</span><span class="sxs-lookup"><span data-stu-id="770e7-334">A <xref:System.DirectoryServices.DirectoryEntry> object's schema defines its properties and methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="770e7-335">下面的示例演示 <xref:System.DirectoryServices.DirectoryEntry> 类的 <xref:System.DirectoryServices.DirectoryEntry.SchemaClassName%2A> 和 <xref:System.DirectoryServices.DirectoryEntry.SchemaEntry%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="770e7-335">The following example demonstrates the <xref:System.DirectoryServices.DirectoryEntry.SchemaClassName%2A> and <xref:System.DirectoryServices.DirectoryEntry.SchemaEntry%2A> properties of the <xref:System.DirectoryServices.DirectoryEntry> class.</span></span> <span data-ttu-id="770e7-336">如果 <xref:System.DirectoryServices.DirectoryEntry.SchemaEntry%2A> 是容器对象，则此示例获取用户指定的 <xref:System.DirectoryServices.DirectoryEntry>，并获取其所有子级。</span><span class="sxs-lookup"><span data-stu-id="770e7-336">This example gets the user-specified <xref:System.DirectoryServices.DirectoryEntry> and gets all of its children if the <xref:System.DirectoryServices.DirectoryEntry.SchemaEntry%2A> is a container object.</span></span>  <span data-ttu-id="770e7-337">如果对象的 <xref:System.DirectoryServices.DirectoryEntry.Name%2A> 为 "容器"，则 <xref:System.DirectoryServices.DirectoryEntry.SchemaEntry%2A> 是容器对象。</span><span class="sxs-lookup"><span data-stu-id="770e7-337">The <xref:System.DirectoryServices.DirectoryEntry.SchemaEntry%2A> is a container object if the <xref:System.DirectoryServices.DirectoryEntry.Name%2A> of that object is "container".</span></span>  
  
```vb  
Dim myADSPath As String = "LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com"  
  
' Creates an Instance of DirectoryEntry.  
Dim myDirectoryEntry As New DirectoryEntry(myADSPath, UserName, SecurelyStoredPassword)  
  
' Display the 'SchemaClassName'.  
Console.WriteLine("Schema class name:" + myDirectoryEntry.SchemaClassName)  
  
' Gets the SchemaEntry of the ADS object.  
Dim mySchemaEntry As DirectoryEntry = myDirectoryEntry.SchemaEntry  
  
If String.Compare(mySchemaEntry.Name, "container") = 0 Then  
   Dim myChildDirectoryEntry As DirectoryEntry  
   For Each myChildDirectoryEntry In  myDirectoryEntry.Children  
      Console.WriteLine(myChildDirectoryEntry.Path)  
   Next  
```  
  
```csharp  
String myADSPath = "LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com";  
  
// Creates an Instance of DirectoryEntry.  
DirectoryEntry  myDirectoryEntry=new DirectoryEntry(myADSPath, UserName, SecurelyStoredPassword);  
  
// Display the 'SchemaClassName'.  
Console.WriteLine("Schema class name:" + myDirectoryEntry.SchemaClassName);  
  
// Gets the SchemaEntry of the ADS object.  
DirectoryEntry mySchemaEntry = myDirectoryEntry.SchemaEntry;  
  
if (string.Compare(mySchemaEntry.Name, "container") == 0)  
{  
   foreach(DirectoryEntry myChildDirectoryEntry in myDirectoryEntry.Children)  
      Console.WriteLine(myChildDirectoryEntry.Path);  
}  
```  
  
```cpp
String^ myADSPath = "LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com";  
  
// Creates an Instance of DirectoryEntry.  
DirectoryEntry^ myDirectoryEntry = gcnew DirectoryEntry(myADSPath, UserName, SecurelyStoredPassword);  
  
// Display the 'SchemaClassName'.  
Console::WriteLine("Schema class name:{0}", myDirectoryEntry->SchemaClassName);  
  
// Gets the SchemaEntry of the ADS Object.  
DirectoryEntry^ mySchemaEntry = myDirectoryEntry->SchemaEntry;  
  
if (!String::Compare(mySchemaEntry->Name, "container"))   
{  
    Collections::IEnumerator^ myEnum = myDirectoryEntry->Children->GetEnumerator();  
    while (myEnum->MoveNext())   
    {  
        DirectoryEntry^ myChildDirectoryEntry = safe_cast<DirectoryEntry^>(myEnum->Current);  
        Console::WriteLine(myChildDirectoryEntry->Path);  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DirectoryServices.DirectoryEntry.SchemaEntry" />
      </Docs>
    </Member>
    <Member MemberName="SchemaEntry">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DirectoryEntry SchemaEntry { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.DirectoryEntry SchemaEntry" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectoryEntry.SchemaEntry" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SchemaEntry As DirectoryEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::DirectoryEntry ^ SchemaEntry { System::DirectoryServices::DirectoryEntry ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaEntry : System.DirectoryServices.DirectoryEntry" Usage="System.DirectoryServices.DirectoryEntry.SchemaEntry" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.DirectoryServices.DSDescription("DSSchemaEntry")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectoryEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="770e7-338">获取此项的架构对象。</span><span class="sxs-lookup"><span data-stu-id="770e7-338">Gets the schema object for this entry.</span></span></summary>
        <value><span data-ttu-id="770e7-339">一个 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 对象，表示此项的架构类。</span><span class="sxs-lookup"><span data-stu-id="770e7-339">A <see cref="T:System.DirectoryServices.DirectoryEntry" /> object that represents the schema class for this entry.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="770e7-340">条目的架构确定其强制和可选属性名称的列表。</span><span class="sxs-lookup"><span data-stu-id="770e7-340">An entry's schema determines a list of its mandatory and optional property names.</span></span>  
  
 <span data-ttu-id="770e7-341">您可以使用此属性来找出关联对象上可用的属性和方法。</span><span class="sxs-lookup"><span data-stu-id="770e7-341">You can use this property to find out what properties and methods are available on the associated object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="770e7-342">下面的示例演示 <xref:System.DirectoryServices.DirectoryEntry> 类的 <xref:System.DirectoryServices.DirectoryEntry.SchemaClassName%2A> 和 <xref:System.DirectoryServices.DirectoryEntry.SchemaEntry%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="770e7-342">The following example demonstrates the <xref:System.DirectoryServices.DirectoryEntry.SchemaClassName%2A> and <xref:System.DirectoryServices.DirectoryEntry.SchemaEntry%2A> properties of the <xref:System.DirectoryServices.DirectoryEntry> class.</span></span> <span data-ttu-id="770e7-343">如果 <xref:System.DirectoryServices.DirectoryEntry.SchemaEntry%2A> 对象是一个容器对象，则此示例将获取用户指定的 <xref:System.DirectoryServices.DirectoryEntry> 对象并获取其所有子级。</span><span class="sxs-lookup"><span data-stu-id="770e7-343">This example gets the user-specified <xref:System.DirectoryServices.DirectoryEntry> object and gets all of its children if the <xref:System.DirectoryServices.DirectoryEntry.SchemaEntry%2A> object is a container object.</span></span>  <span data-ttu-id="770e7-344">如果对象的 <xref:System.DirectoryServices.DirectoryEntry.Name%2A> 为 "容器"，则 <xref:System.DirectoryServices.DirectoryEntry.SchemaEntry%2A> 是容器对象。</span><span class="sxs-lookup"><span data-stu-id="770e7-344">The <xref:System.DirectoryServices.DirectoryEntry.SchemaEntry%2A> is a container object if the <xref:System.DirectoryServices.DirectoryEntry.Name%2A> of that object is "container".</span></span>  
  
```vb  
Dim myADSPath As String = "LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com"  
  
' Creates an Instance of DirectoryEntry.  
Dim myDirectoryEntry As New DirectoryEntry(myADSPath, UserName, SecurelyStoredPassword)  
  
' Display the 'SchemaClassName'.  
Console.WriteLine("Schema class name:" + myDirectoryEntry.SchemaClassName)  
  
' Gets the SchemaEntry of the ADS object.  
Dim mySchemaEntry As DirectoryEntry = myDirectoryEntry.SchemaEntry  
  
If String.Compare(mySchemaEntry.Name, "container") = 0 Then  
   Dim myChildDirectoryEntry As DirectoryEntry  
   For Each myChildDirectoryEntry In  myDirectoryEntry.Children  
      Console.WriteLine(myChildDirectoryEntry.Path)  
   Next  
```  
  
```csharp  
String myADSPath = "LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com";  
  
// Creates an Instance of DirectoryEntry.  
DirectoryEntry  myDirectoryEntry=new DirectoryEntry(myADSPath, UserName, SecurelyStoredPassword);  
  
// Display the 'SchemaClassName'.  
Console.WriteLine("Schema class name:"+myDirectoryEntry.SchemaClassName);  
  
// Gets the SchemaEntry of the ADS object.  
DirectoryEntry mySchemaEntry = myDirectoryEntry.SchemaEntry;  
  
if (string.Compare(mySchemaEntry.Name,"container") == 0)  
{  
   foreach(DirectoryEntry myChildDirectoryEntry in myDirectoryEntry.Children)  
      Console.WriteLine(myChildDirectoryEntry.Path);  
}  
  
```  
  
```cpp
String^ myADSPath = "LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com";  
  
// Creates an Instance of DirectoryEntry.  
DirectoryEntry^ myDirectoryEntry = gcnew DirectoryEntry(myADSPath, UserName, SecurelyStoredPassword);  
  
// Display the 'SchemaClassName'.  
Console::WriteLine("Schema class name:{0}", myDirectoryEntry->SchemaClassName);  
  
// Gets the SchemaEntry of the ADS Object*.  
DirectoryEntry^ mySchemaEntry = myDirectoryEntry->SchemaEntry;  
  
if (!String::Compare(mySchemaEntry->Name, S"container"))   
{  
    Collections::IEnumerator^ myEnum = myDirectoryEntry->Children->GetEnumerator();  
    while (myEnum->MoveNext())   
    {  
        DirectoryEntry^ myChildDirectoryEntry = safe_cast<DirectoryEntry^>(myEnum->Current);  
        Console::WriteLine(myChildDirectoryEntry->Path);  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DirectoryServices.DirectoryEntry.SchemaClassName" />
      </Docs>
    </Member>
    <Member MemberName="UsePropertyCache">
      <MemberSignature Language="C#" Value="public bool UsePropertyCache { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsePropertyCache" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectoryEntry.UsePropertyCache" />
      <MemberSignature Language="VB.NET" Value="Public Property UsePropertyCache As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsePropertyCache { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UsePropertyCache : bool with get, set" Usage="System.DirectoryServices.DirectoryEntry.UsePropertyCache" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.DirectoryServices.DSDescription("DSUsePropertyCache")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="770e7-345">获取或设置一个值，该值指示在每次运算之后是否应提交缓存。</span><span class="sxs-lookup"><span data-stu-id="770e7-345">Gets or sets a value indicating whether the cache should be committed after each operation.</span></span></summary>
        <value><span data-ttu-id="770e7-346">如果在每次运算之后不应提交缓存，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="770e7-346"><see langword="true" /> if the cache should not be committed after each operation; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="770e7-347">默认为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="770e7-347">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="770e7-348">默认情况下，对属性所做的更改将在本地对缓存进行，并且在第一次读取后缓存属性值。</span><span class="sxs-lookup"><span data-stu-id="770e7-348">By default, changes to properties are made locally to a cache, and property values to be read are cached after the first read.</span></span> <span data-ttu-id="770e7-349">当 `true`<xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A> 属性时，<xref:System.DirectoryServices.DirectoryEntry> 对象属性的访问速度会更快。</span><span class="sxs-lookup"><span data-stu-id="770e7-349">When the <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A> property is `true`, access to the <xref:System.DirectoryServices.DirectoryEntry> object's properties is faster.</span></span> <span data-ttu-id="770e7-350">将此设置为 `false` 会导致在每次操作后提交缓存。</span><span class="sxs-lookup"><span data-stu-id="770e7-350">Setting this to `false` will cause the cache to be committed after each operation.</span></span>  
  
 <span data-ttu-id="770e7-351">如果 <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A> 属性 `true` 并且要提交缓存的更改，请调用 <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="770e7-351">If the <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A> property is `true` and you want to commit cached changes, call the <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> method.</span></span> <span data-ttu-id="770e7-352">若要在对目录进行更改后更新缓存中的值，请调用 <xref:System.DirectoryServices.DirectoryEntry.RefreshCache%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="770e7-352">To update values in the cache after changes to the directory are made, call the <xref:System.DirectoryServices.DirectoryEntry.RefreshCache%2A> method.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="770e7-353">如果在调用 <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A>之前调用 <xref:System.DirectoryServices.DirectoryEntry.RefreshCache%2A>，则对属性缓存的任何未提交的更改都将丢失。</span><span class="sxs-lookup"><span data-stu-id="770e7-353">If you call <xref:System.DirectoryServices.DirectoryEntry.RefreshCache%2A> before calling <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A>, any uncommitted changes to the property cache will be lost.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="770e7-354">Internet Information Services （IIS）提供程序不支持每次操作后提交缓存。</span><span class="sxs-lookup"><span data-stu-id="770e7-354">The Internet Information Services (IIS) provider does not support committing the cache after each operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DirectoryServices.DirectoryEntry.CommitChanges" />
        <altmember cref="M:System.DirectoryServices.DirectoryEntry.RefreshCache" />
      </Docs>
    </Member>
    <Member MemberName="Username">
      <MemberSignature Language="C#" Value="public string Username { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Username" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectoryEntry.Username" />
      <MemberSignature Language="VB.NET" Value="Public Property Username As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Username { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Username : string with get, set" Usage="System.DirectoryServices.DirectoryEntry.Username" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.DirectoryServices.DSDescription("DSUsername")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="770e7-355">获取或设置在对客户端进行身份验证时使用的用户名。</span><span class="sxs-lookup"><span data-stu-id="770e7-355">Gets or sets the user name to use when authenticating the client.</span></span></summary>
        <value><span data-ttu-id="770e7-356">在对客户端进行身份验证时要使用的用户名。</span><span class="sxs-lookup"><span data-stu-id="770e7-356">The user name to use when authenticating the client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="770e7-357">可以设置 <xref:System.DirectoryServices.DirectoryEntry.Username%2A> 和 <xref:System.DirectoryServices.DirectoryEntry.Password%2A>，以指定用于访问 Active Directory 域服务中信息的备用凭据。</span><span class="sxs-lookup"><span data-stu-id="770e7-357">You can set the <xref:System.DirectoryServices.DirectoryEntry.Username%2A> and <xref:System.DirectoryServices.DirectoryEntry.Password%2A> in order to specify alternate credentials with which to access the information in Active Directory Domain Services.</span></span> <span data-ttu-id="770e7-358">从此实例检索到的任何其他 <xref:System.DirectoryServices.DirectoryEntry> 对象（例如，通过 <xref:System.DirectoryServices.DirectoryEntry.Children%2A>）都是使用相同的备用凭据自动创建的。</span><span class="sxs-lookup"><span data-stu-id="770e7-358">Any other <xref:System.DirectoryServices.DirectoryEntry> objects retrieved from this instance (for example, through <xref:System.DirectoryServices.DirectoryEntry.Children%2A>) are automatically created with the same alternate credentials.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="770e7-359">下面的示例演示 <xref:System.DirectoryServices.DirectoryEntry> 类的 <xref:System.DirectoryServices.DirectoryEntry.Username%2A> 和 <xref:System.DirectoryServices.DirectoryEntry.Password%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="770e7-359">The following example demonstrates the <xref:System.DirectoryServices.DirectoryEntry.Username%2A> and <xref:System.DirectoryServices.DirectoryEntry.Password%2A> properties of the <xref:System.DirectoryServices.DirectoryEntry> class.</span></span> <span data-ttu-id="770e7-360">此示例获取用户指定的 <xref:System.DirectoryServices.DirectoryEntry> 及其所有 <xref:System.DirectoryServices.DirectoryEntry.Children%2A>的 <xref:System.DirectoryServices.DirectoryEntry.Path%2A>。</span><span class="sxs-lookup"><span data-stu-id="770e7-360">This example gets the user-specified <xref:System.DirectoryServices.DirectoryEntry> and the <xref:System.DirectoryServices.DirectoryEntry.Path%2A> of all its <xref:System.DirectoryServices.DirectoryEntry.Children%2A>.</span></span>  
  
```vb  
Dim myADSPath As String = _  
      "LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com"  
  
' Create an Instance of DirectoryEntry.  
Dim myDirectoryEntry As New DirectoryEntry(myADSPath)  
myDirectoryEntry.Username = UserName  
myDirectoryEntry.Password = SecurelyStoredPassword  
  
' Get the Child ADS objects.  
Console.WriteLine("The Child ADS objects are:")  
Dim myChildDirectoryEntry As DirectoryEntry  
For Each myChildDirectoryEntry In  myDirectoryEntry.Children  
   Console.WriteLine(myChildDirectoryEntry.Path)  
Next myChildDirectoryEntry  
```  
  
```csharp  
String myADSPath = "LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com";  
  
// Create an Instance of DirectoryEntry.  
DirectoryEntry myDirectoryEntry = new DirectoryEntry(myADSPath);  
myDirectoryEntry.Username = UserName;  
myDirectoryEntry.Password = SecurelyStoredPassword;  
  
// Get the Child ADS objects.  
Console.WriteLine("The Child ADS objects are:");  
foreach(DirectoryEntry myChildDirectoryEntry in myDirectoryEntry.Children)  
   Console.WriteLine(myChildDirectoryEntry.Path);  
```  
  
```cpp
String^ myADSPath = "LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com";  
  
// Create an Instance of DirectoryEntry.  
DirectoryEntry^ myDirectoryEntry = new DirectoryEntry(myADSPath);  
myDirectoryEntry->Username = UserName;  
myDirectoryEntry->Password = SecurelyStoredPassword;  
  
// Get the Child ADS objects.  
Console::WriteLine("The Child ADS objects are:");  
Collections::IEnumerator^ myEnum = myDirectoryEntry->Children->GetEnumerator();  
while (myEnum->MoveNext())   
{  
    DirectoryEntry^ myChildDirectoryEntry = safe_cast<DirectoryEntry^>(myEnum->Current);  
    Console::WriteLine(myChildDirectoryEntry->Path);  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DirectoryServices.DirectoryEntry.Password" />
      </Docs>
    </Member>
  </Members>
</Type>
