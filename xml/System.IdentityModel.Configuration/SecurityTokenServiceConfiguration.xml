<Type Name="SecurityTokenServiceConfiguration" FullName="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0cfafac096204932f4a83b0527b6d9a8162aa3ca" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="86322580" /></Metadata><TypeSignature Language="C#" Value="public class SecurityTokenServiceConfiguration : System.IdentityModel.Configuration.IdentityConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SecurityTokenServiceConfiguration extends System.IdentityModel.Configuration.IdentityConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Class SecurityTokenServiceConfiguration&#xA;Inherits IdentityConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityTokenServiceConfiguration : System::IdentityModel::Configuration::IdentityConfiguration" />
  <TypeSignature Language="F#" Value="type SecurityTokenServiceConfiguration = class&#xA;    inherit IdentityConfiguration" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Configuration.IdentityConfiguration</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>定义安全象征服务的配置 (STS)。 实现 STSs 从 <see cref="T:System.IdentityModel.SecurityTokenService" /> 类派生的类。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 本主题中使用的代码示例 <xref:System.IdentityModel.SecurityTokenService> 摘自 `Custom Token` 示例。 此示例提供了一些自定义类，使你能够处理 (SWT) 的简单 Web 令牌，并包括能够为 SWT 令牌提供服务的被动 STS 的实现。 有关如何实现活动 STS 的示例，请参阅 `Federation Metadata` 示例。 有关这些示例以及可用于 WIF 的其他示例以及要从何处下载这些示例和其他示例的信息，请参阅 [WIF 代码示例索引](https://docs.microsoft.com/previous-versions/dotnet/framework/security/wif-code-sample-index)。 下面的代码演示类的自定义实现， <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration> 以支持处理 SWT 令牌的被动 STS。 首次访问静态属性时，将初始化配置并将其存储在 HTTP 应用程序状态中 `Current` 。 构造函数使用自定义 STS 的类型、自定义颁发者标记解析程序和默认标记类型（ () 的 SWT 标记类型的 URI）初始化自定义配置的属性。 它还将 SWT 标记处理程序添加到默认处理程序集合。  
  
 [!code-csharp[WIFCustomTokenSTS#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenserviceconfiguration.cs#2)]  
  
 下面的代码演示如何通过 <xref:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessRequest%28System.Web.HttpRequest%2CSystem.Security.Claims.ClaimsPrincipal%2CSystem.IdentityModel.SecurityTokenService%2CSystem.Web.HttpResponse%29?displayProperty=nameWithType> 从文件中的代码调用方法来调用自定义被动 STS 来处理 WS 联合身份验证请求 `default.aspx.cs` 。 <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.CreateSecurityTokenService%2A>方法 `PassiveSTS.CustomSecurityTokenService` 使用在 `CustomSecurityTokenServiceConfiguration` 前面的示例中所示的类上设置的属性初始化类的实例。  
  
 [!code-csharp[WIFCustomTokenSTS#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/default.aspx.cs#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.SecurityTokenService" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityTokenServiceConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityTokenServiceConfiguration();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A>必须先设置属性，然后才能使用 security token service 来创建令牌。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityTokenServiceConfiguration (bool loadConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool loadConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (loadConfig As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityTokenServiceConfiguration(bool loadConfig);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration : bool -&gt; System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" Usage="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration loadConfig" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="loadConfig" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="loadConfig">如果从配置文件中加载设置，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>初始化 <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> 类的新实例。 从当前配置选择性加载设置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A>必须先设置属性，然后才能使用 security token service 来创建令牌。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityTokenServiceConfiguration (string issuerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string issuerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (issuerName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityTokenServiceConfiguration(System::String ^ issuerName);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration : string -&gt; System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" Usage="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration issuerName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="issuerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="issuerName">发行人名称。 设置 <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName" /> 属性。</param>
        <summary>初始化 <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> 类的一个新实例，该类具有指定的颁发人名。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 `issuerName` 为 `null` ，则 <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> 必须先设置属性，然后才能使用 security token service 来创建令牌。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityTokenServiceConfiguration (string issuerName, bool loadConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string issuerName, bool loadConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (issuerName As String, loadConfig As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityTokenServiceConfiguration(System::String ^ issuerName, bool loadConfig);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration : string * bool -&gt; System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" Usage="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration (issuerName, loadConfig)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="issuerName" Type="System.String" />
        <Parameter Name="loadConfig" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="issuerName">发行人名称。 设置 <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName" /> 属性。</param>
        <param name="loadConfig">如果从配置文件中加载设置，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>初始化 <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> 类的一个新实例，该类具有指定的颁发人名。 从当前配置选择性加载设置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 `issuerName` 为 `null` ，则 <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> 必须先设置属性，然后才能使用 security token service 来创建令牌。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityTokenServiceConfiguration (string issuerName, System.IdentityModel.Tokens.SigningCredentials signingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string issuerName, class System.IdentityModel.Tokens.SigningCredentials signingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (issuerName As String, signingCredentials As SigningCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityTokenServiceConfiguration(System::String ^ issuerName, System::IdentityModel::Tokens::SigningCredentials ^ signingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration : string * System.IdentityModel.Tokens.SigningCredentials -&gt; System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" Usage="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration (issuerName, signingCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="issuerName" Type="System.String" />
        <Parameter Name="signingCredentials" Type="System.IdentityModel.Tokens.SigningCredentials" />
      </Parameters>
      <Docs>
        <param name="issuerName">发行人名称。 设置 <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName" /> 属性。</param>
        <param name="signingCredentials">STS 的签名凭据。 设置 <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SigningCredentials" /> 属性。</param>
        <summary>初始化具有指定颁发人名称和签名凭据的 <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 `issuerName` 为 `null` ，则 <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> 必须先设置属性，然后才能使用 security token service 来创建令牌。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityTokenServiceConfiguration (string issuerName, System.IdentityModel.Tokens.SigningCredentials signingCredentials, bool loadConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string issuerName, class System.IdentityModel.Tokens.SigningCredentials signingCredentials, bool loadConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (issuerName As String, signingCredentials As SigningCredentials, loadConfig As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityTokenServiceConfiguration(System::String ^ issuerName, System::IdentityModel::Tokens::SigningCredentials ^ signingCredentials, bool loadConfig);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration : string * System.IdentityModel.Tokens.SigningCredentials * bool -&gt; System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" Usage="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration (issuerName, signingCredentials, loadConfig)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="issuerName" Type="System.String" />
        <Parameter Name="signingCredentials" Type="System.IdentityModel.Tokens.SigningCredentials" />
        <Parameter Name="loadConfig" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="issuerName">发行人名称。 设置 <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName" /> 属性。</param>
        <param name="signingCredentials">STS 的签名凭据。 设置 <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SigningCredentials" /> 属性。</param>
        <param name="loadConfig">如果从配置文件中加载设置，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>初始化具有指定颁发人名称和签名凭据的 <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> 类的新实例。 从当前配置选择性加载设置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 `issuerName` 为 `null` ，则 <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> 必须先设置属性，然后才能使用 security token service 来创建令牌。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityTokenServiceConfiguration (string issuerName, System.IdentityModel.Tokens.SigningCredentials signingCredentials, string serviceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string issuerName, class System.IdentityModel.Tokens.SigningCredentials signingCredentials, string serviceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (issuerName As String, signingCredentials As SigningCredentials, serviceName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityTokenServiceConfiguration(System::String ^ issuerName, System::IdentityModel::Tokens::SigningCredentials ^ signingCredentials, System::String ^ serviceName);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration : string * System.IdentityModel.Tokens.SigningCredentials * string -&gt; System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" Usage="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration (issuerName, signingCredentials, serviceName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="issuerName" Type="System.String" />
        <Parameter Name="signingCredentials" Type="System.IdentityModel.Tokens.SigningCredentials" />
        <Parameter Name="serviceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="issuerName">发行人名称。 设置 <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName" /> 属性。</param>
        <param name="signingCredentials">STS 的签名凭据。 设置 <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SigningCredentials" /> 属性。</param>
        <param name="serviceName">从中加载配置的 <see langword="&lt;identityConfiguration&gt;" /> 元素的名称。</param>
        <summary>初始化具有指定颁发人名称和签名凭据的 <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> 类的新实例。 设置从指定命名配置中加载。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 `issuerName` 为 `null` ，则 <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> 必须先设置属性，然后才能使用 security token service 来创建令牌。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenService">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.SecurityTokenService CreateSecurityTokenService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.SecurityTokenService CreateSecurityTokenService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.CreateSecurityTokenService" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSecurityTokenService () As SecurityTokenService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::SecurityTokenService ^ CreateSecurityTokenService();" />
      <MemberSignature Language="F#" Value="abstract member CreateSecurityTokenService : unit -&gt; System.IdentityModel.SecurityTokenService&#xA;override this.CreateSecurityTokenService : unit -&gt; System.IdentityModel.SecurityTokenService" Usage="securityTokenServiceConfiguration.CreateSecurityTokenService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.SecurityTokenService</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从 <see cref="T:System.Type" /> 属性中指定的 <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SecurityTokenService" /> 创建安全标记服务 (STS) 实例。</summary>
        <returns><see cref="T:System.Type" /> 属性中指定的 <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SecurityTokenService" /> 实例。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 属性中指定的类 <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SecurityTokenService%2A> 必须实现采用类型为的参数的构造函数 <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration> 。  
  
   
  
## Examples  
 本主题中使用的代码示例 <xref:System.IdentityModel.SecurityTokenService> 摘自 `Custom Token` 示例。 此示例提供了一些自定义类，使你能够处理 (SWT) 的简单 Web 令牌，并包括能够为 SWT 令牌提供服务的被动 STS 的实现。 有关如何实现活动 STS 的示例，请参阅 `Federation Metadata` 示例。 有关这些示例以及可用于 WIF 的其他示例以及要从何处下载这些示例和其他示例的信息，请参阅 [WIF 代码示例索引](https://docs.microsoft.com/previous-versions/dotnet/framework/security/wif-code-sample-index)。 下面的代码演示类的自定义实现， <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration> 以支持处理 SWT 令牌的被动 STS。 首次访问静态属性时，将初始化配置并将其存储在 HTTP 应用程序状态中 `Current` 。 构造函数使用自定义 STS 的类型、自定义颁发者标记解析程序和默认标记类型（ () 的 SWT 标记类型的 URI）初始化自定义配置的属性。 它还将 SWT 标记处理程序添加到默认处理程序集合。  
  
 下面的代码演示如何通过 <xref:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessRequest%28System.Web.HttpRequest%2CSystem.Security.Claims.ClaimsPrincipal%2CSystem.IdentityModel.SecurityTokenService%2CSystem.Web.HttpResponse%29?displayProperty=nameWithType> 从文件中的代码调用方法来调用自定义被动 STS 来处理 WS 联合身份验证请求 `default.aspx.cs` 。 <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.CreateSecurityTokenService%2A>方法 `PassiveSTS.CustomSecurityTokenService` 使用当前对象上设置的属性初始化类的实例 `CustomSecurityTokenServiceConfiguration` 。 `CustomSecurityTokenServiceConfiguration.Current`属性由 `CustomSecurityTokenServiceConfiguration` 类实现，并返回在 HTTP 应用程序状态中保存的类的实例。  
  
 [!code-csharp[WIFCustomTokenSTS#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/default.aspx.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultMaxSymmetricKeySizeInBits">
      <MemberSignature Language="C#" Value="public int DefaultMaxSymmetricKeySizeInBits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultMaxSymmetricKeySizeInBits" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultMaxSymmetricKeySizeInBits" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultMaxSymmetricKeySizeInBits As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DefaultMaxSymmetricKeySizeInBits { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMaxSymmetricKeySizeInBits : int with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultMaxSymmetricKeySizeInBits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置如果选中，则请求中指定的 KeySize 是否位于此限制内的默认密钥大小。</summary>
        <value>默认密钥大小限制（以位为单位）。 默认值为1024。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 这仅适用于对称密钥情况。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSymmetricKeySizeInBits">
      <MemberSignature Language="C#" Value="public int DefaultSymmetricKeySizeInBits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultSymmetricKeySizeInBits" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultSymmetricKeySizeInBits" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultSymmetricKeySizeInBits As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DefaultSymmetricKeySizeInBits { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSymmetricKeySizeInBits : int with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultSymmetricKeySizeInBits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置颁发的令牌中使用的默认密钥大小（位）。</summary>
        <value>在颁发的令牌中使用的密钥大小（以位为单位）。 默认值为 256。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 这仅适用于对称密钥情况。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTokenLifetime">
      <MemberSignature Language="C#" Value="public TimeSpan DefaultTokenLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultTokenLifetime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultTokenLifetime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan DefaultTokenLifetime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultTokenLifetime : TimeSpan with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置颁发的令牌中使用的默认生命周期。</summary>
        <value>要在已颁发令牌中使用的默认生存期。 默认值为 1 天。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTokenType">
      <MemberSignature Language="C#" Value="public string DefaultTokenType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultTokenType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenType" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultTokenType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultTokenType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultTokenType : string with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置令牌颁发中使用的默认令牌类型。</summary>
        <value>一个字符串，其中包含默认标记类型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 字符串值以 URI 格式指定;例如，对于 SAML 1.1 令牌类型，以下为字符串值： `http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV1.1` 。  
  
 默认标记类型设置为 SAML 1.1。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">指定值为 <see langword="null" /> 或为空。</exception>
        <exception cref="T:System.ArgumentException">指定值未在标记处理程序中定义。</exception>
      </Docs>
    </Member>
    <Member MemberName="DisableWsdl">
      <MemberSignature Language="C#" Value="public bool DisableWsdl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableWsdl" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DisableWsdl" />
      <MemberSignature Language="VB.NET" Value="Public Property DisableWsdl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisableWsdl { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisableWsdl : bool with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DisableWsdl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指定是否应为安全标记服务 (STS)启用启用 WSDL 生成。</summary>
        <value>若要 STS 启用 WSDL 生成，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumTokenLifetime">
      <MemberSignature Language="C#" Value="public TimeSpan MaximumTokenLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MaximumTokenLifetime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.MaximumTokenLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumTokenLifetime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MaximumTokenLifetime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumTokenLifetime : TimeSpan with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.MaximumTokenLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置已颁发标识的最大标识生存期。</summary>
        <value>用于颁布令牌的最长令牌生命期。 默认值为 1 天。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenService">
      <MemberSignature Language="C#" Value="public Type SecurityTokenService { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type SecurityTokenService" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SecurityTokenService" />
      <MemberSignature Language="VB.NET" Value="Public Property SecurityTokenService As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ SecurityTokenService { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SecurityTokenService : Type with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SecurityTokenService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置安全标记服务 (STS) 的 <see cref="T:System.Type" />。</summary>
        <value>安全令牌服务的类型。 此类型必须派生自<see cref="T:System.IdentityModel.SecurityTokenService" /> 类。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 属性中指定的类 <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SecurityTokenService%2A> 必须实现采用类型为的参数的构造函数 <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">所指定的值不能赋值为 <see cref="T:System.IdentityModel.SecurityTokenService" />。</exception>
        <exception cref="T:System.ArgumentNullException">指定的值为 <see langword="null" />。</exception>
        <altmember cref="M:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.CreateSecurityTokenService" />
      </Docs>
    </Member>
    <Member MemberName="SigningCredentials">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SigningCredentials SigningCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SigningCredentials SigningCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SigningCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property SigningCredentials As SigningCredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SigningCredentials ^ SigningCredentials { System::IdentityModel::Tokens::SigningCredentials ^ get(); void set(System::IdentityModel::Tokens::SigningCredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SigningCredentials : System.IdentityModel.Tokens.SigningCredentials with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SigningCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SigningCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置签名凭据。</summary>
        <value>签名凭据。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  实现有效的安全令牌服务 (STS) 时，将忽略 <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SigningCredentials%2A> 属性。 相反，您必须通过承载您的 STS 的服务主机上的 <xref:System.ServiceModel.ServiceHostBase.Credentials%2A> 属性设置服务证书。 用于有效的 STS 的服务主机由 <xref:System.ServiceModel.Security.WSTrustServiceHost> 类表示。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenIssuerName">
      <MemberSignature Language="C#" Value="public string TokenIssuerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TokenIssuerName" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName" />
      <MemberSignature Language="VB.NET" Value="Public Property TokenIssuerName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TokenIssuerName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TokenIssuerName : string with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置颁发者名称，以便在已颁发令牌中设置它。</summary>
        <value>发行人名称。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">尝试将此属性设置为 <see langword="null" /> 或者空字符串。</exception>
      </Docs>
    </Member>
    <Member MemberName="WSTrust13RequestSerializer">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.WSTrust13RequestSerializer WSTrust13RequestSerializer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.WSTrust13RequestSerializer WSTrust13RequestSerializer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.WSTrust13RequestSerializer" />
      <MemberSignature Language="VB.NET" Value="Public Property WSTrust13RequestSerializer As WSTrust13RequestSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::WSTrust13RequestSerializer ^ WSTrust13RequestSerializer { System::IdentityModel::Protocols::WSTrust::WSTrust13RequestSerializer ^ get(); void set(System::IdentityModel::Protocols::WSTrust::WSTrust13RequestSerializer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WSTrust13RequestSerializer : System.IdentityModel.Protocols.WSTrust.WSTrust13RequestSerializer with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.WSTrust13RequestSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.WSTrust13RequestSerializer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 WS-Trust 1.3 请求 (RST) 序列化程序。</summary>
        <value>WS-Trust1.3 Request (RST) 序列化程序。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">指定的值为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="WSTrust13ResponseSerializer">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.WSTrust13ResponseSerializer WSTrust13ResponseSerializer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.WSTrust13ResponseSerializer WSTrust13ResponseSerializer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.WSTrust13ResponseSerializer" />
      <MemberSignature Language="VB.NET" Value="Public Property WSTrust13ResponseSerializer As WSTrust13ResponseSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::WSTrust13ResponseSerializer ^ WSTrust13ResponseSerializer { System::IdentityModel::Protocols::WSTrust::WSTrust13ResponseSerializer ^ get(); void set(System::IdentityModel::Protocols::WSTrust::WSTrust13ResponseSerializer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WSTrust13ResponseSerializer : System.IdentityModel.Protocols.WSTrust.WSTrust13ResponseSerializer with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.WSTrust13ResponseSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.WSTrust13ResponseSerializer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 WS-Trust 1.3 响应 (RSTR) 序列化程序。</summary>
        <value>WS-Trust1.3 Response (RSTR) 序列化程序。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">指定的值为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="WSTrustFeb2005RequestSerializer">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.WSTrustFeb2005RequestSerializer WSTrustFeb2005RequestSerializer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.WSTrustFeb2005RequestSerializer WSTrustFeb2005RequestSerializer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.WSTrustFeb2005RequestSerializer" />
      <MemberSignature Language="VB.NET" Value="Public Property WSTrustFeb2005RequestSerializer As WSTrustFeb2005RequestSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::WSTrustFeb2005RequestSerializer ^ WSTrustFeb2005RequestSerializer { System::IdentityModel::Protocols::WSTrust::WSTrustFeb2005RequestSerializer ^ get(); void set(System::IdentityModel::Protocols::WSTrust::WSTrustFeb2005RequestSerializer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WSTrustFeb2005RequestSerializer : System.IdentityModel.Protocols.WSTrust.WSTrustFeb2005RequestSerializer with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.WSTrustFeb2005RequestSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.WSTrustFeb2005RequestSerializer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 WS-Trust Feb 2005 请求 (RST) 序列化程序。</summary>
        <value>WS-Trust Feb 2005 Request (RST) 序列化程序。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">指定的值为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="WSTrustFeb2005ResponseSerializer">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.WSTrustFeb2005ResponseSerializer WSTrustFeb2005ResponseSerializer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.WSTrustFeb2005ResponseSerializer WSTrustFeb2005ResponseSerializer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.WSTrustFeb2005ResponseSerializer" />
      <MemberSignature Language="VB.NET" Value="Public Property WSTrustFeb2005ResponseSerializer As WSTrustFeb2005ResponseSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::WSTrustFeb2005ResponseSerializer ^ WSTrustFeb2005ResponseSerializer { System::IdentityModel::Protocols::WSTrust::WSTrustFeb2005ResponseSerializer ^ get(); void set(System::IdentityModel::Protocols::WSTrust::WSTrustFeb2005ResponseSerializer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WSTrustFeb2005ResponseSerializer : System.IdentityModel.Protocols.WSTrust.WSTrustFeb2005ResponseSerializer with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.WSTrustFeb2005ResponseSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.WSTrustFeb2005ResponseSerializer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 WS-Trust Feb 2005 响应 (RSTR) 序列化程序。</summary>
        <value>WS-Trust Feb 2005 Response (RSTR) 序列化程序。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">指定的值为 <see langword="null" />。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
