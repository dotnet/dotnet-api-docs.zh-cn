<Type Name="SecurityTokenServiceConfiguration" FullName="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0cfafac096204932f4a83b0527b6d9a8162aa3ca" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="86322580" /></Metadata><TypeSignature Language="C#" Value="public class SecurityTokenServiceConfiguration : System.IdentityModel.Configuration.IdentityConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SecurityTokenServiceConfiguration extends System.IdentityModel.Configuration.IdentityConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Class SecurityTokenServiceConfiguration&#xA;Inherits IdentityConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityTokenServiceConfiguration : System::IdentityModel::Configuration::IdentityConfiguration" />
  <TypeSignature Language="F#" Value="type SecurityTokenServiceConfiguration = class&#xA;    inherit IdentityConfiguration" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Configuration.IdentityConfiguration</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="cfa79-101">定义安全象征服务的配置 (STS)。</span><span class="sxs-lookup"><span data-stu-id="cfa79-101">Defines the configuration for a security token service (STS).</span></span> <span data-ttu-id="cfa79-102">实现 STSs 从 <see cref="T:System.IdentityModel.SecurityTokenService" /> 类派生的类。</span><span class="sxs-lookup"><span data-stu-id="cfa79-102">Classes that implement STSs derive from the <see cref="T:System.IdentityModel.SecurityTokenService" /> class.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cfa79-103">本主题中使用的代码示例 <xref:System.IdentityModel.SecurityTokenService> 摘自 `Custom Token` 示例。</span><span class="sxs-lookup"><span data-stu-id="cfa79-103">The code examples that are used in the <xref:System.IdentityModel.SecurityTokenService> topics are taken from the `Custom Token` sample.</span></span> <span data-ttu-id="cfa79-104">此示例提供了一些自定义类，使你能够处理 (SWT) 的简单 Web 令牌，并包括能够为 SWT 令牌提供服务的被动 STS 的实现。</span><span class="sxs-lookup"><span data-stu-id="cfa79-104">This sample provides custom classes that enable processing of Simple Web Tokens (SWT) and it includes an implementation of a passive STS that is capable of serving an SWT token.</span></span> <span data-ttu-id="cfa79-105">有关如何实现活动 STS 的示例，请参阅 `Federation Metadata` 示例。</span><span class="sxs-lookup"><span data-stu-id="cfa79-105">For an example of how to implement an active STS, you can see the `Federation Metadata` sample.</span></span> <span data-ttu-id="cfa79-106">有关这些示例以及可用于 WIF 的其他示例以及要从何处下载这些示例和其他示例的信息，请参阅 [WIF 代码示例索引](https://docs.microsoft.com/previous-versions/dotnet/framework/security/wif-code-sample-index)。</span><span class="sxs-lookup"><span data-stu-id="cfa79-106">For information about these samples and other samples available for WIF and about where to download them, see [WIF Code Sample Index](https://docs.microsoft.com/previous-versions/dotnet/framework/security/wif-code-sample-index).</span></span> <span data-ttu-id="cfa79-107">下面的代码演示类的自定义实现， <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration> 以支持处理 SWT 令牌的被动 STS。</span><span class="sxs-lookup"><span data-stu-id="cfa79-107">The following code shows a custom implementation of the <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration> class to support a passive STS that processes SWT tokens.</span></span> <span data-ttu-id="cfa79-108">首次访问静态属性时，将初始化配置并将其存储在 HTTP 应用程序状态中 `Current` 。</span><span class="sxs-lookup"><span data-stu-id="cfa79-108">The configuration is initialized and stored in the HTTP application state the first time the static `Current` property is accessed.</span></span> <span data-ttu-id="cfa79-109">构造函数使用自定义 STS 的类型、自定义颁发者标记解析程序和默认标记类型（ () 的 SWT 标记类型的 URI）初始化自定义配置的属性。</span><span class="sxs-lookup"><span data-stu-id="cfa79-109">The constructor initializes the properties of the custom configuration with the type of the custom STS, a custom issuer token resolver, and the default token type (the URI of the SWT token type).</span></span> <span data-ttu-id="cfa79-110">它还将 SWT 标记处理程序添加到默认处理程序集合。</span><span class="sxs-lookup"><span data-stu-id="cfa79-110">It also adds an SWT token handler to the default handler collection.</span></span>  
  
 [!code-csharp[WIFCustomTokenSTS#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenserviceconfiguration.cs#2)]  
  
 <span data-ttu-id="cfa79-111">下面的代码演示如何通过 <xref:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessRequest%28System.Web.HttpRequest%2CSystem.Security.Claims.ClaimsPrincipal%2CSystem.IdentityModel.SecurityTokenService%2CSystem.Web.HttpResponse%29?displayProperty=nameWithType> 从文件中的代码调用方法来调用自定义被动 STS 来处理 WS 联合身份验证请求 `default.aspx.cs` 。</span><span class="sxs-lookup"><span data-stu-id="cfa79-111">The following code shows how to invoke a custom passive STS to process a WS-Federation request by calling the <xref:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessRequest%28System.Web.HttpRequest%2CSystem.Security.Claims.ClaimsPrincipal%2CSystem.IdentityModel.SecurityTokenService%2CSystem.Web.HttpResponse%29?displayProperty=nameWithType> method from the code behind in the `default.aspx.cs` file.</span></span> <span data-ttu-id="cfa79-112"><xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.CreateSecurityTokenService%2A>方法 `PassiveSTS.CustomSecurityTokenService` 使用在 `CustomSecurityTokenServiceConfiguration` 前面的示例中所示的类上设置的属性初始化类的实例。</span><span class="sxs-lookup"><span data-stu-id="cfa79-112">The <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.CreateSecurityTokenService%2A> method initializes an instance of the `PassiveSTS.CustomSecurityTokenService` class using the properties set on the `CustomSecurityTokenServiceConfiguration` class shown in the previous example.</span></span>  
  
 [!code-csharp[WIFCustomTokenSTS#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/default.aspx.cs#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.SecurityTokenService" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cfa79-113">初始化 <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="cfa79-113">Initializes a new instance of the <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityTokenServiceConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityTokenServiceConfiguration();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cfa79-114">初始化 <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="cfa79-114">Initializes a new instance of the <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfa79-115"><xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A>必须先设置属性，然后才能使用 security token service 来创建令牌。</span><span class="sxs-lookup"><span data-stu-id="cfa79-115">The <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> property must be set before the security token service is used to create a token.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityTokenServiceConfiguration (bool loadConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool loadConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (loadConfig As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityTokenServiceConfiguration(bool loadConfig);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration : bool -&gt; System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" Usage="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration loadConfig" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="loadConfig" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="loadConfig"><span data-ttu-id="cfa79-116">如果从配置文件中加载设置，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cfa79-116"><see langword="true" /> to load settings from the configuration file; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="cfa79-117">初始化 <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="cfa79-117">Initializes a new instance of the <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> class.</span></span> <span data-ttu-id="cfa79-118">从当前配置选择性加载设置。</span><span class="sxs-lookup"><span data-stu-id="cfa79-118">Optionally loads settings from the current configuration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfa79-119"><xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A>必须先设置属性，然后才能使用 security token service 来创建令牌。</span><span class="sxs-lookup"><span data-stu-id="cfa79-119">The <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> property must be set before the security token service is used to create a token.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityTokenServiceConfiguration (string issuerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string issuerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (issuerName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityTokenServiceConfiguration(System::String ^ issuerName);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration : string -&gt; System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" Usage="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration issuerName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="issuerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="issuerName"><span data-ttu-id="cfa79-120">发行人名称。</span><span class="sxs-lookup"><span data-stu-id="cfa79-120">The issuer name.</span></span> <span data-ttu-id="cfa79-121">设置 <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="cfa79-121">Sets the <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName" /> property.</span></span></param>
        <summary><span data-ttu-id="cfa79-122">初始化 <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> 类的一个新实例，该类具有指定的颁发人名。</span><span class="sxs-lookup"><span data-stu-id="cfa79-122">Initializes a new instance of the <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> class that has the specified issuer name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfa79-123">如果 `issuerName` 为 `null` ，则 <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> 必须先设置属性，然后才能使用 security token service 来创建令牌。</span><span class="sxs-lookup"><span data-stu-id="cfa79-123">If `issuerName` is `null`, the <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> property must be set before the security token service is used to create a token.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityTokenServiceConfiguration (string issuerName, bool loadConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string issuerName, bool loadConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (issuerName As String, loadConfig As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityTokenServiceConfiguration(System::String ^ issuerName, bool loadConfig);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration : string * bool -&gt; System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" Usage="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration (issuerName, loadConfig)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="issuerName" Type="System.String" />
        <Parameter Name="loadConfig" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="issuerName"><span data-ttu-id="cfa79-124">发行人名称。</span><span class="sxs-lookup"><span data-stu-id="cfa79-124">The issuer name.</span></span> <span data-ttu-id="cfa79-125">设置 <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="cfa79-125">Sets the <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName" /> property.</span></span></param>
        <param name="loadConfig"><span data-ttu-id="cfa79-126">如果从配置文件中加载设置，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cfa79-126"><see langword="true" /> to load settings from the configuration file; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="cfa79-127">初始化 <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> 类的一个新实例，该类具有指定的颁发人名。</span><span class="sxs-lookup"><span data-stu-id="cfa79-127">Initializes a new instance of the <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> class that has the specified issuer name.</span></span> <span data-ttu-id="cfa79-128">从当前配置选择性加载设置。</span><span class="sxs-lookup"><span data-stu-id="cfa79-128">Optionally loads settings from the current configuration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfa79-129">如果 `issuerName` 为 `null` ，则 <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> 必须先设置属性，然后才能使用 security token service 来创建令牌。</span><span class="sxs-lookup"><span data-stu-id="cfa79-129">If `issuerName` is `null`, the <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> property must be set before the security token service is used to create a token.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityTokenServiceConfiguration (string issuerName, System.IdentityModel.Tokens.SigningCredentials signingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string issuerName, class System.IdentityModel.Tokens.SigningCredentials signingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (issuerName As String, signingCredentials As SigningCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityTokenServiceConfiguration(System::String ^ issuerName, System::IdentityModel::Tokens::SigningCredentials ^ signingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration : string * System.IdentityModel.Tokens.SigningCredentials -&gt; System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" Usage="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration (issuerName, signingCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="issuerName" Type="System.String" />
        <Parameter Name="signingCredentials" Type="System.IdentityModel.Tokens.SigningCredentials" />
      </Parameters>
      <Docs>
        <param name="issuerName"><span data-ttu-id="cfa79-130">发行人名称。</span><span class="sxs-lookup"><span data-stu-id="cfa79-130">The issuer name.</span></span> <span data-ttu-id="cfa79-131">设置 <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="cfa79-131">Sets the <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName" /> property.</span></span></param>
        <param name="signingCredentials"><span data-ttu-id="cfa79-132">STS 的签名凭据。</span><span class="sxs-lookup"><span data-stu-id="cfa79-132">The signing credentials for the STS.</span></span> <span data-ttu-id="cfa79-133">设置 <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SigningCredentials" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="cfa79-133">Sets the <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SigningCredentials" /> property.</span></span></param>
        <summary><span data-ttu-id="cfa79-134">初始化具有指定颁发人名称和签名凭据的 <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="cfa79-134">Initializes a new instance of the <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> class that has the specified issuer name and signing credentials.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfa79-135">如果 `issuerName` 为 `null` ，则 <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> 必须先设置属性，然后才能使用 security token service 来创建令牌。</span><span class="sxs-lookup"><span data-stu-id="cfa79-135">If `issuerName` is `null`, the <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> property must be set before the security token service is used to create a token.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityTokenServiceConfiguration (string issuerName, System.IdentityModel.Tokens.SigningCredentials signingCredentials, bool loadConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string issuerName, class System.IdentityModel.Tokens.SigningCredentials signingCredentials, bool loadConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (issuerName As String, signingCredentials As SigningCredentials, loadConfig As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityTokenServiceConfiguration(System::String ^ issuerName, System::IdentityModel::Tokens::SigningCredentials ^ signingCredentials, bool loadConfig);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration : string * System.IdentityModel.Tokens.SigningCredentials * bool -&gt; System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" Usage="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration (issuerName, signingCredentials, loadConfig)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="issuerName" Type="System.String" />
        <Parameter Name="signingCredentials" Type="System.IdentityModel.Tokens.SigningCredentials" />
        <Parameter Name="loadConfig" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="issuerName"><span data-ttu-id="cfa79-136">发行人名称。</span><span class="sxs-lookup"><span data-stu-id="cfa79-136">The issuer name.</span></span> <span data-ttu-id="cfa79-137">设置 <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="cfa79-137">Sets the <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName" /> property.</span></span></param>
        <param name="signingCredentials"><span data-ttu-id="cfa79-138">STS 的签名凭据。</span><span class="sxs-lookup"><span data-stu-id="cfa79-138">The signing credentials for the STS.</span></span> <span data-ttu-id="cfa79-139">设置 <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SigningCredentials" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="cfa79-139">Sets the <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SigningCredentials" /> property.</span></span></param>
        <param name="loadConfig"><span data-ttu-id="cfa79-140">如果从配置文件中加载设置，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cfa79-140"><see langword="true" /> to load settings from the configuration file; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="cfa79-141">初始化具有指定颁发人名称和签名凭据的 <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="cfa79-141">Initializes a new instance of the <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> class that has the specified issuer name and signing credentials.</span></span> <span data-ttu-id="cfa79-142">从当前配置选择性加载设置。</span><span class="sxs-lookup"><span data-stu-id="cfa79-142">Optionally loads settings from the current configuration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfa79-143">如果 `issuerName` 为 `null` ，则 <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> 必须先设置属性，然后才能使用 security token service 来创建令牌。</span><span class="sxs-lookup"><span data-stu-id="cfa79-143">If `issuerName` is `null`, the <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> property must be set before the security token service is used to create a token.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityTokenServiceConfiguration (string issuerName, System.IdentityModel.Tokens.SigningCredentials signingCredentials, string serviceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string issuerName, class System.IdentityModel.Tokens.SigningCredentials signingCredentials, string serviceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (issuerName As String, signingCredentials As SigningCredentials, serviceName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityTokenServiceConfiguration(System::String ^ issuerName, System::IdentityModel::Tokens::SigningCredentials ^ signingCredentials, System::String ^ serviceName);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration : string * System.IdentityModel.Tokens.SigningCredentials * string -&gt; System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" Usage="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration (issuerName, signingCredentials, serviceName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="issuerName" Type="System.String" />
        <Parameter Name="signingCredentials" Type="System.IdentityModel.Tokens.SigningCredentials" />
        <Parameter Name="serviceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="issuerName"><span data-ttu-id="cfa79-144">发行人名称。</span><span class="sxs-lookup"><span data-stu-id="cfa79-144">The issuer name.</span></span> <span data-ttu-id="cfa79-145">设置 <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="cfa79-145">Sets the <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName" /> property.</span></span></param>
        <param name="signingCredentials"><span data-ttu-id="cfa79-146">STS 的签名凭据。</span><span class="sxs-lookup"><span data-stu-id="cfa79-146">The signing credentials for the STS.</span></span> <span data-ttu-id="cfa79-147">设置 <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SigningCredentials" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="cfa79-147">Sets the <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SigningCredentials" /> property.</span></span></param>
        <param name="serviceName"><span data-ttu-id="cfa79-148">从中加载配置的 <see langword="&lt;identityConfiguration&gt;" /> 元素的名称。</span><span class="sxs-lookup"><span data-stu-id="cfa79-148">The name of the <see langword="&lt;identityConfiguration&gt;" /> element from which the configuration is to be loaded.</span></span></param>
        <summary><span data-ttu-id="cfa79-149">初始化具有指定颁发人名称和签名凭据的 <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="cfa79-149">Initializes a new instance of the <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> class that has the specified issuer name and signing credentials.</span></span> <span data-ttu-id="cfa79-150">设置从指定命名配置中加载。</span><span class="sxs-lookup"><span data-stu-id="cfa79-150">Settings are loaded from the specified named configuration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfa79-151">如果 `issuerName` 为 `null` ，则 <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> 必须先设置属性，然后才能使用 security token service 来创建令牌。</span><span class="sxs-lookup"><span data-stu-id="cfa79-151">If `issuerName` is `null`, the <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> property must be set before the security token service is used to create a token.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenService">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.SecurityTokenService CreateSecurityTokenService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.SecurityTokenService CreateSecurityTokenService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.CreateSecurityTokenService" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSecurityTokenService () As SecurityTokenService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::SecurityTokenService ^ CreateSecurityTokenService();" />
      <MemberSignature Language="F#" Value="abstract member CreateSecurityTokenService : unit -&gt; System.IdentityModel.SecurityTokenService&#xA;override this.CreateSecurityTokenService : unit -&gt; System.IdentityModel.SecurityTokenService" Usage="securityTokenServiceConfiguration.CreateSecurityTokenService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.SecurityTokenService</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cfa79-152">从 <see cref="T:System.Type" /> 属性中指定的 <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SecurityTokenService" /> 创建安全标记服务 (STS) 实例。</span><span class="sxs-lookup"><span data-stu-id="cfa79-152">Creates an security token service (STS) instance from the <see cref="T:System.Type" /> specified in the <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SecurityTokenService" /> property.</span></span></summary>
        <returns><span data-ttu-id="cfa79-153"><see cref="T:System.Type" /> 属性中指定的 <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SecurityTokenService" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="cfa79-153">An instance of the <see cref="T:System.Type" /> specified in the <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SecurityTokenService" /> property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfa79-154">属性中指定的类 <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SecurityTokenService%2A> 必须实现采用类型为的参数的构造函数 <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration> 。</span><span class="sxs-lookup"><span data-stu-id="cfa79-154">The class specified in the <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SecurityTokenService%2A> property must implement a constructor that takes a parameter of type <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cfa79-155">本主题中使用的代码示例 <xref:System.IdentityModel.SecurityTokenService> 摘自 `Custom Token` 示例。</span><span class="sxs-lookup"><span data-stu-id="cfa79-155">The code examples that are used in the <xref:System.IdentityModel.SecurityTokenService> topics are taken from the `Custom Token` sample.</span></span> <span data-ttu-id="cfa79-156">此示例提供了一些自定义类，使你能够处理 (SWT) 的简单 Web 令牌，并包括能够为 SWT 令牌提供服务的被动 STS 的实现。</span><span class="sxs-lookup"><span data-stu-id="cfa79-156">This sample provides custom classes that enable processing of Simple Web Tokens (SWT) and it includes an implementation of a passive STS that is capable of serving an SWT token.</span></span> <span data-ttu-id="cfa79-157">有关如何实现活动 STS 的示例，请参阅 `Federation Metadata` 示例。</span><span class="sxs-lookup"><span data-stu-id="cfa79-157">For an example of how to implement an active STS, you can see the `Federation Metadata` sample.</span></span> <span data-ttu-id="cfa79-158">有关这些示例以及可用于 WIF 的其他示例以及要从何处下载这些示例和其他示例的信息，请参阅 [WIF 代码示例索引](https://docs.microsoft.com/previous-versions/dotnet/framework/security/wif-code-sample-index)。</span><span class="sxs-lookup"><span data-stu-id="cfa79-158">For information about these samples and other samples available for WIF and about where to download them, see [WIF Code Sample Index](https://docs.microsoft.com/previous-versions/dotnet/framework/security/wif-code-sample-index).</span></span> <span data-ttu-id="cfa79-159">下面的代码演示类的自定义实现， <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration> 以支持处理 SWT 令牌的被动 STS。</span><span class="sxs-lookup"><span data-stu-id="cfa79-159">The following code shows a custom implementation of the <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration> class to support a passive STS that processes SWT tokens.</span></span> <span data-ttu-id="cfa79-160">首次访问静态属性时，将初始化配置并将其存储在 HTTP 应用程序状态中 `Current` 。</span><span class="sxs-lookup"><span data-stu-id="cfa79-160">The configuration is initialized and stored in the HTTP application state the first time the static `Current` property is accessed.</span></span> <span data-ttu-id="cfa79-161">构造函数使用自定义 STS 的类型、自定义颁发者标记解析程序和默认标记类型（ () 的 SWT 标记类型的 URI）初始化自定义配置的属性。</span><span class="sxs-lookup"><span data-stu-id="cfa79-161">The constructor initializes the properties of the custom configuration with the type of the custom STS, a custom issuer token resolver, and the default token type (the URI of the SWT token type).</span></span> <span data-ttu-id="cfa79-162">它还将 SWT 标记处理程序添加到默认处理程序集合。</span><span class="sxs-lookup"><span data-stu-id="cfa79-162">It also adds an SWT token handler to the default handler collection.</span></span>  
  
 <span data-ttu-id="cfa79-163">下面的代码演示如何通过 <xref:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessRequest%28System.Web.HttpRequest%2CSystem.Security.Claims.ClaimsPrincipal%2CSystem.IdentityModel.SecurityTokenService%2CSystem.Web.HttpResponse%29?displayProperty=nameWithType> 从文件中的代码调用方法来调用自定义被动 STS 来处理 WS 联合身份验证请求 `default.aspx.cs` 。</span><span class="sxs-lookup"><span data-stu-id="cfa79-163">The following code shows how to invoke a custom passive STS to process a WS-Federation request by calling the <xref:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessRequest%28System.Web.HttpRequest%2CSystem.Security.Claims.ClaimsPrincipal%2CSystem.IdentityModel.SecurityTokenService%2CSystem.Web.HttpResponse%29?displayProperty=nameWithType> method from the code behind in the `default.aspx.cs` file.</span></span> <span data-ttu-id="cfa79-164"><xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.CreateSecurityTokenService%2A>方法 `PassiveSTS.CustomSecurityTokenService` 使用当前对象上设置的属性初始化类的实例 `CustomSecurityTokenServiceConfiguration` 。</span><span class="sxs-lookup"><span data-stu-id="cfa79-164">The <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.CreateSecurityTokenService%2A> method initializes an instance of the `PassiveSTS.CustomSecurityTokenService` class using the properties set on the current `CustomSecurityTokenServiceConfiguration` object.</span></span> <span data-ttu-id="cfa79-165">`CustomSecurityTokenServiceConfiguration.Current`属性由 `CustomSecurityTokenServiceConfiguration` 类实现，并返回在 HTTP 应用程序状态中保存的类的实例。</span><span class="sxs-lookup"><span data-stu-id="cfa79-165">The `CustomSecurityTokenServiceConfiguration.Current` property is implemented by the `CustomSecurityTokenServiceConfiguration` class and returns the instance of the class that is saved in the HTTP application state.</span></span>  
  
 [!code-csharp[WIFCustomTokenSTS#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/default.aspx.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultMaxSymmetricKeySizeInBits">
      <MemberSignature Language="C#" Value="public int DefaultMaxSymmetricKeySizeInBits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultMaxSymmetricKeySizeInBits" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultMaxSymmetricKeySizeInBits" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultMaxSymmetricKeySizeInBits As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DefaultMaxSymmetricKeySizeInBits { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMaxSymmetricKeySizeInBits : int with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultMaxSymmetricKeySizeInBits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cfa79-166">获取或设置如果选中，则请求中指定的 KeySize 是否位于此限制内的默认密钥大小。</span><span class="sxs-lookup"><span data-stu-id="cfa79-166">Gets or sets the default key size limit in bits used check if the KeySize specified in the request is within this limit.</span></span></summary>
        <value><span data-ttu-id="cfa79-167">默认密钥大小限制（以位为单位）。</span><span class="sxs-lookup"><span data-stu-id="cfa79-167">The default key size limit, in bits.</span></span> <span data-ttu-id="cfa79-168">默认值为1024。</span><span class="sxs-lookup"><span data-stu-id="cfa79-168">The default is 1024.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfa79-169">这仅适用于对称密钥情况。</span><span class="sxs-lookup"><span data-stu-id="cfa79-169">This only applies to the symmetric key case.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSymmetricKeySizeInBits">
      <MemberSignature Language="C#" Value="public int DefaultSymmetricKeySizeInBits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultSymmetricKeySizeInBits" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultSymmetricKeySizeInBits" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultSymmetricKeySizeInBits As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DefaultSymmetricKeySizeInBits { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSymmetricKeySizeInBits : int with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultSymmetricKeySizeInBits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cfa79-170">获取或设置颁发的令牌中使用的默认密钥大小（位）。</span><span class="sxs-lookup"><span data-stu-id="cfa79-170">Gets or sets the default key size in bits used in the issued token.</span></span></summary>
        <value><span data-ttu-id="cfa79-171">在颁发的令牌中使用的密钥大小（以位为单位）。</span><span class="sxs-lookup"><span data-stu-id="cfa79-171">The key size used in the issued token, in bits.</span></span> <span data-ttu-id="cfa79-172">默认值为 256。</span><span class="sxs-lookup"><span data-stu-id="cfa79-172">The default is 256.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfa79-173">这仅适用于对称密钥情况。</span><span class="sxs-lookup"><span data-stu-id="cfa79-173">This only applies to the symmetric key case.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTokenLifetime">
      <MemberSignature Language="C#" Value="public TimeSpan DefaultTokenLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultTokenLifetime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultTokenLifetime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan DefaultTokenLifetime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultTokenLifetime : TimeSpan with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cfa79-174">获取或设置颁发的令牌中使用的默认生命周期。</span><span class="sxs-lookup"><span data-stu-id="cfa79-174">Gets or sets the default lifetime used in the issued tokens.</span></span></summary>
        <value><span data-ttu-id="cfa79-175">要在已颁发令牌中使用的默认生存期。</span><span class="sxs-lookup"><span data-stu-id="cfa79-175">The default lifetime to use in issued tokens.</span></span> <span data-ttu-id="cfa79-176">默认值为 1 天。</span><span class="sxs-lookup"><span data-stu-id="cfa79-176">The default is 1 day.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTokenType">
      <MemberSignature Language="C#" Value="public string DefaultTokenType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultTokenType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenType" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultTokenType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultTokenType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultTokenType : string with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cfa79-177">获取或设置令牌颁发中使用的默认令牌类型。</span><span class="sxs-lookup"><span data-stu-id="cfa79-177">Gets or sets the default token type that is used in token issuance.</span></span></summary>
        <value><span data-ttu-id="cfa79-178">一个字符串，其中包含默认标记类型。</span><span class="sxs-lookup"><span data-stu-id="cfa79-178">A string that contains the default token type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfa79-179">字符串值以 URI 格式指定;例如，对于 SAML 1.1 令牌类型，以下为字符串值： `http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV1.1` 。</span><span class="sxs-lookup"><span data-stu-id="cfa79-179">The string values are specified in URI format; for example, for the SAML 1.1 token type, the following is the string value: `http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV1.1`.</span></span>  
  
 <span data-ttu-id="cfa79-180">默认标记类型设置为 SAML 1.1。</span><span class="sxs-lookup"><span data-stu-id="cfa79-180">The default token type is set to SAML 1.1.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cfa79-181">指定值为 <see langword="null" /> 或为空。</span><span class="sxs-lookup"><span data-stu-id="cfa79-181">The specified value is <see langword="null" /> or empty.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cfa79-182">指定值未在标记处理程序中定义。</span><span class="sxs-lookup"><span data-stu-id="cfa79-182">The specified value is not defined in the token handlers.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DisableWsdl">
      <MemberSignature Language="C#" Value="public bool DisableWsdl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableWsdl" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DisableWsdl" />
      <MemberSignature Language="VB.NET" Value="Public Property DisableWsdl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisableWsdl { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisableWsdl : bool with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DisableWsdl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cfa79-183">获取或设置一个值，该值指定是否应为安全标记服务 (STS)启用启用 WSDL 生成。</span><span class="sxs-lookup"><span data-stu-id="cfa79-183">Gets or sets a value that specifies whether WSDL generation should be enabled for the security token service (STS).</span></span></summary>
        <value><span data-ttu-id="cfa79-184">若要 STS 启用 WSDL 生成，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cfa79-184"><see langword="true" /> to enable WSDL generation for the STS; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="cfa79-185">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cfa79-185">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumTokenLifetime">
      <MemberSignature Language="C#" Value="public TimeSpan MaximumTokenLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MaximumTokenLifetime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.MaximumTokenLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumTokenLifetime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MaximumTokenLifetime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumTokenLifetime : TimeSpan with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.MaximumTokenLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cfa79-186">获取或设置已颁发标识的最大标识生存期。</span><span class="sxs-lookup"><span data-stu-id="cfa79-186">Gets or sets the maximum token lifetime for issued tokens.</span></span></summary>
        <value><span data-ttu-id="cfa79-187">用于颁布令牌的最长令牌生命期。</span><span class="sxs-lookup"><span data-stu-id="cfa79-187">The maximum token lifetime for issued tokens.</span></span> <span data-ttu-id="cfa79-188">默认值为 1 天。</span><span class="sxs-lookup"><span data-stu-id="cfa79-188">The default is 1 day.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenService">
      <MemberSignature Language="C#" Value="public Type SecurityTokenService { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type SecurityTokenService" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SecurityTokenService" />
      <MemberSignature Language="VB.NET" Value="Public Property SecurityTokenService As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ SecurityTokenService { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SecurityTokenService : Type with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SecurityTokenService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cfa79-189">获取或设置安全标记服务 (STS) 的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="cfa79-189">Gets or sets the <see cref="T:System.Type" /> of the security token service (STS).</span></span></summary>
        <value><span data-ttu-id="cfa79-190">安全令牌服务的类型。</span><span class="sxs-lookup"><span data-stu-id="cfa79-190">The type of the security token service.</span></span> <span data-ttu-id="cfa79-191">此类型必须派生自<see cref="T:System.IdentityModel.SecurityTokenService" /> 类。</span><span class="sxs-lookup"><span data-stu-id="cfa79-191">The type must derive from the <see cref="T:System.IdentityModel.SecurityTokenService" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfa79-192">属性中指定的类 <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SecurityTokenService%2A> 必须实现采用类型为的参数的构造函数 <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration> 。</span><span class="sxs-lookup"><span data-stu-id="cfa79-192">The class specified in the <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SecurityTokenService%2A> property must implement a constructor that takes a parameter of type <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cfa79-193">所指定的值不能赋值为 <see cref="T:System.IdentityModel.SecurityTokenService" />。</span><span class="sxs-lookup"><span data-stu-id="cfa79-193">The specified value is not assignable as <see cref="T:System.IdentityModel.SecurityTokenService" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cfa79-194">指定的值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cfa79-194">The specified value is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.CreateSecurityTokenService" />
      </Docs>
    </Member>
    <Member MemberName="SigningCredentials">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SigningCredentials SigningCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SigningCredentials SigningCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SigningCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property SigningCredentials As SigningCredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SigningCredentials ^ SigningCredentials { System::IdentityModel::Tokens::SigningCredentials ^ get(); void set(System::IdentityModel::Tokens::SigningCredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SigningCredentials : System.IdentityModel.Tokens.SigningCredentials with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SigningCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SigningCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cfa79-195">获取或设置签名凭据。</span><span class="sxs-lookup"><span data-stu-id="cfa79-195">Gets or sets the signing credentials.</span></span></summary>
        <value><span data-ttu-id="cfa79-196">签名凭据。</span><span class="sxs-lookup"><span data-stu-id="cfa79-196">The signing credentials.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="cfa79-197">实现有效的安全令牌服务 (STS) 时，将忽略 <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SigningCredentials%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="cfa79-197">The <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SigningCredentials%2A> property is ignored when implementing an active security token service (STS).</span></span> <span data-ttu-id="cfa79-198">相反，您必须通过承载您的 STS 的服务主机上的 <xref:System.ServiceModel.ServiceHostBase.Credentials%2A> 属性设置服务证书。</span><span class="sxs-lookup"><span data-stu-id="cfa79-198">Instead you must set the service certificate through the <xref:System.ServiceModel.ServiceHostBase.Credentials%2A> property on the service host  that is hosting your STS.</span></span> <span data-ttu-id="cfa79-199">用于有效的 STS 的服务主机由 <xref:System.ServiceModel.Security.WSTrustServiceHost> 类表示。</span><span class="sxs-lookup"><span data-stu-id="cfa79-199">The service host used for an active STS is represented by the <xref:System.ServiceModel.Security.WSTrustServiceHost> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenIssuerName">
      <MemberSignature Language="C#" Value="public string TokenIssuerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TokenIssuerName" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName" />
      <MemberSignature Language="VB.NET" Value="Public Property TokenIssuerName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TokenIssuerName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TokenIssuerName : string with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cfa79-200">获取或设置颁发者名称，以便在已颁发令牌中设置它。</span><span class="sxs-lookup"><span data-stu-id="cfa79-200">Gets or sets the issuer name so that it can be set in the issued token.</span></span></summary>
        <value><span data-ttu-id="cfa79-201">发行人名称。</span><span class="sxs-lookup"><span data-stu-id="cfa79-201">The issuer name.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cfa79-202">尝试将此属性设置为 <see langword="null" /> 或者空字符串。</span><span class="sxs-lookup"><span data-stu-id="cfa79-202">An attempt to set the property to <see langword="null" /> or an empty string occurs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WSTrust13RequestSerializer">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.WSTrust13RequestSerializer WSTrust13RequestSerializer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.WSTrust13RequestSerializer WSTrust13RequestSerializer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.WSTrust13RequestSerializer" />
      <MemberSignature Language="VB.NET" Value="Public Property WSTrust13RequestSerializer As WSTrust13RequestSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::WSTrust13RequestSerializer ^ WSTrust13RequestSerializer { System::IdentityModel::Protocols::WSTrust::WSTrust13RequestSerializer ^ get(); void set(System::IdentityModel::Protocols::WSTrust::WSTrust13RequestSerializer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WSTrust13RequestSerializer : System.IdentityModel.Protocols.WSTrust.WSTrust13RequestSerializer with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.WSTrust13RequestSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.WSTrust13RequestSerializer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cfa79-203">获取或设置 WS-Trust 1.3 请求 (RST) 序列化程序。</span><span class="sxs-lookup"><span data-stu-id="cfa79-203">Gets or sets the WS-Trust 1.3 Request (RST) serializer.</span></span></summary>
        <value><span data-ttu-id="cfa79-204">WS-Trust1.3 Request (RST) 序列化程序。</span><span class="sxs-lookup"><span data-stu-id="cfa79-204">The WS-Trust 1.3 Request (RST) serializer.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cfa79-205">指定的值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cfa79-205">The specified value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WSTrust13ResponseSerializer">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.WSTrust13ResponseSerializer WSTrust13ResponseSerializer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.WSTrust13ResponseSerializer WSTrust13ResponseSerializer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.WSTrust13ResponseSerializer" />
      <MemberSignature Language="VB.NET" Value="Public Property WSTrust13ResponseSerializer As WSTrust13ResponseSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::WSTrust13ResponseSerializer ^ WSTrust13ResponseSerializer { System::IdentityModel::Protocols::WSTrust::WSTrust13ResponseSerializer ^ get(); void set(System::IdentityModel::Protocols::WSTrust::WSTrust13ResponseSerializer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WSTrust13ResponseSerializer : System.IdentityModel.Protocols.WSTrust.WSTrust13ResponseSerializer with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.WSTrust13ResponseSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.WSTrust13ResponseSerializer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cfa79-206">获取或设置 WS-Trust 1.3 响应 (RSTR) 序列化程序。</span><span class="sxs-lookup"><span data-stu-id="cfa79-206">Gets or sets the WS-Trust 1.3 Response (RSTR) serializer.</span></span></summary>
        <value><span data-ttu-id="cfa79-207">WS-Trust1.3 Response (RSTR) 序列化程序。</span><span class="sxs-lookup"><span data-stu-id="cfa79-207">The WS-Trust 1.3 Response (RSTR) serializer.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cfa79-208">指定的值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cfa79-208">The specified value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WSTrustFeb2005RequestSerializer">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.WSTrustFeb2005RequestSerializer WSTrustFeb2005RequestSerializer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.WSTrustFeb2005RequestSerializer WSTrustFeb2005RequestSerializer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.WSTrustFeb2005RequestSerializer" />
      <MemberSignature Language="VB.NET" Value="Public Property WSTrustFeb2005RequestSerializer As WSTrustFeb2005RequestSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::WSTrustFeb2005RequestSerializer ^ WSTrustFeb2005RequestSerializer { System::IdentityModel::Protocols::WSTrust::WSTrustFeb2005RequestSerializer ^ get(); void set(System::IdentityModel::Protocols::WSTrust::WSTrustFeb2005RequestSerializer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WSTrustFeb2005RequestSerializer : System.IdentityModel.Protocols.WSTrust.WSTrustFeb2005RequestSerializer with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.WSTrustFeb2005RequestSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.WSTrustFeb2005RequestSerializer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cfa79-209">获取或设置 WS-Trust Feb 2005 请求 (RST) 序列化程序。</span><span class="sxs-lookup"><span data-stu-id="cfa79-209">Gets or sets the WS-Trust Feb 2005 Request (RST) serializer.</span></span></summary>
        <value><span data-ttu-id="cfa79-210">WS-Trust Feb 2005 Request (RST) 序列化程序。</span><span class="sxs-lookup"><span data-stu-id="cfa79-210">The WS-Trust Feb 2005 Request (RST) serializer.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cfa79-211">指定的值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cfa79-211">The specified value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WSTrustFeb2005ResponseSerializer">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.WSTrustFeb2005ResponseSerializer WSTrustFeb2005ResponseSerializer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.WSTrustFeb2005ResponseSerializer WSTrustFeb2005ResponseSerializer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.WSTrustFeb2005ResponseSerializer" />
      <MemberSignature Language="VB.NET" Value="Public Property WSTrustFeb2005ResponseSerializer As WSTrustFeb2005ResponseSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::WSTrustFeb2005ResponseSerializer ^ WSTrustFeb2005ResponseSerializer { System::IdentityModel::Protocols::WSTrust::WSTrustFeb2005ResponseSerializer ^ get(); void set(System::IdentityModel::Protocols::WSTrust::WSTrustFeb2005ResponseSerializer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WSTrustFeb2005ResponseSerializer : System.IdentityModel.Protocols.WSTrust.WSTrustFeb2005ResponseSerializer with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.WSTrustFeb2005ResponseSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.WSTrustFeb2005ResponseSerializer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cfa79-212">获取或设置 WS-Trust Feb 2005 响应 (RSTR) 序列化程序。</span><span class="sxs-lookup"><span data-stu-id="cfa79-212">Gets or sets the WS-Trust Feb 2005 Response (RSTR) serializer.</span></span></summary>
        <value><span data-ttu-id="cfa79-213">WS-Trust Feb 2005 Response (RSTR) 序列化程序。</span><span class="sxs-lookup"><span data-stu-id="cfa79-213">The WS-Trust Feb 2005 Response (RSTR) serializer.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cfa79-214">指定的值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cfa79-214">The specified value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
