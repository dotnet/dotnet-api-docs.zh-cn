<Type Name="ConfigurationElementInterceptor" FullName="System.IdentityModel.Configuration.ConfigurationElementInterceptor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b3004b14bea76e6442abd650cdbba2875a455aeb" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="70666609" /></Metadata><TypeSignature Language="C#" Value="public class ConfigurationElementInterceptor : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConfigurationElementInterceptor extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Configuration.ConfigurationElementInterceptor" />
  <TypeSignature Language="VB.NET" Value="Public Class ConfigurationElementInterceptor&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConfigurationElementInterceptor : System::Configuration::ConfigurationElement" />
  <TypeSignature Language="F#" Value="type ConfigurationElementInterceptor = class&#xA;    inherit ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="52bcb-101">具有用户可以指定任意元素和属性 Windows Identity Foundation (WIF) 配置关系图的一部分；例如，当指定自定义标记的处理程序。</span><span class="sxs-lookup"><span data-stu-id="52bcb-101">There are parts of the Windows Identity Foundation (WIF) configuration schema in which users can specify arbitrary elements and attributes; for example, when specifying a custom token handler.</span></span> <span data-ttu-id="52bcb-102">实现 <see cref="T:System.IdentityModel.Configuration.ConfigurationElementInterceptor" /> 类用于处理这些用例。</span><span class="sxs-lookup"><span data-stu-id="52bcb-102">The <see cref="T:System.IdentityModel.Configuration.ConfigurationElementInterceptor" /> class is implemented to handle these cases.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConfigurationElementInterceptor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.ConfigurationElementInterceptor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConfigurationElementInterceptor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="52bcb-103">初始化 <see cref="T:System.IdentityModel.Configuration.ConfigurationElementInterceptor" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="52bcb-103">Initializes a new instance of the <see cref="T:System.IdentityModel.Configuration.ConfigurationElementInterceptor" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildNodes">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNodeList ChildNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNodeList ChildNodes" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.ConfigurationElementInterceptor.ChildNodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildNodes As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlNodeList ^ ChildNodes { System::Xml::XmlNodeList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildNodes : System.Xml.XmlNodeList" Usage="System.IdentityModel.Configuration.ConfigurationElementInterceptor.ChildNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52bcb-104">获取此元素的子节点。</span><span class="sxs-lookup"><span data-stu-id="52bcb-104">Gets the child nodes of this element.</span></span></summary>
        <value><span data-ttu-id="52bcb-105">子节点的集合。</span><span class="sxs-lookup"><span data-stu-id="52bcb-105">The collection of child nodes.</span></span> <span data-ttu-id="52bcb-106">如果此元素没有子节点，则 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="52bcb-106"><see langword="null" /> if this element has no child nodes.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeserializeElement">
      <MemberSignature Language="C#" Value="protected override void DeserializeElement (System.Xml.XmlReader reader, bool serializeCollectionKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DeserializeElement(class System.Xml.XmlReader reader, bool serializeCollectionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.ConfigurationElementInterceptor.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DeserializeElement (reader As XmlReader, serializeCollectionKey As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DeserializeElement(System::Xml::XmlReader ^ reader, bool serializeCollectionKey);" />
      <MemberSignature Language="F#" Value="override this.DeserializeElement : System.Xml.XmlReader * bool -&gt; unit" Usage="configurationElementInterceptor.DeserializeElement (reader, serializeCollectionKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="serializeCollectionKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="52bcb-107">用于读取配置文件的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="52bcb-107">The <see cref="T:System.Xml.XmlReader" /> that reads from the configuration file.</span></span></param>
        <param name="serializeCollectionKey"><span data-ttu-id="52bcb-108">如果只序列化集合键属性，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="52bcb-108"><see langword="true" /> to serialize only the collection key properties; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="52bcb-109">从配置文件读取 XML。</span><span class="sxs-lookup"><span data-stu-id="52bcb-109">Reads XML from the configuration file.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementAsXml">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement ElementAsXml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlElement ElementAsXml" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.ConfigurationElementInterceptor.ElementAsXml" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementAsXml As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlElement ^ ElementAsXml { System::Xml::XmlElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementAsXml : System.Xml.XmlElement" Usage="System.IdentityModel.Configuration.ConfigurationElementInterceptor.ElementAsXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52bcb-110">获取此实例表示的 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="52bcb-110">Gets the XML element represented by this instance.</span></span></summary>
        <value><span data-ttu-id="52bcb-111">XML 元素。</span><span class="sxs-lookup"><span data-stu-id="52bcb-111">The XML element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeserializeUnrecognizedAttribute">
      <MemberSignature Language="C#" Value="protected override bool OnDeserializeUnrecognizedAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnDeserializeUnrecognizedAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.ConfigurationElementInterceptor.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnDeserializeUnrecognizedAttribute (name As String, value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnDeserializeUnrecognizedAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnDeserializeUnrecognizedAttribute : string * string -&gt; bool" Usage="configurationElementInterceptor.OnDeserializeUnrecognizedAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="52bcb-112">无法识别的特性的名称。</span><span class="sxs-lookup"><span data-stu-id="52bcb-112">The name of the unrecognized attribute.</span></span></param>
        <param name="value"><span data-ttu-id="52bcb-113">无法识别的特性的值。</span><span class="sxs-lookup"><span data-stu-id="52bcb-113">The value of the unrecognized attribute.</span></span></param>
        <summary><span data-ttu-id="52bcb-114">获取一个值，该值指示反序列化过程中是否遇到未知属性。</span><span class="sxs-lookup"><span data-stu-id="52bcb-114">Gets a value that indicates whether an unknown attribute is encountered during deserialization.</span></span> <span data-ttu-id="52bcb-115">始终返回 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="52bcb-115">Always returns <see langword="true" />.</span></span></summary>
        <returns><span data-ttu-id="52bcb-116">始终返回 <see langword="true" />，指示出现的一个未识别的属性。</span><span class="sxs-lookup"><span data-stu-id="52bcb-116">Always returns <see langword="true" />, which indicates that an unrecognized attribute has been encountered.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52bcb-117"><xref:System.IdentityModel.Configuration.ConfigurationElementInterceptor>该类专门用于处理任意的用户定义的属性和元素。</span><span class="sxs-lookup"><span data-stu-id="52bcb-117">The <xref:System.IdentityModel.Configuration.ConfigurationElementInterceptor> class is specifically implemented to handle arbitrary, user-defined attributes and elements.</span></span> <span data-ttu-id="52bcb-118">出于此原因， `true` 当 .NET Framework 检测到无法识别的元素或特性来使分析器保持运行状态时，此方法将返回。</span><span class="sxs-lookup"><span data-stu-id="52bcb-118">For this reason, this method returns `true` when the .NET Framework detects an unrecognized element or attribute to keep the parser running.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeserializeUnrecognizedElement">
      <MemberSignature Language="C#" Value="protected override bool OnDeserializeUnrecognizedElement (string elementName, System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnDeserializeUnrecognizedElement(string elementName, class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.ConfigurationElementInterceptor.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnDeserializeUnrecognizedElement (elementName As String, reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnDeserializeUnrecognizedElement(System::String ^ elementName, System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.OnDeserializeUnrecognizedElement : string * System.Xml.XmlReader -&gt; bool" Usage="configurationElementInterceptor.OnDeserializeUnrecognizedElement (elementName, reader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="elementName"><span data-ttu-id="52bcb-119">未知的子元素的名称。</span><span class="sxs-lookup"><span data-stu-id="52bcb-119">The name of the unknown subelement.</span></span></param>
        <param name="reader"><span data-ttu-id="52bcb-120">用于反序列化的 XML 读取器。</span><span class="sxs-lookup"><span data-stu-id="52bcb-120">The XML reader that is being used for deserialization.</span></span></param>
        <summary><span data-ttu-id="52bcb-121">获取一个值，该值指示反序列化过程中是否遇到未知元素。</span><span class="sxs-lookup"><span data-stu-id="52bcb-121">Gets a value that indicates whether an unknown element is encountered during deserialization.</span></span> <span data-ttu-id="52bcb-122">始终返回 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="52bcb-122">Always returns <see langword="true" />.</span></span></summary>
        <returns><span data-ttu-id="52bcb-123">始终返回 <see langword="true" />，指示出现的一个未识别的元素。</span><span class="sxs-lookup"><span data-stu-id="52bcb-123">Always returns <see langword="true" />, which indicates that an unrecognized element has been encountered.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52bcb-124"><xref:System.IdentityModel.Configuration.ConfigurationElementInterceptor>该类专门用于处理任意的用户定义的属性和元素。</span><span class="sxs-lookup"><span data-stu-id="52bcb-124">The <xref:System.IdentityModel.Configuration.ConfigurationElementInterceptor> class is specifically implemented to handle arbitrary, user-defined attributes and elements.</span></span> <span data-ttu-id="52bcb-125">出于此原因， `true` 当 .NET Framework 检测到无法识别的元素或特性来使分析器保持运行状态时，此方法将返回。</span><span class="sxs-lookup"><span data-stu-id="52bcb-125">For this reason, this method returns `true` when the .NET Framework detects an unrecognized element or attribute to keep the parser running.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="protected override void Reset (System.Configuration.ConfigurationElement parentElement);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Reset(class System.Configuration.ConfigurationElement parentElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.ConfigurationElementInterceptor.Reset(System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Reset (parentElement As ConfigurationElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Reset(System::Configuration::ConfigurationElement ^ parentElement);" />
      <MemberSignature Language="F#" Value="override this.Reset : System.Configuration.ConfigurationElement -&gt; unit" Usage="configurationElementInterceptor.Reset parentElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentElement" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="parentElement"><span data-ttu-id="52bcb-126">配置元素的父节点。</span><span class="sxs-lookup"><span data-stu-id="52bcb-126">The parent node of the configuration element.</span></span></param>
        <summary><span data-ttu-id="52bcb-127">重置 <see cref="T:System.IdentityModel.Configuration.ConfigurationElementInterceptor" /> 对象的内部状态，包括锁和属性集合。</span><span class="sxs-lookup"><span data-stu-id="52bcb-127">Resets the internal state of the <see cref="T:System.IdentityModel.Configuration.ConfigurationElementInterceptor" /> object, including the locks and the properties collections.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
