<Type Name="RelationshipManager" FullName="System.Data.Objects.DataClasses.RelationshipManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3898cbf4cd16fd806dfb0c3963ec3ce9a7facbbc" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89826121" /></Metadata><TypeSignature Language="C#" Value="public class RelationshipManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit RelationshipManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.DataClasses.RelationshipManager" />
  <TypeSignature Language="VB.NET" Value="Public Class RelationshipManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class RelationshipManager" />
  <TypeSignature Language="F#" Value="type RelationshipManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>用于跟踪对象上下文中对象之间的关系。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Data.Objects.DataClasses.RelationshipManager> 用于跟踪对象上下文中对象之间的关系。 对于对象上下文中跟踪的每个关系，都有一个 <xref:System.Data.Objects.DataClasses.RelationshipManager> 类的实例。 关系由概念模型中的关联定义。 有关详细信息，请参阅[关联元素 (CSDL)](https://msdn.microsoft.com/library/c305169a-8af7-432f-9ba7-800a163aed41)。



## Examples
 本主题中的示例基于 " [Microsoft SQL Server 产品示例：数据库](https://archive.codeplex.com/?p=msftdbprodsamples)"。 该示例向实体中添加新 `SalesOrderHeader` 实体 `Contact` 。 然后，它从实体获取所有相关端， `Contact` 并显示每个相关端的关系名称、源角色名称和目标角色名称。

 [!code-csharp[DP ObjectServices Concepts#IRelatedEnd](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#irelatedend)]
 [!code-vb[DP ObjectServices Concepts#IRelatedEnd](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#irelatedend)]

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Data.Objects.DataClasses.RelationshipManager Create (System.Data.Objects.DataClasses.IEntityWithRelationships owner);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Objects.DataClasses.RelationshipManager Create(class System.Data.Objects.DataClasses.IEntityWithRelationships owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelationshipManager.Create(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (owner As IEntityWithRelationships) As RelationshipManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Objects::DataClasses::RelationshipManager ^ Create(System::Data::Objects::DataClasses::IEntityWithRelationships ^ owner);" />
      <MemberSignature Language="F#" Value="static member Create : System.Data.Objects.DataClasses.IEntityWithRelationships -&gt; System.Data.Objects.DataClasses.RelationshipManager" Usage="System.Data.Objects.DataClasses.RelationshipManager.Create owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.DataClasses.RelationshipManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Data.Objects.DataClasses.IEntityWithRelationships" />
      </Parameters>
      <Docs>
        <param name="owner">对调用此方法的实体的引用。</param>
        <summary>创建一个新的 <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> 对象。</summary>
        <returns>请求的 <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Data.Objects.DataClasses.RelationshipManager.Create%2A> 方法由实现 <xref:System.Data.Objects.DataClasses.IEntityWithRelationships> 的对象使用。 当对象服务请求实现了 <xref:System.Data.Objects.DataClasses.RelationshipManager> 的对象的 <xref:System.Data.Objects.DataClasses.IEntityWithRelationships> 属性时，如果对象的关系管理器不存在，将调用 <xref:System.Data.Objects.DataClasses.RelationshipManager.Create%2A> 方法。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllRelatedEnds">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Data.Objects.DataClasses.IRelatedEnd&gt; GetAllRelatedEnds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Objects.DataClasses.IRelatedEnd&gt; GetAllRelatedEnds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelationshipManager.GetAllRelatedEnds" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllRelatedEnds () As IEnumerable(Of IRelatedEnd)" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Data::Objects::DataClasses::IRelatedEnd ^&gt; ^ GetAllRelatedEnds();" />
      <MemberSignature Language="F#" Value="member this.GetAllRelatedEnds : unit -&gt; seq&lt;System.Data.Objects.DataClasses.IRelatedEnd&gt;" Usage="relationshipManager.GetAllRelatedEnds " />
      <MemberSignature Language="VB.NET" Value="Public Iterator Function GetAllRelatedEnds () As IEnumerable(Of IRelatedEnd)" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Data.Objects.DataClasses.RelationshipManager/&lt;GetAllRelatedEnds&gt;d__1))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Data.Objects.DataClasses.RelationshipManager/&lt;GetAllRelatedEnds&gt;d__1))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Data.Objects.DataClasses.RelationshipManager/&lt;GetAllRelatedEnds&gt;d__40))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Data.Objects.DataClasses.RelationshipManager/&lt;GetAllRelatedEnds&gt;d__40))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Data.Objects.DataClasses.IRelatedEnd&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回关系管理器管理的所有相关端的枚举。</summary>
        <returns>实现 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的对象的 <see cref="T:System.Data.Objects.DataClasses.IRelatedEnd" />。 如果尚未填充关系，则返回空枚举。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Data.Objects.DataClasses.RelationshipManager.GetAllRelatedEnds%2A>方法返回和对象的枚举 <xref:System.Data.Objects.DataClasses.EntityCollection%601> <xref:System.Data.Objects.DataClasses.EntityReference%601> 。 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 和 <xref:System.Data.Objects.DataClasses.EntityReference%601> 是派生自的具体类型 <xref:System.Data.Objects.DataClasses.RelatedEnd> 。 <xref:System.Data.Objects.DataClasses.RelatedEnd>抽象类实现 <xref:System.Data.Objects.DataClasses.IRelatedEnd> 接口。



## Examples
 本主题中的示例基于 " [Microsoft SQL Server 产品示例：数据库](https://archive.codeplex.com/?p=msftdbprodsamples)"。 该示例向实体中添加新 `SalesOrderHeader` 实体 `Contact` 。 然后，它从实体获取所有相关端， `Contact` 并显示每个相关端的关系名称、源角色名称和目标角色名称，

 [!code-csharp[DP ObjectServices Concepts#IRelatedEnd](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#irelatedend)]
 [!code-vb[DP ObjectServices Concepts#IRelatedEnd](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#irelatedend)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelatedCollection&lt;TTargetEntity&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.DataClasses.EntityCollection&lt;TTargetEntity&gt; GetRelatedCollection&lt;TTargetEntity&gt; (string relationshipName, string targetRoleName) where TTargetEntity : class, System.Data.Objects.DataClasses.IEntityWithRelationships;" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.DataClasses.EntityCollection`1&lt;!!TTargetEntity&gt; GetRelatedCollection&lt;class (class System.Data.Objects.DataClasses.IEntityWithRelationships) TTargetEntity&gt;(string relationshipName, string targetRoleName) cil managed" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelatedCollection``1(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelatedCollection(Of TTargetEntity As {Class, IEntityWithRelationships}) (relationshipName As String, targetRoleName As String) As EntityCollection(Of TTargetEntity)" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TTargetEntity&gt;&#xA; where TTargetEntity : class, System::Data::Objects::DataClasses::IEntityWithRelationships System::Data::Objects::DataClasses::EntityCollection&lt;TTargetEntity&gt; ^ GetRelatedCollection(System::String ^ relationshipName, System::String ^ targetRoleName);" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="F#" Value="member this.GetRelatedCollection : string * string -&gt; System.Data.Objects.DataClasses.EntityCollection&lt;'argetEntity (requires 'argetEntity : null and 'argetEntity :&gt; System.Data.Objects.DataClasses.IEntityWithRelationships)&gt; (requires 'argetEntity : null and 'argetEntity :&gt; System.Data.Objects.DataClasses.IEntityWithRelationships)" Usage="relationshipManager.GetRelatedCollection (relationshipName, targetRoleName)" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="C#" Value="public System.Data.Objects.DataClasses.EntityCollection&lt;TTargetEntity&gt; GetRelatedCollection&lt;TTargetEntity&gt; (string relationshipName, string targetRoleName) where TTargetEntity : class;" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.DataClasses.EntityCollection`1&lt;!!TTargetEntity&gt; GetRelatedCollection&lt;class TTargetEntity&gt;(string relationshipName, string targetRoleName) cil managed" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelatedCollection(Of TTargetEntity As Class) (relationshipName As String, targetRoleName As String) As EntityCollection(Of TTargetEntity)" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TTargetEntity&gt;&#xA; where TTargetEntity : class System::Data::Objects::DataClasses::EntityCollection&lt;TTargetEntity&gt; ^ GetRelatedCollection(System::String ^ relationshipName, System::String ^ targetRoleName);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.GetRelatedCollection : string * string -&gt; System.Data.Objects.DataClasses.EntityCollection&lt;'argetEntity (requires 'argetEntity : null)&gt; (requires 'argetEntity : null)" Usage="relationshipManager.GetRelatedCollection (relationshipName, targetRoleName)" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.DataClasses.EntityCollection&lt;TTargetEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TTargetEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="relationshipName" Type="System.String" />
        <Parameter Name="targetRoleName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TTargetEntity">返回的 <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> 的类型。</typeparam>
        <param name="relationshipName">要浏览的关系的名称。 关系名称不由命名空间限定。</param>
        <param name="targetRoleName">要浏览的目标角色的名称。 指示在关系中浏览的方向。</param>
        <summary>获取具有指定关系名称和目标角色名称的相关对象的 <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />。</summary>
        <returns>相关对象的 <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 获取具有指定关系名称和目标角色名称的相关对象的 <xref:System.Data.Objects.DataClasses.EntityCollection%601>。

 关系名称不应由命名空间限定。 如果将命名空间置于关系名称之前，将发生错误。

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">指定角色返回 <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> 而不是 <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRelatedEnd">
      <MemberSignature Language="C#" Value="public System.Data.Objects.DataClasses.IRelatedEnd GetRelatedEnd (string relationshipName, string targetRoleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.DataClasses.IRelatedEnd GetRelatedEnd(string relationshipName, string targetRoleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelatedEnd(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelatedEnd (relationshipName As String, targetRoleName As String) As IRelatedEnd" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::DataClasses::IRelatedEnd ^ GetRelatedEnd(System::String ^ relationshipName, System::String ^ targetRoleName);" />
      <MemberSignature Language="F#" Value="member this.GetRelatedEnd : string * string -&gt; System.Data.Objects.DataClasses.IRelatedEnd" Usage="relationshipManager.GetRelatedEnd (relationshipName, targetRoleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.DataClasses.IRelatedEnd</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipName" Type="System.String" />
        <Parameter Name="targetRoleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationshipName">在其中定义 <paramref name="targetRoleName" /> 的关系的名称。 关系名称不由命名空间限定。</param>
        <param name="targetRoleName">用于检索 <paramref name="relationshipName" /> 的另一端的目标角色。</param>
        <summary>为关系中的指定目标角色返回正确类型的 <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> 或 <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />。</summary>
        <returns>表示已检索的 <see cref="T:System.Data.Objects.DataClasses.IRelatedEnd" /> 或 <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> 的 <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此方法旨在用于用户没有全部元数据的情况，包括关系两端的静态类型信息。 这些元数据在关系中的每个实体类型上的 <xref:System.Data.Objects.DataClasses.EdmRelationshipAttribute> 对象中指定，这样元数据系统可以根据提供的关系名称和目标角色名称进行检索。

 关系名称不应由命名空间限定。 如果将命名空间置于关系名称之前，将发生错误。

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="relationshipName" /> 或 <paramref name="targetRoleName" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">源类型不匹配所有者类型。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="targetRoleName" /> 无效。

- 或 -

无法在元数据中找到关系类型。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRelatedReference&lt;TTargetEntity&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.DataClasses.EntityReference&lt;TTargetEntity&gt; GetRelatedReference&lt;TTargetEntity&gt; (string relationshipName, string targetRoleName) where TTargetEntity : class, System.Data.Objects.DataClasses.IEntityWithRelationships;" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.DataClasses.EntityReference`1&lt;!!TTargetEntity&gt; GetRelatedReference&lt;class (class System.Data.Objects.DataClasses.IEntityWithRelationships) TTargetEntity&gt;(string relationshipName, string targetRoleName) cil managed" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelatedReference``1(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelatedReference(Of TTargetEntity As {Class, IEntityWithRelationships}) (relationshipName As String, targetRoleName As String) As EntityReference(Of TTargetEntity)" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TTargetEntity&gt;&#xA; where TTargetEntity : class, System::Data::Objects::DataClasses::IEntityWithRelationships System::Data::Objects::DataClasses::EntityReference&lt;TTargetEntity&gt; ^ GetRelatedReference(System::String ^ relationshipName, System::String ^ targetRoleName);" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="F#" Value="member this.GetRelatedReference : string * string -&gt; System.Data.Objects.DataClasses.EntityReference&lt;'argetEntity (requires 'argetEntity : null and 'argetEntity :&gt; System.Data.Objects.DataClasses.IEntityWithRelationships)&gt; (requires 'argetEntity : null and 'argetEntity :&gt; System.Data.Objects.DataClasses.IEntityWithRelationships)" Usage="relationshipManager.GetRelatedReference (relationshipName, targetRoleName)" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="C#" Value="public System.Data.Objects.DataClasses.EntityReference&lt;TTargetEntity&gt; GetRelatedReference&lt;TTargetEntity&gt; (string relationshipName, string targetRoleName) where TTargetEntity : class;" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.DataClasses.EntityReference`1&lt;!!TTargetEntity&gt; GetRelatedReference&lt;class TTargetEntity&gt;(string relationshipName, string targetRoleName) cil managed" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelatedReference(Of TTargetEntity As Class) (relationshipName As String, targetRoleName As String) As EntityReference(Of TTargetEntity)" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TTargetEntity&gt;&#xA; where TTargetEntity : class System::Data::Objects::DataClasses::EntityReference&lt;TTargetEntity&gt; ^ GetRelatedReference(System::String ^ relationshipName, System::String ^ targetRoleName);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.GetRelatedReference : string * string -&gt; System.Data.Objects.DataClasses.EntityReference&lt;'argetEntity (requires 'argetEntity : null)&gt; (requires 'argetEntity : null)" Usage="relationshipManager.GetRelatedReference (relationshipName, targetRoleName)" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.DataClasses.EntityReference&lt;TTargetEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TTargetEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="relationshipName" Type="System.String" />
        <Parameter Name="targetRoleName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TTargetEntity">返回的 <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> 的类型。</typeparam>
        <param name="relationshipName">要浏览的关系的名称。 关系名称不由命名空间限定。</param>
        <param name="targetRoleName">要浏览的目标角色的名称。 指示在关系中浏览的方向。</param>
        <summary>通过使用关系名称和目标角色名称的指定组合，获取相关对象的 <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />。</summary>
        <returns>相关对象的 <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 关系名称不应由命名空间限定。 如果将命名空间置于关系名称之前，将发生错误。

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">指定角色返回 <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> 而不是 <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="InitializeRelatedCollection&lt;TTargetEntity&gt;">
      <MemberSignature Language="C#" Value="public void InitializeRelatedCollection&lt;TTargetEntity&gt; (string relationshipName, string targetRoleName, System.Data.Objects.DataClasses.EntityCollection&lt;TTargetEntity&gt; entityCollection) where TTargetEntity : class, System.Data.Objects.DataClasses.IEntityWithRelationships;" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InitializeRelatedCollection&lt;class (class System.Data.Objects.DataClasses.IEntityWithRelationships) TTargetEntity&gt;(string relationshipName, string targetRoleName, class System.Data.Objects.DataClasses.EntityCollection`1&lt;!!TTargetEntity&gt; entityCollection) cil managed" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelationshipManager.InitializeRelatedCollection``1(System.String,System.String,System.Data.Objects.DataClasses.EntityCollection{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitializeRelatedCollection(Of TTargetEntity As {Class, IEntityWithRelationships}) (relationshipName As String, targetRoleName As String, entityCollection As EntityCollection(Of TTargetEntity))" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TTargetEntity&gt;&#xA; where TTargetEntity : class, System::Data::Objects::DataClasses::IEntityWithRelationships void InitializeRelatedCollection(System::String ^ relationshipName, System::String ^ targetRoleName, System::Data::Objects::DataClasses::EntityCollection&lt;TTargetEntity&gt; ^ entityCollection);" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="F#" Value="member this.InitializeRelatedCollection : string * string * System.Data.Objects.DataClasses.EntityCollection&lt;'argetEntity (requires 'argetEntity : null and 'argetEntity :&gt; System.Data.Objects.DataClasses.IEntityWithRelationships)&gt; -&gt; unit (requires 'argetEntity : null and 'argetEntity :&gt; System.Data.Objects.DataClasses.IEntityWithRelationships)" Usage="relationshipManager.InitializeRelatedCollection (relationshipName, targetRoleName, entityCollection)" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="C#" Value="public void InitializeRelatedCollection&lt;TTargetEntity&gt; (string relationshipName, string targetRoleName, System.Data.Objects.DataClasses.EntityCollection&lt;TTargetEntity&gt; entityCollection) where TTargetEntity : class;" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InitializeRelatedCollection&lt;class TTargetEntity&gt;(string relationshipName, string targetRoleName, class System.Data.Objects.DataClasses.EntityCollection`1&lt;!!TTargetEntity&gt; entityCollection) cil managed" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitializeRelatedCollection(Of TTargetEntity As Class) (relationshipName As String, targetRoleName As String, entityCollection As EntityCollection(Of TTargetEntity))" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TTargetEntity&gt;&#xA; where TTargetEntity : class void InitializeRelatedCollection(System::String ^ relationshipName, System::String ^ targetRoleName, System::Data::Objects::DataClasses::EntityCollection&lt;TTargetEntity&gt; ^ entityCollection);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.InitializeRelatedCollection : string * string * System.Data.Objects.DataClasses.EntityCollection&lt;'argetEntity (requires 'argetEntity : null)&gt; -&gt; unit (requires 'argetEntity : null)" Usage="relationshipManager.InitializeRelatedCollection (relationshipName, targetRoleName, entityCollection)" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TTargetEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="relationshipName" Type="System.String" />
        <Parameter Name="targetRoleName" Type="System.String" />
        <Parameter Name="entityCollection" Type="System.Data.Objects.DataClasses.EntityCollection&lt;TTargetEntity&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TTargetEntity">正在初始化的 <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> 的类型。</typeparam>
        <param name="relationshipName">关系名。</param>
        <param name="targetRoleName">相关端的角色名称。</param>
        <param name="entityCollection">要初始化的 <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />。</param>
        <summary>初始化使用无参数构造函数创建的现有 <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Data.Objects.DataClasses.RelationshipManager.InitializeRelatedCollection%2A>方法初始化 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 使用无参数构造函数创建的现有。 通过使用提供的关系和目标角色名称，初始化 <xref:System.Data.Objects.DataClasses.EntityCollection%601>。

 <xref:System.Data.Objects.DataClasses.RelationshipManager.InitializeRelatedCollection%2A> 方法仅在反序列化时使用。

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">提供的 <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> 已经初始化时。

- 或 -

关系管理器已经附加到 <see cref="T:System.Data.Objects.ObjectContext" /> 时。

- 或 -

关系管理器已经包含具有此名称和目标角色的关系时。</exception>
      </Docs>
    </Member>
    <Member MemberName="InitializeRelatedReference&lt;TTargetEntity&gt;">
      <MemberSignature Language="C#" Value="public void InitializeRelatedReference&lt;TTargetEntity&gt; (string relationshipName, string targetRoleName, System.Data.Objects.DataClasses.EntityReference&lt;TTargetEntity&gt; entityReference) where TTargetEntity : class, System.Data.Objects.DataClasses.IEntityWithRelationships;" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InitializeRelatedReference&lt;class (class System.Data.Objects.DataClasses.IEntityWithRelationships) TTargetEntity&gt;(string relationshipName, string targetRoleName, class System.Data.Objects.DataClasses.EntityReference`1&lt;!!TTargetEntity&gt; entityReference) cil managed" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelationshipManager.InitializeRelatedReference``1(System.String,System.String,System.Data.Objects.DataClasses.EntityReference{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitializeRelatedReference(Of TTargetEntity As {Class, IEntityWithRelationships}) (relationshipName As String, targetRoleName As String, entityReference As EntityReference(Of TTargetEntity))" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TTargetEntity&gt;&#xA; where TTargetEntity : class, System::Data::Objects::DataClasses::IEntityWithRelationships void InitializeRelatedReference(System::String ^ relationshipName, System::String ^ targetRoleName, System::Data::Objects::DataClasses::EntityReference&lt;TTargetEntity&gt; ^ entityReference);" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="F#" Value="member this.InitializeRelatedReference : string * string * System.Data.Objects.DataClasses.EntityReference&lt;'argetEntity (requires 'argetEntity : null and 'argetEntity :&gt; System.Data.Objects.DataClasses.IEntityWithRelationships)&gt; -&gt; unit (requires 'argetEntity : null and 'argetEntity :&gt; System.Data.Objects.DataClasses.IEntityWithRelationships)" Usage="relationshipManager.InitializeRelatedReference (relationshipName, targetRoleName, entityReference)" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="C#" Value="public void InitializeRelatedReference&lt;TTargetEntity&gt; (string relationshipName, string targetRoleName, System.Data.Objects.DataClasses.EntityReference&lt;TTargetEntity&gt; entityReference) where TTargetEntity : class;" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InitializeRelatedReference&lt;class TTargetEntity&gt;(string relationshipName, string targetRoleName, class System.Data.Objects.DataClasses.EntityReference`1&lt;!!TTargetEntity&gt; entityReference) cil managed" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitializeRelatedReference(Of TTargetEntity As Class) (relationshipName As String, targetRoleName As String, entityReference As EntityReference(Of TTargetEntity))" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TTargetEntity&gt;&#xA; where TTargetEntity : class void InitializeRelatedReference(System::String ^ relationshipName, System::String ^ targetRoleName, System::Data::Objects::DataClasses::EntityReference&lt;TTargetEntity&gt; ^ entityReference);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.InitializeRelatedReference : string * string * System.Data.Objects.DataClasses.EntityReference&lt;'argetEntity (requires 'argetEntity : null)&gt; -&gt; unit (requires 'argetEntity : null)" Usage="relationshipManager.InitializeRelatedReference (relationshipName, targetRoleName, entityReference)" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TTargetEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="relationshipName" Type="System.String" />
        <Parameter Name="targetRoleName" Type="System.String" />
        <Parameter Name="entityReference" Type="System.Data.Objects.DataClasses.EntityReference&lt;TTargetEntity&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TTargetEntity">正在初始化的 <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> 的类型。</typeparam>
        <param name="relationshipName">关系名。</param>
        <param name="targetRoleName">相关端的角色名称。</param>
        <param name="entityReference">要初始化的 <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />。</param>
        <summary>初始化使用无参数构造函数创建的现有 <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Data.Objects.DataClasses.RelationshipManager.InitializeRelatedReference%2A>方法初始化 <xref:System.Data.Objects.DataClasses.EntityReference%601> 使用无参数构造函数创建的现有。 通过使用提供的关系和目标角色名称，初始化 <xref:System.Data.Objects.DataClasses.EntityReference%601>。

 <xref:System.Data.Objects.DataClasses.RelationshipManager.InitializeRelatedReference%2A> 方法仅在反序列化时使用。

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">提供的 <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> 已经初始化时。

- 或 -

关系管理器已经附加到 <see cref="T:System.Data.Objects.ObjectContext" /> 时。

- 或 -

关系管理器已经包含具有此名称和目标角色的关系时。</exception>
      </Docs>
    </Member>
    <Member MemberName="OnDeserialized">
      <MemberSignature Language="C#" Value="public void OnDeserialized (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnDeserialized(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelationshipManager.OnDeserialized(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnDeserialized (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnDeserialized(System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="member this.OnDeserialized : System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="relationshipManager.OnDeserialized context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Runtime.Serialization.OnDeserialized]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Serialization.OnDeserialized&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="context">序列化的流。</param>
        <summary>在内部使用，用于反序列化实体对象与 <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> 实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSerializing">
      <MemberSignature Language="C#" Value="public void OnSerializing (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnSerializing(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelationshipManager.OnSerializing(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnSerializing (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnSerializing(System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="member this.OnSerializing : System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="relationshipManager.OnSerializing context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Serialization.OnSerializing]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Serialization.OnSerializing&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context">说明给定序列化流的源和目标，并提供另一个调用方定义的上下文。</param>
        <summary>由对象服务调用，用来准备 <see cref="T:System.Data.EntityKey" /> 以序列化关系进行二进制序列化。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 关系的序列化仅支持用于二进制序列化。 完整的对象图（包括关系）不支持用于 Windows Communication Foundation 和 XML 序列化。 有关详细信息，请参阅 [序列化对象](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb738446(v=vs.100))。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
