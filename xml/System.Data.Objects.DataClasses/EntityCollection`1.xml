<Type Name="EntityCollection&lt;TEntity&gt;" FullName="System.Data.Objects.DataClasses.EntityCollection&lt;TEntity&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="879c12a149705f30232063332a6f058199ff902f" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89708979" /></Metadata><TypeSignature Language="C#" Value="public sealed class EntityCollection&lt;TEntity&gt; : System.Data.Objects.DataClasses.RelatedEnd, System.Collections.Generic.ICollection&lt;TEntity&gt;, System.Collections.Generic.IEnumerable&lt;TEntity&gt;, System.ComponentModel.IListSource where TEntity : class, IEntityWithRelationships" FrameworkAlternate="netframework-3.5" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit EntityCollection`1&lt;class (class System.Data.Objects.DataClasses.IEntityWithRelationships) TEntity&gt; extends System.Data.Objects.DataClasses.RelatedEnd implements class System.Collections.Generic.ICollection`1&lt;!TEntity&gt;, class System.Collections.Generic.IEnumerable`1&lt;!TEntity&gt;, class System.Collections.IEnumerable, class System.ComponentModel.IListSource" FrameworkAlternate="netframework-3.5" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.DataClasses.EntityCollection`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntityCollection(Of TEntity)&#xA;Inherits RelatedEnd&#xA;Implements ICollection(Of TEntity), IEnumerable(Of TEntity), IListSource" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TEntity&gt;&#xA; where TEntity : class, IEntityWithRelationshipspublic ref class EntityCollection sealed : System::Data::Objects::DataClasses::RelatedEnd, System::Collections::Generic::ICollection&lt;TEntity&gt;, System::Collections::Generic::IEnumerable&lt;TEntity&gt;, System::ComponentModel::IListSource" FrameworkAlternate="netframework-3.5" />
  <TypeSignature Language="F#" Value="type EntityCollection&lt;'Entity (requires 'Entity : null and 'Entity :&gt; IEntityWithRelationships)&gt; = class&#xA;    inherit RelatedEnd&#xA;    interface ICollection&lt;'Entity (requires 'Entity : null and 'Entity :&gt; IEntityWithRelationships)&gt;&#xA;    interface seq&lt;'Entity (requires 'Entity : null and 'Entity :&gt; IEntityWithRelationships)&gt;&#xA;    interface IEnumerable&#xA;    interface IListSource" FrameworkAlternate="netframework-3.5" />
  <TypeSignature Language="C#" Value="public sealed class EntityCollection&lt;TEntity&gt; : System.Data.Objects.DataClasses.RelatedEnd, System.Collections.Generic.ICollection&lt;TEntity&gt;, System.Collections.Generic.IEnumerable&lt;TEntity&gt;, System.ComponentModel.IListSource where TEntity : class" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit EntityCollection`1&lt;class TEntity&gt; extends System.Data.Objects.DataClasses.RelatedEnd implements class System.Collections.Generic.ICollection`1&lt;!TEntity&gt;, class System.Collections.Generic.IEnumerable`1&lt;!TEntity&gt;, class System.Collections.IEnumerable, class System.ComponentModel.IListSource" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TEntity&gt;&#xA; where TEntity : classpublic ref class EntityCollection sealed : System::Data::Objects::DataClasses::RelatedEnd, System::Collections::Generic::ICollection&lt;TEntity&gt;, System::Collections::Generic::IEnumerable&lt;TEntity&gt;, System::ComponentModel::IListSource" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type EntityCollection&lt;'Entity (requires 'Entity : null)&gt; = class&#xA;    inherit RelatedEnd&#xA;    interface ICollection&lt;'Entity (requires 'Entity : null)&gt;&#xA;    interface seq&lt;'Entity (requires 'Entity : null)&gt;&#xA;    interface IEnumerable&#xA;    interface IListSource" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TEntity">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Data.Objects.DataClasses.RelatedEnd</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;TEntity&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;TEntity&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IListSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TEntity"><span data-ttu-id="a1469-101">集合的实体类型。</span><span class="sxs-lookup"><span data-stu-id="a1469-101">The entity type of the collection.</span></span></typeparam>
    <summary><span data-ttu-id="a1469-102">表示关系“多”端的对象集合。</span><span class="sxs-lookup"><span data-stu-id="a1469-102">Represents a collection of objects on the "many" end of a relationship.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="a1469-103"><xref:System.Data.Objects.DataClasses.EntityCollection%601> 是特定实体类型的对象集合，该实体类型表示一对多或多对多关系的“多”端。</span><span class="sxs-lookup"><span data-stu-id="a1469-103">An <xref:System.Data.Objects.DataClasses.EntityCollection%601> is a collection of objects of a particular entity type that represents the "many" end of a one-to-many or many-to-many relationship.</span></span>

 <span data-ttu-id="a1469-104">由导航属性返回一个 <xref:System.Data.Objects.DataClasses.EntityCollection%601>。</span><span class="sxs-lookup"><span data-stu-id="a1469-104">An <xref:System.Data.Objects.DataClasses.EntityCollection%601> is returned by a navigation property.</span></span> <span data-ttu-id="a1469-105">使用 <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A> 方法可以将相关对象加载到 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 中。</span><span class="sxs-lookup"><span data-stu-id="a1469-105">Use the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A> method to load related objects into an <xref:System.Data.Objects.DataClasses.EntityCollection%601>.</span></span> <span data-ttu-id="a1469-106">要存储特定实体类型的对象的非相关集合，例如 <xref:System.Data.Objects.ObjectQuery%601> 的结果，请使用 <xref:System.Collections.Generic.List%601> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="a1469-106">To store an unrelated collection of objects of a specific entity type, such as the result of an <xref:System.Data.Objects.ObjectQuery%601>, use an instance of the <xref:System.Collections.Generic.List%601> class.</span></span>

 <span data-ttu-id="a1469-107"><xref:System.Data.Objects.DataClasses.EntityCollection%601> 可能有对应的 <xref:System.Data.Objects.DataClasses.EntityReference%601>。</span><span class="sxs-lookup"><span data-stu-id="a1469-107">An <xref:System.Data.Objects.DataClasses.EntityCollection%601> might have a corresponding <xref:System.Data.Objects.DataClasses.EntityReference%601>.</span></span> <span data-ttu-id="a1469-108">当 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 和 <xref:System.Data.Objects.DataClasses.EntityReference%601> 模型位于同一关系的相反端时，该关系的完整性维持在对象级别。</span><span class="sxs-lookup"><span data-stu-id="a1469-108">When an <xref:System.Data.Objects.DataClasses.EntityCollection%601> and an <xref:System.Data.Objects.DataClasses.EntityReference%601> model opposite ends of the same relationship, the integrity of the relationship is maintained at the object level.</span></span> <span data-ttu-id="a1469-109">两个类自动同步。</span><span class="sxs-lookup"><span data-stu-id="a1469-109">The two classes are synchronized automatically.</span></span>

 <span data-ttu-id="a1469-110">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="a1469-110">This class cannot be inherited.</span></span>



## Examples
 <span data-ttu-id="a1469-111">此示例基于 [艾德公司销售模型](https://archive.codeplex.com/?p=msftdbprodsamples)。</span><span class="sxs-lookup"><span data-stu-id="a1469-111">This example is based on the [Adventure Works Sales Model](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span> <span data-ttu-id="a1469-112">若要运行此示例中的代码，必须已将 AdventureWorks 销售模型添加到您的项目中，并将项目配置为使用实体框架。</span><span class="sxs-lookup"><span data-stu-id="a1469-112">To run the code in this example, you must have already added the AdventureWorks Sales Model to your project and configured your project to use the Entity Framework.</span></span> <span data-ttu-id="a1469-113">为此，请完成 [如何：手动配置实体框架项目](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb738546(v=vs.100)) 和 [如何：手动定义模型和映射文件](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb399785(v=vs.100))中的过程。</span><span class="sxs-lookup"><span data-stu-id="a1469-113">To do this, complete the procedures in [How to: Manually Configure an Entity Framework Project](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb738546(v=vs.100)) and [How to: Manually Define the Model and Mapping Files](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb399785(v=vs.100)).</span></span>

 <span data-ttu-id="a1469-114">此示例将执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="a1469-114">This example does the following:</span></span>

1.  <span data-ttu-id="a1469-115">创建两个新的 `SalesOrderHeader` 实体并添加到 `Contact` 实体。</span><span class="sxs-lookup"><span data-stu-id="a1469-115">Creates two new `SalesOrderHeader` entities and adds them to the `Contact` entity.</span></span>

2.  <span data-ttu-id="a1469-116">从与 <xref:System.Data.Objects.DataClasses.RelationshipManager> 实体关联的 `Contact` 中获取所有相关端。</span><span class="sxs-lookup"><span data-stu-id="a1469-116">Gets all related ends from the <xref:System.Data.Objects.DataClasses.RelationshipManager> that is associated with the `Contact` entity.</span></span>

3.  <span data-ttu-id="a1469-117">循环访问 <xref:System.Data.Objects.DataClasses.IRelatedEnd> 集合。</span><span class="sxs-lookup"><span data-stu-id="a1469-117">Iterates through the collection of <xref:System.Data.Objects.DataClasses.IRelatedEnd>s.</span></span>

4.  <span data-ttu-id="a1469-118">获取每个相关端的 <xref:System.Data.Objects.DataClasses.EntityCollection%601>。</span><span class="sxs-lookup"><span data-stu-id="a1469-118">Gets the <xref:System.Data.Objects.DataClasses.EntityCollection%601> for each related end.</span></span>

5.  <span data-ttu-id="a1469-119">使用 <xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A> 方法从集合中移除其中一个实体。</span><span class="sxs-lookup"><span data-stu-id="a1469-119">Uses the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A> method to remove one of the entities from the collection.</span></span>

6.  <span data-ttu-id="a1469-120">调用 <xref:System.Data.Objects.DataClasses.EntityCollection%601.Contains%2A> 方法确定该对象是否已从集合中移除。</span><span class="sxs-lookup"><span data-stu-id="a1469-120">Calls the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Contains%2A> method to determine whether the object was removed from the collection.</span></span>

7.  <span data-ttu-id="a1469-121">使用 <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> 方法添加回实体。</span><span class="sxs-lookup"><span data-stu-id="a1469-121">Uses the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> method to add the entity back.</span></span>

 [!code-csharp[DP ObjectServices Concepts#IRelatedEnd_Add](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#irelatedend_add)]
 [!code-vb[DP ObjectServices Concepts#IRelatedEnd_Add](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#irelatedend_add)]

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1469-122">初始化 <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a1469-122">Initializes a new instance of the <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="a1469-123"><xref:System.Data.Objects.DataClasses.EntityCollection%601> 的此公开构造函数旨在供对象服务在反序列化对象图时使用。</span><span class="sxs-lookup"><span data-stu-id="a1469-123">This public constructor for <xref:System.Data.Objects.DataClasses.EntityCollection%601> is intended to be used by Object Services when deserializing object graphs.</span></span> <span data-ttu-id="a1469-124">应从导航属性而不是使用此构造函数访问 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 的实例。</span><span class="sxs-lookup"><span data-stu-id="a1469-124">You should access an instance of <xref:System.Data.Objects.DataClasses.EntityCollection%601> from a navigation property instead of using this constructor.</span></span>

 <span data-ttu-id="a1469-125">要存储特定实体类型的对象的非相关集合，例如 <xref:System.Data.Objects.ObjectQuery%601> 的结果，请使用 <xref:System.Collections.Generic.List%601> 的实例。</span><span class="sxs-lookup"><span data-stu-id="a1469-125">To store an unrelated collection of objects of a specific entity type, such as the result of an <xref:System.Data.Objects.ObjectQuery%601>, use an instance of <xref:System.Collections.Generic.List%601>.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (TEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (entity As TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(TEntity entity);" />
      <MemberSignature Language="F#" Value="override this.Add : 'Entity -&gt; unit" Usage="entityCollection.Add entity" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="a1469-126">添加到集合的对象。</span><span class="sxs-lookup"><span data-stu-id="a1469-126">An object to add to the collection.</span></span> <span data-ttu-id="a1469-127"><paramref name="entity" /> 必须实现 <see cref="T:System.Data.Objects.DataClasses.IEntityWithRelationships" />。</span><span class="sxs-lookup"><span data-stu-id="a1469-127"><paramref name="entity" /> must implement <see cref="T:System.Data.Objects.DataClasses.IEntityWithRelationships" />.</span></span></param>
        <summary><span data-ttu-id="a1469-128">将对象添加到集合。</span><span class="sxs-lookup"><span data-stu-id="a1469-128">Adds an object to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="a1469-129"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> 方法将对象添加到 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 并创建两个对象之间的关系。</span><span class="sxs-lookup"><span data-stu-id="a1469-129">The <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> method adds an object to an <xref:System.Data.Objects.DataClasses.EntityCollection%601> and creates a relationship between the two objects.</span></span> <span data-ttu-id="a1469-130">当源对象附加到 <xref:System.Data.Objects.ObjectContext> 实例时，<xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> 方法也将对象添加到 <xref:System.Data.Objects.ObjectContext>。</span><span class="sxs-lookup"><span data-stu-id="a1469-130">When the source object is attached to an <xref:System.Data.Objects.ObjectContext> instance, the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> method also adds the object to the <xref:System.Data.Objects.ObjectContext>.</span></span> <span data-ttu-id="a1469-131">当调用 <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> 时，此操作转换为插入到数据源中的操作。</span><span class="sxs-lookup"><span data-stu-id="a1469-131">This operation is translated into an insert operation in the data source when <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> is called.</span></span> <span data-ttu-id="a1469-132">有关详细信息，请参阅 [创建、添加、修改和删除对象](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb738695(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="a1469-132">For more information, see [Creating, Adding, Modifying, and Deleting Objects](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb738695(v=vs.100)).</span></span>

 <span data-ttu-id="a1469-133">可对同一对象实例多次调用 <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="a1469-133">The <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> method can be called multiple times on the same object instance.</span></span>



## Examples
 <span data-ttu-id="a1469-134">此示例基于 [艾德公司销售模型](https://archive.codeplex.com/?p=msftdbprodsamples)。</span><span class="sxs-lookup"><span data-stu-id="a1469-134">This example is based on the [Adventure Works Sales Model](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span> <span data-ttu-id="a1469-135">若要运行此示例中的代码，必须已将 AdventureWorks 销售模型添加到您的项目中，并将项目配置为使用实体框架。</span><span class="sxs-lookup"><span data-stu-id="a1469-135">To run the code in this example, you must have already added the AdventureWorks Sales Model to your project and configured your project to use the Entity Framework.</span></span> <span data-ttu-id="a1469-136">为此，请完成 [如何：手动配置实体框架项目](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb738546(v=vs.100)) 和 [如何：手动定义模型和映射文件](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb399785(v=vs.100))中的过程。</span><span class="sxs-lookup"><span data-stu-id="a1469-136">To do this, complete the procedures in [How to: Manually Configure an Entity Framework Project](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb738546(v=vs.100)) and [How to: Manually Define the Model and Mapping Files](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb399785(v=vs.100)).</span></span>

 <span data-ttu-id="a1469-137">此示例创建两个新的 `SalesOrderHeader` 实体，将它们添加到 `Contact` 实体，然后在移除对象后，使用 <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> 方法将该对象添加回集合。</span><span class="sxs-lookup"><span data-stu-id="a1469-137">This example creates two new `SalesOrderHeader` entities, adds them to the `Contact` entity, and, after removing an object, uses the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> method to add the object back to the collection.</span></span>

 [!code-csharp[DP ObjectServices Concepts#IRelatedEnd_Add](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#irelatedend_add)]
 [!code-vb[DP ObjectServices Concepts#IRelatedEnd_Add](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#irelatedend_add)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1469-138"><paramref name="entity" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1469-138"><paramref name="entity" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Attach">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a1469-139">定义对象上下文中两个附加对象之间的关系。</span><span class="sxs-lookup"><span data-stu-id="a1469-139">Defines a relationship between two attached objects in an object context.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="public void Attach (System.Collections.Generic.IEnumerable&lt;TEntity&gt; entities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Attach(class System.Collections.Generic.IEnumerable`1&lt;!TEntity&gt; entities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Attach (entities As IEnumerable(Of TEntity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Attach(System::Collections::Generic::IEnumerable&lt;TEntity&gt; ^ entities);" />
      <MemberSignature Language="F#" Value="override this.Attach : seq&lt;'Entity (requires 'Entity : null and 'Entity :&gt; System.Data.Objects.DataClasses.IEntityWithRelationships)&gt; -&gt; unit" Usage="entityCollection.Attach entities" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="F#" Value="override this.Attach : seq&lt;'Entity (requires 'Entity : null)&gt; -&gt; unit" Usage="entityCollection.Attach entities" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entities" Type="System.Collections.Generic.IEnumerable&lt;TEntity&gt;" />
      </Parameters>
      <Docs>
        <param name="entities"><span data-ttu-id="a1469-140">对象上下文中与源对象相关的对象集合。</span><span class="sxs-lookup"><span data-stu-id="a1469-140">Collection of objects in the object context that are related to the source object.</span></span></param>
        <summary><span data-ttu-id="a1469-141">定义对象上下文中对象和相关对象集合之间的关系。</span><span class="sxs-lookup"><span data-stu-id="a1469-141">Defines relationships between an object and a collection of related objects in an object context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="a1469-142"><xref:System.Data.Objects.ObjectContext.Attach%2A> 方法用于定义当源对象和相关对象集合已经存在于对象上下文中时两者之间的关系.</span><span class="sxs-lookup"><span data-stu-id="a1469-142">The <xref:System.Data.Objects.ObjectContext.Attach%2A> method is used to define relationships between an object and a collection of related objects when both the source object and the collection of related objects already exist in the object context.</span></span> <span data-ttu-id="a1469-143">要附加已经定义了关系的对象或对象图，请对 <xref:System.Data.Objects.ObjectContext.Attach%2A> 调用 <xref:System.Data.Objects.ObjectContext> 方法。</span><span class="sxs-lookup"><span data-stu-id="a1469-143">To attach an object or an object graph where the relationships are already defined, call the <xref:System.Data.Objects.ObjectContext.Attach%2A> method on the <xref:System.Data.Objects.ObjectContext>.</span></span> <span data-ttu-id="a1469-144">要创建与源对象关联的新对象，请对 <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> 调用 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 方法。</span><span class="sxs-lookup"><span data-stu-id="a1469-144">To create a new object that is related to the source object, call the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> method on the <xref:System.Data.Objects.DataClasses.EntityCollection%601>.</span></span> <span data-ttu-id="a1469-145">有关详细信息，请参阅 [附加和分离对象](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb738470(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="a1469-145">For more information, see [Attaching and Detaching Objects](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb738470(v=vs.100)).</span></span>

 <span data-ttu-id="a1469-146">如果集合已经填充或部分填充，<xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A> 方法将现有实体和给定实体合并。</span><span class="sxs-lookup"><span data-stu-id="a1469-146">If the collection is already filled or partially filled, the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A> method merges existing entities with the given entities.</span></span> <span data-ttu-id="a1469-147">不假定给定实体为相关实体的完整集。</span><span class="sxs-lookup"><span data-stu-id="a1469-147">The given entities are not assumed to be the complete set of related entities.</span></span>

 <span data-ttu-id="a1469-148">所有传递的实体必须处于 <xref:System.Data.EntityState.Unchanged> 或 <xref:System.Data.EntityState.Modified> 状态。</span><span class="sxs-lookup"><span data-stu-id="a1469-148">All entities passed in must be in the <xref:System.Data.EntityState.Unchanged> or <xref:System.Data.EntityState.Modified> state.</span></span> <span data-ttu-id="a1469-149">仅当状态管理器正在跟踪关系实例时，允许 <xref:System.Data.EntityState.Deleted> 状态的对象。</span><span class="sxs-lookup"><span data-stu-id="a1469-149">Objects in the <xref:System.Data.EntityState.Deleted> state are only allowed when the state manager is already tracking the relationship instance.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1469-150"><paramref name="entities" /> 集合为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1469-150"><paramref name="entities" /> collection is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a1469-151">源对象或 <paramref name="entities" /> 集合中的对象为 <see langword="null" /> 或者不处于 <see cref="F:System.Data.EntityState.Unchanged" /> 或 <see cref="F:System.Data.EntityState.Modified" /> 状态。</span><span class="sxs-lookup"><span data-stu-id="a1469-151">The source object or an object in the <paramref name="entities" /> collection is <see langword="null" /> or is not in an <see cref="F:System.Data.EntityState.Unchanged" /> or <see cref="F:System.Data.EntityState.Modified" /> state.</span></span>

<span data-ttu-id="a1469-152">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a1469-152">-or-</span></span>

<span data-ttu-id="a1469-153">不能基于 [艾德公司销售模型](https://archive.codeplex.com/?p=msftdbprodsamples) EDM 元数据定义关系。</span><span class="sxs-lookup"><span data-stu-id="a1469-153">The relationship cannot be defined based on the [Adventure Works Sales Model](https://archive.codeplex.com/?p=msftdbprodsamples) EDM metadata.</span></span> <span data-ttu-id="a1469-154">这会在概念性架构中的关联不支持两种类型间的关系时发生。</span><span class="sxs-lookup"><span data-stu-id="a1469-154">This can occur when the association in the conceptual schema does not support a relationship between the two types.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="public void Attach (TEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Attach(!TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Attach (entity As TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Attach(TEntity entity);" />
      <MemberSignature Language="F#" Value="override this.Attach : 'Entity -&gt; unit" Usage="entityCollection.Attach entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="a1469-155">附加的对象。</span><span class="sxs-lookup"><span data-stu-id="a1469-155">The object being attached.</span></span></param>
        <summary><span data-ttu-id="a1469-156">定义对象上下文中两个附加对象之间的关系。</span><span class="sxs-lookup"><span data-stu-id="a1469-156">Defines a relationship between two attached objects in an object context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="a1469-157"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A> 方法用于定义当两个对象已经存在于对象上下文中时两者之间的关系。</span><span class="sxs-lookup"><span data-stu-id="a1469-157">The <xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A> method is used to define relationships between two objects when both objects already exist in the object context.</span></span> <span data-ttu-id="a1469-158">要附加已经定义了关系的对象或对象图，请对 <xref:System.Data.Objects.ObjectContext.Attach%2A> 调用 <xref:System.Data.Objects.ObjectContext> 方法。</span><span class="sxs-lookup"><span data-stu-id="a1469-158">To attach an object or an object graph where the relationships are already defined, call the <xref:System.Data.Objects.ObjectContext.Attach%2A> method on the <xref:System.Data.Objects.ObjectContext>.</span></span> <span data-ttu-id="a1469-159">要创建与源对象关联的新对象，请对 <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> 调用 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 方法。</span><span class="sxs-lookup"><span data-stu-id="a1469-159">To create a new object that is related to the source object, call the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> method on the <xref:System.Data.Objects.DataClasses.EntityCollection%601>.</span></span> <span data-ttu-id="a1469-160">有关详细信息，请参阅 [附加和分离对象](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb738470(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="a1469-160">For more information, see [Attaching and Detaching Objects](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb738470(v=vs.100)).</span></span>

 <span data-ttu-id="a1469-161">如果 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 已经加载对象，<xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A> 方法将把该对象与 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 中的现有对象合并。</span><span class="sxs-lookup"><span data-stu-id="a1469-161">If the <xref:System.Data.Objects.DataClasses.EntityCollection%601> already has loaded objects, the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A> method merges the object together with the existing objects in the <xref:System.Data.Objects.DataClasses.EntityCollection%601>.</span></span>

 <span data-ttu-id="a1469-162">不假定附加的对象为相关实体对象的完整集。</span><span class="sxs-lookup"><span data-stu-id="a1469-162">The attached object is not assumed to be the complete set of related entity objects.</span></span>

 <span data-ttu-id="a1469-163">与此 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 关联的对象以及附加到它的所有对象必须处于 <xref:System.Data.EntityState.Unchanged> 或 <xref:System.Data.EntityState.Modified> 状态。</span><span class="sxs-lookup"><span data-stu-id="a1469-163">The object associated with this <xref:System.Data.Objects.DataClasses.EntityCollection%601> and all objects being attached to it must be in an <xref:System.Data.EntityState.Unchanged> or <xref:System.Data.EntityState.Modified> state.</span></span>

 <span data-ttu-id="a1469-164">处于 <xref:System.Data.EntityState.Deleted> 状态的对象只能在 <xref:System.Data.Objects.ObjectStateManager> 已经跟踪关系实例时附加。</span><span class="sxs-lookup"><span data-stu-id="a1469-164">Objects in the <xref:System.Data.EntityState.Deleted> state can only be attached when the <xref:System.Data.Objects.ObjectStateManager> is already tracking the relationship instance.</span></span>



## Examples
 <span data-ttu-id="a1469-165">此示例基于 [艾德公司销售模型](https://archive.codeplex.com/?p=msftdbprodsamples)。</span><span class="sxs-lookup"><span data-stu-id="a1469-165">This example is based on the [Adventure Works Sales Model](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span> <span data-ttu-id="a1469-166">若要运行此示例中的代码，必须已将 AdventureWorks 销售模型添加到您的项目中，并将项目配置为使用实体框架。</span><span class="sxs-lookup"><span data-stu-id="a1469-166">To run the code in this example, you must have already added the AdventureWorks Sales Model to your project and configured your project to use the Entity Framework.</span></span> <span data-ttu-id="a1469-167">为此，请完成 [如何：手动配置实体框架项目](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb738546(v=vs.100)) 和 [如何：手动定义模型和映射文件](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb399785(v=vs.100))中的过程。</span><span class="sxs-lookup"><span data-stu-id="a1469-167">To do this, complete the procedures in [How to: Manually Configure an Entity Framework Project](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb738546(v=vs.100)) and [How to: Manually Define the Model and Mapping Files](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb399785(v=vs.100)).</span></span>

 <span data-ttu-id="a1469-168">此示例将已分离的对象的集合 `SalesOrderDetail` 和已分离的 `SalesOrderHeader` 对象附加到对象上下文，然后定义 `SalesOrderHeader` 对象和每个对象之间的关系 `SalesOrderDetail` 。</span><span class="sxs-lookup"><span data-stu-id="a1469-168">This example attaches a collection of detached `SalesOrderDetail` objects and a detached `SalesOrderHeader` object to an object context, and then defines the relationships between the `SalesOrderHeader` object and each `SalesOrderDetail` object.</span></span>

 [!code-csharp[DP ObjectServices Concepts#AttachRelatedObjects](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#attachrelatedobjects)]
 [!code-vb[DP ObjectServices Concepts#AttachRelatedObjects](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#attachrelatedobjects)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1469-169">在 <paramref name="entity" /> 为 <see langword="null" /> 时。</span><span class="sxs-lookup"><span data-stu-id="a1469-169">When the <paramref name="entity" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a1469-170">当 <paramref name="entity" /> 无法与源对象关联时。</span><span class="sxs-lookup"><span data-stu-id="a1469-170">When the <paramref name="entity" /> cannot be related to the source object.</span></span> <span data-ttu-id="a1469-171">这会在概念性架构中的关联不支持两种类型间的关系时发生。</span><span class="sxs-lookup"><span data-stu-id="a1469-171">This can occur when the association in the conceptual schema does not support a relationship between the two types.</span></span>

<span data-ttu-id="a1469-172">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a1469-172">-or-</span></span>

<span data-ttu-id="a1469-173">当任一对象为 <see langword="null" /> 或者不处于 <see cref="F:System.Data.EntityState.Unchanged" /> 或 <see cref="F:System.Data.EntityState.Modified" /> 状态时。</span><span class="sxs-lookup"><span data-stu-id="a1469-173">When either object is <see langword="null" /> or is not in an <see cref="F:System.Data.EntityState.Unchanged" /> or <see cref="F:System.Data.EntityState.Modified" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="override this.Clear : unit -&gt; unit" Usage="entityCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1469-174">从集合中移除所有实体。</span><span class="sxs-lookup"><span data-stu-id="a1469-174">Removes all entities from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="a1469-175"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A> 执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="a1469-175"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A> does the following:</span></span>

-   <span data-ttu-id="a1469-176">将 <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> 标志设置为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="a1469-176">Sets the <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> flag to `false`.</span></span>

-   <span data-ttu-id="a1469-177">从集合中移除所有实体。</span><span class="sxs-lookup"><span data-stu-id="a1469-177">Removes all entities from the collection.</span></span>

-   <span data-ttu-id="a1469-178">从 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 分离移除的实体和 <xref:System.Data.Objects.ObjectStateManager> 的所有者之间的关系。</span><span class="sxs-lookup"><span data-stu-id="a1469-178">Detaches relationships between removed entities and the owner of the <xref:System.Data.Objects.DataClasses.EntityCollection%601> from the <xref:System.Data.Objects.ObjectStateManager>.</span></span>

-   <span data-ttu-id="a1469-179">从相关实体移除 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 的所有者。</span><span class="sxs-lookup"><span data-stu-id="a1469-179">Removes the owner of the <xref:System.Data.Objects.DataClasses.EntityCollection%601> from the related entities.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (TEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (entity As TEntity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(TEntity entity);" />
      <MemberSignature Language="F#" Value="abstract member Contains : 'Entity -&gt; bool&#xA;override this.Contains : 'Entity -&gt; bool" Usage="entityCollection.Contains entity" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="a1469-180">要在 <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> 中定位的对象。</span><span class="sxs-lookup"><span data-stu-id="a1469-180">The object to locate in the <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />.</span></span></param>
        <summary><span data-ttu-id="a1469-181">确定特定对象是否存在于集合中。</span><span class="sxs-lookup"><span data-stu-id="a1469-181">Determines whether a specific object exists in the collection.</span></span></summary>
        <returns><span data-ttu-id="a1469-182">如果在 <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> 中找到对象，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1469-182"><see langword="true" /> if the object is found in the <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="a1469-183">使用 <xref:System.Object.Equals%2A?displayProperty=nameWithType> 方法来比较指定对象和集合中已经存在的对象。</span><span class="sxs-lookup"><span data-stu-id="a1469-183">Uses the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method to compare the specified object with the objects already in the collection.</span></span>



## Examples
 <span data-ttu-id="a1469-184">此示例基于 [艾德公司销售模型](https://archive.codeplex.com/?p=msftdbprodsamples)。</span><span class="sxs-lookup"><span data-stu-id="a1469-184">This example is based on the [Adventure Works Sales Model](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span> <span data-ttu-id="a1469-185">若要运行此示例中的代码，必须已将 AdventureWorks 销售模型添加到您的项目中，并将项目配置为使用实体框架。</span><span class="sxs-lookup"><span data-stu-id="a1469-185">To run the code in this example, you must have already added the AdventureWorks Sales Model to your project and configured your project to use the Entity Framework.</span></span> <span data-ttu-id="a1469-186">为此，请完成 [如何：手动配置实体框架项目](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb738546(v=vs.100)) 和 [如何：手动定义模型和映射文件](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb399785(v=vs.100))中的过程。</span><span class="sxs-lookup"><span data-stu-id="a1469-186">To do this, complete the procedures in [How to: Manually Configure an Entity Framework Project](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb738546(v=vs.100)) and [How to: Manually Define the Model and Mapping Files](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb399785(v=vs.100)).</span></span>

 <span data-ttu-id="a1469-187">此示例将执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="a1469-187">This example does the following:</span></span>

1.  <span data-ttu-id="a1469-188">创建两个新的 `SalesOrderHeader` 实体并添加到 `Contact` 实体。</span><span class="sxs-lookup"><span data-stu-id="a1469-188">Creates two new `SalesOrderHeader` entities and adds them to the `Contact` entity.</span></span>

2.  <span data-ttu-id="a1469-189">从与 Contact 实体关联的 <xref:System.Data.Objects.DataClasses.RelationshipManager> 中获取所有相关端。</span><span class="sxs-lookup"><span data-stu-id="a1469-189">Gets all related ends from the <xref:System.Data.Objects.DataClasses.RelationshipManager> that is associated with the Contact entity.</span></span>

3.  <span data-ttu-id="a1469-190">循环访问 <xref:System.Data.Objects.DataClasses.IRelatedEnd> 集合。</span><span class="sxs-lookup"><span data-stu-id="a1469-190">Iterates through the collection of <xref:System.Data.Objects.DataClasses.IRelatedEnd>s.</span></span>

4.  <span data-ttu-id="a1469-191">获取每个相关端的 <xref:System.Data.Objects.DataClasses.EntityCollection%601>。</span><span class="sxs-lookup"><span data-stu-id="a1469-191">Gets the <xref:System.Data.Objects.DataClasses.EntityCollection%601> for each related end.</span></span>

5.  <span data-ttu-id="a1469-192">使用 <xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A> 方法从集合中移除其中一个实体。</span><span class="sxs-lookup"><span data-stu-id="a1469-192">Uses the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A> method to remove one of the entities from the collection.</span></span>

6.  <span data-ttu-id="a1469-193">调用 <xref:System.Data.Objects.DataClasses.EntityCollection%601.Contains%2A> 方法确定该对象是否已从集合中移除。</span><span class="sxs-lookup"><span data-stu-id="a1469-193">Calls the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Contains%2A> method to determine whether the object was removed from the collection.</span></span>

7.  <span data-ttu-id="a1469-194">使用 <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> 方法添加回实体。</span><span class="sxs-lookup"><span data-stu-id="a1469-194">Uses the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> method to add the entity back.</span></span>

 [!code-csharp[DP ObjectServices Concepts#IRelatedEnd_Add](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#irelatedend_add)]
 [!code-vb[DP ObjectServices Concepts#IRelatedEnd_Add](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#irelatedend_add)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (TEntity[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!TEntity[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As TEntity(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;TEntity&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : 'Entity[] * int -&gt; unit&#xA;override this.CopyTo : 'Entity[] * int -&gt; unit" Usage="entityCollection.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="TEntity[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="a1469-195">要复制到的数组。</span><span class="sxs-lookup"><span data-stu-id="a1469-195">The array to copy to.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="a1469-196">数组中开始复制的位置的索引（从零开始）。</span><span class="sxs-lookup"><span data-stu-id="a1469-196">The zero-based index in the array at which copying begins.</span></span></param>
        <summary><span data-ttu-id="a1469-197">将集合中的所有内容复制到数组，从目标数组的指定索引处开始。</span><span class="sxs-lookup"><span data-stu-id="a1469-197">Copies all the contents of the collection to an array, starting at the specified index of the target array.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.EntityCollection`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Data.Objects.DataClasses.EntityCollection&lt;'Entity (requires 'Entity : null and 'Entity :&gt; System.Data.Objects.DataClasses.IEntityWithRelationships)&gt;.Count" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Data.Objects.DataClasses.EntityCollection&lt;'Entity (requires 'Entity : null)&gt;.Count" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1469-198">获取集合中包含的对象数。</span><span class="sxs-lookup"><span data-stu-id="a1469-198">Gets the number of objects that are contained in the collection.</span></span></summary>
        <value><span data-ttu-id="a1469-199"><see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> 中包含的元素数。</span><span class="sxs-lookup"><span data-stu-id="a1469-199">The number of elements that are contained in the <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="a1469-200"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Count%2A> 属性获取当前本地集合中的实体数量，而不反映数据源中的集合大小。</span><span class="sxs-lookup"><span data-stu-id="a1469-200">The <xref:System.Data.Objects.DataClasses.EntityCollection%601.Count%2A> property gets the number of entities currently in the local collection and does not reflect the size of the collection in the data source.</span></span> <span data-ttu-id="a1469-201">零计数不一定表示相关集合为空。</span><span class="sxs-lookup"><span data-stu-id="a1469-201">A count of zero does not necessarily indicate that the related collection is empty.</span></span> <span data-ttu-id="a1469-202">要确定数据源中的集合大小，请调用 <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A> 方法或在查询路径中包含相关对象。</span><span class="sxs-lookup"><span data-stu-id="a1469-202">To determine the collection size in the data source, call the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A> method or include the related object in the query path.</span></span> <span data-ttu-id="a1469-203">有关详细信息，请参阅 [加载相关对象](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896272(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="a1469-203">For more information, see [Loading Related Objects](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896272(v=vs.100)).</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSourceQuery">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;TEntity&gt; CreateSourceQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!TEntity&gt; CreateSourceQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSourceQuery () As ObjectQuery(Of TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;TEntity&gt; ^ CreateSourceQuery();" />
      <MemberSignature Language="F#" Value="override this.CreateSourceQuery : unit -&gt; System.Data.Objects.ObjectQuery&lt;'Entity (requires 'Entity : null and 'Entity :&gt; System.Data.Objects.DataClasses.IEntityWithRelationships)&gt;" Usage="entityCollection.CreateSourceQuery " FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="F#" Value="override this.CreateSourceQuery : unit -&gt; System.Data.Objects.ObjectQuery&lt;'Entity (requires 'Entity : null)&gt;" Usage="entityCollection.CreateSourceQuery " FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1469-204">返回一个对象查询，执行该查询时返回的对象集合与当前集合包含的对象相同。</span><span class="sxs-lookup"><span data-stu-id="a1469-204">Returns an object query that, when it is executed, returns the same set of objects that exists in the current collection.</span></span></summary>
        <returns><span data-ttu-id="a1469-205">表示实体集合的 <see cref="T:System.Data.Objects.ObjectQuery`1" />。</span><span class="sxs-lookup"><span data-stu-id="a1469-205">An <see cref="T:System.Data.Objects.ObjectQuery`1" /> that represents the entity collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="a1469-206">此属性用于获得 <xref:System.Data.Objects.ObjectQuery%601> 的新实例，该实例返回同一对象集。</span><span class="sxs-lookup"><span data-stu-id="a1469-206">This property is used to obtain a new instance of <xref:System.Data.Objects.ObjectQuery%601> that returns the same set of objects.</span></span> <span data-ttu-id="a1469-207">对于更复杂的联接、联合或筛选查询，或者使用 <xref:System.Data.Objects.MergeOption.NoTracking> 选项返回处于已分离状态的相同对象，这可以作为起点。</span><span class="sxs-lookup"><span data-stu-id="a1469-207">This is useful as the starting point for a more complex join, union, or filtered query, or to return the same objects in a detached state by using the <xref:System.Data.Objects.MergeOption.NoTracking> option.</span></span>

 <span data-ttu-id="a1469-208"><xref:System.Data.Objects.DataClasses.EntityCollection%601.CreateSourceQuery%2A> 用于筛选中的对象， <xref:System.Data.Objects.DataClasses.EntityCollection%601> 使你能够仅绑定特定类型的对象。</span><span class="sxs-lookup"><span data-stu-id="a1469-208"><xref:System.Data.Objects.DataClasses.EntityCollection%601.CreateSourceQuery%2A> is used to filter objects in an <xref:System.Data.Objects.DataClasses.EntityCollection%601> to enable you to bind only objects of a specific type.</span></span> <span data-ttu-id="a1469-209">有关详细信息，请参阅 [将对象绑定到控件](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb738469(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="a1469-209">For more information, see [Binding Objects to Controls](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb738469(v=vs.100)).</span></span>



## Examples
 <span data-ttu-id="a1469-210">此示例基于 [School 模型](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896300(v=vs.100))的修改版本。</span><span class="sxs-lookup"><span data-stu-id="a1469-210">This example is based on a modified version of the [School Model](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896300(v=vs.100)).</span></span> <span data-ttu-id="a1469-211">此版本支持每种类型一个表继承，并使用 `Course` 作为抽象类型。</span><span class="sxs-lookup"><span data-stu-id="a1469-211">This version supports table-per-type inheritance with `Course` as an abstract type.</span></span> <span data-ttu-id="a1469-212">完成本演练以修改 School 模型，以支持本主题中使用的每种类型一个表继承示例。</span><span class="sxs-lookup"><span data-stu-id="a1469-212">Complete the  walkthrough to modify the School model to support the table-per-type inheritance example used in this topic.</span></span>

 <span data-ttu-id="a1469-213">此示例演示如何使用 <xref:System.Data.Objects.DataClasses.EntityCollection%601.CreateSourceQuery%2A> 筛选中的对象 <xref:System.Data.Objects.DataClasses.EntityCollection%601> ，并且仅绑定到特定类型的对象。</span><span class="sxs-lookup"><span data-stu-id="a1469-213">This example shows how to use <xref:System.Data.Objects.DataClasses.EntityCollection%601.CreateSourceQuery%2A> to filter objects in an <xref:System.Data.Objects.DataClasses.EntityCollection%601> and bind only to objects of a specific type.</span></span> <span data-ttu-id="a1469-214">有关此示例的完整版本，请参阅 [如何：将控件绑定到派生类型](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/dd283135(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="a1469-214">For a complete version of this example, see [How to: Bind Controls to Derived Types](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/dd283135(v=vs.100)).</span></span>



 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a1469-215">当对象处于 <see cref="F:System.Data.EntityState.Added" /> 状态时。</span><span class="sxs-lookup"><span data-stu-id="a1469-215">When the object is in an <see cref="F:System.Data.EntityState.Added" /> state.</span></span>

<span data-ttu-id="a1469-216">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a1469-216">-or-</span></span>

<span data-ttu-id="a1469-217">当对象处于 <see cref="F:System.Data.EntityState.Detached" /> 状态并且 <see cref="T:System.Data.Objects.MergeOption" /> 不为 <see cref="F:System.Data.Objects.MergeOption.NoTracking" /> 时。</span><span class="sxs-lookup"><span data-stu-id="a1469-217">When the object is in a <see cref="F:System.Data.EntityState.Detached" /> state with a <see cref="T:System.Data.Objects.MergeOption" /> other than <see cref="F:System.Data.Objects.MergeOption.NoTracking" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;TEntity&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!TEntity&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;TEntity&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'Entity (requires 'Entity : null and 'Entity :&gt; System.Data.Objects.DataClasses.IEntityWithRelationships)&gt;" Usage="entityCollection.GetEnumerator " FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'Entity (requires 'Entity : null)&gt;" Usage="entityCollection.GetEnumerator " FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1469-218">返回一个枚举器，用于循环访问集合中的对象。</span><span class="sxs-lookup"><span data-stu-id="a1469-218">Returns an enumerator that is used to iterate through the objects in the collection.</span></span></summary>
        <returns><span data-ttu-id="a1469-219">一个 <see cref="T:System.Collections.IEnumerator" />，循环访问 <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> 缓存的值集。</span><span class="sxs-lookup"><span data-stu-id="a1469-219">An <see cref="T:System.Collections.IEnumerator" /> that iterates through the set of values cached by <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.EntityCollection`1.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Data.Objects.DataClasses.EntityCollection&lt;'Entity (requires 'Entity : null and 'Entity :&gt; System.Data.Objects.DataClasses.IEntityWithRelationships)&gt;.IsReadOnly" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Data.Objects.DataClasses.EntityCollection&lt;'Entity (requires 'Entity : null)&gt;.IsReadOnly" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1469-220">获取一个值，该值指示 <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> 是否为只读。</span><span class="sxs-lookup"><span data-stu-id="a1469-220">Gets a value that indicates whether the <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="a1469-221">始终返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1469-221">Always returns <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public override void Load (System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Load(valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Load (mergeOption As MergeOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Load(System::Data::Objects::MergeOption mergeOption);" />
      <MemberSignature Language="F#" Value="override this.Load : System.Data.Objects.MergeOption -&gt; unit" Usage="entityCollection.Load mergeOption" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
      </Parameters>
      <Docs>
        <param name="mergeOption"><span data-ttu-id="a1469-222">指定此集合中的对象应如何与从以前针对相同 <see cref="T:System.Data.Objects.ObjectContext" /> 的查询中返回的对象合并。</span><span class="sxs-lookup"><span data-stu-id="a1469-222">Specifies how the objects in this collection should be merged with the objects that might have been returned from previous queries against the same <see cref="T:System.Data.Objects.ObjectContext" />.</span></span></param>
        <summary><span data-ttu-id="a1469-223">使用指定的合并选项将相关对象加载到集合中。</span><span class="sxs-lookup"><span data-stu-id="a1469-223">Loads related objects into the collection, using the specified merge option.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
<span data-ttu-id="a1469-224">此方法 `RelatedEnd.ValidateLoad` 在加载集合之前调用内部方法，后者验证对的调用 <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> 是否具有正确的条件。</span><span class="sxs-lookup"><span data-stu-id="a1469-224">This method calls the internal `RelatedEnd.ValidateLoad` method before loading the collection, which validates that a call to <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> has the correct conditions.</span></span> <span data-ttu-id="a1469-225">`RelatedEnd.ValidateLoad`方法检查：</span><span class="sxs-lookup"><span data-stu-id="a1469-225">The `RelatedEnd.ValidateLoad` method checks that:</span></span>

* <span data-ttu-id="a1469-226">存在有效的 <xref:System.Data.Objects.ObjectContext> 。</span><span class="sxs-lookup"><span data-stu-id="a1469-226">A valid <xref:System.Data.Objects.ObjectContext> exists.</span></span>
* <span data-ttu-id="a1469-227">实体未处于 <xref:System.Data.EntityState.Deleted> 状态。</span><span class="sxs-lookup"><span data-stu-id="a1469-227">The entity isn't in a <xref:System.Data.EntityState.Deleted> state.</span></span>
* <span data-ttu-id="a1469-228"><xref:System.Data.Objects.MergeOption><xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> <xref:System.Data.Objects.MergeOption.NoTracking> 当且仅当源实体为时，适用于 <xref:System.Data.Objects.MergeOption.NoTracking> 。</span><span class="sxs-lookup"><span data-stu-id="a1469-228"><xref:System.Data.Objects.MergeOption> for <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> must be <xref:System.Data.Objects.MergeOption.NoTracking> if and only if the source entity was <xref:System.Data.Objects.MergeOption.NoTracking>.</span></span> <span data-ttu-id="a1469-229">如果源实体是使用任何其他对象进行检索的 <xref:System.Data.Objects.MergeOption> ，则 <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> <xref:System.Data.Objects.MergeOption> 可以是 <xref:System.Data.Objects.MergeOption.NoTracking> (的，例如，可以使用加载实体， <xref:System.Data.Objects.MergeOption.OverwriteChanges> 并且 <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> 可以 <xref:System.Data.Objects.MergeOption.AppendOnly>) 选项。</span><span class="sxs-lookup"><span data-stu-id="a1469-229">If the source entity was retrieved with any other <xref:System.Data.Objects.MergeOption>, the <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> <xref:System.Data.Objects.MergeOption> can be anything but <xref:System.Data.Objects.MergeOption.NoTracking> (for example, the entity could have been loaded with <xref:System.Data.Objects.MergeOption.OverwriteChanges> and the <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> option can be <xref:System.Data.Objects.MergeOption.AppendOnly>).</span></span>
* <span data-ttu-id="a1469-230">如果 `mergeOption` 为 <xref:System.Data.Objects.MergeOption.NoTracking> ，则 <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> 不在已加载的实体上调用，也不会对 <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> 非空的、未跟踪的进行调用 <xref:System.Data.Objects.DataClasses.RelatedEnd> 。</span><span class="sxs-lookup"><span data-stu-id="a1469-230">If `mergeOption` is <xref:System.Data.Objects.MergeOption.NoTracking>, <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> isn't called on an already loaded entity and <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> isn't called on a non-empty, not-tracked <xref:System.Data.Objects.DataClasses.RelatedEnd>.</span></span>

 <span data-ttu-id="a1469-231">当集合中的对象已加载到中时 <xref:System.Data.Objects.ObjectContext> ， <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A> 方法强制执行 <xref:System.Data.Objects.MergeOption> 由参数指定的 `mergeOption` 。</span><span class="sxs-lookup"><span data-stu-id="a1469-231">When objects in the collection are already loaded into the <xref:System.Data.Objects.ObjectContext>, the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A> method enforces the <xref:System.Data.Objects.MergeOption> specified by the `mergeOption` parameter.</span></span> <span data-ttu-id="a1469-232">有关详细信息，请参阅 [标识解析、状态管理和更改跟踪](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896269(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="a1469-232">For more information, see [Identity Resolution, State Management, and Change Tracking](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896269(v=vs.100)).</span></span>

 <span data-ttu-id="a1469-233">若要显式加载相关对象，您必须 `Load` 对导航属性返回的相关端调用方法。</span><span class="sxs-lookup"><span data-stu-id="a1469-233">To explicitly load related objects, you must call the `Load` method on the related end returned by the navigation property.</span></span> <span data-ttu-id="a1469-234">对于一对多关系，请 <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A> 对调用方法 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 。</span><span class="sxs-lookup"><span data-stu-id="a1469-234">For a one-to-many relationship, call the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A> method on <xref:System.Data.Objects.DataClasses.EntityCollection%601>.</span></span> <span data-ttu-id="a1469-235">对于一对一关系，请调用 <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A> 上的 <xref:System.Data.Objects.DataClasses.EntityReference%601> 。</span><span class="sxs-lookup"><span data-stu-id="a1469-235">For a one-to-one relationship, call the <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A> on <xref:System.Data.Objects.DataClasses.EntityReference%601>.</span></span> <span data-ttu-id="a1469-236">这样可将相关对象数据加载到对象上下文中。</span><span class="sxs-lookup"><span data-stu-id="a1469-236">This loads the related object data into the object context.</span></span> <span data-ttu-id="a1469-237">您可以使用 Visual Basic) 中的循环 (枚举返回的结果的集合 `foreach` `For Each...Next` ，并有条件地对结果中的 `Load` <xref:System.Data.Objects.DataClasses.EntityReference%601> <xref:System.Data.Objects.DataClasses.EntityCollection%601> 每个实体的和属性调用方法。</span><span class="sxs-lookup"><span data-stu-id="a1469-237">You can enumerate through the collection of returned results using a `foreach` loop (`For Each...Next` in Visual Basic) and conditionally call the `Load` method on <xref:System.Data.Objects.DataClasses.EntityReference%601> and <xref:System.Data.Objects.DataClasses.EntityCollection%601> properties for each entity in the results.</span></span>

 <span data-ttu-id="a1469-238"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A>无论是否为，方法都从数据源加载相关对象 <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> `true` 。</span><span class="sxs-lookup"><span data-stu-id="a1469-238">The <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A> method loads related objects from the data source whether or not <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> is `true`.</span></span>

> [!NOTE]
>  <span data-ttu-id="a1469-239">当您在 <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A> (C#) 或 `foreach` (Visual Basic) 枚举过程中调用 `For Each` 方法时，对象服务会尝试打开一个新的数据读取器。</span><span class="sxs-lookup"><span data-stu-id="a1469-239">When you call the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A> method during a `foreach` (C#) or `For Each` (Visual Basic) enumeration, Object Services tries to open a new data reader.</span></span> <span data-ttu-id="a1469-240">除非您已经通过在连接字符串中指定 `multipleactiveresultsets=true` 启用了多个活动结果集，否则此操作将失败。</span><span class="sxs-lookup"><span data-stu-id="a1469-240">This operation will fail unless you have enabled multiple active results sets by specifying `multipleactiveresultsets=true` in the connection string.</span></span> <span data-ttu-id="a1469-241">还可以将查询的结果加载到一个 <xref:System.Collections.Generic.List%601> 集合中。</span><span class="sxs-lookup"><span data-stu-id="a1469-241">You can also load the result of the query into a <xref:System.Collections.Generic.List%601> collection.</span></span> <span data-ttu-id="a1469-242">这样将关闭数据读取器，并允许您对集合进行枚举来加载引用的对象。</span><span class="sxs-lookup"><span data-stu-id="a1469-242">This closes the data reader and enables you to enumerate over the collection to load referenced objects.</span></span>

 <span data-ttu-id="a1469-243"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A?displayProperty=nameWithType> 方法与 <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A?displayProperty=nameWithType> 方法同步。</span><span class="sxs-lookup"><span data-stu-id="a1469-243">The <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A?displayProperty=nameWithType> method is synchronized with the <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A?displayProperty=nameWithType> method.</span></span>



## Examples
 <span data-ttu-id="a1469-244">此示例基于 [艾德公司销售模型](https://archive.codeplex.com/?p=msftdbprodsamples)。</span><span class="sxs-lookup"><span data-stu-id="a1469-244">This example is based on the [Adventure Works Sales Model](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span> <span data-ttu-id="a1469-245">若要运行此示例中的代码，必须已将 AdventureWorks 销售模型添加到您的项目中，并将项目配置为使用实体框架。</span><span class="sxs-lookup"><span data-stu-id="a1469-245">To run the code in this example, you must have already added the AdventureWorks Sales Model to your project and configured your project to use the Entity Framework.</span></span> <span data-ttu-id="a1469-246">为此，请完成 [如何：手动配置实体框架项目](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb738546(v=vs.100)) 和 [如何：手动定义模型和映射文件](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb399785(v=vs.100))中的过程。</span><span class="sxs-lookup"><span data-stu-id="a1469-246">To do this, complete the procedures in [How to: Manually Configure an Entity Framework Project](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb738546(v=vs.100)) and [How to: Manually Define the Model and Mapping Files](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb399785(v=vs.100)).</span></span>

 <span data-ttu-id="a1469-247">本示例为 `SalesOrderHeader` 实体加载相关 `Contact` 对象。</span><span class="sxs-lookup"><span data-stu-id="a1469-247">This example loads the related `SalesOrderHeader` objects for the `Contact` entity.</span></span>

 [!code-csharp[DP ObjectServices Concepts#QueryWithLoad](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#querywithload)]
 [!code-vb[DP ObjectServices Concepts#QueryWithLoad](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#querywithload)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCollectionDeserialized">
      <MemberSignature Language="C#" Value="public void OnCollectionDeserialized (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnCollectionDeserialized(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.OnCollectionDeserialized(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnCollectionDeserialized (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnCollectionDeserialized(System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="member this.OnCollectionDeserialized : System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="entityCollection.OnCollectionDeserialized context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Runtime.Serialization.OnDeserialized]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Serialization.OnDeserialized&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="a1469-248">流上下文。</span><span class="sxs-lookup"><span data-stu-id="a1469-248">The streaming context.</span></span></param>
        <summary><span data-ttu-id="a1469-249">在内部使用，用于反序列化实体对象。</span><span class="sxs-lookup"><span data-stu-id="a1469-249">Used internally to deserialize entity objects.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSerializing">
      <MemberSignature Language="C#" Value="public void OnSerializing (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnSerializing(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.OnSerializing(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnSerializing (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnSerializing(System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="member this.OnSerializing : System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="entityCollection.OnSerializing context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Runtime.Serialization.OnSerializing]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Serialization.OnSerializing&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="a1469-250">流上下文。</span><span class="sxs-lookup"><span data-stu-id="a1469-250">The streaming context.</span></span></param>
        <summary><span data-ttu-id="a1469-251">在内部使用，用于序列化实体对象。</span><span class="sxs-lookup"><span data-stu-id="a1469-251">Used internally to serialize entity objects.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (TEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (entity As TEntity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(TEntity entity);" />
      <MemberSignature Language="F#" Value="override this.Remove : 'Entity -&gt; bool" Usage="entityCollection.Remove entity" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="a1469-252">要从集合中移除的对象。</span><span class="sxs-lookup"><span data-stu-id="a1469-252">The object to remove from the collection.</span></span></param>
        <summary><span data-ttu-id="a1469-253">从集合移除对象，并标记要删除的关系。</span><span class="sxs-lookup"><span data-stu-id="a1469-253">Removes an object from the collection and marks the relationship for deletion.</span></span></summary>
        <returns><span data-ttu-id="a1469-254">如果成功移除了该项，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1469-254"><see langword="true" /> if item was successfully removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="a1469-255"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A> 方法也删除源对象和要从集合中移除的对象之间的关系。</span><span class="sxs-lookup"><span data-stu-id="a1469-255">The <xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A> method also deletes the relationship between the source object and the object being removed from the collection.</span></span> <span data-ttu-id="a1469-256">如果关系具有引用完整性约束，在依赖对象上调用 <xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A> 方法将标记关系和依赖对象进行删除。</span><span class="sxs-lookup"><span data-stu-id="a1469-256">If the relationship has a referential integrity constraint, calling the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A> method on a dependent object marks both the relationship and the dependent object for deletion.</span></span> <span data-ttu-id="a1469-257">发生此现象的原因是约束指示依赖对象在与父对象没有关系的情况下无法存在。</span><span class="sxs-lookup"><span data-stu-id="a1469-257">This occurs because the constraint indicates that the dependent object cannot exist without a relationship to the parent.</span></span> <span data-ttu-id="a1469-258">有关详细信息，请参阅 [ReferentialConstraint 元素 (CSDL) ](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb738464(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="a1469-258">For more information, see [ReferentialConstraint Element (CSDL)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb738464(v=vs.100)).</span></span>

 <span data-ttu-id="a1469-259"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A>`false`如果指定的对象不在集合中，则返回。</span><span class="sxs-lookup"><span data-stu-id="a1469-259"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A> returns `false` when the specified object is not in the collection.</span></span>



## Examples
 <span data-ttu-id="a1469-260">此示例基于 [艾德公司销售模型](https://archive.codeplex.com/?p=msftdbprodsamples)。</span><span class="sxs-lookup"><span data-stu-id="a1469-260">This example is based on the [Adventure Works Sales Model](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span> <span data-ttu-id="a1469-261">若要运行此示例中的代码，必须已将 AdventureWorks 销售模型添加到您的项目中，并将项目配置为使用实体框架。</span><span class="sxs-lookup"><span data-stu-id="a1469-261">To run the code in this example, you must have already added the AdventureWorks Sales Model to your project and configured your project to use the Entity Framework.</span></span> <span data-ttu-id="a1469-262">为此，请完成 [如何：手动配置实体框架项目](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb738546(v=vs.100)) 和 [如何：手动定义模型和映射文件](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb399785(v=vs.100))中的过程。</span><span class="sxs-lookup"><span data-stu-id="a1469-262">To do this, complete the procedures in [How to: Manually Configure an Entity Framework Project](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb738546(v=vs.100)) and [How to: Manually Define the Model and Mapping Files](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb399785(v=vs.100)).</span></span>

 <span data-ttu-id="a1469-263">本示例使用 <xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A> 方法从集合中移除一个实体，然后调用 <xref:System.Data.Objects.DataClasses.EntityCollection%601.Contains%2A> 方法确定该对象是否从集合中移除。</span><span class="sxs-lookup"><span data-stu-id="a1469-263">This example uses the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A> method to remove one of the entities from the collection and then calls the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Contains%2A> method to determine whether the object was removed from the collection.</span></span>

 [!code-csharp[DP ObjectServices Concepts#IRelatedEnd_Add](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#irelatedend_add)]
 [!code-vb[DP ObjectServices Concepts#IRelatedEnd_Add](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#irelatedend_add)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1469-264"><paramref name="entity" /> 对象为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1469-264"><paramref name="entity" /> object is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a1469-265"><paramref name="entity" /> 对象没有附加到同一对象上下文。</span><span class="sxs-lookup"><span data-stu-id="a1469-265">The <paramref name="entity" /> object is not attached to the same object context.</span></span>

<span data-ttu-id="a1469-266">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a1469-266">-or-</span></span>

<span data-ttu-id="a1469-267"><paramref name="entity" /> 对象没有有效的关系管理器。</span><span class="sxs-lookup"><span data-stu-id="a1469-267">The <paramref name="entity" /> object does not have a valid relationship manager.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="entityCollection.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1469-268">返回一个枚举器，用于循环访问 <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> 缓存的值集。</span><span class="sxs-lookup"><span data-stu-id="a1469-268">Returns an enumerator that is used to iterate through the set of values cached by <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />.</span></span></summary>
        <returns><span data-ttu-id="a1469-269">一个 <see cref="T:System.Collections.IEnumerator" />，循环访问 <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> 缓存的值集。</span><span class="sxs-lookup"><span data-stu-id="a1469-269">An <see cref="T:System.Collections.IEnumerator" /> that iterates through the set of values cached by <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.ContainsListCollection">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IListSource.ContainsListCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#ContainsListCollection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ContainsListCollection As Boolean Implements IListSource.ContainsListCollection" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ComponentModel::IListSource::ContainsListCollection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.ComponentModel.IListSource.ContainsListCollection : bool" Usage="System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IListSource.ContainsListCollection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1469-270">获取一个值，该值指示相关实体集合是否包含集合对象。</span><span class="sxs-lookup"><span data-stu-id="a1469-270">Gets a value that indicates whether the related entity collection consists of collection objects.</span></span></summary>
        <value><span data-ttu-id="a1469-271">此属性始终返回 <see langword="false" />，因为 <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> 包含对象，但不包含集合。</span><span class="sxs-lookup"><span data-stu-id="a1469-271">This property always returns <see langword="false" /> because the <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> contains objects and not collections.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="a1469-272">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="a1469-272">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a1469-273">它只能在 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 实例被强制转换为 <xref:System.ComponentModel.IListSource> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="a1469-273">It can be used only when the <xref:System.Data.Objects.DataClasses.EntityCollection%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.GetList">
      <MemberSignature Language="C#" Value="System.Collections.IList IListSource.GetList ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IList System.ComponentModel.IListSource.GetList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#GetList" />
      <MemberSignature Language="VB.NET" Value="Function GetList () As IList Implements IListSource.GetList" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IList ^ System.ComponentModel.IListSource.GetList() = System::ComponentModel::IListSource::GetList;" />
      <MemberSignature Language="F#" Value="abstract member System.ComponentModel.IListSource.GetList : unit -&gt; System.Collections.IList&#xA;override this.System.ComponentModel.IListSource.GetList : unit -&gt; System.Collections.IList" Usage="entityCollection.System.ComponentModel.IListSource.GetList " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IListSource.GetList</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1469-274">返回 <see cref="T:System.Collections.IList" /> 形式的集合用于数据绑定。</span><span class="sxs-lookup"><span data-stu-id="a1469-274">Returns the collection as an <see cref="T:System.Collections.IList" /> used for data binding.</span></span></summary>
        <returns><span data-ttu-id="a1469-275">实体对象的 <see cref="T:System.Collections.IList" />。</span><span class="sxs-lookup"><span data-stu-id="a1469-275">An <see cref="T:System.Collections.IList" /> of entity objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="a1469-276">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="a1469-276">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a1469-277">它只能在 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 实例被强制转换为 <xref:System.ComponentModel.IListSource> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="a1469-277">It can be used only when the <xref:System.Data.Objects.DataClasses.EntityCollection%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>

 <span data-ttu-id="a1469-278">此方法实现与 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 的数据绑定。</span><span class="sxs-lookup"><span data-stu-id="a1469-278">This method enables data binding to an <xref:System.Data.Objects.DataClasses.EntityCollection%601>.</span></span> <span data-ttu-id="a1469-279">它由绑定到集合的控件进行调用。</span><span class="sxs-lookup"><span data-stu-id="a1469-279">It is called by the control bound to the collection.</span></span> <span data-ttu-id="a1469-280">有关详细信息，请参阅 [将对象绑定到控件](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb738469(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="a1469-280">For more information, see [Binding Objects to Controls](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb738469(v=vs.100)).</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
