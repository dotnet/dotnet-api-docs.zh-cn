<Type Name="EntityReference&lt;TEntity&gt;" FullName="System.Data.Objects.DataClasses.EntityReference&lt;TEntity&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="068481ea89ffb8e70822645e65bb9daddaaa36a2" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86825425" /></Metadata><TypeSignature Language="C#" Value="public sealed class EntityReference&lt;TEntity&gt; : System.Data.Objects.DataClasses.EntityReference where TEntity : class, IEntityWithRelationships" FrameworkAlternate="netframework-3.5" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit EntityReference`1&lt;class (class System.Data.Objects.DataClasses.IEntityWithRelationships) TEntity&gt; extends System.Data.Objects.DataClasses.EntityReference" FrameworkAlternate="netframework-3.5" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.DataClasses.EntityReference`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntityReference(Of TEntity)&#xA;Inherits EntityReference" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TEntity&gt;&#xA; where TEntity : class, IEntityWithRelationshipspublic ref class EntityReference sealed : System::Data::Objects::DataClasses::EntityReference" FrameworkAlternate="netframework-3.5" />
  <TypeSignature Language="F#" Value="type EntityReference&lt;'Entity (requires 'Entity : null and 'Entity :&gt; IEntityWithRelationships)&gt; = class&#xA;    inherit EntityReference" FrameworkAlternate="netframework-3.5" />
  <TypeSignature Language="C#" Value="public sealed class EntityReference&lt;TEntity&gt; : System.Data.Objects.DataClasses.EntityReference where TEntity : class" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit EntityReference`1&lt;class TEntity&gt; extends System.Data.Objects.DataClasses.EntityReference" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TEntity&gt;&#xA; where TEntity : classpublic ref class EntityReference sealed : System::Data::Objects::DataClasses::EntityReference" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type EntityReference&lt;'Entity (requires 'Entity : null)&gt; = class&#xA;    inherit EntityReference" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TEntity">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Data.Objects.DataClasses.EntityReference</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Serialization.DataContract]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Serialization.DataContract&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TEntity"><span data-ttu-id="11ff2-101">引用的实体类型。</span><span class="sxs-lookup"><span data-stu-id="11ff2-101">The entity type of the reference.</span></span></typeparam>
    <summary><span data-ttu-id="11ff2-102">表示重数为零或一的关联的相关端。</span><span class="sxs-lookup"><span data-stu-id="11ff2-102">Represents a related end of an association with a multiplicity of zero or one.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="11ff2-103">当相关端的重数为零或一时，导航属性返回一个 <xref:System.Data.Objects.DataClasses.EntityReference%601> 对象。</span><span class="sxs-lookup"><span data-stu-id="11ff2-103">An <xref:System.Data.Objects.DataClasses.EntityReference%601> object is returned by a navigation property when the related end has a multiplicity of zero or one.</span></span> <span data-ttu-id="11ff2-104">有关详细信息，请参阅 [NavigationProperty 元素 (CSDL) ](https://msdn.microsoft.com/library/5829a238-a50e-4c81-901d-7b54fc00f27e)。</span><span class="sxs-lookup"><span data-stu-id="11ff2-104">For more information, see [NavigationProperty Element (CSDL)](https://msdn.microsoft.com/library/5829a238-a50e-4c81-901d-7b54fc00f27e).</span></span>

 <span data-ttu-id="11ff2-105"><xref:System.Data.Objects.DataClasses.EntityReference%601> 对象可能在关系的另一端具有相应的 <xref:System.Data.Objects.DataClasses.EntityCollection%601>（一对多关系）或 <xref:System.Data.Objects.DataClasses.EntityReference%601>（一对一关系）。</span><span class="sxs-lookup"><span data-stu-id="11ff2-105">An <xref:System.Data.Objects.DataClasses.EntityReference%601> object might have a corresponding <xref:System.Data.Objects.DataClasses.EntityCollection%601> (one-to-many relationship) or <xref:System.Data.Objects.DataClasses.EntityReference%601> (one-to-one relationship) at the other end of the relationship.</span></span> <span data-ttu-id="11ff2-106">当 <xref:System.Data.Objects.DataClasses.EntityReference%601> 和 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 模型位于同一关系的相反端时，该关系的完整性维持在对象级别。</span><span class="sxs-lookup"><span data-stu-id="11ff2-106">When an <xref:System.Data.Objects.DataClasses.EntityReference%601> and an <xref:System.Data.Objects.DataClasses.EntityCollection%601> model opposing ends of the same relationship, the integrity of the relationship is maintained at the object level.</span></span>

 <span data-ttu-id="11ff2-107">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="11ff2-107">This class cannot be inherited.</span></span>



## Examples
 <span data-ttu-id="11ff2-108">此示例演示如何使用 <xref:System.Data.Objects.DataClasses.EntityReference%601> 对象更改 `SalesOrderHeader` 对象和表示订单发货地址的相关 `Address` 对象之间的关系。</span><span class="sxs-lookup"><span data-stu-id="11ff2-108">This example shows how to use the <xref:System.Data.Objects.DataClasses.EntityReference%601> object to change a relationship between a `SalesOrderHeader` object and a related `Address` object that represents the shipping address for the order.</span></span>

 [!code-csharp[DP ObjectServices Concepts#ChangeObjectRelationship](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#changeobjectrelationship)]
 [!code-vb[DP ObjectServices Concepts#ChangeObjectRelationship](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#changeobjectrelationship)]

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="11ff2-109">创建 <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> 的新实例。</span><span class="sxs-lookup"><span data-stu-id="11ff2-109">Creates a new instance of <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="public void Attach (TEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Attach(!TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.Attach(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Attach (entity As TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Attach(TEntity entity);" />
      <MemberSignature Language="F#" Value="override this.Attach : 'Entity -&gt; unit" Usage="entityReference.Attach entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="11ff2-110">附加的对象。</span><span class="sxs-lookup"><span data-stu-id="11ff2-110">The object being attached.</span></span></param>
        <summary><span data-ttu-id="11ff2-111">在对象上下文中创建两个对象之间的多对一或一对一关系。</span><span class="sxs-lookup"><span data-stu-id="11ff2-111">Creates a many-to-one or one-to-one relationship between two objects in the object context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="11ff2-112"><xref:System.Data.Objects.DataClasses.EntityReference%601.Attach%2A> 方法用于定义当对象和相关对象已经附加到一个对象上下文时，这两个对象之间的关系。</span><span class="sxs-lookup"><span data-stu-id="11ff2-112">The <xref:System.Data.Objects.DataClasses.EntityReference%601.Attach%2A> method is used to define a relationship between an object and a related object when both objects are already attached to an object context.</span></span> <span data-ttu-id="11ff2-113">如果相关对象尚未附加到对象上下文，将相关对象设置为 <xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="11ff2-113">Set the related object to the <xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A> property if the related object is not already attached to the object context.</span></span> <span data-ttu-id="11ff2-114">两个对象都分离时，还可以通过将相关对象设置为 <xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A> 属性，然后附加对象图中的根对象来定义关系。</span><span class="sxs-lookup"><span data-stu-id="11ff2-114">When both objects are detached, you can also define the relationship by setting the related object to the <xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A> property and then attaching the root object in the object graph.</span></span> <span data-ttu-id="11ff2-115">有关详细信息，请参阅 [附加和分离对象](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb738470(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="11ff2-115">For more information, see [Attaching and Detaching Objects](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb738470(v=vs.100)).</span></span>

 <span data-ttu-id="11ff2-116">与此 <xref:System.Data.Objects.DataClasses.EntityReference%601> 关联的对象以及附加到它的所有对象必须处于 <xref:System.Data.EntityState.Unchanged> 或 <xref:System.Data.EntityState.Modified> 状态。</span><span class="sxs-lookup"><span data-stu-id="11ff2-116">The object associated with this <xref:System.Data.Objects.DataClasses.EntityReference%601> and all objects being attached to it must be in an <xref:System.Data.EntityState.Unchanged> or <xref:System.Data.EntityState.Modified> state.</span></span>

 <span data-ttu-id="11ff2-117">处于 <xref:System.Data.EntityState.Deleted> 状态的对象只能在 <xref:System.Data.Objects.ObjectStateManager> 已经跟踪关系实例时附加。</span><span class="sxs-lookup"><span data-stu-id="11ff2-117">An object in the <xref:System.Data.EntityState.Deleted> state can only be attached when the <xref:System.Data.Objects.ObjectStateManager> is already tracking the relationship instance.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="11ff2-118">在 <paramref name="entity" /> 为 <see langword="null" /> 时。</span><span class="sxs-lookup"><span data-stu-id="11ff2-118">When the <paramref name="entity" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="11ff2-119">当 <paramref name="entity" /> 无法与当前相关端关联时。</span><span class="sxs-lookup"><span data-stu-id="11ff2-119">When the <paramref name="entity" /> cannot be related to the current related end.</span></span> <span data-ttu-id="11ff2-120">这会在概念性架构中的关联不支持两种类型间的关系时发生。</span><span class="sxs-lookup"><span data-stu-id="11ff2-120">This can occur when the association in the conceptual schema does not support a relationship between the two types.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSourceQuery">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;TEntity&gt; CreateSourceQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!TEntity&gt; CreateSourceQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.CreateSourceQuery" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSourceQuery () As ObjectQuery(Of TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;TEntity&gt; ^ CreateSourceQuery();" />
      <MemberSignature Language="F#" Value="override this.CreateSourceQuery : unit -&gt; System.Data.Objects.ObjectQuery&lt;'Entity (requires 'Entity : null and 'Entity :&gt; System.Data.Objects.DataClasses.IEntityWithRelationships)&gt;" Usage="entityReference.CreateSourceQuery " FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="F#" Value="override this.CreateSourceQuery : unit -&gt; System.Data.Objects.ObjectQuery&lt;'Entity (requires 'Entity : null)&gt;" Usage="entityReference.CreateSourceQuery " FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="11ff2-121">创建一个返回相关对象的等效对象查询。</span><span class="sxs-lookup"><span data-stu-id="11ff2-121">Creates an equivalent object query that returns the related object.</span></span></summary>
        <returns><span data-ttu-id="11ff2-122">一个 <see cref="T:System.Data.Objects.ObjectQuery`1" />，其返回相关对象。</span><span class="sxs-lookup"><span data-stu-id="11ff2-122">An <see cref="T:System.Data.Objects.ObjectQuery`1" /> that returns the related object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="11ff2-123">此方法用于获得一个在执行时返回相关对象的新 <xref:System.Data.Objects.ObjectQuery%601> 实例。</span><span class="sxs-lookup"><span data-stu-id="11ff2-123">This method is used to obtain a new instance of <xref:System.Data.Objects.ObjectQuery%601> that, when it is executed, returns the related object.</span></span> <span data-ttu-id="11ff2-124">对于更复杂的联接、联合或筛选查询，或者使用 <xref:System.Data.Objects.MergeOption.NoTracking> 选项返回处于已分离状态的引用对象，这可以作为起点。</span><span class="sxs-lookup"><span data-stu-id="11ff2-124">This is useful as the starting point for a more complex join, union, or filtered query, or to return the referenced object in a detached state using the <xref:System.Data.Objects.MergeOption.NoTracking> option.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="11ff2-125">当对象处于 <see cref="F:System.Data.EntityState.Added" /> 状态时。</span><span class="sxs-lookup"><span data-stu-id="11ff2-125">When the object is in an <see cref="F:System.Data.EntityState.Added" /> state.</span></span>

<span data-ttu-id="11ff2-126">- 或 -</span><span class="sxs-lookup"><span data-stu-id="11ff2-126">-or-</span></span>

<span data-ttu-id="11ff2-127">当对象处于 <see cref="F:System.Data.EntityState.Detached" /> 状态并且 <see cref="P:System.Data.Objects.ObjectQuery.MergeOption" /> 不为 <see cref="F:System.Data.Objects.MergeOption.NoTracking" /> 时。</span><span class="sxs-lookup"><span data-stu-id="11ff2-127">When the object is in a <see cref="F:System.Data.EntityState.Detached" /> state with a <see cref="P:System.Data.Objects.ObjectQuery.MergeOption" /> other than <see cref="F:System.Data.Objects.MergeOption.NoTracking" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public override void Load (System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Load(valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.Load(System.Data.Objects.MergeOption)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Load (mergeOption As MergeOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Load(System::Data::Objects::MergeOption mergeOption);" />
      <MemberSignature Language="F#" Value="override this.Load : System.Data.Objects.MergeOption -&gt; unit" Usage="entityReference.Load mergeOption" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
      </Parameters>
      <Docs>
        <param name="mergeOption"><span data-ttu-id="11ff2-128">指定当 <see cref="T:System.Data.Objects.ObjectContext" /> 中已存在该对象时，应如何返回它。</span><span class="sxs-lookup"><span data-stu-id="11ff2-128">Specifies how the object should be returned if it already exists in the <see cref="T:System.Data.Objects.ObjectContext" />.</span></span></param>
        <summary><span data-ttu-id="11ff2-129">使用指定的合并选项为此 <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> 加载相关对象。</span><span class="sxs-lookup"><span data-stu-id="11ff2-129">Loads the related object for this <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> with the specified merge option.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="11ff2-130">此方法用于加载相关对象。</span><span class="sxs-lookup"><span data-stu-id="11ff2-130">This method is used to load the related object.</span></span>

 <span data-ttu-id="11ff2-131">加载后，从 <xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A> 属性访问相关对象。</span><span class="sxs-lookup"><span data-stu-id="11ff2-131">When loaded, the related object is accessed from the <xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A> property.</span></span>

 <span data-ttu-id="11ff2-132">若要显式加载相关对象，您必须 `Load` 对导航属性返回的相关端调用方法。</span><span class="sxs-lookup"><span data-stu-id="11ff2-132">To explicitly load related objects, you must call the `Load` method on the related end returned by the navigation property.</span></span> <span data-ttu-id="11ff2-133">对于一对多关系，请调用 <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A> 的 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 方法，而对于一对一关系，请调用 <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A> 的 <xref:System.Data.Objects.DataClasses.EntityReference%601>。</span><span class="sxs-lookup"><span data-stu-id="11ff2-133">For a one-to-many relationship, call the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A> method on <xref:System.Data.Objects.DataClasses.EntityCollection%601>, and for a one-to-one relationship, call the <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A> on <xref:System.Data.Objects.DataClasses.EntityReference%601>.</span></span> <span data-ttu-id="11ff2-134">这样可将相关对象数据加载到对象上下文中。</span><span class="sxs-lookup"><span data-stu-id="11ff2-134">This loads the related object data into the object context.</span></span> <span data-ttu-id="11ff2-135">当查询返回结果时，可以使用 Visual Basic) 中的循环 (枚举对象的集合， `foreach` `For Each...Next` 并有条件地对结果中的 `Load` <xref:System.Data.Objects.DataClasses.EntityReference%601> <xref:System.Data.Objects.DataClasses.EntityCollection%601> 每个实体的和属性调用方法。</span><span class="sxs-lookup"><span data-stu-id="11ff2-135">When a query returns results, you can enumerate through the collection of objects using a `foreach` loop (`For Each...Next` in Visual Basic) and conditionally call the `Load` method on <xref:System.Data.Objects.DataClasses.EntityReference%601> and <xref:System.Data.Objects.DataClasses.EntityCollection%601> properties for each entity in the results.</span></span>

 <span data-ttu-id="11ff2-136"><xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A>无论是否为，方法都从数据源加载相关对象 <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> `true` 。</span><span class="sxs-lookup"><span data-stu-id="11ff2-136">The <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A> method loads related objects from the data source whether or not <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> is `true`.</span></span>

> [!NOTE]
>  <span data-ttu-id="11ff2-137">当您在 <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A> (C#) 或 `foreach` (Visual Basic) 枚举过程中调用 `For Each` 方法时，对象服务会尝试打开一个新的数据读取器。</span><span class="sxs-lookup"><span data-stu-id="11ff2-137">When you call the <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A> method during a `foreach` (C#) or `For Each` (Visual Basic) enumeration, Object Services tries to open a new data reader.</span></span> <span data-ttu-id="11ff2-138">除非您已经通过在连接字符串中指定 `multipleactiveresultsets=true` 启用了多个活动结果集，否则此操作将失败。</span><span class="sxs-lookup"><span data-stu-id="11ff2-138">This operation will fail unless you have enabled multiple active results sets by specifying `multipleactiveresultsets=true` in the connection string.</span></span> <span data-ttu-id="11ff2-139">还可以将查询的结果加载到一个 <xref:System.Collections.Generic.List%601> 集合中。</span><span class="sxs-lookup"><span data-stu-id="11ff2-139">You can also load the result of the query into a <xref:System.Collections.Generic.List%601> collection.</span></span> <span data-ttu-id="11ff2-140">这样将关闭数据读取器，并允许您对集合进行枚举来加载引用的对象。</span><span class="sxs-lookup"><span data-stu-id="11ff2-140">This closes the data reader and enables you to enumerate over the collection to load referenced objects.</span></span>

<span data-ttu-id="11ff2-141">此方法 `RelatedEnd.ValidateLoad` 在加载相关对象之前调用内部方法，这将验证对的调用 <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> 是否具有正确的条件。</span><span class="sxs-lookup"><span data-stu-id="11ff2-141">This method calls the internal `RelatedEnd.ValidateLoad` method before loading the related object, which validates that a call to <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> has the correct conditions.</span></span> <span data-ttu-id="11ff2-142">`RelatedEnd.ValidateLoad`方法检查：</span><span class="sxs-lookup"><span data-stu-id="11ff2-142">The `RelatedEnd.ValidateLoad` method checks that:</span></span>

* <span data-ttu-id="11ff2-143">存在有效的 <xref:System.Data.Objects.ObjectContext> 。</span><span class="sxs-lookup"><span data-stu-id="11ff2-143">A valid <xref:System.Data.Objects.ObjectContext> exists.</span></span>
* <span data-ttu-id="11ff2-144">实体未处于 <xref:System.Data.EntityState.Deleted> 状态。</span><span class="sxs-lookup"><span data-stu-id="11ff2-144">The entity isn't in a <xref:System.Data.EntityState.Deleted> state.</span></span>
* <span data-ttu-id="11ff2-145"><xref:System.Data.Objects.MergeOption><xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> <xref:System.Data.Objects.MergeOption.NoTracking> 当且仅当源实体为时，适用于 <xref:System.Data.Objects.MergeOption.NoTracking> 。</span><span class="sxs-lookup"><span data-stu-id="11ff2-145"><xref:System.Data.Objects.MergeOption> for <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> must be <xref:System.Data.Objects.MergeOption.NoTracking> if and only if the source entity was <xref:System.Data.Objects.MergeOption.NoTracking>.</span></span> <span data-ttu-id="11ff2-146">如果源实体是使用任何其他对象进行检索的 <xref:System.Data.Objects.MergeOption> ，则 <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> <xref:System.Data.Objects.MergeOption> 可以是 <xref:System.Data.Objects.MergeOption.NoTracking> (的，例如，可以使用加载实体， <xref:System.Data.Objects.MergeOption.OverwriteChanges> 并且 <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> 可以 <xref:System.Data.Objects.MergeOption.AppendOnly>) 选项。</span><span class="sxs-lookup"><span data-stu-id="11ff2-146">If the source entity was retrieved with any other <xref:System.Data.Objects.MergeOption>, the <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> <xref:System.Data.Objects.MergeOption> can be anything but <xref:System.Data.Objects.MergeOption.NoTracking> (for example, the entity could have been loaded with <xref:System.Data.Objects.MergeOption.OverwriteChanges> and the <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> option can be <xref:System.Data.Objects.MergeOption.AppendOnly>).</span></span>
* <span data-ttu-id="11ff2-147">如果 `mergeOption` 为 <xref:System.Data.Objects.MergeOption.NoTracking> ，则 <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> 不在已加载的实体上调用，也不会对 <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> 非空的、未跟踪的进行调用 <xref:System.Data.Objects.DataClasses.RelatedEnd> 。</span><span class="sxs-lookup"><span data-stu-id="11ff2-147">If `mergeOption` is <xref:System.Data.Objects.MergeOption.NoTracking>, <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> isn't called on an already loaded entity and <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> isn't called on a non-empty, not-tracked <xref:System.Data.Objects.DataClasses.RelatedEnd>.</span></span>

 <span data-ttu-id="11ff2-148">如果已在中加载相关对象 <xref:System.Data.Objects.ObjectContext> ，则该 <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A> 方法将强制执行 <xref:System.Data.Objects.MergeOption> 由参数指定的 `mergeOption` 。</span><span class="sxs-lookup"><span data-stu-id="11ff2-148">When the related object is already loaded in the <xref:System.Data.Objects.ObjectContext>, the <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A> method enforces the <xref:System.Data.Objects.MergeOption> specified by the `mergeOption` parameter.</span></span> <span data-ttu-id="11ff2-149">有关详细信息，请参阅 [标识解析、状态管理和更改跟踪](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896269(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="11ff2-149">For more information, see [Identity Resolution, State Management, and Change Tracking](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896269(v=vs.100)).</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="11ff2-150"><see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> 的源为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="11ff2-150">The source of the <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> is <see langword="null" />.</span></span>

<span data-ttu-id="11ff2-151">- 或 -</span><span class="sxs-lookup"><span data-stu-id="11ff2-151">-or-</span></span>

<span data-ttu-id="11ff2-152">查询返回一个以上的相关端。</span><span class="sxs-lookup"><span data-stu-id="11ff2-152">A query returned more than one related end.</span></span>

<span data-ttu-id="11ff2-153">- 或 -</span><span class="sxs-lookup"><span data-stu-id="11ff2-153">-or-</span></span>

<span data-ttu-id="11ff2-154">查询返回零个相关端，而预期应该有一个相关端。</span><span class="sxs-lookup"><span data-stu-id="11ff2-154">A query returned zero related ends, and one related end was expected.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="11ff2-155">以对象形式查询数据（实体框架）</span><span class="sxs-lookup"><span data-stu-id="11ff2-155">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnRefDeserialized">
      <MemberSignature Language="C#" Value="public void OnRefDeserialized (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnRefDeserialized(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.OnRefDeserialized(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnRefDeserialized (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnRefDeserialized(System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="member this.OnRefDeserialized : System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="entityReference.OnRefDeserialized context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Runtime.Serialization.OnDeserialized]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Serialization.OnDeserialized&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="11ff2-156">序列化的流。</span><span class="sxs-lookup"><span data-stu-id="11ff2-156">The serialized stream.</span></span></param>
        <summary><span data-ttu-id="11ff2-157">此方法在内部使用，用于序列化相关实体对象。</span><span class="sxs-lookup"><span data-stu-id="11ff2-157">This method is used internally to serialize related entity objects.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSerializing">
      <MemberSignature Language="C#" Value="public void OnSerializing (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnSerializing(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.OnSerializing(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnSerializing (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnSerializing(System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="member this.OnSerializing : System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="entityReference.OnSerializing context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Runtime.Serialization.OnSerializing]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Serialization.OnSerializing&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="11ff2-158">序列化的流。</span><span class="sxs-lookup"><span data-stu-id="11ff2-158">The serialized stream.</span></span></param>
        <summary><span data-ttu-id="11ff2-159">此方法在内部使用，用于序列化相关实体对象。</span><span class="sxs-lookup"><span data-stu-id="11ff2-159">This method is used internally to serialize related entity objects.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public TEntity Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TEntity Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.EntityReference`1.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As TEntity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TEntity Value { TEntity get(); void set(TEntity value); };" />
      <MemberSignature Language="F#" Value="member this.Value : 'Entity with get, set" Usage="System.Data.Objects.DataClasses.EntityReference&lt;'Entity (requires 'Entity : null and 'Entity :&gt; System.Data.Objects.DataClasses.IEntityWithRelationships)&gt;.Value" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="F#" Value="member this.Value : 'Entity with get, set" Usage="System.Data.Objects.DataClasses.EntityReference&lt;'Entity (requires 'Entity : null)&gt;.Value" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Xml.Serialization.SoapIgnore]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Xml.Serialization.SoapIgnore&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Xml.Serialization.XmlIgnore]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Xml.Serialization.XmlIgnore&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TEntity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="11ff2-160">获取或设置此 <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> 返回的相关对象。</span><span class="sxs-lookup"><span data-stu-id="11ff2-160">Gets or sets the related object returned by this <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />.</span></span></summary>
        <value><span data-ttu-id="11ff2-161">此 <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> 返回的对象。</span><span class="sxs-lookup"><span data-stu-id="11ff2-161">The object returned by this <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="11ff2-162">如果设置的值和当前值相同，则不赋值。</span><span class="sxs-lookup"><span data-stu-id="11ff2-162">No value will be assigned if the value being set is the same as the current value.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
