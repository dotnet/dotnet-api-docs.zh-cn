<Type Name="RecognizedPhrase" FullName="System.Speech.Recognition.RecognizedPhrase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="02b73505d5de88926ef29274817affc23467d644" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89998958" /></Metadata><TypeSignature Language="C#" Value="public class RecognizedPhrase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit RecognizedPhrase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.RecognizedPhrase" />
  <TypeSignature Language="VB.NET" Value="Public Class RecognizedPhrase" />
  <TypeSignature Language="C++ CLI" Value="public ref class RecognizedPhrase" />
  <TypeSignature Language="F#" Value="type RecognizedPhrase = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Diagnostics.DebuggerDisplay("{Text}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerDisplay("{Text}")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b8e73-101">包含由语音识别器生成的有关识别的输入的详细信息。</span><span class="sxs-lookup"><span data-stu-id="b8e73-101">Contains detailed information, generated by the speech recognizer, about the recognized input.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8e73-102">此类包含有关语音识别操作期间处理的单词和短语的详细信息，包括以下各项：</span><span class="sxs-lookup"><span data-stu-id="b8e73-102">This class contains detailed information about words and phrases processed during speech recognition operations, including the following:</span></span>  
  
-   <span data-ttu-id="b8e73-103"><xref:System.Speech.Recognition.RecognizedPhrase.Grammar%2A>属性引用 <xref:System.Speech.Recognition.Grammar> 识别器用于标识输入的。</span><span class="sxs-lookup"><span data-stu-id="b8e73-103">The <xref:System.Speech.Recognition.RecognizedPhrase.Grammar%2A> property references the <xref:System.Speech.Recognition.Grammar> that the recognizer used to identify the input.</span></span>  
  
-   <span data-ttu-id="b8e73-104"><xref:System.Speech.Recognition.RecognizedPhrase.Text%2A>属性包含短语的规范化文本。</span><span class="sxs-lookup"><span data-stu-id="b8e73-104">The <xref:System.Speech.Recognition.RecognizedPhrase.Text%2A> property contains the normalized text for the phrase.</span></span>  
  
-   <span data-ttu-id="b8e73-105"><xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A>属性引用结果中包含的语义信息。</span><span class="sxs-lookup"><span data-stu-id="b8e73-105">The <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property references the semantic information contained in the result.</span></span> <span data-ttu-id="b8e73-106">语义信息是密钥名称和关联语义数据的字典。</span><span class="sxs-lookup"><span data-stu-id="b8e73-106">The semantic information is a dictionary of the key names and associated semantic data.</span></span>  
  
-   <span data-ttu-id="b8e73-107"><xref:System.Speech.Recognition.RecognizedPhrase.Words%2A>属性包含对象的有序集合 <xref:System.Speech.Recognition.RecognizedWordUnit> ，这些对象表示输入中每个识别的单词。</span><span class="sxs-lookup"><span data-stu-id="b8e73-107">The <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> property contains an ordered collection of <xref:System.Speech.Recognition.RecognizedWordUnit> objects that represent each recognized word in the input.</span></span> <span data-ttu-id="b8e73-108">每个单词单位都包含相应单词的显示格式、词法格式和发音信息。</span><span class="sxs-lookup"><span data-stu-id="b8e73-108">Each word unit contains display format, lexical format, and pronunciation information for the corresponding word.</span></span>  
  
-   <span data-ttu-id="b8e73-109"><xref:System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits%2A>属性包含有关专用单词替换的信息。</span><span class="sxs-lookup"><span data-stu-id="b8e73-109">The <xref:System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits%2A> property contains information about specialized word substitution.</span></span>  
  
-   <span data-ttu-id="b8e73-110"><xref:System.Speech.Recognition.RecognizedPhrase.Homophones%2A>和 <xref:System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId%2A> 属性包含有关具有相同或相似发音的识别替代项的信息。</span><span class="sxs-lookup"><span data-stu-id="b8e73-110">The <xref:System.Speech.Recognition.RecognizedPhrase.Homophones%2A> and <xref:System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId%2A> properties contain information about recognition alternates that have the same or similar pronunciation.</span></span>  
  
-   <span data-ttu-id="b8e73-111">属性的值 <xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A> 指示语音识别器指定的确定性程度，即识别的短语匹配输入。</span><span class="sxs-lookup"><span data-stu-id="b8e73-111">The value of the <xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A> property  indicates the degree of certainty, assigned by the speech recognizer, that a recognized phrase matches the input.</span></span>  
  
 <span data-ttu-id="b8e73-112">语音识别器会在从继承的对象中返回识别结果 <xref:System.Speech.Recognition.RecognitionResult> <xref:System.Speech.Recognition.RecognizedPhrase> 。</span><span class="sxs-lookup"><span data-stu-id="b8e73-112">The speech recognizer returns recognition results in a <xref:System.Speech.Recognition.RecognitionResult> object, which inherits from <xref:System.Speech.Recognition.RecognizedPhrase>.</span></span> <span data-ttu-id="b8e73-113">识别结果 <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> 属性包含对象的有序集合 <xref:System.Speech.Recognition.RecognizedPhrase> ，其中每个对象都是识别器的输入的可能匹配项。</span><span class="sxs-lookup"><span data-stu-id="b8e73-113">The recognition result <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> property contains an ordered collection of <xref:System.Speech.Recognition.RecognizedPhrase> objects, each of which is a possible match for the input to the recognizer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8e73-114">下面的示例演示了 <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=nameWithType> 、、或事件的处理程序， <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=nameWithType> <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=nameWithType> 以及与对象关联的某些信息 <xref:System.Speech.Recognition.RecognitionResult> 。</span><span class="sxs-lookup"><span data-stu-id="b8e73-114">The following example shows a handler for a <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=nameWithType>, <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=nameWithType>, or <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=nameWithType> event and some of the information associated with the <xref:System.Speech.Recognition.RecognitionResult> object.</span></span> <span data-ttu-id="b8e73-115"><xref:System.Speech.Recognition.RecognitionResult> 类是从 <xref:System.Speech.Recognition.RecognizedPhrase> 类派生的。</span><span class="sxs-lookup"><span data-stu-id="b8e73-115">The <xref:System.Speech.Recognition.RecognitionResult> class derives from the <xref:System.Speech.Recognition.RecognizedPhrase> class.</span></span>  
  
```csharp  
void SpeechRecognizedHandler(object sender, SpeechRecognizedEventArgs e)  
{  
  if (e.Result == null) return;  
  
  // Add event handler code here.  
  
  // The following code illustrates some of the information available  
  // in the recognition result.  
  Console.WriteLine("Recognition result summary:");  
  Console.WriteLine(  
    "  Recognized phrase: {0}\n" +   
    "  Confidence score {1}\n" +   
    "  Grammar used: {2}\n",   
    e.Result.Text, e.Result.Confidence, e.Result.Grammar.Name);  
  
  // Display the semantic values in the recognition result.  
  Console.WriteLine("  Semantic results:");  
  foreach (KeyValuePair<String, SemanticValue> child in e.Result.Semantics)  
  {  
    Console.WriteLine("    The {0} city is {1}",  
      child.Key, child.Value.Value ?? "null");  
  }  
  Console.WriteLine();  
  
  // Display information about the words in the recognition result.  
  Console.WriteLine("  Word summary: ");  
  foreach (RecognizedWordUnit word in e.Result.Words)  
  {  
    Console.WriteLine(  
      "    Lexical form ({1})" +  
      " Pronunciation ({0})" +  
      " Display form ({2})",  
      word.Pronunciation, word.LexicalForm, word.DisplayAttributes);  
  }  
  
  // Display information about the audio in the recognition result.  
  Console.WriteLine("  Input audio summary:\n" +  
    "    Candidate Phrase at:       {0} mSec\n" +  
    "    Phrase Length:             {1} mSec\n" +  
    "    Input State Time:          {2}\n" +  
    "    Input Format:              {3}\n",  
    e.Result.Audio.AudioPosition,  
    e.Result.Audio.Duration,  
    e.Result.Audio.StartTime,  
    e.Result.Audio.Format.EncodingFormat);  
  
  // Display information about the alternate recognitions in the recognition result.  
  Console.WriteLine("  Alternate phrase collection:");  
  foreach (RecognizedPhrase phrase in e.Result.Alternates)  
  {  
    Console.WriteLine("    Phrase: " + phrase.Text);  
    Console.WriteLine("    Confidence score: " + phrase.Confidence);  
  }  
}  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.RecognitionResult" />
    <altmember cref="T:System.Speech.Recognition.RecognizedWordUnit" />
  </Docs>
  <Members>
    <Member MemberName="Confidence">
      <MemberSignature Language="C#" Value="public float Confidence { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Confidence" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizedPhrase.Confidence" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Confidence As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Confidence { float get(); };" />
      <MemberSignature Language="F#" Value="member this.Confidence : single" Usage="System.Speech.Recognition.RecognizedPhrase.Confidence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e73-116">获取识别器分配的值，此值表示 <see cref="T:System.Speech.Recognition.RecognizedPhrase" /> 与给定输入匹配的可能性。</span><span class="sxs-lookup"><span data-stu-id="b8e73-116">Gets a value, assigned by the recognizer, that represents the likelihood that a <see cref="T:System.Speech.Recognition.RecognizedPhrase" /> matches a given input.</span></span></summary>
        <value><span data-ttu-id="b8e73-117">对正确识别语法的确定性的相对度量。</span><span class="sxs-lookup"><span data-stu-id="b8e73-117">A relative measure of the certainty of correct recognition of a phrase.</span></span> <span data-ttu-id="b8e73-118">该值分别为从 0.0 到 1.0，从低到高置信。</span><span class="sxs-lookup"><span data-stu-id="b8e73-118">The value is from 0.0 to 1.0, for low to high confidence, respectively.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8e73-119">置信度分数并不表示短语正确识别的绝对可能性。</span><span class="sxs-lookup"><span data-stu-id="b8e73-119">Confidence scores do not indicate the absolute likelihood that a phrase was recognized correctly.</span></span> <span data-ttu-id="b8e73-120">相反，置信度分数提供一种机制，用于比较给定输入的多个识别替代项的相对准确性。</span><span class="sxs-lookup"><span data-stu-id="b8e73-120">Instead, confidence scores provide a mechanism for comparing the relative accuracy of multiple recognition alternates for a given input.</span></span> <span data-ttu-id="b8e73-121">这有助于返回最准确的识别结果。</span><span class="sxs-lookup"><span data-stu-id="b8e73-121">This facilitates returning the most accurate recognition result.</span></span> <span data-ttu-id="b8e73-122">例如，如果识别的短语的置信度为0.8，这并不意味着该短语有80% 的可能是输入的正确匹配项。</span><span class="sxs-lookup"><span data-stu-id="b8e73-122">For example, if a recognized phrase has a confidence score of 0.8, this does not mean that the phrase has an 80% chance of being the correct match for the input.</span></span>  <span data-ttu-id="b8e73-123">这意味着，对于输入比小于0.8 的其他结果，短语更有可能是输入的正确匹配项。</span><span class="sxs-lookup"><span data-stu-id="b8e73-123">It means that the phrase is more likely to be the correct match for the input than other results that have confidence scores less than 0.8.</span></span>  
  
 <span data-ttu-id="b8e73-124">除非您对相同的识别操作或来自同一输入的以前识别进行比较，否则对其自身的置信度分数并无意义。</span><span class="sxs-lookup"><span data-stu-id="b8e73-124">A confidence score on its own is not meaningful unless you have alternative results to compare against, either from the same recognition operation or from previous recognitions of the same input.</span></span> <span data-ttu-id="b8e73-125">这些值用于对对象上的属性返回的可选候选短语进行排名 <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> <xref:System.Speech.Recognition.RecognitionResult> 。</span><span class="sxs-lookup"><span data-stu-id="b8e73-125">The values are used to rank alternative candidate phrases returned by the <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> property on <xref:System.Speech.Recognition.RecognitionResult> objects.</span></span>  
  
 <span data-ttu-id="b8e73-126">置信度值是每个识别引擎的相对和唯一的值。</span><span class="sxs-lookup"><span data-stu-id="b8e73-126">Confidence values are relative and unique to each recognition engine.</span></span> <span data-ttu-id="b8e73-127">不能有意义地比较两个不同的识别引擎返回的置信度值。</span><span class="sxs-lookup"><span data-stu-id="b8e73-127">Confidence values returned by two different recognition engines cannot be meaningfully compared.</span></span>  
  
 <span data-ttu-id="b8e73-128">语音识别引擎可能会出于各种原因（包括背景干扰、inarticulate 语音或意外的单词或单词序列），将置信度评分分配给播讲输入。</span><span class="sxs-lookup"><span data-stu-id="b8e73-128">A speech recognition engine may assign a low confidence score to spoken input for various reasons, including background interference, inarticulate speech, or unanticipated words or word sequences.</span></span> <span data-ttu-id="b8e73-129">如果你的应用程序使用的是 <xref:System.Speech.Recognition.SpeechRecognitionEngine> 实例，则可以修改使用其中一种方法接受或拒绝语音输入的置信度级别 <xref:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting%2A> 。</span><span class="sxs-lookup"><span data-stu-id="b8e73-129">If your application is using a <xref:System.Speech.Recognition.SpeechRecognitionEngine> instance, you can modify the confidence level at which speech input is accepted or rejected with one of the <xref:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting%2A> methods.</span></span> <span data-ttu-id="b8e73-130">由管理的共享识别器的置信度阈值 <xref:System.Speech.Recognition.SpeechRecognizer> 与用户配置文件相关联，并存储在 Windows 注册表中。</span><span class="sxs-lookup"><span data-stu-id="b8e73-130">Confidence thresholds for the shared recognizer, managed by <xref:System.Speech.Recognition.SpeechRecognizer>, are associated with a user profile and stored in the Windows registry.</span></span> <span data-ttu-id="b8e73-131">对于共享识别器的属性，应用程序不应将更改写入注册表。</span><span class="sxs-lookup"><span data-stu-id="b8e73-131">Applications should not write changes to the registry for the properties of the shared recognizer.</span></span>  
  
 <span data-ttu-id="b8e73-132"><xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>对象的属性 <xref:System.Speech.Recognition.RecognitionResult> 包含对象的有序集合 <xref:System.Speech.Recognition.RecognizedPhrase> ，其中每个对象都是识别器的输入的可能匹配项。</span><span class="sxs-lookup"><span data-stu-id="b8e73-132">The <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> property of the <xref:System.Speech.Recognition.RecognitionResult> object contains an ordered collection of <xref:System.Speech.Recognition.RecognizedPhrase> objects, each of which is a possible match for the input to the recognizer.</span></span> <span data-ttu-id="b8e73-133">备用项按从最高到最低的置信度排序。</span><span class="sxs-lookup"><span data-stu-id="b8e73-133">The alternates are ordered from highest to lowest confidence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8e73-134">下面的示例演示了 <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=nameWithType> 、 <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=nameWithType> 或事件的处理程序 <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="b8e73-134">The following example shows a handler for a <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=nameWithType>, <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=nameWithType>, or <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="b8e73-135">该示例显示与对象关联的信息 <xref:System.Speech.Recognition.RecognitionResult> ，其中的一些信息派生自 <xref:System.Speech.Recognition.RecognizedPhrase> 。</span><span class="sxs-lookup"><span data-stu-id="b8e73-135">The example shows information associated with the <xref:System.Speech.Recognition.RecognitionResult> object, some of which is derived from <xref:System.Speech.Recognition.RecognizedPhrase>.</span></span> <span data-ttu-id="b8e73-136">处理程序显示识别的短语的置信度分数以及用于识别备用的置信度分数。</span><span class="sxs-lookup"><span data-stu-id="b8e73-136">The handler displays confidence scores for a recognized phrase as well as for recognition alternates.</span></span>  
  
```csharp  
void SpeechRecognizedHandler(object sender, SpeechRecognizedEventArgs e)  
{  
  if (e.Result == null) return;  
  
  // Add event handler code here.  
  
  // The following code illustrates some of the information available  
  // in the recognition result.  
  Console.WriteLine("Recognition result summary:");  
  Console.WriteLine(  
    "  Recognized phrase: {0}\n" +   
    "  Confidence score {1}\n" +   
    "  Grammar used: {2}\n",   
    e.Result.Text, e.Result.Confidence, e.Result.Grammar.Name);  
  
  // Display the semantic values in the recognition result.  
  Console.WriteLine("  Semantic results:");  
  foreach (KeyValuePair<String, SemanticValue> child in e.Result.Semantics)  
  {  
    Console.WriteLine("    The {0} city is {1}",  
      child.Key, child.Value.Value ?? "null");  
  }  
  Console.WriteLine();  
  
  // Display information about the words in the recognition result.  
  Console.WriteLine("  Word summary: ");  
  foreach (RecognizedWordUnit word in e.Result.Words)  
  {  
    Console.WriteLine(  
      "    Lexical form ({1})" +  
      " Pronunciation ({0})" +  
      " Display form ({2})",  
      word.Pronunciation, word.LexicalForm, word.DisplayAttributes);  
  }  
  
  // Display information about the audio in the recognition result.  
  Console.WriteLine("  Input audio summary:\n" +  
    "    Candidate Phrase at:       {0} mSec\n" +  
    "    Phrase Length:             {1} mSec\n" +  
    "    Input State Time:          {2}\n" +  
    "    Input Format:              {3}\n",  
    e.Result.Audio.AudioPosition,  
    e.Result.Audio.Duration,  
    e.Result.Audio.StartTime,  
    e.Result.Audio.Format.EncodingFormat);  
  
  // Display information about the alternate recognitions in the recognition result.  
  Console.WriteLine("  Alternate phrase collection:");  
  foreach (RecognizedPhrase phrase in e.Result.Alternates)  
  {  
    Console.WriteLine("    Phrase: " + phrase.Text);  
    Console.WriteLine("    Confidence score: " + phrase.Confidence);  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.RecognitionResult" />
        <altmember cref="P:System.Speech.Recognition.RecognitionResult.Alternates" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
      </Docs>
    </Member>
    <Member MemberName="ConstructSmlFromSemantics">
      <MemberSignature Language="C#" Value="public System.Xml.XPath.IXPathNavigable ConstructSmlFromSemantics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XPath.IXPathNavigable ConstructSmlFromSemantics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics" />
      <MemberSignature Language="VB.NET" Value="Public Function ConstructSmlFromSemantics () As IXPathNavigable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XPath::IXPathNavigable ^ ConstructSmlFromSemantics();" />
      <MemberSignature Language="F#" Value="member this.ConstructSmlFromSemantics : unit -&gt; System.Xml.XPath.IXPathNavigable" Usage="recognizedPhrase.ConstructSmlFromSemantics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.IXPathNavigable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b8e73-137">为 <see cref="T:System.Speech.Recognition.RecognizedPhrase" /> 对象中的语义信息返回语义标记语言 (SML) 文档。</span><span class="sxs-lookup"><span data-stu-id="b8e73-137">Returns a semantic markup language (SML) document for the semantic information in the <see cref="T:System.Speech.Recognition.RecognizedPhrase" /> object.</span></span></summary>
        <returns><span data-ttu-id="b8e73-138">以 <see href="https://msdn.microsoft.com/library/ms256115.aspx">XPath</see> 可导航对象的形式返回 <see cref="T:System.Speech.Recognition.RecognizedPhrase" /> 的语义的 SML 描述。</span><span class="sxs-lookup"><span data-stu-id="b8e73-138">Returns an SML description of the semantics of the <see cref="T:System.Speech.Recognition.RecognizedPhrase" /> as an <see href="https://msdn.microsoft.com/library/ms256115.aspx">XPath</see> navigable object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8e73-139">有关语义标记语言 (SML) 的信息，请参阅 [语义标记语言参考](https://msdn.microsoft.com/library/f9d83443-2cac-49bc-a447-210feda62f5d)。</span><span class="sxs-lookup"><span data-stu-id="b8e73-139">For information about the semantic markup language (SML), see the [Semantic Markup Language Reference](https://msdn.microsoft.com/library/f9d83443-2cac-49bc-a447-210feda62f5d).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8e73-140">在下面的示例中，方法返回一个字符串，该字符串包含识别的短语的语义的 SML。</span><span class="sxs-lookup"><span data-stu-id="b8e73-140">In the following example, a method returns a string that contains the SML for the semantics of a recognized phrase.</span></span>  
  
```  
private string GetSemanticsSML(RecognizedPhrase result)  
{  
  if (result.Semantics.Count > 0)  
  {  
    return result.ConstructSmlFromSemantics().CreateNavigator().OuterXml;  
  }  
  else  
  {  
    return null;  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Grammar">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.Grammar Grammar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Recognition.Grammar Grammar" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizedPhrase.Grammar" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Grammar As Grammar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Recognition::Grammar ^ Grammar { System::Speech::Recognition::Grammar ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Grammar : System.Speech.Recognition.Grammar" Usage="System.Speech.Recognition.RecognizedPhrase.Grammar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.Grammar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e73-141">获取语音识别器用于返回 <see cref="T:System.Speech.Recognition.Grammar" /> 的 <see cref="T:System.Speech.Recognition.RecognizedPhrase" />。</span><span class="sxs-lookup"><span data-stu-id="b8e73-141">Gets the <see cref="T:System.Speech.Recognition.Grammar" /> that the speech recognizer used to return the <see cref="T:System.Speech.Recognition.RecognizedPhrase" />.</span></span></summary>
        <value><span data-ttu-id="b8e73-142">语音识别器用于标识输入的语法对象。</span><span class="sxs-lookup"><span data-stu-id="b8e73-142">The grammar object that the speech recognizer used to identify the input.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.RecognitionResult" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
      </Docs>
    </Member>
    <Member MemberName="HomophoneGroupId">
      <MemberSignature Language="C#" Value="public int HomophoneGroupId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HomophoneGroupId" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HomophoneGroupId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int HomophoneGroupId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.HomophoneGroupId : int" Usage="System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e73-143">获取短语同音字组的标识符。</span><span class="sxs-lookup"><span data-stu-id="b8e73-143">Gets the identifier for the homophone group for the phrase.</span></span></summary>
        <value><span data-ttu-id="b8e73-144">短语同音字组的标识符。</span><span class="sxs-lookup"><span data-stu-id="b8e73-144">The identifier for the homophone group for the phrase.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8e73-145">语音识别器将组标识符分配给具有相同发音的所有识别备用项。</span><span class="sxs-lookup"><span data-stu-id="b8e73-145">The speech recognizer assigns a group identifier to all recognition alternates that have the same pronunciation.</span></span> <span data-ttu-id="b8e73-146">对于每个具有唯一发音的备用，识别器会创建一个短语同音字组。</span><span class="sxs-lookup"><span data-stu-id="b8e73-146">For each alternate that has a unique pronunciation, the recognizer creates a homophone group.</span></span> <span data-ttu-id="b8e73-147">语音识别器为每个识别操作生成新的标识符组，而不能使用标识符来比较从单独的识别操作生成的替代项。</span><span class="sxs-lookup"><span data-stu-id="b8e73-147">The speech recognizer generates new group of identifiers for each recognition operation, and the identifiers cannot be used to compare alternates from generated from separate recognition operations.</span></span>  
  
 <span data-ttu-id="b8e73-148">例如，对于包含替代 "the tale"、"tail" 和 "短语同音字" 的识别结果，前两个备用项属于一个组，最后一个备用项是第二个短语同音字组的单个成员。</span><span class="sxs-lookup"><span data-stu-id="b8e73-148">For example, for a recognition result that contained the alternates "the tale", "the tail", and "the ale", the first two alternates would belong to one homophone group, and the last alternate would be the single member of a second homophone group.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Speech.Recognition.RecognitionResult.Alternates" />
        <altmember cref="P:System.Speech.Recognition.RecognizedPhrase.Homophones" />
      </Docs>
    </Member>
    <Member MemberName="Homophones">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Recognition.RecognizedPhrase&gt; Homophones { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Speech.Recognition.RecognizedPhrase&gt; Homophones" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizedPhrase.Homophones" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Homophones As ReadOnlyCollection(Of RecognizedPhrase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Recognition::RecognizedPhrase ^&gt; ^ Homophones { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Recognition::RecognizedPhrase ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Homophones : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Recognition.RecognizedPhrase&gt;" Usage="System.Speech.Recognition.RecognizedPhrase.Homophones" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Recognition.RecognizedPhrase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e73-149">获取识别备用项的集合，这些备用项具有与此识别语法一样的发音。</span><span class="sxs-lookup"><span data-stu-id="b8e73-149">Gets a collection of the recognition alternates that have the same pronunciation as this recognized phrase.</span></span></summary>
        <value><span data-ttu-id="b8e73-150">只读识别备用项的集合，这些备用项具有与此识别语法一样的发音。</span><span class="sxs-lookup"><span data-stu-id="b8e73-150">A read-only collection of the recognition alternates that have the same pronunciation as this recognized phrase.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8e73-151">此属性返回与此识别的短语具有相同发音的所有其他识别备用项。</span><span class="sxs-lookup"><span data-stu-id="b8e73-151">This property returns all other recognition alternates that have the same pronunciation as this recognized phrase.</span></span>  
  
 <span data-ttu-id="b8e73-152">例如，对于包含备用项 "tale" 和 "homophones" 的识别结果，第一个替换项的集合 "the tale" 将包含第二个短语 "the tail"。</span><span class="sxs-lookup"><span data-stu-id="b8e73-152">For example, for a recognition result that contained the alternates, "the tale" and "the tail", the homophones collection for the first alternate, "the tale", would contain the second phrase, "the tail".</span></span> <span data-ttu-id="b8e73-153">第二个替代方法 "the tail" 的 homophones 集合将包含第一个短语 "the tale"。</span><span class="sxs-lookup"><span data-stu-id="b8e73-153">The homophones collection for the second alternate, "the tail", would contain the first phrase, "the tale".</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Speech.Recognition.RecognitionResult.Alternates" />
        <altmember cref="P:System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId" />
      </Docs>
    </Member>
    <Member MemberName="ReplacementWordUnits">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Speech.Recognition.ReplacementText&gt; ReplacementWordUnits { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Speech.Recognition.ReplacementText&gt; ReplacementWordUnits" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReplacementWordUnits As Collection(Of ReplacementText)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Speech::Recognition::ReplacementText ^&gt; ^ ReplacementWordUnits { System::Collections::ObjectModel::Collection&lt;System::Speech::Recognition::ReplacementText ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReplacementWordUnits : System.Collections.ObjectModel.Collection&lt;System.Speech.Recognition.ReplacementText&gt;" Usage="System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Speech.Recognition.ReplacementText&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e73-154">获取语音识别器作为语音到文本规范化一部分更改的文本的相关信息。</span><span class="sxs-lookup"><span data-stu-id="b8e73-154">Gets information about the text that the speech recognizer changed as part of speech-to-text normalization.</span></span></summary>
        <value><span data-ttu-id="b8e73-155"><see cref="T:System.Speech.Recognition.ReplacementText" /> 对象的集合，这些对象描述在语音识别器规范化已识别输入时所替换的文本部分。</span><span class="sxs-lookup"><span data-stu-id="b8e73-155">A collection of <see cref="T:System.Speech.Recognition.ReplacementText" /> objects that describe sections of text that the speech recognizer replaced when it normalized the recognized input.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8e73-156">作为语音识别过程的一部分，语音识别器将识别的输入规范化为显示形式。</span><span class="sxs-lookup"><span data-stu-id="b8e73-156">As part of the speech recognition process, the speech recognizer normalizes the recognized input into a display form.</span></span>  
  
 <span data-ttu-id="b8e73-157">例如，口述输入 "20 5 美元" 会生成一个识别结果，其中 <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> 属性包含单词 "20"、"5" 和 "美元"， <xref:System.Speech.Recognition.RecognizedPhrase.Text%2A> 属性包含 "$25.00" 这一短语。</span><span class="sxs-lookup"><span data-stu-id="b8e73-157">For example, the spoken input, "twenty five dollars", generates a recognition result where the <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> property contains the words, "twenty", "five", and "dollars", and the <xref:System.Speech.Recognition.RecognizedPhrase.Text%2A> property contains the phrase, "$25.00".</span></span> <span data-ttu-id="b8e73-158">有关文本规范化的详细信息，请参阅 <xref:System.Speech.Recognition.ReplacementText> 类。</span><span class="sxs-lookup"><span data-stu-id="b8e73-158">For more information about text normalization, see the <xref:System.Speech.Recognition.ReplacementText> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.RecognizedWordUnit" />
        <altmember cref="T:System.Speech.Recognition.ReplacementText" />
        <altmember cref="P:System.Speech.Recognition.RecognizedPhrase.Text" />
        <altmember cref="P:System.Speech.Recognition.RecognizedPhrase.Words" />
      </Docs>
    </Member>
    <Member MemberName="Semantics">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.SemanticValue Semantics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Recognition.SemanticValue Semantics" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizedPhrase.Semantics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Semantics As SemanticValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Recognition::SemanticValue ^ Semantics { System::Speech::Recognition::SemanticValue ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Semantics : System.Speech.Recognition.SemanticValue" Usage="System.Speech.Recognition.RecognizedPhrase.Semantics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SemanticValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e73-159">获取与所识别的短语相关的语义信息。</span><span class="sxs-lookup"><span data-stu-id="b8e73-159">Gets the semantic information that is associated with the recognized phrase.</span></span></summary>
        <value><span data-ttu-id="b8e73-160">与所识别的短语相关的语义信息。</span><span class="sxs-lookup"><span data-stu-id="b8e73-160">The semantic information associated with the recognized phrase.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8e73-161">语音识别语法可以包括语义信息。</span><span class="sxs-lookup"><span data-stu-id="b8e73-161">A speech recognition grammar can include semantic information.</span></span> <span data-ttu-id="b8e73-162">当语音识别器生成此类语法的识别结果时，会根据语法的规则和识别器的输入，在识别结果中包括语义信息。</span><span class="sxs-lookup"><span data-stu-id="b8e73-162">When a speech recognizer generates a recognition result for such a grammar, the semantic information might be included in the recognition result, according to the rules of the grammar and the input to the recognizer.</span></span> <span data-ttu-id="b8e73-163">有关语义信息的详细信息，请参阅 [了解语义结果](https://msdn.microsoft.com/library/2a9dbd8b-cf6d-42cd-bbb9-ca0b3e534005) 以及 <xref:System.Speech.Recognition.SemanticResultKey> 和 <xref:System.Speech.Recognition.SemanticResultValue> 类。</span><span class="sxs-lookup"><span data-stu-id="b8e73-163">For more information about semantic information, see [Understanding Semantic Results](https://msdn.microsoft.com/library/2a9dbd8b-cf6d-42cd-bbb9-ca0b3e534005) and the <xref:System.Speech.Recognition.SemanticResultKey> and <xref:System.Speech.Recognition.SemanticResultValue> classes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8e73-164">下面的示例定义了一个方法，该方法从识别的短语获取特定的语义信息。</span><span class="sxs-lookup"><span data-stu-id="b8e73-164">The following example defines a method that gets specific semantic information from a recognized phrase.</span></span> <span data-ttu-id="b8e73-165">此方法返回时，它包含语义键的值; 如果未检索到该值，则为 null。</span><span class="sxs-lookup"><span data-stu-id="b8e73-165">When this method returns, it contains the value for the semantic key, or null if the value was not retrieved.</span></span> <span data-ttu-id="b8e73-166">此方法仅检查顶级键。</span><span class="sxs-lookup"><span data-stu-id="b8e73-166">This method checks only for top-level keys.</span></span> <span data-ttu-id="b8e73-167">由于语义信息包含在值的树中，因此必须通过返回的语义值访问更低级别的键。</span><span class="sxs-lookup"><span data-stu-id="b8e73-167">Since the semantic information is contained in a tree of values, lower-level keys must be accessed through the returned semantic value.</span></span>  
  
```  
static bool TryGetSemanticValue(  
      RecognizedPhrase phrase, string key, out SemanticValue value)  
{  
  value = null;  
  bool found = phrase.Semantics.ContainsKey(key);  
  if (found)  
  {  
    value = phrase.Semantics[key];  
  }  
  
  return found;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
        <altmember cref="T:System.Speech.Recognition.SemanticValue" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizedPhrase.Text" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Text : string" Usage="System.Speech.Recognition.RecognizedPhrase.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e73-168">获取语音识别器从识别的输入生成的规范化文本。</span><span class="sxs-lookup"><span data-stu-id="b8e73-168">Gets the normalized text generated by a speech recognizer from recognized input.</span></span></summary>
        <value><span data-ttu-id="b8e73-169">语音识别器从识别的输入生成的规范化文本。</span><span class="sxs-lookup"><span data-stu-id="b8e73-169">The normalized text generated by a speech recognizer from recognized input.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8e73-170">作为语音识别过程的一部分，语音识别器将识别出的输入的语音转换到文本规范化。</span><span class="sxs-lookup"><span data-stu-id="b8e73-170">As part of the speech recognition process, the speech recognizer performs speech-to-text normalization of the recognized input into a display form.</span></span>  
  
 <span data-ttu-id="b8e73-171">例如，口述输入 "20 5 美元" 会生成一个识别结果，其中 <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> 属性包含单词 "20"、"5" 和 "美元"， <xref:System.Speech.Recognition.RecognizedPhrase.Text%2A> 属性包含 "$25.00" 这一短语。</span><span class="sxs-lookup"><span data-stu-id="b8e73-171">For example, the spoken input, "twenty five dollars", generates a recognition result where the <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> property contains the words, "twenty", "five", and "dollars", and the <xref:System.Speech.Recognition.RecognizedPhrase.Text%2A> property contains the phrase, "$25.00".</span></span> <span data-ttu-id="b8e73-172">有关文本规范化的详细信息，请参阅 <xref:System.Speech.Recognition.ReplacementText> 。</span><span class="sxs-lookup"><span data-stu-id="b8e73-172">For more information about text normalization, see <xref:System.Speech.Recognition.ReplacementText>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits" />
        <altmember cref="P:System.Speech.Recognition.RecognizedPhrase.Words" />
      </Docs>
    </Member>
    <Member MemberName="Words">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Recognition.RecognizedWordUnit&gt; Words { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Speech.Recognition.RecognizedWordUnit&gt; Words" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizedPhrase.Words" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Words As ReadOnlyCollection(Of RecognizedWordUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Recognition::RecognizedWordUnit ^&gt; ^ Words { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Recognition::RecognizedWordUnit ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Words : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Recognition.RecognizedWordUnit&gt;" Usage="System.Speech.Recognition.RecognizedPhrase.Words" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Recognition.RecognizedWordUnit&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8e73-173">获取语音识别器从识别的输入生成的词语。</span><span class="sxs-lookup"><span data-stu-id="b8e73-173">Gets the words generated by a speech recognizer from recognized input.</span></span></summary>
        <value><span data-ttu-id="b8e73-174">语音识别器针对识别的输入生成的 <see cref="T:System.Speech.Recognition.RecognizedWordUnit" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="b8e73-174">The collection of <see cref="T:System.Speech.Recognition.RecognizedWordUnit" /> objects generated by a speech recognizer for recognized input.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8e73-175">此属性包含在识别器的结果的语音到文本规范化之前，由语音识别器输入生成的单词。</span><span class="sxs-lookup"><span data-stu-id="b8e73-175">This property contains the words produced from the input by the speech recognizer prior to the recognizer's speech-to-text normalization of the result.</span></span>  
  
 <span data-ttu-id="b8e73-176">例如，口述输入 "20 5 美元" 会生成一个识别结果，其中 <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> 属性包含单词 "20"、"5" 和 "美元"， <xref:System.Speech.Recognition.RecognizedPhrase.Text%2A> 属性包含 "$25.00" 这一短语。</span><span class="sxs-lookup"><span data-stu-id="b8e73-176">For example, the spoken input, "twenty five dollars", generates a recognition result where the <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> property contains the words, "twenty", "five", and "dollars", and the <xref:System.Speech.Recognition.RecognizedPhrase.Text%2A> property contains the phrase, "$25.00".</span></span> <span data-ttu-id="b8e73-177">有关文本规范化的详细信息，请参阅 <xref:System.Speech.Recognition.ReplacementText> 。</span><span class="sxs-lookup"><span data-stu-id="b8e73-177">For more information about text normalization, see <xref:System.Speech.Recognition.ReplacementText>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.RecognizedWordUnit" />
        <altmember cref="P:System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits" />
        <altmember cref="P:System.Speech.Recognition.RecognizedPhrase.Text" />
      </Docs>
    </Member>
  </Members>
</Type>
