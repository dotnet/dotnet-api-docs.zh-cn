<Type Name="SubsetMatchingMode" FullName="System.Speech.Recognition.SubsetMatchingMode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="77ff1445d351335cb43b3c135e8b391ce233294c" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="70683589" /></Metadata><TypeSignature Language="C#" Value="public enum SubsetMatchingMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SubsetMatchingMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SubsetMatchingMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum SubsetMatchingMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class SubsetMatchingMode" />
  <TypeSignature Language="F#" Value="type SubsetMatchingMode = " />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>枚举匹配模式的子集值。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在系统中，可以构造一个成功识别某个短语的语法，即使在音频输入中仅找到其内容的一个子集。  
  
 默认情况下，识别引擎要求与整个短语完全匹配。 识别引擎还可以根据 <xref:System.Speech.Recognition.SubsetMatchingMode> 用作 <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> 或 <xref:System.Speech.Recognition.SrgsGrammar.SrgsSubset.%23ctor%2A> 构造函数的参数或方法的成员定义的参数匹配部分短语 <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> 。  
  
 下面说明了每个 <xref:System.Speech.Recognition.SubsetMatchingMode> 成员在包含短语 "汽车卡车 a 船 a 船" 的语法中使用时如何影响识别。  
  
 **OrderedSubset**  
  
 此模式表明，如果满足以下条件，则将使用短语的子集来成功识别整个短语：  
  
-   在音频输入中识别该短语中的一个或多个词。  
  
-   这些被识别的单词的相对顺序与短语中的相对顺序相同。  
  
-   匹配的单词可能仅由介词和文章构成。  
  
 使用 OrderedSubset 模式向语法添加短语 "汽车汽车卡车 a 船 a 船"，将在识别时生成以下结果：  
  
|**输入短语**|**结果**|  
|----------------------|----------------|  
|"汽车卡车成为飞机的船"|识别整个短语 "汽车卡车成为飞机的船"。|  
|"汽车卡车成为船形"|识别整个短语 "汽车卡车成为飞机的船"。|  
|"该平面的汽车"|识别整个短语 "汽车卡车成为飞机的船"。 可识别的子集不需要是原始字符串的序列。|  
|"汽车船成为飞机|识别不成功。 字词顺序不对。|  
|"a"|识别整个短语 "汽车卡车成为飞机的船"。 介词和文章用于识别。|  
  
 **OrderedSubsetContentRequired**  
  
 此模式表明，如果满足以下条件，则将使用短语的子集来成功识别整个短语：  
  
-   在音频输入中识别该短语中的一个或多个词，并  
  
-   这些被识别的单词的相对顺序与短语中的相对顺序相同。  
  
-   匹配的单词不能仅包含介词和文章。  
  
 使用 OrderedSubsetContentRequired 模式向语法添加短语 "汽车汽车卡车 a 船 a 船"，将在识别时生成以下结果：  
  
|**输入短语**|**结果**|  
|----------------------|----------------|  
|"汽车卡车成为飞机的船"|识别整个短语 "汽车卡车成为飞机的船"。|  
|"汽车卡车成为船形"|识别整个短语 "汽车卡车成为飞机的船"。|  
|"该平面的汽车"|识别整个短语 "汽车卡车成为飞机的船"。 可识别的子集不需要是原始字符串的序列。|  
|"汽车船成为飞机|识别不成功。 字词顺序不对。|  
|"a"|识别不成功。  语音输入必须包含项目和介词以外的单词。|  
  
 **子序列**  
  
 此模式表明，如果满足以下条件，则将使用短语的子集来成功识别整个短语：  
  
-   该短语中的一个或多个词在音频输入中被识别为一系列短语，  
  
-   这些被识别的单词的相对顺序与短语中的相对顺序相同。  
  
-   匹配的单词可能仅由介词和文章构成。  
  
 使用子序列模式向语法添加短语 "汽车汽车卡车 a 船 a 船"，将在识别时生成以下结果：  
  
|**输入短语**|**结果**|  
|----------------------|----------------|  
|"汽车卡车成为飞机的船"|识别整个短语 "汽车卡车成为飞机的船"。|  
|"汽车卡车成为船形"|识别整个短语 "汽车卡车成为飞机的船"。|  
|"该平面的汽车"|识别不成功。 已识别子集必须是原始字符串的序列。|  
|"汽车船成为飞机|识别不成功。 字词顺序不对。|  
|"a"|识别整个短语 "汽车卡车成为飞机的船"。 介词和文章用于识别。|  
  
 **SubsequenceContentRequired**  
  
 此模式表明，如果满足以下条件，则将使用短语的子集来成功识别整个短语：  
  
-   匹配字符串中的一个或多个词在音频输入中被识别为一系列短语。  
  
-   匹配的单词不能仅包含介词和文章。  
  
 使用 SubsequenceContentRequired 模式向语法添加短语 "汽车汽车卡车 a 船 a 船"，将在识别时生成以下结果：  
  
|**输入短语**|**结果**|  
|----------------------|----------------|  
|"汽车卡车成为飞机的船"|识别整个短语 "汽车卡车成为飞机的船"。|  
|"汽车卡车成为船形"|识别整个短语 "汽车卡车成为飞机的船"。|  
|"该平面的汽车"|识别不成功。 已识别子集必须是原始字符串的序列。|  
|"汽车船成为飞机|识别不成功。 字词顺序不对。|  
|"a"|识别不成功。 语音输入必须包含项目和介词以外的单词。|  
  
   
  
## Examples  
 下面是一个测试例程 <xref:System.Speech.Recognition.Grammar> ，它为每个使用相同的短语生成四个对象 `SubsetMatchingModes` 。 <xref:System.Speech.Recognition.Grammar>然后，可以对这些对象进行测试。  
  
```  
private void CreateSubsetMatchTest()   
{  
  foreach ( System.Speech.Recognition.SubsetMatchingMode mode   
              in Enum.GetValues(typeof(System.Speech.Recognition.SubsetMatchingMode)))  
  {  
    GrammarBuilder gb = new GrammarBuilder("a car the truck a boat that plane",mode);  
    Grammar grammar = new Grammar(gb);  
    grammar.Name = mode.ToString();  
    grammar.Enabled=true;  
    _recognizer.LoadGrammar(grammar);  
  }  
}  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
    <altmember cref="T:System.Speech.Recognition.SrgsGrammar.SrgsSubset" />
    <altmember cref="N:System.Speech.Recognition.SrgsGrammar" />
  </Docs>
  <Members>
    <Member MemberName="OrderedSubset">
      <MemberSignature Language="C#" Value="OrderedSubset" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Recognition.SubsetMatchingMode OrderedSubset = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.SubsetMatchingMode.OrderedSubset" />
      <MemberSignature Language="VB.NET" Value="OrderedSubset" />
      <MemberSignature Language="C++ CLI" Value="OrderedSubset" />
      <MemberSignature Language="F#" Value="OrderedSubset = 1" Usage="System.Speech.Recognition.SubsetMatchingMode.OrderedSubset" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SubsetMatchingMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>指示子集匹配模式是 OrderedSubset****。</summary>
      </Docs>
    </Member>
    <Member MemberName="OrderedSubsetContentRequired">
      <MemberSignature Language="C#" Value="OrderedSubsetContentRequired" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Recognition.SubsetMatchingMode OrderedSubsetContentRequired = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.SubsetMatchingMode.OrderedSubsetContentRequired" />
      <MemberSignature Language="VB.NET" Value="OrderedSubsetContentRequired" />
      <MemberSignature Language="C++ CLI" Value="OrderedSubsetContentRequired" />
      <MemberSignature Language="F#" Value="OrderedSubsetContentRequired = 3" Usage="System.Speech.Recognition.SubsetMatchingMode.OrderedSubsetContentRequired" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SubsetMatchingMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>指示子集匹配模式是 OrderedSubsetContentRequired****。</summary>
      </Docs>
    </Member>
    <Member MemberName="Subsequence">
      <MemberSignature Language="C#" Value="Subsequence" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Recognition.SubsetMatchingMode Subsequence = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.SubsetMatchingMode.Subsequence" />
      <MemberSignature Language="VB.NET" Value="Subsequence" />
      <MemberSignature Language="C++ CLI" Value="Subsequence" />
      <MemberSignature Language="F#" Value="Subsequence = 0" Usage="System.Speech.Recognition.SubsetMatchingMode.Subsequence" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SubsetMatchingMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>指示子集匹配模式是 Subsequence****。</summary>
      </Docs>
    </Member>
    <Member MemberName="SubsequenceContentRequired">
      <MemberSignature Language="C#" Value="SubsequenceContentRequired" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Recognition.SubsetMatchingMode SubsequenceContentRequired = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.SubsetMatchingMode.SubsequenceContentRequired" />
      <MemberSignature Language="VB.NET" Value="SubsequenceContentRequired" />
      <MemberSignature Language="C++ CLI" Value="SubsequenceContentRequired" />
      <MemberSignature Language="F#" Value="SubsequenceContentRequired = 2" Usage="System.Speech.Recognition.SubsetMatchingMode.SubsequenceContentRequired" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SubsetMatchingMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>指示子集匹配模式是 SubsequenceContentRequired****。</summary>
      </Docs>
    </Member>
  </Members>
</Type>
