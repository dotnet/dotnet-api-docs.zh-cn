<Type Name="Choices" FullName="System.Speech.Recognition.Choices">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d05780714b8acd15253884a6e3d52619ea0e67d2" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89880022" /></Metadata><TypeSignature Language="C#" Value="public class Choices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Choices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.Choices" />
  <TypeSignature Language="VB.NET" Value="Public Class Choices" />
  <TypeSignature Language="C++ CLI" Value="public ref class Choices" />
  <TypeSignature Language="F#" Value="type Choices = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Diagnostics.DebuggerDisplay("{_oneOf.DebugSummary}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerDisplay("{_oneOf.DebugSummary}")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="aa4e0-101">表示一组在语音识别语法约束的选择。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-101">Represents a set of alternatives in the constraints of a speech recognition grammar.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa4e0-102"><xref:System.Speech.Recognition.Choices>对象表示可以具有若干值之一的短语的组件。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-102">A <xref:System.Speech.Recognition.Choices> object represents a component of a phrase that can have one of several values.</span></span> <span data-ttu-id="aa4e0-103">在从对象创建语音识别语法时使用此类 <xref:System.Speech.Recognition.GrammarBuilder> 。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-103">Use this class when creating a speech recognition grammar from a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
 <span data-ttu-id="aa4e0-104">例如， <xref:System.Speech.Recognition.Choices> 对象可以表示短语 "将颜色更改为*colorChoice*" 中的组件*colorChoice* ，其中*colorChoice*可接受的值为 "red"、"绿色" 或 "蓝色"。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-104">For example, a <xref:System.Speech.Recognition.Choices> object could represent the component *colorChoice* in the phrase, "Change the color to *colorChoice*", where acceptable values for *colorChoice* are "red", or "green", or "blue".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aa4e0-105">若要将 <xref:System.Speech.Recognition.Choices> 对象用作短语中的可选组件，请创建 <xref:System.Speech.Recognition.Choices> 对象并将其添加到 <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.GrammarBuilder%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> 对象并将 `minRepeat` `maxRepeat` 设置为0和1。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-105">To use a <xref:System.Speech.Recognition.Choices> object as an optional component in a phrase, create the <xref:System.Speech.Recognition.Choices> object and add it to a <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.GrammarBuilder%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> object with `minRepeat` and `maxRepeat` set to 0 and 1, respectively.</span></span> <span data-ttu-id="aa4e0-106">无论可选组件是否被口述，都可以识别包含可选组件的短语。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-106">Phrases containing optional components can be recognized whether or not the optional component is spoken.</span></span>  
  
 <span data-ttu-id="aa4e0-107"><xref:System.Speech.Recognition.Choices>类与 `one-of` 语音识别语法规范所定义的 XML 元素相同， [ (SRGS) 版本 1.0](https://www.w3.org/TR/speech-grammar/) ，并且类似于 <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> 命名空间中的类 <xref:System.Speech.Recognition.SrgsGrammar> 。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-107">The <xref:System.Speech.Recognition.Choices> class serves the same function as the `one-of` XML element defined by the [Speech Recognition Grammar Specification (SRGS) Version 1.0](https://www.w3.org/TR/speech-grammar/) and is similar to the <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> class in the <xref:System.Speech.Recognition.SrgsGrammar> namespace.</span></span>  
  
 <span data-ttu-id="aa4e0-108">有关定义语音识别语法的详细信息，请参阅 [语音识别](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14))。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-108">For more information about defining a speech recognition grammar, see [Speech Recognition](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa4e0-109">下面的示例创建了 "将背景设置为 *colorChoice*" 一词的语音识别语法，其中 *colorChoice* 可以为定义的颜色之一。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-109">The following example creates a speech recognition grammar for the phrase, "Set background to *colorChoice*", where *colorChoice* can be one of the defined colors.</span></span> <span data-ttu-id="aa4e0-110"><xref:System.Speech.Recognition.GrammarBuilder>用于定义语法约束。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-110">The <xref:System.Speech.Recognition.GrammarBuilder> is used to define the constraints for the grammar.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a Choices object that contains a set of alternative colors.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  colorChoice.Add(new string[] {"cyan", "yellow", "magenta"});  
  
  // Construct the phrase.  
  GrammarBuilder builder = new GrammarBuilder("Set background to");  
  builder.Append(colorChoice);  
  
  // Create a grammar for the phrase.  
  Grammar colorGrammar = new Grammar(builder);  
  colorGrammar.Name = "SetBackground";  
  
  return colorGrammar;  
}  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.Grammar" />
    <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143"><span data-ttu-id="aa4e0-111">语音识别语法规范 (SRGS) </span><span class="sxs-lookup"><span data-stu-id="aa4e0-111">Speech Recognition Grammar Specification (SRGS)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="aa4e0-112">初始化 <see cref="T:System.Speech.Recognition.Choices" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-112">Initializes a new instance of the <see cref="T:System.Speech.Recognition.Choices" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa4e0-113">您可以 <xref:System.Speech.Recognition.Choices> 使用无参数构造函数构造对象， (该构造函数返回一个空对象) 、一 <xref:System.String> 组对象或一组 <xref:System.Speech.Recognition.GrammarBuilder> 对象。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-113">You can construct a <xref:System.Speech.Recognition.Choices> object using a parameterless constructor (which returns an empty object), from a group of <xref:System.String> objects, or a from set of <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span>  
  
 <span data-ttu-id="aa4e0-114">由于 <xref:System.Speech.Recognition.GrammarBuilder> 对象支持从和进行隐式转换 <xref:System.Speech.Recognition.SemanticResultValue> ，因此 <xref:System.Speech.Recognition.SemanticResultKey> <xref:System.Speech.Recognition.Choices> 可以使用强制转换从这些对象的数组构造。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-114">Because the <xref:System.Speech.Recognition.GrammarBuilder> object supports implicit conversion from <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey>, a <xref:System.Speech.Recognition.Choices> can be constructed from an array of these objects using a cast.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa4e0-115">下面的示例使用 <xref:System.Speech.Recognition.Choices> 对象创建两个替代项列表。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-115">The following example uses <xref:System.Speech.Recognition.Choices> objects to create two lists of alternatives.</span></span>  
  
 <span data-ttu-id="aa4e0-116">第一个 <xref:System.Speech.Recognition.Choices> 对象是从对象数组构造的 <xref:System.String> 。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-116">The first <xref:System.Speech.Recognition.Choices> object is constructed from an array of <xref:System.String> objects.</span></span> <span data-ttu-id="aa4e0-117">另 <xref:System.Speech.Recognition.Choices> 一个对象是从 <xref:System.Speech.Recognition.GrammarBuilder> 由强制转换隐式转换的对象数组构造的。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-117">The other <xref:System.Speech.Recognition.Choices> object is constructed from an array of <xref:System.Speech.Recognition.GrammarBuilder> objects which have been implicitly converted by a cast.</span></span>  
  
 <span data-ttu-id="aa4e0-118">该示例使用 <xref:System.Speech.Recognition.GrammarBuilder> 对象来汇编短语，使用 <xref:System.Speech.Recognition.Choices> 对象和两个其他字符串，这些字符串可用于识别以 "在 [phoneType] Phone 上呼叫 [contactlList]" 形式的语音输入，例如 "对手机进行呼叫 Jane"。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-118">The example uses a <xref:System.Speech.Recognition.GrammarBuilder> object to assemble a phrase, using the <xref:System.Speech.Recognition.Choices> objects and two additional strings, that can be used to recognize speech input in the form of "Call [contactlList] on [phoneType] phone" , for example "Call Jane on cell phone".</span></span>  
  
```csharp
public GrammarBuilder ChoicesConstructor2 ()  
{  
    GrammarBuilder gb = new GrammarBuilder ();  
    Choices phoneType = new Choices (new string[] {"cell", "home", "work"});  
    Choices contactList = new Choices (new GrammarBuilder[] {(GrammarBuilder) "Mark", (GrammarBuilder) "Jane", (GrammarBuilder) "Frank"});  
    gb.Append ("Call");  
    gb.Append (contactList);  
    gb.Append ("on");  
    gb.Append (phoneType);  
    gb.Append ("phone");  
    return gb;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Choices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Choices.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Choices();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="aa4e0-119">初始化包含空备选项集的 <see cref="T:System.Speech.Recognition.Choices" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-119">Initializes a new instance of the <see cref="T:System.Speech.Recognition.Choices" /> class that contains an empty set of alternatives.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa4e0-120">此构造函数返回一组有效的空替代项。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-120">This constructor returns a valid, empty set of alternatives.</span></span> <span data-ttu-id="aa4e0-121">可以使用任何方法添加替代项 <xref:System.Speech.Recognition.Choices.Add%2A> 。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-121">You can add alternatives using any of the <xref:System.Speech.Recognition.Choices.Add%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa4e0-122">下面的示例使用 <xref:System.Speech.Recognition.Choices> 和 <xref:System.Speech.Recognition.GrammarBuilder> 对象创建一个短语，该短语可用于识别语音输入，例如 "对她的单元调用 Anne" 和 "在其工作电话上调用 James"。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-122">The following example uses <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects to create a phrase that can be used to recognize speech input such as "Call Anne on her cell" and "Call James on his work phone".</span></span> <span data-ttu-id="aa4e0-123">该示例使用从和到之间的隐式转换 <xref:System.Speech.Recognition.Choices> <xref:System.String> <xref:System.Speech.Recognition.GrammarBuilder> 。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-123">The example uses implicit casts from <xref:System.Speech.Recognition.Choices> and <xref:System.String> to <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
```csharp  
public Grammar CreatePhonePhrase()  
{  
  
  // Create alternatives for female names and add a phrase.  
  GrammarBuilder females = new Choices(new string[] { "Anne", "Mary" });  
  females.Append("on her");  
  
  // Create alternatives for male names and add a phrase.  
  GrammarBuilder males = new Choices(new string[] { "James", "Sam" });  
  males.Append("on his");  
  
  // Create a Choices object that contains an array of alternative  
  // GrammarBuilder objects.  
  Choices people = new Choices();  
  people.Add(new Choices(new GrammarBuilder[] {females, males}));  
  
  // Create a Choices object that contains a set of alternative phone types.  
  Choices phoneType = new Choices();  
  phoneType.Add(new string[] { "cell", "home", "work" });  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder();  
  gb.Append("call");  
  gb.Append(people);  
  gb.Append(phoneType);  
  gb.Append(new GrammarBuilder("phone"), 0, 1);  
  
  return new Grammar(gb);  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Choices (params System.Speech.Recognition.GrammarBuilder[] alternateChoices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.GrammarBuilder[] alternateChoices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Choices.#ctor(System.Speech.Recognition.GrammarBuilder[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray alternateChoices As GrammarBuilder())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Choices(... cli::array &lt;System::Speech::Recognition::GrammarBuilder ^&gt; ^ alternateChoices);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Choices : System.Speech.Recognition.GrammarBuilder[] -&gt; System.Speech.Recognition.Choices" Usage="new System.Speech.Recognition.Choices alternateChoices" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="alternateChoices" Type="System.Speech.Recognition.GrammarBuilder[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="alternateChoices"><span data-ttu-id="aa4e0-124">包含替代组的数组。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-124">An array containing the set of alternatives.</span></span></param>
        <summary><span data-ttu-id="aa4e0-125">从包含一个或多个 <see cref="T:System.Speech.Recognition.Choices" /> 对象数组初始化 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-125">Initializes a new instance of the <see cref="T:System.Speech.Recognition.Choices" /> class from an array containing one or more <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa4e0-126">每个 <xref:System.Speech.Recognition.GrammarBuilder> 中的都 `alternateChoices` 定义一个替代方法。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-126">Each <xref:System.Speech.Recognition.GrammarBuilder> in `alternateChoices` defines one alternative.</span></span> <span data-ttu-id="aa4e0-127">如果 `alternateChoices` 为空数组，则构造函数返回一组空的替代项。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-127">If `alternateChoices` is an empty array, the constructor returns an empty set of alternatives.</span></span> <span data-ttu-id="aa4e0-128">可以使用任何方法添加替代项 <xref:System.Speech.Recognition.Choices.Add%2A> 。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-128">You can add alternatives using any of the <xref:System.Speech.Recognition.Choices.Add%2A> methods.</span></span>  
  
 <span data-ttu-id="aa4e0-129">当为时，构造函数将引发 <xref:System.ArgumentNullException> `alternateChoices` ， `null` 或者当任何数组元素为时引发 `null` 。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-129">The constructor throws an <xref:System.ArgumentNullException> when `alternateChoices` is `null` or when any of the array elements are `null`.</span></span>  
  
 <span data-ttu-id="aa4e0-130">由于 <xref:System.Speech.Recognition.GrammarBuilder> 类 <xref:System.Speech.Recognition.Choices> <xref:System.Speech.Recognition.SemanticResultValue> 通过正确使用强制转换来支持将、和对象隐式转换 <xref:System.Speech.Recognition.SemanticResultKey> 为实例，因此， <xref:System.Speech.Recognition.GrammarBuilder> 此构造函数还可用于 <xref:System.Speech.Recognition.Choices> 从这些对象的任意组合列表中创建对象。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-130">Because the <xref:System.Speech.Recognition.GrammarBuilder> class provides support for implicit conversion of <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultValue>, and <xref:System.Speech.Recognition.SemanticResultKey> objects to <xref:System.Speech.Recognition.GrammarBuilder> instances, by properly using casts, this constructor can also be used to create a <xref:System.Speech.Recognition.Choices> object from a list of any combination of these objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa4e0-131">下面的示例使用 `Choices` 和 <xref:System.Speech.Recognition.GrammarBuilder> 对象创建一个 <xref:System.Speech.Recognition.Grammar> 用于短语，如 "对她的单元调用 Anne" 和 "在其工作电话上调用 James"。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-131">The following example uses `Choices` and <xref:System.Speech.Recognition.GrammarBuilder> objects to create a <xref:System.Speech.Recognition.Grammar> for phrases such as, "Call Anne on her cell" and "Call James on his work phone".</span></span> <span data-ttu-id="aa4e0-132">该示例使用从和到之间的隐式转换 `Choices` <xref:System.String> <xref:System.Speech.Recognition.GrammarBuilder> 。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-132">The example uses implicit casts from `Choices` and <xref:System.String> to <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
```csharp  
public Grammar CreatePhonePhrase()  
{  
  
  // Create alternatives for female names and add a phrase.  
  GrammarBuilder females = new Choices(new string[] { "Anne", "Mary" });  
  females.Append("on her");  
  
  // Create alternatives for male names and add a phrase.  
  GrammarBuilder males = new Choices(new string[] { "James", "Sam" });  
  males.Append("on his");  
  
  // Create a Choices object that contains an array of alternative  
  // GrammarBuilder objects.  
  Choices people = new Choices();  
  people.Add(new Choices(new GrammarBuilder[] {females, males}));  
  
  // Create a Choices object that contains a set of alternative phone types.  
  Choices phoneType = new Choices();  
  phoneType.Add(new string[] { "cell", "home", "work" });  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder();  
  gb.Append("call");  
  gb.Append(people);  
  gb.Append(phoneType);  
  gb.Append(new GrammarBuilder("phone"), 0, 1);  
  
  return new Grammar(gb);  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Choices (params string[] phrases);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] phrases) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Choices.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray phrases As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Choices(... cli::array &lt;System::String ^&gt; ^ phrases);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Choices : string[] -&gt; System.Speech.Recognition.Choices" Usage="new System.Speech.Recognition.Choices phrases" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrases" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="phrases"><span data-ttu-id="aa4e0-133">包含替代组的数组。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-133">An array containing the set of alternatives.</span></span></param>
        <summary><span data-ttu-id="aa4e0-134">从包含一个或多个 <see cref="T:System.Speech.Recognition.Choices" /> 对象数组初始化 <see cref="T:System.String" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-134">Initializes a new instance of the <see cref="T:System.Speech.Recognition.Choices" /> class from an array containing one or more <see cref="T:System.String" /> objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa4e0-135">每个 <xref:System.String> 中的都 `phrases` 定义一个替代方法。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-135">Each <xref:System.String> in `phrases` defines one alternative.</span></span> <span data-ttu-id="aa4e0-136">语音识别引擎可以使用字符串数组中的任意一个项来匹配语音输入。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-136">The speech recognition engine can use any one of the items in the string array to match speech input.</span></span> <span data-ttu-id="aa4e0-137">如果 `phrases` 为空数组，则构造函数返回一组空的替代项。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-137">If `phrases` is an empty array, the constructor returns an empty set of alternatives.</span></span> <span data-ttu-id="aa4e0-138">可以使用任何方法添加替代项 <xref:System.Speech.Recognition.Choices.Add%2A> 。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-138">You can add alternatives using any of the <xref:System.Speech.Recognition.Choices.Add%2A> methods.</span></span>  
  
 <span data-ttu-id="aa4e0-139"><xref:System.ArgumentNullException>如果 `phrases` 为 `null` 或任何数组元素为，则构造函数引发 `null` 。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-139">The constructor throws an <xref:System.ArgumentNullException> when `phrases` is `null` or any of the array elements are `null`.</span></span> <span data-ttu-id="aa4e0-140"><xref:System.ArgumentException>如果数组中的任何元素为空字符串 ( "" ) ，则构造函数将引发。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-140">The constructor throws an <xref:System.ArgumentException> if any element in the array is an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa4e0-141">下面的示例使用 <xref:System.Speech.Recognition.Choices> 和 <xref:System.Speech.Recognition.GrammarBuilder> 对象创建一个 <xref:System.Speech.Recognition.Grammar> 用于短语，如 "在她的单元上调用 Anne" 和 "在其工作电话上调用 James"。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-141">The following example uses <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects to create a <xref:System.Speech.Recognition.Grammar> for the phrases such as, "Call Anne on her cell" and "Call James on his work phone".</span></span> <span data-ttu-id="aa4e0-142">该示例使用从和到之间的隐式转换 `Choices` <xref:System.String> <xref:System.Speech.Recognition.GrammarBuilder> 。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-142">The example uses implicit casts from `Choices` and <xref:System.String> to <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
```csharp  
public Grammar CreatePhonePhrase()  
{  
  
  // Create alternatives for female names and add a phrase.  
  GrammarBuilder females = new Choices(new string[] { "Anne", "Mary" });  
  females.Append("on her");  
  
  // Create alternatives for male names and add a phrase.  
  GrammarBuilder males = new Choices(new string[] { "James", "Sam" });  
  males.Append("on his");  
  
  // Create a Choices object that contains an array of alternative  
  // GrammarBuilder objects.  
  Choices people = new Choices();  
  people.Add(new Choices(new GrammarBuilder[] {females, males}));  
  
  // Create a Choices object that contains a set of alternative phone types.  
  Choices phoneType = new Choices();  
  phoneType.Add(new string[] { "cell", "home", "work" });  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder();  
  gb.Append("call");  
  gb.Append(people);  
  gb.Append(phoneType);  
  gb.Append(new GrammarBuilder("phone"), 0, 1);  
  
  return new Grammar(gb);  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="aa4e0-143">将项添加到替代项组中。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-143">Adds items to the set of alternatives.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (params System.Speech.Recognition.GrammarBuilder[] alternateChoices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Speech.Recognition.GrammarBuilder[] alternateChoices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Choices.Add(System.Speech.Recognition.GrammarBuilder[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (ParamArray alternateChoices As GrammarBuilder())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(... cli::array &lt;System::Speech::Recognition::GrammarBuilder ^&gt; ^ alternateChoices);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Speech.Recognition.GrammarBuilder[] -&gt; unit" Usage="choices.Add alternateChoices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alternateChoices" Type="System.Speech.Recognition.GrammarBuilder[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="alternateChoices"><span data-ttu-id="aa4e0-144">要添加到 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 对象中的 <see cref="T:System.Speech.Recognition.Choices" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-144">The <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects to add to this <see cref="T:System.Speech.Recognition.Choices" /> object.</span></span></param>
        <summary><span data-ttu-id="aa4e0-145">将包含一个或多个 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 对象的数组添加到替代项组中。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-145">Adds an array containing one or more <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects to the set of alternatives.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa4e0-146">由于支持从 <xref:System.Speech.Recognition.Choices> 、和对象到的隐式转换 <xref:System.Speech.Recognition.SemanticResultKey> <xref:System.Speech.Recognition.SemanticResultValue> <xref:System.Speech.Recognition.GrammarBuilder> ，这三个类也可以添加到 <xref:System.Speech.Recognition.Choices> 实例中。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-146">Because of support for implicit conversion from <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, and <xref:System.Speech.Recognition.SemanticResultValue> objects to <xref:System.Speech.Recognition.GrammarBuilder>, these three classes may be added to a <xref:System.Speech.Recognition.Choices> instance as well.</span></span>  
  
 <span data-ttu-id="aa4e0-147">如果 `alternateChoices` 是一个空数组，则此方法不会更新一组替代项。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-147">If `alternateChoices` is an empty array, this method does not update the set of alternatives.</span></span>  
  
 <span data-ttu-id="aa4e0-148">应用程序可以同时使用 <xref:System.Speech.Recognition.Choices.Add%28System.String%5B%5D%29> 和 <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> 来添加对象的替代项 <xref:System.Speech.Recognition.Choices> 。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-148">Applications can use both <xref:System.Speech.Recognition.Choices.Add%28System.String%5B%5D%29> and <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> to add alternatives to a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
 <span data-ttu-id="aa4e0-149"><xref:System.ArgumentNullException>当 `alternateChoices` 为 `null` 或任何数组元素为时，此方法将引发 `null` 。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-149">This method throws an <xref:System.ArgumentNullException> when `alternateChoices` is `null` or any of the array elements are `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa4e0-150">下面的示例为短语创建了语音识别语法，例如 "对她的单元调用 Anne" 和 "在他的工作电话上拨打 James"。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-150">The following example creates a speech recognition grammar for phrases such as "Call Anne on her cell" and "Call James on his work phone".</span></span> <span data-ttu-id="aa4e0-151">该示例使用方法的两个重载 <xref:System.Speech.Recognition.Choices.Add%2A> 来生成语法。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-151">The example uses both overloads of the <xref:System.Speech.Recognition.Choices.Add%2A> method to build the grammar.</span></span>  
  
```csharp  
public Grammar CreatePhonePhrase()  
{  
  
  // Create alternatives for female names and add a phrase.  
  GrammarBuilder females = new Choices(new string[] { "Anne", "Mary" });  
  females.Append("on her");  
  
  // Create alternatives for male names and add a phrase.  
  GrammarBuilder males = new Choices(new string[] { "James", "Sam" });  
  males.Append("on his");  
  
  // Create a Choices object that contains an array of alternative  
  // GrammarBuilder objects.  
  Choices people = new Choices();  
  people.Add(new Choices(new GrammarBuilder[] {females, males}));  
  
  // Create a Choices object that contains a set of alternative phone types.  
  Choices phoneType = new Choices();  
  phoneType.Add(new string[] { "cell", "home", "work" });  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder();  
  gb.Append("call");  
  gb.Append(people);  
  gb.Append(phoneType);  
  gb.Append(new GrammarBuilder("phone"), 0, 1);  
  
  return new Grammar(gb);  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (params string[] phrases);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string[] phrases) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Choices.Add(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (ParamArray phrases As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(... cli::array &lt;System::String ^&gt; ^ phrases);" />
      <MemberSignature Language="F#" Value="member this.Add : string[] -&gt; unit" Usage="choices.Add phrases" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrases" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="phrases"><span data-ttu-id="aa4e0-152">要添加到该<see cref="T:System.Speech.Recognition.Choices" />对象的字符串。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-152">The strings to add to this <see cref="T:System.Speech.Recognition.Choices" /> object.</span></span></param>
        <summary><span data-ttu-id="aa4e0-153">将包含一个或多个 <see cref="T:System.String" /> 对象的数组添加到替代项组中。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-153">Adds an array containing one or more <see cref="T:System.String" /> objects to the set of alternatives.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa4e0-154">应用程序可以同时使用 <xref:System.Speech.Recognition.Choices.Add%28System.String%5B%5D%29> 和 <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> 来添加对象的替代项 <xref:System.Speech.Recognition.Choices> 。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-154">Applications can use both <xref:System.Speech.Recognition.Choices.Add%28System.String%5B%5D%29> and <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> to add alternatives to a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
 <span data-ttu-id="aa4e0-155">如果 `phrases` 是一个空数组，则此方法不会更新一组备用项。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-155">If `phrases` is an empty array, this method does not update the set of alternates.</span></span>  
  
 <span data-ttu-id="aa4e0-156"><xref:System.ArgumentNullException>当 `phrases` 为 `null` 或任何数组元素为时，此方法将引发 `null` 。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-156">This method throws an <xref:System.ArgumentNullException> when `phrases` is `null` or any of the array elements are `null`.</span></span> <span data-ttu-id="aa4e0-157"><xref:System.ArgumentException>如果数组中的任何元素为空字符串 ( "" ) ，则此方法将引发。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-157">This method throws an <xref:System.ArgumentException> if any element in the array is the empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa4e0-158">下面的示例为类似于 "对单元格调用 Anne" 和 "在其工作电话上调用 James" 的短语创建语音识别语法。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-158">The following example creates a speech recognition grammar for phrases similar to "Call Anne on her cell" and "Call James on his work phone".</span></span> <span data-ttu-id="aa4e0-159">该示例使用方法的两个重载 <xref:System.Speech.Recognition.Choices.Add%2A> 来生成语法。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-159">The example uses both overloads of the <xref:System.Speech.Recognition.Choices.Add%2A> method to build the grammar.</span></span>  
  
```csharp  
public Grammar CreatePhonePhrase()  
{  
  
  // Create alternatives for female names and add a phrase.  
  GrammarBuilder females = new Choices(new string[] { "Anne", "Mary" });  
  females.Append("on her");  
  
  // Create alternatives for male names and add a phrase.  
  GrammarBuilder males = new Choices(new string[] { "James", "Sam" });  
  males.Append("on his");  
  
  // Create a Choices object that contains an array of alternative  
  // GrammarBuilder objects.  
  Choices people = new Choices();  
  people.Add(new Choices(new GrammarBuilder[] {females, males}));  
  
  // Create a Choices object that contains a set of alternative phone types.  
  Choices phoneType = new Choices();  
  phoneType.Add(new string[] { "cell", "home", "work" });  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder();  
  gb.Append("call");  
  gb.Append(people);  
  gb.Append(phoneType);  
  gb.Append(new GrammarBuilder("phone"), 0, 1);  
  
  return new Grammar(gb);  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="ToGrammarBuilder">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.GrammarBuilder ToGrammarBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Recognition.GrammarBuilder ToGrammarBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Choices.ToGrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Function ToGrammarBuilder () As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Recognition::GrammarBuilder ^ ToGrammarBuilder();" />
      <MemberSignature Language="F#" Value="member this.ToGrammarBuilder : unit -&gt; System.Speech.Recognition.GrammarBuilder" Usage="choices.ToGrammarBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="aa4e0-160">从 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 对象返回此 <see cref="T:System.Speech.Recognition.Choices" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-160">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object from this <see cref="T:System.Speech.Recognition.Choices" /> object.</span></span></summary>
        <returns><span data-ttu-id="aa4e0-161">一个 <see cref="T:System.Speech.Recognition.GrammarBuilder" />，匹配此 <see cref="T:System.Speech.Recognition.Choices" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-161">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that matches this <see cref="T:System.Speech.Recognition.Choices" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa4e0-162">此方法返回的与以下任意一项返回的返回的 <xref:System.Speech.Recognition.GrammarBuilder> 。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-162">The <xref:System.Speech.Recognition.GrammarBuilder> returned by this method is equivalent to one returned by either of the following.</span></span>  
  
-   <span data-ttu-id="aa4e0-163">调用 <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> 此对象的构造函数作为参数。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-163">Calling the <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> constructor with this object as the parameter.</span></span>  
  
-   <span data-ttu-id="aa4e0-164">使用此对象的隐式或显式强制转换为 <xref:System.Speech.Recognition.GrammarBuilder> 。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-164">Using the implicit or explicit cast of this object to a <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa4e0-165">下面的示例创建了用于更改背景色的语音识别语法。</span><span class="sxs-lookup"><span data-stu-id="aa4e0-165">The following example creates a speech recognition grammar for changing the background color.</span></span>  
  
```csharp  
  
private Grammar CreateColorChoice()  
{  
  
  // Create a Choices object that contains a set of alternative colors.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder();  
  gb.Append(new Choices(new string[] {"Set", "Change"}));  
  gb.Append("background to");  
  gb.Append(colorChoice.ToGrammarBuilder());  
  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "modify background color";  
  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
  </Members>
</Type>
