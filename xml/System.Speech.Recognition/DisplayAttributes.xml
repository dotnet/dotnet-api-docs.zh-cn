<Type Name="DisplayAttributes" FullName="System.Speech.Recognition.DisplayAttributes">
  <Metadata><Meta Name="ms.openlocfilehash" Value="abd3a5a8d97dee3a05242df8f085bf6ddaba88a0" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86826725" /></Metadata><TypeSignature Language="C#" Value="public enum DisplayAttributes" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DisplayAttributes extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.DisplayAttributes" />
  <TypeSignature Language="VB.NET" Value="Public Enum DisplayAttributes" />
  <TypeSignature Language="C++ CLI" Value="public enum class DisplayAttributes" />
  <TypeSignature Language="F#" Value="type DisplayAttributes = " />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Flags]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Flags&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>列出 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 可用于为显示单词或标点符号指定空白的选项。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Windows 桌面语音将识别的短语作为或对象的集合返回 <xref:System.Speech.Recognition.RecognizedWordUnit> <xref:System.Speech.Recognition.ReplacementText> 。 每个对象对应于一个词或标点符号。 `DisplayAttributes`或的属性 <xref:System.Speech.Recognition.RecognizedWordUnit> <xref:System.Speech.Recognition.ReplacementText> 使用枚举的成员 <xref:System.Speech.Recognition.DisplayAttributes> 来描述如何根据给定的单词或标点符号来处理打印间距。  
  
 枚举的两个或更多成员 `DisplayAttributes` 可以按位组合在一起 `OR` ，以指定特定单词的显示方式。  
  
> [!NOTE]
>  语音识别器使用的显示格式是特定于语言的。  
  
 例如，假设使用提供的默认系统语法的识别引擎的输入短语 <xref:System.Speech.Recognition.DictationGrammar> 为 "Hello 逗点"。 然后，识别引擎返回包含包含以下 <xref:System.Speech.Recognition.RecognizedPhrase> 字符串的五个 <xref:System.Speech.Recognition.RecognizedWordUnit> 对象的 `DisplayAttributes` 。  
  
|项|`DisplayAttributes`|  
|----------|-------------------------|  
|你好|OneTrailingSpace|  
|,|OneTrailingSpace &#124; ConsumeLeadingSpaces|  
|he|OneTrailingSpace|  
|指出|OneTrailingSpace|  
|.|OneTrailingSpace &#124; ConsumeLeadingSpaces|  
  
 为此识别的短语返回的文本打印为： "Hello，他说"。  
  
   
  
## Examples  
 下面的示例使用 <xref:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes%2A> 对象列表的属性 <xref:System.Speech.Recognition.RecognizedWordUnit> 将单词的格式设置为短语。  
  
```csharp  
  
// Use the DisplayAttributes property to format speech as text.   
  
static string GetDisplayText(List<RecognizedWordUnit> words)  
{  
  StringBuilder sb = new StringBuilder();  
  
  // Concatenate the word units together. Use the DisplayAttributes  
  // property of each word unit to add or remove white space around  
  // the word unit.  
  foreach (RecognizedWordUnit word in words)  
  {  
    if ((word.DisplayAttributes  
      & DisplayAttributes.ConsumeLeadingSpaces) != 0))  
    {  
      sb = new StringBuilder(sb.ToString().TrimEnd());  
    }  
  
    sb.Append(word.Text);  
  
    if ((word.DisplayAttributes  
      & DisplayAttributes.OneTrailingSpace) != 0)  
    {  
      sb.Append(" ");  
    }  
    else if ((word.DisplayAttributes  
      & DisplayAttributes.TwoTrailingSpaces) != 0)  
    {  
      sb.Append("  ");  
    }  
  }  
  
  return sb.ToString();  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.RecognizedPhrase" />
    <altmember cref="T:System.Speech.Recognition.RecognitionResult" />
    <altmember cref="T:System.Speech.Recognition.RecognizedWordUnit" />
    <altmember cref="T:System.Speech.Recognition.ReplacementText" />
  </Docs>
  <Members>
    <Member MemberName="ConsumeLeadingSpaces">
      <MemberSignature Language="C#" Value="ConsumeLeadingSpaces" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Recognition.DisplayAttributes ConsumeLeadingSpaces = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.DisplayAttributes.ConsumeLeadingSpaces" />
      <MemberSignature Language="VB.NET" Value="ConsumeLeadingSpaces" />
      <MemberSignature Language="C++ CLI" Value="ConsumeLeadingSpaces" />
      <MemberSignature Language="F#" Value="ConsumeLeadingSpaces = 16" Usage="System.Speech.Recognition.DisplayAttributes.ConsumeLeadingSpaces" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.DisplayAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>该项不具有其前的空间。</summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Recognition.DisplayAttributes None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.DisplayAttributes.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.Speech.Recognition.DisplayAttributes.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.DisplayAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>该项不指定空白的处理方式。</summary>
      </Docs>
    </Member>
    <Member MemberName="OneTrailingSpace">
      <MemberSignature Language="C#" Value="OneTrailingSpace" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Recognition.DisplayAttributes OneTrailingSpace = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.DisplayAttributes.OneTrailingSpace" />
      <MemberSignature Language="VB.NET" Value="OneTrailingSpace" />
      <MemberSignature Language="C++ CLI" Value="OneTrailingSpace" />
      <MemberSignature Language="F#" Value="OneTrailingSpace = 4" Usage="System.Speech.Recognition.DisplayAttributes.OneTrailingSpace" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.DisplayAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>该项不具有其后的一个空间。</summary>
      </Docs>
    </Member>
    <Member MemberName="TwoTrailingSpaces">
      <MemberSignature Language="C#" Value="TwoTrailingSpaces" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Recognition.DisplayAttributes TwoTrailingSpaces = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.DisplayAttributes.TwoTrailingSpaces" />
      <MemberSignature Language="VB.NET" Value="TwoTrailingSpaces" />
      <MemberSignature Language="C++ CLI" Value="TwoTrailingSpaces" />
      <MemberSignature Language="F#" Value="TwoTrailingSpaces = 8" Usage="System.Speech.Recognition.DisplayAttributes.TwoTrailingSpaces" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.DisplayAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>该项不具有其后的两个空间。</summary>
      </Docs>
    </Member>
    <Member MemberName="ZeroTrailingSpaces">
      <MemberSignature Language="C#" Value="ZeroTrailingSpaces" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Recognition.DisplayAttributes ZeroTrailingSpaces = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.DisplayAttributes.ZeroTrailingSpaces" />
      <MemberSignature Language="VB.NET" Value="ZeroTrailingSpaces" />
      <MemberSignature Language="C++ CLI" Value="ZeroTrailingSpaces" />
      <MemberSignature Language="F#" Value="ZeroTrailingSpaces = 2" Usage="System.Speech.Recognition.DisplayAttributes.ZeroTrailingSpaces" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.DisplayAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>该项不具有其后的空间。</summary>
      </Docs>
    </Member>
  </Members>
</Type>
