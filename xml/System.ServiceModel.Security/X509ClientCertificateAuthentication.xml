<Type Name="X509ClientCertificateAuthentication" FullName="System.ServiceModel.Security.X509ClientCertificateAuthentication">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a372fe22028fc6706945d8ce655b59a8bc25a016" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83892252" /></Metadata><TypeSignature Language="C#" Value="public class X509ClientCertificateAuthentication" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit X509ClientCertificateAuthentication extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.X509ClientCertificateAuthentication" />
  <TypeSignature Language="VB.NET" Value="Public Class X509ClientCertificateAuthentication" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509ClientCertificateAuthentication" />
  <TypeSignature Language="F#" Value="type X509ClientCertificateAuthentication = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>指定身份验证属性以验证客户端证书。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 <xref:System.ServiceModel.Security.X509ClientCertificateAuthentication.CertificateValidationMode%2A> 设置为 <xref:System.ServiceModel.Security.X509CertificateValidationMode.Custom>，则您必须创建从 <xref:System.IdentityModel.Selectors.X509CertificateValidator> 类继承的自定义证书验证程序。 有关详细信息，请参阅[如何：创建使用自定义证书验证程序的服务](/dotnet/framework/wcf/extending/how-to-create-a-service-that-employs-a-custom-certificate-validator)。  
  
   
  
## Examples  
 下面的代码演示如何设置此属性。  
  
 [!code-csharp[X509ClientCertificateAuthentication#1](~/samples/snippets/csharp/VS_Snippets_CFX/x509clientcertificateauthentication/cs/source.cs#1)]
 [!code-vb[X509ClientCertificateAuthentication#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/x509clientcertificateauthentication/vb/source.vb#1)]  
  
 该属性也可以在配置文件中设置。  
  
```  
<serviceCredentials>  
  <clientCertificate>  
     <authentication certificateValidationMode='ChainTrust' />  
  </clientCertificate>  
</serviceCredentials>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Selectors.X509CertificateValidator" />
    <related type="Article" href="https://msdn.microsoft.com/library/bb0190ff-0738-4e54-8d22-c97d343708bf">如何：创建使用自定义证书验证程序的服务</related>
    <related type="Article" href="https://msdn.microsoft.com/library/6ffb8682-8f07-4a45-afbb-8d2487e9dbc3">使用证书</related>
  </Docs>
  <Members>
    <Member MemberName="CertificateValidationMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.X509CertificateValidationMode CertificateValidationMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Security.X509CertificateValidationMode CertificateValidationMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.CertificateValidationMode" />
      <MemberSignature Language="VB.NET" Value="Public Property CertificateValidationMode As X509CertificateValidationMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::X509CertificateValidationMode CertificateValidationMode { System::ServiceModel::Security::X509CertificateValidationMode get(); void set(System::ServiceModel::Security::X509CertificateValidationMode value); };" />
      <MemberSignature Language="F#" Value="member this.CertificateValidationMode : System.ServiceModel.Security.X509CertificateValidationMode with get, set" Usage="System.ServiceModel.Security.X509ClientCertificateAuthentication.CertificateValidationMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.X509CertificateValidationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置证书验证模式。</summary>
        <value><see cref="T:System.ServiceModel.Security.X509CertificateValidationMode" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 允许使用的 <xref:System.ServiceModel.Security.X509CertificateValidationMode> 的值为：  
  
-   <xref:System.ServiceModel.Security.X509CertificateValidationMode.ChainTrust>  
  
-   <xref:System.ServiceModel.Security.X509CertificateValidationMode.Custom>  
  
-   <xref:System.ServiceModel.Security.X509CertificateValidationMode.None>  
  
-   <xref:System.ServiceModel.Security.X509CertificateValidationMode.PeerOrChainTrust>  
  
-   <xref:System.ServiceModel.Security.X509CertificateValidationMode.PeerTrust>  
  
   
  
## Examples  
 以下示例使用 <xref:System.ServiceModel.Security.X509ClientCertificateAuthentication.CertificateValidationMode%2A> 输出到屏幕。  
  
 [!code-csharp[X509ClientCertificateAuthentication#7](~/samples/snippets/csharp/VS_Snippets_CFX/x509clientcertificateauthentication/cs/source.cs#7)]
 [!code-vb[X509ClientCertificateAuthentication#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/x509clientcertificateauthentication/vb/source.vb#7)]   
  
 该属性也可以在配置文件中设置。  
  
```  
<serviceCredentials>  
  <clientCertificate>  
     <authentication certificateValidationMode='ChainTrust' />  
  </clientCertificate>  
</serviceCredentials>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomCertificateValidator">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Selectors.X509CertificateValidator CustomCertificateValidator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Selectors.X509CertificateValidator CustomCertificateValidator" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.CustomCertificateValidator" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomCertificateValidator As X509CertificateValidator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Selectors::X509CertificateValidator ^ CustomCertificateValidator { System::IdentityModel::Selectors::X509CertificateValidator ^ get(); void set(System::IdentityModel::Selectors::X509CertificateValidator ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomCertificateValidator : System.IdentityModel.Selectors.X509CertificateValidator with get, set" Usage="System.ServiceModel.Security.X509ClientCertificateAuthentication.CustomCertificateValidator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.X509CertificateValidator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置自定义客户端证书验证程序。</summary>
        <value>自定义客户端证书验证程序。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 <xref:System.ServiceModel.Security.X509ClientCertificateAuthentication.CertificateValidationMode%2A> 属性设置为 <xref:System.ServiceModel.Security.X509CertificateValidationMode.Custom>，则必须将 <xref:System.ServiceModel.Security.X509ClientCertificateAuthentication.CustomCertificateValidator%2A> 属性设置为从 <xref:System.IdentityModel.Selectors.X509CertificateValidator> 类继承的自定义验证程序。  
  
 有关详细信息，请参阅[如何：创建使用自定义证书验证程序的服务](/dotnet/framework/wcf/extending/how-to-create-a-service-that-employs-a-custom-certificate-validator)。  
  
   
  
## Examples  
 下面的代码演示如何设置此属性。  
  
 [!code-csharp[X509ClientCertificateAuthentication#2](~/samples/snippets/csharp/VS_Snippets_CFX/x509clientcertificateauthentication/cs/source.cs#2)]
 [!code-vb[X509ClientCertificateAuthentication#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/x509clientcertificateauthentication/vb/source.vb#2)]  
  
 该属性也可以在配置文件中设置。  
  
```  
<serviceCredentials>  
  <clientCertificate>  
     <authentication certificateValidationMode='Custom' customCertificateValidatorType='Samples.MyCertificateValidator, Samples' />  
  </clientCertificate>  
</serviceCredentials>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">在凭据为只读时进行设置。<see langword="set" /></exception>
        <altmember cref="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.CertificateValidationMode" />
        <altmember cref="T:System.IdentityModel.Selectors.X509CertificateValidator" />
        <related type="Article" href="https://msdn.microsoft.com/library/bb0190ff-0738-4e54-8d22-c97d343708bf">如何：创建使用自定义证书验证程序的服务</related>
      </Docs>
    </Member>
    <Member MemberName="IncludeWindowsGroups">
      <MemberSignature Language="C#" Value="public bool IncludeWindowsGroups { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeWindowsGroups" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.IncludeWindowsGroups" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeWindowsGroups As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeWindowsGroups { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeWindowsGroups : bool with get, set" Usage="System.ServiceModel.Security.X509ClientCertificateAuthentication.IncludeWindowsGroups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 Windows 组是否包括在授权上下文中。</summary>
        <value>如果 Windows 组包括在授权上下文中，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 仅当 <xref:System.ServiceModel.Security.X509ClientCertificateAuthentication.MapClientCertificateToWindowsAccount%2A> 属性设置为 `true` 时，此属性才有效。  
  
 仅当不需要建立用户所属的组列表时才将此属性设置为 `false`，如果您的应用程序和身份验证决定不需要 Windows 组，这可能会提高性能。  
  
   
  
## Examples  
 下面的代码演示如何设置此属性。  
  
 [!code-csharp[X509ClientCertificateAuthentication#3](~/samples/snippets/csharp/VS_Snippets_CFX/x509clientcertificateauthentication/cs/source.cs#3)]
 [!code-vb[X509ClientCertificateAuthentication#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/x509clientcertificateauthentication/vb/source.vb#3)]  
  
 该属性也可以在配置文件中设置。  
  
```  
<serviceCredentials>  
  <clientCertificate>  
     <authentication includeWindowsGroups ='true'/>  
  </clientCertificate>  
</serviceCredentials>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapClientCertificateToWindowsAccount">
      <MemberSignature Language="C#" Value="public bool MapClientCertificateToWindowsAccount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MapClientCertificateToWindowsAccount" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.MapClientCertificateToWindowsAccount" />
      <MemberSignature Language="VB.NET" Value="Public Property MapClientCertificateToWindowsAccount As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MapClientCertificateToWindowsAccount { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MapClientCertificateToWindowsAccount : bool with get, set" Usage="System.ServiceModel.Security.X509ClientCertificateAuthentication.MapClientCertificateToWindowsAccount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否将证书映射到 Windows 帐户。</summary>
        <value>如果将证书映射到 Windows 帐户，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用绑定上的证书客户端凭据类型时，不会将证书映射到 Windows 帐户。 可以使用此属性重写此行为。 此属性设置为 `true` 时，它会导致客户端证书的标识映射到 Windows 帐户。  
  
   
  
## Examples  
 下面的代码演示如何设置此属性。  
  
 [!code-csharp[X509ClientCertificateAuthentication#4](~/samples/snippets/csharp/VS_Snippets_CFX/x509clientcertificateauthentication/cs/source.cs#4)]
 [!code-vb[X509ClientCertificateAuthentication#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/x509clientcertificateauthentication/vb/source.vb#4)]  
  
 该属性也可以在配置文件中设置。  
  
```  
<serviceCredentials>  
  <clientCertificate>  
     <authentication mapClientCertificateToWindowsAccount='true'/>  
  </clientCertificate>  
</serviceCredentials>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">在凭据为只读时进行设置。<see langword="set" /></exception>
      </Docs>
    </Member>
    <Member MemberName="RevocationMode">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509RevocationMode RevocationMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.X509Certificates.X509RevocationMode RevocationMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.RevocationMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RevocationMode As X509RevocationMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509RevocationMode RevocationMode { System::Security::Cryptography::X509Certificates::X509RevocationMode get(); void set(System::Security::Cryptography::X509Certificates::X509RevocationMode value); };" />
      <MemberSignature Language="F#" Value="member this.RevocationMode : System.Security.Cryptography.X509Certificates.X509RevocationMode with get, set" Usage="System.ServiceModel.Security.X509ClientCertificateAuthentication.RevocationMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509RevocationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 ChainTrust 和 PeerOrChainTrust X.509 证书验证的证书吊销模式。</summary>
        <value><see cref="T:System.Security.Cryptography.X509Certificates.X509RevocationMode" /> 中的值之一：<see langword="NoCheck" />、<see langword="Online" /> 或 <see langword="Offline" />。 默认为 <see langword="Online" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用证书时，系统通过检查客户端证书不在吊销证书列表中来验证客户端证书未被吊销。 此检查可通过联机或根据缓存的吊销列表来执行。 将此属性设置为 <xref:System.Security.Cryptography.X509Certificates.X509RevocationMode.NoCheck> 可关闭吊销检查。  
  
 有关详细信息，请参阅使用[证书](/dotnet/framework/wcf/feature-details/working-with-certificates)。  
  
   
  
## Examples  
 下面的代码演示如何设置此属性。  
  
 [!code-csharp[X509ClientCertificateAuthentication#5](~/samples/snippets/csharp/VS_Snippets_CFX/x509clientcertificateauthentication/cs/source.cs#5)]
 [!code-vb[X509ClientCertificateAuthentication#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/x509clientcertificateauthentication/vb/source.vb#5)]  
  
 该属性也可以在配置文件中设置。  
  
```  
<serviceCredentials>  
  <clientCertificate>  
     <authentication certificateValidationMode='ChainTrust'   revocationMode = 'NoCheck'/>  
  </clientCertificate>  
</serviceCredentials>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">在凭据为只读时进行设置。<see langword="set" /></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/6ffb8682-8f07-4a45-afbb-8d2487e9dbc3">使用证书</related>
      </Docs>
    </Member>
    <Member MemberName="TrustedStoreLocation">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.StoreLocation TrustedStoreLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.X509Certificates.StoreLocation TrustedStoreLocation" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.TrustedStoreLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property TrustedStoreLocation As StoreLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::StoreLocation TrustedStoreLocation { System::Security::Cryptography::X509Certificates::StoreLocation get(); void set(System::Security::Cryptography::X509Certificates::StoreLocation value); };" />
      <MemberSignature Language="F#" Value="member this.TrustedStoreLocation : System.Security.Cryptography.X509Certificates.StoreLocation with get, set" Usage="System.ServiceModel.Security.X509ClientCertificateAuthentication.TrustedStoreLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.StoreLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置受信任存储区的位置，该位置下的客户端证书链已验证。</summary>
        <value>受信任存储区的位置，该位置下的客户端证书链已验证。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性指定是使用计算机还是用户上下文验证 X.509 证书链。  
  
   
  
## Examples  
 [!code-csharp[X509ClientCertificateAuthentication#6](~/samples/snippets/csharp/VS_Snippets_CFX/x509clientcertificateauthentication/cs/source.cs#6)]
 [!code-vb[X509ClientCertificateAuthentication#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/x509clientcertificateauthentication/vb/source.vb#6)]  
  
 该属性也可以在配置文件中设置。  
  
```  
<serviceCredentials>  
  <clientCertificate>  
     <authentication certificateValidationMode='ChainTrust'   trustedStoreLocation = 'LocalMachine'/>  
  </clientCertificate>  
</serviceCredentials>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">在凭据为只读时进行设置。<see langword="set" /></exception>
      </Docs>
    </Member>
  </Members>
</Type>
