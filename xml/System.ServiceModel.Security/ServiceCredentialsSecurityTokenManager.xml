<Type Name="ServiceCredentialsSecurityTokenManager" FullName="System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2b30a7e640155d809ffaee180d617d3d35f14b37" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86569840" /></Metadata><TypeSignature Language="C#" Value="public class ServiceCredentialsSecurityTokenManager : System.IdentityModel.Selectors.SecurityTokenManager, System.ServiceModel.Security.IEndpointIdentityProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceCredentialsSecurityTokenManager extends System.IdentityModel.Selectors.SecurityTokenManager implements class System.ServiceModel.Security.IEndpointIdentityProvider" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceCredentialsSecurityTokenManager&#xA;Inherits SecurityTokenManager&#xA;Implements IEndpointIdentityProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceCredentialsSecurityTokenManager : System::IdentityModel::Selectors::SecurityTokenManager, System::ServiceModel::Security::IEndpointIdentityProvider" />
  <TypeSignature Language="F#" Value="type ServiceCredentialsSecurityTokenManager = class&#xA;    inherit SecurityTokenManager&#xA;    interface IEndpointIdentityProvider" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Selectors.SecurityTokenManager</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Security.IEndpointIdentityProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="a370e-101">表示 <see cref="T:System.IdentityModel.Selectors.SecurityTokenManager" /> 实现，可基于在服务上配置的 <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> 提供安全令牌序列化程序。</span><span class="sxs-lookup"><span data-stu-id="a370e-101">Represents a <see cref="T:System.IdentityModel.Selectors.SecurityTokenManager" /> implementation that provides security token serializers based on the <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> configured on the service.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a370e-102">此类创建 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="a370e-102">This class creates instances of the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class.</span></span> <span data-ttu-id="a370e-103">每个服务通道侦听器都有一个此类的实例。</span><span class="sxs-lookup"><span data-stu-id="a370e-103">There is one instance of this class for each service channel listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a370e-104">下面的代码演示如何重写此类，以创建自定义的服务凭据令牌管理器。</span><span class="sxs-lookup"><span data-stu-id="a370e-104">The following code shows how to override this class to create a customized Service Credentials Token Manager.</span></span>  
  
 [!code-csharp[c_CustomCredentials#5](~/samples/snippets/csharp/VS_Snippets_CFX/c_customcredentials/cs/source.cs#5)]
 [!code-vb[c_CustomCredentials#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_customcredentials/vb/service/service.vb#5)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceCredentialsSecurityTokenManager (System.ServiceModel.Description.ServiceCredentials parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.ServiceCredentials parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ServiceCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parent As ServiceCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceCredentialsSecurityTokenManager(System::ServiceModel::Description::ServiceCredentials ^ parent);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager : System.ServiceModel.Description.ServiceCredentials -&gt; System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" Usage="new System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager parent" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="System.ServiceModel.Description.ServiceCredentials" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="a370e-105">服务凭据。</span><span class="sxs-lookup"><span data-stu-id="a370e-105">The service credentials.</span></span></param>
        <summary><span data-ttu-id="a370e-106">基于传入的 <see cref="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" /> 初始化 <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a370e-106">Initializes a new instance of the <see cref="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" /> class based on the <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> passed in.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecureConversationTokenAuthenticator">
      <MemberSignature Language="C#" Value="protected System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecureConversationTokenAuthenticator (System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement recipientRequirement, bool preserveBootstrapTokens, out System.IdentityModel.Selectors.SecurityTokenResolver sctResolver);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecureConversationTokenAuthenticator(class System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement recipientRequirement, bool preserveBootstrapTokens, [out] class System.IdentityModel.Selectors.SecurityTokenResolver&amp; sctResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator(System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement,System.Boolean,System.IdentityModel.Selectors.SecurityTokenResolver@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateSecureConversationTokenAuthenticator (recipientRequirement As RecipientServiceModelSecurityTokenRequirement, preserveBootstrapTokens As Boolean, ByRef sctResolver As SecurityTokenResolver) As SecurityTokenAuthenticator" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IdentityModel::Selectors::SecurityTokenAuthenticator ^ CreateSecureConversationTokenAuthenticator(System::ServiceModel::Security::Tokens::RecipientServiceModelSecurityTokenRequirement ^ recipientRequirement, bool preserveBootstrapTokens, [Runtime::InteropServices::Out] System::IdentityModel::Selectors::SecurityTokenResolver ^ % sctResolver);" />
      <MemberSignature Language="F#" Value="member this.CreateSecureConversationTokenAuthenticator : System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement * bool * SecurityTokenResolver -&gt; System.IdentityModel.Selectors.SecurityTokenAuthenticator" Usage="serviceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator (recipientRequirement, preserveBootstrapTokens, sctResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenAuthenticator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recipientRequirement" Type="System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement" />
        <Parameter Name="preserveBootstrapTokens" Type="System.Boolean" />
        <Parameter Name="sctResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" RefType="out" />
      </Parameters>
      <Docs>
        <param name="recipientRequirement"><span data-ttu-id="a370e-107">表示特定于侦听器的安全属性需求。</span><span class="sxs-lookup"><span data-stu-id="a370e-107">Represents security property requirements specific to the listener.</span></span></param>
        <param name="preserveBootstrapTokens"><span data-ttu-id="a370e-108">如果应保留启动令牌，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a370e-108"><see langword="true" /> if the bootstrap tokens should be preserved; Otherwise <see langword="false" />.</span></span></param>
        <param name="sctResolver"><span data-ttu-id="a370e-109">一个安全令牌解析程序对象，该对象可以在您具有密钥标识符或密钥标识符子句时检索安全令牌或密钥。</span><span class="sxs-lookup"><span data-stu-id="a370e-109">A security token resolver object that can retrieve security tokens or keys when you have a key identifier or key identifier clause.</span></span></param>
        <summary><span data-ttu-id="a370e-110">基于传入的属性要求创建安全对话令牌身份验证器。</span><span class="sxs-lookup"><span data-stu-id="a370e-110">Creates a secure conversation token authenticator based on the property requirements passed in.</span></span></summary>
        <returns><span data-ttu-id="a370e-111">安全令牌身份验证器。</span><span class="sxs-lookup"><span data-stu-id="a370e-111">A security token authenticator.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenAuthenticator">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecurityTokenAuthenticator (System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement, out System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecurityTokenAuthenticator(class System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement, [out] class System.IdentityModel.Selectors.SecurityTokenResolver&amp; outOfBandTokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateSecurityTokenAuthenticator (tokenRequirement As SecurityTokenRequirement, ByRef outOfBandTokenResolver As SecurityTokenResolver) As SecurityTokenAuthenticator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Selectors::SecurityTokenAuthenticator ^ CreateSecurityTokenAuthenticator(System::IdentityModel::Selectors::SecurityTokenRequirement ^ tokenRequirement, [Runtime::InteropServices::Out] System::IdentityModel::Selectors::SecurityTokenResolver ^ % outOfBandTokenResolver);" />
      <MemberSignature Language="F#" Value="override this.CreateSecurityTokenAuthenticator : System.IdentityModel.Selectors.SecurityTokenRequirement * SecurityTokenResolver -&gt; System.IdentityModel.Selectors.SecurityTokenAuthenticator" Usage="serviceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator (tokenRequirement, outOfBandTokenResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenAuthenticator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenRequirement" Type="System.IdentityModel.Selectors.SecurityTokenRequirement" />
        <Parameter Name="outOfBandTokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" RefType="out" />
      </Parameters>
      <Docs>
        <param name="tokenRequirement"><span data-ttu-id="a370e-112">安全令牌需求。</span><span class="sxs-lookup"><span data-stu-id="a370e-112">The security token requirement.</span></span></param>
        <param name="outOfBandTokenResolver"><span data-ttu-id="a370e-113">此方法返回时，包含 <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />。</span><span class="sxs-lookup"><span data-stu-id="a370e-113">When this method returns, contains a <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />.</span></span> <span data-ttu-id="a370e-114">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="a370e-114">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="a370e-115">基于 <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" /> 创建安全令牌身份验证器。</span><span class="sxs-lookup"><span data-stu-id="a370e-115">Creates a security token authenticator based on the <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</span></span></summary>
        <returns><span data-ttu-id="a370e-116">安全令牌身份验证器。</span><span class="sxs-lookup"><span data-stu-id="a370e-116">The security token authenticator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a370e-117">`outOfBand`令牌解析程序可以选择由方法返回，该方法由 WCF 安全处理器用于解析在处理安全时不在 SOAP 消息中的令牌。</span><span class="sxs-lookup"><span data-stu-id="a370e-117">An `outOfBand` token resolver can optionally be returned by the method, which is used by the WCF security processor to resolve tokens that are not in the SOAP message when processing security.</span></span> <span data-ttu-id="a370e-118">由该方法返回的 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> 将验证令牌并提取声明。</span><span class="sxs-lookup"><span data-stu-id="a370e-118">The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> that is returned by this method validates tokens and extracts claims.</span></span> <span data-ttu-id="a370e-119">为从 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> 派生的每个类创建一个 <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>。</span><span class="sxs-lookup"><span data-stu-id="a370e-119">One <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> is created for each class derived from <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a370e-120">下面的代码演示如何重写此方法的示例。</span><span class="sxs-lookup"><span data-stu-id="a370e-120">The following code is an example of how to override this method.</span></span>  
  
 [!code-csharp[c_CustomTokenAuthenticator#2](~/samples/snippets/csharp/VS_Snippets_CFX/c_customtokenauthenticator/cs/source.cs#2)]
 [!code-vb[c_CustomTokenAuthenticator#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_customtokenauthenticator/vb/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a370e-121"><paramref name="tokenRequirement" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a370e-121"><paramref name="tokenRequirement" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a370e-122">无法为传入的<paramref name="tokenRequirement" /> 创建安全令牌身份验证器。</span><span class="sxs-lookup"><span data-stu-id="a370e-122">A security token authenticator cannot be created for the <paramref name="tokenRequirement" /> that was passed in.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenProvider">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Selectors.SecurityTokenProvider CreateSecurityTokenProvider (System.IdentityModel.Selectors.SecurityTokenRequirement requirement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Selectors.SecurityTokenProvider CreateSecurityTokenProvider(class System.IdentityModel.Selectors.SecurityTokenRequirement requirement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateSecurityTokenProvider (requirement As SecurityTokenRequirement) As SecurityTokenProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Selectors::SecurityTokenProvider ^ CreateSecurityTokenProvider(System::IdentityModel::Selectors::SecurityTokenRequirement ^ requirement);" />
      <MemberSignature Language="F#" Value="override this.CreateSecurityTokenProvider : System.IdentityModel.Selectors.SecurityTokenRequirement -&gt; System.IdentityModel.Selectors.SecurityTokenProvider" Usage="serviceCredentialsSecurityTokenManager.CreateSecurityTokenProvider requirement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requirement" Type="System.IdentityModel.Selectors.SecurityTokenRequirement" />
      </Parameters>
      <Docs>
        <param name="requirement"><span data-ttu-id="a370e-123">安全令牌需求。</span><span class="sxs-lookup"><span data-stu-id="a370e-123">The security token requirement.</span></span></param>
        <summary><span data-ttu-id="a370e-124">基于 <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" /> 创建安全令牌提供程序。</span><span class="sxs-lookup"><span data-stu-id="a370e-124">Creates a security token provider based on the <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</span></span></summary>
        <returns><span data-ttu-id="a370e-125">安全令牌提供程序。</span><span class="sxs-lookup"><span data-stu-id="a370e-125">The security token provider.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a370e-126"><xref:System.IdentityModel.Selectors.SecurityTokenProvider> 类负责获取给定的 <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement> 的令牌。</span><span class="sxs-lookup"><span data-stu-id="a370e-126">The <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class is responsible for obtaining tokens for a given <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>.</span></span> <span data-ttu-id="a370e-127">令牌提供程序还可以支持续订和取消令牌。</span><span class="sxs-lookup"><span data-stu-id="a370e-127">Optionally, token providers can support renewing and canceling tokens as well.</span></span> <span data-ttu-id="a370e-128">如果进行了相应的配置，令牌提供程序可以缓存令牌。</span><span class="sxs-lookup"><span data-stu-id="a370e-128">The token provider can cache tokens if it is configured to do so.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a370e-129">下面的代码演示如何重写此方法。</span><span class="sxs-lookup"><span data-stu-id="a370e-129">The following code shows how to override this method.</span></span>  
  
 [!code-csharp[ClientCredentialsSecurityTokenManager#4](~/samples/snippets/csharp/VS_Snippets_CFX/clientcredentialssecuritytokenmanager/cs/source.cs#4)]
 [!code-vb[ClientCredentialsSecurityTokenManager#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/clientcredentialssecuritytokenmanager/vb/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a370e-130"><paramref name="requirement" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a370e-130"><paramref name="requirement" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a370e-131">无法为传入的 <paramref name="requirement" /> 创建安全令牌提供程序。</span><span class="sxs-lookup"><span data-stu-id="a370e-131">A security token provider cannot be created for the <paramref name="requirement" /> that was passed in.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenSerializer">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Selectors.SecurityTokenSerializer CreateSecurityTokenSerializer (System.IdentityModel.Selectors.SecurityTokenVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Selectors.SecurityTokenSerializer CreateSecurityTokenSerializer(class System.IdentityModel.Selectors.SecurityTokenVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateSecurityTokenSerializer (version As SecurityTokenVersion) As SecurityTokenSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Selectors::SecurityTokenSerializer ^ CreateSecurityTokenSerializer(System::IdentityModel::Selectors::SecurityTokenVersion ^ version);" />
      <MemberSignature Language="F#" Value="override this.CreateSecurityTokenSerializer : System.IdentityModel.Selectors.SecurityTokenVersion -&gt; System.IdentityModel.Selectors.SecurityTokenSerializer" Usage="serviceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer version" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.IdentityModel.Selectors.SecurityTokenVersion" />
      </Parameters>
      <Docs>
        <param name="version"><span data-ttu-id="a370e-132">安全令牌的版本。</span><span class="sxs-lookup"><span data-stu-id="a370e-132">The version of the security token.</span></span></param>
        <summary><span data-ttu-id="a370e-133">基于传入的安全令牌版本创建安全令牌序列化程序。</span><span class="sxs-lookup"><span data-stu-id="a370e-133">Creates a security token serializer based on the security token version passed in.</span></span></summary>
        <returns><span data-ttu-id="a370e-134">安全令牌序列化程序。</span><span class="sxs-lookup"><span data-stu-id="a370e-134">The security token serializer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a370e-135"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 用于写入和读取安全令牌和安全令牌引用。</span><span class="sxs-lookup"><span data-stu-id="a370e-135">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> is used for writing and reading security tokens and security token references.</span></span> <span data-ttu-id="a370e-136">从 XML 反序列化令牌时，返回的令牌必须能够执行加密操作。</span><span class="sxs-lookup"><span data-stu-id="a370e-136">When deserializing the token from XML, the returned token must be able to perform cryptographic operations.</span></span> <span data-ttu-id="a370e-137">令牌序列化程序必须能够执行足够的验证，以确保令牌可以执行加密操作（Kerberos 票证处理、X.509 解码、SAML 解码等），但应遵循身份验证器的应用程序信任决定。</span><span class="sxs-lookup"><span data-stu-id="a370e-137">The token serializer must be able to do enough validation to ensure that the token can do cryptographic operations (Kerberos ticket processing, X.509 decoding, SAML decoding, and so on) but should defer application trust decisions to the authenticator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a370e-138">无法为传入的 <paramref name="version" /> 创建安全令牌序列化程序。</span><span class="sxs-lookup"><span data-stu-id="a370e-138">A security token serializer cannot be created for the  <paramref name="version" /> that was passed in.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetIdentityOfSelf">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.EndpointIdentity GetIdentityOfSelf (System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.EndpointIdentity GetIdentityOfSelf(class System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf(System.IdentityModel.Selectors.SecurityTokenRequirement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIdentityOfSelf (tokenRequirement As SecurityTokenRequirement) As EndpointIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::EndpointIdentity ^ GetIdentityOfSelf(System::IdentityModel::Selectors::SecurityTokenRequirement ^ tokenRequirement);" />
      <MemberSignature Language="F#" Value="abstract member GetIdentityOfSelf : System.IdentityModel.Selectors.SecurityTokenRequirement -&gt; System.ServiceModel.EndpointIdentity&#xA;override this.GetIdentityOfSelf : System.IdentityModel.Selectors.SecurityTokenRequirement -&gt; System.ServiceModel.EndpointIdentity" Usage="serviceCredentialsSecurityTokenManager.GetIdentityOfSelf tokenRequirement" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IEndpointIdentityProvider.GetIdentityOfSelf(System.IdentityModel.Selectors.SecurityTokenRequirement)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenRequirement" Type="System.IdentityModel.Selectors.SecurityTokenRequirement" />
      </Parameters>
      <Docs>
        <param name="tokenRequirement"><span data-ttu-id="a370e-139">安全令牌需求。</span><span class="sxs-lookup"><span data-stu-id="a370e-139">The security token requirement.</span></span></param>
        <summary><span data-ttu-id="a370e-140">基于安全令牌需求获取 <see cref="T:System.ServiceModel.EndpointIdentity" />。</span><span class="sxs-lookup"><span data-stu-id="a370e-140">Gets the <see cref="T:System.ServiceModel.EndpointIdentity" /> based on the security token requirement.</span></span></summary>
        <returns><span data-ttu-id="a370e-141">对应于 <paramref name="tokenRequirement" /> 的终结点标识。</span><span class="sxs-lookup"><span data-stu-id="a370e-141">The endpoint identity that corresponds to the <paramref name="tokenRequirement" />.</span></span> <span data-ttu-id="a370e-142">如果无法从 <see langword="null" /> 创建标识，则返回 <paramref name="tokenRequirement" />。</span><span class="sxs-lookup"><span data-stu-id="a370e-142"><see langword="null" /> is returned if an identity cannot be created from the <paramref name="tokenRequirement" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a370e-143">此方法由 WCF 基础结构调用，以获取 <xref:System.ServiceModel.EndpointIdentity> 对应于服务终结点的。</span><span class="sxs-lookup"><span data-stu-id="a370e-143">This method is called by the WCF infrastructure to obtain the <xref:System.ServiceModel.EndpointIdentity> that corresponds to a service endpoint.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a370e-144"><paramref name="tokenRequirement" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a370e-144"><paramref name="tokenRequirement" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsIssuedSecurityTokenRequirement">
      <MemberSignature Language="C#" Value="protected bool IsIssuedSecurityTokenRequirement (System.IdentityModel.Selectors.SecurityTokenRequirement requirement);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsIssuedSecurityTokenRequirement(class System.IdentityModel.Selectors.SecurityTokenRequirement requirement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsIssuedSecurityTokenRequirement (requirement As SecurityTokenRequirement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsIssuedSecurityTokenRequirement(System::IdentityModel::Selectors::SecurityTokenRequirement ^ requirement);" />
      <MemberSignature Language="F#" Value="member this.IsIssuedSecurityTokenRequirement : System.IdentityModel.Selectors.SecurityTokenRequirement -&gt; bool" Usage="serviceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement requirement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requirement" Type="System.IdentityModel.Selectors.SecurityTokenRequirement" />
      </Parameters>
      <Docs>
        <param name="requirement"><span data-ttu-id="a370e-145">安全令牌需求。</span><span class="sxs-lookup"><span data-stu-id="a370e-145">The security token requirement.</span></span></param>
        <summary><span data-ttu-id="a370e-146">确定安全令牌需求是否适用于已颁发的令牌。</span><span class="sxs-lookup"><span data-stu-id="a370e-146">Determines whether the security token requirement is for an issued token.</span></span></summary>
        <returns><span data-ttu-id="a370e-147">如果安全令牌要求适用于已颁发的令牌，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a370e-147"><see langword="true" /> if the security token requirement is for an issued token; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceCredentials">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceCredentials ServiceCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Description.ServiceCredentials ServiceCredentials" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceCredentials As ServiceCredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Description::ServiceCredentials ^ ServiceCredentials { System::ServiceModel::Description::ServiceCredentials ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceCredentials : System.ServiceModel.Description.ServiceCredentials" Usage="System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a370e-148">获取用于构造此类实例的服务凭据。</span><span class="sxs-lookup"><span data-stu-id="a370e-148">Gets the service credentials used to construct this instance of this class.</span></span></summary>
        <value><span data-ttu-id="a370e-149">服务凭据。</span><span class="sxs-lookup"><span data-stu-id="a370e-149">The service credentials.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a370e-150"><xref:System.ServiceModel.Description.ServiceCredentials> 对象使您能够配置服务凭据和服务凭据身份验证设置。</span><span class="sxs-lookup"><span data-stu-id="a370e-150">The <xref:System.ServiceModel.Description.ServiceCredentials> object enables you to configure service credentials as well as service credential authentication settings.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
