<Type Name="UserNamePasswordServiceCredential" FullName="System.ServiceModel.Security.UserNamePasswordServiceCredential">
  <Metadata><Meta Name="ms.openlocfilehash" Value="68fcbb9a2447853b2838cd7b4f201062516b62eb" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86739204" /></Metadata><TypeSignature Language="C#" Value="public sealed class UserNamePasswordServiceCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit UserNamePasswordServiceCredential extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.UserNamePasswordServiceCredential" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UserNamePasswordServiceCredential" />
  <TypeSignature Language="C++ CLI" Value="public ref class UserNamePasswordServiceCredential sealed" />
  <TypeSignature Language="F#" Value="type UserNamePasswordServiceCredential = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d6c4f-101">表示此类用于配置服务如何对使用用户名/密码身份验证的用户进行身份验证，并可用于配置登录令牌的缓存。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-101">Represents a class that is used to configure how the service authenticates users that use user name/password authentication and to configure the caching of logon tokens.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6c4f-102">如果没有配置服务所用的绑定，以进行基于用户名/密码的身份验证，则忽略此类的相关属性。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-102">If none of the bindings used by a service is configured for user name/password-based authentication, the relevant properties for this class are ignored.</span></span> <span data-ttu-id="d6c4f-103">这些属性包括 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CustomUserNamePasswordValidator%2A>、<xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.IncludeWindowsGroups%2A>、<xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> 和 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-103">These properties include the <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CustomUserNamePasswordValidator%2A>, <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.IncludeWindowsGroups%2A>, <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A>, and <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> properties.</span></span>  
  
 <span data-ttu-id="d6c4f-104">如果没有配置服务所用的绑定，以使用 Windows 用户名/密码身份验证，则忽略与登录令牌的缓存相关的设置。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-104">If none of the bindings used by a service is configured to use Windows authentication for user name/password, the settings related to caching of logon tokens are ignored.</span></span> <span data-ttu-id="d6c4f-105">这些设置包括 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CachedLogonTokenLifetime%2A>、<xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens%2A> 和 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MaxCachedLogonTokens%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-105">These settings include the <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CachedLogonTokenLifetime%2A>, <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens%2A>, and <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MaxCachedLogonTokens%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6c4f-106">下面的示例输出服务的 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential> 属性值。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-106">The following example prints the values of the <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential> properties for a service.</span></span>  
  
 [!code-csharp[UserNamePasswordServiceCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/usernamepasswordservicecredential/cs/source.cs#1)]
 [!code-vb[UserNamePasswordServiceCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/usernamepasswordservicecredential/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CachedLogonTokenLifetime">
      <MemberSignature Language="C#" Value="public TimeSpan CachedLogonTokenLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan CachedLogonTokenLifetime" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.CachedLogonTokenLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Property CachedLogonTokenLifetime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan CachedLogonTokenLifetime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.CachedLogonTokenLifetime : TimeSpan with get, set" Usage="System.ServiceModel.Security.UserNamePasswordServiceCredential.CachedLogonTokenLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6c4f-107">获取或设置缓存令牌的最大时间长度。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-107">Gets or sets the maximum length of time that a token is cached.</span></span></summary>
        <value><span data-ttu-id="d6c4f-108">一个 <see cref="T:System.TimeSpan" /> ，表示缓存令牌的最大时间长度。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-108">A <see cref="T:System.TimeSpan" /> that represents the maximum length of time that a token is cached.</span></span> <span data-ttu-id="d6c4f-109">默认值为 15 分钟。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-109">The default is 15 minutes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6c4f-110">有关详细信息，请参阅 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens%2A>。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-110">For more information, see <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6c4f-111">下面的示例获取该属性的值。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-111">The following example gets the value of this property.</span></span>  
  
 [!code-csharp[UserNamePasswordServiceCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/usernamepasswordservicecredential/cs/source.cs#1)]
 [!code-vb[UserNamePasswordServiceCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/usernamepasswordservicecredential/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheLogonTokens">
      <MemberSignature Language="C#" Value="public bool CacheLogonTokens { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CacheLogonTokens" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheLogonTokens As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CacheLogonTokens { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CacheLogonTokens : bool with get, set" Usage="System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6c4f-112">获取或设置一个值，该值指示是否缓存登录令牌。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-112">Gets or sets a value that indicates whether logon tokens are cached.</span></span></summary>
        <value><span data-ttu-id="d6c4f-113">如果缓存登录令牌，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-113"><see langword="true" /> if logon tokens are cached; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d6c4f-114">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-114">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6c4f-115">默认情况下，如果用户名被映射到 Windows 帐户，则 WCF 安全会要求 Windows 安全子系统为每个传入用户名/密码安全令牌创建一个登录令牌。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-115">By default, WCF security asks the Windows security subsystem to create a logon token for every incoming user name/password security token if the user name is being mapped to a Windows account.</span></span> <span data-ttu-id="d6c4f-116">通过设置 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> 属性，可以更改此行为。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-116">This behavior can be changed by setting the <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> property.</span></span>  
  
 <span data-ttu-id="d6c4f-117">对于 <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.Windows> 模式，服务使用 Win32 的 `LogonUser` 函数进行用户名/密码身份验证。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-117">For <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.Windows> mode, the service uses Win32's `LogonUser` function for user name/password authentication.</span></span> <span data-ttu-id="d6c4f-118">如果 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens%2A> 设置为 `true`，则将缓存生成的 Windows 令牌，并且对相同的用户名/密码对重用该令牌。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-118">If the <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens%2A> is set to `true`, the resulting Windows token is cached and reused for the same user name/password pair.</span></span> <span data-ttu-id="d6c4f-119">缓存对 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CachedLogonTokenLifetime%2A> 有效。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-119">The cache is valid for <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CachedLogonTokenLifetime%2A>.</span></span> <span data-ttu-id="d6c4f-120">缓存的最大数目限制为 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MaxCachedLogonTokens%2A>。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-120">The maximum number of caches is limited to <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MaxCachedLogonTokens%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6c4f-121">下面的示例获取该属性的值。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-121">The following example gets the value of this property.</span></span>  
  
 [!code-csharp[UserNamePasswordServiceCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/usernamepasswordservicecredential/cs/source.cs#1)]
 [!code-vb[UserNamePasswordServiceCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/usernamepasswordservicecredential/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomUserNamePasswordValidator">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Selectors.UserNamePasswordValidator CustomUserNamePasswordValidator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Selectors.UserNamePasswordValidator CustomUserNamePasswordValidator" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.CustomUserNamePasswordValidator" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomUserNamePasswordValidator As UserNamePasswordValidator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Selectors::UserNamePasswordValidator ^ CustomUserNamePasswordValidator { System::IdentityModel::Selectors::UserNamePasswordValidator ^ get(); void set(System::IdentityModel::Selectors::UserNamePasswordValidator ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomUserNamePasswordValidator : System.IdentityModel.Selectors.UserNamePasswordValidator with get, set" Usage="System.ServiceModel.Security.UserNamePasswordServiceCredential.CustomUserNamePasswordValidator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.UserNamePasswordValidator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6c4f-122">获取或设置自定义用户名和密码验证程序。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-122">Gets or sets a custom user name and password validator.</span></span></summary>
        <value><span data-ttu-id="d6c4f-123">自定义用户名和密码验证程序。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-123">A custom user name and password validator.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6c4f-124"><xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> 属性必须设置为 <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.MembershipProvider>，<xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> 才能生效。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-124">The <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> property must be set to <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.MembershipProvider> for the <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> to take effect.</span></span> <span data-ttu-id="d6c4f-125">如果 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> 设置了属性且 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> 属性不为，则 WCF 将使用 Windows 身份验证，并忽略属性的值 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> 。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-125">When the <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> property is set and the <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> property is not, WCF uses Windows authentication and ignores the value of the <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> property.</span></span>  
  
 <span data-ttu-id="d6c4f-126">对于 <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.Custom> 模式，服务通过调用 <xref:System.IdentityModel.Selectors.UserNamePasswordValidator> 方法，使用 <xref:System.IdentityModel.Selectors.UserNamePasswordValidator.Validate%2A> 进行用户名/密码身份验证。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-126">For <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.Custom> mode, the service uses <xref:System.IdentityModel.Selectors.UserNamePasswordValidator> for user name/password authentication by calling the <xref:System.IdentityModel.Selectors.UserNamePasswordValidator.Validate%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeWindowsGroups">
      <MemberSignature Language="C#" Value="public bool IncludeWindowsGroups { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeWindowsGroups" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.IncludeWindowsGroups" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeWindowsGroups As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeWindowsGroups { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeWindowsGroups : bool with get, set" Usage="System.ServiceModel.Security.UserNamePasswordServiceCredential.IncludeWindowsGroups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6c4f-127">获取或设置一个值，该值指示 Windows 组是否包含在安全上下文中。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-127">Gets or sets a value that indicates whether Windows groups are included in the security context.</span></span></summary>
        <value><span data-ttu-id="d6c4f-128">如果 Windows 组包含在安全上下文中，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-128"><see langword="true" /> if Windows groups are included in the security context; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d6c4f-129">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-129">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6c4f-130">在大多数情况中，当验证 Windows 用户名和密码时，用户所属的 Windows 组会为授权决定提供有用信息。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-130">In most scenarios when validating Windows user names and passwords, Windows groups in which users belong provide useful information for authorization decisions.</span></span> <span data-ttu-id="d6c4f-131">但是，如果不需要 Windows 组，则将此属性设置为 `false` 可以通过避免全组声明填充提高性能。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-131">However, if the Windows groups are not required, setting this property to `false` can improve performance by avoiding a full-group claim population.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6c4f-132">下面的示例获取该属性的值。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-132">The following example gets the value of this property.</span></span>  
  
 [!code-csharp[UserNamePasswordServiceCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/usernamepasswordservicecredential/cs/source.cs#1)]
 [!code-vb[UserNamePasswordServiceCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/usernamepasswordservicecredential/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCachedLogonTokens">
      <MemberSignature Language="C#" Value="public int MaxCachedLogonTokens { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxCachedLogonTokens" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.MaxCachedLogonTokens" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxCachedLogonTokens As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxCachedLogonTokens { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxCachedLogonTokens : int with get, set" Usage="System.ServiceModel.Security.UserNamePasswordServiceCredential.MaxCachedLogonTokens" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6c4f-133">获取或设置要缓存的登录令牌的最大数目。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-133">Gets or sets the maximum number of logon tokens to cache.</span></span></summary>
        <value><span data-ttu-id="d6c4f-134">要缓存的登录令牌的最大数目。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-134">The maximum number of logon tokens to cache.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6c4f-135">默认值为128。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-135">The default value is 128.</span></span> <span data-ttu-id="d6c4f-136">有关详细信息，请参阅 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens%2A>。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-136">For more information, see <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6c4f-137">下面的示例获取该属性的值。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-137">The following example gets the value of this property.</span></span>  
  
 [!code-csharp[UserNamePasswordServiceCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/usernamepasswordservicecredential/cs/source.cs#1)]
 [!code-vb[UserNamePasswordServiceCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/usernamepasswordservicecredential/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MembershipProvider">
      <MemberSignature Language="C#" Value="public System.Web.Security.MembershipProvider MembershipProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Security.MembershipProvider MembershipProvider" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property MembershipProvider As MembershipProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Security::MembershipProvider ^ MembershipProvider { System::Web::Security::MembershipProvider ^ get(); void set(System::Web::Security::MembershipProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MembershipProvider : System.Web.Security.MembershipProvider with get, set" Usage="System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6c4f-138">获取或设置成员资格提供程序。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-138">Gets or sets the membership provider.</span></span></summary>
        <value><span data-ttu-id="d6c4f-139">此服务的 <see cref="T:System.Web.Security.MembershipProvider" />。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-139">The <see cref="T:System.Web.Security.MembershipProvider" /> for this service.</span></span> <span data-ttu-id="d6c4f-140">默认为 <see cref="T:System.Web.Security.SqlMembershipProvider" />。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-140">The default is the <see cref="T:System.Web.Security.SqlMembershipProvider" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6c4f-141">对于 <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.MembershipProvider> 模式，服务通过调用 <xref:System.Web.Security.MembershipProvider> 方法，使用 <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> 进行用户名/密码身份验证。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-141">For <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.MembershipProvider> mode, the service uses <xref:System.Web.Security.MembershipProvider> for user name/password authentication by calling the <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6c4f-142"><xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> 属性必须设置为 <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.MembershipProvider>，<xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> 才能生效。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-142">The <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> property must be set to <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.MembershipProvider> for the <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> to take effect.</span></span> <span data-ttu-id="d6c4f-143">如果 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> 设置了属性且 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> 属性不为，则 WCF 将使用 Windows 身份验证，并忽略属性的值 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> 。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-143">When the <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> property is set and the <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> property is not, WCF uses Windows authentication and ignores the value of the <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> property.</span></span>  
  
 <span data-ttu-id="d6c4f-144">如果将 <xref:System.ServiceModel.Security.UserNamePasswordValidationMode> 属性设置为 `MembershipProvider`，但没有为 `MembershipProvider` 属性设置值，则默认为 <xref:System.Web.Security.SqlMembershipProvider> 类。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-144">If the <xref:System.ServiceModel.Security.UserNamePasswordValidationMode> property is set to `MembershipProvider` and the `MembershipProvider` property is not set to a value, the default is the <xref:System.Web.Security.SqlMembershipProvider> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d6c4f-145">试图在凭据为只读时设置此属性。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-145">An attempt is made to set this property when the credential is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UserNamePasswordValidationMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.UserNamePasswordValidationMode UserNamePasswordValidationMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Security.UserNamePasswordValidationMode UserNamePasswordValidationMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode" />
      <MemberSignature Language="VB.NET" Value="Public Property UserNamePasswordValidationMode As UserNamePasswordValidationMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::UserNamePasswordValidationMode UserNamePasswordValidationMode { System::ServiceModel::Security::UserNamePasswordValidationMode get(); void set(System::ServiceModel::Security::UserNamePasswordValidationMode value); };" />
      <MemberSignature Language="F#" Value="member this.UserNamePasswordValidationMode : System.ServiceModel.Security.UserNamePasswordValidationMode with get, set" Usage="System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.UserNamePasswordValidationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6c4f-146">获取或设置验证用户名和密码的方法。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-146">Gets or sets the method of validating the user name and password.</span></span></summary>
        <value><span data-ttu-id="d6c4f-147"><see cref="T:System.ServiceModel.Security.UserNamePasswordValidationMode" /> 中的枚举的一个值。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-147">A value from the enumeration in <see cref="T:System.ServiceModel.Security.UserNamePasswordValidationMode" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6c4f-148">可能的值包括：</span><span class="sxs-lookup"><span data-stu-id="d6c4f-148">Possible values are:</span></span>  
  
-   <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.Custom>  
  
-   <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.MembershipProvider>  
  
-   <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.Windows>  
  
 <span data-ttu-id="d6c4f-149">如果将此属性设置为 <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.Custom>，则服务使用由 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CustomUserNamePasswordValidator%2A> 返回的对象来验证传入消息中的用户名和密码。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-149">If this property is set to <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.Custom>, the service uses the object returned by <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CustomUserNamePasswordValidator%2A> to validate user names and passwords in incoming messages.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6c4f-150">当 WCF 服务承载于 Internet Information Services (使用传输级安全性的 IIS) <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> ，并且属性设置为时 <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.Custom> ，自定义身份验证方案将使用 Windows 身份验证的一个子集。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-150">When a WCF service is hosted in Internet Information Services (IIS) using transport-level security and the <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> property is set to <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.Custom>, the custom authentication scheme uses a subset of Windows authentication.</span></span> <span data-ttu-id="d6c4f-151">这是因为在这种情况下，IIS 将在 WCF 调用自定义验证器之前执行 Windows 身份验证。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-151">That is because in this scenario, IIS performs Windows authentication prior to WCF invoking the custom authenticator.</span></span>  
  
 <span data-ttu-id="d6c4f-152">此属性值设置为 <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.MembershipProvider> 时，通过设置 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> 属性来指定成员资格提供程序，然后由 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> 属性指定的成员资格提供程序实例将用于验证传入消息中的用户名和密码。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-152">When the value of this property is set to <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.MembershipProvider>, specify the membership provider by setting the <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> property, and then the membership provider instance specified by the <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> property is used to validate the username and password in incoming messages.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6c4f-153">下面的示例获取该属性的值。</span><span class="sxs-lookup"><span data-stu-id="d6c4f-153">The following example gets the value of this property.</span></span>  
  
 [!code-csharp[UserNamePasswordServiceCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/usernamepasswordservicecredential/cs/source.cs#1)]
 [!code-vb[UserNamePasswordServiceCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/usernamepasswordservicecredential/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
