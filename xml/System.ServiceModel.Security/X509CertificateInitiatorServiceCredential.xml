<Type Name="X509CertificateInitiatorServiceCredential" FullName="System.ServiceModel.Security.X509CertificateInitiatorServiceCredential">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a9e37f5fbd71a8b04830efe545ccd378faa0e8a1" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86739139" /></Metadata><TypeSignature Language="C#" Value="public sealed class X509CertificateInitiatorServiceCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit X509CertificateInitiatorServiceCredential extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class X509CertificateInitiatorServiceCredential" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509CertificateInitiatorServiceCredential sealed" />
  <TypeSignature Language="F#" Value="type X509CertificateInitiatorServiceCredential = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示服务所使用的设置，用于验证客户端所出示的证书。 它还包含在使用 <see langword="MutualCertificateDuplex" /> 消息安全身份验证模式时，用于为客户端加密响应或回调的服务证书。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在此类中设置的证书用于加密到客户端的消息，这些消息仅针对使用 `MutualCertificateDuplex` 消息安全身份验证模式配置的绑定。  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.ServiceModel.Description.ServiceCredentials.ClientCertificate" />
  </Docs>
  <Members>
    <Member MemberName="Authentication">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.X509ClientCertificateAuthentication Authentication { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.X509ClientCertificateAuthentication Authentication" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Authentication As X509ClientCertificateAuthentication" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::X509ClientCertificateAuthentication ^ Authentication { System::ServiceModel::Security::X509ClientCertificateAuthentication ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Authentication : System.ServiceModel.Security.X509ClientCertificateAuthentication" Usage="System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.X509ClientCertificateAuthentication</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于验证在身份验证期间客户端所出示的证书的设置。</summary>
        <value>在身份验证期间用于验证客户端所出示的证书的设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码演示如何使用此属性设置证书身份验证属性。  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Certificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate" />
      <MemberSignature Language="VB.NET" Value="Public Property Certificate As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate2 ^ Certificate { System::Security::Cryptography::X509Certificates::X509Certificate2 ^ get(); void set(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Certificate : System.Security.Cryptography.X509Certificates.X509Certificate2 with get, set" Usage="System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要在 <see langword="MutualCertificateDuplex" /> 消息安全身份验证模式中使用的证书。</summary>
        <value>如果使用 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 消息安全身份验证模式，则用于加密消息的 <see langword="MutualCertificateDuplex" /> 将由不相关的双向传输事例中的服务发送给客户端。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当使用 `MutualCertificateDuplex` 消息安全身份验证模式时，此属性用于配置为消息安全模式的绑定。  
  
   
  
## Examples  
 下面的代码演示如何使用此属性获取证书。  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">试图设置只读凭据。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCertificate">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>设置证书，该证书用于加密由服务发送给客户端的消息。 此设置只能由使用 <see langword="MutualCertificateDuplex" /> 消息安全身份验证模式配置的绑定使用。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCertificate">
      <MemberSignature Language="C#" Value="public void SetCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCertificate(string subjectName, valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCertificate (subjectName As String, storeLocation As StoreLocation, storeName As StoreName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCertificate(System::String ^ subjectName, System::Security::Cryptography::X509Certificates::StoreLocation storeLocation, System::Security::Cryptography::X509Certificates::StoreName storeName);" />
      <MemberSignature Language="F#" Value="member this.SetCertificate : string * System.Security.Cryptography.X509Certificates.StoreLocation * System.Security.Cryptography.X509Certificates.StoreName -&gt; unit" Usage="x509CertificateInitiatorServiceCredential.SetCertificate (subjectName, storeLocation, storeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subjectName" Type="System.String" />
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
      </Parameters>
      <Docs>
        <param name="subjectName">该主题可分辨名称。</param>
        <param name="storeLocation">服务用于获取证书的证书存储区位置。</param>
        <param name="storeName">要打开的 X.509 证书存储区的名称。</param>
        <summary>使您可以通过指定主题可分辨名称指定用于加密客户端消息的证书。 此设置只能由使用 <see langword="MutualCertificateDuplex" /> 消息安全身份验证模式配置的绑定使用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关 `subjectName` 参数的更多信息，请参见<xref:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName%2A>。  
  
 `storeLocation` 的值包含在 <xref:System.Security.Cryptography.X509Certificates.StoreLocation> 枚举中：  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>：分配给本地计算机的证书存储区（默认）。  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>：当前用户所使用的证书存储区。  
  
 如果客户端应用程序在系统帐户下运行，则证书通常位于 <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>。 如果客户端应用程序在用户帐户下运行，则证书通常位于 <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>。  
  
 `storeName` 的值包含在 <xref:System.Security.Cryptography.X509Certificates.StoreName> 枚举中。  
  
   
  
## Examples  
 下面的代码演示如何使用此方法设置证书。  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCertificate">
      <MemberSignature Language="C#" Value="public void SetCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCertificate(valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName, valuetype System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCertificate (storeLocation As StoreLocation, storeName As StoreName, findType As X509FindType, findValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCertificate(System::Security::Cryptography::X509Certificates::StoreLocation storeLocation, System::Security::Cryptography::X509Certificates::StoreName storeName, System::Security::Cryptography::X509Certificates::X509FindType findType, System::Object ^ findValue);" />
      <MemberSignature Language="F#" Value="member this.SetCertificate : System.Security.Cryptography.X509Certificates.StoreLocation * System.Security.Cryptography.X509Certificates.StoreName * System.Security.Cryptography.X509Certificates.X509FindType * obj -&gt; unit" Usage="x509CertificateInitiatorServiceCredential.SetCertificate (storeLocation, storeName, findType, findValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
        <Parameter Name="findType" Type="System.Security.Cryptography.X509Certificates.X509FindType" />
        <Parameter Name="findValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="storeLocation">服务用于获取证书的证书存储区位置。</param>
        <param name="storeName">要打开的 X.509 证书存储区的名称。</param>
        <param name="findType">要执行的 X.509 搜索的类型。</param>
        <param name="findValue">要在 X.509 证书存储区中搜索的值。</param>
        <summary>指定要用于加密客户端消息的证书。 此设置只能由使用 <see langword="MutualCertificateDuplex" /> 消息安全身份验证模式配置的绑定使用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `storeLocation` 的值包含在 <xref:System.Security.Cryptography.X509Certificates.StoreLocation> 枚举中：  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>：分配给本地计算机的证书存储区（默认）。  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>：当前用户所使用的证书存储区。  
  
 如果应用程序在系统帐户下运行，则证书通常位于 <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>。 如果应用程序在用户帐户下运行，则证书通常位于 <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>。  
  
 `storeName` 的值包含在 <xref:System.Security.Cryptography.X509Certificates.StoreName> 枚举中。  
  
 `findType` 的值包含在 <xref:System.Security.Cryptography.X509Certificates.X509FindType> 枚举中。  
  
 最常用的枚举是 <xref:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName>，它在指定存储区中对证书的主题名称执行不区分大小写的搜索。 这可能是不精确的搜索。 如果未找到证书或找到了多个与条件相匹配的证书，则将引发 <xref:System.InvalidOperationException>。  
  
   
  
## Examples  
 下面的代码演示如何使用此方法设置证书。  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
