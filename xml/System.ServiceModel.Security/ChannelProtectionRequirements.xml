<Type Name="ChannelProtectionRequirements" FullName="System.ServiceModel.Security.ChannelProtectionRequirements">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2eee147125f29dd548fe938147cd8305f05e7b50" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86739503" /></Metadata><TypeSignature Language="C#" Value="public class ChannelProtectionRequirements" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChannelProtectionRequirements extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.ChannelProtectionRequirements" />
  <TypeSignature Language="VB.NET" Value="Public Class ChannelProtectionRequirements" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChannelProtectionRequirements" />
  <TypeSignature Language="F#" Value="type ChannelProtectionRequirements = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>描述应用于该通道中所传输消息的不同部分的加密和签名需求。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当扩展 <xref:System.ServiceModel.Channels.BindingElement> 类时，必须实现 <xref:System.ServiceModel.Channels.BindingElement.GetProperty%60%601%28System.ServiceModel.Channels.BindingContext%29>，以使它返回与绑定元素相对应的类实例。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.ServiceModel.Security.ChannelProtectionRequirements" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChannelProtectionRequirements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ChannelProtectionRequirements.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChannelProtectionRequirements();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.ServiceModel.Security.ChannelProtectionRequirements" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此无参数构造函数将以下属性设置为的新实例 <xref:System.ServiceModel.Security.ScopedMessagePartSpecification> ，该实例是一个指定消息中包含哪些部分的类：  
  
-   <xref:System.ServiceModel.Security.ChannelProtectionRequirements.IncomingEncryptionParts%2A>,  
  
-   <xref:System.ServiceModel.Security.ChannelProtectionRequirements.IncomingSignatureParts%2A>,  
  
-   <xref:System.ServiceModel.Security.ChannelProtectionRequirements.OutgoingEncryptionParts%2A> 和  
  
-   <xref:System.ServiceModel.Security.ChannelProtectionRequirements.OutgoingSignatureParts%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChannelProtectionRequirements (System.ServiceModel.Security.ChannelProtectionRequirements other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Security.ChannelProtectionRequirements other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ChannelProtectionRequirements.#ctor(System.ServiceModel.Security.ChannelProtectionRequirements)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (other As ChannelProtectionRequirements)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChannelProtectionRequirements(System::ServiceModel::Security::ChannelProtectionRequirements ^ other);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Security.ChannelProtectionRequirements : System.ServiceModel.Security.ChannelProtectionRequirements -&gt; System.ServiceModel.Security.ChannelProtectionRequirements" Usage="new System.ServiceModel.Security.ChannelProtectionRequirements other" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="other" Type="System.ServiceModel.Security.ChannelProtectionRequirements" />
      </Parameters>
      <Docs>
        <param name="other"><see cref="T:System.ServiceModel.Security.ChannelProtectionRequirements" /> 的另一个实例。</param>
        <summary>从 <see cref="T:System.ServiceModel.Security.ChannelProtectionRequirements" /> 类的一个实例初始化另一个新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 该构造函数使用 <xref:System.ServiceModel.Security.ScopedMessagePartSpecification> 构造函数，并以 <xref:System.ServiceModel.Security.ScopedMessagePartSpecification.%23ctor%2A> 作为输入参数，将下列属性设置为 `other` 的新实例。 <xref:System.ServiceModel.Security.ScopedMessagePartSpecification> 是一个指定消息中包含哪些部分的类：  
  
-   <xref:System.ServiceModel.Security.ChannelProtectionRequirements.IncomingEncryptionParts%2A>,  
  
-   <xref:System.ServiceModel.Security.ChannelProtectionRequirements.IncomingSignatureParts%2A>,  
  
-   <xref:System.ServiceModel.Security.ChannelProtectionRequirements.OutgoingEncryptionParts%2A> 和  
  
-   <xref:System.ServiceModel.Security.ChannelProtectionRequirements.OutgoingSignatureParts%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="other" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将指定的 <see cref="T:System.ServiceModel.Security.ChannelProtectionRequirements" /> 中的各个部分集合添加到此类的当前实例中。  如果这两个 <see cref="T:System.ServiceModel.Security.ChannelProtectionRequirements" /> 实例中的某个特定消息有保护要求，则将需求合并到一起，以确保结果保护要求是各个保护要求中最大的。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.ServiceModel.Security.ChannelProtectionRequirements protectionRequirements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.ServiceModel.Security.ChannelProtectionRequirements protectionRequirements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ChannelProtectionRequirements.Add(System.ServiceModel.Security.ChannelProtectionRequirements)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (protectionRequirements As ChannelProtectionRequirements)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::ServiceModel::Security::ChannelProtectionRequirements ^ protectionRequirements);" />
      <MemberSignature Language="F#" Value="member this.Add : System.ServiceModel.Security.ChannelProtectionRequirements -&gt; unit" Usage="channelProtectionRequirements.Add protectionRequirements" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protectionRequirements" Type="System.ServiceModel.Security.ChannelProtectionRequirements" />
      </Parameters>
      <Docs>
        <param name="protectionRequirements">指定的 <see cref="T:System.ServiceModel.Security.ChannelProtectionRequirements" />。</param>
        <summary>将指定的 <see cref="T:System.ServiceModel.Security.ChannelProtectionRequirements" /> 中的部分集合添加到此类的当前实例中。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.ServiceModel.Security.ChannelProtectionRequirements protectionRequirements, bool channelScopeOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.ServiceModel.Security.ChannelProtectionRequirements protectionRequirements, bool channelScopeOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ChannelProtectionRequirements.Add(System.ServiceModel.Security.ChannelProtectionRequirements,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (protectionRequirements As ChannelProtectionRequirements, channelScopeOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::ServiceModel::Security::ChannelProtectionRequirements ^ protectionRequirements, bool channelScopeOnly);" />
      <MemberSignature Language="F#" Value="member this.Add : System.ServiceModel.Security.ChannelProtectionRequirements * bool -&gt; unit" Usage="channelProtectionRequirements.Add (protectionRequirements, channelScopeOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protectionRequirements" Type="System.ServiceModel.Security.ChannelProtectionRequirements" />
        <Parameter Name="channelScopeOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="protectionRequirements">指定的 <see cref="T:System.ServiceModel.Security.ChannelProtectionRequirements" />。</param>
        <param name="channelScopeOnly">指定范围是否为仅通道。</param>
        <summary>将指定的 <see cref="T:System.ServiceModel.Security.ChannelProtectionRequirements" /> 中的各个部分集合添加到此类的当前实例中。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInverse">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.ChannelProtectionRequirements CreateInverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Security.ChannelProtectionRequirements CreateInverse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ChannelProtectionRequirements.CreateInverse" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInverse () As ChannelProtectionRequirements" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Security::ChannelProtectionRequirements ^ CreateInverse();" />
      <MemberSignature Language="F#" Value="member this.CreateInverse : unit -&gt; System.ServiceModel.Security.ChannelProtectionRequirements" Usage="channelProtectionRequirements.CreateInverse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.ChannelProtectionRequirements</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>反转传入和传出部分，创建该类的新实例。</summary>
        <returns>该类的一个新实例，反转了传入和传出部分。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 该类当前实例的传入部分成为新实例的传出部分。 该类当前实例的传出部分成为新实例的传入部分。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncomingEncryptionParts">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.ScopedMessagePartSpecification IncomingEncryptionParts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.ScopedMessagePartSpecification IncomingEncryptionParts" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.ChannelProtectionRequirements.IncomingEncryptionParts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncomingEncryptionParts As ScopedMessagePartSpecification" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::ScopedMessagePartSpecification ^ IncomingEncryptionParts { System::ServiceModel::Security::ScopedMessagePartSpecification ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IncomingEncryptionParts : System.ServiceModel.Security.ScopedMessagePartSpecification" Usage="System.ServiceModel.Security.ChannelProtectionRequirements.IncomingEncryptionParts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.ScopedMessagePartSpecification</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取消息部分的集合，这些消息部分经过加密，属于从客户端到服务器的消息。</summary>
        <value>一个 <see cref="T:System.ServiceModel.Security.ScopedMessagePartSpecification" /> 集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性是在构造函数中设置的。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncomingSignatureParts">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.ScopedMessagePartSpecification IncomingSignatureParts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.ScopedMessagePartSpecification IncomingSignatureParts" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.ChannelProtectionRequirements.IncomingSignatureParts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncomingSignatureParts As ScopedMessagePartSpecification" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::ScopedMessagePartSpecification ^ IncomingSignatureParts { System::ServiceModel::Security::ScopedMessagePartSpecification ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IncomingSignatureParts : System.ServiceModel.Security.ScopedMessagePartSpecification" Usage="System.ServiceModel.Security.ChannelProtectionRequirements.IncomingSignatureParts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.ScopedMessagePartSpecification</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取消息部分的集合，已为从客户端到服务器的消息对它们进行了签名。</summary>
        <value>一个 <see cref="T:System.ServiceModel.Security.ScopedMessagePartSpecification" /> 集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性是在构造函数中设置的。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.ChannelProtectionRequirements.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.ServiceModel.Security.ChannelProtectionRequirements.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示该类实例是否为只读。</summary>
        <value>如果该类实例为只读，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeReadOnly">
      <MemberSignature Language="C#" Value="public void MakeReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ChannelProtectionRequirements.MakeReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Sub MakeReadOnly ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MakeReadOnly();" />
      <MemberSignature Language="F#" Value="member this.MakeReadOnly : unit -&gt; unit" Usage="channelProtectionRequirements.MakeReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将该类及其部分集合设置为只读。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将 <xref:System.ServiceModel.Security.ChannelProtectionRequirements.IsReadOnly%2A> 设置为 true，部分集合上的相应属性同样如此。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutgoingEncryptionParts">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.ScopedMessagePartSpecification OutgoingEncryptionParts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.ScopedMessagePartSpecification OutgoingEncryptionParts" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.ChannelProtectionRequirements.OutgoingEncryptionParts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutgoingEncryptionParts As ScopedMessagePartSpecification" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::ScopedMessagePartSpecification ^ OutgoingEncryptionParts { System::ServiceModel::Security::ScopedMessagePartSpecification ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OutgoingEncryptionParts : System.ServiceModel.Security.ScopedMessagePartSpecification" Usage="System.ServiceModel.Security.ChannelProtectionRequirements.OutgoingEncryptionParts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.ScopedMessagePartSpecification</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取消息部分的集合，已为从服务器到客户端的消息对它们进行了加密。</summary>
        <value>一个 <see cref="T:System.ServiceModel.Security.ScopedMessagePartSpecification" /> 集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性是在构造函数中设置的。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutgoingSignatureParts">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.ScopedMessagePartSpecification OutgoingSignatureParts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.ScopedMessagePartSpecification OutgoingSignatureParts" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.ChannelProtectionRequirements.OutgoingSignatureParts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutgoingSignatureParts As ScopedMessagePartSpecification" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::ScopedMessagePartSpecification ^ OutgoingSignatureParts { System::ServiceModel::Security::ScopedMessagePartSpecification ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OutgoingSignatureParts : System.ServiceModel.Security.ScopedMessagePartSpecification" Usage="System.ServiceModel.Security.ChannelProtectionRequirements.OutgoingSignatureParts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.ScopedMessagePartSpecification</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取消息部分的集合，已为从服务器到客户端的消息对它们进行了签名。</summary>
        <value>一个 <see cref="T:System.ServiceModel.Security.ScopedMessagePartSpecification" /> 集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性是在构造函数中设置的。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
