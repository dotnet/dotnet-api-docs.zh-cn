<Type Name="X509CertificateRecipientClientCredential" FullName="System.ServiceModel.Security.X509CertificateRecipientClientCredential">
  <Metadata><Meta Name="ms.openlocfilehash" Value="64d4a84eb63ee689e0dcf6b733557e1e931d9d9d" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89909349" /></Metadata><TypeSignature Language="C#" Value="public sealed class X509CertificateRecipientClientCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit X509CertificateRecipientClientCredential extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.X509CertificateRecipientClientCredential" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class X509CertificateRecipientClientCredential" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509CertificateRecipientClientCredential sealed" />
  <TypeSignature Language="F#" Value="type X509CertificateRecipientClientCredential = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.6.0.0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.7.0.0" FrameworkAlternate="dotnet-plat-ext-3.1" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="5.0.0.0" FrameworkAlternate="dotnet-plat-ext-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示客户端在验证使用 SSL 身份验证的服务所出示的证书时使用的设置。 它还包含在客户端上显式配置为对发送给使用消息安全的服务的消息进行加密的服务的所有证书。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此类由 <xref:System.ServiceModel.Description.ClientCredentials.ServiceCertificate%2A> 类中的 <xref:System.ServiceModel.Description.ClientCredentials> 属性使用。  
  
   
  
## Examples  
 此代码演示创建此类实例的一种方法。  
  
 [!code-csharp[c_CreateSTS#18](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#18)]
 [!code-vb[c_CreateSTS#18](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_creatests/vb/source.vb#18)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.ServiceModel.Description.ClientCredentials.ServiceCertificate" />
  </Docs>
  <Members>
    <Member MemberName="Authentication">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.X509ServiceCertificateAuthentication Authentication { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.X509ServiceCertificateAuthentication Authentication" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Authentication As X509ServiceCertificateAuthentication" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::X509ServiceCertificateAuthentication ^ Authentication { System::ServiceModel::Security::X509ServiceCertificateAuthentication ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Authentication : System.ServiceModel.Security.X509ServiceCertificateAuthentication" Usage="System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.X509ServiceCertificateAuthentication</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于验证使用 SSL 身份验证获得的服务证书的设置。</summary>
        <value>用于验证使用 SSL 身份验证获得的服务证书的设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Security.X509ClientCertificateAuthentication> 类，表示客户端代理验证使用 SSL/TLS 协商获得的服务证书时所使用的设置。  
  
   
  
## Examples  
 此代码演示如何访问该属性。  
  
 [!code-csharp[c_CreateSTS#21](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 DefaultCertificate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate2 DefaultCertificate" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultCertificate As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate2 ^ DefaultCertificate { System::Security::Cryptography::X509Certificates::X509Certificate2 ^ get(); void set(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCertificate : System.Security.Cryptography.X509Certificates.X509Certificate2 with get, set" Usage="System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于服务的默认证书。</summary>
        <value>用于服务的默认证书。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对于使用基于证书的消息安全的绑定，此证书用于加密发送给服务的消息，并期望服务用它来对客户端的应答进行签名。  
  
   
  
## Examples  
 此代码演示如何访问该属性。  
  
 [!code-csharp[c_CreateSTS#24](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">试图在凭据为只读时进行设置。</exception>
      </Docs>
    </Member>
    <Member MemberName="ScopedCertificates">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;Uri,System.Security.Cryptography.X509Certificates.X509Certificate2&gt; ScopedCertificates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;class System.Uri, class System.Security.Cryptography.X509Certificates.X509Certificate2&gt; ScopedCertificates" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ScopedCertificates As Dictionary(Of Uri, X509Certificate2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;Uri ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^&gt; ^ ScopedCertificates { System::Collections::Generic::Dictionary&lt;Uri ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ScopedCertificates : System.Collections.Generic.Dictionary&lt;Uri, System.Security.Cryptography.X509Certificates.X509Certificate2&gt;" Usage="System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个作用域证书，该证书用于表示与客户端通信的服务。</summary>
        <value>一个作用域证书，用于表示与客户端通信的服务。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性使客户端能够根据与它通信的服务的 URL 来配置要使用的服务证书。 这在已颁发令牌的方案中尤其有用，在这些方案中，客户端可与多个服务（终端服务以及中间的安全令牌服务）进行通信。 对于使用基于证书的消息安全的绑定，此证书用于加密发送给服务的消息，并期望服务用它来对客户端的应答进行签名。  
  
 如果绑定需要服务的证书，但在 `ScopedCertificates` 中未找到服务 URL 的特定证书，则使用默认证书。  
  
   
  
## Examples  
 此代码演示如何设置此属性。  
  
 [!code-csharp[c_CreateSTS#33](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">试图在凭据为只读时进行设置。</exception>
        <altmember cref="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetDefaultCertificate">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定用于服务的默认证书。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 这些方法从与指定参数相匹配的指定位置中的存储区获取证书。  
  
 对于使用基于证书的消息安全的绑定，此证书用于加密发送给服务的消息，并期望服务用它来对客户端的应答进行签名。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetDefaultCertificate">
      <MemberSignature Language="C#" Value="public void SetDefaultCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDefaultCertificate(string subjectName, valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDefaultCertificate (subjectName As String, storeLocation As StoreLocation, storeName As StoreName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDefaultCertificate(System::String ^ subjectName, System::Security::Cryptography::X509Certificates::StoreLocation storeLocation, System::Security::Cryptography::X509Certificates::StoreName storeName);" />
      <MemberSignature Language="F#" Value="member this.SetDefaultCertificate : string * System.Security.Cryptography.X509Certificates.StoreLocation * System.Security.Cryptography.X509Certificates.StoreName -&gt; unit" Usage="x509CertificateRecipientClientCredential.SetDefaultCertificate (subjectName, storeLocation, storeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subjectName" Type="System.String" />
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
      </Parameters>
      <Docs>
        <param name="subjectName">该主题可分辨名称。</param>
        <param name="storeLocation">服务用于获取服务证书的证书存储区位置。</param>
        <param name="storeName">要打开的 X.509 证书存储区的名称。</param>
        <summary>指定用于服务的默认证书。 对于使用基于证书的消息安全的绑定，此证书用于加密发送给服务的消息，并期望服务用它来对客户端的应答进行签名。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法从与 `subjectName` 参数相匹配的指定位置中的存储区获取证书。  
  
 `storeLocation` 的值包含在 <xref:System.Security.Cryptography.X509Certificates.StoreLocation> 枚举中：  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>：分配给本地计算机的证书存储区。  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>：当前用户使用的证书存储 (默认) 。  
  
 如果应用程序在系统帐户下运行，则证书通常位于 <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>。 如果应用程序在用户帐户下运行，则证书通常位于 <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>。  
  
 `storeName` 的值包含在 <xref:System.Security.Cryptography.X509Certificates.StoreName> 枚举中。  
  
   
  
## Examples  
 下面的代码使用此方法指定要使用的 X.509 证书。  
  
 [!code-csharp[c_CreateSTS#23](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="subjectName" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">试图在凭据为只读时进行设置。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultCertificate">
      <MemberSignature Language="C#" Value="public void SetDefaultCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDefaultCertificate(valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName, valuetype System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDefaultCertificate (storeLocation As StoreLocation, storeName As StoreName, findType As X509FindType, findValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDefaultCertificate(System::Security::Cryptography::X509Certificates::StoreLocation storeLocation, System::Security::Cryptography::X509Certificates::StoreName storeName, System::Security::Cryptography::X509Certificates::X509FindType findType, System::Object ^ findValue);" />
      <MemberSignature Language="F#" Value="member this.SetDefaultCertificate : System.Security.Cryptography.X509Certificates.StoreLocation * System.Security.Cryptography.X509Certificates.StoreName * System.Security.Cryptography.X509Certificates.X509FindType * obj -&gt; unit" Usage="x509CertificateRecipientClientCredential.SetDefaultCertificate (storeLocation, storeName, findType, findValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
        <Parameter Name="findType" Type="System.Security.Cryptography.X509Certificates.X509FindType" />
        <Parameter Name="findValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="storeLocation">服务用于获取服务证书的证书存储区位置。</param>
        <param name="storeName">要打开的 X.509 证书存储区的名称。</param>
        <param name="findType">要执行的 X.509 搜索的类型。</param>
        <param name="findValue">要在 X.509 证书存储区中搜索的值。</param>
        <summary>指定用于服务的默认证书。 对于使用基于证书的消息安全的绑定，此证书用于加密发送给服务的消息，并期望服务用它来对客户端的应答进行签名。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法从与 `findType` 和 `findValue` 参数相匹配的指定位置中的存储区获取证书。  
  
 `storeLocation` 的值包含在 <xref:System.Security.Cryptography.X509Certificates.StoreLocation> 枚举中：  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>：分配给本地计算机的证书存储区。  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>：当前用户使用的证书存储 (默认) 。  
  
 如果应用程序在系统帐户下运行，则证书通常位于 <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>。 如果应用程序在用户帐户下运行，则证书通常位于 <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>。  
  
 `storeName` 的值包含在 <xref:System.Security.Cryptography.X509Certificates.StoreName> 枚举中。  
  
 `findType` 的值包含在 <xref:System.Security.Cryptography.X509Certificates.X509FindType> 枚举中。  
  
 最常用的枚举是 <xref:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName>，它在指定存储区中对证书的主题名称执行不区分大小写的搜索。 这可能是不精确的搜索。 如果未找到证书或找到了多个与条件相匹配的证书，则将引发 <xref:System.InvalidOperationException>。  
  
   
  
## Examples  
 下面的代码使用此方法指定要使用的 X.509 证书。  
  
 [!code-csharp[c_CreateSTS#22](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="findValue" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">试图在凭据为只读时进行设置。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetScopedCertificate">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>从存储区设置一个证书，并将其储存到按设置范围的 URL 编制索引的集合中。</summary>
        <altmember cref="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetScopedCertificate">
      <MemberSignature Language="C#" Value="public void SetScopedCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, Uri targetService);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetScopedCertificate(string subjectName, valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName, class System.Uri targetService) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetScopedCertificate (subjectName As String, storeLocation As StoreLocation, storeName As StoreName, targetService As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetScopedCertificate(System::String ^ subjectName, System::Security::Cryptography::X509Certificates::StoreLocation storeLocation, System::Security::Cryptography::X509Certificates::StoreName storeName, Uri ^ targetService);" />
      <MemberSignature Language="F#" Value="member this.SetScopedCertificate : string * System.Security.Cryptography.X509Certificates.StoreLocation * System.Security.Cryptography.X509Certificates.StoreName * Uri -&gt; unit" Usage="x509CertificateRecipientClientCredential.SetScopedCertificate (subjectName, storeLocation, storeName, targetService)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subjectName" Type="System.String" />
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
        <Parameter Name="targetService" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="subjectName">完全限定的主题名称。</param>
        <param name="storeLocation">服务用于获取服务证书的证书存储区位置。</param>
        <param name="storeName">要打开的 X.509 证书存储区的名称。</param>
        <param name="targetService">设置范围的 URL。</param>
        <summary>通过主题名称、证书存储区位置和证书存储区名称设置一个证书，并将其储存到用于设置范围的 URL 的集合中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `storeLocation` 的值包含在 <xref:System.Security.Cryptography.X509Certificates.StoreLocation> 枚举中：  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>：分配给本地计算机的证书存储区。  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>：当前用户使用的证书存储 (默认) 。  
  
 如果应用程序在系统帐户下运行，则证书通常位于 <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>。 如果应用程序在用户帐户下运行，则证书通常位于 <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>。  
  
 `storeName` 的值包含在 <xref:System.Security.Cryptography.X509Certificates.StoreName> 枚举中。  
  
   
  
## Examples  
 此代码演示如何调用该方法。  
  
 [!code-csharp[c_CreateSTS#25](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="subjectName" /> 或 <paramref name="targetService" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">试图在凭据为只读时进行设置。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetScopedCertificate">
      <MemberSignature Language="C#" Value="public void SetScopedCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue, Uri targetService);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetScopedCertificate(valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName, valuetype System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue, class System.Uri targetService) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetScopedCertificate (storeLocation As StoreLocation, storeName As StoreName, findType As X509FindType, findValue As Object, targetService As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetScopedCertificate(System::Security::Cryptography::X509Certificates::StoreLocation storeLocation, System::Security::Cryptography::X509Certificates::StoreName storeName, System::Security::Cryptography::X509Certificates::X509FindType findType, System::Object ^ findValue, Uri ^ targetService);" />
      <MemberSignature Language="F#" Value="member this.SetScopedCertificate : System.Security.Cryptography.X509Certificates.StoreLocation * System.Security.Cryptography.X509Certificates.StoreName * System.Security.Cryptography.X509Certificates.X509FindType * obj * Uri -&gt; unit" Usage="x509CertificateRecipientClientCredential.SetScopedCertificate (storeLocation, storeName, findType, findValue, targetService)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
        <Parameter Name="findType" Type="System.Security.Cryptography.X509Certificates.X509FindType" />
        <Parameter Name="findValue" Type="System.Object" />
        <Parameter Name="targetService" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="storeLocation">服务用于获取服务证书的证书存储区位置。</param>
        <param name="storeName">要打开的 X.509 证书存储区的名称。</param>
        <param name="findType">要执行的 X.509 搜索的类型。</param>
        <param name="findValue">要在 X.509 证书存储区中搜索的值。</param>
        <param name="targetService">设置范围的 URL。</param>
        <summary>通过证书存储区位置、证书存储区名称、X.509 搜索的类型以及要搜索的值设置一个证书，并将其储存到用于设置范围的 URL 的集合中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `storeLocation` 的值包含在 <xref:System.Security.Cryptography.X509Certificates.StoreLocation> 枚举中：  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>：分配给本地计算机的证书存储区。  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>：当前用户使用的证书存储 (默认) 。  
  
 如果应用程序在系统帐户下运行，则证书通常位于 <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>。 如果应用程序在用户帐户下运行，则证书通常位于 <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>。  
  
 `storeName` 的值包含在 <xref:System.Security.Cryptography.X509Certificates.StoreName> 枚举中。  
  
 `findType` 的值包含在 <xref:System.Security.Cryptography.X509Certificates.X509FindType> 枚举中。  
  
 最常用的枚举是 <xref:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName>，它在指定存储区中对证书的主题名称执行不区分大小写的搜索。 这可能是不精确的搜索。 如果未找到证书或找到了多个与条件相匹配的证书，则将引发 <xref:System.InvalidOperationException>。  
  
   
  
## Examples  
 此代码演示如何调用该方法。  
  
 [!code-csharp[c_CreateSTS#20](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#20)]
 [!code-vb[c_CreateSTS#20](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_creatests/vb/source.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="findValue" /> 或 <paramref name="targetService" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">试图在凭据为只读时进行设置。</exception>
      </Docs>
    </Member>
    <Member MemberName="SslCertificateAuthentication">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.X509ServiceCertificateAuthentication SslCertificateAuthentication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.X509ServiceCertificateAuthentication SslCertificateAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication" />
      <MemberSignature Language="VB.NET" Value="Public Property SslCertificateAuthentication As X509ServiceCertificateAuthentication" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::X509ServiceCertificateAuthentication ^ SslCertificateAuthentication { System::ServiceModel::Security::X509ServiceCertificateAuthentication ^ get(); void set(System::ServiceModel::Security::X509ServiceCertificateAuthentication ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SslCertificateAuthentication : System.ServiceModel.Security.X509ServiceCertificateAuthentication with get, set" Usage="System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.X509ServiceCertificateAuthentication</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要使用的 SSL 证书验证程序。</summary>
        <value>一个 <see cref="T:System.ServiceModel.Security.X509ServiceCertificateAuthentication" /> 实例。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性允许你使用 WCF X509CertificateValidator 来验证 WCF 客户端上的服务器证书。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
