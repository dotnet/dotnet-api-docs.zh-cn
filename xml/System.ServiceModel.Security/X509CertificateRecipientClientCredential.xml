<Type Name="X509CertificateRecipientClientCredential" FullName="System.ServiceModel.Security.X509CertificateRecipientClientCredential">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c8a467cd2f7c2fb0244c4848fedac144f369f10c" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83892760" /></Metadata><TypeSignature Language="C#" Value="public sealed class X509CertificateRecipientClientCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit X509CertificateRecipientClientCredential extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.X509CertificateRecipientClientCredential" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class X509CertificateRecipientClientCredential" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509CertificateRecipientClientCredential sealed" />
  <TypeSignature Language="F#" Value="type X509CertificateRecipientClientCredential = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.6.0.0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.7.0.0" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="27916-101">表示客户端在验证使用 SSL 身份验证的服务所出示的证书时使用的设置。</span><span class="sxs-lookup"><span data-stu-id="27916-101">Represents the settings used by the client to validate the certificate presented by the service using SSL authentication.</span></span> <span data-ttu-id="27916-102">它还包含在客户端上显式配置为对发送给使用消息安全的服务的消息进行加密的服务的所有证书。</span><span class="sxs-lookup"><span data-stu-id="27916-102">It also contains any certificate for the service that is explicitly configured on the client to use for encrypting messages to the service using message security.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27916-103">此类由 <xref:System.ServiceModel.Description.ClientCredentials.ServiceCertificate%2A> 类中的 <xref:System.ServiceModel.Description.ClientCredentials> 属性使用。</span><span class="sxs-lookup"><span data-stu-id="27916-103">This class is used by the <xref:System.ServiceModel.Description.ClientCredentials.ServiceCertificate%2A> property in the <xref:System.ServiceModel.Description.ClientCredentials> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27916-104">此代码演示创建此类实例的一种方法。</span><span class="sxs-lookup"><span data-stu-id="27916-104">This code shows one way to create an instance of this class.</span></span>  
  
 [!code-csharp[c_CreateSTS#18](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#18)]
 [!code-vb[c_CreateSTS#18](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_creatests/vb/source.vb#18)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.ServiceModel.Description.ClientCredentials.ServiceCertificate" />
  </Docs>
  <Members>
    <Member MemberName="Authentication">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.X509ServiceCertificateAuthentication Authentication { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.X509ServiceCertificateAuthentication Authentication" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Authentication As X509ServiceCertificateAuthentication" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::X509ServiceCertificateAuthentication ^ Authentication { System::ServiceModel::Security::X509ServiceCertificateAuthentication ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Authentication : System.ServiceModel.Security.X509ServiceCertificateAuthentication" Usage="System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.X509ServiceCertificateAuthentication</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27916-105">获取用于验证使用 SSL 身份验证获得的服务证书的设置。</span><span class="sxs-lookup"><span data-stu-id="27916-105">Gets the settings used to validate the service certificate obtained using SSL authentication.</span></span></summary>
        <value><span data-ttu-id="27916-106">用于验证使用 SSL 身份验证获得的服务证书的设置。</span><span class="sxs-lookup"><span data-stu-id="27916-106">The settings used to validate the service certificate obtained using SSL authentication.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27916-107"><xref:System.ServiceModel.Security.X509ClientCertificateAuthentication> 类，表示客户端代理验证使用 SSL/TLS 协商获得的服务证书时所使用的设置。</span><span class="sxs-lookup"><span data-stu-id="27916-107">The <xref:System.ServiceModel.Security.X509ClientCertificateAuthentication> class represents the settings used by the client proxy to authenticate service certificates that are obtained using SSL/TLS negotiation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27916-108">此代码演示如何访问该属性。</span><span class="sxs-lookup"><span data-stu-id="27916-108">This code shows how to access this property.</span></span>  
  
 [!code-csharp[c_CreateSTS#21](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 DefaultCertificate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate2 DefaultCertificate" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultCertificate As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate2 ^ DefaultCertificate { System::Security::Cryptography::X509Certificates::X509Certificate2 ^ get(); void set(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCertificate : System.Security.Cryptography.X509Certificates.X509Certificate2 with get, set" Usage="System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27916-109">获取或设置用于服务的默认证书。</span><span class="sxs-lookup"><span data-stu-id="27916-109">Gets or sets the default certificate to use for the service.</span></span></summary>
        <value><span data-ttu-id="27916-110">用于服务的默认证书。</span><span class="sxs-lookup"><span data-stu-id="27916-110">The default certificate to use for the service.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27916-111">对于使用基于证书的消息安全的绑定，此证书用于加密发送给服务的消息，并期望服务用它来对客户端的应答进行签名。</span><span class="sxs-lookup"><span data-stu-id="27916-111">For bindings that use certificate-based message security, this certificate is used to encrypt messages to the service and is expected to be used by the service for signing replies to the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27916-112">此代码演示如何访问该属性。</span><span class="sxs-lookup"><span data-stu-id="27916-112">This code shows how to access this property.</span></span>  
  
 [!code-csharp[c_CreateSTS#24](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="27916-113">试图在凭据为只读时进行设置。</span><span class="sxs-lookup"><span data-stu-id="27916-113">Attempted to set when the credential is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ScopedCertificates">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;Uri,System.Security.Cryptography.X509Certificates.X509Certificate2&gt; ScopedCertificates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;class System.Uri, class System.Security.Cryptography.X509Certificates.X509Certificate2&gt; ScopedCertificates" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ScopedCertificates As Dictionary(Of Uri, X509Certificate2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;Uri ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^&gt; ^ ScopedCertificates { System::Collections::Generic::Dictionary&lt;Uri ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ScopedCertificates : System.Collections.Generic.Dictionary&lt;Uri, System.Security.Cryptography.X509Certificates.X509Certificate2&gt;" Usage="System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27916-114">获取一个作用域证书，该证书用于表示与客户端通信的服务。</span><span class="sxs-lookup"><span data-stu-id="27916-114">Gets a scoped certificate to use to represent the service that the client is communicating with.</span></span></summary>
        <value><span data-ttu-id="27916-115">一个作用域证书，用于表示与客户端通信的服务。</span><span class="sxs-lookup"><span data-stu-id="27916-115">A scoped certificate to use to represent the service that the client is communicating with.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27916-116">此属性使客户端能够根据与它通信的服务的 URL 来配置要使用的服务证书。</span><span class="sxs-lookup"><span data-stu-id="27916-116">This property enables the client to configure the service certificate to use based on the URL of the service it communicates with.</span></span> <span data-ttu-id="27916-117">这在已颁发令牌的方案中尤其有用，在这些方案中，客户端可与多个服务（终端服务以及中间的安全令牌服务）进行通信。</span><span class="sxs-lookup"><span data-stu-id="27916-117">This is especially useful in issued token scenarios where a client can be communicating to multiple services (the end service as well as intermediary security token services).</span></span> <span data-ttu-id="27916-118">对于使用基于证书的消息安全的绑定，此证书用于加密发送给服务的消息，并期望服务用它来对客户端的应答进行签名。</span><span class="sxs-lookup"><span data-stu-id="27916-118">For bindings that use certificate-based message security, this certificate is used to encrypt messages to the service, and is expected to be used by the service for signing replies to the client.</span></span>  
  
 <span data-ttu-id="27916-119">如果绑定需要服务的证书，但在 `ScopedCertificates` 中未找到服务 URL 的特定证书，则使用默认证书。</span><span class="sxs-lookup"><span data-stu-id="27916-119">If a binding requires a certificate for the service and no specific certificate for the service URL is found in the `ScopedCertificates`, the default certificate is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27916-120">此代码演示如何设置此属性。</span><span class="sxs-lookup"><span data-stu-id="27916-120">This code shows how to set this property.</span></span>  
  
 [!code-csharp[c_CreateSTS#33](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="27916-121">试图在凭据为只读时进行设置。</span><span class="sxs-lookup"><span data-stu-id="27916-121">Attempted to set when the credential is read-only.</span></span></exception>
        <altmember cref="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetDefaultCertificate">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="27916-122">指定用于服务的默认证书。</span><span class="sxs-lookup"><span data-stu-id="27916-122">Specifies the default certificate to use for the service.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27916-123">这些方法从与指定参数相匹配的指定位置中的存储区获取证书。</span><span class="sxs-lookup"><span data-stu-id="27916-123">These methods get a certificate from the store in the specified location that matches specified parameters.</span></span>  
  
 <span data-ttu-id="27916-124">对于使用基于证书的消息安全的绑定，此证书用于加密发送给服务的消息，并期望服务用它来对客户端的应答进行签名。</span><span class="sxs-lookup"><span data-stu-id="27916-124">For bindings that use certificate-based message security, this certificate is used to encrypt messages to the service and is expected to be used by the service for signing replies to the client.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetDefaultCertificate">
      <MemberSignature Language="C#" Value="public void SetDefaultCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDefaultCertificate(string subjectName, valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDefaultCertificate (subjectName As String, storeLocation As StoreLocation, storeName As StoreName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDefaultCertificate(System::String ^ subjectName, System::Security::Cryptography::X509Certificates::StoreLocation storeLocation, System::Security::Cryptography::X509Certificates::StoreName storeName);" />
      <MemberSignature Language="F#" Value="member this.SetDefaultCertificate : string * System.Security.Cryptography.X509Certificates.StoreLocation * System.Security.Cryptography.X509Certificates.StoreName -&gt; unit" Usage="x509CertificateRecipientClientCredential.SetDefaultCertificate (subjectName, storeLocation, storeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subjectName" Type="System.String" />
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
      </Parameters>
      <Docs>
        <param name="subjectName"><span data-ttu-id="27916-125">该主题可分辨名称。</span><span class="sxs-lookup"><span data-stu-id="27916-125">The subject distinguished name.</span></span></param>
        <param name="storeLocation"><span data-ttu-id="27916-126">服务用于获取服务证书的证书存储区位置。</span><span class="sxs-lookup"><span data-stu-id="27916-126">The location of the certificate store that the service uses to obtain the service certificate.</span></span></param>
        <param name="storeName"><span data-ttu-id="27916-127">要打开的 X.509 证书存储区的名称。</span><span class="sxs-lookup"><span data-stu-id="27916-127">The name of the X.509 certificate store to open.</span></span></param>
        <summary><span data-ttu-id="27916-128">指定用于服务的默认证书。</span><span class="sxs-lookup"><span data-stu-id="27916-128">Specifies the default certificate to use for the service.</span></span> <span data-ttu-id="27916-129">对于使用基于证书的消息安全的绑定，此证书用于加密发送给服务的消息，并期望服务用它来对客户端的应答进行签名。</span><span class="sxs-lookup"><span data-stu-id="27916-129">For bindings that use certificate-based message security, this certificate is used to encrypt messages to the service and is expected to be used by the service for signing replies to the client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27916-130">此方法从与 `subjectName` 参数相匹配的指定位置中的存储区获取证书。</span><span class="sxs-lookup"><span data-stu-id="27916-130">This method gets a certificate from the store in the specified location that matches the `subjectName` parameter.</span></span>  
  
 <span data-ttu-id="27916-131">`storeLocation` 的值包含在 <xref:System.Security.Cryptography.X509Certificates.StoreLocation> 枚举中：</span><span class="sxs-lookup"><span data-stu-id="27916-131">Values for `storeLocation` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreLocation> enumeration:</span></span>  
  
-   <span data-ttu-id="27916-132"><xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>：分配给本地计算机的证书存储区。</span><span class="sxs-lookup"><span data-stu-id="27916-132"><xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: the certificate store assigned to the local machine.</span></span>  
  
-   <span data-ttu-id="27916-133"><xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>：当前用户使用的证书存储区（默认）。</span><span class="sxs-lookup"><span data-stu-id="27916-133"><xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: the certificate store used by the current user (default).</span></span>  
  
 <span data-ttu-id="27916-134">如果应用程序在系统帐户下运行，则证书通常位于 <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>。</span><span class="sxs-lookup"><span data-stu-id="27916-134">If the application is running under a system account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>.</span></span> <span data-ttu-id="27916-135">如果应用程序在用户帐户下运行，则证书通常位于 <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>。</span><span class="sxs-lookup"><span data-stu-id="27916-135">If the application is running under a user account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.</span></span>  
  
 <span data-ttu-id="27916-136">`storeName` 的值包含在 <xref:System.Security.Cryptography.X509Certificates.StoreName> 枚举中。</span><span class="sxs-lookup"><span data-stu-id="27916-136">Values for `storeName` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreName> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27916-137">下面的代码使用此方法指定要使用的 X.509 证书。</span><span class="sxs-lookup"><span data-stu-id="27916-137">The following code uses this method to specify an X.509 certificate to use.</span></span>  
  
 [!code-csharp[c_CreateSTS#23](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="27916-138"><paramref name="subjectName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="27916-138"><paramref name="subjectName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="27916-139">试图在凭据为只读时进行设置。</span><span class="sxs-lookup"><span data-stu-id="27916-139">Attempted to set when the credential is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultCertificate">
      <MemberSignature Language="C#" Value="public void SetDefaultCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDefaultCertificate(valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName, valuetype System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDefaultCertificate (storeLocation As StoreLocation, storeName As StoreName, findType As X509FindType, findValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDefaultCertificate(System::Security::Cryptography::X509Certificates::StoreLocation storeLocation, System::Security::Cryptography::X509Certificates::StoreName storeName, System::Security::Cryptography::X509Certificates::X509FindType findType, System::Object ^ findValue);" />
      <MemberSignature Language="F#" Value="member this.SetDefaultCertificate : System.Security.Cryptography.X509Certificates.StoreLocation * System.Security.Cryptography.X509Certificates.StoreName * System.Security.Cryptography.X509Certificates.X509FindType * obj -&gt; unit" Usage="x509CertificateRecipientClientCredential.SetDefaultCertificate (storeLocation, storeName, findType, findValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
        <Parameter Name="findType" Type="System.Security.Cryptography.X509Certificates.X509FindType" />
        <Parameter Name="findValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="storeLocation"><span data-ttu-id="27916-140">服务用于获取服务证书的证书存储区位置。</span><span class="sxs-lookup"><span data-stu-id="27916-140">The location of the certificate store the service uses to obtain the service certificate.</span></span></param>
        <param name="storeName"><span data-ttu-id="27916-141">要打开的 X.509 证书存储区的名称。</span><span class="sxs-lookup"><span data-stu-id="27916-141">The name of the X.509 certificate store to open.</span></span></param>
        <param name="findType"><span data-ttu-id="27916-142">要执行的 X.509 搜索的类型。</span><span class="sxs-lookup"><span data-stu-id="27916-142">The type of X.509 search to be executed.</span></span></param>
        <param name="findValue"><span data-ttu-id="27916-143">要在 X.509 证书存储区中搜索的值。</span><span class="sxs-lookup"><span data-stu-id="27916-143">The value to search for in the X.509 certificate store.</span></span></param>
        <summary><span data-ttu-id="27916-144">指定用于服务的默认证书。</span><span class="sxs-lookup"><span data-stu-id="27916-144">Specifies the default certificate to use for the service.</span></span> <span data-ttu-id="27916-145">对于使用基于证书的消息安全的绑定，此证书用于加密发送给服务的消息，并期望服务用它来对客户端的应答进行签名。</span><span class="sxs-lookup"><span data-stu-id="27916-145">For bindings that use certificate-based message security, this certificate is used to encrypt messages to the service and is expected to be used by the service for signing replies to the client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27916-146">此方法从与 `findType` 和 `findValue` 参数相匹配的指定位置中的存储区获取证书。</span><span class="sxs-lookup"><span data-stu-id="27916-146">This method gets a certificate from the store in the specified location that matches the `findType` and `findValue` parameters.</span></span>  
  
 <span data-ttu-id="27916-147">`storeLocation` 的值包含在 <xref:System.Security.Cryptography.X509Certificates.StoreLocation> 枚举中：</span><span class="sxs-lookup"><span data-stu-id="27916-147">Values for `storeLocation` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreLocation> enumeration:</span></span>  
  
-   <span data-ttu-id="27916-148"><xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>：分配给本地计算机的证书存储区。</span><span class="sxs-lookup"><span data-stu-id="27916-148"><xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: the certificate store assigned to the local machine.</span></span>  
  
-   <span data-ttu-id="27916-149"><xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>：当前用户使用的证书存储区（默认）。</span><span class="sxs-lookup"><span data-stu-id="27916-149"><xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: the certificate store used by the current user (default).</span></span>  
  
 <span data-ttu-id="27916-150">如果应用程序在系统帐户下运行，则证书通常位于 <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>。</span><span class="sxs-lookup"><span data-stu-id="27916-150">If the application is running under a system account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>.</span></span> <span data-ttu-id="27916-151">如果应用程序在用户帐户下运行，则证书通常位于 <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>。</span><span class="sxs-lookup"><span data-stu-id="27916-151">If the application is running under a user account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.</span></span>  
  
 <span data-ttu-id="27916-152">`storeName` 的值包含在 <xref:System.Security.Cryptography.X509Certificates.StoreName> 枚举中。</span><span class="sxs-lookup"><span data-stu-id="27916-152">Values for `storeName` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreName> enumeration.</span></span>  
  
 <span data-ttu-id="27916-153">`findType` 的值包含在 <xref:System.Security.Cryptography.X509Certificates.X509FindType> 枚举中。</span><span class="sxs-lookup"><span data-stu-id="27916-153">Values for `findType` are included in the <xref:System.Security.Cryptography.X509Certificates.X509FindType> enumeration.</span></span>  
  
 <span data-ttu-id="27916-154">最常用的枚举是 <xref:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName>，它在指定存储区中对证书的主题名称执行不区分大小写的搜索。</span><span class="sxs-lookup"><span data-stu-id="27916-154">The most commonly used enumeration is <xref:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName>, which does a case-insensitive search on the subject name of certificates in the specified store.</span></span> <span data-ttu-id="27916-155">这可能是不精确的搜索。</span><span class="sxs-lookup"><span data-stu-id="27916-155">This can be an imprecise search.</span></span> <span data-ttu-id="27916-156">如果未找到证书或找到了多个与条件相匹配的证书，则将引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="27916-156">If no certificates or multiple certificates that match the criteria are found, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27916-157">下面的代码使用此方法指定要使用的 X.509 证书。</span><span class="sxs-lookup"><span data-stu-id="27916-157">The following code uses this method to specify an X.509 certificate to use.</span></span>  
  
 [!code-csharp[c_CreateSTS#22](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="27916-158"><paramref name="findValue" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="27916-158"><paramref name="findValue" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="27916-159">试图在凭据为只读时进行设置。</span><span class="sxs-lookup"><span data-stu-id="27916-159">Attempted to set when the credential is read-only.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetScopedCertificate">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="27916-160">从存储区设置一个证书，并将其储存到按设置范围的 URL 编制索引的集合中。</span><span class="sxs-lookup"><span data-stu-id="27916-160">Sets a certificate from a store and stores it in a collection indexed by the URL that sets the scope.</span></span></summary>
        <altmember cref="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetScopedCertificate">
      <MemberSignature Language="C#" Value="public void SetScopedCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, Uri targetService);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetScopedCertificate(string subjectName, valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName, class System.Uri targetService) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetScopedCertificate (subjectName As String, storeLocation As StoreLocation, storeName As StoreName, targetService As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetScopedCertificate(System::String ^ subjectName, System::Security::Cryptography::X509Certificates::StoreLocation storeLocation, System::Security::Cryptography::X509Certificates::StoreName storeName, Uri ^ targetService);" />
      <MemberSignature Language="F#" Value="member this.SetScopedCertificate : string * System.Security.Cryptography.X509Certificates.StoreLocation * System.Security.Cryptography.X509Certificates.StoreName * Uri -&gt; unit" Usage="x509CertificateRecipientClientCredential.SetScopedCertificate (subjectName, storeLocation, storeName, targetService)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subjectName" Type="System.String" />
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
        <Parameter Name="targetService" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="subjectName"><span data-ttu-id="27916-161">完全限定的主题名称。</span><span class="sxs-lookup"><span data-stu-id="27916-161">The fully qualified subject name.</span></span></param>
        <param name="storeLocation"><span data-ttu-id="27916-162">服务用于获取服务证书的证书存储区位置。</span><span class="sxs-lookup"><span data-stu-id="27916-162">The location of the certificate store that the service uses to obtain the service certificate.</span></span></param>
        <param name="storeName"><span data-ttu-id="27916-163">要打开的 X.509 证书存储区的名称。</span><span class="sxs-lookup"><span data-stu-id="27916-163">The name of the X.509 certificate store to open.</span></span></param>
        <param name="targetService"><span data-ttu-id="27916-164">设置范围的 URL。</span><span class="sxs-lookup"><span data-stu-id="27916-164">The URL that sets the scope.</span></span></param>
        <summary><span data-ttu-id="27916-165">通过主题名称、证书存储区位置和证书存储区名称设置一个证书，并将其储存到用于设置范围的 URL 的集合中。</span><span class="sxs-lookup"><span data-stu-id="27916-165">Sets a certificate by subject name, certificate store location, and certificate store name, and stores it in a collection to be used for the URL that sets the scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27916-166">`storeLocation` 的值包含在 <xref:System.Security.Cryptography.X509Certificates.StoreLocation> 枚举中：</span><span class="sxs-lookup"><span data-stu-id="27916-166">Values for `storeLocation` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreLocation> enumeration:</span></span>  
  
-   <span data-ttu-id="27916-167"><xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>：分配给本地计算机的证书存储区。</span><span class="sxs-lookup"><span data-stu-id="27916-167"><xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: the certificate store assigned to the local machine.</span></span>  
  
-   <span data-ttu-id="27916-168"><xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>：当前用户使用的证书存储区（默认）。</span><span class="sxs-lookup"><span data-stu-id="27916-168"><xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: the certificate store used by the current user (default).</span></span>  
  
 <span data-ttu-id="27916-169">如果应用程序在系统帐户下运行，则证书通常位于 <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>。</span><span class="sxs-lookup"><span data-stu-id="27916-169">If the application is running under a system account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>.</span></span> <span data-ttu-id="27916-170">如果应用程序在用户帐户下运行，则证书通常位于 <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>。</span><span class="sxs-lookup"><span data-stu-id="27916-170">If the application is running under a user account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.</span></span>  
  
 <span data-ttu-id="27916-171">`storeName` 的值包含在 <xref:System.Security.Cryptography.X509Certificates.StoreName> 枚举中。</span><span class="sxs-lookup"><span data-stu-id="27916-171">Values for `storeName` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreName> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27916-172">此代码演示如何调用该方法。</span><span class="sxs-lookup"><span data-stu-id="27916-172">This code shows how to call this method.</span></span>  
  
 [!code-csharp[c_CreateSTS#25](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="27916-173"><paramref name="subjectName" /> 或 <paramref name="targetService" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="27916-173"><paramref name="subjectName" /> or <paramref name="targetService" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="27916-174">试图在凭据为只读时进行设置。</span><span class="sxs-lookup"><span data-stu-id="27916-174">Attempted to set when the credential is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetScopedCertificate">
      <MemberSignature Language="C#" Value="public void SetScopedCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue, Uri targetService);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetScopedCertificate(valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName, valuetype System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue, class System.Uri targetService) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetScopedCertificate (storeLocation As StoreLocation, storeName As StoreName, findType As X509FindType, findValue As Object, targetService As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetScopedCertificate(System::Security::Cryptography::X509Certificates::StoreLocation storeLocation, System::Security::Cryptography::X509Certificates::StoreName storeName, System::Security::Cryptography::X509Certificates::X509FindType findType, System::Object ^ findValue, Uri ^ targetService);" />
      <MemberSignature Language="F#" Value="member this.SetScopedCertificate : System.Security.Cryptography.X509Certificates.StoreLocation * System.Security.Cryptography.X509Certificates.StoreName * System.Security.Cryptography.X509Certificates.X509FindType * obj * Uri -&gt; unit" Usage="x509CertificateRecipientClientCredential.SetScopedCertificate (storeLocation, storeName, findType, findValue, targetService)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
        <Parameter Name="findType" Type="System.Security.Cryptography.X509Certificates.X509FindType" />
        <Parameter Name="findValue" Type="System.Object" />
        <Parameter Name="targetService" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="storeLocation"><span data-ttu-id="27916-175">服务用于获取服务证书的证书存储区位置。</span><span class="sxs-lookup"><span data-stu-id="27916-175">The location of the certificate store that the service uses to obtain the service certificate.</span></span></param>
        <param name="storeName"><span data-ttu-id="27916-176">要打开的 X.509 证书存储区的名称。</span><span class="sxs-lookup"><span data-stu-id="27916-176">The name of the X.509 certificate store to open.</span></span></param>
        <param name="findType"><span data-ttu-id="27916-177">要执行的 X.509 搜索的类型。</span><span class="sxs-lookup"><span data-stu-id="27916-177">The type of X.509 search to be executed.</span></span></param>
        <param name="findValue"><span data-ttu-id="27916-178">要在 X.509 证书存储区中搜索的值。</span><span class="sxs-lookup"><span data-stu-id="27916-178">The value to search for in the X.509 certificate store.</span></span></param>
        <param name="targetService"><span data-ttu-id="27916-179">设置范围的 URL。</span><span class="sxs-lookup"><span data-stu-id="27916-179">The URL that sets the scope.</span></span></param>
        <summary><span data-ttu-id="27916-180">通过证书存储区位置、证书存储区名称、X.509 搜索的类型以及要搜索的值设置一个证书，并将其储存到用于设置范围的 URL 的集合中。</span><span class="sxs-lookup"><span data-stu-id="27916-180">Sets a certificate by certificate store location, certificate store name, type of X.509 search, and value to search for, and stores it in a collection to be used for the URL that sets the scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27916-181">`storeLocation` 的值包含在 <xref:System.Security.Cryptography.X509Certificates.StoreLocation> 枚举中：</span><span class="sxs-lookup"><span data-stu-id="27916-181">Values for `storeLocation` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreLocation> enumeration:</span></span>  
  
-   <span data-ttu-id="27916-182"><xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>：分配给本地计算机的证书存储区。</span><span class="sxs-lookup"><span data-stu-id="27916-182"><xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: the certificate store assigned to the local machine.</span></span>  
  
-   <span data-ttu-id="27916-183"><xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>：当前用户使用的证书存储区（默认）。</span><span class="sxs-lookup"><span data-stu-id="27916-183"><xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: the certificate store used by the current user (default).</span></span>  
  
 <span data-ttu-id="27916-184">如果应用程序在系统帐户下运行，则证书通常位于 <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>。</span><span class="sxs-lookup"><span data-stu-id="27916-184">If the application is running under a system account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>.</span></span> <span data-ttu-id="27916-185">如果应用程序在用户帐户下运行，则证书通常位于 <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>。</span><span class="sxs-lookup"><span data-stu-id="27916-185">If the application is running under a user account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.</span></span>  
  
 <span data-ttu-id="27916-186">`storeName` 的值包含在 <xref:System.Security.Cryptography.X509Certificates.StoreName> 枚举中。</span><span class="sxs-lookup"><span data-stu-id="27916-186">Values for `storeName` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreName> enumeration.</span></span>  
  
 <span data-ttu-id="27916-187">`findType` 的值包含在 <xref:System.Security.Cryptography.X509Certificates.X509FindType> 枚举中。</span><span class="sxs-lookup"><span data-stu-id="27916-187">Values for `findType` are included in the <xref:System.Security.Cryptography.X509Certificates.X509FindType> enumeration.</span></span>  
  
 <span data-ttu-id="27916-188">最常用的枚举是 <xref:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName>，它在指定存储区中对证书的主题名称执行不区分大小写的搜索。</span><span class="sxs-lookup"><span data-stu-id="27916-188">The most commonly used enumeration is <xref:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName>, which does a case-insensitive search on the subject name of certificates in the specified store.</span></span> <span data-ttu-id="27916-189">这可能是不精确的搜索。</span><span class="sxs-lookup"><span data-stu-id="27916-189">This can be an imprecise search.</span></span> <span data-ttu-id="27916-190">如果未找到证书或找到了多个与条件相匹配的证书，则将引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="27916-190">If no certificates or multiple certificates that match the criteria are found, an <xref:System.InvalidOperationException> will be thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27916-191">此代码演示如何调用该方法。</span><span class="sxs-lookup"><span data-stu-id="27916-191">This code shows how to call this method.</span></span>  
  
 [!code-csharp[c_CreateSTS#20](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#20)]
 [!code-vb[c_CreateSTS#20](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_creatests/vb/source.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="27916-192"><paramref name="findValue" /> 或 <paramref name="targetService" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="27916-192"><paramref name="findValue" /> or <paramref name="targetService" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="27916-193">试图在凭据为只读时进行设置。</span><span class="sxs-lookup"><span data-stu-id="27916-193">Attempted to set when the credential is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SslCertificateAuthentication">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.X509ServiceCertificateAuthentication SslCertificateAuthentication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.X509ServiceCertificateAuthentication SslCertificateAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication" />
      <MemberSignature Language="VB.NET" Value="Public Property SslCertificateAuthentication As X509ServiceCertificateAuthentication" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::X509ServiceCertificateAuthentication ^ SslCertificateAuthentication { System::ServiceModel::Security::X509ServiceCertificateAuthentication ^ get(); void set(System::ServiceModel::Security::X509ServiceCertificateAuthentication ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SslCertificateAuthentication : System.ServiceModel.Security.X509ServiceCertificateAuthentication with get, set" Usage="System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.X509ServiceCertificateAuthentication</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27916-194">获取或设置要使用的 SSL 证书验证程序。</span><span class="sxs-lookup"><span data-stu-id="27916-194">Gets or sets the SSL certificate validator to use.</span></span></summary>
        <value><span data-ttu-id="27916-195">一个 <see cref="T:System.ServiceModel.Security.X509ServiceCertificateAuthentication" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="27916-195">A <see cref="T:System.ServiceModel.Security.X509ServiceCertificateAuthentication" /> instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27916-196">此属性允许你使用 WCF X509CertificateValidator 来验证 WCF 客户端上的服务器证书。</span><span class="sxs-lookup"><span data-stu-id="27916-196">This property allows you to use WCF X509CertificateValidator to validate a server certificate on a WCF client.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
