<Type Name="NonceCache" FullName="System.ServiceModel.Security.NonceCache">
  <Metadata><Meta Name="ms.openlocfilehash" Value="53dfaec03a420fc01db4bacc328ca13b277dc590" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89953045" /></Metadata><TypeSignature Language="C#" Value="public abstract class NonceCache" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit NonceCache extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.NonceCache" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class NonceCache" />
  <TypeSignature Language="C++ CLI" Value="public ref class NonceCache abstract" />
  <TypeSignature Language="F#" Value="type NonceCache = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="917e2-101">表示 Nonce 缓存的抽象基类。</span><span class="sxs-lookup"><span data-stu-id="917e2-101">An abstract base class that represents a cache for nonces.</span></span></summary>
    <remarks>To be added.</remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="917e2-102">必须重写 <see cref="M:System.ServiceModel.Security.NonceCache.CheckNonce(System.Byte[])" /> 和 <see cref="M:System.ServiceModel.Security.NonceCache.TryAddNonce(System.Byte[])" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="917e2-102">You must override the <see cref="M:System.ServiceModel.Security.NonceCache.CheckNonce(System.Byte[])" /> and <see cref="M:System.ServiceModel.Security.NonceCache.TryAddNonce(System.Byte[])" /> methods.</span></span></para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NonceCache ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.NonceCache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NonceCache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="917e2-103">从派生类中的构造函数中调用，用于初始化 <see cref="T:System.ServiceModel.Security.NonceCache" /> 类。</span><span class="sxs-lookup"><span data-stu-id="917e2-103">Called from constructors in derived classes to initialize the <see cref="T:System.ServiceModel.Security.NonceCache" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheSize">
      <MemberSignature Language="C#" Value="public int CacheSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.NonceCache.CacheSize" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CacheSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CacheSize : int with get, set" Usage="System.ServiceModel.Security.NonceCache.CacheSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="917e2-104">获取或设置指定为缓存可包含的 nonce 数量的最大缓存大小。</span><span class="sxs-lookup"><span data-stu-id="917e2-104">Gets or sets the maximum size of the cache specified as the number of nonces that the cache can contain.</span></span></summary>
        <value><span data-ttu-id="917e2-105">作为该缓存能够容纳的 Nonces 的数目的指定缓存的最大大小。</span><span class="sxs-lookup"><span data-stu-id="917e2-105">The maximum size of the cache specified as the number of nonces that the cache can contain.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="917e2-106">尝试设置一个小于 0 的值。</span><span class="sxs-lookup"><span data-stu-id="917e2-106">An attempt to set a value that is less than zero occurs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CachingTimeSpan">
      <MemberSignature Language="C#" Value="public TimeSpan CachingTimeSpan { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan CachingTimeSpan" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.NonceCache.CachingTimeSpan" />
      <MemberSignature Language="VB.NET" Value="Public Property CachingTimeSpan As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan CachingTimeSpan { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.CachingTimeSpan : TimeSpan with get, set" Usage="System.ServiceModel.Security.NonceCache.CachingTimeSpan" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="917e2-107">获取或设置将从缓存中删除 nonce 的最大时间跨度。</span><span class="sxs-lookup"><span data-stu-id="917e2-107">Gets or sets the maximum timespan after which a nonce is deleted from the cache.</span></span></summary>
        <value><span data-ttu-id="917e2-108">Nonce 从缓存中删除之后的最大时间跨度。</span><span class="sxs-lookup"><span data-stu-id="917e2-108">The maximum timespan after which a nonce is deleted from the cache.</span></span> <span data-ttu-id="917e2-109">此值至少应将最大时钟值差添加到重播窗口大小两次。</span><span class="sxs-lookup"><span data-stu-id="917e2-109">This value should be at least twice the maximum clock skew added to the replay window size.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="917e2-110">尝试设置一个小于 <see cref="F:System.TimeSpan.Zero" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="917e2-110">An attempt to set a value that is less than <see cref="F:System.TimeSpan.Zero" /> occurs.</span></span>  
  
<span data-ttu-id="917e2-111">- 或 -</span><span class="sxs-lookup"><span data-stu-id="917e2-111">-or-</span></span> 
<span data-ttu-id="917e2-112">尝试设置一个大于允许的最大值的值。</span><span class="sxs-lookup"><span data-stu-id="917e2-112">An attempt to set a value greater than the allowed maximum occurs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CheckNonce">
      <MemberSignature Language="C#" Value="public abstract bool CheckNonce (byte[] nonce);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckNonce(unsigned int8[] nonce) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.NonceCache.CheckNonce(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CheckNonce (nonce As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool CheckNonce(cli::array &lt;System::Byte&gt; ^ nonce);" />
      <MemberSignature Language="F#" Value="abstract member CheckNonce : byte[] -&gt; bool" Usage="nonceCache.CheckNonce nonce" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonce" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="nonce"><span data-ttu-id="917e2-113">要检查的 Nonce。</span><span class="sxs-lookup"><span data-stu-id="917e2-113">The nonce to check.</span></span></param>
        <summary><span data-ttu-id="917e2-114">当在派生类中重写时，返回一个指示指定 nouce 是否已经在缓存中的值。</span><span class="sxs-lookup"><span data-stu-id="917e2-114">When overridden in a derived class, returns a value that indicates whether the specified nonce is already in the cache.</span></span></summary>
        <returns><span data-ttu-id="917e2-115">如果指定的 Nonce 已在缓存列中，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="917e2-115"><see langword="true" /> if the specified nonce is already in the cache; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddNonce">
      <MemberSignature Language="C#" Value="public abstract bool TryAddNonce (byte[] nonce);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryAddNonce(unsigned int8[] nonce) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.NonceCache.TryAddNonce(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function TryAddNonce (nonce As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool TryAddNonce(cli::array &lt;System::Byte&gt; ^ nonce);" />
      <MemberSignature Language="F#" Value="abstract member TryAddNonce : byte[] -&gt; bool" Usage="nonceCache.TryAddNonce nonce" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonce" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="nonce"><span data-ttu-id="917e2-116">要添加到缓存中的 Nonce。</span><span class="sxs-lookup"><span data-stu-id="917e2-116">The nonce to add to the cache.</span></span></param>
        <summary><span data-ttu-id="917e2-117">在派生类中重写时，尝试向缓存添加指定 nouce。</span><span class="sxs-lookup"><span data-stu-id="917e2-117">When overridden in a derived class, attempts to add the specified nonce to the cache.</span></span></summary>
        <returns><span data-ttu-id="917e2-118">如果成功地向缓存添加了 nonce，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="917e2-118"><see langword="true" /> if the nonce was added to the cache; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
