<Type Name="ComponentGuaranteesAttribute" FullName="System.Runtime.Versioning.ComponentGuaranteesAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="60ceb8bc715b1bbf2beb6dda597223231e784b03" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86754282" /></Metadata><TypeSignature Language="C#" Value="public sealed class ComponentGuaranteesAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ComponentGuaranteesAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Versioning.ComponentGuaranteesAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ComponentGuaranteesAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentGuaranteesAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ComponentGuaranteesAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Runtime.Extensions" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Constructor | System.AttributeTargets.Delegate | System.AttributeTargets.Enum | System.AttributeTargets.Event | System.AttributeTargets.Interface | System.AttributeTargets.Method | System.AttributeTargets.Module | System.AttributeTargets.Property | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Constructor | System.AttributeTargets.Delegate | System.AttributeTargets.Enum | System.AttributeTargets.Event | System.AttributeTargets.Interface | System.AttributeTargets.Method | System.AttributeTargets.Module | System.AttributeTargets.Property | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=false)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>定义可以跨多个版本的组件、类型或类型成员的兼容性保证。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute>由组件和类库的开发人员用来指示其库的使用者可跨多个版本的兼容性级别。 它表示库或组件的未来版本不会中断现有客户端的保证级别。 然后，客户端可以使用 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> 来帮助设计自己的接口，以确保各版本之间的稳定性。  
  
> [!NOTE]
>  公共语言运行时 (CLR) 不以任何方式使用此属性。 它的值是记录组件作者的意图。 编译时工具还可以使用这些声明来检测编译时错误，否则将破坏声明的保证。  
  
## <a name="levels-of-compatibility"></a>兼容性级别  
 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute>支持以下级别的兼容性，由枚举的成员表示 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions> ：  
  
-   )  (版本间的兼容性 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None?displayProperty=nameWithType> 。 客户端预计将来的版本会中断现有客户端。 有关详细信息，请参阅本主题后面的 [无兼容性](#None) 部分。  
  
-   并行版本到版本的兼容性 (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide?displayProperty=nameWithType>) 。 当在同一个应用程序域中加载程序集的多个版本时，已对该组件进行测试。 通常，将来的版本可能会破坏兼容性。 但是，如果进行了重大更改，则不会修改旧版本，也不会与新版本共存。 并行执行是在进行重大更改时使现有的客户端正常运行所需的方法。 有关详细信息，请参阅本主题后面的并行 [兼容性](#SideBySide) 部分。  
  
-   稳定的版本到版本兼容性 (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable?displayProperty=nameWithType>) 。 将来的版本不应中断客户端，也不应执行并行的执行。 但是，如果客户端无意中中断，则可以使用并行执行来解决该问题。 有关详细信息，请参阅 [稳定兼容性](#Standard) 部分。  
  
-   交换版本到版本的兼容性 (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange?displayProperty=nameWithType>) 。 特别要注意的是确保将来的版本不会中断客户端。 客户端仅应在用于与其他相互独立部署的程序集通信的接口的签名中使用这些类型。 此类类型仅应有一个版本出现在给定的应用程序域中，这意味着，如果客户端中断，并行执行将无法修复兼容性问题。 有关详细信息，请参阅 [Exchange 类型兼容性](#Exchange) 部分。  
  
 以下部分更详细地讨论了每个保证级别。  
  
<a name="None"></a>   
### <a name="no-compatibility"></a>无兼容性  
 将组件标记为 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None?displayProperty=nameWithType> 表示提供程序不保证兼容性。 客户端应避免对公开的接口采用任何依赖项。 此级别的兼容性适用于实验性或公开的类型，但仅适用于始终更新的组件。 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> 显式指示外部组件不应使用此组件。  
  
<a name="SideBySide"></a>   
### <a name="side-by-side-compatibility"></a>并行兼容性  
 将组件标记为 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide?displayProperty=nameWithType> 指示在将程序集的多个版本加载到同一个应用程序域中时，组件已经过测试。 只要对版本号较高的程序集进行了重大更改，就可以使用这些更改。 绑定到旧版本的程序集的组件应继续绑定到旧版本，其他组件可以绑定到新版本。 还可以 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide> 通过破坏性修改旧版本来更新声明为的组件。  
  
<a name="Standard"></a>   
### <a name="stable-compatibility"></a>稳定兼容  
 将类型标记为 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable?displayProperty=nameWithType> 指示该类型应在不同版本之间保持稳定。 不过，也可以在同一应用程序域中存在稳定类型的并行版本。  
  
 稳定类型维护较高的二进制兼容性栏。 因此，提供程序应避免对稳定类型进行重大更改。 以下类型的更改是可接受的：  
  
-   将私有实例字段添加到类型或从类型中删除字段，前提是这不会破坏序列化格式。  
  
-   将不可序列化的类型更改为可序列化的类型。 但是 (，可序列化类型不能更改为不可序列化的类型。 )   
  
-   引发方法中新的、更多的派生异常。  
  
-   提高方法的性能。  
  
-   更改返回值的范围，前提是更改不会对大多数客户端产生不利影响。  
  
-   解决严重错误，前提是业务理由很高，而受到负面影响的客户端的数量较低。  
  
 由于稳定组件的新版本不会中断现有客户端，因此通常只需要一个应用程序域中的稳定组件版本。 但这并不是必需的，因为不会将稳定类型用作所有组件都同意的已知交换类型。 因此，如果稳定组件的新版本无意中中断了某些组件，并且其他组件需要新版本，则可以通过加载旧组件和新组件来解决此问题。  
  
 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> 提供比更强的版本兼容性保证 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> 。 它是多版本组件的常见默认值。  
  
 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> 可以与结合使用 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide> ，这表明，组件不会中断兼容性，但在给定的应用程序域中加载多个版本时，会对其进行测试。  
  
 将类型或方法标记为后 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> ，可以将其升级到 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange> 。 但是，不能将它降级到 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> 。  
  
<a name="Exchange"></a>   
### <a name="exchange-type-compatibility"></a>交换类型兼容性  
 将类型标记为 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange?displayProperty=nameWithType> 提供更强的版本兼容性保证 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> ，并且应应用于所有类型的最稳定。 这些类型旨在用于跨所有组件边界之间独立生成的组件之间的交换 (任意版本的 CLR 或组件或应用 () 程序的任何版本，在一个进程中跨应用程序域，在一个 CLR) 中跨应用程序域。 如果对 exchange 类型进行了重大更改，则无法通过加载类型的多个版本来修复此问题。  
  
 仅当问题非常严重 (例如严重的安全问题) 或破坏度非常 (低时，才应更改交换类型，也就是说，如果该行为已经以某种随机方式发生，则代码无法完全依赖于) 。 可以对 exchange 类型进行以下类型的更改：  
  
-   添加新接口定义的继承。  
  
-   添加新的私有方法，该方法实现新继承的接口定义的方法。  
  
-   添加新的静态字段。  
  
-   添加新的静态方法。  
  
-   添加新的非虚拟实例方法。  
  
 以下内容被视为重大更改，不允许用于基元类型：  
  
-   更改序列化格式。 需要版本容错序列化。  
  
-   添加或删除私有实例字段。 这会改变类型的序列化格式，并打破使用反射的客户端代码。  
  
-   更改类型的 serializability。 不可序列化的类型可能无法进行序列化，反之亦然。  
  
-   引发方法中的不同异常。  
  
-   更改方法的返回值的范围，除非成员定义引发了这种可能性，并且清楚地指出了客户端应如何处理未知值。  
  
-   修复大多数 bug。 该类型的使用者将依赖于现有行为。  
  
 在将组件、类型或成员标记为 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange> 保证后，不能将其更改为 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> 或 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> 。  
  
 通常情况下，exchange 类型是基本类型 (如 <xref:System.Int32> 和 <xref:System.String> .NET Framework) 和接口中的 (<xref:System.Collections.Generic.IList%601> <xref:System.Collections.Generic.IEnumerable%601>) ， <xref:System.IComparable%601> 它们通常用于公共接口。  
  
 Exchange 类型可能公开仅限也标记为兼容性的其他类型 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange> 。 此外，exchange 类型不能取决于易于更改的 Windows Api 的行为。  
  
## <a name="component-guarantees-a-summary"></a>组件保证：摘要  
 下表指示组件特性和用法如何影响其兼容性保证。  
  
|组件特征|Exchange|Stable|并行|无|  
|-------------------------------|--------------|------------|--------------------|----------|  
|可用于独立于版本的组件之间的接口。|Y|N|N|N|  
|可以通过独立于版本的程序集 (私下) 使用。|Y|Y|Y|N|  
|单个应用程序域中可以有多个版本。|N|Y|Y|Y|  
|可以进行重大更改|N|N|Y|Y|  
|经过测试，可将程序集的多个版本组合在一起。|N|N|Y|N|  
|可以就地进行重大更改。|N|N|N|Y|  
|可以进行非常安全的非重大服务更改。|Y|Y|Y|Y|  
  
## <a name="applying-the-attribute"></a>应用属性  
 您可以将应用于 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> 程序集、类型或类型成员。 其应用程序是分层的。 也就是说，默认情况下，由 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> 程序集级别的特性的属性定义的保证将定义程序集中的所有类型以及这些类型中的所有成员的保证。 同样，如果保证应用于类型，则默认情况下，它也适用于类型的每个成员。  
  
 通过将应用 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> 于单个类型和类型成员，可以重写此继承保证。 不过，保证重写默认值只能削弱保证;它们不能强化。 例如，如果程序集标记为 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> 保证，则其类型和成员没有兼容性保证，并且应用于程序集中的类型或成员的任何其他保证将被忽略。  
  
## <a name="testing-the-guarantee"></a>测试保证  
 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A>属性返回枚举的一个成员，该成员 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions> 用 <xref:System.FlagsAttribute> 特性标记。 这意味着你应通过屏蔽可能未知标志来测试你感兴趣的标志。 例如，下面的示例测试某个类型是否被标记为 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> 。  
  
 [!code-csharp[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/cs/apply1.cs#1)]
 [!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/vb/apply1.vb#1)]  
  
 下面的示例测试某一类型是否标记为 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> 或 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange> 。  
  
 [!code-csharp[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/cs/apply1.cs#2)]
 [!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/vb/apply1.vb#2)]  
  
 下面的示例测试可以是否将类型标记为 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> (，即既不 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable>) 也不 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange> 。  
  
 [!code-csharp[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/cs/apply1.cs#3)]
 [!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/vb/apply1.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Versioning.ComponentGuaranteesOptions" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentGuaranteesAttribute (System.Runtime.Versioning.ComponentGuaranteesOptions guarantees);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Runtime.Versioning.ComponentGuaranteesOptions guarantees) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Versioning.ComponentGuaranteesAttribute.#ctor(System.Runtime.Versioning.ComponentGuaranteesOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (guarantees As ComponentGuaranteesOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentGuaranteesAttribute(System::Runtime::Versioning::ComponentGuaranteesOptions guarantees);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Versioning.ComponentGuaranteesAttribute : System.Runtime.Versioning.ComponentGuaranteesOptions -&gt; System.Runtime.Versioning.ComponentGuaranteesAttribute" Usage="new System.Runtime.Versioning.ComponentGuaranteesAttribute guarantees" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="guarantees" Type="System.Runtime.Versioning.ComponentGuaranteesOptions" />
      </Parameters>
      <Docs>
        <param name="guarantees">用于指定保证的跨多个版本的兼容性级别的枚举值之一。</param>
        <summary>使用一个指示某个库、类型或成员保证的跨多个版本的兼容性级别的值初始化 <see cref="T:System.Runtime.Versioning.ComponentGuaranteesAttribute" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当对 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> 类进行实例化时，将参数的值 `guarantees` 分配给 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> 属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Guarantees">
      <MemberSignature Language="C#" Value="public System.Runtime.Versioning.ComponentGuaranteesOptions Guarantees { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Versioning.ComponentGuaranteesOptions Guarantees" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Guarantees As ComponentGuaranteesOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Versioning::ComponentGuaranteesOptions Guarantees { System::Runtime::Versioning::ComponentGuaranteesOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.Guarantees : System.Runtime.Versioning.ComponentGuaranteesOptions" Usage="System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Versioning.ComponentGuaranteesOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示保证的跨多个版本的库、类型或类型成员的兼容性级别。</summary>
        <value>用于指定保证的跨多个版本的兼容性级别的枚举值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 属性的值 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> 对应于 `guarantees` <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.%23ctor%2A> 构造函数的参数。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
