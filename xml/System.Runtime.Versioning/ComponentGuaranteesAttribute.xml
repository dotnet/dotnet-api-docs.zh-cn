<Type Name="ComponentGuaranteesAttribute" FullName="System.Runtime.Versioning.ComponentGuaranteesAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="79e9b5c1d25f21b977bf8acc9247cb76b2c28a51" /><Meta Name="ms.sourcegitcommit" Value="9a0316374d19cc78674994106d073aa5ef1bd5f3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/10/2020" /><Meta Name="ms.locfileid" Value="94463361" /></Metadata><TypeSignature Language="C#" Value="public sealed class ComponentGuaranteesAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ComponentGuaranteesAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Versioning.ComponentGuaranteesAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ComponentGuaranteesAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentGuaranteesAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ComponentGuaranteesAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Runtime.Extensions" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Constructor | System.AttributeTargets.Delegate | System.AttributeTargets.Enum | System.AttributeTargets.Event | System.AttributeTargets.Interface | System.AttributeTargets.Method | System.AttributeTargets.Module | System.AttributeTargets.Property | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Constructor | System.AttributeTargets.Delegate | System.AttributeTargets.Enum | System.AttributeTargets.Event | System.AttributeTargets.Interface | System.AttributeTargets.Method | System.AttributeTargets.Module | System.AttributeTargets.Property | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=false)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6771f-101">定义可以跨多个版本的组件、类型或类型成员的兼容性保证。</span><span class="sxs-lookup"><span data-stu-id="6771f-101">Defines the compatibility guarantee of a component, type, or type member that may span multiple versions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6771f-102"><xref:System.Runtime.Versioning.ComponentGuaranteesAttribute>由组件和类库的开发人员用来指示其库的使用者可跨多个版本的兼容性级别。</span><span class="sxs-lookup"><span data-stu-id="6771f-102">The <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> is used by developers of components and class libraries to indicate the level of compatibility that consumers of their libraries can expect across multiple versions.</span></span> <span data-ttu-id="6771f-103">它表示库或组件的未来版本不会中断现有客户端的保证级别。</span><span class="sxs-lookup"><span data-stu-id="6771f-103">It indicates the level of guarantee that a future version of the library or component will not break an existing client.</span></span> <span data-ttu-id="6771f-104">然后，客户端可以使用 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> 来帮助设计自己的接口，以确保各版本之间的稳定性。</span><span class="sxs-lookup"><span data-stu-id="6771f-104">Clients can then use the <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> as an aid in designing their own interfaces to ensure stability across versions.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6771f-105">公共语言运行时 (CLR) 不以任何方式使用此属性。</span><span class="sxs-lookup"><span data-stu-id="6771f-105">The common language runtime (CLR) does not use this attribute in any way.</span></span> <span data-ttu-id="6771f-106">它的值是记录组件作者的意图。</span><span class="sxs-lookup"><span data-stu-id="6771f-106">Its value lies in formally documenting the intent of the component author.</span></span> <span data-ttu-id="6771f-107">编译时工具还可以使用这些声明来检测编译时错误，否则将破坏声明的保证。</span><span class="sxs-lookup"><span data-stu-id="6771f-107">Compile-time tools can also use these declarations to detect compile-time errors that would otherwise break the declared guarantee.</span></span>  
  
## <a name="levels-of-compatibility"></a><span data-ttu-id="6771f-108">兼容性级别</span><span class="sxs-lookup"><span data-stu-id="6771f-108">Levels of Compatibility</span></span>  
 <span data-ttu-id="6771f-109"><xref:System.Runtime.Versioning.ComponentGuaranteesAttribute>支持以下级别的兼容性，由枚举的成员表示 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions> ：</span><span class="sxs-lookup"><span data-stu-id="6771f-109">The <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> supports the following levels of compatibility, which are represented by members of the <xref:System.Runtime.Versioning.ComponentGuaranteesOptions> enumeration:</span></span>  
  
-   <span data-ttu-id="6771f-110">)  (版本间的兼容性 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="6771f-110">No version-to-version compatibility (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None?displayProperty=nameWithType>).</span></span> <span data-ttu-id="6771f-111">客户端预计将来的版本会中断现有客户端。</span><span class="sxs-lookup"><span data-stu-id="6771f-111">The client can expect that future versions will break the existing client.</span></span> <span data-ttu-id="6771f-112">有关详细信息，请参阅本主题后面的 [无兼容性](#None) 部分。</span><span class="sxs-lookup"><span data-stu-id="6771f-112">For more information, see the [No Compatibility](#None) section later in this topic.</span></span>  
  
-   <span data-ttu-id="6771f-113">并行版本到版本的兼容性 (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide?displayProperty=nameWithType>) 。</span><span class="sxs-lookup"><span data-stu-id="6771f-113">Side-by-side version-to-version compatibility (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide?displayProperty=nameWithType>).</span></span> <span data-ttu-id="6771f-114">当在同一个应用程序域中加载程序集的多个版本时，已对该组件进行测试。</span><span class="sxs-lookup"><span data-stu-id="6771f-114">The component has been tested to work when more than one version of the assembly is loaded in the same application domain.</span></span> <span data-ttu-id="6771f-115">通常，将来的版本可能会破坏兼容性。</span><span class="sxs-lookup"><span data-stu-id="6771f-115">In general, future versions can break compatibility.</span></span> <span data-ttu-id="6771f-116">但是，如果进行了重大更改，则不会修改旧版本，也不会与新版本共存。</span><span class="sxs-lookup"><span data-stu-id="6771f-116">However, when breaking changes are made, the old version is not modified but exists alongside the new version.</span></span> <span data-ttu-id="6771f-117">并行执行是在进行重大更改时使现有的客户端正常运行所需的方法。</span><span class="sxs-lookup"><span data-stu-id="6771f-117">Side-by-side execution is the expected way to make existing clients work when breaking changes are made.</span></span> <span data-ttu-id="6771f-118">有关详细信息，请参阅本主题后面的并行 [兼容性](#SideBySide) 部分。</span><span class="sxs-lookup"><span data-stu-id="6771f-118">For more information, see the [Side-by-Side Compatibility](#SideBySide) section later in this topic.</span></span>  
  
-   <span data-ttu-id="6771f-119">稳定的版本到版本兼容性 (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable?displayProperty=nameWithType>) 。</span><span class="sxs-lookup"><span data-stu-id="6771f-119">Stable version-to-version compatibility (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable?displayProperty=nameWithType>).</span></span> <span data-ttu-id="6771f-120">将来的版本不应中断客户端，也不应执行并行的执行。</span><span class="sxs-lookup"><span data-stu-id="6771f-120">Future versions should not break the client, and side-by-side execution should not be needed.</span></span> <span data-ttu-id="6771f-121">但是，如果客户端无意中中断，则可以使用并行执行来解决该问题。</span><span class="sxs-lookup"><span data-stu-id="6771f-121">However, if the client is inadvertently broken, it may be possible to use side-by-side execution to fix the problem.</span></span> <span data-ttu-id="6771f-122">有关详细信息，请参阅 [稳定兼容性](#Standard) 部分。</span><span class="sxs-lookup"><span data-stu-id="6771f-122">For more information, see the [Stable Compatibility](#Standard) section.</span></span>  
  
-   <span data-ttu-id="6771f-123">交换版本到版本的兼容性 (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange?displayProperty=nameWithType>) 。</span><span class="sxs-lookup"><span data-stu-id="6771f-123">Exchange version-to-version compatibility (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange?displayProperty=nameWithType>).</span></span> <span data-ttu-id="6771f-124">特别要注意的是确保将来的版本不会中断客户端。</span><span class="sxs-lookup"><span data-stu-id="6771f-124">Extraordinary care is taken to ensure that future versions will not break the client.</span></span> <span data-ttu-id="6771f-125">客户端仅应在用于与其他相互独立部署的程序集通信的接口的签名中使用这些类型。</span><span class="sxs-lookup"><span data-stu-id="6771f-125">The client should use only these types in the signature of interfaces that are used for communication with other assemblies that are deployed independently of one another.</span></span> <span data-ttu-id="6771f-126">此类类型仅应有一个版本出现在给定的应用程序域中，这意味着，如果客户端中断，并行执行将无法修复兼容性问题。</span><span class="sxs-lookup"><span data-stu-id="6771f-126">Only one version of these types is expected to be in a given application domain, which means that if a client breaks, side-by-side execution cannot fix the compatibility problem.</span></span> <span data-ttu-id="6771f-127">有关详细信息，请参阅 [Exchange 类型兼容性](#Exchange) 部分。</span><span class="sxs-lookup"><span data-stu-id="6771f-127">For more information, see the [Exchange Type Compatibility](#Exchange) section.</span></span>  
  
 <span data-ttu-id="6771f-128">以下部分更详细地讨论了每个保证级别。</span><span class="sxs-lookup"><span data-stu-id="6771f-128">The following sections discuss each level of guarantee in greater detail.</span></span>  
  
<a name="None"></a>   
### <a name="no-compatibility"></a><span data-ttu-id="6771f-129">无兼容性</span><span class="sxs-lookup"><span data-stu-id="6771f-129">No Compatibility</span></span>  
 <span data-ttu-id="6771f-130">将组件标记为 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None?displayProperty=nameWithType> 表示提供程序不保证兼容性。</span><span class="sxs-lookup"><span data-stu-id="6771f-130">Marking a component as <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None?displayProperty=nameWithType> indicates that the provider makes no guarantees about compatibility.</span></span> <span data-ttu-id="6771f-131">客户端应避免对公开的接口采用任何依赖项。</span><span class="sxs-lookup"><span data-stu-id="6771f-131">Clients should avoid taking any dependencies on the exposed interfaces.</span></span> <span data-ttu-id="6771f-132">此级别的兼容性适用于实验性或公开的类型，但仅适用于始终更新的组件。</span><span class="sxs-lookup"><span data-stu-id="6771f-132">This level of compatibility is useful for types that are experimental or that are publicly exposed but are intended only for components that are always updated at the same time.</span></span> <span data-ttu-id="6771f-133"><xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> 显式指示外部组件不应使用此组件。</span><span class="sxs-lookup"><span data-stu-id="6771f-133"><xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> explicitly indicates that this component should not be used by external components.</span></span>  
  
<a name="SideBySide"></a>   
### <a name="side-by-side-compatibility"></a><span data-ttu-id="6771f-134">并行兼容性</span><span class="sxs-lookup"><span data-stu-id="6771f-134">Side-by-Side Compatibility</span></span>  
 <span data-ttu-id="6771f-135">将组件标记为 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide?displayProperty=nameWithType> 指示在将程序集的多个版本加载到同一个应用程序域中时，组件已经过测试。</span><span class="sxs-lookup"><span data-stu-id="6771f-135">Marking a component as <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide?displayProperty=nameWithType> indicates that the component has been tested to work when more than one version of the assembly is loaded into the same application domain.</span></span> <span data-ttu-id="6771f-136">只要对版本号较高的程序集进行了重大更改，就可以使用这些更改。</span><span class="sxs-lookup"><span data-stu-id="6771f-136">Breaking changes are allowed as long as they are made to the assembly that has the greater version number.</span></span> <span data-ttu-id="6771f-137">绑定到旧版本的程序集的组件应继续绑定到旧版本，其他组件可以绑定到新版本。</span><span class="sxs-lookup"><span data-stu-id="6771f-137">Components that are bound to an old version of the assembly are expected to continue to bind to the old version, and other components can bind to the new version.</span></span> <span data-ttu-id="6771f-138">还可以 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide> 通过破坏性修改旧版本来更新声明为的组件。</span><span class="sxs-lookup"><span data-stu-id="6771f-138">It is also possible to update a component that is declared to be <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide> by destructively modifying the old version.</span></span>  
  
<a name="Standard"></a>   
### <a name="stable-compatibility"></a><span data-ttu-id="6771f-139">稳定兼容</span><span class="sxs-lookup"><span data-stu-id="6771f-139">Stable Compatibility</span></span>  
 <span data-ttu-id="6771f-140">将类型标记为 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable?displayProperty=nameWithType> 指示该类型应在不同版本之间保持稳定。</span><span class="sxs-lookup"><span data-stu-id="6771f-140">Marking a type as <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable?displayProperty=nameWithType> indicates that the type should remain stable across versions.</span></span> <span data-ttu-id="6771f-141">不过，也可以在同一应用程序域中存在稳定类型的并行版本。</span><span class="sxs-lookup"><span data-stu-id="6771f-141">However, it may also be possible for side-by-side versions of a stable type to exist in the same application domain.</span></span>  
  
 <span data-ttu-id="6771f-142">稳定类型维护较高的二进制兼容性栏。</span><span class="sxs-lookup"><span data-stu-id="6771f-142">Stable types maintain a high binary compatibility bar.</span></span> <span data-ttu-id="6771f-143">因此，提供程序应避免对稳定类型进行重大更改。</span><span class="sxs-lookup"><span data-stu-id="6771f-143">Because of this, providers should avoid making breaking changes to stable types.</span></span> <span data-ttu-id="6771f-144">以下类型的更改是可接受的：</span><span class="sxs-lookup"><span data-stu-id="6771f-144">The following kinds of changes are acceptable:</span></span>  
  
-   <span data-ttu-id="6771f-145">将私有实例字段添加到类型或从类型中删除字段，前提是这不会破坏序列化格式。</span><span class="sxs-lookup"><span data-stu-id="6771f-145">Adding private instance fields to, or removing fields from, a type, as long as this does not break the serialization format.</span></span>  
  
-   <span data-ttu-id="6771f-146">将不可序列化的类型更改为可序列化的类型。</span><span class="sxs-lookup"><span data-stu-id="6771f-146">Changing a non-serializable type to a serializable type.</span></span> <span data-ttu-id="6771f-147">但是 (，可序列化类型不能更改为不可序列化的类型。 ) </span><span class="sxs-lookup"><span data-stu-id="6771f-147">(However, a serializable type cannot be changed to a non-serializable type.)</span></span>  
  
-   <span data-ttu-id="6771f-148">引发方法中新的、更多的派生异常。</span><span class="sxs-lookup"><span data-stu-id="6771f-148">Throwing new, more derived exceptions from a method.</span></span>  
  
-   <span data-ttu-id="6771f-149">提高方法的性能。</span><span class="sxs-lookup"><span data-stu-id="6771f-149">Improving the performance of a method.</span></span>  
  
-   <span data-ttu-id="6771f-150">更改返回值的范围，前提是更改不会对大多数客户端产生不利影响。</span><span class="sxs-lookup"><span data-stu-id="6771f-150">Changing the range of return values, as long as the change does not adversely affect the majority of clients.</span></span>  
  
-   <span data-ttu-id="6771f-151">解决严重错误，前提是业务理由很高，而受到负面影响的客户端的数量较低。</span><span class="sxs-lookup"><span data-stu-id="6771f-151">Fixing serious bugs, if the business justification is high and the number of adversely affected clients is low.</span></span>  
  
 <span data-ttu-id="6771f-152">由于稳定组件的新版本不会中断现有客户端，因此通常只需要一个应用程序域中的稳定组件版本。</span><span class="sxs-lookup"><span data-stu-id="6771f-152">Because new versions of stable components are not expected to break existing clients, generally only one version of a stable component is needed in an application domain.</span></span> <span data-ttu-id="6771f-153">但这并不是必需的，因为不会将稳定类型用作所有组件都同意的已知交换类型。</span><span class="sxs-lookup"><span data-stu-id="6771f-153">However, this is not a requirement, because stable types are not used as well-known exchange types that all components agree upon.</span></span> <span data-ttu-id="6771f-154">因此，如果稳定组件的新版本无意中中断了某些组件，并且其他组件需要新版本，则可以通过加载旧组件和新组件来解决此问题。</span><span class="sxs-lookup"><span data-stu-id="6771f-154">Therefore, if a new version of a stable component does inadvertently break some component, and if other components need the new version, it may be possible to fix the problem by loading both the old and new component.</span></span>  
  
 <span data-ttu-id="6771f-155"><xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> 提供比更强的版本兼容性保证 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> 。</span><span class="sxs-lookup"><span data-stu-id="6771f-155"><xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> provides a stronger version compatibility guarantee than <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None>.</span></span> <span data-ttu-id="6771f-156">它是多版本组件的常见默认值。</span><span class="sxs-lookup"><span data-stu-id="6771f-156">It is a common default for multi-version components.</span></span>  
  
 <span data-ttu-id="6771f-157"><xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> 可以与结合使用 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide> ，这表明，组件不会中断兼容性，但在给定的应用程序域中加载多个版本时，会对其进行测试。</span><span class="sxs-lookup"><span data-stu-id="6771f-157"><xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> can be combined with <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide>, which states that the component will not break compatibility but is tested to work when more than one version is loaded in a given application domain.</span></span>  
  
 <span data-ttu-id="6771f-158">将类型或方法标记为后 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> ，可以将其升级到 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange> 。</span><span class="sxs-lookup"><span data-stu-id="6771f-158">After a type or method is marked as <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable>, it can be upgraded to <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange>.</span></span> <span data-ttu-id="6771f-159">但是，不能将它降级到 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> 。</span><span class="sxs-lookup"><span data-stu-id="6771f-159">However, it cannot be downgraded to <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None>.</span></span>  
  
<a name="Exchange"></a>   
### <a name="exchange-type-compatibility"></a><span data-ttu-id="6771f-160">交换类型兼容性</span><span class="sxs-lookup"><span data-stu-id="6771f-160">Exchange Type Compatibility</span></span>  
 <span data-ttu-id="6771f-161">将类型标记为 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange?displayProperty=nameWithType> 提供更强的版本兼容性保证 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> ，并且应应用于所有类型的最稳定。</span><span class="sxs-lookup"><span data-stu-id="6771f-161">Marking a type as <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange?displayProperty=nameWithType> provides a stronger version compatibility guarantee than <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable>, and should be applied to the most stable of all types.</span></span> <span data-ttu-id="6771f-162">这些类型旨在用于跨所有组件边界之间独立生成的组件之间的交换 (任意版本的 CLR 或组件或应用 () 程序的任何版本，在一个进程中跨应用程序域，在一个 CLR) 中跨应用程序域。</span><span class="sxs-lookup"><span data-stu-id="6771f-162">These types are intended to be used for interchange between independently built components across all component boundaries in both time (any version of the CLR or any version of a component or application) and space (cross-process, cross-CLR in one process, cross-application domain in one CLR).</span></span> <span data-ttu-id="6771f-163">如果对 exchange 类型进行了重大更改，则无法通过加载类型的多个版本来修复此问题。</span><span class="sxs-lookup"><span data-stu-id="6771f-163">If a breaking change is made to an exchange type, it is impossible to fix the issue by loading multiple versions of the type.</span></span>  
  
 <span data-ttu-id="6771f-164">仅当问题非常严重 (例如严重的安全问题) 或破坏度非常 (低时，才应更改交换类型，也就是说，如果该行为已经以某种随机方式发生，则代码无法完全依赖于) 。</span><span class="sxs-lookup"><span data-stu-id="6771f-164">Exchange types should be changed only when a problem is very serious (such as a severe security issue) or the probability of breakage is very low (that is, if the behavior was already broken in a random way that code could not have conceivably taken a dependency on).</span></span> <span data-ttu-id="6771f-165">可以对 exchange 类型进行以下类型的更改：</span><span class="sxs-lookup"><span data-stu-id="6771f-165">You can make the following kinds of changes to an exchange type:</span></span>  
  
-   <span data-ttu-id="6771f-166">添加新接口定义的继承。</span><span class="sxs-lookup"><span data-stu-id="6771f-166">Add inheritance of new interface definitions.</span></span>  
  
-   <span data-ttu-id="6771f-167">添加新的私有方法，该方法实现新继承的接口定义的方法。</span><span class="sxs-lookup"><span data-stu-id="6771f-167">Add new private methods that implement the methods of newly inherited interface definitions.</span></span>  
  
-   <span data-ttu-id="6771f-168">添加新的静态字段。</span><span class="sxs-lookup"><span data-stu-id="6771f-168">Add new static fields.</span></span>  
  
-   <span data-ttu-id="6771f-169">添加新的静态方法。</span><span class="sxs-lookup"><span data-stu-id="6771f-169">Add new static methods.</span></span>  
  
-   <span data-ttu-id="6771f-170">添加新的非虚拟实例方法。</span><span class="sxs-lookup"><span data-stu-id="6771f-170">Add new non-virtual instance methods.</span></span>  
  
 <span data-ttu-id="6771f-171">以下内容被视为重大更改，不允许用于基元类型：</span><span class="sxs-lookup"><span data-stu-id="6771f-171">The following are considered breaking changes and are not allowed for primitive types:</span></span>  
  
-   <span data-ttu-id="6771f-172">更改序列化格式。</span><span class="sxs-lookup"><span data-stu-id="6771f-172">Changing serialization formats.</span></span> <span data-ttu-id="6771f-173">需要版本容错序列化。</span><span class="sxs-lookup"><span data-stu-id="6771f-173">Version-tolerant serialization is required.</span></span>  
  
-   <span data-ttu-id="6771f-174">添加或删除私有实例字段。</span><span class="sxs-lookup"><span data-stu-id="6771f-174">Adding or removing private instance fields.</span></span> <span data-ttu-id="6771f-175">这会改变类型的序列化格式，并打破使用反射的客户端代码。</span><span class="sxs-lookup"><span data-stu-id="6771f-175">This risks changing the serialization format of the type and breaking client code that uses reflection.</span></span>  
  
-   <span data-ttu-id="6771f-176">更改类型的 serializability。</span><span class="sxs-lookup"><span data-stu-id="6771f-176">Changing the serializability of a type.</span></span> <span data-ttu-id="6771f-177">不可序列化的类型可能无法进行序列化，反之亦然。</span><span class="sxs-lookup"><span data-stu-id="6771f-177">A non-serializable type may not be made serializable, and vice versa.</span></span>  
  
-   <span data-ttu-id="6771f-178">引发方法中的不同异常。</span><span class="sxs-lookup"><span data-stu-id="6771f-178">Throwing different exceptions from a method.</span></span>  
  
-   <span data-ttu-id="6771f-179">更改方法的返回值的范围，除非成员定义引发了这种可能性，并且清楚地指出了客户端应如何处理未知值。</span><span class="sxs-lookup"><span data-stu-id="6771f-179">Changing the range of a method's return values, unless the member definition raises this possibility and clearly indicates how clients should handle unknown values.</span></span>  
  
-   <span data-ttu-id="6771f-180">修复大多数 bug。</span><span class="sxs-lookup"><span data-stu-id="6771f-180">Fixing most bugs.</span></span> <span data-ttu-id="6771f-181">该类型的使用者将依赖于现有行为。</span><span class="sxs-lookup"><span data-stu-id="6771f-181">Consumers of the type will rely on the existing behavior.</span></span>  
  
 <span data-ttu-id="6771f-182">在将组件、类型或成员标记为 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange> 保证后，不能将其更改为 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> 或 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> 。</span><span class="sxs-lookup"><span data-stu-id="6771f-182">After a component, type, or member is marked with the <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange> guarantee, it cannot be changed to either <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> or <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None>.</span></span>  
  
 <span data-ttu-id="6771f-183">通常情况下，exchange 类型是基本类型 (如 <xref:System.Int32> 和 <xref:System.String> .NET Framework) 和接口中的 (<xref:System.Collections.Generic.IList%601> <xref:System.Collections.Generic.IEnumerable%601>) ， <xref:System.IComparable%601> 它们通常用于公共接口。</span><span class="sxs-lookup"><span data-stu-id="6771f-183">Typically, exchange types are the basic types (such as <xref:System.Int32> and <xref:System.String> in the .NET Framework) and interfaces (such as <xref:System.Collections.Generic.IList%601>, <xref:System.Collections.Generic.IEnumerable%601>, and <xref:System.IComparable%601>) that are commonly used in public interfaces.</span></span>  
  
 <span data-ttu-id="6771f-184">Exchange 类型可能公开仅限也标记为兼容性的其他类型 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange> 。</span><span class="sxs-lookup"><span data-stu-id="6771f-184">Exchange types may publicly expose only other types that are also marked with <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange> compatibility.</span></span> <span data-ttu-id="6771f-185">此外，exchange 类型不能取决于易于更改的 Windows Api 的行为。</span><span class="sxs-lookup"><span data-stu-id="6771f-185">In addition, exchange types cannot depend on the behavior of Windows APIs that are prone to change.</span></span>  
  
## <a name="component-guarantees-a-summary"></a><span data-ttu-id="6771f-186">组件保证：摘要</span><span class="sxs-lookup"><span data-stu-id="6771f-186">Component Guarantees: A Summary</span></span>  
 <span data-ttu-id="6771f-187">下表指示组件特性和用法如何影响其兼容性保证。</span><span class="sxs-lookup"><span data-stu-id="6771f-187">The following table indicates how a component's characteristics and usage affect its compatibility guarantee.</span></span>  
  
|<span data-ttu-id="6771f-188">组件特征</span><span class="sxs-lookup"><span data-stu-id="6771f-188">Component characteristics</span></span>|<span data-ttu-id="6771f-189">Exchange</span><span class="sxs-lookup"><span data-stu-id="6771f-189">Exchange</span></span>|<span data-ttu-id="6771f-190">Stable</span><span class="sxs-lookup"><span data-stu-id="6771f-190">Stable</span></span>|<span data-ttu-id="6771f-191">并行</span><span class="sxs-lookup"><span data-stu-id="6771f-191">Side-by-Side</span></span>|<span data-ttu-id="6771f-192">无</span><span class="sxs-lookup"><span data-stu-id="6771f-192">None</span></span>|  
|-------------------------------|--------------|------------|--------------------|----------|  
|<span data-ttu-id="6771f-193">可用于独立于版本的组件之间的接口。</span><span class="sxs-lookup"><span data-stu-id="6771f-193">Can be used in interfaces between components that version independently.</span></span>|<span data-ttu-id="6771f-194">Y</span><span class="sxs-lookup"><span data-stu-id="6771f-194">Y</span></span>|<span data-ttu-id="6771f-195">N</span><span class="sxs-lookup"><span data-stu-id="6771f-195">N</span></span>|<span data-ttu-id="6771f-196">N</span><span class="sxs-lookup"><span data-stu-id="6771f-196">N</span></span>|<span data-ttu-id="6771f-197">N</span><span class="sxs-lookup"><span data-stu-id="6771f-197">N</span></span>|  
|<span data-ttu-id="6771f-198">可以通过独立于版本的程序集 (私下) 使用。</span><span class="sxs-lookup"><span data-stu-id="6771f-198">Can be used (privately) by an assembly that versions independently.</span></span>|<span data-ttu-id="6771f-199">Y</span><span class="sxs-lookup"><span data-stu-id="6771f-199">Y</span></span>|<span data-ttu-id="6771f-200">Y</span><span class="sxs-lookup"><span data-stu-id="6771f-200">Y</span></span>|<span data-ttu-id="6771f-201">Y</span><span class="sxs-lookup"><span data-stu-id="6771f-201">Y</span></span>|<span data-ttu-id="6771f-202">N</span><span class="sxs-lookup"><span data-stu-id="6771f-202">N</span></span>|  
|<span data-ttu-id="6771f-203">单个应用程序域中可以有多个版本。</span><span class="sxs-lookup"><span data-stu-id="6771f-203">Can have multiple versions in a single application domain.</span></span>|<span data-ttu-id="6771f-204">N</span><span class="sxs-lookup"><span data-stu-id="6771f-204">N</span></span>|<span data-ttu-id="6771f-205">Y</span><span class="sxs-lookup"><span data-stu-id="6771f-205">Y</span></span>|<span data-ttu-id="6771f-206">Y</span><span class="sxs-lookup"><span data-stu-id="6771f-206">Y</span></span>|<span data-ttu-id="6771f-207">Y</span><span class="sxs-lookup"><span data-stu-id="6771f-207">Y</span></span>|  
|<span data-ttu-id="6771f-208">可以进行重大更改</span><span class="sxs-lookup"><span data-stu-id="6771f-208">Can make breaking changes</span></span>|<span data-ttu-id="6771f-209">N</span><span class="sxs-lookup"><span data-stu-id="6771f-209">N</span></span>|<span data-ttu-id="6771f-210">N</span><span class="sxs-lookup"><span data-stu-id="6771f-210">N</span></span>|<span data-ttu-id="6771f-211">Y</span><span class="sxs-lookup"><span data-stu-id="6771f-211">Y</span></span>|<span data-ttu-id="6771f-212">Y</span><span class="sxs-lookup"><span data-stu-id="6771f-212">Y</span></span>|  
|<span data-ttu-id="6771f-213">经过测试，可将程序集的多个版本组合在一起。</span><span class="sxs-lookup"><span data-stu-id="6771f-213">Tested to make certain multiple versions of the assembly can be loaded together.</span></span>|<span data-ttu-id="6771f-214">N</span><span class="sxs-lookup"><span data-stu-id="6771f-214">N</span></span>|<span data-ttu-id="6771f-215">N</span><span class="sxs-lookup"><span data-stu-id="6771f-215">N</span></span>|<span data-ttu-id="6771f-216">Y</span><span class="sxs-lookup"><span data-stu-id="6771f-216">Y</span></span>|<span data-ttu-id="6771f-217">N</span><span class="sxs-lookup"><span data-stu-id="6771f-217">N</span></span>|  
|<span data-ttu-id="6771f-218">可以就地进行重大更改。</span><span class="sxs-lookup"><span data-stu-id="6771f-218">Can make breaking changes in place.</span></span>|<span data-ttu-id="6771f-219">N</span><span class="sxs-lookup"><span data-stu-id="6771f-219">N</span></span>|<span data-ttu-id="6771f-220">N</span><span class="sxs-lookup"><span data-stu-id="6771f-220">N</span></span>|<span data-ttu-id="6771f-221">N</span><span class="sxs-lookup"><span data-stu-id="6771f-221">N</span></span>|<span data-ttu-id="6771f-222">Y</span><span class="sxs-lookup"><span data-stu-id="6771f-222">Y</span></span>|  
|<span data-ttu-id="6771f-223">可以进行非常安全的非重大服务更改。</span><span class="sxs-lookup"><span data-stu-id="6771f-223">Can make very safe non-breaking servicing changes in place.</span></span>|<span data-ttu-id="6771f-224">Y</span><span class="sxs-lookup"><span data-stu-id="6771f-224">Y</span></span>|<span data-ttu-id="6771f-225">Y</span><span class="sxs-lookup"><span data-stu-id="6771f-225">Y</span></span>|<span data-ttu-id="6771f-226">Y</span><span class="sxs-lookup"><span data-stu-id="6771f-226">Y</span></span>|<span data-ttu-id="6771f-227">Y</span><span class="sxs-lookup"><span data-stu-id="6771f-227">Y</span></span>|  
  
## <a name="applying-the-attribute"></a><span data-ttu-id="6771f-228">应用属性</span><span class="sxs-lookup"><span data-stu-id="6771f-228">Applying the Attribute</span></span>  
 <span data-ttu-id="6771f-229">您可以将应用于 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> 程序集、类型或类型成员。</span><span class="sxs-lookup"><span data-stu-id="6771f-229">You can apply the <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> to an assembly, a type, or a type member.</span></span> <span data-ttu-id="6771f-230">其应用程序是分层的。</span><span class="sxs-lookup"><span data-stu-id="6771f-230">Its application is hierarchical.</span></span> <span data-ttu-id="6771f-231">也就是说，默认情况下，由 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> 程序集级别的特性的属性定义的保证将定义程序集中的所有类型以及这些类型中的所有成员的保证。</span><span class="sxs-lookup"><span data-stu-id="6771f-231">That is, by default, the guarantee defined by the <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> property of the attribute at the assembly level defines the guarantee of all types in the assembly and all members in those types.</span></span> <span data-ttu-id="6771f-232">同样，如果保证应用于类型，则默认情况下，它也适用于类型的每个成员。</span><span class="sxs-lookup"><span data-stu-id="6771f-232">Similarly, if the guarantee is applied to the type, by default it also applies to each member of the type.</span></span>  
  
 <span data-ttu-id="6771f-233">通过将应用 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> 于单个类型和类型成员，可以重写此继承保证。</span><span class="sxs-lookup"><span data-stu-id="6771f-233">This inherited guarantee can be overridden by applying the <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> to individual types and type members.</span></span> <span data-ttu-id="6771f-234">不过，保证重写默认值只能削弱保证;它们不能强化。</span><span class="sxs-lookup"><span data-stu-id="6771f-234">However, guarantees that override the default can only weaken the guarantee; they cannot strengthen it.</span></span> <span data-ttu-id="6771f-235">例如，如果程序集标记为 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> 保证，则其类型和成员没有兼容性保证，并且应用于程序集中的类型或成员的任何其他保证将被忽略。</span><span class="sxs-lookup"><span data-stu-id="6771f-235">For example, if an assembly is marked with the <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> guarantee, its types and members have no compatibility guarantee, and any other guarantee that is applied to types or members in the assembly is ignored.</span></span>  
  
## <a name="testing-the-guarantee"></a><span data-ttu-id="6771f-236">测试保证</span><span class="sxs-lookup"><span data-stu-id="6771f-236">Testing the Guarantee</span></span>  
 <span data-ttu-id="6771f-237"><xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A>属性返回枚举的一个成员，该成员 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions> 用 <xref:System.FlagsAttribute> 特性标记。</span><span class="sxs-lookup"><span data-stu-id="6771f-237">The <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> property returns a member of the <xref:System.Runtime.Versioning.ComponentGuaranteesOptions> enumeration, which is marked with the <xref:System.FlagsAttribute> attribute.</span></span> <span data-ttu-id="6771f-238">这意味着你应通过屏蔽可能未知标志来测试你感兴趣的标志。</span><span class="sxs-lookup"><span data-stu-id="6771f-238">This means that you should test for the flag that you are interested in by masking away potentially unknown flags.</span></span> <span data-ttu-id="6771f-239">例如，下面的示例测试某个类型是否被标记为 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> 。</span><span class="sxs-lookup"><span data-stu-id="6771f-239">For example, the following example tests whether a type is marked as <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable>.</span></span>  
  
 [!code-csharp[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/cs/apply1.cs#1)]
 [!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/vb/apply1.vb#1)]  
  
 <span data-ttu-id="6771f-240">下面的示例测试某一类型是否标记为 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> 或 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange> 。</span><span class="sxs-lookup"><span data-stu-id="6771f-240">The following example tests whether a type is marked as <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> or <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange>.</span></span>  
  
 [!code-csharp[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/cs/apply1.cs#2)]
 [!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/vb/apply1.vb#2)]  
  
 <span data-ttu-id="6771f-241">下面的示例测试可以是否将类型标记为 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> (，即既不 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable>) 也不 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange> 。</span><span class="sxs-lookup"><span data-stu-id="6771f-241">The following example tests wither a type is marked as <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> (that is, neither <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> nor <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange>).</span></span>  
  
 [!code-csharp[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/cs/apply1.cs#3)]
 [!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/vb/apply1.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Versioning.ComponentGuaranteesOptions" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentGuaranteesAttribute (System.Runtime.Versioning.ComponentGuaranteesOptions guarantees);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Runtime.Versioning.ComponentGuaranteesOptions guarantees) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Versioning.ComponentGuaranteesAttribute.#ctor(System.Runtime.Versioning.ComponentGuaranteesOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (guarantees As ComponentGuaranteesOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentGuaranteesAttribute(System::Runtime::Versioning::ComponentGuaranteesOptions guarantees);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Versioning.ComponentGuaranteesAttribute : System.Runtime.Versioning.ComponentGuaranteesOptions -&gt; System.Runtime.Versioning.ComponentGuaranteesAttribute" Usage="new System.Runtime.Versioning.ComponentGuaranteesAttribute guarantees" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="guarantees" Type="System.Runtime.Versioning.ComponentGuaranteesOptions" />
      </Parameters>
      <Docs>
        <param name="guarantees"><span data-ttu-id="6771f-242">用于指定保证的跨多个版本的兼容性级别的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="6771f-242">One of the enumeration values that specifies the level of compatibility that is guaranteed across multiple versions.</span></span></param>
        <summary><span data-ttu-id="6771f-243">使用一个指示某个库、类型或成员保证的跨多个版本的兼容性级别的值初始化 <see cref="T:System.Runtime.Versioning.ComponentGuaranteesAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="6771f-243">Initializes a new instance of the <see cref="T:System.Runtime.Versioning.ComponentGuaranteesAttribute" /> class with a value that indicates a library, type, or member's guaranteed level of compatibility across multiple versions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6771f-244">当对 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> 类进行实例化时，将参数的值 `guarantees` 分配给 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="6771f-244">When the <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> class is instantiated, the value of the `guarantees` parameter is assigned to the <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Guarantees">
      <MemberSignature Language="C#" Value="public System.Runtime.Versioning.ComponentGuaranteesOptions Guarantees { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Versioning.ComponentGuaranteesOptions Guarantees" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Guarantees As ComponentGuaranteesOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Versioning::ComponentGuaranteesOptions Guarantees { System::Runtime::Versioning::ComponentGuaranteesOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.Guarantees : System.Runtime.Versioning.ComponentGuaranteesOptions" Usage="System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Versioning.ComponentGuaranteesOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6771f-245">获取一个值，该值指示保证的跨多个版本的库、类型或类型成员的兼容性级别。</span><span class="sxs-lookup"><span data-stu-id="6771f-245">Gets a value that indicates the guaranteed level of compatibility of a library, type, or type member that spans multiple versions.</span></span></summary>
        <value><span data-ttu-id="6771f-246">用于指定保证的跨多个版本的兼容性级别的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="6771f-246">One of the enumeration values that specifies the level of compatibility that is guaranteed across multiple versions.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6771f-247">属性的值 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> 对应于 `guarantees` <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.%23ctor%2A> 构造函数的参数。</span><span class="sxs-lookup"><span data-stu-id="6771f-247">The value of the <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> property corresponds to the `guarantees` parameter of the <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
