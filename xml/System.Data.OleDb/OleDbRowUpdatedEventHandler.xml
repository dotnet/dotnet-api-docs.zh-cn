<Type Name="OleDbRowUpdatedEventHandler" FullName="System.Data.OleDb.OleDbRowUpdatedEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4a76baae0eb8e9778ed3e860512100b99e0243f7" /><Meta Name="ms.sourcegitcommit" Value="9506e50ec7beb4fa30206b9840dc546b035a6600" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/23/2020" /><Meta Name="ms.locfileid" Value="83965354" /></Metadata><TypeSignature Language="C#" Value="public delegate void OleDbRowUpdatedEventHandler(object sender, OleDbRowUpdatedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed OleDbRowUpdatedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbRowUpdatedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub OleDbRowUpdatedEventHandler(sender As Object, e As OleDbRowUpdatedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void OleDbRowUpdatedEventHandler(System::Object ^ sender, OleDbRowUpdatedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type OleDbRowUpdatedEventHandler = delegate of obj * OleDbRowUpdatedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.OleDb</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Data.OleDb.OleDbRowUpdatedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="484d3-101">事件源。</span><span class="sxs-lookup"><span data-stu-id="484d3-101">The source of the event.</span></span></param>
    <param name="e"><span data-ttu-id="484d3-102">包含事件数据的 <see cref="T:System.Data.OleDb.OleDbRowUpdatedEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="484d3-102">The <see cref="T:System.Data.OleDb.OleDbRowUpdatedEventArgs" /> that contains the event data.</span></span></param>
    <summary><span data-ttu-id="484d3-103">表示将要处理 <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> 的 <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated" /> 事件的方法。</span><span class="sxs-lookup"><span data-stu-id="484d3-103">Represents the method that will handle the <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated" /> event of an <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="484d3-104">处理程序不需要执行任何操作，你的代码应避免生成异常或允许异常传播到调用方法。</span><span class="sxs-lookup"><span data-stu-id="484d3-104">The handler is not required to perform any action, and your code should avoid generating exceptions or allowing exceptions to propagate to the calling method.</span></span> <span data-ttu-id="484d3-105">任何访问调用方的异常都将被忽略。</span><span class="sxs-lookup"><span data-stu-id="484d3-105">Any exceptions that do reach the caller are ignored.</span></span>  
  
 <span data-ttu-id="484d3-106">创建 <xref:System.Data.OleDb.OleDbRowUpdatedEventArgs> 委托时，需要标识将要处理该事件的方法。</span><span class="sxs-lookup"><span data-stu-id="484d3-106">When you create an <xref:System.Data.OleDb.OleDbRowUpdatedEventArgs> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="484d3-107">若要将事件与事件处理程序关联，请将该委托的一个实例添加到事件中。</span><span class="sxs-lookup"><span data-stu-id="484d3-107">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="484d3-108">除非移除了该委托，否则每当发生该事件时就会调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="484d3-108">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="484d3-109">有关事件处理程序委托的详细信息，请参阅[处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="484d3-109">For more information about event handler delegates, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>
