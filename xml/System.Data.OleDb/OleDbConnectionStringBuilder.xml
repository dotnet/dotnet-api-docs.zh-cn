<Type Name="OleDbConnectionStringBuilder" FullName="System.Data.OleDb.OleDbConnectionStringBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1160aa4dc0109335a9992a6ae0e6fbc36d3935d1" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89720124" /></Metadata><TypeSignature Language="C#" Value="public sealed class OleDbConnectionStringBuilder : System.Data.Common.DbConnectionStringBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbConnectionStringBuilder extends System.Data.Common.DbConnectionStringBuilder" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbConnectionStringBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbConnectionStringBuilder&#xA;Inherits DbConnectionStringBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbConnectionStringBuilder sealed : System::Data::Common::DbConnectionStringBuilder" />
  <TypeSignature Language="F#" Value="type OleDbConnectionStringBuilder = class&#xA;    inherit DbConnectionStringBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed OleDbConnectionStringBuilder extends System.Data.Common.DbConnectionStringBuilder" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.OleDb</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnectionStringBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DefaultProperty("Provider")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultProperty("Provider")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Data.OleDb.OleDbConnectionStringBuilder/OleDbConnectionStringBuilderConverter))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Data.OleDb.OleDbConnectionStringBuilder/OleDbConnectionStringBuilderConverter))&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>为创建和管理由 <see cref="T:System.Data.OleDb.OleDbConnection" /> 类使用的连接字符串的内容提供了一种简单方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 通过连接字符串生成器，开发人员可以使用该类的属性和方法，以编程方式创建语法正确的连接字符串以及分析和重新生成现有的连接字符串。 连接字符串生成器提供了与 OLE DB 连接所允许的已知键/值对相对应的强类型属性，开发人员可以为任何其他连接字符串值添加任意键/值对。 <xref:System.Data.OleDb.OleDbConnectionStringBuilder> 类实现 <xref:System.ComponentModel.ICustomTypeDescriptor> 接口。 这意味着该类在设计时适用于 Visual Studio .NET 设计器。 当开发人员使用设计器在 Visual Studio .NET 中生成强类型化数据集和强类型连接时，强类型连接字符串生成器类将显示与其类型关联的属性，并且还将具有可映射已知密钥的公共值的转换器。

 需要在应用程序中创建连接字符串的开发人员可以使用 <xref:System.Data.OleDb.OleDbConnectionStringBuilder> 类生成和修改连接字符串。 使用该类还可以轻松管理存储在应用程序配置文件中的连接字符串。 <xref:System.Data.OleDb.OleDbConnectionStringBuilder>仅对有限的已知键/值对集执行检查。 因此，此类可用于创建无效的连接字符串。 下表列出了类中的已知键及其相应的属性 <xref:System.Data.OleDb.OleDbConnectionStringBuilder> 及其默认值。 除了这些特定值外，开发人员也可以将任何键/值对添加到该实例中包含的集合中 <xref:System.Data.OleDb.OleDbConnectionStringBuilder> ：

|键|properties|默认值|
|---------|--------------|-------------------|
|文件名|<xref:System.Data.OleDb.OleDbConnectionStringBuilder.FileName%2A>|""|
|提供程序|<xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A>|""|
|数据源|<xref:System.Data.OleDb.OleDbConnectionStringBuilder.DataSource%2A>|""|
|持久性安全信息|<xref:System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo%2A>|错误|
|OLE DB 服务|<xref:System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices%2A>|-13|

 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Item%2A>属性处理尝试插入恶意条目。 例如，下面的代码使用 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Item%2A> 索引器 (的默认属性（在 c # 中） ) 正确地转义嵌套的键/值对：

```vb
Dim builder As _
    New System.Data.OleDb.OleDbConnectionStringBuilder
builder("Provider") = "Microsoft.Jet.OLEDB.4.0"
builder("Data Source") = "C:\Sample.mdb"
builder("User Id") = "Admin;NewValue=Bad"
```

```csharp
System.Data.OleDb.OleDbConnectionStringBuilder builder =
    new System.Data.OleDb.OleDbConnectionStringBuilder();
builder["Provider"] = "Microsoft.Jet.OLEDB.4.0";
builder["Data Source"] = "C:\\Sample.mdb";
builder["User Id"] = "Admin;NewValue=Bad";
```

 结果为以下连接字符串，该字符串以安全方式处理无效值：

```
Provider=Microsoft.Jet.OLEDB.4.0;Data Source=C:\Sample.mdb;User ID="Admin;NewValue=Bad"
```



## Examples
 下面的控制台应用程序为多个 OLE DB 数据库生成连接字符串。 首先，该示例将创建一个 Microsoft Access 数据库的连接字符串，然后创建一个用于 IBM DB2 数据库的连接字符串。 该示例还分析了现有的连接字符串，并演示了操作连接字符串内容的各种方式。

> [!NOTE]
>  该示例包括一个密码以演示 <xref:System.Data.OleDb.OleDbConnectionStringBuilder> 如何使用连接字符串。 在您的应用程序中，建议使用 Windows 身份验证。 如果必须使用密码，请不要在你的应用程序中包括硬编码的密码。

 [!code-csharp[DataWorks OleDbConnectionStringBuilder#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder/CS/source.cs#1)]
 [!code-vb[DataWorks OleDbConnectionStringBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder/VB/source.vb#1)]

 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/framework/data/adonet/connection-string-builders">连接字符串生成器</related>
    <related type="Article" href="/dotnet/framework/data/adonet/connection-strings">在 ADO.NET 中的连接字符串</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> 类的新实例。</summary>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-strings">在 ADO.NET 中的连接字符串</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbConnectionStringBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnectionStringBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbConnectionStringBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-string-builders">连接字符串生成器</related>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-strings">在 ADO.NET 中的连接字符串</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbConnectionStringBuilder (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnectionStringBuilder.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbConnectionStringBuilder(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.OleDb.OleDbConnectionStringBuilder : string -&gt; System.Data.OleDb.OleDbConnectionStringBuilder" Usage="new System.Data.OleDb.OleDbConnectionStringBuilder connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">对象内部连接信息的基础。 分析为键/值对。</param>
        <summary>初始化 <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> 类的新实例。 所提供的连接字符串为实例的内部连接信息提供数据。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 设置 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A> 属性时，可以通过将 <xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A> 属性设置) 或通过将连接字符串作为参数传递给构造函数来直接 (，这可能会影响该实例中包含的键/值对集 <xref:System.Data.OleDb.OleDbConnectionStringBuilder> 。 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A>例如，将属性设置为 "sqloledb" 会添加所有标准 SQL 连接字符串属性。 有关此行为的演示，请参阅本主题中的示例。

 对于某些访问接口，在构造函数中分配连接字符串 <xref:System.Data.OleDb.OleDbConnectionStringBuilder> 会导致重新排列所提供的键/值对的顺序。



## Examples
 下面的示例创建多个 <xref:System.Data.OleDb.OleDbConnectionStringBuilder> 实例，并将不同的连接字符串传递给每个事例中的构造函数。 注意设置与连接关联的提供程序如何在对象的集合中更改预定义的键/值对集。

> [!NOTE]
>  该示例包括一个密码以演示 <xref:System.Data.OleDb.OleDbConnectionStringBuilder> 如何使用连接字符串。 在您的应用程序中，建议使用 Windows 身份验证。 如果必须使用密码，请不要在你的应用程序中包括硬编码的密码。

 [!code-csharp[DataWorks OleDbConnectionStringBuilder.Ctor#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.Ctor/CS/source.cs#1)]
 [!code-vb[DataWorks OleDbConnectionStringBuilder.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.Ctor/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">连接字符串的格式错误（可能是键/值对中缺少必需的“=”）。</exception>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-string-builders">连接字符串生成器</related>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-strings">在 ADO.NET 中的连接字符串</related>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public override void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnectionStringBuilder.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Clear();" />
      <MemberSignature Language="F#" Value="override this.Clear : unit -&gt; unit" Usage="oleDbConnectionStringBuilder.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>清除 <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> 实例的内容。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Clear%2A>方法将删除中的所有键/值对 <xref:System.Data.OleDb.OleDbConnectionStringBuilder> ，并将所有相应的属性重置为其默认值。 这包括将 <xref:System.Data.Common.DbConnectionStringBuilder.Count%2A> 属性设置为 0，并将 <xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A> 属性设置为空字符串。



## Examples
 下面的示例演示调用方法的效果 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Clear%2A> 。 此示例用一些键/值对填充 <xref:System.Data.OleDb.OleDbConnectionStringBuilder>，然后调用 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Clear%2A> 方法并显示结果。

> [!NOTE]
>  该示例包括一个密码以演示 <xref:System.Data.OleDb.OleDbConnectionStringBuilder> 如何使用连接字符串。 在您的应用程序中，建议使用 Windows 身份验证。 如果必须使用密码，请不要在你的应用程序中包括硬编码的密码。

 [!code-csharp[DataWorks OleDbConnectionStringBuilder.Clear#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.Clear/CS/source.cs#1)]
 [!code-vb[DataWorks OleDbConnectionStringBuilder.Clear#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.Clear/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-string-builders">连接字符串生成器</related>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-strings">在 ADO.NET 中的连接字符串</related>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public override bool ContainsKey (string keyword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ContainsKey(string keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnectionStringBuilder.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ContainsKey (keyword As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ContainsKey(System::String ^ keyword);" />
      <MemberSignature Language="F#" Value="override this.ContainsKey : string -&gt; bool" Usage="oleDbConnectionStringBuilder.ContainsKey keyword" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyword">要在 <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> 中定位的键。</param>
        <summary>确定 <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> 是否包含特定键。</summary>
        <returns>如果 <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> 包含具有指定键的元素，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 虽然设置 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A> 属性可能会为提供程序隐式填充适当的键/值对，但 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.ContainsKey%2A> 方法不会 `true` 为隐式提供的键返回。 此方法 `true` 只为显式提供的键返回。



## Examples
 下面的示例创建一个 <xref:System.Data.OleDb.OleDbConnectionStringBuilder> 实例，并设置其一些属性，然后尝试通过调用方法来确定对象中是否存在不同的键 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.ContainsKey%2A> 。

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="keyword" /> 为 null（在 Visual Basic 中为 <see langword="Nothing" />）。</exception>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-string-builders">连接字符串生成器</related>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-strings">在 ADO.NET 中的连接字符串</related>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public string DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnectionStringBuilder.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataSource { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : string with get, set" Usage="System.Data.OleDb.OleDbConnectionStringBuilder.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DisplayName("Data Source")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DisplayName("Data Source")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要连接到的数据源的名称。</summary>
        <value>为 <see cref="P:System.Data.OleDb.OleDbConnectionStringBuilder.DataSource" /> 属性的值，或者，如果未提供任何值，则为 <see langword="String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 如果在您尝试设置此属性时传入的值为 null，则将重置 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.DataSource%2A> 属性。 如果尚未设置值，而开发人员尝试检索属性，则返回值为 `String.Empty` 。 此属性与连接字符串中的 "Data Source" 键相对应。



## Examples
 下面的示例控制台应用程序创建一个新的 <xref:System.Data.OleDb.OleDbConnectionStringBuilder> 实例，然后设置 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.DataSource%2A> 和 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A> 属性。 最后，该示例创建一个新的 <xref:System.Data.OleDb.OleDbConnection> 实例，并使用该对象连接到所指示的数据存储区。

 [!code-csharp[DataWorks OleDbConnectionStringBuilder.DataSource#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.DataSource/CS/source.cs#1)]
 [!code-vb[DataWorks OleDbConnectionStringBuilder.DataSource#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.DataSource/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-string-builders">连接字符串生成器</related>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-strings">在 ADO.NET 中的连接字符串</related>
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnectionStringBuilder.FileName" />
      <MemberSignature Language="VB.NET" Value="Public Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FileName : string with get, set" Usage="System.Data.OleDb.OleDbConnectionStringBuilder.FileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DisplayName("File Name")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DisplayName("File Name")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于连接到数据源的通用数据链接 (UDL) 文件的名称。</summary>
        <value>为 <see cref="P:System.Data.OleDb.OleDbConnectionStringBuilder.FileName" /> 属性的值，或者，如果未提供任何值，则为 <see langword="String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 如果在您尝试设置此属性时传入的值为 null，则将重置 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.FileName%2A> 属性。 如果尚未设置值，而开发人员尝试检索属性，则返回值为 `String.Empty` 。 此属性与连接字符串中的 "FileName" 键相对应。

 设置此属性不会使 <xref:System.Data.OleDb.OleDbConnectionStringBuilder> 实例读取所引用文件的内容，即使该文件存在并包含有效的连接信息。 如果设置此属性，则除了指示连接到数据源时要读取的文件外，不会产生任何影响。

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-string-builders">连接字符串生成器</related>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-strings">在 ADO.NET 中的连接字符串</related>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="protected override void GetProperties (System.Collections.Hashtable propertyDescriptors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetProperties(class System.Collections.Hashtable propertyDescriptors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnectionStringBuilder.GetProperties(System.Collections.Hashtable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetProperties (propertyDescriptors As Hashtable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetProperties(System::Collections::Hashtable ^ propertyDescriptors);" />
      <MemberSignature Language="F#" Value="override this.GetProperties : System.Collections.Hashtable -&gt; unit" Usage="oleDbConnectionStringBuilder.GetProperties propertyDescriptors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDescriptors" Type="System.Collections.Hashtable" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="propertyDescriptors">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string keyword] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnectionStringBuilder.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides Property Item(keyword As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ keyword); void set(System::String ^ keyword, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Data.OleDb.OleDbConnectionStringBuilder.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyword">要获取或设置的项的键。</param>
        <summary>获取或设置与指定的键关联的值。 在 C# 中，此属性为索引器。</summary>
        <value>与指定的键相关联的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 由于设置 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A> 属性可能会将相应的项添加到键/值对的集合中 (根据特定提供程序) 的行为，因此您可能能够检索尚未显式设置的键的值。 例如，一旦您将 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A> 属性设置为 "sqloledb"，就可以检索 "WORKSTATION ID" 值，即使您并未自行设置。 有关演示，请参阅本主题中的示例。



## Examples
 下面的示例使用 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Item%2A> c # )  (索引器的属性来检索和设置键/值对集合中的值。 请注意，在这种情况下，设置提供程序还为与所选提供程序关联的所有键/值对提供默认值。

 [!code-csharp[DataWorks OleDbConnectionStringBuilder.Item#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.Item/CS/source.cs#1)]
 [!code-vb[DataWorks OleDbConnectionStringBuilder.Item#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.Item/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">连接字符串的格式错误（可能是键/值对中缺少必需的“=”）。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="keyword" /> 为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</exception>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-string-builders">连接字符串生成器</related>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-strings">在 ADO.NET 中的连接字符串</related>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public override System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnectionStringBuilder.Keys" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.ICollection" Usage="System.Data.OleDb.OleDbConnectionStringBuilder.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取包含 <see cref="T:System.Collections.ICollection" /> 中的键的 <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" />。</summary>
        <value>一个 <see cref="T:System.Collections.ICollection" />，它包含 <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> 中的键。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Collections.ICollection> 中的值的顺序未指定，但与 <xref:System.Collections.ICollection> 属性返回的 <xref:System.Data.Common.DbConnectionStringBuilder.Values%2A> 中的关联值顺序相同。



## Examples
 以下控制台应用程序示例新建一个 <xref:System.Data.OleDb.OleDbConnectionStringBuilder>。 该代码循环访问显示键/值对的 <xref:System.Collections.ICollection> 属性返回的 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Keys%2A>。

> [!NOTE]
>  该示例包括一个密码以演示 <xref:System.Data.OleDb.OleDbConnectionStringBuilder> 如何使用连接字符串。 在您的应用程序中，建议使用 Windows 身份验证。 如果必须使用密码，请不要在你的应用程序中包括硬编码的密码。

 [!code-csharp[DataWorks OleDbConnectionStringBuilder.Keys#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.Keys/CS/source.cs#1)]
 [!code-vb[DataWorks OleDbConnectionStringBuilder.Keys#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.Keys/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-string-builders">连接字符串生成器</related>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-strings">在 ADO.NET 中的连接字符串</related>
      </Docs>
    </Member>
    <Member MemberName="OleDbServices">
      <MemberSignature Language="C#" Value="public int OleDbServices { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OleDbServices" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices" />
      <MemberSignature Language="VB.NET" Value="Public Property OleDbServices As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int OleDbServices { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.OleDbServices : int with get, set" Usage="System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DisplayName("OLE DB Services")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DisplayName("OLE DB Services")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Data.OleDb.OleDbConnectionStringBuilder/OleDbServicesConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Data.OleDb.OleDbConnectionStringBuilder/OleDbServicesConverter))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要为连接字符串内的 OLE DB Services 键传递的值。</summary>
        <value>与连接字符串中的 "OLE DB 服务" 键相对应的值。 默认情况下，该值为 -13。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 连接字符串中的 OLE DB 服务密钥定义了允许开发人员启用或禁用 OLE DB 服务的值的组合。 属性包含值的按位组合，如 OLE DB 文档中所述。 有关此属性的相应值的详细信息，请参阅 OLE DB 程序员参考，特别是 "替代提供程序服务默认值"。 此属性的默认值为-13。 这对应于资源池、自动事务登记、会话级聚合和无客户端游标引擎的请求。



## Examples
 下面的示例通过 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices%2A> 两种方式与属性一起使用。 首先，它将一个值直接分配给属性，演示此操作对生成的连接字符串产生的影响。 然后，该示例将清除 <xref:System.Data.OleDb.OleDbConnectionStringBuilder> ，并为 OLE DB 服务密钥指定一个包含值的完整连接字符串。 此步骤演示如何设置连接字符串中的值也会修改该 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices%2A> 属性。

 [!code-csharp[DataWorks OleDbConnectionStringBuilder.OleDbServices#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.OleDbServices/CS/source.cs#1)]
 [!code-vb[DataWorks OleDbConnectionStringBuilder.OleDbServices#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.OleDbServices/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-string-builders">连接字符串生成器</related>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-strings">在 ADO.NET 中的连接字符串</related>
      </Docs>
    </Member>
    <Member MemberName="PersistSecurityInfo">
      <MemberSignature Language="C#" Value="public bool PersistSecurityInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PersistSecurityInfo" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property PersistSecurityInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PersistSecurityInfo { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PersistSecurityInfo : bool with get, set" Usage="System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DisplayName("Persist Security Info")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DisplayName("Persist Security Info")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个布尔值，该值指示如果连接是打开的或者一直处于打开状态，那么安全敏感信息（如密码）是否作为连接的一部分返回。</summary>
        <value>为 <see cref="P:System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo" /> 属性的值，或者，如果未提供任何值，则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此属性对应于连接字符串中的 "持久性安全信息" 密钥。



## Examples
 下面的示例通过 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo%2A> 两种方式与属性一起使用。 首先，它将一个值直接分配给属性，演示此操作对生成的连接字符串产生的影响。 然后，该示例清除 <xref:System.Data.OleDb.OleDbConnectionStringBuilder> 并分配一个完整的连接字符串，其中包含 "持久性安全信息" 键的值。 此步骤演示如何设置连接字符串中的值也会修改该 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo%2A> 属性。

 [!code-csharp[DataWorks OleDbConnectionStringBuilder.PersistSecurityInfo#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.PersistSecurityInfo/CS/source.cs#1)]
 [!code-vb[DataWorks OleDbConnectionStringBuilder.PersistSecurityInfo#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.PersistSecurityInfo/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-string-builders">连接字符串生成器</related>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-strings">在 ADO.NET 中的连接字符串</related>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public string Provider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Provider" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnectionStringBuilder.Provider" />
      <MemberSignature Language="VB.NET" Value="Public Property Provider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Provider { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Provider : string with get, set" Usage="System.Data.OleDb.OleDbConnectionStringBuilder.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DisplayName("Provider")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DisplayName("Provider")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Data.OleDb.OleDbConnectionStringBuilder/OleDbProviderConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Data.OleDb.OleDbConnectionStringBuilder/OleDbProviderConverter))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个字符串，该字符串包含与内部连接字符串关联的数据提供程序的名称。</summary>
        <value>为 <see cref="P:System.Data.OleDb.OleDbConnectionStringBuilder.Provider" /> 属性的值，或者，如果未提供任何值，则为 <see langword="String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 如果在您尝试设置此属性时传入的值为 null，则将重置 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A> 属性。 如果尚未设置值，而开发人员尝试检索属性，则返回值为 `String.Empty` 。 此属性与连接字符串中的 "Provider" 键相对应。

 设置属性的值 `Provider` ，无论是通过将 <xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A> 属性设置) 或通过将连接字符串作为参数传递给构造函数来直接 (，都可能会影响该实例中包含的键/值对的集合 <xref:System.Data.OleDb.OleDbConnectionStringBuilder> 。 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A>例如，将属性设置为 "sqloledb" 会添加所有标准 SQL 连接字符串属性。 有关此行为的演示，请参阅本主题中的示例。

 对于某些访问接口，在构造函数中分配连接字符串 <xref:System.Data.OleDb.OleDbConnectionStringBuilder> 会导致重新排列所提供的键/值对的顺序。



## Examples
 下面的示例创建多个 <xref:System.Data.OleDb.OleDbConnectionStringBuilder> 实例，并将不同的连接字符串传递给每个事例中的构造函数。 注意设置与连接关联的提供程序如何在对象的集合中更改预定义的键/值对集。

> [!NOTE]
>  该示例包括一个密码以演示 <xref:System.Data.OleDb.OleDbConnectionStringBuilder> 如何使用连接字符串。 在您的应用程序中，建议使用 Windows 身份验证。 如果必须使用密码，请不要在你的应用程序中包括硬编码的密码。

 [!code-csharp[DataWorks OleDbConnectionStringBuilder.Provider#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.Provider/CS/source.cs#1)]
 [!code-vb[DataWorks OleDbConnectionStringBuilder.Provider#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.Provider/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-string-builders">连接字符串生成器</related>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-strings">在 ADO.NET 中的连接字符串</related>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public override bool Remove (string keyword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Remove(string keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnectionStringBuilder.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Remove (keyword As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Remove(System::String ^ keyword);" />
      <MemberSignature Language="F#" Value="override this.Remove : string -&gt; bool" Usage="oleDbConnectionStringBuilder.Remove keyword" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyword">要从此 <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> 中的连接字符串移除的键/值对中的键。</param>
        <summary>从 <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> 实例中移除具有指定的键的项。</summary>
        <returns>如果该键原本存在于连接字符串中但被移除，则为 <see langword="true" />；如果连接字符串中不存在该键，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 由于 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Remove%2A> 方法返回一个指示成功的值，因此在尝试从实例中删除键/值对之前，不需要查找密钥的存在 <xref:System.Data.OleDb.OleDbConnectionStringBuilder> 。



## Examples
 下面的示例创建一个 <xref:System.Data.OleDb.OleDbConnectionStringBuilder> ，并演示该方法的行为 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Remove%2A> 。

 [!code-csharp[DataWorks OleDbConnectionStringBuilder.Remove#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.Remove/CS/source.cs#1)]
 [!code-vb[DataWorks OleDbConnectionStringBuilder.Remove#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.Remove/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="keyword" /> 为 null（在 Visual Basic 中为 <see langword="Nothing" />）。</exception>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-string-builders">连接字符串生成器</related>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-strings">在 ADO.NET 中的连接字符串</related>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public override bool TryGetValue (string keyword, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TryGetValue(string keyword, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue(System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TryGetValue (keyword As String, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool TryGetValue(System::String ^ keyword, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="override this.TryGetValue : string * obj -&gt; bool" Usage="oleDbConnectionStringBuilder.TryGetValue (keyword, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.OleDb</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
        <Parameter Name="value" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyword">要检索的项的键。</param>
        <param name="value">与 <paramref name="keyword" /> 对应的值。</param>
        <summary>从 <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> 实例中检索与所提供的键对应的值。</summary>
        <returns>如果在连接字符串中找到 <paramref name="keyword" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue%2A> 方法允许开发人员安全地从 <xref:System.Data.OleDb.OleDbConnectionStringBuilder> 中检索值，而无需验证提供的键名是否为有效的键名。 由于在 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue%2A> 调用它时不会引发异常，因此，在检索其值之前无需查找密钥。 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue%2A>使用不存在的键调用会将值 null (`Nothing`) 参数的 Visual Basic 中 `value` 。



## Examples
 下面的示例演示方法的行为 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue%2A> 。

 [!code-csharp[DataWorks OleDbConnectionStringBuilder.TryGetValue#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.TryGetValue/CS/source.cs#1)]
 [!code-vb[DataWorks OleDbConnectionStringBuilder.TryGetValue#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.TryGetValue/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="keyword" /> 包含一个 null 值（在 Visual Basic 中为 <see langword="Nothing" />）。</exception>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-string-builders">连接字符串生成器</related>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-strings">在 ADO.NET 中的连接字符串</related>
      </Docs>
    </Member>
  </Members>
</Type>
