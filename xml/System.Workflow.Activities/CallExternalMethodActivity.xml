<Type Name="CallExternalMethodActivity" FullName="System.Workflow.Activities.CallExternalMethodActivity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="af963328a79dc802d5cd9428f2a2744c335534a8" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86640027" /></Metadata><TypeSignature Language="C#" Value="public class CallExternalMethodActivity : System.Workflow.ComponentModel.Activity, System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CallExternalMethodActivity extends System.Workflow.ComponentModel.Activity implements class System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.CallExternalMethodActivity" />
  <TypeSignature Language="VB.NET" Value="Public Class CallExternalMethodActivity&#xA;Inherits Activity&#xA;Implements IDynamicPropertyTypeProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class CallExternalMethodActivity : System::Workflow::ComponentModel::Activity, System::Workflow::ComponentModel::IDynamicPropertyTypeProvider" />
  <TypeSignature Language="F#" Value="type CallExternalMethodActivity = class&#xA;    inherit Activity&#xA;    interface IDynamicPropertyTypeProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.Activity</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Workflow.ComponentModel.IDynamicPropertyTypeProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DefaultEvent("MethodInvoking")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultEvent("MethodInvoking")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.Designer(typeof(System.Workflow.Activities.CallExternalMethodActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer(typeof(System.Workflow.Activities.CallExternalMethodActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.CallExternalMethodActivityValidator))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.CallExternalMethodActivityValidator))&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ea3ac-101">定义用于对本地服务调用方法的工作流通信活动。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-101">Defines a workflow communication activity that is used to call a method on a local service.</span></span> <span data-ttu-id="ea3ac-102">此活动用于将数据通过本地服务从工作流发送到宿主中。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-102">This activity is used to send data from the workflow to the host through the local service.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="ea3ac-103">本地服务是一个类，该类实现本地服务接口（使用 <xref:System.Workflow.Activities.ExternalDataExchangeAttribute> 标记的接口）并被添加到 <xref:System.Workflow.Activities.ExternalDataExchangeService>。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-103">A local service is a class that implements a local service interface (an interface that is marked with <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>) and is added to the <xref:System.Workflow.Activities.ExternalDataExchangeService>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ea3ac-104">当调用外部方法时，会克隆该方法的所有参数。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-104">When the external method is called all parameters of the method are cloned.</span></span> <span data-ttu-id="ea3ac-105">如果参数类型实现 <xref:System.ICloneable>，则会调用 `Clone` 方法，或者使用 <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> 对其进行序列化和反序列化。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-105">If the parameter types implement <xref:System.ICloneable> the `Clone` method is called or they are serialized and deserialized with a <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ea3ac-106">下面的代码示例演示如何在自定义活动中使用 <xref:System.Workflow.Activities.CallExternalMethodActivity> 调用外部方法。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-106">The following code example shows how to use the <xref:System.Workflow.Activities.CallExternalMethodActivity> in a custom activity to call an external method.</span></span> <span data-ttu-id="ea3ac-107">此代码示例摘自 PurchaseOrderWorkflow.Designer.cs 文件中的“侦听”SDK 示例。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-107">This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file.</span></span> <span data-ttu-id="ea3ac-108">有关详细信息，请参阅 [侦听示例](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90))。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-108">For more information, see [Listen Sample](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)).</span></span>  
  
 [!code-csharp[wf_samples#213](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#213)]
 [!code-vb[wf_samples#213](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#213)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="ea3ac-109">使用 CallExternalMethod 活动</span><span class="sxs-lookup"><span data-stu-id="ea3ac-109">Using the CallExternalMethod Activity</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ea3ac-110">初始化 <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-110">Initializes a new instance of the <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ea3ac-111">下面的示例演示如何创建 `CallExternalMethodActivity` 类的实例。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-111">The following example shows how to create an instance of the `CallExternalMethodActivity` class.</span></span>  <span data-ttu-id="ea3ac-112">此示例摘自 DocumentApprovalWorkflow.designer.cs 文件中的“PersistenceHost”SDK 示例。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-112">This example is from the PersistenceHost SDK sample, from the DocumentApprovalWorkflow.designer.cs file.</span></span> <span data-ttu-id="ea3ac-113">有关详细信息，请参阅 [暂留主机示例](https://msdn.microsoft.com/library/8ba72a8f-eb95-410f-bb00-180f3c35f251)。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-113">For more information, see [Persistence Host Sample](https://msdn.microsoft.com/library/8ba72a8f-eb95-410f-bb00-180f3c35f251).</span></span>  
  
 [!code-csharp[wf_samples#278](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#278)]
 [!code-vb[wf_samples#278](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#278)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="ea3ac-114">使用 CallExternalMethod 活动</span><span class="sxs-lookup"><span data-stu-id="ea3ac-114">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallExternalMethodActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallExternalMethodActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ea3ac-115">初始化 <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-115">Initializes a new instance of the <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ea3ac-116">下面的代码示例演示如何初始化 <xref:System.Workflow.Activities.CallExternalMethodActivity> 的新实例。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-116">The following code example shows how initialize a new instance of the <xref:System.Workflow.Activities.CallExternalMethodActivity>.</span></span> <span data-ttu-id="ea3ac-117">此代码还初始化 <xref:System.Workflow.Activities.ListenActivity>, <xref:System.Workflow.Activities.EventDrivenActivity>、<xref:System.Workflow.Activities.HandleExternalEventActivity>, <xref:System.Workflow.Activities.DelayActivity> 和 <xref:System.Workflow.Activities.CodeActivity> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-117">The code also initializes new instances of the <xref:System.Workflow.Activities.ListenActivity>, <xref:System.Workflow.Activities.EventDrivenActivity>, <xref:System.Workflow.Activities.HandleExternalEventActivity>, <xref:System.Workflow.Activities.DelayActivity> and <xref:System.Workflow.Activities.CodeActivity> classes.</span></span> <span data-ttu-id="ea3ac-118">此代码示例摘自 PurchaseOrderWorkflow.Designer.cs 文件中的“侦听”SDK 示例。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-118">This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file.</span></span> <span data-ttu-id="ea3ac-119">有关详细信息，请参阅 [侦听示例](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90))。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-119">For more information, see [Listen Sample](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)).</span></span>  
  
 [!code-csharp[wf_samples#214](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#214)]
 [!code-vb[wf_samples#214](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#214)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallExternalMethodActivity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallExternalMethodActivity(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.CallExternalMethodActivity : string -&gt; System.Workflow.Activities.CallExternalMethodActivity" Usage="new System.Workflow.Activities.CallExternalMethodActivity name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ea3ac-120">用户定义的活动名，用于初始化活动名称属性。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-120">The user-defined name of the activity, used to initialize the activity name property.</span></span></param>
        <summary><span data-ttu-id="ea3ac-121">使用活动名初始化 <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-121">Initializes a new instance of the <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> class using the name of the activity.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CorrelationToken">
      <MemberSignature Language="C#" Value="public virtual System.Workflow.Runtime.CorrelationToken CorrelationToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Runtime.CorrelationToken CorrelationToken" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CorrelationToken As CorrelationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Workflow::Runtime::CorrelationToken ^ CorrelationToken { System::Workflow::Runtime::CorrelationToken ^ get(); void set(System::Workflow::Runtime::CorrelationToken ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CorrelationToken : System.Workflow.Runtime.CorrelationToken with get, set" Usage="System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.MergableProperty(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.MergableProperty(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Workflow.Activities.CorrelationTokenTypeConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Workflow.Activities.CorrelationTokenTypeConverter))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.CorrelationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea3ac-122">获取或设置外部方法的 <see cref="T:System.Workflow.Runtime.CorrelationToken" />。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-122">Gets or sets the <see cref="T:System.Workflow.Runtime.CorrelationToken" /> for the external method.</span></span></summary>
        <value><span data-ttu-id="ea3ac-123">外部方法的相关令牌。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-123">The correlation token for the external method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea3ac-124">此属性定义给定的外部方法调用来自哪个特定的 <xref:System.Workflow.Activities.CallExternalMethodActivity> 活动。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-124">This property defines which specific <xref:System.Workflow.Activities.CallExternalMethodActivity> activity a given external method call comes from.</span></span> <span data-ttu-id="ea3ac-125">然后可以在本地通信服务事件的负载中使用此值以将该事件定向到正确的 <xref:System.Workflow.Activities.HandleExternalEventActivity> 活动。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-125">This value can then be used in the payload of a local communication service event to direct that event to the correct <xref:System.Workflow.Activities.HandleExternalEventActivity> activity.</span></span>  
  
 <span data-ttu-id="ea3ac-126">有关相关的示例，请参阅 [相关的本地服务示例](https://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd)。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-126">For an example of correlation, see the [Correlated Local Service Sample](https://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ea3ac-127">下面的示例演示如何访问 `CorrelationToken` 对象的 `CallExternalMethodActivity` 属性。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-127">The following sample shows how to access the `CorrelationToken` property of a `CallExternalMethodActivity` object.</span></span> <span data-ttu-id="ea3ac-128">此示例摘自 CorrelatedLocalServiceWorkflow.designer.cs 文件的“相关的本地服务”SDK 示例。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-128">This sample is from the Correlated Local Service SDK sample, from the CorrelatedLocalServiceWorkflow.designer.cs file.</span></span> <span data-ttu-id="ea3ac-129">有关详细信息，请参阅 [相关本地服务示例](https://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd)。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-129">For more information, see [Correlated Local Service Sample](https://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span></span>  
  
 [!code-csharp[wf_samples#200](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#200)]
 [!code-vb[wf_samples#200](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#200)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="ea3ac-130">使用 CallExternalMethod 活动</span><span class="sxs-lookup"><span data-stu-id="ea3ac-130">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CorrelationTokenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty CorrelationTokenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty CorrelationTokenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.CallExternalMethodActivity.CorrelationTokenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CorrelationTokenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ CorrelationTokenProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CorrelationTokenProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.CallExternalMethodActivity.CorrelationTokenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea3ac-131">表示针对 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 属性的 <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken" />。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-131">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="ea3ac-132">使用 CallExternalMethod 活动</span><span class="sxs-lookup"><span data-stu-id="ea3ac-132">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Execute(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function Execute (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Execute(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberSignature Language="F#" Value="override this.Execute : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="callExternalMethodActivity.Execute executionContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext"><span data-ttu-id="ea3ac-133">包含运行 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> 的执行环境的 <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" />。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-133">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> that contains the execution environment in which to run the <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" />.</span></span></param>
        <summary><span data-ttu-id="ea3ac-134">试图使用指定的 <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> 运行 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-134">Tries to run the <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> with the specified <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />.</span></span></summary>
        <returns><span data-ttu-id="ea3ac-135"><see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-135">One of the <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ea3ac-136">此 <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" /> 为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-136">This <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ea3ac-137"><paramref name="executionContext" /> 为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-137"><paramref name="executionContext" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ea3ac-138"><paramref name="executionContext" /> 的服务对象为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-138">The service object for the <paramref name="executionContext" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="ea3ac-139">使用 CallExternalMethod 活动</span><span class="sxs-lookup"><span data-stu-id="ea3ac-139">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InitializeProperties">
      <MemberSignature Language="C#" Value="protected override void InitializeProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeProperties ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeProperties();" />
      <MemberSignature Language="F#" Value="override this.InitializeProperties : unit -&gt; unit" Usage="callExternalMethodActivity.InitializeProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ea3ac-140">对依赖项属性执行初始化。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-140">Performs initialization on dependency properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea3ac-141">此方法初始化 <xref:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken%2A> 属性、验证是否设置 <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> 和 <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> 属性，并且验证在 <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> 属性中引用的接口中能否找到 <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> 属性中引用的事件。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-141">This method initializes the <xref:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken%2A> property, verifies the <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> and <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> properties are set and verifies that the event referenced in the <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> property can be found in the interface referenced in the <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="ea3ac-142">使用 CallExternalMethodActivity 活动</span><span class="sxs-lookup"><span data-stu-id="ea3ac-142">Using the CallExternalMethodActivity Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InterfaceType">
      <MemberSignature Language="C#" Value="public virtual Type InterfaceType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type InterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InterfaceType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ InterfaceType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InterfaceType : Type with get, set" Usage="System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Editor(typeof(System.Workflow.ComponentModel.Design.TypeBrowserEditor), typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor(typeof(System.Workflow.ComponentModel.Design.TypeBrowserEditor), typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Workflow.ComponentModel.Design.TypeFilterProvider(typeof(System.Workflow.Activities.ExternalDataExchangeInterfaceTypeFilterProvider))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Workflow.ComponentModel.Design.TypeFilterProvider(typeof(System.Workflow.Activities.ExternalDataExchangeInterfaceTypeFilterProvider))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea3ac-143">获取或设置外部方法的具有 <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" /> 的声明接口。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-143">Gets or sets an external method's declaring interface that has the <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />.</span></span></summary>
        <value><span data-ttu-id="ea3ac-144">外部方法的具有 <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" /> 的声明接口。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-144">The external method's declaring interface that has the <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ea3ac-145">下面的代码示例演示如何设置 <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-145">The following code example shows how to set the <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> property.</span></span> <span data-ttu-id="ea3ac-146">接口类型必须具有 <xref:System.Workflow.Activities.ExternalDataExchangeAttribute> 属性。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-146">The interface type must be attributed with the <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.</span></span> <span data-ttu-id="ea3ac-147">此代码示例摘自 PurchaseOrderWorkflow.Designer.cs 文件中的“侦听”SDK 示例。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-147">This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file.</span></span> <span data-ttu-id="ea3ac-148">有关详细信息，请参阅 [侦听示例](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90))。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-148">For more information, see [Listen Sample](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)).</span></span>  
  
 [!code-csharp[wf_samples#217](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#217)]
 [!code-vb[wf_samples#217](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#217)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="ea3ac-149">使用 CallExternalMethod 活动</span><span class="sxs-lookup"><span data-stu-id="ea3ac-149">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InterfaceTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty InterfaceTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty InterfaceTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.CallExternalMethodActivity.InterfaceTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InterfaceTypeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ InterfaceTypeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable InterfaceTypeProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.CallExternalMethodActivity.InterfaceTypeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea3ac-150">表示针对 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 属性的 <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" />。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-150">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea3ac-151"><xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> 属性对应于使用 <xref:System.Workflow.Activities.ExternalDataExchangeAttribute> 进行标记的接口的名称。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-151">The <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> property corresponds to the name of the interface that was marked with the <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.</span></span>  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="ea3ac-152">使用 CallExternalMethod 活动</span><span class="sxs-lookup"><span data-stu-id="ea3ac-152">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MethodInvoking">
      <MemberSignature Language="C#" Value="public event EventHandler MethodInvoking;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MethodInvoking" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MethodInvoking As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MethodInvoking;" />
      <MemberSignature Language="F#" Value="member this.MethodInvoking : EventHandler " Usage="member this.MethodInvoking : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.MergableProperty(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.MergableProperty(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea3ac-153">在调用方法前发生。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-153">Occurs before invoking the method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ea3ac-154">下面的代码示例演示如何使用 <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking> 事件设置要在调用外部方法之前调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-154">The following code example shows how to use the <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking> event to set the method to call before invoking the external method.</span></span> <span data-ttu-id="ea3ac-155">此代码示例摘自 PurchaseOrderWorkflow.Designer.cs 文件中的“侦听”SDK 示例。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-155">This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file.</span></span> <span data-ttu-id="ea3ac-156">有关详细信息，请参阅 [侦听示例](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90))。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-156">For more information, see [Listen Sample](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)).</span></span>  
  
 [!code-csharp[wf_samples#217](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#217)]
 [!code-vb[wf_samples#217](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#217)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="ea3ac-157">使用 CallExternalMethod 活动</span><span class="sxs-lookup"><span data-stu-id="ea3ac-157">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MethodInvokingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty MethodInvokingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty MethodInvokingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.CallExternalMethodActivity.MethodInvokingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MethodInvokingEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ MethodInvokingEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MethodInvokingEvent : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.CallExternalMethodActivity.MethodInvokingEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea3ac-158">表示针对 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 事件的 <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" />。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-158">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea3ac-159"><xref:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking> 事件定义在活动对本地服务调用外部方法之前执行的事件委托。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-159">The <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking> event defines an event delegate that is executed before the activity invokes the external method on the local service.</span></span>  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="ea3ac-160">使用 CallExternalMethod 活动</span><span class="sxs-lookup"><span data-stu-id="ea3ac-160">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MethodName">
      <MemberSignature Language="C#" Value="public virtual string MethodName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MethodName" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.CallExternalMethodActivity.MethodName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MethodName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MethodName : string with get, set" Usage="System.Workflow.Activities.CallExternalMethodActivity.MethodName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.MergableProperty(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.MergableProperty(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Workflow.ComponentModel.Design.PropertyValueProviderTypeConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Workflow.ComponentModel.Design.PropertyValueProviderTypeConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Workflow.Activities.Common.PropertyValueProviderTypeConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Workflow.Activities.Common.PropertyValueProviderTypeConverter))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea3ac-161">获取或设置要对向 <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" /> 注册的本地服务调用的方法的名称。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-161">Gets or sets the name of the method to be called on the local service registered with the <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" />.</span></span></summary>
        <value><span data-ttu-id="ea3ac-162"><see cref="T:System.Workflow.Activities.ExternalDataExchangeService" /> 接口的方法名。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-162">The method name of the <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" /> interface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ea3ac-163">下面的代码示例演示如何使用 <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> 属性设置外部方法的方法名。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-163">The following code example shows how to use the <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> property to set the method name of the external method.</span></span> <span data-ttu-id="ea3ac-164">此代码示例摘自 PurchaseOrderWorkflow.Designer.cs 文件中的“侦听”SDK 示例。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-164">This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file.</span></span> <span data-ttu-id="ea3ac-165">有关详细信息，请参阅 [侦听示例](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90))。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-165">For more information, see [Listen Sample](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)).</span></span>  
  
 [!code-csharp[wf_samples#217](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#217)]
 [!code-vb[wf_samples#217](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#217)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="ea3ac-166">使用 CallExternalMethod 活动</span><span class="sxs-lookup"><span data-stu-id="ea3ac-166">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MethodNameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty MethodNameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty MethodNameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.CallExternalMethodActivity.MethodNameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MethodNameProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ MethodNameProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MethodNameProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.CallExternalMethodActivity.MethodNameProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea3ac-167">表示针对 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 属性的 <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.MethodName" />。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-167">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.MethodName" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea3ac-168"><xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> 属性对应于使用 <xref:System.Workflow.Activities.ExternalDataExchangeAttribute> 进行标记的接口中包含的方法的名称。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-168">The <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> property corresponds to the name of a method contained on an interface that is marked with the <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.</span></span>  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="ea3ac-169">使用 CallExternalMethod 活动</span><span class="sxs-lookup"><span data-stu-id="ea3ac-169">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnMethodInvoked">
      <MemberSignature Language="C#" Value="protected virtual void OnMethodInvoked (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMethodInvoked(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMethodInvoked (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMethodInvoked(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMethodInvoked : EventArgs -&gt; unit&#xA;override this.OnMethodInvoked : EventArgs -&gt; unit" Usage="callExternalMethodActivity.OnMethodInvoked e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="ea3ac-170">包含 <see cref="T:System.EventArgs" /> 事件的数据的 <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" />。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-170">An <see cref="T:System.EventArgs" /> that contains the data for the <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" /> event.</span></span></param>
        <summary><span data-ttu-id="ea3ac-171">为派生类提供挂钩以从 <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" /> 提取或返回值。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-171">Provides a hook for derived classes to extract out and return values from the <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />.</span></span> <span data-ttu-id="ea3ac-172">在运行外部方法之后立即调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-172">This method is called just after the external method is run.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ea3ac-173">下面的示例演示 `OnMethodInvoked` 方法的实现。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-173">The following example shows an implementation of the `OnMethodInvoked` method.</span></span>  
  
 [!code-csharp[wf_samples#1](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#1)]
 [!code-vb[wf_samples#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="ea3ac-174">使用 CallExternalMethod 活动</span><span class="sxs-lookup"><span data-stu-id="ea3ac-174">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnMethodInvoking">
      <MemberSignature Language="C#" Value="protected virtual void OnMethodInvoking (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMethodInvoking(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMethodInvoking (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMethodInvoking(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMethodInvoking : EventArgs -&gt; unit&#xA;override this.OnMethodInvoking : EventArgs -&gt; unit" Usage="callExternalMethodActivity.OnMethodInvoking e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="ea3ac-175">包含 <see cref="T:System.EventArgs" /> 事件的数据的 <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" />。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-175">An <see cref="T:System.EventArgs" /> that contains the data for the <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" /> event.</span></span></param>
        <summary><span data-ttu-id="ea3ac-176">为派生类提供挂钩以设置 <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-176">Provides a hook for derived classes to set <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />.</span></span> <span data-ttu-id="ea3ac-177">在即将运行外部方法之前调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-177">This method is called just before the external method is run.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ea3ac-178">下面的示例演示 `OnMethodInvoking` 方法的实现。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-178">The following example demonstrates an implementation of the `OnMethodInvoking` method.</span></span> <span data-ttu-id="ea3ac-179">此示例摘自 CreateTask.cs 文件的“相关的本地服务”SDK 示例。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-179">This example is from the Correlated Local Service SDK sample, from the CreateTask.cs file.</span></span> <span data-ttu-id="ea3ac-180">有关详细信息，请参阅 [相关本地服务示例](https://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd)。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-180">For more information, see [Correlated Local Service Sample](https://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span></span>  
  
 [!code-csharp[wf_samples#207](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#207)]
 [!code-vb[wf_samples#207](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#207)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="ea3ac-181">使用 CallExternalMethod 活动</span><span class="sxs-lookup"><span data-stu-id="ea3ac-181">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ParameterBindings">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterBindings As WorkflowParameterBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::WorkflowParameterBindingCollection ^ ParameterBindings { System::Workflow::ComponentModel::WorkflowParameterBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParameterBindings : System.Workflow.ComponentModel.WorkflowParameterBindingCollection" Usage="System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.WorkflowParameterBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea3ac-182">获取外部方法的形参表中可绑定参数的集合。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-182">Gets the collection of bindable parameters as found in the external method's formal parameter list.</span></span></summary>
        <value><span data-ttu-id="ea3ac-183">要绑定到的参数的 <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" />。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-183">The <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" /> of parameters to bind to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ea3ac-184">下面的代码示例演示如何将参数绑定添加到参数绑定集合中。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-184">The following example shows how to add a parameter binding to the parameter bindings collection.</span></span> <span data-ttu-id="ea3ac-185">此示例摘自 VotingServiceWorkflow.designer.cs 文件的“主机通信”SDK 示例。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-185">This example is from the Host Communication SDK sample, from the VotingServiceWorkflow.designer.cs file.</span></span> <span data-ttu-id="ea3ac-186">有关详细信息，请参阅 [主机通信示例](https://msdn.microsoft.com/library/ce4b0b8c-bfa3-4c24-b85a-5835a440ea8f)。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-186">For more information, see [Host Communication Sample](https://msdn.microsoft.com/library/ce4b0b8c-bfa3-4c24-b85a-5835a440ea8f).</span></span>  
  
 [!code-csharp[WF_Samples#301](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets38.cs#301)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="ea3ac-187">使用 CallExternalMethod 活动</span><span class="sxs-lookup"><span data-stu-id="ea3ac-187">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ParameterBindingsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty ParameterBindingsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty ParameterBindingsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindingsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ParameterBindingsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ ParameterBindingsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ParameterBindingsProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.CallExternalMethodActivity.ParameterBindingsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea3ac-188">表示针对 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 属性的 <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-188">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="ea3ac-189">使用 CallExternalMethod 活动</span><span class="sxs-lookup"><span data-stu-id="ea3ac-189">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType">
      <MemberSignature Language="C#" Value="System.Workflow.ComponentModel.Compiler.AccessTypes IDynamicPropertyTypeProvider.GetAccessType (IServiceProvider serviceProvider, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Workflow.ComponentModel.Compiler.AccessTypes System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(class System.IServiceProvider serviceProvider, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetAccessType (serviceProvider As IServiceProvider, propertyName As String) As AccessTypes Implements IDynamicPropertyTypeProvider.GetAccessType" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Workflow::ComponentModel::Compiler::AccessTypes System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider ^ serviceProvider, System::String ^ propertyName) = System::Workflow::ComponentModel::IDynamicPropertyTypeProvider::GetAccessType;" />
      <MemberSignature Language="F#" Value="abstract member System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType : IServiceProvider * string -&gt; System.Workflow.ComponentModel.Compiler.AccessTypes&#xA;override this.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType : IServiceProvider * string -&gt; System.Workflow.ComponentModel.Compiler.AccessTypes" Usage="callExternalMethodActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType (serviceProvider, propertyName)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Compiler.AccessTypes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceProvider"><span data-ttu-id="ea3ac-190">一个对象，它实现 <see cref="T:System.IServiceProvider" />，以便在需要设计时服务时提供对这些服务的访问。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-190">An object that implements <see cref="T:System.IServiceProvider" /> to provide access to design time services if they are required.</span></span></param>
        <param name="propertyName"><span data-ttu-id="ea3ac-191">属性的名称。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-191">The name of the property.</span></span></param>
        <summary><span data-ttu-id="ea3ac-192">返回指定属性的访问类型。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-192">Returns the access type for the specified property.</span></span></summary>
        <returns><span data-ttu-id="ea3ac-193">一个表示属性访问级别的 <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-193">An <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" /> enumeration value that denotes the access level of the property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea3ac-194">在编译时用于验证属性相互之间是否正确绑定。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-194">Used at compile time to validate whether the properties are correctly bound to one another.</span></span> <span data-ttu-id="ea3ac-195">如果没有此接口，则会直接从属性的 getter/setter 推断此信息。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-195">Without this interface this information is inferred directly from property getter/setters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType">
      <MemberSignature Language="C#" Value="Type IDynamicPropertyTypeProvider.GetPropertyType (IServiceProvider serviceProvider, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Type System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(class System.IServiceProvider serviceProvider, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetPropertyType (serviceProvider As IServiceProvider, propertyName As String) As Type Implements IDynamicPropertyTypeProvider.GetPropertyType" />
      <MemberSignature Language="C++ CLI" Value=" virtual Type ^ System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider ^ serviceProvider, System::String ^ propertyName) = System::Workflow::ComponentModel::IDynamicPropertyTypeProvider::GetPropertyType;" />
      <MemberSignature Language="F#" Value="abstract member System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType : IServiceProvider * string -&gt; Type&#xA;override this.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType : IServiceProvider * string -&gt; Type" Usage="callExternalMethodActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType (serviceProvider, propertyName)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceProvider"><span data-ttu-id="ea3ac-196">一个对象，它实现 <see cref="T:System.IServiceProvider" />，以便在需要设计时服务时提供对这些服务的访问。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-196">An object that implements <see cref="T:System.IServiceProvider" /> to provide access to design time services if they are required.</span></span></param>
        <param name="propertyName"><span data-ttu-id="ea3ac-197">属性的名称。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-197">The name of the property.</span></span></param>
        <summary><span data-ttu-id="ea3ac-198">返回指定属性的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-198">Returns the <see cref="T:System.Type" /> of the specified property.</span></span></summary>
        <returns><span data-ttu-id="ea3ac-199">名称作为 <paramref name="propertyName" /> 参数进行传递的属性的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-199">The <see cref="T:System.Type" /> for the property whose name is passed as the <paramref name="propertyName" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea3ac-200">在编译时用于验证属性相互之间是否正确绑定。</span><span class="sxs-lookup"><span data-stu-id="ea3ac-200">Used at compile time to validate whether the properties are correctly bound to one other.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
