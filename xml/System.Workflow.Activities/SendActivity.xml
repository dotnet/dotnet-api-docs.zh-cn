<Type Name="SendActivity" FullName="System.Workflow.Activities.SendActivity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8adf979fb0d0cbf301d28f6985bd027b02ddca82" /><Meta Name="ms.sourcegitcommit" Value="9f423345753728e8cad38d4a22663a109e69ea91" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/04/2021" /><Meta Name="ms.locfileid" Value="102066237" /></Metadata><TypeSignature Language="C#" Value="public sealed class SendActivity : System.Workflow.ComponentModel.Activity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SendActivity extends System.Workflow.ComponentModel.Activity" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.SendActivity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SendActivity&#xA;Inherits Activity" />
  <TypeSignature Language="C++ CLI" Value="public ref class SendActivity sealed : System::Workflow::ComponentModel::Activity" />
  <TypeSignature Language="F#" Value="type SendActivity = class&#xA;    inherit Activity" />
  <AssemblyInfo>
    <AssemblyName>System.WorkflowServices</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.Activity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.Designer(typeof(System.Workflow.Activities.SendActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer(typeof(System.Workflow.Activities.SendActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.SendActivity), "Design.Resources.SendActivity.png")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.SendActivity), "Design.Resources.SendActivity.png")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.SendActivityValidator))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.SendActivityValidator))&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e940c-101">客户端活动，用于模拟 Windows Communication Foundation (WCF) 服务操作的同步调用。</span><span class="sxs-lookup"><span data-stu-id="e940c-101">Client activity that models the synchronous invocation of a Windows Communication Foundation (WCF) service operation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="e940c-102"><xref:System.Workflow.Activities.SendActivity>活动使您能够使用预定义的消息交换模式参与与 WCF 服务的对话。</span><span class="sxs-lookup"><span data-stu-id="e940c-102">The <xref:System.Workflow.Activities.SendActivity> activity enables you to participate in a conversation with a WCF service using a predefined message exchange pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e940c-103"><xref:System.Workflow.Activities.SendActivity> 是一种阻止活动，意味着活动完成执行后才会阻止工作流执行。</span><span class="sxs-lookup"><span data-stu-id="e940c-103">The <xref:System.Workflow.Activities.SendActivity> activity is a blocking activity, meaning that workflow execution is blocked until the activity completes execution.</span></span>  
  
 <span data-ttu-id="e940c-104"><xref:System.Workflow.Activities.SendActivity> 活动支持的消息交换模式包括：</span><span class="sxs-lookup"><span data-stu-id="e940c-104">The message exchange patterns supported by the <xref:System.Workflow.Activities.SendActivity> activity include:</span></span>  
  
-   <span data-ttu-id="e940c-105">单向发送消息</span><span class="sxs-lookup"><span data-stu-id="e940c-105">One-way Send Message</span></span>  
  
     <span data-ttu-id="e940c-106"><xref:System.Workflow.Activities.SendActivity> 活动发送消息，但不需要服务的响应。</span><span class="sxs-lookup"><span data-stu-id="e940c-106">The <xref:System.Workflow.Activities.SendActivity> activity sends a message but does not expect a response from the service.</span></span>  
  
-   <span data-ttu-id="e940c-107">发送请求 - 接收答复</span><span class="sxs-lookup"><span data-stu-id="e940c-107">Send Request - Receive Reply</span></span>  
  
     <span data-ttu-id="e940c-108"><xref:System.Workflow.Activities.SendActivity> 活动发送消息，并等待从服务接收响应。</span><span class="sxs-lookup"><span data-stu-id="e940c-108">The <xref:System.Workflow.Activities.SendActivity> activity sends a message and waits until a response is received from the service.</span></span>  
  
-   <span data-ttu-id="e940c-109">发送请求 - 接收错误</span><span class="sxs-lookup"><span data-stu-id="e940c-109">Send Request - Receive Fault</span></span>  
  
     <span data-ttu-id="e940c-110"><xref:System.Workflow.Activities.SendActivity> 活动发送消息，并等待从服务接收响应或错误。</span><span class="sxs-lookup"><span data-stu-id="e940c-110">The <xref:System.Workflow.Activities.SendActivity> activity sends a message and waits until a response or a fault is received from the service.</span></span> <span data-ttu-id="e940c-111">在执行期间，发送活动会引发所有从服务器收到的错误。</span><span class="sxs-lookup"><span data-stu-id="e940c-111">During execution, the send activity throws all of the faults that were received from the server.</span></span> <span data-ttu-id="e940c-112"><xref:System.Workflow.ComponentModel.FaultHandlerActivity> 活动可用于处理客户端工作流中的错误。</span><span class="sxs-lookup"><span data-stu-id="e940c-112"><xref:System.Workflow.ComponentModel.FaultHandlerActivity> activities can be used to handle the faults in the client workflow.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e940c-113">此活动是 .NET Framework 3.5 的一部分。</span><span class="sxs-lookup"><span data-stu-id="e940c-113">This activity is part of .NET Framework 3.5.</span></span> <span data-ttu-id="e940c-114">有关 .NET Framework 4 中的等效活动，请参阅 <xref:System.ServiceModel.Activities.Send> 。</span><span class="sxs-lookup"><span data-stu-id="e940c-114">For the equivalent activity in .NET Framework 4, see <xref:System.ServiceModel.Activities.Send>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Workflow.Activities.ReceiveActivity" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e940c-115">初始化 <see cref="T:System.Workflow.Activities.SendActivity" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="e940c-115">Initializes a new instance of the <see cref="T:System.Workflow.Activities.SendActivity" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e940c-116"><xref:System.Workflow.Activities.SendActivity> 构造函数通常在工作流设计器所创建的代码旁置文件中进行调用。</span><span class="sxs-lookup"><span data-stu-id="e940c-116">The <xref:System.Workflow.Activities.SendActivity> constructor is typically invoked in the code-beside file created by the workflow designer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e940c-117">初始化 <see cref="T:System.Workflow.Activities.SendActivity" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="e940c-117">Initializes a new instance of the <see cref="T:System.Workflow.Activities.SendActivity" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e940c-118"><xref:System.Workflow.Activities.SendActivity> 构造函数通常在工作流设计器所创建的代码旁置文件中进行调用。</span><span class="sxs-lookup"><span data-stu-id="e940c-118">The <xref:System.Workflow.Activities.SendActivity> constructor is typically invoked in the code-beside file created by the workflow designer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e940c-119">下面的示例演示如何创建 <xref:System.Workflow.Activities.SendActivity> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="e940c-119">The following example shows how to create a new instance of the <xref:System.Workflow.Activities.SendActivity> class.</span></span>  <span data-ttu-id="e940c-120">此示例从 `Conversations` SDK 示例改写而来。</span><span class="sxs-lookup"><span data-stu-id="e940c-120">This example was adapted from the `Conversations` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#16](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendActivity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendActivity(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.SendActivity : string -&gt; System.Workflow.Activities.SendActivity" Usage="new System.Workflow.Activities.SendActivity name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e940c-121">初始化活动时分配给 <see cref="P:System.Workflow.ComponentModel.Activity.Name" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="e940c-121">The value assigned to <see cref="P:System.Workflow.ComponentModel.Activity.Name" /> when the activity is initialized.</span></span></param>
        <summary><span data-ttu-id="e940c-122">使用指定的 <see cref="T:System.Workflow.Activities.SendActivity" /> 属性初始化 <see langword="name" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="e940c-122">Initializes a new instance of the <see cref="T:System.Workflow.Activities.SendActivity" /> class with the specified <see langword="name" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e940c-123"><xref:System.Workflow.Activities.SendActivity> 构造函数通常在工作流设计器所创建的代码旁置文件中进行调用。</span><span class="sxs-lookup"><span data-stu-id="e940c-123">The <xref:System.Workflow.Activities.SendActivity> constructor is typically invoked in the code-beside file created by the workflow designer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e940c-124">下面的示例演示如何创建 <xref:System.Workflow.Activities.SendActivity> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="e940c-124">The following example shows how to create a new instance of the <xref:System.Workflow.Activities.SendActivity> class.</span></span>  
  
 [!code-csharp[SendActivity#17](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AfterResponse">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Activities.SendActivityEventArgs&gt; AfterResponse;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Activities.SendActivityEventArgs&gt; AfterResponse" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Activities.SendActivity.AfterResponse" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AfterResponse As EventHandler(Of SendActivityEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Activities::SendActivityEventArgs ^&gt; ^ AfterResponse;" />
      <MemberSignature Language="F#" Value="member this.AfterResponse : EventHandler&lt;System.Workflow.Activities.SendActivityEventArgs&gt; " Usage="member this.AfterResponse : System.EventHandler&lt;System.Workflow.Activities.SendActivityEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Visible)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Visible)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Activities.SendActivityEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e940c-125">在接收到来自服务的响应后发生。</span><span class="sxs-lookup"><span data-stu-id="e940c-125">Occurs after the response has been received from the service.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e940c-126">可以使用与此事件关联的事件处理程序来读取调用的服务操作的返回值。</span><span class="sxs-lookup"><span data-stu-id="e940c-126">This event handler associated with this event can be used to read the return value from the service operation invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e940c-127">下面的示例演示如何使用 `AfterResponse` 事件。</span><span class="sxs-lookup"><span data-stu-id="e940c-127">The following example shows how to use the `AfterResponse` event.</span></span>  
  
 [!code-csharp[SendActivity#2](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AfterResponseEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty AfterResponseEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty AfterResponseEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.SendActivity.AfterResponseEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AfterResponseEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ AfterResponseEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable AfterResponseEvent : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.SendActivity.AfterResponseEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e940c-128">表示针对 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 事件的 <see cref="E:System.Workflow.Activities.SendActivity.AfterResponse" />。</span><span class="sxs-lookup"><span data-stu-id="e940c-128">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="E:System.Workflow.Activities.SendActivity.AfterResponse" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e940c-129">此依赖项事件属性可用于将发送活动的 <xref:System.Workflow.Activities.SendActivity.AfterResponse> 事件绑定到工作流类上的公共事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="e940c-129">This dependency event property can be used to bind the send activity's <xref:System.Workflow.Activities.SendActivity.AfterResponse> event to a public event handler on the workflow class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeSend">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Activities.SendActivityEventArgs&gt; BeforeSend;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Activities.SendActivityEventArgs&gt; BeforeSend" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Activities.SendActivity.BeforeSend" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BeforeSend As EventHandler(Of SendActivityEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Activities::SendActivityEventArgs ^&gt; ^ BeforeSend;" />
      <MemberSignature Language="F#" Value="member this.BeforeSend : EventHandler&lt;System.Workflow.Activities.SendActivityEventArgs&gt; " Usage="member this.BeforeSend : System.EventHandler&lt;System.Workflow.Activities.SendActivityEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Visible)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Visible)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Activities.SendActivityEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e940c-130">在 <see cref="T:System.Workflow.Activities.SendActivity" /> 活动将消息发送到服务之前发生。</span><span class="sxs-lookup"><span data-stu-id="e940c-130">Occurs before the <see cref="T:System.Workflow.Activities.SendActivity" /> activity sends the message to the service.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e940c-131">可以使用与此事件关联的事件处理程序为所调用的服务操作设置参数值。</span><span class="sxs-lookup"><span data-stu-id="e940c-131">This event handler associated with this event can be used to set the parameter values for the service operation being invoked.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e940c-132">无法在此事件处理程序中设置 <xref:System.Workflow.Activities.SendActivity> 的上下文。</span><span class="sxs-lookup"><span data-stu-id="e940c-132">The context of a <xref:System.Workflow.Activities.SendActivity> cannot be set in this event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e940c-133">下面的示例演示如何使用 `BeforeSend` 事件。</span><span class="sxs-lookup"><span data-stu-id="e940c-133">The following example shows how to use the `BeforeSend` event.</span></span> <span data-ttu-id="e940c-134">此示例从 `Conversations` SDK 示例改写而来。</span><span class="sxs-lookup"><span data-stu-id="e940c-134">This example was adapted from the `Conversations` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#3](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeSendEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty BeforeSendEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty BeforeSendEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.SendActivity.BeforeSendEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BeforeSendEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ BeforeSendEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable BeforeSendEvent : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.SendActivity.BeforeSendEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e940c-135">表示针对 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 事件的 <see cref="E:System.Workflow.Activities.SendActivity.BeforeSend" />。</span><span class="sxs-lookup"><span data-stu-id="e940c-135">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="E:System.Workflow.Activities.SendActivity.BeforeSend" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e940c-136">此依赖项事件属性可用于将发送活动的 <xref:System.Workflow.Activities.SendActivity.BeforeSend> 事件绑定到工作流类上的公共事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="e940c-136">This dependency event property can be used to bind the send activity's <xref:System.Workflow.Activities.SendActivity.BeforeSend> event to a public event handler on the workflow class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelToken">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.ChannelToken ChannelToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Activities.ChannelToken ChannelToken" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.SendActivity.ChannelToken" />
      <MemberSignature Language="VB.NET" Value="Public Property ChannelToken As ChannelToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Activities::ChannelToken ^ ChannelToken { System::Workflow::Activities::ChannelToken ^ get(); void set(System::Workflow::Activities::ChannelToken ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ChannelToken : System.Workflow.Activities.ChannelToken with get, set" Usage="System.Workflow.Activities.SendActivity.ChannelToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.MergableProperty(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.MergableProperty(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.ChannelToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e940c-137"><see cref="T:System.Workflow.Activities.ChannelToken" /> 在建立其自身与客户端通道之间的关联时所使用的 <see cref="T:System.Workflow.Activities.SendActivity" />。</span><span class="sxs-lookup"><span data-stu-id="e940c-137"><see cref="T:System.Workflow.Activities.ChannelToken" /> used by the <see cref="T:System.Workflow.Activities.SendActivity" /> to associate itself with a client channel.</span></span></summary>
        <value><span data-ttu-id="e940c-138">一个 <see cref="T:System.Workflow.Activities.ChannelToken" />，定义 <see cref="T:System.Workflow.Activities.SendActivity" /> 用于与服务通信的客户端通道。</span><span class="sxs-lookup"><span data-stu-id="e940c-138">A <see cref="T:System.Workflow.Activities.ChannelToken" /> defining a client channel that a <see cref="T:System.Workflow.Activities.SendActivity" /> uses to communicate with a service.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e940c-139">通道令牌指定通道名称、通道范围和用于建立通道的终结点配置名称。</span><span class="sxs-lookup"><span data-stu-id="e940c-139">A channel token specifies the name of the channel, the scope of the channel, and the endpoint configuration name to be used in establishing the channel.</span></span> <span data-ttu-id="e940c-140">配置文件中的终结点名称具有 <xref:System.Workflow.Activities.SendActivity> 活动与其通信的服务的地址、绑定和协定。</span><span class="sxs-lookup"><span data-stu-id="e940c-140">The endpoint name in the configuration file has the address, binding, and contract information for a service that the <xref:System.Workflow.Activities.SendActivity> activity communicates with.</span></span>  
  
 <span data-ttu-id="e940c-141">通道令牌还为令牌指定唯一通道名称和所有者活动名称。</span><span class="sxs-lookup"><span data-stu-id="e940c-141">The channel token also specifies a unique channel name and an owner activity name for the token.</span></span> <span data-ttu-id="e940c-142">可以在多个要使用同一终结点与服务通信的发送活动之间共享通道令牌。</span><span class="sxs-lookup"><span data-stu-id="e940c-142">A channel token can be shared between multiple send activities that want to use the same endpoint to communicate with a service.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e940c-143">下面的示例演示如何访问 `ChannelToken` 属性。</span><span class="sxs-lookup"><span data-stu-id="e940c-143">The following example shows how to access the `ChannelToken` property.</span></span> <span data-ttu-id="e940c-144">此示例从 `CalculatorClient` SDK 示例改写而来。</span><span class="sxs-lookup"><span data-stu-id="e940c-144">This example was adapted from the `CalculatorClient` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#7](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Context" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.SendActivity.Context" />
      <MemberSignature Language="VB.NET" Value="Public Property Context As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ Context { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); void set(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Collections.Generic.IDictionary&lt;string, string&gt; with get, set" Usage="System.Workflow.Activities.SendActivity.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e940c-145">返回一个字典，该字典包含用于客户端与服务（将与客户端通信）之间的通信的上下文，包括关联标识之类的内容。</span><span class="sxs-lookup"><span data-stu-id="e940c-145">Returns a dictionary that contains the context used for communication between the client and the service it is communicating with, including such things as identification for correlation.</span></span></summary>
        <value><span data-ttu-id="e940c-146">一个基于字典的集合，包含 <see cref="T:System.Xml.XmlQualifiedName" /> 键及其关联的 <see cref="T:System.String" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e940c-146">A dictionary-based collection that contains <see cref="T:System.Xml.XmlQualifiedName" /> keys and their associated <see cref="T:System.String" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e940c-147">上下文信息用于客户端与服务（将与客户端通信）之间的通信并包括关联标识之类的内容。</span><span class="sxs-lookup"><span data-stu-id="e940c-147">Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e940c-148">下面的示例演示如何访问 `Context` 属性。</span><span class="sxs-lookup"><span data-stu-id="e940c-148">The following example shows how to access the `Context` property.</span></span> <span data-ttu-id="e940c-149">此示例从 `CalculatorClient` SDK 示例改写而来。</span><span class="sxs-lookup"><span data-stu-id="e940c-149">This example was adapted from the `CalculatorClient` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#8](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomAddress">
      <MemberSignature Language="C#" Value="public string CustomAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CustomAddress" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.SendActivity.CustomAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CustomAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomAddress : string with get, set" Usage="System.Workflow.Activities.SendActivity.CustomAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e940c-150">获取或设置用于与服务通信的自定义地址。</span><span class="sxs-lookup"><span data-stu-id="e940c-150">Gets or sets the custom address used to communicate with a service.</span></span></summary>
        <value><span data-ttu-id="e940c-151">字符串值，其值为服务正在侦听的地址。</span><span class="sxs-lookup"><span data-stu-id="e940c-151">String value whose value is the address a service is listening on.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e940c-152">如果存在，则将使用此值来定义操作的终结点地址。</span><span class="sxs-lookup"><span data-stu-id="e940c-152">If present, this value is used to define the endpoint address for the operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e940c-153">下面的示例演示如何访问 `CustomAddress` 属性。</span><span class="sxs-lookup"><span data-stu-id="e940c-153">The following example shows how to access the `CustomAddress` property.</span></span> <span data-ttu-id="e940c-154">此示例从 `CalculatorClient` SDK 示例改写而来。</span><span class="sxs-lookup"><span data-stu-id="e940c-154">This example was adapted from the `CalculatorClient` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#9](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomAddressProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty CustomAddressProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty CustomAddressProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.SendActivity.CustomAddressProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CustomAddressProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ CustomAddressProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CustomAddressProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.SendActivity.CustomAddressProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e940c-155">表示 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 属性的 <see cref="P:System.Workflow.Activities.SendActivity.CustomAddress" />。</span><span class="sxs-lookup"><span data-stu-id="e940c-155">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> for the <see cref="P:System.Workflow.Activities.SendActivity.CustomAddress" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e940c-156">如果存在，则将使用此值来定义操作的终结点地址。</span><span class="sxs-lookup"><span data-stu-id="e940c-156">If present, this value is used to define the endpoint address for the operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected internal override System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Execute(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function Execute (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Execute(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberSignature Language="F#" Value="override this.Execute : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="sendActivity.Execute executionContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetContext">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e940c-157">返回一个字典，该字典包含用于客户端与服务（将与客户端通信）之间的通信的上下文，包括关联标识之类的内容。</span><span class="sxs-lookup"><span data-stu-id="e940c-157">Returns a dictionary that contains the context used for communication between the client and the service it is communicating with, including such things as identification for correlation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e940c-158">上下文信息用于客户端与服务（将与客户端通信）之间的通信并包括关联标识之类的内容。</span><span class="sxs-lookup"><span data-stu-id="e940c-158">Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetContext">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IDictionary&lt;string,string&gt; GetContext (System.Workflow.ComponentModel.Activity activity, System.Workflow.Activities.ChannelToken endpoint, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GetContext(class System.Workflow.ComponentModel.Activity activity, class System.Workflow.Activities.ChannelToken endpoint, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetContext (activity As Activity, endpoint As ChannelToken, contractType As Type) As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GetContext(System::Workflow::ComponentModel::Activity ^ activity, System::Workflow::Activities::ChannelToken ^ endpoint, Type ^ contractType);" />
      <MemberSignature Language="F#" Value="static member GetContext : System.Workflow.ComponentModel.Activity * System.Workflow.Activities.ChannelToken * Type -&gt; System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.Workflow.Activities.SendActivity.GetContext (activity, endpoint, contractType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="endpoint" Type="System.Workflow.Activities.ChannelToken" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="e940c-159">需要其上下文信息的活动。</span><span class="sxs-lookup"><span data-stu-id="e940c-159">Activity whose context information is required.</span></span></param>
        <param name="endpoint"><span data-ttu-id="e940c-160">用于与服务关联的终结点信息。</span><span class="sxs-lookup"><span data-stu-id="e940c-160">Endpoint information for correlation with a service.</span></span></param>
        <param name="contractType"><span data-ttu-id="e940c-161">服务实现的协定的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="e940c-161">The <see cref="T:System.Type" /> of the contract implemented by a service.</span></span></param>
        <summary><span data-ttu-id="e940c-162">获取或设置发送操作的上下文信息。</span><span class="sxs-lookup"><span data-stu-id="e940c-162">Gets or sets the context information for a send operation.</span></span></summary>
        <returns><span data-ttu-id="e940c-163">一个基于字典的集合，包含 <see cref="T:System.Xml.XmlQualifiedName" /> 键及其关联的 <see cref="T:System.String" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e940c-163">A dictionary-based collection that contains <see cref="T:System.Xml.XmlQualifiedName" /> keys and their associated <see cref="T:System.String" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e940c-164">上下文信息用于客户端与服务（将与客户端通信）之间的通信并包括关联标识之类的内容。</span><span class="sxs-lookup"><span data-stu-id="e940c-164">Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e940c-165">下面的示例显示如何使用 `GetContext` 方法。</span><span class="sxs-lookup"><span data-stu-id="e940c-165">The following example shows how to use the `GetContext` method.</span></span>  
  
 [!code-csharp[SendActivity#12](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContext">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IDictionary&lt;string,string&gt; GetContext (System.Workflow.ComponentModel.Activity activity, string endpointName, string ownerActivityName, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GetContext(class System.Workflow.ComponentModel.Activity activity, string endpointName, string ownerActivityName, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetContext (activity As Activity, endpointName As String, ownerActivityName As String, contractType As Type) As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GetContext(System::Workflow::ComponentModel::Activity ^ activity, System::String ^ endpointName, System::String ^ ownerActivityName, Type ^ contractType);" />
      <MemberSignature Language="F#" Value="static member GetContext : System.Workflow.ComponentModel.Activity * string * string * Type -&gt; System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.Workflow.Activities.SendActivity.GetContext (activity, endpointName, ownerActivityName, contractType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="endpointName" Type="System.String" />
        <Parameter Name="ownerActivityName" Type="System.String" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="e940c-166">需要其上下文信息的活动。</span><span class="sxs-lookup"><span data-stu-id="e940c-166">Activity whose context information is required.</span></span></param>
        <param name="endpointName"><span data-ttu-id="e940c-167">用于与服务关联的终结点的名称。</span><span class="sxs-lookup"><span data-stu-id="e940c-167">Name of the endpoint used for correlation with a service.</span></span></param>
        <param name="ownerActivityName"><span data-ttu-id="e940c-168">所属活动的名称。</span><span class="sxs-lookup"><span data-stu-id="e940c-168">The name of the owning activity.</span></span></param>
        <param name="contractType"><span data-ttu-id="e940c-169">服务实现的协定的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="e940c-169">The <see cref="T:System.Type" /> of the contract implemented by a service.</span></span></param>
        <summary><span data-ttu-id="e940c-170">一个静态方法，在给定活动实例、该活动使用的终结点名称、所有者活动名称和表示协定类型的 <see cref="T:System.Type" /> 对象的情况下返回上下文信息。</span><span class="sxs-lookup"><span data-stu-id="e940c-170">Static method that returns context information given an activity instance, an endpoint name used by that activity, the name of the owner activity, and a <see cref="T:System.Type" /> object that represents the type of the contract.</span></span></summary>
        <returns><span data-ttu-id="e940c-171">一个基于字典的集合，包含 <see cref="T:System.Xml.XmlQualifiedName" /> 键及其关联的 <see cref="T:System.String" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e940c-171">A dictionary-based collection that contains <see cref="T:System.Xml.XmlQualifiedName" /> keys and their associated <see cref="T:System.String" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e940c-172">上下文信息用于客户端与服务（将与客户端通信）之间的通信并包括关联标识之类的内容。</span><span class="sxs-lookup"><span data-stu-id="e940c-172">Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e940c-173">下面的示例显示如何使用 `GetContext` 方法。</span><span class="sxs-lookup"><span data-stu-id="e940c-173">The following example shows how to use the `GetContext` method.</span></span>  
  
 [!code-csharp[SendActivity#15](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeProperties">
      <MemberSignature Language="C#" Value="protected override void InitializeProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.InitializeProperties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeProperties ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeProperties();" />
      <MemberSignature Language="F#" Value="override this.InitializeProperties : unit -&gt; unit" Usage="sendActivity.InitializeProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterBindings">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.SendActivity.ParameterBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterBindings As WorkflowParameterBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::WorkflowParameterBindingCollection ^ ParameterBindings { System::Workflow::ComponentModel::WorkflowParameterBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParameterBindings : System.Workflow.ComponentModel.WorkflowParameterBindingCollection" Usage="System.Workflow.Activities.SendActivity.ParameterBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.WorkflowParameterBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e940c-174">获取 Windows Communication Foundation (WCF) 服务的形参表中可绑定参数的集合。</span><span class="sxs-lookup"><span data-stu-id="e940c-174">Gets the collection of bindable parameters as found in the Windows Communication Foundation (WCF) service's formal parameter list.</span></span></summary>
        <value><span data-ttu-id="e940c-175">要绑定到的参数的 <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" />。</span><span class="sxs-lookup"><span data-stu-id="e940c-175">The <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" /> of parameters to bind to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e940c-176"><xref:System.Workflow.Activities.SendActivity.ParameterBindings%2A> 可用于指定服务操作参数与包含 <xref:System.Workflow.Activities.SendActivity> 活动的工作流的公共字段和属性之间的绑定。</span><span class="sxs-lookup"><span data-stu-id="e940c-176"><xref:System.Workflow.Activities.SendActivity.ParameterBindings%2A> can be used to specify bindings between the service operation parameters and public field and properties of the workflow that contains the <xref:System.Workflow.Activities.SendActivity> activity.</span></span> <span data-ttu-id="e940c-177">当执行 <xref:System.Workflow.Activities.SendActivity> 活动时，会从参数所绑定的工作流属性中读取相应的参数值并将它们作为服务操作参数发送到服务中。</span><span class="sxs-lookup"><span data-stu-id="e940c-177">When the <xref:System.Workflow.Activities.SendActivity> activity executes, the corresponding parameter values are read from the workflow properties they are bound to and are sent to the service as service operation parameters.</span></span>  
  
 <span data-ttu-id="e940c-178"><xref:System.Workflow.Activities.SendActivity.ParameterBindings%2A> 也可以用于检索服务操作的返回值。</span><span class="sxs-lookup"><span data-stu-id="e940c-178"><xref:System.Workflow.Activities.SendActivity.ParameterBindings%2A> can also be used to retrieve the return values from a service operation.</span></span>  
  
 <span data-ttu-id="e940c-179">服务操作的所有参数都应该进行绑定。</span><span class="sxs-lookup"><span data-stu-id="e940c-179">All parameters of the service operation should be bound.</span></span> <span data-ttu-id="e940c-180">未绑定的服务操作参数将生成编译器警告，并且在调用 <xref:System.Workflow.Activities.SendActivity> 时将发送这些参数的默认值。</span><span class="sxs-lookup"><span data-stu-id="e940c-180">Unbound service operation parameters produce compiler warnings and the default values of the parameter are sent when the <xref:System.Workflow.Activities.SendActivity> is invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e940c-181">下面的示例演示如何访问 `ParameterBindings` 属性。</span><span class="sxs-lookup"><span data-stu-id="e940c-181">The following example shows how to access the `ParameterBindings` property.</span></span> <span data-ttu-id="e940c-182">此示例从 `Conversations` SDK 示例改写而来。</span><span class="sxs-lookup"><span data-stu-id="e940c-182">This example was adapted from the `Conversations` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#0](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnValuePropertyName">
      <MemberSignature Language="C#" Value="public const string ReturnValuePropertyName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ReturnValuePropertyName" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.SendActivity.ReturnValuePropertyName" />
      <MemberSignature Language="VB.NET" Value="Public Const ReturnValuePropertyName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ReturnValuePropertyName;" />
      <MemberSignature Language="F#" Value="val mutable ReturnValuePropertyName : string" Usage="System.Workflow.Activities.SendActivity.ReturnValuePropertyName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e940c-183">属性的名称，该属性用作由与 <see langword="SendActivity" /> 活动通信的服务发送的返回值。</span><span class="sxs-lookup"><span data-stu-id="e940c-183">Name of the property that is used for the return value sent by the service that the <see langword="SendActivity" /> activity is communicating with.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e940c-184">此字符串可用于检索与 <xref:System.Workflow.Activities.SendActivity.ParameterBindings%2A> 事件处理程序中的 <xref:System.Workflow.Activities.SendActivity> 活动关联的 <xref:System.Workflow.Activities.SendActivity.AfterResponse> 的返回值。</span><span class="sxs-lookup"><span data-stu-id="e940c-184">This string can be used to retrieve the return value from the <xref:System.Workflow.Activities.SendActivity.ParameterBindings%2A> associated with the <xref:System.Workflow.Activities.SendActivity> activity in the <xref:System.Workflow.Activities.SendActivity.AfterResponse> event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e940c-185">下面的代码示例演示如何访问 `ReturnValuePropertyName` 字段。</span><span class="sxs-lookup"><span data-stu-id="e940c-185">The following example shows how to access the `ReturnValuePropertyName` field.</span></span>  
  
 [!code-csharp[SendActivity#6](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceOperationInfo">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.TypedOperationInfo ServiceOperationInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Activities.TypedOperationInfo ServiceOperationInfo" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.SendActivity.ServiceOperationInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceOperationInfo As TypedOperationInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Activities::TypedOperationInfo ^ ServiceOperationInfo { System::Workflow::Activities::TypedOperationInfo ^ get(); void set(System::Workflow::Activities::TypedOperationInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServiceOperationInfo : System.Workflow.Activities.TypedOperationInfo with get, set" Usage="System.Workflow.Activities.SendActivity.ServiceOperationInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Visible)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Visible)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.TypedOperationInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e940c-186">定义 <see langword="SendActivity" /> 活动与其通信的服务的协定和操作。</span><span class="sxs-lookup"><span data-stu-id="e940c-186">Defines the contract and operation of the service that the <see langword="SendActivity" /> activity communicates with.</span></span></summary>
        <value><span data-ttu-id="e940c-187">一个 <see cref="T:System.Workflow.Activities.TypedOperationInfo" /> 对象，其中包含协定名称、协定类型、操作名称（可能与实际方法名称截然不同）、操作是否为单向操作以及包括有关操作的参数在内的方法信息。</span><span class="sxs-lookup"><span data-stu-id="e940c-187">A <see cref="T:System.Workflow.Activities.TypedOperationInfo" /> object that contains the contract name, the contract type, the operation name, (which may be distinct from the actual method name), whether the operation is a one-way operation, and method information including parameters about the operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e940c-188"><xref:System.Workflow.Activities.SendActivity> 活动始终引用现有协定及其定义的操作。</span><span class="sxs-lookup"><span data-stu-id="e940c-188">The <xref:System.Workflow.Activities.SendActivity> activity always refers to an existing contract and its defined operations.</span></span> <span data-ttu-id="e940c-189"><xref:System.Workflow.Activities.SendActivity> 活动不能自行定义协定。</span><span class="sxs-lookup"><span data-stu-id="e940c-189">There is no provision that allows a <xref:System.Workflow.Activities.SendActivity> activity to define a contract itself.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e940c-190">下面的示例演示如何访问 `ServiceOperationInfo` 属性。</span><span class="sxs-lookup"><span data-stu-id="e940c-190">The following example shows how to access the `ServiceOperationInfo` property.</span></span> <span data-ttu-id="e940c-191">此示例从 `Conversations` SDK 示例改写而来。</span><span class="sxs-lookup"><span data-stu-id="e940c-191">This example was adapted from the `Conversations` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#1](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetContext">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e940c-192">设置 <see cref="T:System.Workflow.Activities.SendActivity" /> 活动的上下文信息。</span><span class="sxs-lookup"><span data-stu-id="e940c-192">Sets context information for a <see cref="T:System.Workflow.Activities.SendActivity" /> activity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e940c-193">上下文信息用于客户端与服务（将与客户端通信）之间的通信并包括关联标识之类的内容。</span><span class="sxs-lookup"><span data-stu-id="e940c-193">Context information is used for communication between the client and the service it is communicating and includes such things as identification for correlation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetContext">
      <MemberSignature Language="C#" Value="public static void SetContext (System.Workflow.ComponentModel.Activity activity, System.Workflow.Activities.ChannelToken endpoint, Type contractType, System.Collections.Generic.IDictionary&lt;string,string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetContext(class System.Workflow.ComponentModel.Activity activity, class System.Workflow.Activities.ChannelToken endpoint, class System.Type contractType, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.SetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetContext (activity As Activity, endpoint As ChannelToken, contractType As Type, context As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetContext(System::Workflow::ComponentModel::Activity ^ activity, System::Workflow::Activities::ChannelToken ^ endpoint, Type ^ contractType, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ context);" />
      <MemberSignature Language="F#" Value="static member SetContext : System.Workflow.ComponentModel.Activity * System.Workflow.Activities.ChannelToken * Type * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; unit" Usage="System.Workflow.Activities.SendActivity.SetContext (activity, endpoint, contractType, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="endpoint" Type="System.Workflow.Activities.ChannelToken" />
        <Parameter Name="contractType" Type="System.Type" />
        <Parameter Name="context" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="e940c-194">要与上下文信息关联的活动实例。</span><span class="sxs-lookup"><span data-stu-id="e940c-194">The Activity instance to associate the context information with.</span></span></param>
        <param name="endpoint"><span data-ttu-id="e940c-195">用于与服务关联的终结点。</span><span class="sxs-lookup"><span data-stu-id="e940c-195">The endpoint used for correlation with a service.</span></span></param>
        <param name="contractType"><span data-ttu-id="e940c-196">服务实现的协定的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="e940c-196">The <see cref="T:System.Type" /> of the contract implemented by a service.</span></span></param>
        <param name="context"><span data-ttu-id="e940c-197">要设置的上下文信息。</span><span class="sxs-lookup"><span data-stu-id="e940c-197">The context information to set.</span></span></param>
        <summary><span data-ttu-id="e940c-198">一个静态方法，它在给定活动实例、该活动使用的终结点、表示协定类型的 <see cref="T:System.Workflow.Activities.SendActivity" /> 对象和上下文信息本身的情况下设置 <see cref="T:System.Type" /> 活动的上下文信息。</span><span class="sxs-lookup"><span data-stu-id="e940c-198">A static method that sets context information for a <see cref="T:System.Workflow.Activities.SendActivity" /> activity, given an activity instance, an endpoint used by that activity, a <see cref="T:System.Type" /> object that represents the type of the contract, and the context information itself.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e940c-199">上下文信息用于客户端与服务（将与客户端通信）之间的通信并包括关联标识之类的内容。</span><span class="sxs-lookup"><span data-stu-id="e940c-199">Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e940c-200">下面的示例显示如何使用 `SetContext` 方法。</span><span class="sxs-lookup"><span data-stu-id="e940c-200">The following example shows how to use the `SetContext` method.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetContext">
      <MemberSignature Language="C#" Value="public static void SetContext (System.Workflow.ComponentModel.Activity activity, string endpointName, string ownerActivityName, Type contractType, System.Collections.Generic.IDictionary&lt;string,string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetContext(class System.Workflow.ComponentModel.Activity activity, string endpointName, string ownerActivityName, class System.Type contractType, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.SetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetContext (activity As Activity, endpointName As String, ownerActivityName As String, contractType As Type, context As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetContext(System::Workflow::ComponentModel::Activity ^ activity, System::String ^ endpointName, System::String ^ ownerActivityName, Type ^ contractType, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ context);" />
      <MemberSignature Language="F#" Value="static member SetContext : System.Workflow.ComponentModel.Activity * string * string * Type * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; unit" Usage="System.Workflow.Activities.SendActivity.SetContext (activity, endpointName, ownerActivityName, contractType, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="endpointName" Type="System.String" />
        <Parameter Name="ownerActivityName" Type="System.String" />
        <Parameter Name="contractType" Type="System.Type" />
        <Parameter Name="context" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="e940c-201">要与上下文信息关联的活动实例。</span><span class="sxs-lookup"><span data-stu-id="e940c-201">The Activity instance to associate the context information with.</span></span></param>
        <param name="endpointName"><span data-ttu-id="e940c-202">用于与服务关联的终结点的名称。</span><span class="sxs-lookup"><span data-stu-id="e940c-202">The name of an endpoint used for correlation with a service.</span></span></param>
        <param name="ownerActivityName"><span data-ttu-id="e940c-203">所属活动的名称</span><span class="sxs-lookup"><span data-stu-id="e940c-203">The name of the owning activity</span></span></param>
        <param name="contractType"><span data-ttu-id="e940c-204">服务实现的协定的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="e940c-204">The <see cref="T:System.Type" /> of the contract implemented by a service.</span></span></param>
        <param name="context"><span data-ttu-id="e940c-205">要设置的上下文信息。</span><span class="sxs-lookup"><span data-stu-id="e940c-205">The context information to set.</span></span></param>
        <summary><span data-ttu-id="e940c-206">一个静态方法，它在给定活动实例、该活动使用的终结点名称、所有者活动的名称、表示协定类型的 <see cref="T:System.Workflow.Activities.SendActivity" /> 对象和上下文信息本身的情况下设置 <see cref="T:System.Type" /> 活动的上下文信息。</span><span class="sxs-lookup"><span data-stu-id="e940c-206">A static method that sets context information for a <see cref="T:System.Workflow.Activities.SendActivity" /> activity, given an activity instance, an endpoint name used by that activity, the name of the owner activity, a <see cref="T:System.Type" /> object that represents the type of the contract, and the context information itself.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e940c-207">下面的示例显示如何使用 `SetContext` 方法。</span><span class="sxs-lookup"><span data-stu-id="e940c-207">The following example shows how to use the `SetContext` method.</span></span>  
  
 [!code-csharp[SendActivity#15](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
