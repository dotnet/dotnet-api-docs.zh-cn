<Type Name="NetCodeGroup" FullName="System.Security.Policy.NetCodeGroup">
  <Metadata><Meta Name="ms.openlocfilehash" Value="30f070f3688c2ed167200cc5d56ea7d3064af1a4" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89873676" /></Metadata><TypeSignature Language="C#" Value="public sealed class NetCodeGroup : System.Security.Policy.CodeGroup" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NetCodeGroup extends System.Security.Policy.CodeGroup" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Security.Policy.NetCodeGroup" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NetCodeGroup&#xA;Inherits CodeGroup" />
  <TypeSignature Language="C++ CLI" Value="public ref class NetCodeGroup sealed : System::Security::Policy::CodeGroup" />
  <TypeSignature Language="F#" Value="type NetCodeGroup = class&#xA;    inherit CodeGroup" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit NetCodeGroup extends System.Security.Policy.CodeGroup" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Policy.CodeGroup</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="90180-101">向从其下载程序集的站点授予 Web 权限。</span><span class="sxs-lookup"><span data-stu-id="90180-101">Grants Web permission to the site from which the assembly was downloaded.</span></span> <span data-ttu-id="90180-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="90180-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90180-103">代码组是代码访问安全策略的构建基块。</span><span class="sxs-lookup"><span data-stu-id="90180-103">Code groups are the building blocks of code access security policy.</span></span> <span data-ttu-id="90180-104">每个策略级别都包含一个可以具有一个或多个子代码组的根代码组。</span><span class="sxs-lookup"><span data-stu-id="90180-104">Each policy level consists of a root code group that can have one or more child code groups.</span></span> <span data-ttu-id="90180-105">每个子代码组都可以有自己的子代码组;此行为将扩展为任意数目的级别，从而形成一个树。</span><span class="sxs-lookup"><span data-stu-id="90180-105">Each child code group can have its own child code groups; this behavior extends to any number of levels, forming a tree.</span></span> <span data-ttu-id="90180-106">每个代码组都有一个成员条件，该条件确定给定程序集是否属于组，这取决于该程序集的证据。</span><span class="sxs-lookup"><span data-stu-id="90180-106">Each code group has a membership condition that determines if a given assembly belongs to the group, based on the evidence for that assembly.</span></span> <span data-ttu-id="90180-107">只有其成员条件与给定程序集匹配的代码组及其子代码组会应用代码访问安全策略。</span><span class="sxs-lookup"><span data-stu-id="90180-107">Only code groups whose membership conditions match a given assembly, along with their child code groups, apply code access security policy.</span></span>  
  
 <span data-ttu-id="90180-108"><xref:System.Security.Policy.NetCodeGroup> 具有与相同的合并语义 <xref:System.Security.Policy.UnionCodeGroup> ; 它构成了 <xref:System.Security.Policy.PolicyStatement> 所有匹配的子代码组的对象的联合，并构成了 <xref:System.Security.Policy.PolicyStatement> 从输入证据生成的所有匹配子代码组 <xref:System.Security.Policy.Url> 。</span><span class="sxs-lookup"><span data-stu-id="90180-108"><xref:System.Security.Policy.NetCodeGroup> has the same merge semantics as that of <xref:System.Security.Policy.UnionCodeGroup>; it forms the union of the <xref:System.Security.Policy.PolicyStatement> objects of all matching child code groups and the <xref:System.Security.Policy.PolicyStatement> it generates from the input <xref:System.Security.Policy.Url> evidence.</span></span> <span data-ttu-id="90180-109">但是， <xref:System.Security.Policy.NetCodeGroup> 将返回一个权限，该权限包含动态计算 <xref:System.Net.WebPermission> 的，该权限授予对运行代码的站点的连接访问权限; <xref:System.Security.Policy.UnionCodeGroup> 只是返回静态权限集。</span><span class="sxs-lookup"><span data-stu-id="90180-109">However, <xref:System.Security.Policy.NetCodeGroup> returns a permission containing a dynamically calculated <xref:System.Net.WebPermission> that grants connect access to the site from which the code is run; <xref:System.Security.Policy.UnionCodeGroup> simply returns a static permission set.</span></span>  
  
 <span data-ttu-id="90180-110">创建后 <xref:System.Security.Policy.NetCodeGroup> ，它将包含下表中所示的默认连接访问规则。</span><span class="sxs-lookup"><span data-stu-id="90180-110">When a <xref:System.Security.Policy.NetCodeGroup> is created, it contains the default connection access rules shown in the following table.</span></span>  
  
|<span data-ttu-id="90180-111">URI 方案</span><span class="sxs-lookup"><span data-stu-id="90180-111">URI Scheme</span></span>|<span data-ttu-id="90180-112">规则</span><span class="sxs-lookup"><span data-stu-id="90180-112">Rule</span></span>|  
|----------------|----------|  
|<span data-ttu-id="90180-113">文件</span><span class="sxs-lookup"><span data-stu-id="90180-113">file</span></span>|<span data-ttu-id="90180-114">不允许对源服务器进行连接访问。</span><span class="sxs-lookup"><span data-stu-id="90180-114">No connection access to the origin server is permitted.</span></span>|  
|<span data-ttu-id="90180-115">http</span><span class="sxs-lookup"><span data-stu-id="90180-115">http</span></span>|<span data-ttu-id="90180-116">使用源端口允许 HTTP 和 HTTPS 访问。</span><span class="sxs-lookup"><span data-stu-id="90180-116">HTTP and HTTPS access is permitted using the origin port.</span></span>|  
|<span data-ttu-id="90180-117">https</span><span class="sxs-lookup"><span data-stu-id="90180-117">https</span></span>|<span data-ttu-id="90180-118">使用源端口允许 HTTPS 访问。</span><span class="sxs-lookup"><span data-stu-id="90180-118">HTTPS access is permitted using the origin port.</span></span>|  
  
 <span data-ttu-id="90180-119">通过将 <xref:System.Security.Policy.CodeConnectAccess> 具有适当 <xref:System.Security.Policy.CodeConnectAccess.Scheme%2A> 和属性值的对象传递 <xref:System.Security.Policy.CodeConnectAccess.Port%2A> 给方法，可以控制在连接回其源站点时允许使用代码的方案和端口 <xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A> 。</span><span class="sxs-lookup"><span data-stu-id="90180-119">You can control the scheme and port that code is permitted to use when connecting back to its site of origin by passing a <xref:System.Security.Policy.CodeConnectAccess> object with the appropriate <xref:System.Security.Policy.CodeConnectAccess.Scheme%2A> and <xref:System.Security.Policy.CodeConnectAccess.Port%2A> property values to the <xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A> method.</span></span> <span data-ttu-id="90180-120">你可以创建一个连接访问规则，该规则在源方案不存在于证据中时应用，或者通过指定 <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> ( "" ) 作为方案来识别。</span><span class="sxs-lookup"><span data-stu-id="90180-120">You can create a connection access rule that applies when the origin scheme is not present in the evidence or is not recognized by specifying <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> ("") as the scheme.</span></span> <span data-ttu-id="90180-121">通过指定 <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> ( "\*" ) 作为方案，你还可以创建一个在没有具有匹配方案的连接访问规则时应用的连接访问规则。</span><span class="sxs-lookup"><span data-stu-id="90180-121">You can also create a connection access rule that applies when there is no connection access rule with a matching scheme by specifying <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> ("\*") as the scheme.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="90180-122">如果代码未提交 URI 方案作为证据，则允许使用任意方案向源站点进行访问。</span><span class="sxs-lookup"><span data-stu-id="90180-122">If code does not submit the URI scheme as evidence, access is permitted using any scheme back to the origin site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90180-123">下面的代码示例演示如何 <xref:System.Security.Policy.NetCodeGroup> <xref:System.Security.Policy.CodeConnectAccess> 为使用 HTTP 方案下载的代码创建和添加对象。</span><span class="sxs-lookup"><span data-stu-id="90180-123">The following code example demonstrates creating a <xref:System.Security.Policy.NetCodeGroup> and adding <xref:System.Security.Policy.CodeConnectAccess> objects for code downloaded using the HTTP scheme.</span></span>  
  
 [!code-cpp[NclCodeGroup#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#3)]
 [!code-csharp[NclCodeGroup#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetCodeGroup (System.Security.Policy.IMembershipCondition membershipCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Policy.IMembershipCondition membershipCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.NetCodeGroup.#ctor(System.Security.Policy.IMembershipCondition)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (membershipCondition As IMembershipCondition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetCodeGroup(System::Security::Policy::IMembershipCondition ^ membershipCondition);" />
      <MemberSignature Language="F#" Value="new System.Security.Policy.NetCodeGroup : System.Security.Policy.IMembershipCondition -&gt; System.Security.Policy.NetCodeGroup" Usage="new System.Security.Policy.NetCodeGroup membershipCondition" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="membershipCondition" Type="System.Security.Policy.IMembershipCondition" />
      </Parameters>
      <Docs>
        <param name="membershipCondition"><span data-ttu-id="90180-124">成员条件，它测试证据以确定此代码组是否应用代码访问安全策略。</span><span class="sxs-lookup"><span data-stu-id="90180-124">A membership condition that tests evidence to determine whether this code group applies code access security policy.</span></span></param>
        <summary><span data-ttu-id="90180-125">初始化 <see cref="T:System.Security.Policy.NetCodeGroup" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="90180-125">Initializes a new instance of the <see cref="T:System.Security.Policy.NetCodeGroup" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90180-126">创建后 <xref:System.Security.Policy.NetCodeGroup> ，它将包含下表中所示的默认连接访问规则。</span><span class="sxs-lookup"><span data-stu-id="90180-126">When a <xref:System.Security.Policy.NetCodeGroup> is created, it contains the default connection access rules shown in the following table.</span></span>  
  
|<span data-ttu-id="90180-127">Scheme</span><span class="sxs-lookup"><span data-stu-id="90180-127">Scheme</span></span>|<span data-ttu-id="90180-128">规则</span><span class="sxs-lookup"><span data-stu-id="90180-128">Rule</span></span>|  
|------------|----------|  
|<span data-ttu-id="90180-129">文件</span><span class="sxs-lookup"><span data-stu-id="90180-129">file</span></span>|<span data-ttu-id="90180-130">不允许对源服务器进行连接访问。</span><span class="sxs-lookup"><span data-stu-id="90180-130">No connection access to the origin server is permitted.</span></span>|  
|<span data-ttu-id="90180-131">http</span><span class="sxs-lookup"><span data-stu-id="90180-131">http</span></span>|<span data-ttu-id="90180-132">使用源端口允许 HTTP 和 HTTPS 访问。</span><span class="sxs-lookup"><span data-stu-id="90180-132">HTTP and HTTPS access is permitted using the origin port.</span></span>|  
|<span data-ttu-id="90180-133">https</span><span class="sxs-lookup"><span data-stu-id="90180-133">https</span></span>|<span data-ttu-id="90180-134">使用源端口允许 HTTPS 访问。</span><span class="sxs-lookup"><span data-stu-id="90180-134">HTTPS access is permitted using the origin port.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="90180-135">下面的代码示例演示如何 <xref:System.Security.Policy.NetCodeGroup> <xref:System.Security.Policy.CodeConnectAccess> 为使用 HTTP 方案下载的代码创建和添加对象。</span><span class="sxs-lookup"><span data-stu-id="90180-135">The following code example demonstrates creating a <xref:System.Security.Policy.NetCodeGroup> and adding <xref:System.Security.Policy.CodeConnectAccess> objects for code downloaded using the HTTP scheme.</span></span>  
  
 [!code-cpp[NclCodeGroup#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#3)]
 [!code-csharp[NclCodeGroup#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="90180-136"><paramref name="membershipCondition" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="90180-136">The <paramref name="membershipCondition" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="90180-137"><paramref name="membershipCondition" /> 参数的类型无效。</span><span class="sxs-lookup"><span data-stu-id="90180-137">The type of the <paramref name="membershipCondition" /> parameter is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AbsentOriginScheme">
      <MemberSignature Language="C#" Value="public static readonly string AbsentOriginScheme;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string AbsentOriginScheme" />
      <MemberSignature Language="DocId" Value="F:System.Security.Policy.NetCodeGroup.AbsentOriginScheme" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AbsentOriginScheme As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ AbsentOriginScheme;" />
      <MemberSignature Language="F#" Value=" staticval mutable AbsentOriginScheme : string" Usage="System.Security.Policy.NetCodeGroup.AbsentOriginScheme" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90180-138">包含一个值，该值用于为具有未知或未能识别的原始方案的代码指定连接访问权限。</span><span class="sxs-lookup"><span data-stu-id="90180-138">Contains a value used to specify connection access for code with an unknown or unrecognized origin scheme.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90180-139">调用方法时 <xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A> ，指定方案和关联的 <xref:System.Security.Policy.CodeConnectAccess> 对象。</span><span class="sxs-lookup"><span data-stu-id="90180-139">When calling the <xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A> method, you specify a scheme and an associated <xref:System.Security.Policy.CodeConnectAccess> object.</span></span> <span data-ttu-id="90180-140"><xref:System.Security.Policy.CodeConnectAccess>使用作为源方案添加到的任何对象都将在 <xref:System.Security.Policy.NetCodeGroup> <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> 代码的原始方案不存在于其证据中时应用，或者不是由对象识别的方案 <xref:System.Security.Policy.NetCodeGroup> 。</span><span class="sxs-lookup"><span data-stu-id="90180-140">Any <xref:System.Security.Policy.CodeConnectAccess> objects that you add to the <xref:System.Security.Policy.NetCodeGroup> using <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> as the origin scheme are applied when the code's origin scheme is not present in its evidence, or is not a scheme recognized by the <xref:System.Security.Policy.NetCodeGroup> object.</span></span>  
  
 <span data-ttu-id="90180-141">若要指定在 <xref:System.Security.Policy.CodeConnectAccess> 代码的原始方案与添加到当前对象的源方案集内包含的任何方案都不匹配时要使用的对象 <xref:System.Security.Policy.NetCodeGroup> ，请使用 <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> 值。</span><span class="sxs-lookup"><span data-stu-id="90180-141">To specify the <xref:System.Security.Policy.CodeConnectAccess> objects to use when the code's origin scheme does not match any of the schemes contained in the set of origin schemes added to the current <xref:System.Security.Policy.NetCodeGroup> object, use the <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> value.</span></span>  
  
 <span data-ttu-id="90180-142">该字段的值 <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> 为空字符串 ( "" ) 。</span><span class="sxs-lookup"><span data-stu-id="90180-142">The value of the <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> field is an empty string ("").</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddConnectAccess">
      <MemberSignature Language="C#" Value="public void AddConnectAccess (string originScheme, System.Security.Policy.CodeConnectAccess connectAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddConnectAccess(string originScheme, class System.Security.Policy.CodeConnectAccess connectAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddConnectAccess (originScheme As String, connectAccess As CodeConnectAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddConnectAccess(System::String ^ originScheme, System::Security::Policy::CodeConnectAccess ^ connectAccess);" />
      <MemberSignature Language="F#" Value="member this.AddConnectAccess : string * System.Security.Policy.CodeConnectAccess -&gt; unit" Usage="netCodeGroup.AddConnectAccess (originScheme, connectAccess)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="originScheme" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="connectAccess" Type="System.Security.Policy.CodeConnectAccess" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="originScheme"><span data-ttu-id="90180-143">一个 <see cref="T:System.String" />，包含要与代码的方案进行匹配的方案。</span><span class="sxs-lookup"><span data-stu-id="90180-143">A <see cref="T:System.String" /> containing the scheme to match against the code's scheme.</span></span></param>
        <param name="connectAccess"><span data-ttu-id="90180-144">一个 <see cref="T:System.Security.Policy.CodeConnectAccess" />，指定代码可用来连接回其原始服务器的方案和端口。</span><span class="sxs-lookup"><span data-stu-id="90180-144">A <see cref="T:System.Security.Policy.CodeConnectAccess" /> that specifies the scheme and port code can use to connect back to its origin server.</span></span></param>
        <summary><span data-ttu-id="90180-145">将指定的连接访问权限添加到当前代码组。</span><span class="sxs-lookup"><span data-stu-id="90180-145">Adds the specified connection access to the current code group.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90180-146">可以为同一添加多个 <xref:System.Security.Policy.CodeConnectAccess> 对象 `origin scheme` 。</span><span class="sxs-lookup"><span data-stu-id="90180-146">You can add multiple <xref:System.Security.Policy.CodeConnectAccess> objects for the same `origin scheme`.</span></span> <span data-ttu-id="90180-147">如果 `origin scheme` 已有一个或多个关联 <xref:System.Security.Policy.CodeConnectAccess> 的对象，则为指定将 `null` `connectAccess` 不起作用。</span><span class="sxs-lookup"><span data-stu-id="90180-147">If an `origin scheme` already has one or more associated <xref:System.Security.Policy.CodeConnectAccess> objects, specifying `null` for `connectAccess` has no effect.</span></span> <span data-ttu-id="90180-148">如果源方案没有关联的 <xref:System.Security.Policy.CodeConnectAccess> 对象，则为指定 `null` 以 `connectAccess` 防止代码的原始方案与 `originScheme` 访问其源服务器的匹配。</span><span class="sxs-lookup"><span data-stu-id="90180-148">If the origin scheme does not have associated <xref:System.Security.Policy.CodeConnectAccess> objects, specifying `null` for `connectAccess` prevents code with an origin scheme that matches `originScheme` from accessing its origin server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90180-149">下面的代码示例演示如何创建对象并将其添加 <xref:System.Security.Policy.CodeConnectAccess> 到 <xref:System.Security.Policy.NetCodeGroup> 中。</span><span class="sxs-lookup"><span data-stu-id="90180-149">The following code example demonstrates creating and adding <xref:System.Security.Policy.CodeConnectAccess> objects to a <xref:System.Security.Policy.NetCodeGroup>.</span></span>  
  
 [!code-cpp[NclCodeGroup#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#3)]
 [!code-csharp[NclCodeGroup#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="90180-150"><paramref name="originScheme" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="90180-150"><paramref name="originScheme" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="90180-151"><paramref name="originScheme" /> 包含方案中不允许的字符。</span><span class="sxs-lookup"><span data-stu-id="90180-151"><paramref name="originScheme" /> contains characters that are not permitted in schemes.</span></span>  
  
<span data-ttu-id="90180-152">- 或 -</span><span class="sxs-lookup"><span data-stu-id="90180-152">-or-</span></span> 
 <span data-ttu-id="90180-153"><paramref name="originScheme" /> = <see cref="F:System.Security.Policy.NetCodeGroup.AbsentOriginScheme" /> 和 <paramref name="connectAccess" /> 指定 <see cref="F:System.Security.Policy.CodeConnectAccess.OriginScheme" /> 作为其方案。</span><span class="sxs-lookup"><span data-stu-id="90180-153"><paramref name="originScheme" /> = <see cref="F:System.Security.Policy.NetCodeGroup.AbsentOriginScheme" /> and <paramref name="connectAccess" /> specifies <see cref="F:System.Security.Policy.CodeConnectAccess.OriginScheme" /> as its scheme.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AnyOtherOriginScheme">
      <MemberSignature Language="C#" Value="public static readonly string AnyOtherOriginScheme;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string AnyOtherOriginScheme" />
      <MemberSignature Language="DocId" Value="F:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AnyOtherOriginScheme As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ AnyOtherOriginScheme;" />
      <MemberSignature Language="F#" Value=" staticval mutable AnyOtherOriginScheme : string" Usage="System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90180-154">包含一个值，用于指定任何其他未指定的原始方案。</span><span class="sxs-lookup"><span data-stu-id="90180-154">Contains a value used to specify any other unspecified origin scheme.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90180-155">调用方法时 <xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A> ，指定方案和关联的 <xref:System.Security.Policy.CodeConnectAccess> 对象。</span><span class="sxs-lookup"><span data-stu-id="90180-155">When calling the <xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A> method, you specify a scheme and an associated <xref:System.Security.Policy.CodeConnectAccess> object.</span></span> <span data-ttu-id="90180-156">您可以使用字段的值 <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> 来指定 <xref:System.Security.Policy.CodeConnectAccess> 应用于未显式包含在添加到当前对象的源方案集内的任何方案的对象 <xref:System.Security.Policy.NetCodeGroup> 。</span><span class="sxs-lookup"><span data-stu-id="90180-156">You can use the value of the <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> field to specify the <xref:System.Security.Policy.CodeConnectAccess> objects that should be used for any scheme that is not explicitly contained in the set of origin schemes added to the current <xref:System.Security.Policy.NetCodeGroup> object.</span></span>  
  
 <span data-ttu-id="90180-157"><xref:System.Security.Policy.CodeConnectAccess> <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> 仅当代码的原始方案与添加到当前对象的源方案集内包含的任何方案都不匹配时，才使用通过字段指定的对象 <xref:System.Security.Policy.NetCodeGroup> 。</span><span class="sxs-lookup"><span data-stu-id="90180-157">The <xref:System.Security.Policy.CodeConnectAccess> objects specified with the <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> field are only used if the code's origin scheme does not match any of the schemes contained in the set of origin schemes added to the current <xref:System.Security.Policy.NetCodeGroup> object.</span></span>  
  
 <span data-ttu-id="90180-158">若要指定在 <xref:System.Security.Policy.CodeConnectAccess> 代码的原始方案在其证据中不可用或无法识别时要应用的对象，请使用 <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> 值。</span><span class="sxs-lookup"><span data-stu-id="90180-158">To specify the <xref:System.Security.Policy.CodeConnectAccess> objects to apply when the code's origin scheme is not available in its evidence or is not recognized, use the <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> value.</span></span>  
  
 <span data-ttu-id="90180-159">该字段的值 <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> 为 "\*"。</span><span class="sxs-lookup"><span data-stu-id="90180-159">The value of the <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> field is "\*".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeString">
      <MemberSignature Language="C#" Value="public override string AttributeString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AttributeString" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.NetCodeGroup.AttributeString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AttributeString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AttributeString { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AttributeString : string" Usage="System.Security.Policy.NetCodeGroup.AttributeString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90180-160">获取代码组策略声明的特性的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="90180-160">Gets a string representation of the attributes of the policy statement for the code group.</span></span></summary>
        <value><span data-ttu-id="90180-161">总是为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="90180-161">Always <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.Policy.CodeGroup Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Policy.CodeGroup Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.NetCodeGroup.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As CodeGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Policy::CodeGroup ^ Copy();" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Security.Policy.CodeGroup" Usage="netCodeGroup.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Policy.CodeGroup</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90180-162">生成当前代码组的深层副本。</span><span class="sxs-lookup"><span data-stu-id="90180-162">Makes a deep copy of the current code group.</span></span></summary>
        <returns><span data-ttu-id="90180-163">当前代码组（包括其成员条件和子代码组）的等效副本。</span><span class="sxs-lookup"><span data-stu-id="90180-163">An equivalent copy of the current code group, including its membership conditions and child code groups.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90180-164">此方法会创建代码组的深层副本，这意味着还会生成代码组包含的所有对象的副本。</span><span class="sxs-lookup"><span data-stu-id="90180-164">This method makes a deep copy of the code group, meaning that copies of all objects the code group contains are also made.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateXml">
      <MemberSignature Language="C#" Value="protected override void CreateXml (System.Security.SecurityElement element, System.Security.Policy.PolicyLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateXml(class System.Security.SecurityElement element, class System.Security.Policy.PolicyLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.NetCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateXml (element As SecurityElement, level As PolicyLevel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateXml(System::Security::SecurityElement ^ element, System::Security::Policy::PolicyLevel ^ level);" />
      <MemberSignature Language="F#" Value="override this.CreateXml : System.Security.SecurityElement * System.Security.Policy.PolicyLevel -&gt; unit" Usage="netCodeGroup.CreateXml (element, level)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Security.SecurityElement" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <param name="level">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.NetCodeGroup.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="netCodeGroup.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="90180-165">要与当前代码组进行比较的 <see cref="T:System.Security.Policy.NetCodeGroup" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="90180-165">The <see cref="T:System.Security.Policy.NetCodeGroup" /> object to compare with the current code group.</span></span></param>
        <summary><span data-ttu-id="90180-166">确定指定的代码组是否等效于当前代码组。</span><span class="sxs-lookup"><span data-stu-id="90180-166">Determines whether the specified code group is equivalent to the current code group.</span></span></summary>
        <returns><span data-ttu-id="90180-167">如果指定的代码组等效于当前代码组，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="90180-167"><see langword="true" /> if the specified code group is equivalent to the current code group; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90180-168">以下数据用于确定两个对象的相等性 <xref:System.Security.Policy.NetCodeGroup> ：</span><span class="sxs-lookup"><span data-stu-id="90180-168">The following data are used to determine the equality of two <xref:System.Security.Policy.NetCodeGroup> objects:</span></span>  
  
-   <span data-ttu-id="90180-169"><xref:System.Security.Policy.CodeGroup.Name%2A>和 <xref:System.Security.Policy.CodeGroup.Description%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="90180-169">The <xref:System.Security.Policy.CodeGroup.Name%2A> and <xref:System.Security.Policy.CodeGroup.Description%2A> properties.</span></span>  
  
-   <span data-ttu-id="90180-170"><xref:System.Security.Policy.CodeGroup.MembershipCondition%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="90180-170">The <xref:System.Security.Policy.CodeGroup.MembershipCondition%2A> property.</span></span>  
  
-   <span data-ttu-id="90180-171">源方案和关联的对象的集合 <xref:System.Security.Policy.CodeConnectAccess> 。</span><span class="sxs-lookup"><span data-stu-id="90180-171">The set of origin schemes and the associated <xref:System.Security.Policy.CodeConnectAccess> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConnectAccessRules">
      <MemberSignature Language="C#" Value="public System.Collections.DictionaryEntry[] GetConnectAccessRules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.DictionaryEntry[] GetConnectAccessRules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.NetCodeGroup.GetConnectAccessRules" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConnectAccessRules () As DictionaryEntry()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Collections::DictionaryEntry&gt; ^ GetConnectAccessRules();" />
      <MemberSignature Language="F#" Value="member this.GetConnectAccessRules : unit -&gt; System.Collections.DictionaryEntry[]" Usage="netCodeGroup.GetConnectAccessRules " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.DictionaryEntry[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90180-172">获取当前代码组的连接访问权限信息。</span><span class="sxs-lookup"><span data-stu-id="90180-172">Gets the connection access information for the current code group.</span></span></summary>
        <returns><span data-ttu-id="90180-173">一个 <see cref="T:System.Collections.DictionaryEntry" /> 数组，包含连接访问权限信息。</span><span class="sxs-lookup"><span data-stu-id="90180-173">A <see cref="T:System.Collections.DictionaryEntry" /> array containing connection access information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90180-174">在每个字典条目中， <xref:System.Collections.DictionaryEntry.Key%2A> 属性值为原始方案， <xref:System.Collections.DictionaryEntry.Value%2A> 属性值为关联对象的数组 <xref:System.Security.Policy.CodeConnectAccess> 。</span><span class="sxs-lookup"><span data-stu-id="90180-174">In each dictionary entry, the <xref:System.Collections.DictionaryEntry.Key%2A> property value is the origin scheme, and the <xref:System.Collections.DictionaryEntry.Value%2A> property value is the array of associated <xref:System.Security.Policy.CodeConnectAccess> objects.</span></span> <span data-ttu-id="90180-175">如果没有关联的 <xref:System.Security.Policy.CodeConnectAccess> 对象，则 <xref:System.Collections.DictionaryEntry.Value%2A?displayProperty=nameWithType> 返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="90180-175">If there are no associated <xref:System.Security.Policy.CodeConnectAccess> objects, <xref:System.Collections.DictionaryEntry.Value%2A?displayProperty=nameWithType> returns an empty array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90180-176">下面的代码示例演示如何显示对象的连接访问规则 <xref:System.Security.Policy.NetCodeGroup> 。</span><span class="sxs-lookup"><span data-stu-id="90180-176">The following code example demonstrates displaying the connection access rules for a <xref:System.Security.Policy.NetCodeGroup> object.</span></span>  
  
 [!code-cpp[NclCodeGroup#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#8)]
 [!code-csharp[NclCodeGroup#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.NetCodeGroup.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="netCodeGroup.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90180-177">获取当前代码组的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="90180-177">Gets the hash code of the current code group.</span></span></summary>
        <returns><span data-ttu-id="90180-178">当前代码组的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="90180-178">The hash code of the current code group.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Security.Policy.CodeGroup.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="MergeLogic">
      <MemberSignature Language="C#" Value="public override string MergeLogic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MergeLogic" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.NetCodeGroup.MergeLogic" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MergeLogic As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MergeLogic { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MergeLogic : string" Usage="System.Security.Policy.NetCodeGroup.MergeLogic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90180-179">获取用于合并组的逻辑。</span><span class="sxs-lookup"><span data-stu-id="90180-179">Gets the logic to use for merging groups.</span></span></summary>
        <value><span data-ttu-id="90180-180">字符串“Union”。</span><span class="sxs-lookup"><span data-stu-id="90180-180">The string "Union".</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseXml">
      <MemberSignature Language="C#" Value="protected override void ParseXml (System.Security.SecurityElement e, System.Security.Policy.PolicyLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ParseXml(class System.Security.SecurityElement e, class System.Security.Policy.PolicyLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.NetCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ParseXml (e As SecurityElement, level As PolicyLevel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ParseXml(System::Security::SecurityElement ^ e, System::Security::Policy::PolicyLevel ^ level);" />
      <MemberSignature Language="F#" Value="override this.ParseXml : System.Security.SecurityElement * System.Security.Policy.PolicyLevel -&gt; unit" Usage="netCodeGroup.ParseXml (e, level)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Security.SecurityElement" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <param name="level">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PermissionSetName">
      <MemberSignature Language="C#" Value="public override string PermissionSetName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PermissionSetName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.NetCodeGroup.PermissionSetName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PermissionSetName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PermissionSetName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PermissionSetName : string" Usage="System.Security.Policy.NetCodeGroup.PermissionSetName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="90180-181">获取该代码组的 <see cref="T:System.Security.NamedPermissionSet" /> 的名称。</span><span class="sxs-lookup"><span data-stu-id="90180-181">Gets the name of the <see cref="T:System.Security.NamedPermissionSet" /> for the code group.</span></span></summary>
        <value><span data-ttu-id="90180-182">始终为字符串“Same site Web”。</span><span class="sxs-lookup"><span data-stu-id="90180-182">Always the string "Same site Web."</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetConnectAccess">
      <MemberSignature Language="C#" Value="public void ResetConnectAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetConnectAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.NetCodeGroup.ResetConnectAccess" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetConnectAccess ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetConnectAccess();" />
      <MemberSignature Language="F#" Value="member this.ResetConnectAccess : unit -&gt; unit" Usage="netCodeGroup.ResetConnectAccess " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90180-183">移除当前代码组的所有连接访问权限信息。</span><span class="sxs-lookup"><span data-stu-id="90180-183">Removes all connection access information for the current code group.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90180-184">使用此方法可删除系统提供的默认连接访问规则。</span><span class="sxs-lookup"><span data-stu-id="90180-184">Use this method to remove the system-supplied default connection access rules.</span></span>  
  
 <span data-ttu-id="90180-185">下表显示了默认规则。</span><span class="sxs-lookup"><span data-stu-id="90180-185">The default rules are shown in the following table.</span></span>  
  
|<span data-ttu-id="90180-186">Scheme</span><span class="sxs-lookup"><span data-stu-id="90180-186">Scheme</span></span>|<span data-ttu-id="90180-187">规则</span><span class="sxs-lookup"><span data-stu-id="90180-187">Rule</span></span>|  
|------------|----------|  
|<span data-ttu-id="90180-188">文件</span><span class="sxs-lookup"><span data-stu-id="90180-188">file</span></span>|<span data-ttu-id="90180-189">不允许对源服务器进行连接访问。</span><span class="sxs-lookup"><span data-stu-id="90180-189">No connection access to the origin server is permitted.</span></span>|  
|<span data-ttu-id="90180-190">http</span><span class="sxs-lookup"><span data-stu-id="90180-190">http</span></span>|<span data-ttu-id="90180-191">使用源端口允许 HTTP 和 HTTPS 访问。</span><span class="sxs-lookup"><span data-stu-id="90180-191">HTTP and HTTPS access is permitted using the origin port.</span></span>|  
|<span data-ttu-id="90180-192">https</span><span class="sxs-lookup"><span data-stu-id="90180-192">https</span></span>|<span data-ttu-id="90180-193">使用源端口允许 HTTPS 访问。</span><span class="sxs-lookup"><span data-stu-id="90180-193">HTTPS access is permitted using the origin port.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="90180-194">下面的代码示例演示如何调用此方法以删除默认代码访问连接规则。</span><span class="sxs-lookup"><span data-stu-id="90180-194">The following code example demonstrates calling this method to remove the default code access connection rules.</span></span>  
  
 [!code-cpp[NclCodeGroup#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#3)]
 [!code-csharp[NclCodeGroup#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public override System.Security.Policy.PolicyStatement Resolve (System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Policy.PolicyStatement Resolve(class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.NetCodeGroup.Resolve(System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Resolve (evidence As Evidence) As PolicyStatement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Policy::PolicyStatement ^ Resolve(System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="override this.Resolve : System.Security.Policy.Evidence -&gt; System.Security.Policy.PolicyStatement" Usage="netCodeGroup.Resolve evidence" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Policy.PolicyStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="evidence"><span data-ttu-id="90180-195">程序集的 <see cref="T:System.Security.Policy.Evidence" />。</span><span class="sxs-lookup"><span data-stu-id="90180-195">The <see cref="T:System.Security.Policy.Evidence" /> for the assembly.</span></span></param>
        <summary><span data-ttu-id="90180-196">对一组证据解析代码组及其子代的策略。</span><span class="sxs-lookup"><span data-stu-id="90180-196">Resolves policy for the code group and its descendants for a set of evidence.</span></span></summary>
        <returns><span data-ttu-id="90180-197">由具有可选特性的代码组授予的权限组成的 <see cref="T:System.Security.Policy.PolicyStatement" />；或者，如果代码组不适用（成员条件与指定的证据不匹配），则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="90180-197">A <see cref="T:System.Security.Policy.PolicyStatement" /> that consists of the permissions granted by the code group with optional attributes, or <see langword="null" /> if the code group does not apply (the membership condition does not match the specified evidence).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90180-198">对于要加载的程序集，此方法通过首先检查针对指定证据的成员资格条件来计算代码组。</span><span class="sxs-lookup"><span data-stu-id="90180-198">Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence.</span></span> <span data-ttu-id="90180-199">如果存在匹配项，则此方法返回代码组的策略声明，包括子代码组的计算。</span><span class="sxs-lookup"><span data-stu-id="90180-199">If there is a match, this method returns a policy statement for the code group, including evaluation of child code groups.</span></span>  
  
 <span data-ttu-id="90180-200">此方法的操作如下所示：</span><span class="sxs-lookup"><span data-stu-id="90180-200">The operation of this method is as follows:</span></span>  
  
 <span data-ttu-id="90180-201">如果成员条件与指定的证据不匹配，则返回 `null` ; 否则，将返回的权限集 (P) 等于代码组的策略语句并继续。</span><span class="sxs-lookup"><span data-stu-id="90180-201">If the membership condition does not match the specified evidence, return `null`; otherwise, set the permission set to be returned (P) equal to the code group's policy statement and continue.</span></span> <span data-ttu-id="90180-202">对于每个子代码组，请解析具有相同证据的代码组;如果结果不为 `null` ，则返回该策略语句。</span><span class="sxs-lookup"><span data-stu-id="90180-202">For each child code group, resolve the code group with the same evidence; if the result is not `null`, return that policy statement.</span></span> <span data-ttu-id="90180-203">如果没有匹配的子代码组，则返回 P (父的 policy 语句) 。</span><span class="sxs-lookup"><span data-stu-id="90180-203">If no child code group matched, return P (the parent's policy statement).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="90180-204"><paramref name="evidence" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="90180-204">The <paramref name="evidence" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Policy.PolicyException"><span data-ttu-id="90180-205">将不止一个代码组（包括父代码组和任何子代码组）标记为 <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />。</span><span class="sxs-lookup"><span data-stu-id="90180-205">More than one code group (including the parent code group and any child code groups) is marked <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveMatchingCodeGroups">
      <MemberSignature Language="C#" Value="public override System.Security.Policy.CodeGroup ResolveMatchingCodeGroups (System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Policy.CodeGroup ResolveMatchingCodeGroups(class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveMatchingCodeGroups (evidence As Evidence) As CodeGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Policy::CodeGroup ^ ResolveMatchingCodeGroups(System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="override this.ResolveMatchingCodeGroups : System.Security.Policy.Evidence -&gt; System.Security.Policy.CodeGroup" Usage="netCodeGroup.ResolveMatchingCodeGroups evidence" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Policy.CodeGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="evidence"><span data-ttu-id="90180-206">程序集的证据。</span><span class="sxs-lookup"><span data-stu-id="90180-206">The evidence for the assembly.</span></span></param>
        <summary><span data-ttu-id="90180-207">解析匹配的代码组。</span><span class="sxs-lookup"><span data-stu-id="90180-207">Resolves matching code groups.</span></span></summary>
        <returns><span data-ttu-id="90180-208">证据匹配的完整代码组集。</span><span class="sxs-lookup"><span data-stu-id="90180-208">The complete set of code groups that were matched by the evidence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90180-209">对于要加载的程序集，此方法通过首先检查针对指定证据的成员资格条件来计算代码组。</span><span class="sxs-lookup"><span data-stu-id="90180-209">Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence.</span></span> <span data-ttu-id="90180-210">如果有匹配项，则此方法返回一个根代码组。</span><span class="sxs-lookup"><span data-stu-id="90180-210">If there is a match, this method returns a root code group.</span></span> <span data-ttu-id="90180-211">返回的代码组可能包含子代码组，这些子代码组也可能具有子代码组，因此返回值反映了由提供的证据匹配的一组完整的代码组。</span><span class="sxs-lookup"><span data-stu-id="90180-211">The code group that is returned may contain child code groups, which, in turn, may also have child code groups, so the return value reflects the complete set of code groups that were matched by the evidence provided.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="90180-212"><paramref name="evidence" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="90180-212">The <paramref name="evidence" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
