<Type Name="IWorkflowCompilerOptionsService" FullName="System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8ac3fa2a17ebd55e0cd529539e424622fc4ebad8" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89853009" /></Metadata><TypeSignature Language="C#" Value="public interface IWorkflowCompilerOptionsService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWorkflowCompilerOptionsService" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWorkflowCompilerOptionsService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWorkflowCompilerOptionsService" />
  <TypeSignature Language="F#" Value="type IWorkflowCompilerOptionsService = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>定义由承载工作流设计器和编译器的环境实现以在验证和编译过程中提供特定于环境的编译信息的接口。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CheckTypes">
      <MemberSignature Language="C#" Value="public bool CheckTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckTypes" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.CheckTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckTypes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckTypes { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckTypes : bool" Usage="System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.CheckTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个指示是否检查类型的值。</summary>
        <value>如果检查类型，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在工作流编译的验证阶段，如果 <xref:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.CheckTypes%2A> 属性为 `true` ，并且工作流或伴随规则文件直接引用授权类型列表中不存在的任何 .NET Framework 类型，则工作流源文档将被拒绝。 授权类型列表是一个 XML 文档，其中每个条目表示一个 `Assembly` 、、 `Namespace` 一个 `TypeName` 和一个 `Authorized` { `true` 或 `false` } 指示符。 此类与列表上的一项对应。 另外请注意，允许指定通配符以包括或排除完整的命名空间。 例如，使用 `Type="System.*"` 包括中的所有类型 <xref:System> ，包括子命名空间中包含的类型。  
  
 使用授权类型列表的方式由 <xref:System.Workflow.ComponentModel.Compiler.WorkflowCompiler> 选项 **/checktypes** 或使用 <xref:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.CheckTypes%2A> 属性控制。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public string Language { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Language" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.Language" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Language As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Language { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Language : string" Usage="System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.Language" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取在编译工作流时环境使用的编程语言，例如 Visual Studio。</summary>
        <value>开发环境使用的编程语言的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例演示 `Language` 属性的实现。 此示例摘自“跟踪配置文件设计器”SDK 示例。 有关详细信息，请参阅 [跟踪配置文件设计器示例](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742004(v=vs.90))。  
  
 [!code-csharp[WF_Samples#123](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#123)]
 [!code-vb[WF_Samples#123](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#123)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootNamespace">
      <MemberSignature Language="C#" Value="public string RootNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RootNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.RootNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RootNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootNamespace : string" Usage="System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.RootNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取为此项目设置的根命名空间。</summary>
        <value>根命名空间的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性在 Visual Basic 编译环境中用于将项目的根命名空间传递到编译器。  
  
   
  
## Examples  
 下面的示例演示 `RootNamespace` 属性的实现。 此示例摘自“跟踪配置文件设计器”SDK 示例。 有关详细信息，请参阅 [跟踪配置文件设计器示例](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742004(v=vs.90))。  
  
 [!code-csharp[Wf_samples#122](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#122)]
 [!code-vb[Wf_samples#122](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#122)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
