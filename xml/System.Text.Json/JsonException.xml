<Type Name="JsonException" FullName="System.Text.Json.JsonException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="64fcbe67a967d60e3ee86a94a30a861cb2720d1f" /><Meta Name="ms.sourcegitcommit" Value="930a2e90be5bc29a285f5df9da5cd44a74574596" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/23/2020" /><Meta Name="ms.locfileid" Value="91129363" /></Metadata><TypeSignature Language="C#" Value="public class JsonException : Exception" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JsonException extends System.Exception" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.JsonException" />
  <TypeSignature Language="VB.NET" Value="Public Class JsonException&#xA;Inherits Exception" />
  <TypeSignature Language="C++ CLI" Value="public ref class JsonException : Exception" />
  <TypeSignature Language="F#" Value="type JsonException = class&#xA;    inherit Exception" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="05662-101">定义一个自定义异常对象，当遇到无效 JSON 文本、传递已定义的最大深度或 JSON 文本与对象上的属性类型不兼容时，则引发该异常对象。</span><span class="sxs-lookup"><span data-stu-id="05662-101">Defines a custom exception object that is thrown when invalid JSON text is encountered, when the defined maximum depth is passed, or the JSON text is not compatible with the type of a property on an object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="05662-102">有关详细信息，请参阅 [如何编写用于 JSON 序列化的自定义转换器](/dotnet/standard/serialization/system-text-json-converters-how-to#error-handling)。</span><span class="sxs-lookup"><span data-stu-id="05662-102">For more information, see [How to write custom converters for JSON serialization](/dotnet/standard/serialization/system-text-json-converters-how-to#error-handling).</span></span>

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JsonException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="05662-103">初始化 <see cref="T:System.Text.Json.JsonException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="05662-103">Initializes a new instance of the <see cref="T:System.Text.Json.JsonException" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JsonException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Text.Json.JsonException : string -&gt; System.Text.Json.JsonException" Usage="new System.Text.Json.JsonException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="05662-104">上下文特定的错误消息。</span><span class="sxs-lookup"><span data-stu-id="05662-104">The context-specific error message.</span></span></param>
        <summary><span data-ttu-id="05662-105">用指定的错误消息初始化 <see cref="T:System.Text.Json.JsonException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="05662-105">Initializes a new instance of the <see cref="T:System.Text.Json.JsonException" /> class with a specified error message.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JsonException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JsonException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Text.Json.JsonException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Text.Json.JsonException" Usage="new System.Text.Json.JsonException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="05662-106">有关引发的异常的序列化对象数据。</span><span class="sxs-lookup"><span data-stu-id="05662-106">The serialized object data about the exception being thrown.</span></span></param>
        <param name="context"><span data-ttu-id="05662-107">一个包含有关源或目标的上下文信息的对象。</span><span class="sxs-lookup"><span data-stu-id="05662-107">An object that contains contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="05662-108">使用序列化数据创建新的异常对象。</span><span class="sxs-lookup"><span data-stu-id="05662-108">Creates a new exception object with serialized data.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="05662-109"><paramref name="info" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="05662-109"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JsonException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.Text.Json.JsonException : string * Exception -&gt; System.Text.Json.JsonException" Usage="new System.Text.Json.JsonException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="05662-110">上下文特定的错误消息。</span><span class="sxs-lookup"><span data-stu-id="05662-110">The context-specific error message.</span></span></param>
        <param name="innerException"><span data-ttu-id="05662-111">引发当前异常的异常。</span><span class="sxs-lookup"><span data-stu-id="05662-111">The exception that caused the current exception.</span></span></param>
        <summary><span data-ttu-id="05662-112">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:System.Text.Json.JsonException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="05662-112">Initializes a new instance of the <see cref="T:System.Text.Json.JsonException" /> class, with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonException (string message, string path, long? lineNumber, long? bytePositionInLine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, string path, valuetype System.Nullable`1&lt;int64&gt; lineNumber, valuetype System.Nullable`1&lt;int64&gt; bytePositionInLine) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonException.#ctor(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, path As String, lineNumber As Nullable(Of Long), bytePositionInLine As Nullable(Of Long))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JsonException(System::String ^ message, System::String ^ path, Nullable&lt;long&gt; lineNumber, Nullable&lt;long&gt; bytePositionInLine);" />
      <MemberSignature Language="F#" Value="new System.Text.Json.JsonException : string * string * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; -&gt; System.Text.Json.JsonException" Usage="new System.Text.Json.JsonException (message, path, lineNumber, bytePositionInLine)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="lineNumber" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="bytePositionInLine" Type="System.Nullable&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="05662-113">上下文特定的错误消息。</span><span class="sxs-lookup"><span data-stu-id="05662-113">The context-specific error message.</span></span></param>
        <param name="path"><span data-ttu-id="05662-114">遇到无效的 JSON 路径。</span><span class="sxs-lookup"><span data-stu-id="05662-114">The path where the invalid JSON was encountered.</span></span></param>
        <param name="lineNumber"><span data-ttu-id="05662-115">反序列化时遇到无效 JSON 时所在的行号（从 0 开始）。</span><span class="sxs-lookup"><span data-stu-id="05662-115">The line number (starting at 0) at which the invalid JSON was encountered when deserializing.</span></span></param>
        <param name="bytePositionInLine"><span data-ttu-id="05662-116">遇到无效 JSON 的当前行（从 0 开始）中的字节计数。</span><span class="sxs-lookup"><span data-stu-id="05662-116">The byte count within the current line (starting at 0) where the invalid JSON was encountered.</span></span></param>
        <summary><span data-ttu-id="05662-117">创建新的异常对象，将错误信息传递给用户。</span><span class="sxs-lookup"><span data-stu-id="05662-117">Creates a new exception object to relay error information to the user.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="05662-118">请注意， `bytePositionInLine` 会计算 (的字节数、utf-8 代码单元) ，而不是字符或标量。</span><span class="sxs-lookup"><span data-stu-id="05662-118">Note that `bytePositionInLine` counts the number of bytes (that is,  UTF-8 code units), and not characters or scalars.</span></span>

            ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonException (string message, string path, long? lineNumber, long? bytePositionInLine, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, string path, valuetype System.Nullable`1&lt;int64&gt; lineNumber, valuetype System.Nullable`1&lt;int64&gt; bytePositionInLine, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonException.#ctor(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, path As String, lineNumber As Nullable(Of Long), bytePositionInLine As Nullable(Of Long), innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JsonException(System::String ^ message, System::String ^ path, Nullable&lt;long&gt; lineNumber, Nullable&lt;long&gt; bytePositionInLine, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.Text.Json.JsonException : string * string * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Exception -&gt; System.Text.Json.JsonException" Usage="new System.Text.Json.JsonException (message, path, lineNumber, bytePositionInLine, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="lineNumber" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="bytePositionInLine" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="05662-119">上下文特定的错误消息。</span><span class="sxs-lookup"><span data-stu-id="05662-119">The context-specific error message.</span></span></param>
        <param name="path"><span data-ttu-id="05662-120">遇到无效的 JSON 路径。</span><span class="sxs-lookup"><span data-stu-id="05662-120">The path where the invalid JSON was encountered.</span></span></param>
        <param name="lineNumber"><span data-ttu-id="05662-121">反序列化时遇到无效 JSON 时所在的行号（从 0 开始）。</span><span class="sxs-lookup"><span data-stu-id="05662-121">The line number (starting at 0) at which the invalid JSON was encountered when deserializing.</span></span></param>
        <param name="bytePositionInLine"><span data-ttu-id="05662-122">遇到无效 JSON 时所在当前行中的字节计数（从 0 开始）。</span><span class="sxs-lookup"><span data-stu-id="05662-122">The byte count (starting at 0) within the current line where the invalid JSON was encountered.</span></span></param>
        <param name="innerException"><span data-ttu-id="05662-123">引发当前异常的异常。</span><span class="sxs-lookup"><span data-stu-id="05662-123">The exception that caused the current exception.</span></span></param>
        <summary><span data-ttu-id="05662-124">创建新的异常对象，以将错误信息传递给包含指定内部异常的用户。</span><span class="sxs-lookup"><span data-stu-id="05662-124">Creates a new exception object to relay error information to the user that includes a specified inner exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="05662-125">请注意， `bytePositionInLine` 会计算 (的字节数、utf-8 代码单元) ，而不是字符或标量。</span><span class="sxs-lookup"><span data-stu-id="05662-125">Note that the `bytePositionInLine` counts the number of bytes (that is, UTF-8 code units), and not characters or scalars.</span></span>

            ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BytePositionInLine">
      <MemberSignature Language="C#" Value="public long? BytePositionInLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int64&gt; BytePositionInLine" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonException.BytePositionInLine" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BytePositionInLine As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;long&gt; BytePositionInLine { Nullable&lt;long&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.BytePositionInLine : Nullable&lt;int64&gt;" Usage="System.Text.Json.JsonException.BytePositionInLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05662-126">获取异常出现之前在当前行读取的从零开始的字节数。</span><span class="sxs-lookup"><span data-stu-id="05662-126">Gets the zero-based number of bytes read within the current line before the exception.</span></span></summary>
        <value><span data-ttu-id="05662-127">在异常之前从零开始的字节数（从零开始）。</span><span class="sxs-lookup"><span data-stu-id="05662-127">The zero-based number of bytes read within the current line before the exception.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="jsonException.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="05662-128">有关引发的异常的序列化对象数据。</span><span class="sxs-lookup"><span data-stu-id="05662-128">The serialized object data about the exception being thrown.</span></span></param>
        <param name="context"><span data-ttu-id="05662-129">一个包含有关源或目标的上下文信息的对象。</span><span class="sxs-lookup"><span data-stu-id="05662-129">An object that contains contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="05662-130">使用关于异常的信息设置 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span><span class="sxs-lookup"><span data-stu-id="05662-130">Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public long? LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int64&gt; LineNumber" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonException.LineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineNumber As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;long&gt; LineNumber { Nullable&lt;long&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.LineNumber : Nullable&lt;int64&gt;" Usage="System.Text.Json.JsonException.LineNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05662-131">获取异常出现之前读取的从零开始的行数。</span><span class="sxs-lookup"><span data-stu-id="05662-131">Gets the zero-based number of lines read before the exception.</span></span></summary>
        <value><span data-ttu-id="05662-132">在异常之前读取的从零开始的行数。</span><span class="sxs-lookup"><span data-stu-id="05662-132">The zero-based number of lines read before the exception.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public override string? Message { get; }" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonException.Message" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Message { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="System.Text.Json.JsonException.Message" />
      <MemberSignature Language="C#" Value="public override string Message { get; }" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05662-133">获取描述当前异常的消息。</span><span class="sxs-lookup"><span data-stu-id="05662-133">Gets a message that describes the current exception.</span></span></summary>
        <value><span data-ttu-id="05662-134">描述当前异常的错误消息。</span><span class="sxs-lookup"><span data-stu-id="05662-134">The error message that describes the current exception.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonException.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Path : string" Usage="System.Text.Json.JsonException.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05662-135">获取 JSON 中遇到异常的路径。</span><span class="sxs-lookup"><span data-stu-id="05662-135">Gets The path within the JSON where the exception was encountered.</span></span></summary>
        <value><span data-ttu-id="05662-136">JSON 中遇到异常的路径。</span><span class="sxs-lookup"><span data-stu-id="05662-136">The path within the JSON where the exception was encountered.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
