<Type Name="JsonNamingPolicy" FullName="System.Text.Json.JsonNamingPolicy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="acb1c3581ad8ed7ba78aabbf5caf7f27aed6690f" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89950045" /></Metadata><TypeSignature Language="C#" Value="public abstract class JsonNamingPolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JsonNamingPolicy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.JsonNamingPolicy" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JsonNamingPolicy" />
  <TypeSignature Language="C++ CLI" Value="public ref class JsonNamingPolicy abstract" />
  <TypeSignature Language="F#" Value="type JsonNamingPolicy = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0fa0e-101">确定用于将基于字符串的名称转换为其他格式（如 camel 大小写格式）的命名策略。</span><span class="sxs-lookup"><span data-stu-id="0fa0e-101">Determines the naming policy used to convert a string-based name to another format, such as a camel-casing format.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="0fa0e-102">有关详细信息，请参阅 [如何序列化和反序列化 JSON](/dotnet/standard/serialization/system-text-json-how-to#customize-json-names-and-values)。</span><span class="sxs-lookup"><span data-stu-id="0fa0e-102">For more information, see [How to serialize and deserialize JSON](/dotnet/standard/serialization/system-text-json-how-to#customize-json-names-and-values).</span></span>

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JsonNamingPolicy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonNamingPolicy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JsonNamingPolicy();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0fa0e-103">初始化 <see cref="T:System.Text.Json.JsonNamingPolicy" /> 的新实例。</span><span class="sxs-lookup"><span data-stu-id="0fa0e-103">Initializes a new instance of <see cref="T:System.Text.Json.JsonNamingPolicy" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CamelCase">
      <MemberSignature Language="C#" Value="public static System.Text.Json.JsonNamingPolicy CamelCase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Json.JsonNamingPolicy CamelCase" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonNamingPolicy.CamelCase" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CamelCase As JsonNamingPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Json::JsonNamingPolicy ^ CamelCase { System::Text::Json::JsonNamingPolicy ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CamelCase : System.Text.Json.JsonNamingPolicy" Usage="System.Text.Json.JsonNamingPolicy.CamelCase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonNamingPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0fa0e-104">获取 camel 大小写的命名策略。</span><span class="sxs-lookup"><span data-stu-id="0fa0e-104">Gets the naming policy for camel-casing.</span></span></summary>
        <value><span data-ttu-id="0fa0e-105">大小写大小的命名策略。</span><span class="sxs-lookup"><span data-stu-id="0fa0e-105">The naming policy for camel-casing.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="0fa0e-106">有关详细信息，请参阅 [如何序列化和反序列化 JSON](/dotnet/standard/serialization/system-text-json-how-to#use-camel-case-for-all-json-property-names)。</span><span class="sxs-lookup"><span data-stu-id="0fa0e-106">For more information, see [How to serialize and deserialize JSON](/dotnet/standard/serialization/system-text-json-how-to#use-camel-case-for-all-json-property-names).</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertName">
      <MemberSignature Language="C#" Value="public abstract string ConvertName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ConvertName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonNamingPolicy.ConvertName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ConvertName (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ ConvertName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member ConvertName : string -&gt; string" Usage="jsonNamingPolicy.ConvertName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="0fa0e-107">要转换的名称。</span><span class="sxs-lookup"><span data-stu-id="0fa0e-107">The name to convert.</span></span></param>
        <summary><span data-ttu-id="0fa0e-108">在派生类中重写时，根据策略转换指定名称。</span><span class="sxs-lookup"><span data-stu-id="0fa0e-108">When overridden in a derived class, converts the specified name according to the policy.</span></span></summary>
        <returns><span data-ttu-id="0fa0e-109">转换后的名称。</span><span class="sxs-lookup"><span data-stu-id="0fa0e-109">The converted name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="0fa0e-110">有关详细信息，请参阅 [如何序列化和反序列化 JSON](/dotnet/standard/serialization/system-text-json-how-to#use-a-custom-json-property-naming-policy)。</span><span class="sxs-lookup"><span data-stu-id="0fa0e-110">For more information, see [How to serialize and deserialize JSON](/dotnet/standard/serialization/system-text-json-how-to#use-a-custom-json-property-naming-policy).</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
