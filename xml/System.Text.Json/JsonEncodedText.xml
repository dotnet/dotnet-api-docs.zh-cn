<Type Name="JsonEncodedText" FullName="System.Text.Json.JsonEncodedText">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a7bd52b5e5d1afdb4b7db0af105632f8e0bbf28c" /><Meta Name="ms.sourcegitcommit" Value="943c8cdbe5b47c6c296a6f4b73038bbd43da0dd2" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/12/2021" /><Meta Name="ms.locfileid" Value="100314570" /></Metadata><TypeSignature Language="C#" Value="public struct JsonEncodedText : IEquatable&lt;System.Text.Json.JsonEncodedText&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit JsonEncodedText extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Text.Json.JsonEncodedText&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.JsonEncodedText" />
  <TypeSignature Language="VB.NET" Value="Public Structure JsonEncodedText&#xA;Implements IEquatable(Of JsonEncodedText)" />
  <TypeSignature Language="C++ CLI" Value="public value class JsonEncodedText : IEquatable&lt;System::Text::Json::JsonEncodedText&gt;" />
  <TypeSignature Language="F#" Value="type JsonEncodedText = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Text.Json.JsonEncodedText&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="eeab4-101">提供将 UTF-8 或 UTF-16 编码文本转换为适用于 JSON 的表单的方法。</span><span class="sxs-lookup"><span data-stu-id="eeab4-101">Provides methods to transform UTF-8 or UTF-16 encoded text into a form that is suitable for JSON.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="eeab4-102">此类型可用于缓存和存储用于提前编写 JSON 的已知字符串，方法是在前面预先对它们进行编码。</span><span class="sxs-lookup"><span data-stu-id="eeab4-102">This type can be used to cache and store known strings used for writing JSON ahead of time by pre-encoding them up front.</span></span>

            ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public static System.Text.Json.JsonEncodedText Encode (ReadOnlySpan&lt;byte&gt; utf8Value, System.Text.Encodings.Web.JavaScriptEncoder? encoder = default);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Text.Json.JsonEncodedText Encode(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8Value, class System.Text.Encodings.Web.JavaScriptEncoder encoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonEncodedText.Encode(System.ReadOnlySpan{System.Byte},System.Text.Encodings.Web.JavaScriptEncoder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Encode (utf8Value As ReadOnlySpan(Of Byte), Optional encoder As JavaScriptEncoder = Nothing) As JsonEncodedText" />
      <MemberSignature Language="F#" Value="static member Encode : ReadOnlySpan&lt;byte&gt; * System.Text.Encodings.Web.JavaScriptEncoder -&gt; System.Text.Json.JsonEncodedText" Usage="System.Text.Json.JsonEncodedText.Encode (utf8Value, encoder)" />
      <MemberSignature Language="C#" Value="public static System.Text.Json.JsonEncodedText Encode (ReadOnlySpan&lt;byte&gt; utf8Value, System.Text.Encodings.Web.JavaScriptEncoder encoder = default);" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonEncodedText</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="encoder" Type="System.Text.Encodings.Web.JavaScriptEncoder" />
      </Parameters>
      <Docs>
        <param name="utf8Value"><span data-ttu-id="eeab4-103">要转换为 JSON 编码文本的 UTF-8 编码文本。</span><span class="sxs-lookup"><span data-stu-id="eeab4-103">The UTF-8 encoded text to convert to JSON encoded text.</span></span></param>
        <param name="encoder"><span data-ttu-id="eeab4-104">要在转义字符串时使用的编码器，或为 <see langword="null" />（要使用默认编码器的话）。</span><span class="sxs-lookup"><span data-stu-id="eeab4-104">The encoder to use when escaping the string, or <see langword="null" /> to use the default encoder.</span></span></param>
        <summary><span data-ttu-id="eeab4-105">将 UTF-8 文本值编码为 JSON 字符串。</span><span class="sxs-lookup"><span data-stu-id="eeab4-105">Encodes a UTF-8 text value as a JSON string.</span></span></summary>
        <returns><span data-ttu-id="eeab4-106">编码的 JSON 文本。</span><span class="sxs-lookup"><span data-stu-id="eeab4-106">The encoded JSON text.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eeab4-107"><paramref name="utf8Value" /> 太大。</span><span class="sxs-lookup"><span data-stu-id="eeab4-107"><paramref name="utf8Value" /> is too large.</span></span>

<span data-ttu-id="eeab4-108">- 或 -</span><span class="sxs-lookup"><span data-stu-id="eeab4-108">-or-</span></span>

<span data-ttu-id="eeab4-109"><paramref name="utf8Value" /> 包含无效的 UTF-8 字节。</span><span class="sxs-lookup"><span data-stu-id="eeab4-109"><paramref name="utf8Value" /> contains invalid UTF-8 bytes.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public static System.Text.Json.JsonEncodedText Encode (ReadOnlySpan&lt;char&gt; value, System.Text.Encodings.Web.JavaScriptEncoder? encoder = default);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Text.Json.JsonEncodedText Encode(valuetype System.ReadOnlySpan`1&lt;char&gt; value, class System.Text.Encodings.Web.JavaScriptEncoder encoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonEncodedText.Encode(System.ReadOnlySpan{System.Char},System.Text.Encodings.Web.JavaScriptEncoder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Encode (value As ReadOnlySpan(Of Char), Optional encoder As JavaScriptEncoder = Nothing) As JsonEncodedText" />
      <MemberSignature Language="F#" Value="static member Encode : ReadOnlySpan&lt;char&gt; * System.Text.Encodings.Web.JavaScriptEncoder -&gt; System.Text.Json.JsonEncodedText" Usage="System.Text.Json.JsonEncodedText.Encode (value, encoder)" />
      <MemberSignature Language="C#" Value="public static System.Text.Json.JsonEncodedText Encode (ReadOnlySpan&lt;char&gt; value, System.Text.Encodings.Web.JavaScriptEncoder encoder = default);" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonEncodedText</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="encoder" Type="System.Text.Encodings.Web.JavaScriptEncoder" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="eeab4-110">要转换为 JSON 编码文本的值。</span><span class="sxs-lookup"><span data-stu-id="eeab4-110">The value to convert to JSON encoded text.</span></span></param>
        <param name="encoder"><span data-ttu-id="eeab4-111">要在转义字符串时使用的编码器，或为 <see langword="null" />（要使用默认编码器的话）。</span><span class="sxs-lookup"><span data-stu-id="eeab4-111">The encoder to use when escaping the string, or <see langword="null" /> to use the default encoder.</span></span></param>
        <summary><span data-ttu-id="eeab4-112">将指定文本值编码为 JSON 字符串。</span><span class="sxs-lookup"><span data-stu-id="eeab4-112">Encodes a specified text value as a JSON string.</span></span></summary>
        <returns><span data-ttu-id="eeab4-113">编码的 JSON 文本。</span><span class="sxs-lookup"><span data-stu-id="eeab4-113">The encoded JSON text.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eeab4-114"><paramref name="value" /> 太大。</span><span class="sxs-lookup"><span data-stu-id="eeab4-114"><paramref name="value" /> is too large.</span></span>

<span data-ttu-id="eeab4-115">- 或 -</span><span class="sxs-lookup"><span data-stu-id="eeab4-115">-or-</span></span>

<span data-ttu-id="eeab4-116"><paramref name="value" /> 包含无效的 UTF-16 字符。</span><span class="sxs-lookup"><span data-stu-id="eeab4-116"><paramref name="value" /> contains invalid UTF-16 characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public static System.Text.Json.JsonEncodedText Encode (string value, System.Text.Encodings.Web.JavaScriptEncoder? encoder = default);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Text.Json.JsonEncodedText Encode(string value, class System.Text.Encodings.Web.JavaScriptEncoder encoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonEncodedText.Encode(System.String,System.Text.Encodings.Web.JavaScriptEncoder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Encode (value As String, Optional encoder As JavaScriptEncoder = Nothing) As JsonEncodedText" />
      <MemberSignature Language="F#" Value="static member Encode : string * System.Text.Encodings.Web.JavaScriptEncoder -&gt; System.Text.Json.JsonEncodedText" Usage="System.Text.Json.JsonEncodedText.Encode (value, encoder)" />
      <MemberSignature Language="C#" Value="public static System.Text.Json.JsonEncodedText Encode (string value, System.Text.Encodings.Web.JavaScriptEncoder encoder = default);" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonEncodedText</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="encoder" Type="System.Text.Encodings.Web.JavaScriptEncoder" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="eeab4-117">要转换为 JSON 编码文本的值。</span><span class="sxs-lookup"><span data-stu-id="eeab4-117">The value to convert to JSON encoded text.</span></span></param>
        <param name="encoder"><span data-ttu-id="eeab4-118">要在转义字符串时使用的编码器，或为 <see langword="null" />（要使用默认编码器的话）。</span><span class="sxs-lookup"><span data-stu-id="eeab4-118">The encoder to use when escaping the string, or <see langword="null" /> to use the default encoder.</span></span></param>
        <summary><span data-ttu-id="eeab4-119">将字符串文本值编码为 JSON 字符串。</span><span class="sxs-lookup"><span data-stu-id="eeab4-119">Encodes the string text value as a JSON string.</span></span></summary>
        <returns><span data-ttu-id="eeab4-120">编码的 JSON 文本。</span><span class="sxs-lookup"><span data-stu-id="eeab4-120">The encoded JSON text.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eeab4-121"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eeab4-121"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eeab4-122"><paramref name="value" /> 太大。</span><span class="sxs-lookup"><span data-stu-id="eeab4-122"><paramref name="value" /> is too large.</span></span>

<span data-ttu-id="eeab4-123">- 或 -</span><span class="sxs-lookup"><span data-stu-id="eeab4-123">-or-</span></span>

<span data-ttu-id="eeab4-124"><paramref name="value" /> 包含无效的 UTF-16 字符。</span><span class="sxs-lookup"><span data-stu-id="eeab4-124"><paramref name="value" /> contains invalid UTF-16 characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EncodedUtf8Bytes">
      <MemberSignature Language="C#" Value="public ReadOnlySpan&lt;byte&gt; EncodedUtf8Bytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; EncodedUtf8Bytes" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonEncodedText.EncodedUtf8Bytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EncodedUtf8Bytes As ReadOnlySpan(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ReadOnlySpan&lt;System::Byte&gt; EncodedUtf8Bytes { ReadOnlySpan&lt;System::Byte&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.EncodedUtf8Bytes : ReadOnlySpan&lt;byte&gt;" Usage="System.Text.Json.JsonEncodedText.EncodedUtf8Bytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eeab4-125">获取预编码 JSON 文本的 UTF-8 编码表示形式。</span><span class="sxs-lookup"><span data-stu-id="eeab4-125">Gets the UTF-8 encoded representation of the pre-encoded JSON text.</span></span></summary>
        <value><span data-ttu-id="eeab4-126">预先编码的 JSON 文本的 UTF-8 编码表示形式。</span><span class="sxs-lookup"><span data-stu-id="eeab4-126">The UTF-8 encoded representation of the pre-encoded JSON text.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonEncodedText.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="jsonEncodedText.Equals obj" />
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="eeab4-127">要与此实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="eeab4-127">The object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="eeab4-128">确定此实例是否与指定的对象（也必须是 <see cref="T:System.Text.Json.JsonEncodedText" /> 实例）具有相同的值。</span><span class="sxs-lookup"><span data-stu-id="eeab4-128">Determines whether this instance and a specified object, which must also be a <see cref="T:System.Text.Json.JsonEncodedText" /> instance, have the same value.</span></span></summary>
        <returns><span data-ttu-id="eeab4-129">如果当前实例与 <paramref name="obj" /> 相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="eeab4-129"><see langword="true" /> if the current instance and <paramref name="obj" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="eeab4-130">如果 `obj` 为 `null`，则此方法返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="eeab4-130">If `obj` is `null`, the method returns `false`.</span></span>

            ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Text.Json.JsonEncodedText other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Text.Json.JsonEncodedText other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonEncodedText.Equals(System.Text.Json.JsonEncodedText)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As JsonEncodedText) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Text::Json::JsonEncodedText other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Text.Json.JsonEncodedText -&gt; bool" Usage="jsonEncodedText.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Text.Json.JsonEncodedText" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="eeab4-131">要与此实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="eeab4-131">The object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="eeab4-132">确定此实例是否与另一个指定的 <see cref="T:System.Text.Json.JsonEncodedText" /> 实例具有相同的值。</span><span class="sxs-lookup"><span data-stu-id="eeab4-132">Determines whether this instance and another specified <see cref="T:System.Text.Json.JsonEncodedText" /> instance have the same value.</span></span></summary>
        <returns><span data-ttu-id="eeab4-133">如果此实例与 <paramref name="other" /> 具有相同的值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="eeab4-133"><see langword="true" /> if this instance and <paramref name="other" /> have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="eeab4-134">的默认实例被 <xref:System.Text.Json.JsonEncodedText> 视为相等。</span><span class="sxs-lookup"><span data-stu-id="eeab4-134">Default instances of <xref:System.Text.Json.JsonEncodedText> are treated as equal.</span></span>

            ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonEncodedText.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="jsonEncodedText.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eeab4-135">返回此 <see cref="T:System.Text.Json.JsonEncodedText" /> 的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="eeab4-135">Returns the hash code for this <see cref="T:System.Text.Json.JsonEncodedText" />.</span></span></summary>
        <returns><span data-ttu-id="eeab4-136">此实例的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="eeab4-136">The hash code for this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="eeab4-137">此方法在的默认实例上返回 0 <xref:System.Text.Json.JsonEncodedText> 。</span><span class="sxs-lookup"><span data-stu-id="eeab4-137">This method returns 0 on a default instance of <xref:System.Text.Json.JsonEncodedText>.</span></span>

            ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonEncodedText.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="jsonEncodedText.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eeab4-138">将此实例的值转换为 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="eeab4-138">Converts the value of this instance to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="eeab4-139">基础 UTF-16 编码字符串。</span><span class="sxs-lookup"><span data-stu-id="eeab4-139">The underlying UTF-16 encoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="eeab4-140">此方法在的默认实例上返回空字符串 <xref:System.Text.Json.JsonEncodedText> 。</span><span class="sxs-lookup"><span data-stu-id="eeab4-140">This method returns an empty string on a default instance of <xref:System.Text.Json.JsonEncodedText>.</span></span>

            ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
