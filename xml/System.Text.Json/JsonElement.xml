<Type Name="JsonElement" FullName="System.Text.Json.JsonElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c484a93f531d2b52771337963b5e387b1874ec1c" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83945856" /></Metadata><TypeSignature Language="C#" Value="public struct JsonElement" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit JsonElement extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.JsonElement" />
  <TypeSignature Language="VB.NET" Value="Public Structure JsonElement" />
  <TypeSignature Language="C++ CLI" Value="public value class JsonElement" />
  <TypeSignature Language="F#" Value="type JsonElement = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="cfd36-101">表示 <see cref="T:System.Text.Json.JsonDocument" /> 中的特定 JSON 值。</span><span class="sxs-lookup"><span data-stu-id="cfd36-101">Represents a specific JSON value within a <see cref="T:System.Text.Json.JsonDocument" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="cfd36-102">有关详细信息，请参阅[如何序列化和反序列化 JSON](/dotnet/standard/serialization/system-text-json-how-to#use-jsondocument-for-access-to-data)。</span><span class="sxs-lookup"><span data-stu-id="cfd36-102">For more information, see [How to serialize and deserialize JSON](/dotnet/standard/serialization/system-text-json-how-to#use-jsondocument-for-access-to-data).</span></span>

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonElement Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Text.Json.JsonElement Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As JsonElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::Json::JsonElement Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Text.Json.JsonElement" Usage="jsonElement.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cfd36-103">获取可在超过原始 <see cref="T:System.Text.Json.JsonDocument" /> 的生存期安全存储的 JsonElement。</span><span class="sxs-lookup"><span data-stu-id="cfd36-103">Gets a JsonElement that can be safely stored beyond the lifetime of the original <see cref="T:System.Text.Json.JsonDocument" />.</span></span></summary>
        <returns><span data-ttu-id="cfd36-104">可在超过原始 <see cref="T:System.Text.Json.JsonDocument" /> 的生存期安全存储的 JsonElement。</span><span class="sxs-lookup"><span data-stu-id="cfd36-104">A JsonElement that can be safely stored beyond the lifetime of the original <see cref="T:System.Text.Json.JsonDocument" />.</span></span></returns>
        <remarks>
          <format><![CDATA[

## Remarks

<span data-ttu-id="cfd36-105">如果此 <xref:System.Text.Json.JsonElement> 本身就是对 `Clone` 的前一次调用的输出或包含在以前对 `Clone`的调用的输出的另一个 <xref:System.Text.Json.JsonElement> 中的值，则此方法不会产生额外的内存分配。</span><span class="sxs-lookup"><span data-stu-id="cfd36-105">If this <xref:System.Text.Json.JsonElement> is itself the output of a previous call to `Clone` or a value contained within another <xref:System.Text.Json.JsonElement> that was the output of a previous call to `Clone`, this method results in no additional memory allocation.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateArray">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonElement.ArrayEnumerator EnumerateArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Text.Json.JsonElement/ArrayEnumerator EnumerateArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.EnumerateArray" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateArray () As JsonElement.ArrayEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::Json::JsonElement::ArrayEnumerator EnumerateArray();" />
      <MemberSignature Language="F#" Value="member this.EnumerateArray : unit -&gt; System.Text.Json.JsonElement.ArrayEnumerator" Usage="jsonElement.EnumerateArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonElement+ArrayEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cfd36-106">获取一个枚举器，它用于枚举由该 JsonElement 表示的 JSON 数组中的值。</span><span class="sxs-lookup"><span data-stu-id="cfd36-106">Gets an enumerator to enumerate the values in the JSON array represented by this JsonElement.</span></span></summary>
        <returns><span data-ttu-id="cfd36-107">一个枚举器，它用于枚举由该 JsonElement 表示的 JSON 数组中的值。</span><span class="sxs-lookup"><span data-stu-id="cfd36-107">An enumerator to enumerate the values in the JSON array represented by this JsonElement.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="cfd36-108">有关详细信息，请参阅[如何序列化和反序列化 JSON](/dotnet/standard/serialization/system-text-json-how-to#use-jsondocument-for-access-to-data)。</span><span class="sxs-lookup"><span data-stu-id="cfd36-108">For more information, see [How to serialize and deserialize JSON](/dotnet/standard/serialization/system-text-json-how-to#use-jsondocument-for-access-to-data).</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-109">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.Array" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-109">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Array" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-110">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-110">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateObject">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonElement.ObjectEnumerator EnumerateObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Text.Json.JsonElement/ObjectEnumerator EnumerateObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.EnumerateObject" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateObject () As JsonElement.ObjectEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::Json::JsonElement::ObjectEnumerator EnumerateObject();" />
      <MemberSignature Language="F#" Value="member this.EnumerateObject : unit -&gt; System.Text.Json.JsonElement.ObjectEnumerator" Usage="jsonElement.EnumerateObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonElement+ObjectEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cfd36-111">获取一个枚举器，它用于枚举由该 JsonElement 表示的 JSON 对象中的属性。</span><span class="sxs-lookup"><span data-stu-id="cfd36-111">Gets an enumerator to enumerate the properties in the JSON object represented by this JsonElement.</span></span></summary>
        <returns><span data-ttu-id="cfd36-112">一个枚举器，它用于枚举由该 JsonElement 表示的 JSON 对象中的属性。</span><span class="sxs-lookup"><span data-stu-id="cfd36-112">An enumerator to enumerate the properties in the JSON object represented by this JsonElement.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-113">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.Object" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-113">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Object" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-114">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-114">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetArrayLength">
      <MemberSignature Language="C#" Value="public int GetArrayLength ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetArrayLength() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetArrayLength" />
      <MemberSignature Language="VB.NET" Value="Public Function GetArrayLength () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetArrayLength();" />
      <MemberSignature Language="F#" Value="member this.GetArrayLength : unit -&gt; int" Usage="jsonElement.GetArrayLength " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cfd36-115">获取当前数组值中包含的值的数量。</span><span class="sxs-lookup"><span data-stu-id="cfd36-115">Gets the number of values contained within the current array value.</span></span></summary>
        <returns><span data-ttu-id="cfd36-116">当前数组值中包含的值的数量。</span><span class="sxs-lookup"><span data-stu-id="cfd36-116">The number of values contained within the current array value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="cfd36-117">有关详细信息，请参阅[如何序列化和反序列化 JSON](/dotnet/standard/serialization/system-text-json-how-to#use-jsondocument-for-access-to-data)。</span><span class="sxs-lookup"><span data-stu-id="cfd36-117">For more information, see [How to serialize and deserialize JSON](/dotnet/standard/serialization/system-text-json-how-to#use-jsondocument-for-access-to-data).</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-118">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.Array" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-118">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Array" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-119">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-119">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public bool GetBoolean ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetBoolean() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetBoolean" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBoolean () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetBoolean();" />
      <MemberSignature Language="F#" Value="member this.GetBoolean : unit -&gt; bool" Usage="jsonElement.GetBoolean " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cfd36-120">获取元素的值（<see cref="T:System.Boolean" /> 形式）。</span><span class="sxs-lookup"><span data-stu-id="cfd36-120">Gets the value of the element as a <see cref="T:System.Boolean" />.</span></span></summary>
        <returns><span data-ttu-id="cfd36-121">元素的值（<see cref="T:System.Boolean" /> 形式）。</span><span class="sxs-lookup"><span data-stu-id="cfd36-121">The value of the element as a <see cref="T:System.Boolean" />.</span></span></returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="cfd36-122">此方法不分析 JSON 字符串值的内容。</span><span class="sxs-lookup"><span data-stu-id="cfd36-122">This method does not parse the contents of a JSON string value.</span></span>
          
          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-123">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 既不是 <see cref="F:System.Text.Json.JsonValueKind.True" />，也不是 <see cref="F:System.Text.Json.JsonValueKind.False" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-123">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is neither <see cref="F:System.Text.Json.JsonValueKind.True" /> nor <see cref="F:System.Text.Json.JsonValueKind.False" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-124">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-124">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public byte GetByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8 GetByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetByte" />
      <MemberSignature Language="VB.NET" Value="Public Function GetByte () As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Byte GetByte();" />
      <MemberSignature Language="F#" Value="member this.GetByte : unit -&gt; byte" Usage="jsonElement.GetByte " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cfd36-125">获取当前 JSON 数字（<see cref="T:System.Byte" /> 形式）。</span><span class="sxs-lookup"><span data-stu-id="cfd36-125">Gets the current JSON number as a <see cref="T:System.Byte" />.</span></span></summary>
        <returns><span data-ttu-id="cfd36-126">当前 JSON 数字（<see cref="T:System.Byte" /> 形式）。</span><span class="sxs-lookup"><span data-stu-id="cfd36-126">The current JSON number as a <see cref="T:System.Byte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="cfd36-127">此方法不分析 JSON 字符串值的内容。</span><span class="sxs-lookup"><span data-stu-id="cfd36-127">This method does not parse the contents of a JSON string value.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-128">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.Number" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-128">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="cfd36-129">此值不能以 <see cref="T:System.Byte" /> 形式表示。</span><span class="sxs-lookup"><span data-stu-id="cfd36-129">The value cannot be represented as a <see cref="T:System.Byte" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-130">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-130">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetBytesFromBase64">
      <MemberSignature Language="C#" Value="public byte[] GetBytesFromBase64 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetBytesFromBase64() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetBytesFromBase64" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBytesFromBase64 () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetBytesFromBase64();" />
      <MemberSignature Language="F#" Value="member this.GetBytesFromBase64 : unit -&gt; byte[]" Usage="jsonElement.GetBytesFromBase64 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cfd36-131">获取作为字节数组的元素的值。</span><span class="sxs-lookup"><span data-stu-id="cfd36-131">Gets the value of the element as a byte array.</span></span></summary>
        <returns><span data-ttu-id="cfd36-132">编码为字节数组的值。</span><span class="sxs-lookup"><span data-stu-id="cfd36-132">The value decoded as a byte array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="cfd36-133">此方法不会创建 Base64 编码的 JSON 字符串以外的值的字节表示形式。</span><span class="sxs-lookup"><span data-stu-id="cfd36-133">This method does not create a byte representation of values other than Base64 encoded JSON strings.</span></span>

            ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-134">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.String" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-134">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.String" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="cfd36-135">值未编码为 base 64 文本，因此无法解码为字节。</span><span class="sxs-lookup"><span data-stu-id="cfd36-135">The value is not encoded as Base64 text and hence cannot be decoded to bytes.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-136">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-136">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public DateTime GetDateTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime GetDateTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDateTime () As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime GetDateTime();" />
      <MemberSignature Language="F#" Value="member this.GetDateTime : unit -&gt; DateTime" Usage="jsonElement.GetDateTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cfd36-137">获取元素的值（<see cref="T:System.DateTime" /> 形式）。</span><span class="sxs-lookup"><span data-stu-id="cfd36-137">Gets the value of the element as a <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="cfd36-138">元素的值（<see cref="T:System.DateTime" /> 形式）。</span><span class="sxs-lookup"><span data-stu-id="cfd36-138">The value of the element as a <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format><![CDATA[

## Remarks

<span data-ttu-id="cfd36-139">此方法仅创建符合 ISO 8601-1 扩展格式的 JSON 字符串的日期时间表示形式（请参阅[系统中的 datetime 和 DateTimeOffset 支持](/dotnet/standard/datetime/system-text-json-support)）。</span><span class="sxs-lookup"><span data-stu-id="cfd36-139">This method only creates a DateTime representation of JSON strings that conform to the ISO 8601-1 extended format (see [DateTime and DateTimeOffset support in System.Text.Json](/dotnet/standard/datetime/system-text-json-support)).</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-140">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.String" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-140">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.String" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="cfd36-141">此值不可作为 <see cref="T:System.DateTime" /> 读取。</span><span class="sxs-lookup"><span data-stu-id="cfd36-141">The value cannot be read as a <see cref="T:System.DateTime" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-142">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-142">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDateTimeOffset">
      <MemberSignature Language="C#" Value="public DateTimeOffset GetDateTimeOffset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset GetDateTimeOffset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetDateTimeOffset" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDateTimeOffset () As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset GetDateTimeOffset();" />
      <MemberSignature Language="F#" Value="member this.GetDateTimeOffset : unit -&gt; DateTimeOffset" Usage="jsonElement.GetDateTimeOffset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cfd36-143">获取元素的值（<see cref="T:System.DateTimeOffset" /> 形式）。</span><span class="sxs-lookup"><span data-stu-id="cfd36-143">Gets the value of the element as a <see cref="T:System.DateTimeOffset" />.</span></span></summary>
        <returns><span data-ttu-id="cfd36-144">元素的值（<see cref="T:System.DateTimeOffset" /> 形式）。</span><span class="sxs-lookup"><span data-stu-id="cfd36-144">The value of the element as a <see cref="T:System.DateTimeOffset" />.</span></span></returns>
        <remarks>
          <format><![CDATA[

## Remarks

<span data-ttu-id="cfd36-145">此方法仅创建符合 ISO 8601-1 扩展格式的 JSON 字符串的 DateTimeOffset 表示形式（请参阅[DateTime 和 system.object 中的 DateTimeOffset 支持](/dotnet/standard/datetime/system-text-json-support)）。</span><span class="sxs-lookup"><span data-stu-id="cfd36-145">This method only creates a DateTimeOffset representation of JSON strings that conform to the ISO 8601-1 extended format (see [DateTime and DateTimeOffset support in System.Text.Json](/dotnet/standard/datetime/system-text-json-support)).</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-146">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.String" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-146">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.String" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="cfd36-147">此值不可作为 <see cref="T:System.DateTimeOffset" /> 读取。</span><span class="sxs-lookup"><span data-stu-id="cfd36-147">The value cannot be read as a <see cref="T:System.DateTimeOffset" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-148">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-148">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public decimal GetDecimal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Decimal GetDecimal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetDecimal" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDecimal () As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Decimal GetDecimal();" />
      <MemberSignature Language="F#" Value="member this.GetDecimal : unit -&gt; decimal" Usage="jsonElement.GetDecimal " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cfd36-149">获取当前 JSON 数字（<see cref="T:System.Decimal" /> 形式）。</span><span class="sxs-lookup"><span data-stu-id="cfd36-149">Gets the current JSON number as a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="cfd36-150">当前 JSON 数字（<see cref="T:System.Decimal" /> 形式）。</span><span class="sxs-lookup"><span data-stu-id="cfd36-150">The current JSON number as a <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format><![CDATA[

## Remarks

<span data-ttu-id="cfd36-151">此方法不分析 JSON 字符串值的内容。</span><span class="sxs-lookup"><span data-stu-id="cfd36-151">This method does not parse the contents of a JSON string value.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-152">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.Number" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-152">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="cfd36-153">此值不能以 <see cref="T:System.Decimal" /> 形式表示。</span><span class="sxs-lookup"><span data-stu-id="cfd36-153">The value cannot be represented as a <see cref="T:System.Decimal" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-154">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-154">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public double GetDouble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetDouble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetDouble" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDouble () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetDouble();" />
      <MemberSignature Language="F#" Value="member this.GetDouble : unit -&gt; double" Usage="jsonElement.GetDouble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cfd36-155">获取当前 JSON 数字（<see cref="T:System.Double" /> 形式）。</span><span class="sxs-lookup"><span data-stu-id="cfd36-155">Gets the current JSON number as a <see cref="T:System.Double" />.</span></span></summary>
        <returns><span data-ttu-id="cfd36-156">当前 JSON 数字（<see cref="T:System.Double" /> 形式）。</span><span class="sxs-lookup"><span data-stu-id="cfd36-156">The current JSON number as a <see cref="T:System.Double" />.</span></span></returns>
        <remarks>
          <format><![CDATA[

## Remarks

<span data-ttu-id="cfd36-157">此方法不分析 JSON 字符串值的内容。</span><span class="sxs-lookup"><span data-stu-id="cfd36-157">This method does not parse the contents of a JSON string value.</span></span>
               
<span data-ttu-id="cfd36-158">在 .NET Core 上，此方法为大于 <xref:System.Double.MaxValue?displayProperty=nameWithType>的值返回 <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>，并返回小于 <xref:System.Double.MinValue?displayProperty=nameWithType>的值 <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cfd36-158">On .NET Core, this method returns <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>  for values larger than <xref:System.Double.MaxValue?displayProperty=nameWithType>, and it returns <xref:System.Double.NegativeInfinity?displayProperty=nameWithType> for values smaller than <xref:System.Double.MinValue?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-159">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.Number" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-159">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="cfd36-160">此值不能以 <see cref="T:System.Double" /> 形式表示。</span><span class="sxs-lookup"><span data-stu-id="cfd36-160">The value cannot be represented as a <see cref="T:System.Double" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-161">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-161">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public Guid GetGuid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Guid GetGuid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetGuid" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGuid () As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Guid GetGuid();" />
      <MemberSignature Language="F#" Value="member this.GetGuid : unit -&gt; Guid" Usage="jsonElement.GetGuid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cfd36-162">获取元素的值（<see cref="T:System.Guid" /> 形式）。</span><span class="sxs-lookup"><span data-stu-id="cfd36-162">Gets the value of the element as a <see cref="T:System.Guid" />.</span></span></summary>
        <returns><span data-ttu-id="cfd36-163">元素的值（<see cref="T:System.Guid" /> 形式）。</span><span class="sxs-lookup"><span data-stu-id="cfd36-163">The value of the element as a <see cref="T:System.Guid" />.</span></span></returns>
        <remarks>
          <format><![CDATA[

## Remarks

<span data-ttu-id="cfd36-164">此方法不会创建 JSON 字符串以外的值的 Guid 表示形式。</span><span class="sxs-lookup"><span data-stu-id="cfd36-164">This method does not create a Guid representation of values other than JSON strings.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-165">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.String" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-165">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.String" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="cfd36-166">此值不能以 <see cref="T:System.Guid" /> 形式表示。</span><span class="sxs-lookup"><span data-stu-id="cfd36-166">The value cannot be represented as a <see cref="T:System.Guid" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-167">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-167">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public short GetInt16 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int16 GetInt16() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetInt16" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInt16 () As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; short GetInt16();" />
      <MemberSignature Language="F#" Value="member this.GetInt16 : unit -&gt; int16" Usage="jsonElement.GetInt16 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cfd36-168">获取当前 JSON 数字（<see cref="T:System.Int16" /> 形式）。</span><span class="sxs-lookup"><span data-stu-id="cfd36-168">Gets the current JSON number as an <see cref="T:System.Int16" />.</span></span></summary>
        <returns><span data-ttu-id="cfd36-169">当前 JSON 数字（<see cref="T:System.Int16" /> 形式）。</span><span class="sxs-lookup"><span data-stu-id="cfd36-169">The current JSON number as an <see cref="T:System.Int16" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-170">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.Number" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-170">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="cfd36-171">此值不能以 <see cref="T:System.Int16" /> 形式表示。</span><span class="sxs-lookup"><span data-stu-id="cfd36-171">The value cannot be represented as an <see cref="T:System.Int16" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-172">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-172">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public int GetInt32 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetInt32() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetInt32" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInt32 () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetInt32();" />
      <MemberSignature Language="F#" Value="member this.GetInt32 : unit -&gt; int" Usage="jsonElement.GetInt32 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cfd36-173">获取当前 JSON 数字（<see cref="T:System.Int32" /> 形式）。</span><span class="sxs-lookup"><span data-stu-id="cfd36-173">Gets the current JSON number as an <see cref="T:System.Int32" />.</span></span></summary>
        <returns><span data-ttu-id="cfd36-174">当前 JSON 数字（<see cref="T:System.Int32" /> 形式）。</span><span class="sxs-lookup"><span data-stu-id="cfd36-174">The current JSON number as an <see cref="T:System.Int32" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-175">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.Number" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-175">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="cfd36-176">此值不能以 <see cref="T:System.Int32" /> 形式表示。</span><span class="sxs-lookup"><span data-stu-id="cfd36-176">The value cannot be represented as an <see cref="T:System.Int32" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-177">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-177">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public long GetInt64 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 GetInt64() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetInt64" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInt64 () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long GetInt64();" />
      <MemberSignature Language="F#" Value="member this.GetInt64 : unit -&gt; int64" Usage="jsonElement.GetInt64 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cfd36-178">获取当前 JSON 数字（<see cref="T:System.Int64" /> 形式）。</span><span class="sxs-lookup"><span data-stu-id="cfd36-178">Gets the current JSON number as an <see cref="T:System.Int64" />.</span></span></summary>
        <returns><span data-ttu-id="cfd36-179">当前 JSON 数字（<see cref="T:System.Int64" /> 形式）。</span><span class="sxs-lookup"><span data-stu-id="cfd36-179">The current JSON number as an <see cref="T:System.Int64" />.</span></span></returns>
        <remarks>
          <format><![CDATA[

## Remarks

<span data-ttu-id="cfd36-180">此方法不分析 JSON 字符串值的内容。</span><span class="sxs-lookup"><span data-stu-id="cfd36-180">This method does not parse the contents of a JSON string value.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-181">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.Number" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-181">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="cfd36-182">此值不能以 <see cref="T:System.Int64" /> 形式表示。</span><span class="sxs-lookup"><span data-stu-id="cfd36-182">The value cannot be represented as a <see cref="T:System.Int64" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-183">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-183">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonElement GetProperty (ReadOnlySpan&lt;byte&gt; utf8PropertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Text.Json.JsonElement GetProperty(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetProperty(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (utf8PropertyName As ReadOnlySpan(Of Byte)) As JsonElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::Json::JsonElement GetProperty(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName);" />
      <MemberSignature Language="F#" Value="member this.GetProperty : ReadOnlySpan&lt;byte&gt; -&gt; System.Text.Json.JsonElement" Usage="jsonElement.GetProperty utf8PropertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="cfd36-184">要返回的属性名称的 UTF-8 表示形式（没有字节顺序标记 (BOM)）。</span><span class="sxs-lookup"><span data-stu-id="cfd36-184">The UTF-8 representation (with no Byte-Order-Mark (BOM)) of the name of the property to return.</span></span></param>
        <summary><span data-ttu-id="cfd36-185">获取一个 <see cref="T:System.Text.Json.JsonElement" />，它表示由 <paramref name="utf8PropertyName" /> 标识的所需属性的值。</span><span class="sxs-lookup"><span data-stu-id="cfd36-185">Gets a <see cref="T:System.Text.Json.JsonElement" /> representing the value of a required property identified by <paramref name="utf8PropertyName" />.</span></span></summary>
        <returns><span data-ttu-id="cfd36-186">一个 <see cref="T:System.Text.Json.JsonElement" />，它表示所需属性的值。</span><span class="sxs-lookup"><span data-stu-id="cfd36-186">A <see cref="T:System.Text.Json.JsonElement" /> representing the value of the requested property.</span></span></returns>
        <remarks>
          <format><![CDATA[

## Remarks

<span data-ttu-id="cfd36-187">属性名称匹配作为序号、区分大小写的比较来执行。</span><span class="sxs-lookup"><span data-stu-id="cfd36-187">Property name matching is performed as an ordinal, case-sensitive comparison.</span></span>

<span data-ttu-id="cfd36-188">如果为同一对象多次定义某个属性，则该方法将匹配最后一个此类定义。</span><span class="sxs-lookup"><span data-stu-id="cfd36-188">If a property is defined multiple times for the same object, the method matches the last such definition.</span></span>

<span data-ttu-id="cfd36-189">有关详细信息，请参阅[如何序列化和反序列化 JSON](/dotnet/standard/serialization/system-text-json-how-to#use-jsondocument-for-access-to-data)。</span><span class="sxs-lookup"><span data-stu-id="cfd36-189">For more information, see [How to serialize and deserialize JSON](/dotnet/standard/serialization/system-text-json-how-to#use-jsondocument-for-access-to-data).</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-190">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.Object" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-190">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Object" />.</span></span></exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException"><span data-ttu-id="cfd36-191">找不到带有所请求名称的属性。</span><span class="sxs-lookup"><span data-stu-id="cfd36-191">No property was found with the requested name.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-192">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-192">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonElement GetProperty (ReadOnlySpan&lt;char&gt; propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Text.Json.JsonElement GetProperty(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetProperty(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (propertyName As ReadOnlySpan(Of Char)) As JsonElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::Json::JsonElement GetProperty(ReadOnlySpan&lt;char&gt; propertyName);" />
      <MemberSignature Language="F#" Value="member this.GetProperty : ReadOnlySpan&lt;char&gt; -&gt; System.Text.Json.JsonElement" Usage="jsonElement.GetProperty propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="cfd36-193">要返回其值的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="cfd36-193">The name of the property whose value is to be returned.</span></span></param>
        <summary><span data-ttu-id="cfd36-194">获取一个 <see cref="T:System.Text.Json.JsonElement" />，它表示由 <paramref name="propertyName" /> 标识的所需属性的值。</span><span class="sxs-lookup"><span data-stu-id="cfd36-194">Gets a <see cref="T:System.Text.Json.JsonElement" /> representing the value of a required property identified by <paramref name="propertyName" />.</span></span></summary>
        <returns><span data-ttu-id="cfd36-195">一个 <see cref="T:System.Text.Json.JsonElement" />，它表示所需属性的值。</span><span class="sxs-lookup"><span data-stu-id="cfd36-195">A <see cref="T:System.Text.Json.JsonElement" /> representing the value of the requested property.</span></span></returns>
        <remarks>
          <format><![CDATA[

## Remarks

<span data-ttu-id="cfd36-196">属性名称匹配作为序号、区分大小写的比较来执行。</span><span class="sxs-lookup"><span data-stu-id="cfd36-196">Property name matching is performed as an ordinal, case-sensitive comparison.</span></span>

<span data-ttu-id="cfd36-197">如果为同一对象多次定义某个属性，则该方法将匹配最后一个此类定义。</span><span class="sxs-lookup"><span data-stu-id="cfd36-197">If a property is defined multiple times for the same object, the method matches the last such definition.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-198">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.Object" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-198">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Object" />.</span></span></exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException"><span data-ttu-id="cfd36-199">找不到带有所请求名称的属性。</span><span class="sxs-lookup"><span data-stu-id="cfd36-199">No property was found with the requested name.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-200">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-200">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonElement GetProperty (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Text.Json.JsonElement GetProperty(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (propertyName As String) As JsonElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::Json::JsonElement GetProperty(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.GetProperty : string -&gt; System.Text.Json.JsonElement" Usage="jsonElement.GetProperty propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="cfd36-201">要返回其值的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="cfd36-201">The name of the property whose value is to be returned.</span></span></param>
        <summary><span data-ttu-id="cfd36-202">获取一个 <see cref="T:System.Text.Json.JsonElement" />，它表示由 <paramref name="propertyName" /> 标识的所需属性的值。</span><span class="sxs-lookup"><span data-stu-id="cfd36-202">Gets a <see cref="T:System.Text.Json.JsonElement" /> representing the value of a required property identified by <paramref name="propertyName" />.</span></span></summary>
        <returns><span data-ttu-id="cfd36-203">一个 <see cref="T:System.Text.Json.JsonElement" />，它表示所需属性的值。</span><span class="sxs-lookup"><span data-stu-id="cfd36-203">A <see cref="T:System.Text.Json.JsonElement" /> representing the value of the requested property.</span></span></returns>
        <remarks>
          <format><![CDATA[

## Remarks

<span data-ttu-id="cfd36-204">属性名称匹配作为序号、区分大小写的比较来执行。</span><span class="sxs-lookup"><span data-stu-id="cfd36-204">Property name matching is performed as an ordinal, case-sensitive comparison.</span></span>

<span data-ttu-id="cfd36-205">如果为同一对象多次定义某个属性，则该方法将匹配最后一个此类定义。</span><span class="sxs-lookup"><span data-stu-id="cfd36-205">If a property is defined multiple times for the same object, the method matches the last such definition.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-206">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.Object" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-206">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Object" />.</span></span></exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException"><span data-ttu-id="cfd36-207">找不到带有所请求名称的属性。</span><span class="sxs-lookup"><span data-stu-id="cfd36-207">No property was found with the requested name.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cfd36-208"><paramref name="propertyName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-208"><paramref name="propertyName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-209">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-209">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRawText">
      <MemberSignature Language="C#" Value="public string GetRawText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetRawText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetRawText" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRawText () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetRawText();" />
      <MemberSignature Language="F#" Value="member this.GetRawText : unit -&gt; string" Usage="jsonElement.GetRawText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cfd36-210">获取一个字符串，它表示支持该值的原始输入数据。</span><span class="sxs-lookup"><span data-stu-id="cfd36-210">Gets a string that represents the original input data backing this value.</span></span></summary>
        <returns><span data-ttu-id="cfd36-211">支持该值的原始输入数据。</span><span class="sxs-lookup"><span data-stu-id="cfd36-211">The original input data backing this value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="cfd36-212">如果 <xref:System.Text.Json.JsonElement> 实例是从 <xref:System.Text.Json.JsonNode>生成的，则返回 <xref:System.Text.Json.JsonNode.ToJsonString> 的值。</span><span class="sxs-lookup"><span data-stu-id="cfd36-212">If the <xref:System.Text.Json.JsonElement> instance is built from a <xref:System.Text.Json.JsonNode>, the value of <xref:System.Text.Json.JsonNode.ToJsonString> is returned.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-213">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-213">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSByte">
      <MemberSignature Language="C#" Value="public sbyte GetSByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int8 GetSByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetSByte" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSByte () As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::SByte GetSByte();" />
      <MemberSignature Language="F#" Value="member this.GetSByte : unit -&gt; sbyte" Usage="jsonElement.GetSByte " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cfd36-214">获取当前 JSON 数字（<see cref="T:System.SByte" /> 形式）。</span><span class="sxs-lookup"><span data-stu-id="cfd36-214">Gets the current JSON number as an <see cref="T:System.SByte" />.</span></span></summary>
        <returns><span data-ttu-id="cfd36-215">当前 JSON 数字（<see cref="T:System.SByte" /> 形式）。</span><span class="sxs-lookup"><span data-stu-id="cfd36-215">The current JSON number as an <see cref="T:System.SByte" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-216">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.Number" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-216">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="cfd36-217">此值不能以 <see cref="T:System.SByte" /> 形式表示。</span><span class="sxs-lookup"><span data-stu-id="cfd36-217">The value cannot be represented as an <see cref="T:System.SByte" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-218">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-218">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSingle">
      <MemberSignature Language="C#" Value="public float GetSingle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 GetSingle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetSingle" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSingle () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; float GetSingle();" />
      <MemberSignature Language="F#" Value="member this.GetSingle : unit -&gt; single" Usage="jsonElement.GetSingle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cfd36-219">获取当前 JSON 数字（<see cref="T:System.Single" /> 形式）。</span><span class="sxs-lookup"><span data-stu-id="cfd36-219">Gets the current JSON number as a <see cref="T:System.Single" />.</span></span></summary>
        <returns><span data-ttu-id="cfd36-220">当前 JSON 数字（<see cref="T:System.Single" /> 形式）。</span><span class="sxs-lookup"><span data-stu-id="cfd36-220">The current JSON number as a <see cref="T:System.Single" />.</span></span></returns>
        <remarks>
          <format><![CDATA[

## Remarks

<span data-ttu-id="cfd36-221">此方法不分析 JSON 字符串值的内容。</span><span class="sxs-lookup"><span data-stu-id="cfd36-221">This method does not parse the contents of a JSON string value.</span></span>

<span data-ttu-id="cfd36-222">在 .NET Core 上，此方法返回大于 <xref:System.Single.MaxValue?displayProperty=nameWithType> 的值 <xref:System.Single.PositiveInfinity?displayProperty=nameWithType>，并为小于 <xref:System.Single.MinValue?displayProperty=nameWithType>的值 <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cfd36-222">On .NET Core, this method returns <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> for values larger than <xref:System.Single.MaxValue?displayProperty=nameWithType> and <xref:System.Single.NegativeInfinity?displayProperty=nameWithType> for values smaller than <xref:System.Single.MinValue?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-223">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.Number" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-223">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="cfd36-224">此值不能以 <see cref="T:System.Single" /> 形式表示。</span><span class="sxs-lookup"><span data-stu-id="cfd36-224">The value cannot be represented as a <see cref="T:System.Single" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-225">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-225">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public string GetString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetString" />
      <MemberSignature Language="VB.NET" Value="Public Function GetString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetString();" />
      <MemberSignature Language="F#" Value="member this.GetString : unit -&gt; string" Usage="jsonElement.GetString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cfd36-226">获取元素的值（<see cref="T:System.String" /> 形式）。</span><span class="sxs-lookup"><span data-stu-id="cfd36-226">Gets the value of the element as a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="cfd36-227">元素的值（<see cref="T:System.String" /> 形式）。</span><span class="sxs-lookup"><span data-stu-id="cfd36-227">The value of the element as a <see cref="T:System.String" />.</span></span></returns>
        <remarks>
          <format><![CDATA[

## Remarks

<span data-ttu-id="cfd36-228">此方法不会创建 JSON 字符串以外的值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cfd36-228">This method does not create a string representation of values other than JSON strings.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-229">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 既不是 <see cref="F:System.Text.Json.JsonValueKind.String" />，也不是 <see cref="F:System.Text.Json.JsonValueKind.Null" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-229">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is neither <see cref="F:System.Text.Json.JsonValueKind.String" /> nor <see cref="F:System.Text.Json.JsonValueKind.Null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-230">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-230">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetUInt16">
      <MemberSignature Language="C#" Value="public ushort GetUInt16 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int16 GetUInt16() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetUInt16" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUInt16 () As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::UInt16 GetUInt16();" />
      <MemberSignature Language="F#" Value="member this.GetUInt16 : unit -&gt; uint16" Usage="jsonElement.GetUInt16 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cfd36-231">获取当前 JSON 数字（<see cref="T:System.UInt16" /> 形式）。</span><span class="sxs-lookup"><span data-stu-id="cfd36-231">Gets the current JSON number as a <see cref="T:System.UInt16" />.</span></span></summary>
        <returns><span data-ttu-id="cfd36-232">当前 JSON 数字（<see cref="T:System.UInt16" /> 形式）。</span><span class="sxs-lookup"><span data-stu-id="cfd36-232">The current JSON number as a <see cref="T:System.UInt16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="cfd36-233">此方法不分析 JSON 字符串值的内容。</span><span class="sxs-lookup"><span data-stu-id="cfd36-233">This method does not parse the contents of a JSON string value.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-234">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.Number" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-234">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="cfd36-235">此值不能以 <see cref="T:System.UInt16" /> 形式表示。</span><span class="sxs-lookup"><span data-stu-id="cfd36-235">The value cannot be represented as a <see cref="T:System.UInt16" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-236">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-236">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetUInt32">
      <MemberSignature Language="C#" Value="public uint GetUInt32 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int32 GetUInt32() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetUInt32" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUInt32 () As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::UInt32 GetUInt32();" />
      <MemberSignature Language="F#" Value="member this.GetUInt32 : unit -&gt; uint32" Usage="jsonElement.GetUInt32 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cfd36-237">获取当前 JSON 数字（<see cref="T:System.UInt32" /> 形式）。</span><span class="sxs-lookup"><span data-stu-id="cfd36-237">Gets the current JSON number as a <see cref="T:System.UInt32" />.</span></span></summary>
        <returns><span data-ttu-id="cfd36-238">当前 JSON 数字（<see cref="T:System.UInt32" /> 形式）。</span><span class="sxs-lookup"><span data-stu-id="cfd36-238">The current JSON number as a <see cref="T:System.UInt32" />.</span></span></returns>
        <remarks>
          <format><![CDATA[

## Remarks

<span data-ttu-id="cfd36-239">此方法不分析 JSON 字符串值的内容。</span><span class="sxs-lookup"><span data-stu-id="cfd36-239">This method does not parse the contents of a JSON string value.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-240">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.Number" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-240">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="cfd36-241">此值不能以 <see cref="T:System.UInt32" /> 形式表示。</span><span class="sxs-lookup"><span data-stu-id="cfd36-241">The value cannot be represented as a <see cref="T:System.UInt32" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-242">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-242">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetUInt64">
      <MemberSignature Language="C#" Value="public ulong GetUInt64 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int64 GetUInt64() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.GetUInt64" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUInt64 () As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::UInt64 GetUInt64();" />
      <MemberSignature Language="F#" Value="member this.GetUInt64 : unit -&gt; uint64" Usage="jsonElement.GetUInt64 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cfd36-243">获取当前 JSON 数字（<see cref="T:System.UInt64" /> 形式）。</span><span class="sxs-lookup"><span data-stu-id="cfd36-243">Gets the current JSON number as a <see cref="T:System.UInt64" />.</span></span></summary>
        <returns><span data-ttu-id="cfd36-244">当前 JSON 数字（<see cref="T:System.UInt64" /> 形式）。</span><span class="sxs-lookup"><span data-stu-id="cfd36-244">The current JSON number as a <see cref="T:System.UInt64" />.</span></span></returns>
        <remarks>
          <format><![CDATA[

## Remarks

<span data-ttu-id="cfd36-245">此方法不分析 JSON 字符串值的内容。</span><span class="sxs-lookup"><span data-stu-id="cfd36-245">This method does not parse the contents of a JSON string value.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-246">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.Number" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-246">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="cfd36-247">此值不能以 <see cref="T:System.UInt64" /> 形式表示。</span><span class="sxs-lookup"><span data-stu-id="cfd36-247">The value cannot be represented as a <see cref="T:System.UInt64" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-248">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-248">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonElement this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.Json.JsonElement Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonElement.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As JsonElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Json::JsonElement default[int] { System::Text::Json::JsonElement get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Text.Json.JsonElement" Usage="System.Text.Json.JsonElement.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="cfd36-249">项索引。</span><span class="sxs-lookup"><span data-stu-id="cfd36-249">The item index.</span></span></param>
        <summary><span data-ttu-id="cfd36-250">获取当前值为 <see cref="F:System.Text.Json.JsonValueKind.Array" /> 时指定索引处的值。</span><span class="sxs-lookup"><span data-stu-id="cfd36-250">Gets the value at the specified index if the current value is an <see cref="F:System.Text.Json.JsonValueKind.Array" />.</span></span></summary>
        <value><span data-ttu-id="cfd36-251">指定索引处的值。</span><span class="sxs-lookup"><span data-stu-id="cfd36-251">The value at the specified index.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-252">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.Array" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-252">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Array" />.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="cfd36-253"><paramref name="index" /> 不在范围 [0, <see cref="M:System.Text.Json.JsonElement.GetArrayLength" />()) 内。</span><span class="sxs-lookup"><span data-stu-id="cfd36-253"><paramref name="index" /> is not in the range [0, <see cref="M:System.Text.Json.JsonElement.GetArrayLength" />()).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-254">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-254">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="jsonElement.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cfd36-255">获取适合于值类型的当前值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cfd36-255">Gets a string representation for the current value appropriate to the value type.</span></span></summary>
        <returns><span data-ttu-id="cfd36-256">适合于值类型的当前值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cfd36-256">A string representation for the current value appropriate to the value type.</span></span></returns>
        <remarks>
          <format><![CDATA[

## Remarks

<span data-ttu-id="cfd36-257">对于 <xref:System.Text.Json.JsonValueKind.Null?displayProperty=nameWithType>，将返回 <xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cfd36-257">For <xref:System.Text.Json.JsonValueKind.Null?displayProperty=nameWithType>, <xref:System.String.Empty?displayProperty=nameWithType> is returned.</span></span>

<span data-ttu-id="cfd36-258">对于 <xref:System.Text.Json.JsonValueKind.True?displayProperty=nameWithType>，将返回 <xref:System.Boolean.TrueString?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cfd36-258">For <xref:System.Text.Json.JsonValueKind.True?displayProperty=nameWithType>, <xref:System.Boolean.TrueString?displayProperty=nameWithType> is returned.</span></span>

<span data-ttu-id="cfd36-259">对于 <xref:System.Text.Json.JsonValueKind.False?displayProperty=nameWithType>，将返回 <xref:System.Boolean.FalseString?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cfd36-259">For <xref:System.Text.Json.JsonValueKind.False?displayProperty=nameWithType>, <xref:System.Boolean.FalseString?displayProperty=nameWithType> is returned.</span></span>

<span data-ttu-id="cfd36-260">对于 <xref:System.Text.Json.JsonValueKind.String?displayProperty=nameWithType>，将返回 <xref:System.Text.Json.JsonElement.GetString> 的值。</span><span class="sxs-lookup"><span data-stu-id="cfd36-260">For <xref:System.Text.Json.JsonValueKind.String?displayProperty=nameWithType>, the value of <xref:System.Text.Json.JsonElement.GetString> is returned.</span></span>

<span data-ttu-id="cfd36-261">对于其他类型，将返回 <xref:System.Text.Json.JsonElement.GetRawText> 的值。</span><span class="sxs-lookup"><span data-stu-id="cfd36-261">For other types, the value of <xref:System.Text.Json.JsonElement.GetRawText> is returned.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-262">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-262">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetByte">
      <MemberSignature Language="C#" Value="public bool TryGetByte (out byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetByte([out] unsigned int8&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetByte(System.Byte@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetByte (ByRef value As Byte) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetByte([Runtime::InteropServices::Out] System::Byte % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetByte : byte -&gt; bool" Usage="jsonElement.TryGetByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cfd36-263">该方法返回时，如果转换成功，则包含与当前 JSON 数字等效的字节。</span><span class="sxs-lookup"><span data-stu-id="cfd36-263">When the method returns, contains the byte equivalent of the current JSON number if the conversion succeeded.</span></span></param>
        <summary><span data-ttu-id="cfd36-264">尝试以 <see cref="T:System.Byte" /> 形式表示当前 JSON 数字。</span><span class="sxs-lookup"><span data-stu-id="cfd36-264">Attempts to represent the current JSON number as a <see cref="T:System.Byte" />.</span></span></summary>
        <returns><span data-ttu-id="cfd36-265">如果可以 <see cref="T:System.Byte" /> 形式表示数字，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-265"><see langword="true" /> if the number can be represented as a <see cref="T:System.Byte" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="cfd36-266">此方法不分析 JSON 字符串值的内容。</span><span class="sxs-lookup"><span data-stu-id="cfd36-266">This method does not parse the contents of a JSON string value.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-267">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.Number" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-267">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-268">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-268">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetBytesFromBase64">
      <MemberSignature Language="C#" Value="public bool TryGetBytesFromBase64 (out byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetBytesFromBase64([out] unsigned int8[]&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetBytesFromBase64(System.Byte[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetBytesFromBase64 (ByRef value As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetBytesFromBase64([Runtime::InteropServices::Out] cli::array &lt;System::Byte&gt; ^ % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetBytesFromBase64 : Byte[] -&gt; bool" Usage="jsonElement.TryGetBytesFromBase64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" RefType="out">
          <Attributes>
            <Attribute FrameworkAlternate="net-5.0">
              <AttributeName>System.Diagnostics.CodeAnalysis.NotNullWhen(true)</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cfd36-269">如果方法成功，则包含 Base64 文本的已解码二进制表示形式。</span><span class="sxs-lookup"><span data-stu-id="cfd36-269">If the method succeeds, contains the decoded binary representation of the Base64 text.</span></span></param>
        <summary><span data-ttu-id="cfd36-270">尝试将当前 JSON 字符串表示为字节数组（假定它是 Base64 编码）。</span><span class="sxs-lookup"><span data-stu-id="cfd36-270">Attempts to represent the current JSON string as a byte array, assuming that it is Base64 encoded.</span></span></summary>
        <returns><span data-ttu-id="cfd36-271">如果整个标记值编码为有效 base 64 文本并且可以成功解码为字节，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-271"><see langword="true" /> if the entire token value is encoded as valid Base64 text and can be successfully decoded to bytes; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="cfd36-272">此方法不会创建 Base64 编码的 JSON 字符串以外的值的字节数组表示形式。</span><span class="sxs-lookup"><span data-stu-id="cfd36-272">This method does not create a byte array representation of values other than Base64 encoded JSON strings.</span></span>

            ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-273">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.String" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-273">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.String" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-274">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-274">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetDateTime">
      <MemberSignature Language="C#" Value="public bool TryGetDateTime (out DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetDateTime([out] valuetype System.DateTime&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetDateTime(System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetDateTime (ByRef value As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetDateTime([Runtime::InteropServices::Out] DateTime % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetDateTime : DateTime -&gt; bool" Usage="jsonElement.TryGetDateTime value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cfd36-275">此方法返回时，包含与当前 JSON 字符串等效的日期和时间值。</span><span class="sxs-lookup"><span data-stu-id="cfd36-275">When this method returns, contains the date and time value equivalent to the current JSON string.</span></span></param>
        <summary><span data-ttu-id="cfd36-276">尝试以 <see cref="T:System.DateTime" /> 形式表示当前 JSON 字符串。</span><span class="sxs-lookup"><span data-stu-id="cfd36-276">Attempts to represent the current JSON string as a <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="cfd36-277">如果可以 <see cref="T:System.DateTime" /> 形式表示字符串，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-277"><see langword="true" /> if the string can be represented as a <see cref="T:System.DateTime" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format><![CDATA[

## Remarks

<span data-ttu-id="cfd36-278">此方法仅创建符合 ISO 8601-1 扩展格式的 JSON 字符串的日期时间表示形式（请参阅[系统中的 datetime 和 DateTimeOffset 支持](/dotnet/standard/datetime/system-text-json-support)）。</span><span class="sxs-lookup"><span data-stu-id="cfd36-278">This method only creates a DateTime representation of JSON strings that conform to the ISO 8601-1 extended format (see [DateTime and DateTimeOffset support in System.Text.Json](/dotnet/standard/datetime/system-text-json-support)).</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-279">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.String" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-279">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.String" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-280">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-280">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetDateTimeOffset">
      <MemberSignature Language="C#" Value="public bool TryGetDateTimeOffset (out DateTimeOffset value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetDateTimeOffset([out] valuetype System.DateTimeOffset&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetDateTimeOffset(System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetDateTimeOffset (ByRef value As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetDateTimeOffset([Runtime::InteropServices::Out] DateTimeOffset % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetDateTimeOffset : DateTimeOffset -&gt; bool" Usage="jsonElement.TryGetDateTimeOffset value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cfd36-281">此方法返回时，包含与当前 JSON 字符串等效的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="cfd36-281">When this method returns, contains the date and time equivalent to the current JSON string.</span></span></param>
        <summary><span data-ttu-id="cfd36-282">尝试以 <see cref="T:System.DateTimeOffset" /> 形式表示当前 JSON 字符串。</span><span class="sxs-lookup"><span data-stu-id="cfd36-282">Attempts to represent the current JSON string as a <see cref="T:System.DateTimeOffset" />.</span></span></summary>
        <returns><span data-ttu-id="cfd36-283">如果可以 <see cref="T:System.DateTimeOffset" /> 形式表示字符串，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-283"><see langword="true" /> if the string can be represented as a <see cref="T:System.DateTimeOffset" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format><![CDATA[

## Remarks

<span data-ttu-id="cfd36-284">此方法仅创建符合 ISO 8601-1 扩展格式的 JSON 字符串的 DateTimeOffset 表示形式（请参阅[DateTime 和 system.object 中的 DateTimeOffset 支持](/dotnet/standard/datetime/system-text-json-support)）。</span><span class="sxs-lookup"><span data-stu-id="cfd36-284">This method only creates a DateTimeOffset representation of JSON strings that conform to the ISO 8601-1 extended format (see [DateTime and DateTimeOffset support in System.Text.Json](/dotnet/standard/datetime/system-text-json-support)).</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-285">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.String" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-285">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.String" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-286">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-286">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetDecimal">
      <MemberSignature Language="C#" Value="public bool TryGetDecimal (out decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetDecimal([out] valuetype System.Decimal&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetDecimal(System.Decimal@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetDecimal (ByRef value As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetDecimal([Runtime::InteropServices::Out] System::Decimal % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetDecimal : decimal -&gt; bool" Usage="jsonElement.TryGetDecimal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cfd36-287">此方法返回时，包含当前 JSON 数字的十进制等效值。</span><span class="sxs-lookup"><span data-stu-id="cfd36-287">When this method returns, contains the decimal equivalent of the current JSON number.</span></span></param>
        <summary><span data-ttu-id="cfd36-288">尝试以 <see cref="T:System.Decimal" /> 形式表示当前 JSON 数字。</span><span class="sxs-lookup"><span data-stu-id="cfd36-288">Attempts to represent the current JSON number as a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="cfd36-289">如果可以 <see cref="T:System.Decimal" /> 形式表示数字，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-289"><see langword="true" /> if the number can be represented as a <see cref="T:System.Decimal" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format><![CDATA[

## Remarks

<span data-ttu-id="cfd36-290">此方法不分析 JSON 字符串值的内容。</span><span class="sxs-lookup"><span data-stu-id="cfd36-290">This method does not parse the contents of a JSON string value.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-291">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.Number" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-291">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-292">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-292">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetDouble">
      <MemberSignature Language="C#" Value="public bool TryGetDouble (out double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetDouble([out] float64&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetDouble(System.Double@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetDouble (ByRef value As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetDouble([Runtime::InteropServices::Out] double % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetDouble : double -&gt; bool" Usage="jsonElement.TryGetDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cfd36-293">此方法返回时，包含与当前 JSON 数字等效的双精度浮点值。</span><span class="sxs-lookup"><span data-stu-id="cfd36-293">When this method returns, contains a double-precision floating point value equivalent to the current JSON number.</span></span></param>
        <summary><span data-ttu-id="cfd36-294">尝试以 <see cref="T:System.Double" /> 形式表示当前 JSON 数字。</span><span class="sxs-lookup"><span data-stu-id="cfd36-294">Attempts to represent the current JSON number as a <see cref="T:System.Double" />.</span></span></summary>
        <returns><span data-ttu-id="cfd36-295">如果可以 <see cref="T:System.Double" /> 形式表示数字，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-295"><see langword="true" /> if the number can be represented as a <see cref="T:System.Double" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format><![CDATA[

## Remarks

<span data-ttu-id="cfd36-296">此方法不分析 JSON 字符串值的内容。</span><span class="sxs-lookup"><span data-stu-id="cfd36-296">This method does not parse the contents of a JSON string value.</span></span>

<span data-ttu-id="cfd36-297">在 .NET Core 中，此方法不返回大于 <xref:System.Double.MaxValue?displayProperty=nameWithType> 或小于 <xref:System.Double.MinValue?displayProperty=nameWithType>的值 `false`。</span><span class="sxs-lookup"><span data-stu-id="cfd36-297">On .NET Core, this method does not return `false` for values larger than <xref:System.Double.MaxValue?displayProperty=nameWithType> or smaller than <xref:System.Double.MinValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cfd36-298">相反，它将返回 `true`，并将 <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> 或 <xref:System.Double.NegativeInfinity?displayProperty=nameWithType> 分配到 `value`。</span><span class="sxs-lookup"><span data-stu-id="cfd36-298">Instead, it returns `true` and assigns <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType> to `value`.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-299">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.Number" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-299">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-300">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-300">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetGuid">
      <MemberSignature Language="C#" Value="public bool TryGetGuid (out Guid value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetGuid([out] valuetype System.Guid&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetGuid(System.Guid@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetGuid (ByRef value As Guid) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetGuid([Runtime::InteropServices::Out] Guid % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetGuid : Guid -&gt; bool" Usage="jsonElement.TryGetGuid value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Guid" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cfd36-301">此方法返回时，包含与当前 JSON 字符串等效的 GUID。</span><span class="sxs-lookup"><span data-stu-id="cfd36-301">When this method returns, contains the GUID equivalent to the current JSON string.</span></span></param>
        <summary><span data-ttu-id="cfd36-302">尝试以 <see cref="T:System.Guid" /> 形式表示当前 JSON 字符串。</span><span class="sxs-lookup"><span data-stu-id="cfd36-302">Attempts to represent the current JSON string as a <see cref="T:System.Guid" />.</span></span></summary>
        <returns><span data-ttu-id="cfd36-303">如果可以 <see cref="T:System.Guid" /> 形式表示字符串，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-303"><see langword="true" /> if the string can be represented as a <see cref="T:System.Guid" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format><![CDATA[

## Remarks

<span data-ttu-id="cfd36-304">此方法不会创建 JSON 字符串以外的值的 Guid 表示形式。</span><span class="sxs-lookup"><span data-stu-id="cfd36-304">This method does not create a Guid representation of values other than JSON strings.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-305">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.String" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-305">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.String" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-306">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-306">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetInt16">
      <MemberSignature Language="C#" Value="public bool TryGetInt16 (out short value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetInt16([out] int16&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetInt16(System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetInt16 (ByRef value As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetInt16([Runtime::InteropServices::Out] short % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetInt16 : int16 -&gt; bool" Usage="jsonElement.TryGetInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cfd36-307">该方法返回时，如果转换成功，则包含与当前 JSON 数字等效的 16 位整数。</span><span class="sxs-lookup"><span data-stu-id="cfd36-307">When the method returns, contains the 16-bit integer equivalent of the current JSON number if the conversion succeeded.</span></span></param>
        <summary><span data-ttu-id="cfd36-308">尝试以 <see cref="T:System.Int16" /> 形式表示当前 JSON 数字。</span><span class="sxs-lookup"><span data-stu-id="cfd36-308">Attempts to represent the current JSON number as an <see cref="T:System.Int16" />.</span></span></summary>
        <returns><span data-ttu-id="cfd36-309">如果可以 <see cref="T:System.Int16" /> 形式表示数字，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-309"><see langword="true" /> if the number can be represented as an <see cref="T:System.Int16" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="cfd36-310">此方法不分析 JSON 字符串值的内容。</span><span class="sxs-lookup"><span data-stu-id="cfd36-310">This method does not parse the contents of a JSON string value.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-311">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.Number" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-311">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-312">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-312">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetInt32">
      <MemberSignature Language="C#" Value="public bool TryGetInt32 (out int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetInt32([out] int32&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetInt32(System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetInt32 (ByRef value As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetInt32([Runtime::InteropServices::Out] int % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetInt32 : int -&gt; bool" Usage="jsonElement.TryGetInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cfd36-313">此方法返回时，包含与当前 JSON 数字等效的 32 位整数值。</span><span class="sxs-lookup"><span data-stu-id="cfd36-313">When this method returns, contains the 32-biut integer value equivalent to the current JSON number.</span></span></param>
        <summary><span data-ttu-id="cfd36-314">尝试以 <see cref="T:System.Int32" /> 形式表示当前 JSON 数字。</span><span class="sxs-lookup"><span data-stu-id="cfd36-314">Attempts to represent the current JSON number as an <see cref="T:System.Int32" />.</span></span></summary>
        <returns><span data-ttu-id="cfd36-315">如果可以 <see cref="T:System.Int32" /> 形式表示数字，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-315"><see langword="true" /> if the number can be represented as an <see cref="T:System.Int32" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format><![CDATA[

## Remarks

<span data-ttu-id="cfd36-316">此方法不分析 JSON 字符串值的内容。</span><span class="sxs-lookup"><span data-stu-id="cfd36-316">This method does not parse the contents of a JSON string value.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-317">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.Number" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-317">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-318">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-318">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetInt64">
      <MemberSignature Language="C#" Value="public bool TryGetInt64 (out long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetInt64([out] int64&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetInt64(System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetInt64 (ByRef value As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetInt64([Runtime::InteropServices::Out] long % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetInt64 : int64 -&gt; bool" Usage="jsonElement.TryGetInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cfd36-319">此方法返回时，包含与当前 JSON 数字等效的 64 位整数值。</span><span class="sxs-lookup"><span data-stu-id="cfd36-319">When this method returns, contains the 64-bit integer value equivalent to the current JSON number.</span></span></param>
        <summary><span data-ttu-id="cfd36-320">尝试以 <see cref="T:System.Int64" /> 形式表示当前 JSON 数字。</span><span class="sxs-lookup"><span data-stu-id="cfd36-320">Attempts to represent the current JSON number as a <see cref="T:System.Int64" />.</span></span></summary>
        <returns><span data-ttu-id="cfd36-321">如果可以 <see cref="T:System.Int64" /> 形式表示数字，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-321"><see langword="true" /> if the number can be represented as a <see cref="T:System.Int64" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format><![CDATA[

## Remarks

<span data-ttu-id="cfd36-322">此方法不分析 JSON 字符串值的内容。</span><span class="sxs-lookup"><span data-stu-id="cfd36-322">This method does not parse the contents of a JSON string value.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-323">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.Number" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-323">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-324">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-324">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetProperty">
      <MemberSignature Language="C#" Value="public bool TryGetProperty (ReadOnlySpan&lt;byte&gt; utf8PropertyName, out System.Text.Json.JsonElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetProperty(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, [out] valuetype System.Text.Json.JsonElement&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetProperty(System.ReadOnlySpan{System.Byte},System.Text.Json.JsonElement@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetProperty (utf8PropertyName As ReadOnlySpan(Of Byte), ByRef value As JsonElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetProperty(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, [Runtime::InteropServices::Out] System::Text::Json::JsonElement % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetProperty : ReadOnlySpan&lt;byte&gt; * JsonElement -&gt; bool" Usage="jsonElement.TryGetProperty (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Text.Json.JsonElement" RefType="out" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="cfd36-325">要返回的属性名称的 UTF-8 表示形式（没有字节顺序标记 (BOM)）。</span><span class="sxs-lookup"><span data-stu-id="cfd36-325">The UTF-8 (with no Byte-Order-Mark (BOM)) representation of the name of the property to return.</span></span></param>
        <param name="value"><span data-ttu-id="cfd36-326">接收已找到的属性的值。</span><span class="sxs-lookup"><span data-stu-id="cfd36-326">Receives the value of the located property.</span></span></param>
        <summary><span data-ttu-id="cfd36-327">查找当前对象中名为 <paramref name="utf8PropertyName" /> 的属性，返回一个指示此类属性是否存在的值。</span><span class="sxs-lookup"><span data-stu-id="cfd36-327">Looks for a property named <paramref name="utf8PropertyName" /> in the current object, returning a value that indicates whether or not such a property exists.</span></span> <span data-ttu-id="cfd36-328">如果此属性存在，该方法会将其值分配给 <paramref name="value" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="cfd36-328">When the property exists, the method assigns its value to the <paramref name="value" /> argument.</span></span></summary>
        <returns><span data-ttu-id="cfd36-329">如果找到该属性，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-329"><see langword="true" /> if the property was found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format><![CDATA[

## Remarks

<span data-ttu-id="cfd36-330">属性名称匹配作为序号、区分大小写的比较来执行。</span><span class="sxs-lookup"><span data-stu-id="cfd36-330">Property name matching is performed as an ordinal, case-sensitive comparison.</span></span>

<span data-ttu-id="cfd36-331">如果为同一对象多次定义某个属性，则该方法将匹配最后一个此类定义。</span><span class="sxs-lookup"><span data-stu-id="cfd36-331">If a property is defined multiple times for the same object, the method matches the last such definition.</span></span>

<span data-ttu-id="cfd36-332">有关详细信息，请参阅[如何序列化和反序列化 JSON](/dotnet/standard/serialization/system-text-json-how-to#use-jsondocument-for-access-to-data)。</span><span class="sxs-lookup"><span data-stu-id="cfd36-332">For more information, see [How to serialize and deserialize JSON](/dotnet/standard/serialization/system-text-json-how-to#use-jsondocument-for-access-to-data).</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-333">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.Object" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-333">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Object" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-334">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-334">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetProperty">
      <MemberSignature Language="C#" Value="public bool TryGetProperty (ReadOnlySpan&lt;char&gt; propertyName, out System.Text.Json.JsonElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetProperty(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, [out] valuetype System.Text.Json.JsonElement&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetProperty(System.ReadOnlySpan{System.Char},System.Text.Json.JsonElement@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetProperty (propertyName As ReadOnlySpan(Of Char), ByRef value As JsonElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetProperty(ReadOnlySpan&lt;char&gt; propertyName, [Runtime::InteropServices::Out] System::Text::Json::JsonElement % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetProperty : ReadOnlySpan&lt;char&gt; * JsonElement -&gt; bool" Usage="jsonElement.TryGetProperty (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.Text.Json.JsonElement" RefType="out" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="cfd36-335">要查找的属性名称。</span><span class="sxs-lookup"><span data-stu-id="cfd36-335">The name of the property to find.</span></span></param>
        <param name="value"><span data-ttu-id="cfd36-336">此方法返回时，包含指定属性的值。</span><span class="sxs-lookup"><span data-stu-id="cfd36-336">When this method returns, contains the value of the specified property.</span></span></param>
        <summary><span data-ttu-id="cfd36-337">查找当前对象中名为 <paramref name="propertyName" /> 的属性，返回一个指示此类属性是否存在的值。</span><span class="sxs-lookup"><span data-stu-id="cfd36-337">Looks for a property named <paramref name="propertyName" /> in the current object, returning a value that indicates whether or not such a property exists.</span></span> <span data-ttu-id="cfd36-338">如果此属性存在，该方法会将其值分配给 <paramref name="value" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="cfd36-338">When the property exists, the method assigns its value to the <paramref name="value" /> argument.</span></span></summary>
        <returns><span data-ttu-id="cfd36-339">如果找到该属性，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-339"><see langword="true" /> if the property was found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format><![CDATA[

## Remarks

<span data-ttu-id="cfd36-340">属性名称匹配作为序号、区分大小写的比较来执行。</span><span class="sxs-lookup"><span data-stu-id="cfd36-340">Property name matching is performed as an ordinal, case-sensitive comparison.</span></span>

<span data-ttu-id="cfd36-341">如果为同一对象多次定义某个属性，则该方法将匹配最后一个此类定义。</span><span class="sxs-lookup"><span data-stu-id="cfd36-341">If a property is defined multiple times for the same object, the method matches the last such definition.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-342">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.Object" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-342">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Object" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-343">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-343">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetProperty">
      <MemberSignature Language="C#" Value="public bool TryGetProperty (string propertyName, out System.Text.Json.JsonElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetProperty(string propertyName, [out] valuetype System.Text.Json.JsonElement&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetProperty(System.String,System.Text.Json.JsonElement@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetProperty (propertyName As String, ByRef value As JsonElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetProperty(System::String ^ propertyName, [Runtime::InteropServices::Out] System::Text::Json::JsonElement % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetProperty : string * JsonElement -&gt; bool" Usage="jsonElement.TryGetProperty (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Text.Json.JsonElement" RefType="out" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="cfd36-344">要查找的属性名称。</span><span class="sxs-lookup"><span data-stu-id="cfd36-344">The name of the property to find.</span></span></param>
        <param name="value"><span data-ttu-id="cfd36-345">此方法返回时，包含指定属性的值。</span><span class="sxs-lookup"><span data-stu-id="cfd36-345">When this method returns, contains the value of the specified property.</span></span></param>
        <summary><span data-ttu-id="cfd36-346">查找当前对象中名为 <paramref name="propertyName" /> 的属性，返回一个指示此类属性是否存在的值。</span><span class="sxs-lookup"><span data-stu-id="cfd36-346">Looks for a property named <paramref name="propertyName" /> in the current object, returning a value that indicates whether or not such a property exists.</span></span> <span data-ttu-id="cfd36-347">如果此属性存在，会将其值分配给 <paramref name="value" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="cfd36-347">When the property exists, its value is assigned to the <paramref name="value" /> argument.</span></span></summary>
        <returns><span data-ttu-id="cfd36-348">如果找到该属性，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-348"><see langword="true" /> if the property was found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format><![CDATA[

## Remarks

<span data-ttu-id="cfd36-349">属性名称匹配作为序号、区分大小写的比较来执行。</span><span class="sxs-lookup"><span data-stu-id="cfd36-349">Property name matching is performed as an ordinal, case-sensitive comparison.</span></span>

<span data-ttu-id="cfd36-350">如果为同一对象多次定义某个属性，则该方法将匹配最后一个此类定义。</span><span class="sxs-lookup"><span data-stu-id="cfd36-350">If a property is defined multiple times for the same object, the method matches the last such definition.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-351">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.Object" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-351">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Object" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cfd36-352"><paramref name="propertyName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-352"><paramref name="propertyName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-353">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-353">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetSByte">
      <MemberSignature Language="C#" Value="public bool TryGetSByte (out sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetSByte([out] int8&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetSByte(System.SByte@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetSByte (ByRef value As SByte) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetSByte([Runtime::InteropServices::Out] System::SByte % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetSByte : sbyte -&gt; bool" Usage="jsonElement.TryGetSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cfd36-354">该方法返回时，如果转换成功，则包含与当前 JSON 数字等效的有符号字节。</span><span class="sxs-lookup"><span data-stu-id="cfd36-354">When the method returns, contains the signed byte equivalent of the current JSON number if the conversion succeeded.</span></span></param>
        <summary><span data-ttu-id="cfd36-355">尝试以 <see cref="T:System.SByte" /> 形式表示当前 JSON 数字。</span><span class="sxs-lookup"><span data-stu-id="cfd36-355">Attempts to represent the current JSON number as an <see cref="T:System.SByte" />.</span></span></summary>
        <returns><span data-ttu-id="cfd36-356">如果可以 <see cref="T:System.SByte" /> 形式表示数字，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-356"><see langword="true" /> if the number can be represented as an <see cref="T:System.SByte" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="cfd36-357">此方法不分析 JSON 字符串值的内容。</span><span class="sxs-lookup"><span data-stu-id="cfd36-357">This method does not parse the contents of a JSON string value.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-358">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.Number" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-358">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-359">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-359">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetSingle">
      <MemberSignature Language="C#" Value="public bool TryGetSingle (out float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetSingle([out] float32&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetSingle(System.Single@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetSingle (ByRef value As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetSingle([Runtime::InteropServices::Out] float % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetSingle : single -&gt; bool" Usage="jsonElement.TryGetSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cfd36-360">此方法返回时，包含与当前 JSON 数字等效的单精度浮点值。</span><span class="sxs-lookup"><span data-stu-id="cfd36-360">When this method returns, contains the single-precision floating point value equivalent to the current JSON number.</span></span></param>
        <summary><span data-ttu-id="cfd36-361">尝试以 <see cref="T:System.Single" /> 形式表示当前 JSON 数字。</span><span class="sxs-lookup"><span data-stu-id="cfd36-361">Attempts to represent the current JSON number as a <see cref="T:System.Single" />.</span></span></summary>
        <returns><span data-ttu-id="cfd36-362">如果可以 <see cref="T:System.Single" /> 形式表示数字，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-362"><see langword="true" /> if the number can be represented as a <see cref="T:System.Single" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format><![CDATA[

## Remarks

<span data-ttu-id="cfd36-363">此方法不分析 JSON 字符串值的内容。</span><span class="sxs-lookup"><span data-stu-id="cfd36-363">This method does not parse the contents of a JSON string value.</span></span>

<span data-ttu-id="cfd36-364">在 .NET Core 中，此方法不返回大于 <xref:System.Single.MaxValue?displayProperty=nameWithType> 或小于 <xref:System.Single.MinValue?displayProperty=nameWithType>）的值 `false`。</span><span class="sxs-lookup"><span data-stu-id="cfd36-364">On .NET Core, this method does not return `false` for values larger than <xref:System.Single.MaxValue?displayProperty=nameWithType> or smaller than <xref:System.Single.MinValue?displayProperty=nameWithType>).</span></span> <span data-ttu-id="cfd36-365">相反，它将返回 `true`，并将 <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> 或 <xref:System.Single.NegativeInfinity?displayProperty=nameWithType> 赋给 `value` 参数。</span><span class="sxs-lookup"><span data-stu-id="cfd36-365">Instead, it returns `true` and assigns <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Single.NegativeInfinity?displayProperty=nameWithType> to the `value` argument.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-366">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.Number" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-366">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-367">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-367">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetUInt16">
      <MemberSignature Language="C#" Value="public bool TryGetUInt16 (out ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetUInt16([out] unsigned int16&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetUInt16(System.UInt16@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetUInt16 (ByRef value As UShort) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetUInt16([Runtime::InteropServices::Out] System::UInt16 % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetUInt16 : uint16 -&gt; bool" Usage="jsonElement.TryGetUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cfd36-368">该方法返回时，如果转换成功，则包含与当前 JSON 数字等效的无符号 16 位整数。</span><span class="sxs-lookup"><span data-stu-id="cfd36-368">When the method returns, contains the unsigned 16-bit integer equivalent of the current JSON number if the conversion succeeded.</span></span></param>
        <summary><span data-ttu-id="cfd36-369">尝试以 <see cref="T:System.UInt16" /> 形式表示当前 JSON 数字。</span><span class="sxs-lookup"><span data-stu-id="cfd36-369">Attempts to represent the current JSON number as a <see cref="T:System.UInt16" />.</span></span></summary>
        <returns><span data-ttu-id="cfd36-370">如果可以 <see cref="T:System.UInt16" /> 形式表示数字，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-370"><see langword="true" /> if the number can be represented as a <see cref="T:System.UInt16" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="cfd36-371">此方法不分析 JSON 字符串值的内容。</span><span class="sxs-lookup"><span data-stu-id="cfd36-371">This method does not parse the contents of a JSON string value.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-372">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.Number" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-372">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-373">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-373">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetUInt32">
      <MemberSignature Language="C#" Value="public bool TryGetUInt32 (out uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetUInt32([out] unsigned int32&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetUInt32(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetUInt32 (ByRef value As UInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetUInt32([Runtime::InteropServices::Out] System::UInt32 % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetUInt32 : uint32 -&gt; bool" Usage="jsonElement.TryGetUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cfd36-374">此方法返回时，包含与当前 JSON 数字等效的 32 位无符号整数值。</span><span class="sxs-lookup"><span data-stu-id="cfd36-374">When this method returns, contains unsigned 32-bit integer value equivalent to the current JSON number.</span></span></param>
        <summary><span data-ttu-id="cfd36-375">尝试以 <see cref="T:System.UInt32" /> 形式表示当前 JSON 数字。</span><span class="sxs-lookup"><span data-stu-id="cfd36-375">Attempts to represent the current JSON number as a <see cref="T:System.UInt32" />.</span></span></summary>
        <returns><span data-ttu-id="cfd36-376">如果可以 <see cref="T:System.UInt32" /> 形式表示数字，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-376"><see langword="true" /> if the number can be represented as a <see cref="T:System.UInt32" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format><![CDATA[

## Remarks

<span data-ttu-id="cfd36-377">此方法不分析 JSON 字符串值的内容。</span><span class="sxs-lookup"><span data-stu-id="cfd36-377">This method does not parse the contents of a JSON string value.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-378">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.Number" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-378">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-379">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-379">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetUInt64">
      <MemberSignature Language="C#" Value="public bool TryGetUInt64 (out ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetUInt64([out] unsigned int64&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.TryGetUInt64(System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetUInt64 (ByRef value As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetUInt64([Runtime::InteropServices::Out] System::UInt64 % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetUInt64 : uint64 -&gt; bool" Usage="jsonElement.TryGetUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cfd36-380">此方法返回时，包含与当前 JSON 数字等效的 64 位无符号整数值。</span><span class="sxs-lookup"><span data-stu-id="cfd36-380">When this method returns, contains unsigned 64-bit integer value equivalent to the current JSON number.</span></span></param>
        <summary><span data-ttu-id="cfd36-381">尝试以 <see cref="T:System.UInt64" /> 形式表示当前 JSON 数字。</span><span class="sxs-lookup"><span data-stu-id="cfd36-381">Attempts to represent the current JSON number as a <see cref="T:System.UInt64" />.</span></span></summary>
        <returns><span data-ttu-id="cfd36-382">如果可以 <see cref="T:System.UInt64" /> 形式表示数字，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-382"><see langword="true" /> if the number can be represented as a <see cref="T:System.UInt64" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format><![CDATA[

## Remarks

<span data-ttu-id="cfd36-383">此方法不分析 JSON 字符串值的内容。</span><span class="sxs-lookup"><span data-stu-id="cfd36-383">This method does not parse the contents of a JSON string value.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-384">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.Number" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-384">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-385">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-385">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ValueEquals">
      <MemberSignature Language="C#" Value="public bool ValueEquals (ReadOnlySpan&lt;byte&gt; utf8Text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValueEquals(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8Text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.ValueEquals(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function ValueEquals (utf8Text As ReadOnlySpan(Of Byte)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValueEquals(ReadOnlySpan&lt;System::Byte&gt; utf8Text);" />
      <MemberSignature Language="F#" Value="member this.ValueEquals : ReadOnlySpan&lt;byte&gt; -&gt; bool" Usage="jsonElement.ValueEquals utf8Text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Text" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="utf8Text"><span data-ttu-id="cfd36-386">要进行比较的 UTF-8 编码文本。</span><span class="sxs-lookup"><span data-stu-id="cfd36-386">The UTF-8 encoded text to compare against.</span></span></param>
        <summary><span data-ttu-id="cfd36-387">将由 UTF8 编码的字节范围表示的文本与此元素的字符串值进行比较。</span><span class="sxs-lookup"><span data-stu-id="cfd36-387">Compares the text represented by a UTF8-encoded byte span to the string value of this element.</span></span></summary>
        <returns><span data-ttu-id="cfd36-388">如果此元素的字符串值的 UTF-8 编码与 <paramref name="utf8Text" /> 相同，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-388"><see langword="true" /> if the string value of this element has the same UTF-8 encoding as <paramref name="utf8Text" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="cfd36-389">此方法在功能上相当于对 <xref:System.Text.Json.JsonElement.GetString>使用 UTF-8 解码 `utf8Text` 生成的字符串进行序号比较，但避免创建字符串实例。</span><span class="sxs-lookup"><span data-stu-id="cfd36-389">This method is functionally equal to doing an ordinal comparison of the string produced by UTF-8 decoding `utf8Text` with the result of calling <xref:System.Text.Json.JsonElement.GetString>, but avoids creating the string instances.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-390">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.String" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-390">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.String" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ValueEquals">
      <MemberSignature Language="C#" Value="public bool ValueEquals (ReadOnlySpan&lt;char&gt; text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValueEquals(valuetype System.ReadOnlySpan`1&lt;char&gt; text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.ValueEquals(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Function ValueEquals (text As ReadOnlySpan(Of Char)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValueEquals(ReadOnlySpan&lt;char&gt; text);" />
      <MemberSignature Language="F#" Value="member this.ValueEquals : ReadOnlySpan&lt;char&gt; -&gt; bool" Usage="jsonElement.ValueEquals text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="cfd36-391">要针对其进行比较的文本。</span><span class="sxs-lookup"><span data-stu-id="cfd36-391">The text to compare against.</span></span></param>
        <summary><span data-ttu-id="cfd36-392">将指定只读字符范围与此元素的字符串值进行比较。</span><span class="sxs-lookup"><span data-stu-id="cfd36-392">Compares a specified read-only character span to the string value of this element.</span></span></summary>
        <returns><span data-ttu-id="cfd36-393">如果此元素的字符串值与 <paramref name="text" /> 匹配，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-393"><see langword="true" /> if the string value of this element matches <paramref name="text" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="cfd36-394">此方法在功能上等同于对 `text` 和调用 <xref:System.Text.Json.JsonElement.GetString>的结果进行序号比较，但避免创建字符串实例。</span><span class="sxs-lookup"><span data-stu-id="cfd36-394">This method is functionally equal to doing an ordinal comparison of `text` and the result of calling <xref:System.Text.Json.JsonElement.GetString>, but avoids creating the string instance.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-395">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.String" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-395">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.String" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ValueEquals">
      <MemberSignature Language="C#" Value="public bool ValueEquals (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValueEquals(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.ValueEquals(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValueEquals (text As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValueEquals(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ValueEquals : string -&gt; bool" Usage="jsonElement.ValueEquals text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="cfd36-396">要针对其进行比较的文本。</span><span class="sxs-lookup"><span data-stu-id="cfd36-396">The text to compare against.</span></span></param>
        <summary><span data-ttu-id="cfd36-397">将指定字符串与此元素的字符串值进行比较。</span><span class="sxs-lookup"><span data-stu-id="cfd36-397">Compares a specified string to the string value of this element.</span></span></summary>
        <returns><span data-ttu-id="cfd36-398">如果此元素的字符串值与 <paramref name="text" /> 匹配，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-398"><see langword="true" /> if the string value of this element matches <paramref name="text" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="cfd36-399">此方法在功能上等同于对 `text` 和调用 <xref:System.Text.Json.JsonElement.GetString>的结果进行序号比较，但避免创建字符串实例。</span><span class="sxs-lookup"><span data-stu-id="cfd36-399">This method is functionally equal to doing an ordinal comparison of `text` and the result of calling <xref:System.Text.Json.JsonElement.GetString>, but avoids creating the string instance.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-400">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 不是 <see cref="F:System.Text.Json.JsonValueKind.String" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-400">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.String" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ValueKind">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonValueKind ValueKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.Json.JsonValueKind ValueKind" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonElement.ValueKind" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueKind As JsonValueKind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Json::JsonValueKind ValueKind { System::Text::Json::JsonValueKind get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueKind : System.Text.Json.JsonValueKind" Usage="System.Text.Json.JsonElement.ValueKind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonValueKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cfd36-401">获取当前 JSON 值的类型。</span><span class="sxs-lookup"><span data-stu-id="cfd36-401">Gets the type of the current JSON value.</span></span></summary>
        <value><span data-ttu-id="cfd36-402">当前 JSON 值的类型。</span><span class="sxs-lookup"><span data-stu-id="cfd36-402">The type of the current JSON value.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-403">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-403">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public void WriteTo (System.Text.Json.Utf8JsonWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteTo(class System.Text.Json.Utf8JsonWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonElement.WriteTo(System.Text.Json.Utf8JsonWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteTo (writer As Utf8JsonWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteTo(System::Text::Json::Utf8JsonWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteTo : System.Text.Json.Utf8JsonWriter -&gt; unit" Usage="jsonElement.WriteTo writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="cfd36-404">要将元素写入到的编写器。</span><span class="sxs-lookup"><span data-stu-id="cfd36-404">The writer to which to write the element.</span></span></param>
        <summary><span data-ttu-id="cfd36-405">将元素作为 JSON 值写入指定的编写器。</span><span class="sxs-lookup"><span data-stu-id="cfd36-405">Writes the element to the specified writer as a JSON value.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cfd36-406">
          <paramref name="writer" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-406">The <paramref name="writer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cfd36-407">此值的 <see cref="P:System.Text.Json.JsonElement.ValueKind" /> 为 <see cref="F:System.Text.Json.JsonValueKind.Undefined" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-407">The <see cref="P:System.Text.Json.JsonElement.ValueKind" /> of this value is <see cref="F:System.Text.Json.JsonValueKind.Undefined" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="cfd36-408">已释放父级 <see cref="T:System.Text.Json.JsonDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cfd36-408">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
