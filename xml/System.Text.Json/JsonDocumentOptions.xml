<Type Name="JsonDocumentOptions" FullName="System.Text.Json.JsonDocumentOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ed78ffd741667f0e09ca98f5c4c9f04415d64775" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89971568" /></Metadata><TypeSignature Language="C#" Value="public struct JsonDocumentOptions" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit JsonDocumentOptions extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.JsonDocumentOptions" />
  <TypeSignature Language="VB.NET" Value="Public Structure JsonDocumentOptions" />
  <TypeSignature Language="C++ CLI" Value="public value class JsonDocumentOptions" />
  <TypeSignature Language="F#" Value="type JsonDocumentOptions = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="09625-101">分析 JSON 以创建 <see cref="T:System.Text.Json.JsonDocument" /> 时，为用户提供定义自定义行为的功能。</span><span class="sxs-lookup"><span data-stu-id="09625-101">Provides the ability for the user to define custom behavior when parsing JSON to create a <see cref="T:System.Text.Json.JsonDocument" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="09625-102">有关详细信息，请参阅 [如何序列化和反序列化 JSON](/dotnet/standard/serialization/system-text-json-how-to)。</span><span class="sxs-lookup"><span data-stu-id="09625-102">For more information, see [How to serialize and deserialize JSON](/dotnet/standard/serialization/system-text-json-how-to).</span></span>

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllowTrailingCommas">
      <MemberSignature Language="C#" Value="public bool AllowTrailingCommas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowTrailingCommas" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonDocumentOptions.AllowTrailingCommas" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowTrailingCommas As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowTrailingCommas { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowTrailingCommas : bool with get, set" Usage="System.Text.Json.JsonDocumentOptions.AllowTrailingCommas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09625-103">获取或设置一个值，该值指示要读取的 JSON 有效负载中是否允许（和忽略）对象或数组中 JSON 值的列表末尾多余的逗号。</span><span class="sxs-lookup"><span data-stu-id="09625-103">Gets or sets a value that indicates whether an extra comma at the end of a list of JSON values in an object or array is allowed (and ignored) within the JSON payload being read.</span></span></summary>
        <value><span data-ttu-id="09625-104"><see langword="true" /> 如果允许在对象或数组中的 JSON 值列表末尾使用额外逗号，则为; 否则为。否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="09625-104"><see langword="true" /> if an extra comma at the end of a list of JSON values in an object or array is allowed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="09625-105">默认为 <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="09625-105">Default is <see langword="false" /></span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="09625-106">默认情况下， `AllowTrailingCommas` 设置为 `false` ，并在 <xref:System.Text.Json.JsonException> 遇到尾部逗号时引发。</span><span class="sxs-lookup"><span data-stu-id="09625-106">By default, `AllowTrailingCommas` is set to `false`, and a <xref:System.Text.Json.JsonException> is thrown if a trailing comma is encountered.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommentHandling">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonCommentHandling CommentHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.Json.JsonCommentHandling CommentHandling" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonDocumentOptions.CommentHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property CommentHandling As JsonCommentHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Json::JsonCommentHandling CommentHandling { System::Text::Json::JsonCommentHandling get(); void set(System::Text::Json::JsonCommentHandling value); };" />
      <MemberSignature Language="F#" Value="member this.CommentHandling : System.Text.Json.JsonCommentHandling with get, set" Usage="System.Text.Json.JsonDocumentOptions.CommentHandling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonCommentHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09625-107">获取或设置一个值，该值确定在读取 JSON 数据时，<see cref="T:System.Text.Json.JsonDocument" /> 处理注释的方式。</span><span class="sxs-lookup"><span data-stu-id="09625-107">Gets or sets a value that determines how the <see cref="T:System.Text.Json.JsonDocument" /> handles comments when reading through the JSON data.</span></span></summary>
        <value><span data-ttu-id="09625-108">枚举值之一，指示如何处理注释。</span><span class="sxs-lookup"><span data-stu-id="09625-108">One of the enumeration values that indicates how comments are handled.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="09625-109">默认情况下， <xref:System.Text.Json.JsonException> 如果遇到注释，则会引发。</span><span class="sxs-lookup"><span data-stu-id="09625-109">By default, a <xref:System.Text.Json.JsonException> is thrown if a comment is encountered.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="09625-110">注释处理枚举设置为不受支持的值（或不在 <see cref="T:System.Text.Json.JsonCommentHandling" /> 枚举范围内）。</span><span class="sxs-lookup"><span data-stu-id="09625-110">The comment handling enum is set to a value that is not supported (or not within the <see cref="T:System.Text.Json.JsonCommentHandling" /> enum range).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaxDepth">
      <MemberSignature Language="C#" Value="public int MaxDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxDepth" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonDocumentOptions.MaxDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxDepth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxDepth : int with get, set" Usage="System.Text.Json.JsonDocumentOptions.MaxDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09625-111">获取或设置分析 JSON 数据时允许的最大深度，默认值（即 0）表示最大深度为 64。</span><span class="sxs-lookup"><span data-stu-id="09625-111">Gets or sets the maximum depth allowed when parsing JSON data, with the default (that is, 0) indicating a maximum depth of 64.</span></span></summary>
        <value><span data-ttu-id="09625-112">分析 JSON 数据时允许的最大深度。</span><span class="sxs-lookup"><span data-stu-id="09625-112">The maximum depth allowed when parsing JSON data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="09625-113">在此深度之后进行分析将引发 <xref:System.Text.Json.JsonException> 。</span><span class="sxs-lookup"><span data-stu-id="09625-113">Parsing past this depth will throw a <xref:System.Text.Json.JsonException>.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="09625-114">最大深度设置为负值。</span><span class="sxs-lookup"><span data-stu-id="09625-114">The max depth is set to a negative value.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
