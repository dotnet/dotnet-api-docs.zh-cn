<Type Name="IXmlJsonReaderInitializer" FullName="System.Runtime.Serialization.Json.IXmlJsonReaderInitializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e4b892f3817529f7dedecd393d096ad97b6f84bf" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89992138" /></Metadata><TypeSignature Language="C#" Value="public interface IXmlJsonReaderInitializer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IXmlJsonReaderInitializer" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IXmlJsonReaderInitializer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IXmlJsonReaderInitializer" />
  <TypeSignature Language="F#" Value="type IXmlJsonReaderInitializer = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.0.5.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime.Serialization.Json" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.ServiceModel.Web" FromVersion="4.0.0.0" To="System.Runtime.Serialization" ToVersion="4.0.0.0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  </TypeForwardingChain>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.TypeForwardedFrom("System.ServiceModel.Web, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TypeForwardedFrom("System.ServiceModel.Web, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指定在重用 JavaScript 对象表示法 (JSON) 读取器从特定流或缓冲区中读取数据时对该读取器进行初始化的接口。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlDictionaryReader> 方法之一创建的 <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader%2A> 对象实现了此接口，可随时对这些对象进行初始化以读取 JSON 编码数据。 但是，如果用户要重用相同的 <xref:System.Xml.XmlDictionaryReader> 对象来读取其他 JSON 编码数据，则必须使用 <xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%2A> 方法之一将读取器初始化为要读取的第二个数据集。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="SetInput">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将支持 JavaScript 对象表示法 (JSON) 的读取器重新初始化为包含 JSON 编码数据的指定流或缓冲区。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlDictionaryReader> 方法之一创建的 <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader%2A> 对象实现了此接口，这些对象可随时读取 JSON 编码数据。 但是，如果用户要重用相同的 <xref:System.Xml.XmlDictionaryReader> 对象来读取其他 JSON 编码数据，则必须使用 <xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%2A> 方法之一将读取器初始化为要读取的第二个数据集。  
  
 作为 <xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A> 参数一部分设置的 `quotas` 值仅限制在使用 <xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.IO.Stream%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29> 方法从流中读取输入时读入内存的信息量，使用 <xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29> 方法从缓冲区中读取信息时不会强制实施该值。 可加载属性的数量限制与 JSON 上下文无关。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetInput">
      <MemberSignature Language="C#" Value="public void SetInput (System.IO.Stream stream, System.Text.Encoding encoding, System.Xml.XmlDictionaryReaderQuotas quotas, System.Xml.OnXmlDictionaryReaderClose onClose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetInput(class System.IO.Stream stream, class System.Text.Encoding encoding, class System.Xml.XmlDictionaryReaderQuotas quotas, class System.Xml.OnXmlDictionaryReaderClose onClose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetInput (stream As Stream, encoding As Encoding, quotas As XmlDictionaryReaderQuotas, onClose As OnXmlDictionaryReaderClose)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetInput(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, System::Xml::XmlDictionaryReaderQuotas ^ quotas, System::Xml::OnXmlDictionaryReaderClose ^ onClose);" />
      <MemberSignature Language="F#" Value="abstract member SetInput : System.IO.Stream * System.Text.Encoding * System.Xml.XmlDictionaryReaderQuotas * System.Xml.OnXmlDictionaryReaderClose -&gt; unit" Usage="iXmlJsonReaderInitializer.SetInput (stream, encoding, quotas, onClose)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
        <Parameter Name="onClose" Type="System.Xml.OnXmlDictionaryReaderClose" />
      </Parameters>
      <Docs>
        <param name="stream">要从中读取数据的输入 <see cref="T:System.IO.Stream" />。</param>
        <param name="encoding">读取器使用的 <see cref="T:System.Text.Encoding" />。</param>
        <param name="quotas">要应用的 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
        <param name="onClose">读取器关闭时调用的委托。</param>
        <summary>将支持 JavaScript 对象表示法 (JSON) 的读取器重新初始化为包含 JSON 编码数据的指定流。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通过调用 <xref:System.Xml.XmlDictionaryReader> 方法重新初始化读取 JSON 编码流的 <xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.IO.Stream%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29> 对象，可以重用该对象。  
  
 读取器可以解释 UTF-8 和 UTF-16（Little-Endian 或 Big-Endian）编码。 如果传递 1，则读取器在初始化时使用该编码集；如果传递 `null`，则自动检测编码。  
  
 作为 <xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A> 参数一部分设置的 `quotas` 值仅限制在使用 <xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.IO.Stream%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29> 方法从流中读取输入时读入内存的信息量，使用 <xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29> 方法从缓冲区中读取信息时不会强制实施该值。 可加载属性的数量限制与 JSON 上下文无关。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetInput">
      <MemberSignature Language="C#" Value="public void SetInput (byte[] buffer, int offset, int count, System.Text.Encoding encoding, System.Xml.XmlDictionaryReaderQuotas quotas, System.Xml.OnXmlDictionaryReaderClose onClose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetInput(unsigned int8[] buffer, int32 offset, int32 count, class System.Text.Encoding encoding, class System.Xml.XmlDictionaryReaderQuotas quotas, class System.Xml.OnXmlDictionaryReaderClose onClose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetInput (buffer As Byte(), offset As Integer, count As Integer, encoding As Encoding, quotas As XmlDictionaryReaderQuotas, onClose As OnXmlDictionaryReaderClose)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetInput(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Text::Encoding ^ encoding, System::Xml::XmlDictionaryReaderQuotas ^ quotas, System::Xml::OnXmlDictionaryReaderClose ^ onClose);" />
      <MemberSignature Language="F#" Value="abstract member SetInput : byte[] * int * int * System.Text.Encoding * System.Xml.XmlDictionaryReaderQuotas * System.Xml.OnXmlDictionaryReaderClose -&gt; unit" Usage="iXmlJsonReaderInitializer.SetInput (buffer, offset, count, encoding, quotas, onClose)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
        <Parameter Name="onClose" Type="System.Xml.OnXmlDictionaryReaderClose" />
      </Parameters>
      <Docs>
        <param name="buffer">要从中读取数据的输入 <see cref="T:System.Byte" /> 缓冲区数组。</param>
        <param name="offset"><paramref name="buffer" /> 中开始读取数据的位置。</param>
        <param name="count">可以从 <paramref name="buffer" /> 中读取的字节数。</param>
        <param name="encoding">读取器使用的 <see cref="T:System.Text.Encoding" />。</param>
        <param name="quotas">要应用的 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
        <param name="onClose">在读取器关闭时调用的 <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> 委托。</param>
        <summary>将支持 JavaScript 对象表示法 (JSON) 的读取器重新初始化为包含 JSON 编码数据的指定缓冲区。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通过调用 <xref:System.Xml.XmlDictionaryReader> 方法重新初始化读取 JSON 编码缓冲 <xref:System.Byte> 的 <xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29> 对象，可以重用该对象。  
  
 读取器可以解释 UTF-8 和 UTF-16（Little-Endian 或 Big-Endian）编码。 如果传递 1，则读取器在初始化时使用该编码集；如果传递 `null`，则自动检测编码。  
  
 作为 <xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A> 参数一部分设置的 `quotas` 值仅限制在使用 <xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.IO.Stream%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29> 方法从流中读取输入时读入内存的信息量，使用 <xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29> 方法从缓冲区中读取信息时不会强制实施该值。 可加载属性的数量限制与 JSON 上下文无关。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
