<Type Name="WebSocketProtocol" FullName="System.Net.WebSockets.WebSocketProtocol">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9734a90b3fef6ec55de1094b81ba2e6edb5ac29a" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89786914" /></Metadata><TypeSignature Language="C#" Value="public static class WebSocketProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WebSocketProtocol extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebSockets.WebSocketProtocol" />
  <TypeSignature Language="VB.NET" Value="Public Class WebSocketProtocol" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebSocketProtocol abstract sealed" />
  <TypeSignature Language="F#" Value="type WebSocketProtocol = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.WebSockets.WebSocketProtocol</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>WebSocket 类允许应用程序在 WebSocket 升级完成后发送和接收数据。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateFromStream">
      <MemberSignature Language="C#" Value="public static System.Net.WebSockets.WebSocket CreateFromStream (System.IO.Stream stream, bool isServer, string subProtocol, TimeSpan keepAliveInterval);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.WebSockets.WebSocket CreateFromStream(class System.IO.Stream stream, bool isServer, string subProtocol, valuetype System.TimeSpan keepAliveInterval) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.WebSocketProtocol.CreateFromStream(System.IO.Stream,System.Boolean,System.String,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromStream (stream As Stream, isServer As Boolean, subProtocol As String, keepAliveInterval As TimeSpan) As WebSocket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::WebSockets::WebSocket ^ CreateFromStream(System::IO::Stream ^ stream, bool isServer, System::String ^ subProtocol, TimeSpan keepAliveInterval);" />
      <MemberSignature Language="F#" Value="static member CreateFromStream : System.IO.Stream * bool * string * TimeSpan -&gt; System.Net.WebSockets.WebSocket" Usage="System.Net.WebSockets.WebSocketProtocol.CreateFromStream (stream, isServer, subProtocol, keepAliveInterval)" />
      <MemberSignature Language="C#" Value="public static System.Net.WebSockets.WebSocket CreateFromStream (System.IO.Stream stream, bool isServer, string? subProtocol, TimeSpan keepAliveInterval);" FrameworkAlternate="dotnet-plat-ext-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.WebSocketProtocol</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebSockets.WebSocket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="isServer" Type="System.Boolean" />
        <Parameter Name="subProtocol" Type="System.String" />
        <Parameter Name="keepAliveInterval" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="stream">连接的流。</param>
        <param name="isServer">要指示它是连接的服务器端，则为 <see langword="true" />；如果是客户端，则为 <see langword="false" />。</param>
        <param name="subProtocol">创建连接时使用的已约定的子协议。</param>
        <param name="keepAliveInterval">要使用的保持活动状态间隔，或禁用保持活动状态的 <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />。</param>
        <summary>创建在指定流上操作的新 WebSocket 连接。</summary>
        <returns>新的 WebSocket 连接。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
