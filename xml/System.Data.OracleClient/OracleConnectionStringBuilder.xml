<Type Name="OracleConnectionStringBuilder" FullName="System.Data.OracleClient.OracleConnectionStringBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ff708cb51a620eefc40a8d0bd3969435d394f7d9" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89720174" /></Metadata><TypeSignature Language="C#" Value="public sealed class OracleConnectionStringBuilder : System.Data.Common.DbConnectionStringBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed OracleConnectionStringBuilder extends System.Data.Common.DbConnectionStringBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleConnectionStringBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleConnectionStringBuilder&#xA;Inherits DbConnectionStringBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleConnectionStringBuilder sealed : System::Data::Common::DbConnectionStringBuilder" />
  <TypeSignature Language="F#" Value="type OracleConnectionStringBuilder = class&#xA;    inherit DbConnectionStringBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnectionStringBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DefaultProperty("DataSource")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultProperty("DataSource")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Data.OracleClient.OracleConnectionStringBuilder/OracleConnectionStringBuilderConverter))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Data.OracleClient.OracleConnectionStringBuilder/OracleConnectionStringBuilderConverter))&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Obsolete("OracleConnectionStringBuilder has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("OracleConnectionStringBuilder has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>为创建和管理由 <see cref="T:System.Data.OracleClient.OracleConnection" /> 类使用的连接字符串的内容提供了一种简单方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此类型已弃用，并将在 .NET Framework 的未来版本中删除。 有关详细信息，请参阅 [Oracle 和 ADO.NET](/dotnet/framework/data/adonet/oracle-and-adonet)。  
  
 连接字符串生成器允许开发人员以编程方式创建语法正确的连接字符串，并使用类的属性和方法来分析和重新生成现有的连接字符串。 连接字符串生成器提供了与 Oracle 允许的已知键/值对相对应的强类型属性。 <xref:System.Data.OracleClient.OracleConnectionStringBuilder> 类实现 <xref:System.ComponentModel.ICustomTypeDescriptor> 接口。 这意味着该类在设计时适用于 Visual Studio .NET 设计器。 当开发人员使用设计器在 Visual Studio .NET 中生成强类型化 **数据集** 和强类型连接时，强类型连接字符串生成器类将显示与其类型关联的属性，并且还将具有可映射已知密钥的公共值的转换器。  
  
 需要在应用程序中创建连接字符串的开发人员可以使用 <xref:System.Data.OracleClient.OracleConnectionStringBuilder> 类生成和修改连接字符串。 <xref:System.Data.OracleClient.OracleConnectionStringBuilder>类还可以轻松管理存储在应用程序配置文件中的连接字符串。  
  
 <xref:System.Data.OracleClient.OracleConnectionStringBuilder> 对键/值对的有效性进行检查。 因此，此类不能用于创建无效的连接字符串。 尝试添加无效对会引发异常。 <xref:System.Data.OracleClient.OracleConnectionStringBuilder>类维护一个固定的同义词集合，并在需要时执行所需的转换，以将同义词转换为相应的已知键名。 例如，使用 <xref:System.Data.OracleClient.OracleConnectionStringBuilder.Item%2A> 属性检索值时，可以指定一个字符串，该字符串包含所需的键的任何同义词。 有关可接受同义词的完整列表，请参见 <xref:System.Data.OracleClient.OracleConnectionStringBuilder.Item%2A> 属性。  
  
 <xref:System.Data.OracleClient.OracleConnectionStringBuilder>句柄尝试插入恶意条目。 例如，下面的代码使用 <xref:System.Data.OracleClient.OracleConnectionStringBuilder.Item%2A> 索引器 (的默认属性（在 c # 中） ) 正确地转义嵌套的键/值对。  
  
```vb
Dim builder As New System.Data. _  
    OracleClient.OracleConnectionStringBuilder  
builder("Data Source") = "OracleDemo"  
builder("Integrated Security") = True  
builder("User ID") = "Mary;NewValue=Bad"  
System.Diagnostics.Debug.WriteLine(builder.ConnectionString)  
```  
  
```csharp
System.Data.OracleClient.OracleConnectionStringBuilder builder =  
   new System.Data.OracleClient.OracleConnectionStringBuilder();  
builder["Data Source"] = "OracleDemo";  
builder["integrated Security"] = true;  
builder["User ID"] = "Mary;NewValue=Bad";  
System.Diagnostics.Debug.WriteLine(builder.ConnectionString);  
```  
  
 结果是以下连接字符串，通过将用户 ID 值括在引号中，以安全的方式处理无效值：  
  
```  
Data Source=OracleDemo;Integrated Security=True;User ID="Mary;NewValue=Bad"  
```  
  
   
  
## Examples  
 下面的控制台应用程序将生成 Oracle 数据库的连接字符串。 此代码使用 <xref:System.Data.OracleClient.OracleConnectionStringBuilder> 类创建连接字符串，然后将 <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> 该实例的属性传递 <xref:System.Data.OracleClient.OracleConnectionStringBuilder> 给 connection 类的构造函数。 该示例还分析了现有的连接字符串，并演示了操作连接字符串内容的各种方式。  
  
> [!NOTE]
>  该示例包括一个密码以演示 <xref:System.Data.OracleClient.OracleConnectionStringBuilder> 如何使用连接字符串。 在您的应用程序中，建议使用 Windows 身份验证。 如果必须使用密码，请不要在你的应用程序中包括硬编码的密码。  
  
 [!code-csharp[DataWorks OracleConnectionStringBuilder#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OracleConnectionStringBuilder/CS/source.cs#1)]
 [!code-vb[DataWorks OracleConnectionStringBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OracleConnectionStringBuilder/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/framework/data/adonet/connection-string-builders">生成连接字符串</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleConnectionStringBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnectionStringBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleConnectionStringBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-string-builders">生成连接字符串</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleConnectionStringBuilder (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnectionStringBuilder.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleConnectionStringBuilder(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleConnectionStringBuilder : string -&gt; System.Data.OracleClient.OracleConnectionStringBuilder" Usage="new System.Data.OracleClient.OracleConnectionStringBuilder connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">对象内部连接信息的基础。 分析为名称/值对。 无效的键名将引发 <see cref="T:System.Collections.Generic.KeyNotFoundException" />。</param>
        <summary>初始化 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 类的新实例。 所提供的连接字符串为实例的内部连接信息提供数据。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleConnectionStringBuilder> 类提供键/值对的固定内部集合。 即使您只提供构造函数中可能的连接字符串值的一个小子集，该对象也会始终提供每个键/值对的默认值。 <xref:System.Data.Common.DbConnection.ConnectionString%2A>检索对象的属性时，字符串只包含值与项的默认值不同的键/值对。  
  
   
  
## Examples  
 下面的示例在对象的构造函数中提供了一个简单的连接字符串 <xref:System.Data.OracleClient.OracleConnectionStringBuilder> ，然后循环访问该对象中的所有键/值对。 请注意，集合提供每个项的默认值。 另请注意，<xref:System.Data.OracleClient.OracleConnectionStringBuilder> 类会转换已知键的同义词，使其与已知名称一致。  
  
> [!NOTE]
>  该示例包括一个密码以演示 <xref:System.Data.OracleClient.OracleConnectionStringBuilder> 如何使用连接字符串。 在您的应用程序中，建议使用 Windows 身份验证。 如果必须使用密码，请不要在你的应用程序中包括硬编码的密码。  
  
 [!code-csharp[DataWorks OracleConnectionStringBuilder.Ctor#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OracleConnectionStringBuilder.Ctor/CS/source.cs#1)]
 [!code-vb[DataWorks OracleConnectionStringBuilder.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OracleConnectionStringBuilder.Ctor/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException">连接字符串中包含无效的键名。</exception>
        <exception cref="T:System.FormatException">连接字符串中包含无效的值（具体而言，需要使用布尔值或数值，但字符串中并未提供）。</exception>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-string-builders">生成连接字符串</related>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public override void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnectionStringBuilder.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Clear();" />
      <MemberSignature Language="F#" Value="override this.Clear : unit -&gt; unit" Usage="oracleConnectionStringBuilder.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>清除 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 实例的内容。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleConnectionStringBuilder.Clear%2A> 方法移除 <xref:System.Data.OracleClient.OracleConnectionStringBuilder> 中的所有键/值对，并重置所有对应的属性。 这包括将连接字符串重置为空字符串。  
  
   
  
## Examples  
 下面的示例演示调用方法的效果 <xref:System.Data.OracleClient.OracleConnectionStringBuilder.Clear%2A> 。 此示例用一些键/值对填充 <xref:System.Data.OracleClient.OracleConnectionStringBuilder>，然后调用 <xref:System.Data.OracleClient.OracleConnectionStringBuilder.Clear%2A> 方法并显示结果。  
  
 [!code-csharp[DataWorks OracleConnectionStringBuilder.Clear#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OracleConnectionStringBuilder.Clear/CS/source.cs#1)]
 [!code-vb[DataWorks OracleConnectionStringBuilder.Clear#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OracleConnectionStringBuilder.Clear/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-string-builders">生成连接字符串</related>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public override bool ContainsKey (string keyword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ContainsKey(string keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnectionStringBuilder.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ContainsKey (keyword As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ContainsKey(System::String ^ keyword);" />
      <MemberSignature Language="F#" Value="override this.ContainsKey : string -&gt; bool" Usage="oracleConnectionStringBuilder.ContainsKey keyword" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyword">要在 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 中定位的键。</param>
        <summary>确定 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 是否包含特定键。</summary>
        <returns>如果 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 包含具有指定键的元素，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 由于 <xref:System.Data.OracleClient.OracleConnectionStringBuilder> 包含固定大小的键/值对集合，因此 <xref:System.Data.OracleClient.OracleConnectionStringBuilder.ContainsKey%2A> 方法只确定特定键名是否有效。  
  
   
  
## Examples  
 下面的示例创建一个 <xref:System.Data.OracleClient.OracleConnectionStringBuilder> 实例，并设置其一些属性，然后尝试通过调用方法来确定对象中是否存在不同的键 <xref:System.Data.OracleClient.OracleConnectionStringBuilder.ContainsKey%2A> 。  
  
 [!code-csharp[DataWorks OracleConnectionStringBuilder.ContainsKey#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OracleConnectionStringBuilder.ContainsKey/CS/source.cs#1)]
 [!code-vb[DataWorks OracleConnectionStringBuilder.ContainsKey#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OracleConnectionStringBuilder.ContainsKey/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="keyword" /> 为 Null（在 Visual Basic 中为 <see langword="Nothing" />）</exception>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-string-builders">生成连接字符串</related>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public string DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnectionStringBuilder.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataSource { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : string with get, set" Usage="System.Data.OracleClient.OracleConnectionStringBuilder.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DisplayName("Data Source")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DisplayName("Data Source")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要连接到的 Oracle 数据源的名称。</summary>
        <value>为 <see cref="P:System.Data.OracleClient.OracleConnectionStringBuilder.DataSource" /> 属性的值，或者，如果未提供任何值，则为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性对应于连接字符串中的 "数据源" 和 "服务器" 键。 无论在提供的连接字符串中提供了哪些值，由创建的连接字符串 <xref:System.Data.OracleClient.OracleConnectionStringBuilder> 将使用众所周知的 "数据源" 键。 如果在您尝试设置此属性时传入的值为 null，则将重置 <xref:System.Data.OracleClient.OracleConnectionStringBuilder.DataSource%2A> 属性。 如果尚未设置值，而开发人员尝试检索属性，则返回值为 <xref:System.String.Empty> 。  
  
   
  
## Examples  
 下面的示例演示 <xref:System.Data.OracleClient.OracleConnectionStringBuilder> 类将 "数据源" 连接字符串密钥的同义词转换为众所周知的键。  
  
 [!code-csharp[DataWorks OracleConnectionStringBuilder.DataSource#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OracleConnectionStringBuilder.DataSource/CS/source.cs#1)]
 [!code-vb[DataWorks OracleConnectionStringBuilder.DataSource#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OracleConnectionStringBuilder.DataSource/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-string-builders">生成连接字符串</related>
      </Docs>
    </Member>
    <Member MemberName="Enlist">
      <MemberSignature Language="C#" Value="public bool Enlist { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enlist" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnectionStringBuilder.Enlist" />
      <MemberSignature Language="VB.NET" Value="Public Property Enlist As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enlist { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enlist : bool with get, set" Usage="System.Data.OracleClient.OracleConnectionStringBuilder.Enlist" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DisplayName("Enlist")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DisplayName("Enlist")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示池程序是否在创建线程的当前事务上下文中自动登记连接。</summary>
        <value><see cref="P:System.Data.OracleClient.OracleConnectionStringBuilder.Enlist" /> 属性的值；如果以前未设置该属性，则为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性与连接字符串内的“Enlist”键相对应。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-string-builders">生成连接字符串</related>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="protected override void GetProperties (System.Collections.Hashtable propertyDescriptors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetProperties(class System.Collections.Hashtable propertyDescriptors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnectionStringBuilder.GetProperties(System.Collections.Hashtable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetProperties (propertyDescriptors As Hashtable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetProperties(System::Collections::Hashtable ^ propertyDescriptors);" />
      <MemberSignature Language="F#" Value="override this.GetProperties : System.Collections.Hashtable -&gt; unit" Usage="oracleConnectionStringBuilder.GetProperties propertyDescriptors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDescriptors" Type="System.Collections.Hashtable" />
      </Parameters>
      <Docs>
        <param name="propertyDescriptors">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IntegratedSecurity">
      <MemberSignature Language="C#" Value="public bool IntegratedSecurity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IntegratedSecurity" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnectionStringBuilder.IntegratedSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Property IntegratedSecurity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IntegratedSecurity { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IntegratedSecurity : bool with get, set" Usage="System.Data.OracleClient.OracleConnectionStringBuilder.IntegratedSecurity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DisplayName("Integrated Security")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DisplayName("Integrated Security")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示连接中是否指定了“User ID”和“Password”（当为 <see langword="false" /> 时），或者是否使用当前的 Windows 帐户凭据进行身份验证（当为 <see langword="true" /> 时）。</summary>
        <value><see cref="P:System.Data.OracleClient.OracleConnectionStringBuilder.IntegratedSecurity" /> 属性的值；如果未提供任何值，则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性与连接字符串中的 "集成安全性" 键相对应。  
  
   
  
## Examples  
 以下示例将现有连接字符串从使用 Windows 身份验证转换为使用集成安全性。 该示例通过以下方式来完成此工作：从连接字符串中移除用户名和密码，然后设置 <xref:System.Data.OracleClient.OracleConnectionStringBuilder.IntegratedSecurity%2A> 对象的 <xref:System.Data.OracleClient.OracleConnectionStringBuilder> 属性。  
  
> [!NOTE]
>  该示例包括一个密码以演示 <xref:System.Data.OracleClient.OracleConnectionStringBuilder> 如何使用连接字符串。 在您的应用程序中，建议使用 Windows 身份验证。 如果必须使用密码，请不要在你的应用程序中包括硬编码的密码。  
  
 [!code-csharp[DataWorks OracleConnectionStringBuilder.IntegratedSecurity#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OracleConnectionStringBuilder.IntegratedSecurity/CS/source.cs#1)]
 [!code-vb[DataWorks OracleConnectionStringBuilder.IntegratedSecurity#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OracleConnectionStringBuilder.IntegratedSecurity/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-string-builders">生成连接字符串</related>
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public override bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnectionStringBuilder.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedSize : bool" Usage="System.Data.OracleClient.OracleConnectionStringBuilder.IsFixedSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 是否具有固定大小。</summary>
        <value>任何情况下都为 <see langword="true" />，因为 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 提供固定大小的键/值对集合。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string keyword] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnectionStringBuilder.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides Property Item(keyword As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ keyword); void set(System::String ^ keyword, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Data.OracleClient.OracleConnectionStringBuilder.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyword">要获取或设置的项的键。</param>
        <summary>获取或设置与指定的键关联的值。 在 C# 中，此属性为索引器。</summary>
        <value>与指定的键相关联的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 由于 <xref:System.Data.OracleClient.OracleConnectionStringBuilder> 包含固定大小的字典，因此如果尝试添加的键不在字典中，则会引发 <xref:System.Collections.Generic.KeyNotFoundException>。 下表列出了连接字符串中的所有可能的密钥，以及每个密钥的默认值。  
  
|键|properties|默认值|  
|---------|--------------|-------------------|  
|数据源 (或服务器) |<xref:System.Data.OracleClient.OracleConnectionStringBuilder.DataSource%2A>|空字符串|  
|持久性安全信息 (或 persistsecurityinfo) |<xref:System.Data.OracleClient.OracleConnectionStringBuilder.PersistSecurityInfo%2A>|错误|  
|集成安全性|<xref:System.Data.OracleClient.OracleConnectionStringBuilder.IntegratedSecurity%2A>|错误|  
|用户 ID (或用户或 uid) |<xref:System.Data.OracleClient.OracleConnectionStringBuilder.UserID%2A>|空字符串|  
|密码|<xref:System.Data.OracleClient.OracleConnectionStringBuilder.Password%2A>|空字符串|  
|Enlist|<xref:System.Data.OracleClient.OracleConnectionStringBuilder.Enlist%2A>|正确|  
|Pooling|<xref:System.Data.OracleClient.OracleConnectionStringBuilder.Pooling%2A>|正确|  
|Min Pool Size|<xref:System.Data.OracleClient.OracleConnectionStringBuilder.MinPoolSize%2A>|0|  
|Max Pool Size|<xref:System.Data.OracleClient.OracleConnectionStringBuilder.MaxPoolSize%2A>|100|  
|省略 Oracle 连接名称|<xref:System.Data.OracleClient.OracleConnectionStringBuilder.OmitOracleConnectionName%2A>|错误|  
|Unicode|<xref:System.Data.OracleClient.OracleConnectionStringBuilder.Unicode%2A>|错误|  
|负载均衡超时 (或连接生存期) |<xref:System.Data.OracleClient.OracleConnectionStringBuilder.LoadBalanceTimeout%2A>|0|  
  
   
  
## Examples  
 以下代码在控制台应用程序中新建一个 <xref:System.Data.OracleClient.OracleConnectionStringBuilder>，并使用 <xref:System.Data.OracleClient.OracleConnectionStringBuilder.Item%2A> 属性将键/值对添加到其连接字符串中。  
  
 [!code-csharp[DataWorks OracleConnectionStringBuilder.Item#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OracleConnectionStringBuilder.Item/CS/source.cs#1)]
 [!code-vb[DataWorks OracleConnectionStringBuilder.Item#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OracleConnectionStringBuilder.Item/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="keyword" /> 为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException">尝试添加可用键中不存在的键。</exception>
        <exception cref="T:System.FormatException">连接字符串中包含无效的值（具体而言，需要使用布尔值或数值，但字符串中并未提供）。</exception>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-string-builders">生成连接字符串</related>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public override System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnectionStringBuilder.Keys" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.ICollection" Usage="System.Data.OracleClient.OracleConnectionStringBuilder.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取包含 <see cref="T:System.Collections.ICollection" /> 中的键的 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" />。</summary>
        <value>一个 <see cref="T:System.Collections.ICollection" />，它包含 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 中的键。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Collections.ICollection> 中的值的顺序未指定，但与 <xref:System.Collections.ICollection> 属性返回的 <xref:System.Data.OracleClient.OracleConnectionStringBuilder.Values%2A> 中的关联值顺序相同。  
  
   
  
## Examples  
 以下控制台应用程序示例新建一个 <xref:System.Data.OracleClient.OracleConnectionStringBuilder>。 该代码循环访问显示键/值对的 <xref:System.Collections.ICollection> 属性返回的 <xref:System.Data.OracleClient.OracleConnectionStringBuilder.Keys%2A>。  
  
 [!code-csharp[DataWorks OracleConnectionStringBuilder.Keys#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OracleConnectionStringBuilder.Keys/CS/source.cs#1)]
 [!code-vb[DataWorks OracleConnectionStringBuilder.Keys#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OracleConnectionStringBuilder.Keys/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.OracleClient.OracleConnectionStringBuilder.Values" />
        <altmember cref="P:System.Data.OracleClient.OracleConnectionStringBuilder.Item(System.String)" />
        <related type="Article" href="/dotnet/framework/data/adonet/connection-string-builders">生成连接字符串</related>
      </Docs>
    </Member>
    <Member MemberName="LoadBalanceTimeout">
      <MemberSignature Language="C#" Value="public int LoadBalanceTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LoadBalanceTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnectionStringBuilder.LoadBalanceTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property LoadBalanceTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LoadBalanceTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LoadBalanceTimeout : int with get, set" Usage="System.Data.OracleClient.OracleConnectionStringBuilder.LoadBalanceTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DisplayName("Load Balance Timeout")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DisplayName("Load Balance Timeout")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置连接被移除之前在连接池中的最短存活时间（以秒为单位）。</summary>
        <value><see cref="P:System.Data.OracleClient.OracleConnectionStringBuilder.LoadBalanceTimeout" /> 属性的值，如果未提供任何值，则为 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性对应于连接字符串中的 "负载均衡超时" 和 "连接生存期" 密钥。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-string-builders">生成连接字符串</related>
      </Docs>
    </Member>
    <Member MemberName="MaxPoolSize">
      <MemberSignature Language="C#" Value="public int MaxPoolSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxPoolSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnectionStringBuilder.MaxPoolSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxPoolSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxPoolSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxPoolSize : int with get, set" Usage="System.Data.OracleClient.OracleConnectionStringBuilder.MaxPoolSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DisplayName("Max Pool Size")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DisplayName("Max Pool Size")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置针对此特定连接字符串连接池中所允许的最大连接数。</summary>
        <value><see cref="P:System.Data.OracleClient.OracleConnectionStringBuilder.MaxPoolSize" /> 属性的值；如果未提供任何值，则为 100。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性与连接字符串内的“Max Pool Size”键相对应。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-string-builders">生成连接字符串</related>
      </Docs>
    </Member>
    <Member MemberName="MinPoolSize">
      <MemberSignature Language="C#" Value="public int MinPoolSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinPoolSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnectionStringBuilder.MinPoolSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MinPoolSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinPoolSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinPoolSize : int with get, set" Usage="System.Data.OracleClient.OracleConnectionStringBuilder.MinPoolSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DisplayName("Min Pool Size")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DisplayName("Min Pool Size")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置针对此特定连接字符串连接池中所允许的最小连接数。</summary>
        <value><see cref="P:System.Data.OracleClient.OracleConnectionStringBuilder.MinPoolSize" /> 属性的值，如果未提供任何值，则为 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性与连接字符串内的“Min Pool Size”键相对应。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-string-builders">生成连接字符串</related>
      </Docs>
    </Member>
    <Member MemberName="OmitOracleConnectionName">
      <MemberSignature Language="C#" Value="public bool OmitOracleConnectionName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OmitOracleConnectionName" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnectionStringBuilder.OmitOracleConnectionName" />
      <MemberSignature Language="VB.NET" Value="Public Property OmitOracleConnectionName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OmitOracleConnectionName { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OmitOracleConnectionName : bool with get, set" Usage="System.Data.OracleClient.OracleConnectionStringBuilder.OmitOracleConnectionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DisplayName("Omit Oracle Connection Name")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DisplayName("Omit Oracle Connection Name")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置启用 Oracle 早期版本（8.1.7.4.1 以前的版本）中的事务回滚的标志。</summary>
        <value>如果启用了事务回滚，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置为时 `true` ，此属性可防止在 8.1.7.4.1) 之前尝试在早期版本的 Oracle (中回滚事务时出现某些错误。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-string-builders">生成连接字符串</related>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public string Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnectionStringBuilder.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Password { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Password : string with get, set" Usage="System.Data.OracleClient.OracleConnectionStringBuilder.Password" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DisplayName("Password")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DisplayName("Password")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.PasswordPropertyText(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.PasswordPropertyText(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 Oracle 帐户的密码。</summary>
        <value>为 <see cref="P:System.Data.OracleClient.OracleConnectionStringBuilder.Password" /> 属性的值，或者，如果未提供任何值，则为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性与连接字符串内的“Password”和“pwd”键相对应。  
  
   
  
## Examples  
 如果在您尝试设置此属性时传入的值为 null，则将重置 <xref:System.Data.OracleClient.OracleConnectionStringBuilder.Password%2A> 属性。 如果尚未设置值，而开发人员尝试检索属性，则返回值为 <xref:System.String.Empty> 。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-string-builders">生成连接字符串</related>
      </Docs>
    </Member>
    <Member MemberName="PersistSecurityInfo">
      <MemberSignature Language="C#" Value="public bool PersistSecurityInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PersistSecurityInfo" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnectionStringBuilder.PersistSecurityInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property PersistSecurityInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PersistSecurityInfo { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PersistSecurityInfo : bool with get, set" Usage="System.Data.OracleClient.OracleConnectionStringBuilder.PersistSecurityInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DisplayName("Persist Security Info")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DisplayName("Persist Security Info")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个布尔值，该值指示如果连接是打开的或者一直处于打开状态，那么安全敏感信息（如密码）是否将不作为连接的一部分返回。</summary>
        <value>为 <see cref="P:System.Data.OracleClient.OracleConnectionStringBuilder.PersistSecurityInfo" /> 属性的值，或者，如果未提供任何值，则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性与连接字符串内的“Persist Security Info”和“persistsecurityinfo”键相对应。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-string-builders">生成连接字符串</related>
      </Docs>
    </Member>
    <Member MemberName="Pooling">
      <MemberSignature Language="C#" Value="public bool Pooling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Pooling" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnectionStringBuilder.Pooling" />
      <MemberSignature Language="VB.NET" Value="Public Property Pooling As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Pooling { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Pooling : bool with get, set" Usage="System.Data.OracleClient.OracleConnectionStringBuilder.Pooling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DisplayName("Pooling")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DisplayName("Pooling")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个布尔值，该值指示连接是否加入池中，或者在每次请求连接时，每个连接是否被显式打开。</summary>
        <value>为 <see cref="P:System.Data.OracleClient.OracleConnectionStringBuilder.Pooling" /> 属性的值，或者，如果未提供任何值，则为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性与连接字符串内的“Pooling”键相对应。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-string-builders">生成连接字符串</related>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public override bool Remove (string keyword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Remove(string keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnectionStringBuilder.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Remove (keyword As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Remove(System::String ^ keyword);" />
      <MemberSignature Language="F#" Value="override this.Remove : string -&gt; bool" Usage="oracleConnectionStringBuilder.Remove keyword" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyword">要从此 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 中的连接字符串移除的键/值对中的键。</param>
        <summary>从 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 实例中移除具有指定的键的项。</summary>
        <returns>如果该键原本存在于连接字符串中但被移除，则为 <see langword="true" />；如果连接字符串中不存在该键，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 由于 <xref:System.Data.OracleClient.OracleConnectionStringBuilder.Remove%2A> 方法返回一个指示其成功的值，因此在尝试从实例中移除键/值对之前，不需要查找键是否存在 <xref:System.Data.OracleClient.OracleConnectionStringBuilder> 。 由于 <xref:System.Data.OracleClient.OracleConnectionStringBuilder> 维护固定大小的键/值对集合，因此调用 <xref:System.Data.OracleClient.OracleConnectionStringBuilder.Remove%2A> 方法只是将键/值对的值重置回其默认值。  
  
 由于 <xref:System.Data.OracleClient.OracleConnectionStringBuilder> 所支持的键集合是固定的，因此该集合中的每一项都具有已知的默认值。  
  
 下表列出了每个键，以及 <xref:System.Data.OracleClient.OracleConnectionStringBuilder> 首次初始化时或调用方法之后的每个项的值 <xref:System.Data.OracleClient.OracleConnectionStringBuilder.Remove%2A> ：  
  
|键|默认值|  
|---------|-------------------|  
|数据源|空字符串|  
|持久性安全信息|错误|  
|集成安全性|错误|  
|用户 ID|空字符串|  
|密码|空字符串|  
|Enlist|正确|  
|Pooling|正确|  
|Min Pool Size|0|  
|Max Pool Size|100|  
|Unicode|错误|  
|Load Balance Timeout|0|  
|省略 Oracle 连接名称|错误|  
  
   
  
## Examples  
 以下示例将现有连接字符串从使用 Windows 身份验证转换为使用集成安全性。 该示例通过以下方式来完成此工作：从连接字符串中移除用户名和密码，然后设置 <xref:System.Data.OracleClient.OracleConnectionStringBuilder.IntegratedSecurity%2A> 对象的 <xref:System.Data.OracleClient.OracleConnectionStringBuilder> 属性。  
  
> [!NOTE]
>  该示例包括一个密码以演示 <xref:System.Data.OracleClient.OracleConnectionStringBuilder> 如何使用连接字符串。 在您的应用程序中，建议使用 Windows 身份验证。 如果必须使用密码，请不要在你的应用程序中包括硬编码的密码。  
  
 [!code-csharp[DataWorks OracleConnectionStringBuilder.Remove#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OracleConnectionStringBuilder.Remove/CS/source.cs#1)]
 [!code-vb[DataWorks OracleConnectionStringBuilder.Remove#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OracleConnectionStringBuilder.Remove/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="keyword" /> 为 null（在 Visual Basic 中为 <see langword="Nothing" />）。</exception>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-string-builders">生成连接字符串</related>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerialize">
      <MemberSignature Language="C#" Value="public override bool ShouldSerialize (string keyword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ShouldSerialize(string keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnectionStringBuilder.ShouldSerialize(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ShouldSerialize (keyword As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ShouldSerialize(System::String ^ keyword);" />
      <MemberSignature Language="F#" Value="override this.ShouldSerialize : string -&gt; bool" Usage="oracleConnectionStringBuilder.ShouldSerialize keyword" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyword">要在 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 中定位的键。</param>
        <summary>指示此 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 实例中是否存在指定的键。</summary>
        <returns>如果 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 包含具有指定键的项，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法的行为与 <xref:System.Data.OracleClient.OracleConnectionStringBuilder.ContainsKey%2A> 方法完全相同。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-string-builders">生成连接字符串</related>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public override bool TryGetValue (string keyword, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TryGetValue(string keyword, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnectionStringBuilder.TryGetValue(System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TryGetValue (keyword As String, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool TryGetValue(System::String ^ keyword, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="override this.TryGetValue : string * obj -&gt; bool" Usage="oracleConnectionStringBuilder.TryGetValue (keyword, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
        <Parameter Name="value" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyword">要检索的项的键。</param>
        <param name="value">与 <paramref name="keyword" /> 对应的值。</param>
        <summary>从此 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 中检索与提供的键相对应的值。</summary>
        <returns>如果在连接字符串中找到 <paramref name="keyword" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleConnectionStringBuilder.TryGetValue%2A>方法允许开发人员安全地从中检索值， <xref:System.Data.OracleClient.OracleConnectionStringBuilder> 而无需验证提供的键名是否为有效的键名。 由于 <xref:System.Data.OracleClient.OracleConnectionStringBuilder.TryGetValue%2A> 正确地处理了不存在的键的搜索，因此在检索其值之前无需查找密钥的存在。 <xref:System.Data.OracleClient.OracleConnectionStringBuilder.TryGetValue%2A>使用不存在的键调用会将值 null (`Nothing`) 参数的 Visual Basic 中 `value` 。  
  
   
  
## Examples  
 下面的示例演示方法的行为 <xref:System.Data.OracleClient.OracleConnectionStringBuilder.TryGetValue%2A> 。  
  
 [!code-csharp[DataWorks OracleConnectionStringBuilder.TryGetValue#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OracleConnectionStringBuilder.TryGetValue/CS/source.cs#1)]
 [!code-vb[DataWorks OracleConnectionStringBuilder.TryGetValue#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OracleConnectionStringBuilder.TryGetValue/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-string-builders">生成连接字符串</related>
      </Docs>
    </Member>
    <Member MemberName="Unicode">
      <MemberSignature Language="C#" Value="public bool Unicode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Unicode" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnectionStringBuilder.Unicode" />
      <MemberSignature Language="VB.NET" Value="Public Property Unicode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Unicode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Unicode : bool with get, set" Usage="System.Data.OracleClient.OracleConnectionStringBuilder.Unicode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DisplayName("Unicode")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DisplayName("Unicode")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个布尔值，该值指示客户端是否支持较高版本的 Oracle 客户端中可用的 Unicode 功能，或者该客户端是否可以识别非 Unicode。</summary>
        <value>为 <see cref="P:System.Data.OracleClient.OracleConnectionStringBuilder.Unicode" /> 属性的值，或者，如果未提供任何值，则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性与连接字符串中的 "Unicode" 键相对应。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-string-builders">生成连接字符串</related>
      </Docs>
    </Member>
    <Member MemberName="UserID">
      <MemberSignature Language="C#" Value="public string UserID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserID" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnectionStringBuilder.UserID" />
      <MemberSignature Language="VB.NET" Value="Public Property UserID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UserID : string with get, set" Usage="System.Data.OracleClient.OracleConnectionStringBuilder.UserID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DisplayName("User ID")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DisplayName("User ID")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在连接到 Oracle 时要使用的用户 ID。</summary>
        <value>为 <see cref="P:System.Data.OracleClient.OracleConnectionStringBuilder.UserID" /> 属性的值，或者，如果未提供任何值，则为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性与连接字符串内的“User ID”、“user”和“uid”键相对应。  
  
 如果在您尝试设置此属性时传入的值为 null，则将重置 <xref:System.Data.OracleClient.OracleConnectionStringBuilder.UserID%2A> 属性。 如果尚未设置值，而开发人员尝试检索属性，则返回值为 <xref:System.String.Empty> 。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-string-builders">生成连接字符串</related>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public override System.Collections.ICollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Values" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnectionStringBuilder.Values" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Values As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Values { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.ICollection" Usage="System.Data.OracleClient.OracleConnectionStringBuilder.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个包含 <see cref="T:System.Collections.ICollection" /> 中的值的 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" />。</summary>
        <value>一个 <see cref="T:System.Collections.ICollection" />，包含 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 中的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Collections.ICollection> 中的值的顺序未指定，但与 <xref:System.Collections.ICollection> 属性返回的 <xref:System.Data.OracleClient.OracleConnectionStringBuilder.Keys%2A> 中的关联键顺序相同。 因为每个 <xref:System.Data.OracleClient.OracleConnectionStringBuilder> 实例始终包含相同的固定键集合，所以 <xref:System.Data.OracleClient.OracleConnectionStringBuilder.Values%2A> 属性始终返回与固定键集合相对应的值，顺序与键相同。  
  
   
  
## Examples  
 以下示例首先新建一个 <xref:System.Data.OracleClient.OracleConnectionStringBuilder>，然后循环访问该对象内的所有值。  
  
 [!code-csharp[DataWorks OracleConnectionStringBuilder.Values#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OracleConnectionStringBuilder.Values/CS/source.cs#1)]
 [!code-vb[DataWorks OracleConnectionStringBuilder.Values#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OracleConnectionStringBuilder.Values/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-string-builders">生成连接字符串</related>
      </Docs>
    </Member>
  </Members>
</Type>
