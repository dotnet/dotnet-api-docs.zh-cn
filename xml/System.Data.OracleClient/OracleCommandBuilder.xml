<Type Name="OracleCommandBuilder" FullName="System.Data.OracleClient.OracleCommandBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6c93d604b70caf3dd15e21e1137384dbfc760b7c" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86861279" /></Metadata><TypeSignature Language="C#" Value="public sealed class OracleCommandBuilder : System.ComponentModel.Component" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleCommandBuilder extends System.ComponentModel.Component" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleCommandBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleCommandBuilder&#xA;Inherits Component" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleCommandBuilder sealed : System::ComponentModel::Component" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type OracleCommandBuilder = class&#xA;    inherit Component" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C#" Value="public sealed class OracleCommandBuilder : System.Data.Common.DbCommandBuilder" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleCommandBuilder extends System.Data.Common.DbCommandBuilder" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleCommandBuilder&#xA;Inherits DbCommandBuilder" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleCommandBuilder sealed : System::Data::Common::DbCommandBuilder" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type OracleCommandBuilder = class&#xA;    inherit DbCommandBuilder" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">System.Data.Common.DbCommandBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Obsolete("OracleCommandBuilder has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("OracleCommandBuilder has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>自动生成用于协调 <see cref="T:System.Data.DataSet" /> 的更改与关联数据库的单表命令。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此类型已弃用，并将在 .NET Framework 的未来版本中删除。 有关详细信息，请参阅 [Oracle 和 ADO.NET](/dotnet/framework/data/adonet/oracle-and-adonet)。  
  
 不 <xref:System.Data.OracleClient.OracleDataAdapter> 会自动生成对与数据库关联的更改进行协调所需的 SQL 语句 <xref:System.Data.DataSet> 。 但是，您可以通过设置的属性，创建一个 <xref:System.Data.OracleClient.OracleCommandBuilder> 为单表更新生成 SQL 语句的对象 <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> <xref:System.Data.OracleClient.OracleDataAdapter> 。 然后，将 <xref:System.Data.OracleClient.OracleCommandBuilder> 生成未设置的任何其他 SQL 语句。  
  
 与其对应的之间的关系 <xref:System.Data.OracleClient.OracleDataAdapter> <xref:System.Data.OracleClient.OracleCommandBuilder> 始终为一对一关系。 若要创建此函件，请设置 <xref:System.Data.OracleClient.OracleDataAdapter> 对象的属性 <xref:System.Data.OracleClient.OracleCommandBuilder> 。 这会导致将 <xref:System.Data.OracleClient.OracleCommandBuilder> 自身注册为侦听器，这会生成 <xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating> 影响的事件的输出 <xref:System.Data.DataSet> 。  
  
 若要生成 INSERT、UPDATE 或 DELETE 语句，请 <xref:System.Data.OracleClient.OracleCommandBuilder> 使用 <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> 属性来检索所需的一组元数据。  
  
 <xref:System.Data.OracleClient.OracleCommandBuilder>还使用引用的 <xref:System.Data.OracleClient.OracleCommand.Connection%2A> 和 <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> 属性 <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> 。  
  
 如果调用 <xref:System.Data.Common.DbDataAdapter.Dispose%2A> ，将 <xref:System.Data.OracleClient.OracleCommandBuilder> 从解除关联 <xref:System.Data.OracleClient.OracleDataAdapter> ，并且不再使用生成的命令。  
  
   
  
## Examples  
 下面的示例使用 <xref:System.Data.OracleClient.OracleCommand> <xref:System.Data.OracleClient.OracleDataAdapter> 和和 <xref:System.Data.OracleClient.OracleConnection> 从数据库中选择行。 该示例传递了一个初始化的 <xref:System.Data.DataSet> 、一个连接字符串、一个 SQL SELECT 语句的查询字符串和一个作为数据库表名称的字符串。 然后，该示例创建一个 <xref:System.Data.OracleClient.OracleCommandBuilder> 。  
  
```vb  
Private Function SelectOracleRows(connection As String, queryString As String, tableName As String) As DataSet  
  
   Dim connection As New OracleConnection(connection)  
   Dim dataAdapter As New OracleDataAdapter()  
   Dim dataSet As DataSet = New DataSet  
  
   dataAdapter.SelectCommand = New OracleCommand(queryString, connection)  
  
   Dim cmdBuilder As OracleCommandBuilder = New OracleCommandBuilder(dataAdapter)  
  
   connection.Open()  
   dataAdapter.Fill(dataSet, tableName)  
      ' Code to modify data in DataSet here   
      ' Without the OracleCommandBuilder this line would fail.  
   dataAdapter.Update(dataSet, tableName)  
   connection.Close()  
End Function  
```  
  
```csharp  
public static DataSet SelectOracleSrvRows(string myConnection, string mySelectQuery, string myTableName)  
{  
   OracleConnection myConn = new OracleConnection(myConnection);  
   OracleDataAdapter myDataAdapter = new OracleDataAdapter();  
   myDataAdapter.SelectCommand = new OracleCommand(mySelectQuery, myConn);  
   OracleCommandBuilder cb = new OracleCommandBuilder(myDataAdapter);  
  
   myConn.Open();  
   DataSet ds = new DataSet();  
   myDataAdapter.Fill(ds, myTableName);  
  
   //Code to modify data in DataSet goes here...  
  
   //Without the OracleCommandBuilder this line would fail.  
   myDataAdapter.Update(ds, myTableName);  
   myConn.Close();  
   return ds;  
}  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/framework/data/adonet/generating-commands-with-commandbuilders">使用 CommandBuilder 生成命令</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> 的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommandBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommandBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> 的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将 <xref:System.Data.OracleClient.OracleCommandBuilder> 自身注册为 <xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating> <xref:System.Data.OracleClient.OracleDataAdapter> 在此属性中指定的生成的事件侦听器。  
  
 当你创建的新实例时 <xref:System.Data.OracleClient.OracleCommandBuilder> ， <xref:System.Data.OracleClient.OracleCommandBuilder> 将释放与此关联的任何现有 <xref:System.Data.OracleClient.OracleDataAdapter> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommandBuilder (System.Data.OracleClient.OracleDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.OracleClient.OracleDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.#ctor(System.Data.OracleClient.OracleDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (adapter As OracleDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommandBuilder(System::Data::OracleClient::OracleDataAdapter ^ adapter);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleCommandBuilder : System.Data.OracleClient.OracleDataAdapter -&gt; System.Data.OracleClient.OracleCommandBuilder" Usage="new System.Data.OracleClient.OracleCommandBuilder adapter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.OracleClient.OracleDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">与此 <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> 关联的 <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> 对象。</param>
        <summary>使用关联的 <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> 对象初始化 <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将 <xref:System.Data.OracleClient.OracleCommandBuilder> 自身注册为 <xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating> <xref:System.Data.OracleClient.OracleDataAdapter> 在此属性中指定的生成的事件侦听器。  
  
 当你创建的新实例时 <xref:System.Data.OracleClient.OracleCommandBuilder> ， <xref:System.Data.OracleClient.OracleCommandBuilder> 将释放与此关联的任何现有 <xref:System.Data.OracleClient.OracleDataAdapter> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyParameterInfo">
      <MemberSignature Language="C#" Value="protected override void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow datarow, System.Data.StatementType statementType, bool whereClause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ApplyParameterInfo(class System.Data.Common.DbParameter parameter, class System.Data.DataRow datarow, valuetype System.Data.StatementType statementType, bool whereClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ApplyParameterInfo (parameter As DbParameter, datarow As DataRow, statementType As StatementType, whereClause As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ApplyParameterInfo(System::Data::Common::DbParameter ^ parameter, System::Data::DataRow ^ datarow, System::Data::StatementType statementType, bool whereClause);" />
      <MemberSignature Language="F#" Value="override this.ApplyParameterInfo : System.Data.Common.DbParameter * System.Data.DataRow * System.Data.StatementType * bool -&gt; unit" Usage="oracleCommandBuilder.ApplyParameterInfo (parameter, datarow, statementType, whereClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Common.DbParameter" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="datarow" Type="System.Data.DataRow" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="statementType" Type="System.Data.StatementType" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="whereClause" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="parameter">To be added.</param>
        <param name="datarow">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="whereClause">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogLocation">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CatalogLocation CatalogLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Common.CatalogLocation CatalogLocation" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommandBuilder.CatalogLocation" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CatalogLocation As CatalogLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::Common::CatalogLocation CatalogLocation { System::Data::Common::CatalogLocation get(); void set(System::Data::Common::CatalogLocation value); };" />
      <MemberSignature Language="F#" Value="member this.CatalogLocation : System.Data.Common.CatalogLocation with get, set" Usage="System.Data.OracleClient.OracleCommandBuilder.CatalogLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.CatalogLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Data.Common.DbCommandBuilder" /> 类的实例的 <see cref="T:System.Data.Common.CatalogLocation" />。</summary>
        <value><see cref="T:System.Data.Common.CatalogLocation" /> 对象。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogSeparator">
      <MemberSignature Language="C#" Value="public override string CatalogSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CatalogSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommandBuilder.CatalogSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CatalogSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CatalogSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CatalogSeparator : string with get, set" Usage="System.Data.OracleClient.OracleCommandBuilder.CatalogSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个字符串，该字符串用作 <see cref="T:System.Data.Common.DbCommandBuilder" /> 类的实例的目录分隔符。</summary>
        <value>一个字符串，指示用于 <see cref="T:System.Data.Common.DbCommandBuilder" /> 类的实例的目录分隔符。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataAdapter">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleDataAdapter DataAdapter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleDataAdapter DataAdapter" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommandBuilder.DataAdapter" />
      <MemberSignature Language="VB.NET" Value="Public Property DataAdapter As OracleDataAdapter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleDataAdapter ^ DataAdapter { System::Data::OracleClient::OracleDataAdapter ^ get(); void set(System::Data::OracleClient::OracleDataAdapter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataAdapter : System.Data.OracleClient.OracleDataAdapter with get, set" Usage="System.Data.OracleClient.OracleCommandBuilder.DataAdapter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleDataAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置此 <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> 对象将为其生成 SQL 语句的 <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> 对象。</summary>
        <value>与此 <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> 关联的 <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将 <xref:System.Data.OracleClient.OracleCommandBuilder> 自身注册为 <xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating> <xref:System.Data.OracleClient.OracleDataAdapter> 在此属性中指定的生成的事件侦听器。  
  
 当你创建的新实例时 <xref:System.Data.OracleClient.OracleCommandBuilder> ， <xref:System.Data.OracleClient.OracleCommandBuilder> 将释放与此关联的任何现有 <xref:System.Data.OracleClient.OracleDataAdapter> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeriveParameters">
      <MemberSignature Language="C#" Value="public static void DeriveParameters (System.Data.OracleClient.OracleCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeriveParameters(class System.Data.OracleClient.OracleCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters(System.Data.OracleClient.OracleCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeriveParameters (command As OracleCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeriveParameters(System::Data::OracleClient::OracleCommand ^ command);" />
      <MemberSignature Language="F#" Value="static member DeriveParameters : System.Data.OracleClient.OracleCommand -&gt; unit" Usage="System.Data.OracleClient.OracleCommandBuilder.DeriveParameters command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.OracleClient.OracleCommand" />
      </Parameters>
      <Docs>
        <param name="command">引用将从其中导出参数信息的存储过程的 <see cref="T:System.Data.OracleClient.OracleCommand" />。 将派生参数添加到 <see cref="P:System.Data.OracleClient.OracleCommand.Parameters" /> 的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 集合中。</param>
        <summary>从在 <see cref="T:System.Data.OracleClient.OracleCommand" /> 中指定的存储过程中检索参数信息并填充指定的 <see cref="P:System.Data.OracleClient.OracleCommand.Parameters" /> 对象的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 集合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A> 覆盖的任何现有参数信息 <xref:System.Data.OracleClient.OracleCommand> 。  
  
 <xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A> 需要对数据库进行额外的调用以获取信息。 如果事先知道了参数信息，则通过显式设置信息更有效地填充参数集合。  
  
 只能 <xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A> 与存储过程一起使用。 不能使用 <xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A> 来填充 <xref:System.Data.OracleClient.OracleParameterCollection> 任意 transact-sql 语句，如参数化 SELECT 语句。  
  
 有关详细信息，请参阅 [配置参数和参数数据类型](/dotnet/framework/data/adonet/configuring-parameters-and-parameter-data-types)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">命令文本是无效的存储过程名称，或指定的 <see cref="T:System.Data.CommandType" /> 不是 <see cref="F:System.Data.CommandType.StoredProcedure" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="oracleCommandBuilder.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDeleteCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>获取自动生成的、对数据库执行删除操作所需的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用 <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> 方法来进行信息性或故障排除，因为它返回 <xref:System.Data.OracleClient.OracleCommand> 要执行的对象。  
  
 您还可以将 <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> 用作修改后的命令的基础。 例如，你可以调用 <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> 并修改 <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> 值，然后在上显式设置该值 <xref:System.Data.OracleClient.OracleDataAdapter> 。  
  
 当应用程序调用或时，将首先生成 SQL <xref:System.Data.Common.DbDataAdapter.Update%2A> 语句 <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> 。  
  
 有关详细信息，请参阅 [通过 Commandbuilder 生成命令](/dotnet/framework/data/adonet/generating-commands-with-commandbuilders)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetDeleteCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetDeleteCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand () As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetDeleteCommand();" />
      <MemberSignature Language="F#" Value="member this.GetDeleteCommand : unit -&gt; System.Data.OracleClient.OracleCommand" Usage="oracleCommandBuilder.GetDeleteCommand " FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="override this.GetDeleteCommand : unit -&gt; System.Data.OracleClient.OracleCommand" Usage="oracleCommandBuilder.GetDeleteCommand " FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取自动生成的、对数据库执行删除操作所需的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象。</summary>
        <returns>自动生成的、执行删除操作所需的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用 <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> 方法来进行信息性或故障排除，因为它返回 <xref:System.Data.OracleClient.OracleCommand> 要执行的对象。  
  
 您还可以将 <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> 用作修改后的命令的基础。 例如，你可以调用 <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> 并修改 <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> 值，然后在上显式设置该值 <xref:System.Data.OracleClient.OracleDataAdapter> 。  
  
 当应用程序调用或时，将首先生成 SQL <xref:System.Data.Common.DbDataAdapter.Update%2A> 语句 <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> 。  
  
 有关详细信息，请参阅 [通过 Commandbuilder 生成命令](/dotnet/framework/data/adonet/generating-commands-with-commandbuilders)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetDeleteCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetDeleteCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand (useColumnsForParameterNames As Boolean) As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetDeleteCommand(bool useColumnsForParameterNames);" />
      <MemberSignature Language="F#" Value="override this.GetDeleteCommand : bool -&gt; System.Data.OracleClient.OracleCommand" Usage="oracleCommandBuilder.GetDeleteCommand useColumnsForParameterNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">如果为 <see langword="true" />，则生成与列名匹配的参数名（如果可能）。 <see langword="false" /> 生成 <c>@p1</c> 、等 <c>@p2</c> 。</param>
        <summary>获取自动生成的、对数据库执行删除操作所需的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象。</summary>
        <returns>自动生成的、执行删除操作所需的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用 <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> 方法来进行信息性或故障排除，因为它返回 <xref:System.Data.OracleClient.OracleCommand> 要执行的对象。  
  
 您还可以将 <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> 用作修改后的命令的基础。 例如，你可以调用 <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> 并修改 <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> 值，然后在上显式设置该值 <xref:System.Data.OracleClient.OracleDataAdapter> 。  
  
 当应用程序调用或时，将首先生成 SQL <xref:System.Data.Common.DbDataAdapter.Update%2A> 语句 <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> 。  
  
 生成参数名称时，默认行为是对 `@p1` 各种参数使用、 `@p2` 等。 通过 `true` 为参数传递，可以 `useColumnsForParameterNames` 强制根据 <xref:System.Data.OracleClient.OracleCommandBuilder> 列名生成参数。 仅当满足以下条件时，此操作才会成功：  
  
-   <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>已指定，其长度等于或大于生成的参数名称。  
  
-   生成的参数名称满足正则表达式中指定的条件 <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> 。  
  
-   <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>指定了。  
  
 有关详细信息，请参阅 [通过 Commandbuilder 生成命令](/dotnet/framework/data/adonet/generating-commands-with-commandbuilders)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInsertCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>获取自动生成的、对数据库执行插入操作所需的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用 <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> 方法来进行信息性或故障排除，因为它返回 <xref:System.Data.OracleClient.OracleCommand> 要执行的对象。  
  
 您还可以将 <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> 用作修改后的命令的基础。 例如，你可以调用 <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> 并修改 <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> 值，然后在上显式设置该值 <xref:System.Data.OracleClient.OracleDataAdapter> 。  
  
 当应用程序调用或时，将首先生成 SQL <xref:System.Data.Common.DbDataAdapter.Update%2A> 语句 <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> 。  
  
 有关详细信息，请参阅 [通过 Commandbuilder 生成命令](/dotnet/framework/data/adonet/generating-commands-with-commandbuilders)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetInsertCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetInsertCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand () As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetInsertCommand();" />
      <MemberSignature Language="F#" Value="member this.GetInsertCommand : unit -&gt; System.Data.OracleClient.OracleCommand" Usage="oracleCommandBuilder.GetInsertCommand " FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="override this.GetInsertCommand : unit -&gt; System.Data.OracleClient.OracleCommand" Usage="oracleCommandBuilder.GetInsertCommand " FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取自动生成的、对数据库执行插入操作所需的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象。</summary>
        <returns>自动生成的、执行插入操作所需的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用 <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> 方法来进行信息性或故障排除，因为它返回 <xref:System.Data.OracleClient.OracleCommand> 要执行的对象。  
  
 您还可以将 <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> 用作修改后的命令的基础。 例如，你可以调用 <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> 并修改 <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> 值，然后在上显式设置该值 <xref:System.Data.OracleClient.OracleDataAdapter> 。  
  
 当应用程序调用或时，将首先生成 SQL <xref:System.Data.Common.DbDataAdapter.Update%2A> 语句 <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> 。  
  
 有关详细信息，请参阅 [通过 Commandbuilder 生成命令](/dotnet/framework/data/adonet/generating-commands-with-commandbuilders)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetInsertCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetInsertCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand (useColumnsForParameterNames As Boolean) As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetInsertCommand(bool useColumnsForParameterNames);" />
      <MemberSignature Language="F#" Value="override this.GetInsertCommand : bool -&gt; System.Data.OracleClient.OracleCommand" Usage="oracleCommandBuilder.GetInsertCommand useColumnsForParameterNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">如果为 <see langword="true" />，则生成与列名匹配的参数名（如果可能）。 <see langword="false" /> 生成 <c>@p1</c> 、等 <c>@p2</c> 。</param>
        <summary>获取自动生成的、对数据库执行插入操作所需的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象。</summary>
        <returns>自动生成的、执行插入操作所需的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用 <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> 方法来进行信息性或故障排除，因为它返回 <xref:System.Data.OracleClient.OracleCommand> 要执行的对象。  
  
 您还可以将 <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> 用作修改后的命令的基础。 例如，你可以调用 <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> 并修改 <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> 值，然后在上显式设置该值 <xref:System.Data.OracleClient.OracleDataAdapter> 。  
  
 当应用程序调用或时，将首先生成 SQL <xref:System.Data.Common.DbDataAdapter.Update%2A> 语句 <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> 。  
  
 生成参数名称时，默认行为是对 `@p1` 各种参数使用、 `@p2` 等。 通过 `true` 为参数传递，可以 `useColumnsForParameterNames` 强制根据 <xref:System.Data.OracleClient.OracleCommandBuilder> 列名生成参数。 仅当满足以下条件时，此操作才会成功：  
  
-   <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>已指定，其长度等于或大于生成的参数名称。  
  
-   生成的参数名称满足正则表达式中指定的条件 <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> 。  
  
-   <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>指定了。  
  
 有关详细信息，请参阅 [通过 Commandbuilder 生成命令](/dotnet/framework/data/adonet/generating-commands-with-commandbuilders)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected override string GetParameterName (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterName(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetParameterName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterName (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterName(int parameterOrdinal);" />
      <MemberSignature Language="F#" Value="override this.GetParameterName : int -&gt; string" Usage="oracleCommandBuilder.GetParameterName parameterOrdinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected override string GetParameterName (string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterName(string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetParameterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterName (parameterName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterName(System::String ^ parameterName);" />
      <MemberSignature Language="F#" Value="override this.GetParameterName : string -&gt; string" Usage="oracleCommandBuilder.GetParameterName parameterName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="parameterName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterPlaceholder">
      <MemberSignature Language="C#" Value="protected override string GetParameterPlaceholder (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterPlaceholder(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetParameterPlaceholder(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterPlaceholder (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterPlaceholder(int parameterOrdinal);" />
      <MemberSignature Language="F#" Value="override this.GetParameterPlaceholder : int -&gt; string" Usage="oracleCommandBuilder.GetParameterPlaceholder parameterOrdinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUpdateCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>获取自动生成的、对数据库执行更新操作所需的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用 <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> 方法来进行信息性或故障排除，因为它返回 <xref:System.Data.OracleClient.OracleCommand> 要执行的对象。  
  
 您还可以将 <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> 用作修改后的命令的基础。 例如，你可以调用 <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> 并修改 <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> 值，然后在上显式设置该值 <xref:System.Data.OracleClient.OracleDataAdapter> 。  
  
 当应用程序调用或时，将首先生成 SQL <xref:System.Data.Common.DbDataAdapter.Update%2A> 语句 <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> 。  
  
 有关详细信息，请参阅 [通过 Commandbuilder 生成命令](/dotnet/framework/data/adonet/generating-commands-with-commandbuilders)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetUpdateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetUpdateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand () As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetUpdateCommand();" />
      <MemberSignature Language="F#" Value="member this.GetUpdateCommand : unit -&gt; System.Data.OracleClient.OracleCommand" Usage="oracleCommandBuilder.GetUpdateCommand " FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="override this.GetUpdateCommand : unit -&gt; System.Data.OracleClient.OracleCommand" Usage="oracleCommandBuilder.GetUpdateCommand " FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取自动生成的、对数据库执行更新操作所需的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象。</summary>
        <returns>自动生成的、执行更新所需的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用 <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> 方法来进行信息性或故障排除，因为它返回 <xref:System.Data.OracleClient.OracleCommand> 要执行的对象。  
  
 您还可以将 <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> 用作修改后的命令的基础。 例如，你可以调用 <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> 并修改 <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> 值，然后在上显式设置该值 <xref:System.Data.OracleClient.OracleDataAdapter> 。  
  
 当应用程序调用或时，将首先生成 SQL <xref:System.Data.Common.DbDataAdapter.Update%2A> 语句 <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> 。  
  
 有关详细信息，请参阅 [通过 Commandbuilder 生成命令](/dotnet/framework/data/adonet/generating-commands-with-commandbuilders)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetUpdateCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetUpdateCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand (useColumnsForParameterNames As Boolean) As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetUpdateCommand(bool useColumnsForParameterNames);" />
      <MemberSignature Language="F#" Value="override this.GetUpdateCommand : bool -&gt; System.Data.OracleClient.OracleCommand" Usage="oracleCommandBuilder.GetUpdateCommand useColumnsForParameterNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">如果为 <see langword="true" />，则生成与列名匹配的参数名（如果可能）。 <see langword="false" /> 生成 <c>@p1</c> 、等 <c>@p2</c> 。</param>
        <summary>获取自动生成的、对数据库执行更新操作所需的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象。</summary>
        <returns>自动生成的、执行更新所需的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用 <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> 方法来进行信息性或故障排除，因为它返回 <xref:System.Data.OracleClient.OracleCommand> 要执行的对象。  
  
 您还可以将 <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> 用作修改后的命令的基础。 例如，你可以调用 <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> 并修改 <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> 值，然后在上显式设置该值 <xref:System.Data.OracleClient.OracleDataAdapter> 。  
  
 当应用程序调用或时，将首先生成 SQL <xref:System.Data.Common.DbDataAdapter.Update%2A> 语句 <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> 。  
  
 生成参数名称时，默认行为是对 `@p1` 各种参数使用、 `@p2` 等。 通过 `true` 为参数传递，可以 `useColumnsForParameterNames` 强制根据 <xref:System.Data.OracleClient.OracleCommandBuilder> 列名生成参数。 仅当满足以下条件时，此操作才会成功：  
  
-   <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>已指定，其长度等于或大于生成的参数名称。  
  
-   生成的参数名称满足正则表达式中指定的条件 <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> 。  
  
-   <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>指定了。  
  
 有关详细信息，请参阅 [通过 Commandbuilder 生成命令](/dotnet/framework/data/adonet/generating-commands-with-commandbuilders)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteIdentifier">
      <MemberSignature Language="C#" Value="public override string QuoteIdentifier (string unquotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string QuoteIdentifier(string unquotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.QuoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function QuoteIdentifier (unquotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ QuoteIdentifier(System::String ^ unquotedIdentifier);" />
      <MemberSignature Language="F#" Value="override this.QuoteIdentifier : string -&gt; string" Usage="oracleCommandBuilder.QuoteIdentifier unquotedIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unquotedIdentifier" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="unquotedIdentifier">不带引号的原始标识符。</param>
        <summary>以正确的目录大小写给定一个不带引号的标识符，返回该标识符的带引号的正确形式，包括正确转义该标识符中嵌入的任何引号。</summary>
        <returns>带引号的标识符版本。 该标识符中嵌入的引号已正确转义。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuotePrefix">
      <MemberSignature Language="C#" Value="public string QuotePrefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QuotePrefix" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommandBuilder.QuotePrefix" />
      <MemberSignature Language="VB.NET" Value="Public Property QuotePrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ QuotePrefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QuotePrefix : string with get, set" Usage="System.Data.OracleClient.OracleCommandBuilder.QuotePrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置指定其名称包含空格或保留标记等字符的数据库对象（例如，表或列）时使用的开始字符。</summary>
        <value>要使用的一个或多个起始字符。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteSuffix">
      <MemberSignature Language="C#" Value="public string QuoteSuffix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QuoteSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommandBuilder.QuoteSuffix" />
      <MemberSignature Language="VB.NET" Value="Public Property QuoteSuffix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ QuoteSuffix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QuoteSuffix : string with get, set" Usage="System.Data.OracleClient.OracleCommandBuilder.QuoteSuffix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个或多个结束字符，供指定其名称中包含空格或保留标记等字符的数据库对象（例如，表或列）时使用。</summary>
        <value>要使用的结束字符。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshSchema">
      <MemberSignature Language="C#" Value="public void RefreshSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RefreshSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.RefreshSchema" />
      <MemberSignature Language="VB.NET" Value="Public Sub RefreshSchema ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RefreshSchema();" />
      <MemberSignature Language="F#" Value="member this.RefreshSchema : unit -&gt; unit" Usage="oracleCommandBuilder.RefreshSchema " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>清除与此 <see cref="T:System.Data.Common.DbCommandBuilder" /> 关联的命令。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaSeparator">
      <MemberSignature Language="C#" Value="public override string SchemaSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SchemaSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommandBuilder.SchemaSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SchemaSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SchemaSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SchemaSeparator : string with get, set" Usage="System.Data.OracleClient.OracleCommandBuilder.SchemaSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要用作架构标识符和任何其他标识符之间的分隔符的字符。</summary>
        <value>要用作架构分隔符的字符。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常，数据库服务器通过将标识符中的架构名称与一个字符隔开，来指示标识符的架构。 例如，SQL Server 使用冒号创建完整的标识符，如 Person： CustomerName，其中 "Person" 是架构名称，而 "CustomerName" 是标识符。 设置此属性可让开发人员修改此行为。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRowUpdatingHandler">
      <MemberSignature Language="C#" Value="protected override void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetRowUpdatingHandler(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetRowUpdatingHandler (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetRowUpdatingHandler(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberSignature Language="F#" Value="override this.SetRowUpdatingHandler : System.Data.Common.DbDataAdapter -&gt; unit" Usage="oracleCommandBuilder.SetRowUpdatingHandler adapter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="adapter">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnquoteIdentifier">
      <MemberSignature Language="C#" Value="public override string UnquoteIdentifier (string quotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string UnquoteIdentifier(string quotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.UnquoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function UnquoteIdentifier (quotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ UnquoteIdentifier(System::String ^ quotedIdentifier);" />
      <MemberSignature Language="F#" Value="override this.UnquoteIdentifier : string -&gt; string" Usage="oracleCommandBuilder.UnquoteIdentifier quotedIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotedIdentifier" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="quotedIdentifier">其嵌入引号将被移除的标识符。</param>
        <summary>给定一个带引号的标识符，返回该标识符的不带引号的正确形式，包括正确地取消转义该标识符中嵌入的任何引号。</summary>
        <returns>不带引号的标识符，其中嵌入的引号已正确进行取消转义。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
