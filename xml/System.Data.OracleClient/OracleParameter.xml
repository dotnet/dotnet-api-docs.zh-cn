<Type Name="OracleParameter" FullName="System.Data.OracleClient.OracleParameter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="214e45985e7c249bd625f5ea50f7195a6acdc3ac" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83913147" /></Metadata><TypeSignature Language="C#" Value="public sealed class OracleParameter : MarshalByRefObject, ICloneable, System.Data.IDbDataParameter" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleParameter extends System.MarshalByRefObject implements class System.Data.IDataParameter, class System.Data.IDbDataParameter, class System.ICloneable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleParameter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleParameter&#xA;Inherits MarshalByRefObject&#xA;Implements ICloneable, IDbDataParameter" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleParameter sealed : MarshalByRefObject, ICloneable, System::Data::IDbDataParameter" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type OracleParameter = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDbDataParameter&#xA;    interface IDataParameter&#xA;    interface ICloneable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C#" Value="public sealed class OracleParameter : System.Data.Common.DbParameter, ICloneable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleParameter extends System.Data.Common.DbParameter implements class System.Data.IDataParameter, class System.Data.IDbDataParameter, class System.ICloneable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleParameter&#xA;Inherits DbParameter&#xA;Implements ICloneable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleParameter sealed : System::Data::Common::DbParameter, ICloneable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type OracleParameter = class&#xA;    inherit DbParameter&#xA;    interface ICloneable&#xA;    interface IDbDataParameter&#xA;    interface IDataParameter" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">System.Data.Common.DbParameter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataParameter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Data.IDbDataParameter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.OracleClient.OracleParameter/OracleParameterConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示 <see cref="T:System.Data.OracleClient.OracleCommand" /> 的一个参数，还可以是到 <see cref="T:System.Data.DataColumn" /> 的映射。 无法继承此类。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 参数名称不区分大小写。  
  
 使用 Oracle 的 Microsoft OLE DB 提供程序（MSDAORA）和 ODBC.NET Framework 数据提供程序查询 Oracle 数据库时，如果使用 `LIKE` 子句来查询固定长度字段中的值，则可能不会返回所有预期匹配项。 原因在于，当 Oracle 在 `LIKE` 子句中匹配固定长度字段的值时，它将与字符串的整个长度匹配，其中包括任何空白尾随空格。 例如，如果 Oracle 数据库中的某个表包含一个名为 "Field1" 的字段，该字段定义为 `char(3)`，并且您在该表的行中输入值 "a"，则以下代码将不会返回该行。  
  
```vb  
Dim queryString As String = "SELECT * FROM Table1 WHERE Field1 LIKE ?"  
Dim command As OleDbCommand = New OleDbCommand(queryString, connection)  
command.Parameters.Add("@p1", OleDbType.Char, 3).Value = "a"  
Dim reader As OleDbDataReader = command.ExecuteReader()  
```  
  
```csharp  
string queryString = "SELECT * FROM Table1 WHERE Field1 LIKE ?";  
OleDbCommand command = new OleDbCommand(queryString, connection);  
command.Parameters.Add("@p1", OleDbType.Char, 3).Value = "a";  
OleDbDataReader reader = command.ExecuteReader();  
```  
  
 这是因为 Oracle 将列值存储为 "a" （填充 "a"，尾随空格，固定字段长度为3），在 `LIKE` 固定长度字段比较的情况下，Oracle 不会将其视为 "a" 参数值的匹配项。  
  
 若要解决此问题，请向参数值（`"a%"`）追加一个百分比（%）通配符，或者改为使用 SQL `=` 比较。  
  
   
  
## Examples  
 下面的示例通过 <xref:System.Data.OracleClient.OracleDataAdapter>中的 <xref:System.Data.OracleClient.OracleParameterCollection> 创建多个 <xref:System.Data.OracleClient.OracleParameter> 实例。 这些参数用于从数据库中选择数据，并将数据放入 <xref:System.Data.DataSet>中。 此示例假设已使用适当的架构、命令和连接创建了 <xref:System.Data.DataSet> 和 <xref:System.Data.OracleClient.OracleDataAdapter>。  
  
 [!code-csharp[Classic WebData OracleParameter#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleParameter/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleParameter#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleParameter/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Data.OracleClient.OracleParameter" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Data.OracleClient.OracleParameter" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleParameter (string name, System.Data.OracleClient.OracleType oracleType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.OracleClient.OracleType oracleType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Data.OracleClient.OracleType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, oracleType As OracleType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleParameter(System::String ^ name, System::Data::OracleClient::OracleType oracleType);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleParameter : string * System.Data.OracleClient.OracleType -&gt; System.Data.OracleClient.OracleParameter" Usage="new System.Data.OracleClient.OracleParameter (name, oracleType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="oracleType" Type="System.Data.OracleClient.OracleType" />
      </Parameters>
      <Docs>
        <param name="name">参数的名称。</param>
        <param name="oracleType"><see cref="T:System.Data.OracleClient.OracleType" /> 值之一。</param>
        <summary>初始化使用参数名称和数据类型的 <see cref="T:System.Data.OracleClient.OracleParameter" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例创建一个 <xref:System.Data.OracleClient.OracleParameter> 并设置其一些属性。  
  
 [!code-csharp[Classic WebData OracleParameter.OracleParameter1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleParameter.OracleParameter1/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleParameter.OracleParameter1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleParameter.OracleParameter1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">参数 <paramref name="oracleType" /> 中提供的值不是有效的后端数据类型。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleParameter (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleParameter(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleParameter : string * obj -&gt; System.Data.OracleClient.OracleParameter" Usage="new System.Data.OracleClient.OracleParameter (name, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">参数的名称。</param>
        <param name="value">一个 <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象。</param>
        <summary>初始化使用参数名称和 <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象的 <see cref="T:System.Data.OracleClient.OracleParameter" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当你在 `value` 参数中指定 <xref:System.Object> 时，<xref:System.Data.DbType> 将从 <xref:System.Object>的 Microsoft .NET 框架类型推断而来。  
  
 使用 <xref:System.Data.OracleClient.OracleParameter> 构造函数的此重载时要格外小心。 由于此重载采用 <xref:System.Object>类型的 `value`，因此当值为零时，必须将整数值转换为 <xref:System.Object> 类型，如下面的 Microsoft Visual 示例所 C# 示。  
  
```  
Parameter = new OracleParameter("pname", Convert.ToInt32(0));  
```  
  
 如果不执行此转换，编译器将假定您尝试调用 `OracleParameter`（`string`，`OracleType`）构造函数重载。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleParameter (string name, System.Data.OracleClient.OracleType oracleType, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.OracleClient.OracleType oracleType, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Data.OracleClient.OracleType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, oracleType As OracleType, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleParameter(System::String ^ name, System::Data::OracleClient::OracleType oracleType, int size);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleParameter : string * System.Data.OracleClient.OracleType * int -&gt; System.Data.OracleClient.OracleParameter" Usage="new System.Data.OracleClient.OracleParameter (name, oracleType, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="oracleType" Type="System.Data.OracleClient.OracleType" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">参数的名称。</param>
        <param name="oracleType"><see cref="T:System.Data.OracleClient.OracleType" /> 值之一。</param>
        <param name="size">参数的长度。</param>
        <summary>初始化使用参数名称、数据类型和长度的 <see cref="T:System.Data.OracleClient.OracleParameter" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例创建一个 <xref:System.Data.OracleClient.OracleParameter> 并设置其一些属性。  
  
 [!code-csharp[Classic WebData OracleParameter.OracleParameter2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleParameter.OracleParameter2/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleParameter.OracleParameter2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleParameter.OracleParameter2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">参数 <paramref name="oracleType" /> 中提供的值不是有效的后端数据类型。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleParameter (string name, System.Data.OracleClient.OracleType oracleType, int size, string srcColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.OracleClient.OracleType oracleType, int32 size, string srcColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Data.OracleClient.OracleType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, oracleType As OracleType, size As Integer, srcColumn As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleParameter(System::String ^ name, System::Data::OracleClient::OracleType oracleType, int size, System::String ^ srcColumn);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleParameter : string * System.Data.OracleClient.OracleType * int * string -&gt; System.Data.OracleClient.OracleParameter" Usage="new System.Data.OracleClient.OracleParameter (name, oracleType, size, srcColumn)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="oracleType" Type="System.Data.OracleClient.OracleType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="srcColumn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">参数的名称。</param>
        <param name="oracleType"><see cref="T:System.Data.OracleClient.OracleType" /> 值之一。</param>
        <param name="size">参数的长度。</param>
        <param name="srcColumn">源列的名称。</param>
        <summary>初始化使用参数名称、数据类型、长度和源列名称的 <see cref="T:System.Data.OracleClient.OracleParameter" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例创建一个 <xref:System.Data.OracleClient.OracleParameter> 并设置其一些属性。  
  
 [!code-csharp[Classic WebData OracleParameter.OracleParameter3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleParameter.OracleParameter3/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleParameter.OracleParameter3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleParameter.OracleParameter3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">参数 <paramref name="oracleType" /> 中提供的值不是有效的后端数据类型。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleParameter (string name, System.Data.OracleClient.OracleType oracleType, int size, System.Data.ParameterDirection direction, string sourceColumn, System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.OracleClient.OracleType oracleType, int32 size, valuetype System.Data.ParameterDirection direction, string sourceColumn, valuetype System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Data.OracleClient.OracleType,System.Int32,System.Data.ParameterDirection,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, oracleType As OracleType, size As Integer, direction As ParameterDirection, sourceColumn As String, sourceVersion As DataRowVersion, sourceColumnNullMapping As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleParameter(System::String ^ name, System::Data::OracleClient::OracleType oracleType, int size, System::Data::ParameterDirection direction, System::String ^ sourceColumn, System::Data::DataRowVersion sourceVersion, bool sourceColumnNullMapping, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleParameter : string * System.Data.OracleClient.OracleType * int * System.Data.ParameterDirection * string * System.Data.DataRowVersion * bool * obj -&gt; System.Data.OracleClient.OracleParameter" Usage="new System.Data.OracleClient.OracleParameter (name, oracleType, size, direction, sourceColumn, sourceVersion, sourceColumnNullMapping, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="oracleType" Type="System.Data.OracleClient.OracleType" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="size" Type="System.Int32" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="direction" Type="System.Data.ParameterDirection" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="sourceColumn" Type="System.String" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="sourceVersion" Type="System.Data.DataRowVersion" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="sourceColumnNullMapping" Type="System.Boolean" Index="6" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="value" Type="System.Object" Index="7" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="name">要映射的参数的名称。</param>
        <param name="oracleType"><see cref="T:System.Data.OracleClient.OracleType" /> 值之一。</param>
        <param name="size">参数的长度。</param>
        <param name="direction"><see cref="T:System.Data.ParameterDirection" /> 值之一。</param>
        <param name="sourceColumn">源列的名称。</param>
        <param name="sourceVersion"><see cref="T:System.Data.DataRowVersion" /> 值之一。</param>
        <param name="sourceColumnNullMapping">如果源列可为 null，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="value">作为 <see cref="T:System.Object" /> 的值的 <see cref="T:System.Data.OracleClient.OracleParameter" />。</param>
        <summary>初始化使用参数名称、数据类型、大小、方向、源列、源版本和其他属性的 <see cref="T:System.Data.OracleClient.OracleParameter" /> 类的一个新实例。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">参数 <paramref name="oracleType" /> 中提供的值不是有效的后端数据类型。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleParameter (string name, System.Data.OracleClient.OracleType oracleType, int size, System.Data.ParameterDirection direction, bool isNullable, byte precision, byte scale, string srcColumn, System.Data.DataRowVersion srcVersion, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.OracleClient.OracleType oracleType, int32 size, valuetype System.Data.ParameterDirection direction, bool isNullable, unsigned int8 precision, unsigned int8 scale, string srcColumn, valuetype System.Data.DataRowVersion srcVersion, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Data.OracleClient.OracleType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, oracleType As OracleType, size As Integer, direction As ParameterDirection, isNullable As Boolean, precision As Byte, scale As Byte, srcColumn As String, srcVersion As DataRowVersion, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleParameter(System::String ^ name, System::Data::OracleClient::OracleType oracleType, int size, System::Data::ParameterDirection direction, bool isNullable, System::Byte precision, System::Byte scale, System::String ^ srcColumn, System::Data::DataRowVersion srcVersion, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleParameter : string * System.Data.OracleClient.OracleType * int * System.Data.ParameterDirection * bool * byte * byte * string * System.Data.DataRowVersion * obj -&gt; System.Data.OracleClient.OracleParameter" Usage="new System.Data.OracleClient.OracleParameter (name, oracleType, size, direction, isNullable, precision, scale, srcColumn, srcVersion, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="oracleType" Type="System.Data.OracleClient.OracleType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Data.ParameterDirection" />
        <Parameter Name="isNullable" Type="System.Boolean" />
        <Parameter Name="precision" Type="System.Byte" />
        <Parameter Name="scale" Type="System.Byte" />
        <Parameter Name="srcColumn" Type="System.String" />
        <Parameter Name="srcVersion" Type="System.Data.DataRowVersion" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">参数的名称。</param>
        <param name="oracleType"><see cref="T:System.Data.OracleClient.OracleType" /> 值之一。</param>
        <param name="size">参数的长度。</param>
        <param name="direction"><see cref="T:System.Data.ParameterDirection" /> 值之一。</param>
        <param name="isNullable">如果该字段的值可为 null，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="precision">所解析的 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 的小数点左右两侧的总位数。</param>
        <param name="scale">所解析的 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 的总小数位数。</param>
        <param name="srcColumn">源列的名称。</param>
        <param name="srcVersion"><see cref="T:System.Data.DataRowVersion" /> 值之一。</param>
        <param name="value">作为 <see cref="T:System.Object" /> 的值的 <see cref="T:System.Data.OracleClient.OracleParameter" />。</param>
        <summary>初始化 <see cref="T:System.Data.OracleClient.OracleParameter" /> 类的新实例，该类使用参数名称、数据类型、长度、源列名、参数方向、数值精度和其他属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例创建一个 <xref:System.Data.OracleClient.OracleParameter> 并显示 <xref:System.Data.OracleClient.OracleParameter.ParameterName%2A>。  
  
 [!code-csharp[Classic WebData OracleParameter.OracleParameter4#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleParameter.OracleParameter4/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleParameter.OracleParameter4#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleParameter.OracleParameter4/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">参数 <paramref name="oracleType" /> 中提供的值不是有效的后端数据类型。</exception>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public System.Data.DbType DbType { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DbType DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.DbType" />
      <MemberSignature Language="VB.NET" Value="Public Property DbType As DbType" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DbType DbType { System::Data::DbType get(); void set(System::Data::DbType value); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.DbType : System.Data.DbType with get, set" Usage="System.Data.OracleClient.OracleParameter.DbType" />
      <MemberSignature Language="C#" Value="public override System.Data.DbType DbType { get; set; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DbType As DbType" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::DbType DbType { System::Data::DbType get(); void set(System::Data::DbType value); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.DbType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置参数的 <see cref="T:System.Data.DbType" />。</summary>
        <value><see cref="T:System.Data.DbType" /> 值之一。 默认为 <see cref="F:System.Data.DbType.AnsiString" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleParameter.OracleType%2A> 和 <xref:System.Data.OracleClient.OracleParameter.DbType%2A> 已链接。 因此，设置 <xref:System.Data.OracleClient.OracleParameter.DbType%2A> 会将 <xref:System.Data.OracleClient.OracleParameter.OracleType%2A> 更改为支持的 <xref:System.Data.OracleClient.OracleParameter.OracleType%2A>。  
  
 可以通过设置 <xref:System.Data.OracleClient.OracleParameter.Value%2A>来推断参数的 <xref:System.Data.OracleClient.OracleParameter.DbType%2A>、<xref:System.Data.OracleClient.OracleParameter.OracleType%2A>和 <xref:System.Data.OracleClient.OracleParameter.Size%2A> 属性。 因此，您不需要指定它们。 但是，它们不 <xref:System.Data.OracleClient.OracleParameter> 属性设置公开。 例如，如果已推断出参数的大小，则在语句执行后 <xref:System.Data.OracleClient.OracleParameter.Size%2A> 不包含推断值。 对于 `String` 数据类型，默认值为 <xref:System.Data.DbType.AnsiString>。  
  
 有关支持的数据类型的列表，请参阅相应的 <xref:System.Data.OracleClient.OracleParameter.OracleType%2A> 成员。 有关详细信息，请参阅[DataAdapter 参数](/dotnet/framework/data/adonet/dataadapter-parameters)。  
  
   
  
## Examples  
 下面的示例创建一个 <xref:System.Data.OracleClient.OracleParameter> 并设置其一些属性。  
  
 [!code-csharp[Classic WebData OracleParameter.DbType#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleParameter.DbType/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleParameter.DbType#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleParameter.DbType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">该属性未设置为有效的 <see cref="T:System.Data.DbType" />。</exception>
        <altmember cref="T:System.Data.OracleClient.OracleType" />
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public System.Data.ParameterDirection Direction { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ParameterDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As ParameterDirection" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::ParameterDirection Direction { System::Data::ParameterDirection get(); void set(System::Data::ParameterDirection value); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Data.ParameterDirection with get, set" Usage="System.Data.OracleClient.OracleParameter.Direction" />
      <MemberSignature Language="C#" Value="public override System.Data.ParameterDirection Direction { get; set; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Direction As ParameterDirection" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ParameterDirection Direction { System::Data::ParameterDirection get(); void set(System::Data::ParameterDirection value); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.Direction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ParameterDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示参数是仅限输入、仅限输出、双向还是存储过程返回值参数。</summary>
        <value><see cref="T:System.Data.ParameterDirection" /> 值之一。 默认为 <see langword="Input" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 <xref:System.Data.ParameterDirection> 输出，并且关联 <xref:System.Data.OracleClient.OracleCommand> 的执行不返回值，则 <xref:System.Data.OracleClient.OracleParameter> 包含 null 值。  
  
 在 <xref:System.Data.OracleClient.OracleDataReader.Close%2A> 上调用 <xref:System.Data.OracleClient.OracleDataReader>之前，无法访问通过调用 <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> 返回的 `Output`、`InputOut`和 `ReturnValue` 参数。  
  
   
  
## Examples  
 下面的示例创建一个 <xref:System.Data.OracleClient.OracleParameter> 并设置其一些属性。  
  
```vb  
Public Sub CreateOracleDbParameter()  
   Dim parameter As New OracleParameter()  
   parameter.ParameterName = "pDName"  
   parameter.DbType = DbType.String  
   parameter.Value = "ENGINEERING"  
   parameter.SourceColumn = "DName"  
End Sub  
```  
  
```csharp  
public void CreateOracleDbParameter()   
{  
   OracleParameter parameter = new OracleParameter();  
   parameter.ParameterName = "pDName";  
   parameter.DbType = DbType.String;  
   parameter.Value = "ENGINEERING";  
   parameter.SourceColumn = "DName";  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">属性未设置为有效的 <see cref="T:System.Data.ParameterDirection" /> 值之一。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNullable As Boolean" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); void set(bool value); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool with get, set" Usage="System.Data.OracleClient.OracleParameter.IsNullable" />
      <MemberSignature Language="C#" Value="public override bool IsNullable { get; set; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property IsNullable As Boolean" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsNullable { bool get(); void set(bool value); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DesignOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示参数是否接受 null 值。</summary>
        <value>如果接受 null 值，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.DBNull> 类处理 Null 值。  
  
   
  
## Examples  
 下面的示例创建一个 <xref:System.Data.OracleClient.OracleParameter> 并设置其一些属性。  
  
```vb  
Public Sub CreateOracleParameter()  
   Dim parameter As New OracleParameter("DName", OracleType.VarChar, 14)  
   parameter.IsNullable = True  
   parameter.Direction = ParameterDirection.Output  
End Sub  
```  
  
```csharp  
public void CreateOracleParameter()   
{  
   OracleParameter parameter = new OracleParameter("DName", OracleType.VarChar, 14);  
   parameter.IsNullable = true;  
   parameter.Direction = ParameterDirection.Output;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public int Offset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Offset" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.Offset" />
      <MemberSignature Language="VB.NET" Value="Public Property Offset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Offset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Offset : int with get, set" Usage="System.Data.OracleClient.OracleParameter.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 属性的偏移量。</summary>
        <value><see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 的偏移量。 默认值为 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Offset` 属性用于二进制和字符串数据的客户端分块。 例如，若要在服务器上的列中插入10MB 的文本，用户可能会执行10个1MB 块的参数化插入，将每个迭代上的 `Offset` 的值切换为1MB。  
  
 `Offset` 指定二进制类型的字节数，以及字符串的字符数。 字符串的计数不包括终止字符。  
  
   
  
## Examples  
 下面的示例创建一个 <xref:System.Data.OracleClient.OracleParameter> 并设置其一些属性。  
  
```vb  
Public Sub CreateOracleParameter()  
   Dim parameter As New OracleParameter("pDName", OracleType.VarChar)  
   parameter.IsNullable = True  
   parameter.Offset = 3  
End Sub  
```  
  
```csharp  
public void CreateOracleParameter()   
{  
   OracleParameter parameter = new OracleParameter("pDName", OracleType.VarChar);  
   parameter.IsNullable = true;  
   parameter.Offset = 3;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OracleType">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleType OracleType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.OracleClient.OracleType OracleType" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.OracleType" />
      <MemberSignature Language="VB.NET" Value="Public Property OracleType As OracleType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleType OracleType { System::Data::OracleClient::OracleType get(); void set(System::Data::OracleClient::OracleType value); };" />
      <MemberSignature Language="F#" Value="member this.OracleType : System.Data.OracleClient.OracleType with get, set" Usage="System.Data.OracleClient.OracleParameter.OracleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Data.Common.DbProviderSpecificTypeProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置参数的 <see cref="T:System.Data.OracleClient.OracleType" />。</summary>
        <value><see cref="T:System.Data.OracleClient.OracleType" /> 值，它是该参数的 <see cref="T:System.Data.OracleClient.OracleType" />。 默认为 <see cref="F:System.Data.OracleClient.OracleType.VarChar" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleParameter.OracleType%2A> 和 <xref:System.Data.OracleClient.OracleParameter.DbType%2A> 已链接。 因此，设置 <xref:System.Data.OracleClient.OracleParameter.DbType%2A> 会将 <xref:System.Data.OracleClient.OracleParameter.OracleType%2A> 更改为支持的 <xref:System.Data.OracleClient.OracleType>。  
  
 可以通过设置 <xref:System.Data.OracleClient.OracleParameter.Value%2A>来推断参数的 <xref:System.Data.OracleClient.OracleParameter.DbType%2A>、<xref:System.Data.OracleClient.OracleParameter.OracleType%2A>和 <xref:System.Data.OracleClient.OracleParameter.Size%2A> 属性。 因此，您不需要指定它们。 但是，它们不 <xref:System.Data.OracleClient.OracleParameter> 属性设置公开。 例如，如果已推断出参数的大小，则在语句执行后 <xref:System.Data.OracleClient.OracleParameter.Size%2A> 不包含推断值。 对于 `String` 数据类型，默认值为 <xref:System.Data.OracleClient.OracleType.VarChar>。  
  
 有关支持的数据类型的列表，请参阅相应的 <xref:System.Data.OracleClient.OracleType> 成员。 有关详细信息，请参阅[DataAdapter 参数](/dotnet/framework/data/adonet/dataadapter-parameters)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterName">
      <MemberSignature Language="C#" Value="public string ParameterName { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.ParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property ParameterName As String" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ParameterName { System::String ^ get(); void set(System::String ^ value); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.ParameterName : string with get, set" Usage="System.Data.OracleClient.OracleParameter.ParameterName" />
      <MemberSignature Language="C#" Value="public override string ParameterName { get; set; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ParameterName As String" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ParameterName { System::String ^ get(); void set(System::String ^ value); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.ParameterName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Data.OracleClient.OracleParameter" /> 的名称。</summary>
        <value><see cref="T:System.Data.OracleClient.OracleParameter" /> 的名称。 默认值为空字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 用于 Oracle 的 .NET Framework 数据提供程序不支持使用问号（？）标记的位置参数。  
  
   
  
## Examples  
 下面的示例创建一个 <xref:System.Data.OracleClient.OracleParameter> 并设置其一些属性。  
  
```vb  
Public Sub CreateOracleDbParameter()  
   Dim parameter As New OracleParameter()  
   parameter.ParameterName = "pDName"  
   parameter.DbType = DbType.String  
   parameter.Value = "ENGINEERING"  
   parameter.SourceColumn = "DName"  
End Sub  
```  
  
```csharp  
public void CreateOracleDbParameter()   
{  
   OracleParameter parameter = new OracleParameter();  
   parameter.ParameterName = "pDName";  
   parameter.DbType = DbType.String;  
   parameter.Value = "ENGINEERING";  
   parameter.SourceColumn = "DName";  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Precision">
      <MemberSignature Language="C#" Value="public byte Precision { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Precision" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.Precision" />
      <MemberSignature Language="VB.NET" Value="Public Property Precision As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Precision { System::Byte get(); void set(System::Byte value); };" />
      <MemberSignature Language="F#" Value="member this.Precision : byte with get, set" Usage="System.Data.OracleClient.OracleParameter.Precision" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Precision</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Precision has been deprecated.  Use the Math classes to explicitly set the precision of a decimal.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于表示 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 属性的最大位数。</summary>
        <value>用于表示 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 属性的最大位数。 默认值为 0，它表示数据提供程序设置 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 的精度。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置 <xref:System.Data.OracleClient.OracleParameter.Precision%2A> 或 <xref:System.Data.OracleClient.OracleParameter.Scale%2A> 属性不起作用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetDbType">
      <MemberSignature Language="C#" Value="public override void ResetDbType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetDbType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.ResetDbType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetDbType ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetDbType();" />
      <MemberSignature Language="F#" Value="override this.ResetDbType : unit -&gt; unit" Usage="oracleParameter.ResetDbType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>重置与此 <see cref="T:System.Data.OracleClient.OracleParameter" /> 关联的类型。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当执行包含参数值的命令时，代码可以显式设置参数的类型，或者该参数可以从其值推断其类型。 调用此方法将重置参数，使其可以再次从参数中传递的值推断其类型。 调用此方法会影响 <xref:System.Data.OracleClient.OracleParameter>的 <xref:System.Data.Odbc.OdbcParameter.DbType%2A> 和 <xref:System.Data.OracleClient.OracleParameter.OracleType%2A> 属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.OracleClient.OracleParameter.ResetOracleType" />
        <altmember cref="P:System.Data.Odbc.OdbcParameter.DbType" />
        <altmember cref="P:System.Data.OracleClient.OracleParameter.OracleType" />
      </Docs>
    </Member>
    <Member MemberName="ResetOracleType">
      <MemberSignature Language="C#" Value="public void ResetOracleType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetOracleType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.ResetOracleType" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetOracleType ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetOracleType();" />
      <MemberSignature Language="F#" Value="member this.ResetOracleType : unit -&gt; unit" Usage="oracleParameter.ResetOracleType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>重置与此 <see cref="T:System.Data.OracleClient.OracleParameter" /> 关联的类型。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当执行包含参数值的命令时，代码可以显式设置参数的类型，或者该参数可以从其值推断其类型。 调用此方法将重置参数，使其可以再次从参数中传递的值推断其类型。 调用此方法会影响 <xref:System.Data.OracleClient.OracleParameter>的 <xref:System.Data.Odbc.OdbcParameter.DbType%2A> 和 <xref:System.Data.OracleClient.OracleParameter.OracleType%2A> 属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.Odbc.OdbcParameter.ResetDbType" />
        <altmember cref="P:System.Data.Odbc.OdbcParameter.DbType" />
        <altmember cref="P:System.Data.OracleClient.OracleParameter.OracleType" />
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public byte Scale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Scale" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.Scale" />
      <MemberSignature Language="VB.NET" Value="Public Property Scale As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Scale { System::Byte get(); void set(System::Byte value); };" />
      <MemberSignature Language="F#" Value="member this.Scale : byte with get, set" Usage="System.Data.OracleClient.OracleParameter.Scale" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Scale</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Scale has been deprecated.  Use the Math classes to explicitly set the scale of a decimal.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置所解析的 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 的小数位数。</summary>
        <value>对 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 进行解析的小数位数。 默认值为 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置 <xref:System.Data.OracleClient.OracleParameter.Precision%2A> 或 <xref:System.Data.OracleClient.OracleParameter.Scale%2A> 属性不起作用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public int Size { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Integer" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Size { int get(); void set(int value); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.Size : int with get, set" Usage="System.Data.OracleClient.OracleParameter.Size" />
      <MemberSignature Language="C#" Value="public override int Size { get; set; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Size As Integer" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Size { int get(); void set(int value); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Size</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置列中数据的最大大小（字节）。</summary>
        <value>列中数据的最大大小（字节）。 默认值为 0（在不想指定最大值时使用）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置 <xref:System.Data.OracleClient.OracleParameter.Size%2A> 仅影响参数的输入值。 此属性不影响返回值和输出参数。  
  
 <xref:System.Data.OracleClient.OracleParameter.Size%2A> 属性用于二进制和字符串类型。  
  
 对于非字符串数据类型和 ANSI 字符串数据，<xref:System.Data.OracleClient.OracleParameter.Size%2A> 属性是指字节数。 对于 Unicode 字符串数据，<xref:System.Data.OracleClient.OracleParameter.Size%2A> 是指字符数。 字符串的计数不包括终止字符。  
  
 对于可变长度数据类型，<xref:System.Data.OracleClient.OracleParameter.Size%2A> 描述要传输到服务器的最大数据量。 例如，对于 Unicode 字符串值，可以使用 <xref:System.Data.OracleClient.OracleParameter.Size%2A> 将发送到服务器的数据量限制为前100个字符。  
  
 对于双向参数、输出参数和返回值，必须设置大小的值。 这不是输入参数所必需的，如果未显式设置，则执行参数化语句时，的值将从指定参数的实际大小推断。  
  
 可以通过设置 <xref:System.Data.OracleClient.OracleParameter.Value%2A>来推断参数的 <xref:System.Data.OracleClient.OracleParameter.DbType%2A>、<xref:System.Data.OracleClient.OracleParameter.OracleType%2A>和 <xref:System.Data.OracleClient.OracleParameter.Size%2A> 属性。 因此，您不需要指定它们。 但是，它们不 <xref:System.Data.OracleClient.OracleParameter> 属性设置公开。 例如，如果已推断出参数的大小，则在语句执行后 <xref:System.Data.OracleClient.OracleParameter.Size%2A> 不包含推断值。  
  
 对于固定长度数据类型，将忽略 <xref:System.Data.OracleClient.OracleParameter.Size%2A> 的值。 可以检索它以提供信息，并返回将参数值传输到服务器时提供程序使用的最大字节数。  
  
   
  
## Examples  
 下面的示例创建一个 <xref:System.Data.OracleClient.OracleParameter> 并设置其一些属性。  
  
```vb  
Public Sub CreateOracleParameter()  
   Dim parameter As New OracleParameter("pDescription", OracleType.VarChar)  
   parameter.IsNullable = True  
   parameter.Direction = ParameterDirection.Output  
   parameter.Size = 88  
End Sub  
```  
  
```csharp  
public void CreateOracleParameter()   
{  
   OracleParameter parameter = new OracleParameter("pDescription", OracleType.VarChar);  
   parameter.IsNullable = true;  
   parameter.Direction = ParameterDirection.Output;  
   parameter.Size = 88;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumn">
      <MemberSignature Language="C#" Value="public string SourceColumn { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceColumn" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.SourceColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceColumn As String" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceColumn { System::String ^ get(); void set(System::String ^ value); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.SourceColumn : string with get, set" Usage="System.Data.OracleClient.OracleParameter.SourceColumn" />
      <MemberSignature Language="C#" Value="public override string SourceColumn { get; set; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceColumn As String" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SourceColumn { System::String ^ get(); void set(System::String ^ value); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.SourceColumn</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置映射到 <see cref="T:System.Data.DataSet" /> 并且用于加载或返回 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 的源列的名称</summary>
        <value>映射到 <see cref="T:System.Data.DataSet" /> 的源列的名称。 默认值为空字符串("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleParameter> 的值与 <xref:System.Data.DataTable> 之间的链接可能是双向的，具体取决于 <xref:System.Data.OracleClient.OracleParameter.Direction%2A> 属性的值。  
  
   
  
## Examples  
 下面的示例创建一个 <xref:System.Data.OracleClient.OracleParameter> 并设置其一些属性。  
  
```vb  
Public Sub CreateOracleDbParameter()  
   Dim parameter As New OracleParameter()  
   parameter.ParameterName = "pDName"  
   parameter.DbType = DbType.String  
   parameter.Value = "ENGINEERING"  
   parameter.SourceColumn = "DName"  
End Sub  
```  
  
```csharp  
public void CreateOracleDbParameter()   
{  
   OracleParameter parameter = new OracleParameter();  
   parameter.ParameterName = "pDName";  
   parameter.DbType = DbType.String;  
   parameter.Value = "ENGINEERING";  
   parameter.SourceColumn = "DName";  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumnNullMapping">
      <MemberSignature Language="C#" Value="public override bool SourceColumnNullMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SourceColumnNullMapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.SourceColumnNullMapping" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceColumnNullMapping As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SourceColumnNullMapping { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SourceColumnNullMapping : bool with get, set" Usage="System.Data.OracleClient.OracleParameter.SourceColumnNullMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示源列是否可以为 null。 通过此操作，<see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> 能够为可以为 null 的列正确地生成 Update 语句。</summary>
        <value><see langword="true" /> 如果源列可为 null，则为;否则，<see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当处理可以为 null 的列时，<xref:System.Data.OracleClient.OracleCommandBuilder> 使用 <xref:System.Data.OracleClient.OracleParameter.SourceColumnNullMapping%2A> 来正确生成更新命令。 通常，使用 <xref:System.Data.OracleClient.OracleParameter.SourceColumnNullMapping%2A> 仅限于从 <xref:System.Data.OracleClient.OracleCommandBuilder>继承的开发人员。  
  
 <xref:System.Data.Common.DbCommandBuilder> 使用此属性来确定源列是否可以为 null，并将此属性设置为可以为 null 的情况下 `true` `false`，如果不是，则设置为。 当 <xref:System.Data.OracleClient.OracleCommandBuilder> 生成其 Update 语句时，它会检查每个参数的 <xref:System.Data.OracleClient.OracleParameter.SourceColumnNullMapping%2A>。 如果该属性 `true`，<xref:System.Data.OracleClient.OracleCommandBuilder> 将生成如下 WHERE 子句（在此查询表达式中，"FieldName" 表示字段的名称）：  
  
```  
((@IsNull_FieldName = 1 AND FieldName IS NULL) OR   
  (FieldName = @Original_FieldName))  
```  
  
 如果字段 <xref:System.Data.OracleClient.OracleParameter.SourceColumnNullMapping%2A> 为 false，则 <xref:System.Data.OracleClient.OracleCommandBuilder> 生成以下 WHERE 子句：  
  
```  
FieldName = @OriginalFieldName  
```  
  
 此外，如果源字段包含 null，则 @IsNull_FieldName 包含1，如果不包含 null，则为0。 此机制允许在 Oracle 服务器中进行性能优化，并提供适用于跨多个提供程序的通用代码。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceVersion">
      <MemberSignature Language="C#" Value="public System.Data.DataRowVersion SourceVersion { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowVersion SourceVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.SourceVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceVersion As DataRowVersion" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRowVersion SourceVersion { System::Data::DataRowVersion get(); void set(System::Data::DataRowVersion value); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.SourceVersion : System.Data.DataRowVersion with get, set" Usage="System.Data.OracleClient.OracleParameter.SourceVersion" />
      <MemberSignature Language="C#" Value="public override System.Data.DataRowVersion SourceVersion { get; set; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceVersion As DataRowVersion" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::DataRowVersion SourceVersion { System::Data::DataRowVersion get(); void set(System::Data::DataRowVersion value); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.SourceVersion</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRowVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在加载 <see cref="T:System.Data.DataRowVersion" /> 时使用的 <see cref="P:System.Data.OracleClient.OracleParameter.Value" />。</summary>
        <value><see cref="T:System.Data.DataRowVersion" /> 值之一。 默认为 <see langword="Current" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 <xref:System.Data.Common.DbDataAdapter.Update%2A?displayProperty=nameWithType> 期间 <xref:System.Data.OracleClient.OracleDataAdapter.UpdateCommand%2A> 使用此属性来确定是否将原始值或当前值用于某个参数值。 这将允许更新主键。 此属性设置为 <xref:System.Data.DataRow.Item%2A?displayProperty=nameWithType> 属性（<xref:System.Data.DataRow> 索引器）使用的 <xref:System.Data.DataRow> 版本，或 <xref:System.Data.DataRow> 对象的 <xref:System.Data.DataRow.GetChildRows%2A?displayProperty=nameWithType> 方法。  
  
   
  
## Examples  
 下面的示例创建一个 <xref:System.Data.OracleClient.OracleParameter> 并设置其一些属性。  
  
```vb  
Public Sub CreateOracleParameter()  
   Dim parameter As New OracleParameter("pDName", OracleType.VarChar)  
   parameter.IsNullable = True  
   parameter.SourceColumn = "Description"  
   parameter.SourceVersion = DataRowVersion.Current  
   parameter.Direction = ParameterDirection.Output  
End Sub  
```  
  
```csharp  
public void CreateOracleParameter()   
{  
   OracleParameter parameter = new OracleParameter("pDName", OracleType.VarChar);  
   parameter.IsNullable = true;  
   parameter.SourceColumn = "Description";  
   parameter.SourceVersion = DataRowVersion.Current;  
   parameter.Direction = ParameterDirection.Output;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberSignature Language="F#" Value="abstract member System.ICloneable.Clone : unit -&gt; obj&#xA;override this.System.ICloneable.Clone : unit -&gt; obj" Usage="oracleParameter.System.ICloneable.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>有关此成员的说明，请参见 <see cref="M:System.ICloneable.Clone" />。</summary>
        <returns>作为此实例的副本的新对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式接口成员实现。 它只能在 <xref:System.Data.OracleClient.OracleParameter> 实例被强制转换为 <xref:System.ICloneable> 接口时使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="oracleParameter.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取一个包含 <see cref="P:System.Data.OracleClient.OracleParameter.ParameterName" /> 的字符串。</summary>
        <returns>一个包含 <see cref="P:System.Data.OracleClient.OracleParameter.ParameterName" /> 的字符串。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Data.OracleClient.OracleParameter.Value" />
      <MemberSignature Language="C#" Value="public override object Value { get; set; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Value As Object" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.Value</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置参数的值。</summary>
        <value>一个对象，它是该参数的值。 默认值为 null。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对于输入参数，值将绑定到发送到服务器的 <xref:System.Data.OracleClient.OracleCommand>。 对于输出和返回值参数，值将在 <xref:System.Data.OracleClient.OracleCommand> 完成时和 <xref:System.Data.OracleClient.OracleDataReader> 关闭后设置。  
  
 对于输入参数，可以将 <xref:System.Data.OracleClient.OracleParameter.Value%2A> 设置为 Microsoft .NET 框架数据类型或 Oracle 数据类型（例如，<xref:System.Data.OracleClient.OracleNumber> 或 <xref:System.Data.OracleClient.OracleString>）的对象。  
  
 将 null 参数值发送到服务器时，必须指定 DBNull，而不是 null。 系统中的 null 值是没有值的空对象。 DBNull 用于表示 null 值。  
  
 如果应用程序指定了数据库类型，则当提供程序将数据发送到服务器时，绑定值将转换为该类型。 如果提供程序支持 <xref:System.IConvertible> 接口，则会尝试转换任何类型的值。 如果指定的类型与值不兼容，则可能会导致转换错误。  
  
 参数的 <xref:System.Data.OracleClient.OracleParameter.DbType%2A>、<xref:System.Data.OracleClient.OracleParameter.OracleType%2A>和 <xref:System.Data.OracleClient.OracleParameter.Size%2A> 属性可通过设置值进行推断。 因此，您不需要指定它们。 但是，它们不 <xref:System.Data.OracleClient.OracleParameter> 属性设置公开。 例如，如果已推断出参数的大小，则在语句执行后大小不包含推断值。  
  
 除非输入值为 Oracle 数据类型（例如，Microsoft .NET 或 <xref:System.Data.OracleClient.OracleNumber>），否则 Value 属性使用的 `InputOutput`、`Output`和 `ReturnValue`<xref:System.Data.ParameterDirection> 值将为 Framework 数据类型。<xref:System.Data.OracleClient.OracleString> 这并不适用于 REF CURSOR、BFILE 或 LOB 数据类型。  
  
 **Update**方法将覆盖 <xref:System.Data.OracleClient.OracleParameter.Value%2A> 属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
