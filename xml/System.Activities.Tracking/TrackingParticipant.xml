<Type Name="TrackingParticipant" FullName="System.Activities.Tracking.TrackingParticipant">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a83f2ee2aac723cbac040a4c16644e33c08844ee" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89807402" /></Metadata><TypeSignature Language="C#" Value="public abstract class TrackingParticipant" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TrackingParticipant extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Tracking.TrackingParticipant" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TrackingParticipant" />
  <TypeSignature Language="C++ CLI" Value="public ref class TrackingParticipant abstract" />
  <TypeSignature Language="F#" Value="type TrackingParticipant = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0b984-101">与工作流跟踪基础结构交互并访问跟踪记录的工作流扩展的基类。</span><span class="sxs-lookup"><span data-stu-id="0b984-101">The base class for workflow extensions that interact with the workflow tracking infrastructure and access tracking records.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b984-102">注册了一个跟踪参与者来接收跟踪记录。</span><span class="sxs-lookup"><span data-stu-id="0b984-102">A tracking participant is registered to receive tracking records.</span></span> <span data-ttu-id="0b984-103">当前，任何实现该跟踪参与者的类都可向工作流实例注册来接收跟踪记录。</span><span class="sxs-lookup"><span data-stu-id="0b984-103">Currently, any class that implements the tracking participant can be registered with the workflow instance to receive tracking records.</span></span> <span data-ttu-id="0b984-104">如果跟踪参与者是第三方代码，请确保此代码不是恶意代码。</span><span class="sxs-lookup"><span data-stu-id="0b984-104">If the tracking participant is third party code, ensure that this is not malicious code.</span></span> <span data-ttu-id="0b984-105">跟踪参与者与工作流实例运行在同一进程中，如果存在恶意跟踪参与者，此代码将影响总体工作流执行。</span><span class="sxs-lookup"><span data-stu-id="0b984-105">The tracking participants run in the same process as the workflow instance and in the case of malicious tracking participants, this code could affect the overall workflow execution.</span></span> <span data-ttu-id="0b984-106">跟踪记录将在工作流执行时传递到注册的跟踪参与者，因此开发人员应确保该跟踪参与者不会因为在跟踪方法内执行意外的操作而影响正在运行的工作流。</span><span class="sxs-lookup"><span data-stu-id="0b984-106">The tracking records are delivered to the registered tracking participants as the workflow executes, so the developer should ensure that the tracking participant does not affect the running workflow by performing unintended operations within the track method.</span></span> <span data-ttu-id="0b984-107">此情况的示例可能包括更改工作流变量或花费很长时间的操作。</span><span class="sxs-lookup"><span data-stu-id="0b984-107">Examples of this could be the alteration of workflow variables or operations that take a long time.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TrackingParticipant ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Tracking.TrackingParticipant.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TrackingParticipant();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0b984-108">在派生类中实现时，创建派生类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0b984-108">When implemented in a derived class, creates a new instance of the derived class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTrack">
      <MemberSignature Language="C#" Value="protected internal virtual IAsyncResult BeginTrack (System.Activities.Tracking.TrackingRecord record, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.IAsyncResult BeginTrack(class System.Activities.Tracking.TrackingRecord record, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Tracking.TrackingParticipant.BeginTrack(System.Activities.Tracking.TrackingRecord,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function BeginTrack (record As TrackingRecord, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual IAsyncResult ^ BeginTrack(System::Activities::Tracking::TrackingRecord ^ record, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginTrack : System.Activities.Tracking.TrackingRecord * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginTrack : System.Activities.Tracking.TrackingRecord * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="trackingParticipant.BeginTrack (record, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="System.Activities.Tracking.TrackingRecord" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="record"><span data-ttu-id="0b984-109">生成的跟踪记录。</span><span class="sxs-lookup"><span data-stu-id="0b984-109">The generated tracking record.</span></span></param>
        <param name="timeout"><span data-ttu-id="0b984-110">时间段，在该时间段后提供程序将中止尝试。</span><span class="sxs-lookup"><span data-stu-id="0b984-110">The time period after which the provider aborts the attempt.</span></span></param>
        <param name="callback"><span data-ttu-id="0b984-111">要在操作完成时调用的方法。</span><span class="sxs-lookup"><span data-stu-id="0b984-111">The method to be called on completion of the operation.</span></span></param>
        <param name="state"><span data-ttu-id="0b984-112">一个用户定义的对象，该对象唯一标识此异步操作。</span><span class="sxs-lookup"><span data-stu-id="0b984-112">A user-defined object that uniquely identifies this asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="0b984-113">在派生类中实现时，开始跟踪记录的异步处理。</span><span class="sxs-lookup"><span data-stu-id="0b984-113">When implemented in a derived class, begins asynchronous processing of the tracking record.</span></span></summary>
        <returns><span data-ttu-id="0b984-114">操作的结果。</span><span class="sxs-lookup"><span data-stu-id="0b984-114">The result of the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b984-115">参与者应开始处理记录的作业，并返回工作流运行时用于等待完成的 <xref:System.IAsyncResult>。</span><span class="sxs-lookup"><span data-stu-id="0b984-115">Participants are expected to begin a job to process the records and return an <xref:System.IAsyncResult> that the workflow runtime uses to wait for completion.</span></span> <span data-ttu-id="0b984-116">默认实现是调用 <xref:System.Activities.Tracking.TrackingParticipant.Track%2A> 并返回 Completed 状态。</span><span class="sxs-lookup"><span data-stu-id="0b984-116">The default implementation is to call <xref:System.Activities.Tracking.TrackingParticipant.Track%2A> and return a Completed status.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTrack">
      <MemberSignature Language="C#" Value="protected internal virtual void EndTrack (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void EndTrack(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Tracking.TrackingParticipant.EndTrack(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub EndTrack (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void EndTrack(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndTrack : IAsyncResult -&gt; unit&#xA;override this.EndTrack : IAsyncResult -&gt; unit" Usage="trackingParticipant.EndTrack result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="0b984-117">操作的状态。</span><span class="sxs-lookup"><span data-stu-id="0b984-117">The status of the operation.</span></span></param>
        <summary><span data-ttu-id="0b984-118">在派生类中实现时，表示异步跟踪操作结束。</span><span class="sxs-lookup"><span data-stu-id="0b984-118">When implemented in a derived class, represents the end of an asynchronous tracking operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b984-119">此方法应一直阻止到跟踪操作完成为止。</span><span class="sxs-lookup"><span data-stu-id="0b984-119">This method is expected to block until the tracking operation is complete.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Track">
      <MemberSignature Language="C#" Value="protected internal abstract void Track (System.Activities.Tracking.TrackingRecord record, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Track(class System.Activities.Tracking.TrackingRecord record, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Tracking.TrackingParticipant.Track(System.Activities.Tracking.TrackingRecord,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub Track (record As TrackingRecord, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void Track(System::Activities::Tracking::TrackingRecord ^ record, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Track : System.Activities.Tracking.TrackingRecord * TimeSpan -&gt; unit" Usage="trackingParticipant.Track (record, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="System.Activities.Tracking.TrackingRecord" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="record"><span data-ttu-id="0b984-120">生成的跟踪记录。</span><span class="sxs-lookup"><span data-stu-id="0b984-120">The generated tracking record.</span></span></param>
        <param name="timeout"><span data-ttu-id="0b984-121">时间段，在该时间段后提供程序将中止尝试。</span><span class="sxs-lookup"><span data-stu-id="0b984-121">The time period after which the provider aborts the attempt.</span></span></param>
        <summary><span data-ttu-id="0b984-122">在派生类中实现时，用于以异步方式处理跟踪记录。</span><span class="sxs-lookup"><span data-stu-id="0b984-122">When implemented in a derived class, used to synchronously process the tracking record.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b984-123">当工作流实例发出跟踪记录时，将调用跟踪方法。</span><span class="sxs-lookup"><span data-stu-id="0b984-123">The track method is called when the workflow instance emits a tracking record.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackingProfile">
      <MemberSignature Language="C#" Value="public virtual System.Activities.Tracking.TrackingProfile TrackingProfile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Tracking.TrackingProfile TrackingProfile" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Tracking.TrackingParticipant.TrackingProfile" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TrackingProfile As TrackingProfile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Activities::Tracking::TrackingProfile ^ TrackingProfile { System::Activities::Tracking::TrackingProfile ^ get(); void set(System::Activities::Tracking::TrackingProfile ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TrackingProfile : System.Activities.Tracking.TrackingProfile with get, set" Usage="System.Activities.Tracking.TrackingParticipant.TrackingProfile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Tracking.TrackingProfile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b984-124">跟踪参与者使用的跟踪配置文件对象。</span><span class="sxs-lookup"><span data-stu-id="0b984-124">The tracking profile object used by the tracking participant.</span></span> <span data-ttu-id="0b984-125">将跟踪参与者添加到工作流扩展之前，将在参与者上设置跟踪配置文件。</span><span class="sxs-lookup"><span data-stu-id="0b984-125">Before adding the tracking participant to the workflow extensions, the tracking profile is set on the participant.</span></span></summary>
        <value><span data-ttu-id="0b984-126">跟踪配置文件。</span><span class="sxs-lookup"><span data-stu-id="0b984-126">The tracking profile.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b984-127">跟踪配置文件定义将哪些跟踪事件发送到此跟踪参与者。</span><span class="sxs-lookup"><span data-stu-id="0b984-127">The tracking profile defines which tracking events are sent to this tracking participant.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
