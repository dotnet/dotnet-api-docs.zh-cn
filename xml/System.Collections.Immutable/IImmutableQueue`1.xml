<Type Name="IImmutableQueue&lt;T&gt;" FullName="System.Collections.Immutable.IImmutableQueue&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c34c9633c0b1c89b176ab8f05c73cd94bc63a655" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="82418145" /></Metadata><TypeSignature Language="C#" Value="public interface IImmutableQueue&lt;T&gt; : System.Collections.Generic.IEnumerable&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IImmutableQueue`1&lt;T&gt; implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Immutable.IImmutableQueue`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IImmutableQueue(Of T)&#xA;Implements IEnumerable(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IImmutableQueue : System::Collections::Generic::IEnumerable&lt;T&gt;" />
  <TypeSignature Language="F#" Value="type IImmutableQueue&lt;'T&gt; = interface&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.1.37.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
    <AssemblyVersion>1.2.4.0</AssemblyVersion>
    <AssemblyVersion>1.2.5.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T"><span data-ttu-id="1956e-101">队列中元素的类型。</span><span class="sxs-lookup"><span data-stu-id="1956e-101">The type of elements in the queue.</span></span></typeparam>
    <summary><span data-ttu-id="1956e-102">表示对象的不可变先进先出集合。</span><span class="sxs-lookup"><span data-stu-id="1956e-102">Represents an immutable first-in, first-out collection of objects.</span></span>  
  
 <span data-ttu-id="1956e-103">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see>（<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks">关于不可变集合和安装方法</see>）</span><span class="sxs-lookup"><span data-stu-id="1956e-103">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks">about immutable collections and how to install</see>)</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1956e-104">由于 <xref:System.Collections.Immutable.IImmutableQueue%601> 是不可变的，因此，当你使用或等方法进行更改时 <xref:System.Collections.Immutable.IImmutableQueue%601> <xref:System.Collections.Immutable.IImmutableQueue%601.Dequeue%2A> <xref:System.Collections.Immutable.IImmutableQueue%601.Enqueue%2A> ，将返回一个新的队列，并应用所做的更改，而原始队列将保持不变。</span><span class="sxs-lookup"><span data-stu-id="1956e-104">Because <xref:System.Collections.Immutable.IImmutableQueue%601> is immutable, when you change <xref:System.Collections.Immutable.IImmutableQueue%601> using methods such as <xref:System.Collections.Immutable.IImmutableQueue%601.Dequeue%2A> or <xref:System.Collections.Immutable.IImmutableQueue%601.Enqueue%2A>,  a new queue will be returned with the changes applied and the original queue remains unchanged.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.IImmutableQueue&lt;T&gt; Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableQueue`1&lt;!T&gt; Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.IImmutableQueue`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Function Clear () As IImmutableQueue(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::IImmutableQueue&lt;T&gt; ^ Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; System.Collections.Immutable.IImmutableQueue&lt;'T&gt;" Usage="iImmutableQueue.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableQueue&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1956e-105">返回已移除所有元素的新队列。</span><span class="sxs-lookup"><span data-stu-id="1956e-105">Returns a new queue with all the elements removed.</span></span></summary>
        <returns><span data-ttu-id="1956e-106">空的不可变队列。</span><span class="sxs-lookup"><span data-stu-id="1956e-106">An empty immutable queue.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dequeue">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.IImmutableQueue&lt;T&gt; Dequeue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableQueue`1&lt;!T&gt; Dequeue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.IImmutableQueue`1.Dequeue" />
      <MemberSignature Language="VB.NET" Value="Public Function Dequeue () As IImmutableQueue(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::IImmutableQueue&lt;T&gt; ^ Dequeue();" />
      <MemberSignature Language="F#" Value="abstract member Dequeue : unit -&gt; System.Collections.Immutable.IImmutableQueue&lt;'T&gt;" Usage="iImmutableQueue.Dequeue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableQueue&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1956e-107">移除不可变队列中的第一个元素，并返回新队列。</span><span class="sxs-lookup"><span data-stu-id="1956e-107">Removes the first element in the immutable queue, and returns the new queue.</span></span></summary>
        <returns><span data-ttu-id="1956e-108">新的不可变队列，其第一个元素已被移除。</span><span class="sxs-lookup"><span data-stu-id="1956e-108">The new immutable queue with the first element removed.</span></span> <span data-ttu-id="1956e-109">此值永不为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1956e-109">This value is never <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1956e-110">队列为空。</span><span class="sxs-lookup"><span data-stu-id="1956e-110">The queue is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Enqueue">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.IImmutableQueue&lt;T&gt; Enqueue (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableQueue`1&lt;!T&gt; Enqueue(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.IImmutableQueue`1.Enqueue(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Enqueue (value As T) As IImmutableQueue(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::IImmutableQueue&lt;T&gt; ^ Enqueue(T value);" />
      <MemberSignature Language="F#" Value="abstract member Enqueue : 'T -&gt; System.Collections.Immutable.IImmutableQueue&lt;'T&gt;" Usage="iImmutableQueue.Enqueue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableQueue&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1956e-111">要添加的元素。</span><span class="sxs-lookup"><span data-stu-id="1956e-111">The element to add.</span></span></param>
        <summary><span data-ttu-id="1956e-112">将元素添加到不可变队列的末尾，并返回新队列。</span><span class="sxs-lookup"><span data-stu-id="1956e-112">Adds an element to the end of the immutable queue, and returns the new queue.</span></span></summary>
        <returns><span data-ttu-id="1956e-113">新的不可变队列，其中已添加指定的元素。</span><span class="sxs-lookup"><span data-stu-id="1956e-113">The new immutable queue with the specified element added.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.IImmutableQueue`1.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Collections.Immutable.IImmutableQueue&lt;'T&gt;.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1956e-114">获取一个值，该值指示此不可变队列是否为空。</span><span class="sxs-lookup"><span data-stu-id="1956e-114">Gets a value that indicates whether this immutable queue is empty.</span></span></summary>
        <value><span data-ttu-id="1956e-115">如果此队列为空，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1956e-115"><see langword="true" /> if this queue is empty; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public T Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.IImmutableQueue`1.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Function Peek () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T Peek();" />
      <MemberSignature Language="F#" Value="abstract member Peek : unit -&gt; 'T" Usage="iImmutableQueue.Peek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
        <AssemblyVersion>1.2.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1956e-116">返回位于不可变队列开始处的元素但不将其移除。</span><span class="sxs-lookup"><span data-stu-id="1956e-116">Returns the element at the beginning of the immutable queue without removing it.</span></span></summary>
        <returns><span data-ttu-id="1956e-117">位于队列开始处的元素。</span><span class="sxs-lookup"><span data-stu-id="1956e-117">The element at the beginning of the queue.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1956e-118">队列为空。</span><span class="sxs-lookup"><span data-stu-id="1956e-118">The queue is empty.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
