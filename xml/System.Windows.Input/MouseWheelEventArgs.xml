<Type Name="MouseWheelEventArgs" FullName="System.Windows.Input.MouseWheelEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bac814ba88a8e4216545c88ef493615c1901cd34" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89922009" /></Metadata><TypeSignature Language="C#" Value="public class MouseWheelEventArgs : System.Windows.Input.MouseEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MouseWheelEventArgs extends System.Windows.Input.MouseEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.MouseWheelEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class MouseWheelEventArgs&#xA;Inherits MouseEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class MouseWheelEventArgs : System::Windows::Input::MouseEventArgs" />
  <TypeSignature Language="F#" Value="type MouseWheelEventArgs = class&#xA;    inherit MouseEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.MouseEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="fa4b2-101">为报告鼠标设备的鼠标滚轮增量值更改的各事件提供数据。</span><span class="sxs-lookup"><span data-stu-id="fa4b2-101">Provides data for various events that report changes to the mouse wheel delta value of a mouse device.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa4b2-102"><xref:System.Windows.Input.MouseWheelEventArgs> 与以下事件一起使用：</span><span class="sxs-lookup"><span data-stu-id="fa4b2-102"><xref:System.Windows.Input.MouseWheelEventArgs> is used with the following events:</span></span>  
  
-   <xref:System.Windows.UIElement.MouseWheel?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.MouseWheel?displayProperty=nameWithType>  
  
-   <span data-ttu-id="fa4b2-103"><xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> (附加事件) </span><span class="sxs-lookup"><span data-stu-id="fa4b2-103"><xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> (attached event)</span></span>  
  
-   <xref:System.Windows.UIElement.PreviewMouseWheel?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.PreviewMouseWheel?displayProperty=nameWithType>  
  
-   <span data-ttu-id="fa4b2-104"><xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> (附加事件) </span><span class="sxs-lookup"><span data-stu-id="fa4b2-104"><xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> (attached event)</span></span>  
  
 <span data-ttu-id="fa4b2-105"><xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A>如果鼠标滚轮向上或向后移动 (远离) 用户，则属性为正; 如果鼠标滚轮向下或向后 (向用户) 移动，则为负。</span><span class="sxs-lookup"><span data-stu-id="fa4b2-105">The <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> property is positive if the mouse wheel is moved upward or forward (away from the user) or negative if the mouse wheel is moved downward or backward (toward the user).</span></span>  
  
 <span data-ttu-id="fa4b2-106">即使鼠标滚轮移动发生，也会引发此事件。</span><span class="sxs-lookup"><span data-stu-id="fa4b2-106">This event is raised even for small mouse wheel movements.</span></span> <span data-ttu-id="fa4b2-107">在某些情况下，适合通过检查增量是否超出特定阈值来实现可限制小鼠标滚轮增量的处理程序。</span><span class="sxs-lookup"><span data-stu-id="fa4b2-107">For some scenarios, it is appropriate to implement handlers that throttle small mouse wheel deltas by checking whether the delta exceeds a certain threshold.</span></span> <span data-ttu-id="fa4b2-108">否则，你可能会在鼠标滚轮增量较小的情况下调用你的处理程序，这种情况下，与鼠标滚轮移动关联的任何 UI 都不会更新。</span><span class="sxs-lookup"><span data-stu-id="fa4b2-108">Otherwise, you might invoke your handler for cases where the mouse wheel delta was so small that any UI that is tied to the mouse wheel movement would not update.</span></span> <span data-ttu-id="fa4b2-109">确切地说明如何在处理程序中实现阈值行为，该阈值应该是完全特定于实现的。</span><span class="sxs-lookup"><span data-stu-id="fa4b2-109">Exactly how you implement the threshold behavior in a handler and what that threshold should be is entirely implementation-specific.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa4b2-110">下面的示例在 <xref:System.Windows.Controls.TextBox> 鼠标滚轮为正时向上移动 <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> ，并在 <xref:System.Windows.Controls.TextBox> 鼠标滚轮为负值时向下移动 <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> 。</span><span class="sxs-lookup"><span data-stu-id="fa4b2-110">The following example moves a <xref:System.Windows.Controls.TextBox> up if the mouse wheel <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> is positive and moves the <xref:System.Windows.Controls.TextBox> down if the mouse wheel <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> is negative.</span></span> <span data-ttu-id="fa4b2-111"><xref:System.Windows.Controls.TextBox>附加到 <xref:System.Windows.Controls.Canvas> 。</span><span class="sxs-lookup"><span data-stu-id="fa4b2-111">The <xref:System.Windows.Controls.TextBox> is attached to a <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 [!code-csharp[mousesnippetsample#MouseWheelDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mousewheeldelta)]
 [!code-vb[mousesnippetsample#MouseWheelDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mousewheeldelta)]  
  
 ]]></format>
    </remarks>
    <altmember cref="F:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseWheelEventArgs (System.Windows.Input.MouseDevice mouse, int timestamp, int delta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.MouseDevice mouse, int32 timestamp, int32 delta) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseWheelEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mouse As MouseDevice, timestamp As Integer, delta As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MouseWheelEventArgs(System::Windows::Input::MouseDevice ^ mouse, int timestamp, int delta);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.MouseWheelEventArgs : System.Windows.Input.MouseDevice * int * int -&gt; System.Windows.Input.MouseWheelEventArgs" Usage="new System.Windows.Input.MouseWheelEventArgs (mouse, timestamp, delta)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mouse" Type="System.Windows.Input.MouseDevice" />
        <Parameter Name="timestamp" Type="System.Int32" />
        <Parameter Name="delta" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="mouse"><span data-ttu-id="fa4b2-112">与此事件关联的鼠标设备。</span><span class="sxs-lookup"><span data-stu-id="fa4b2-112">The mouse device associated with this event.</span></span></param>
        <param name="timestamp"><span data-ttu-id="fa4b2-113">发生输入的时间。</span><span class="sxs-lookup"><span data-stu-id="fa4b2-113">The time when the input occurred.</span></span></param>
        <param name="delta"><span data-ttu-id="fa4b2-114">鼠标滚轮的变更量。</span><span class="sxs-lookup"><span data-stu-id="fa4b2-114">The amount the wheel has changed.</span></span></param>
        <summary><span data-ttu-id="fa4b2-115">初始化 <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="fa4b2-115">Initializes a new instance of the <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delta">
      <MemberSignature Language="C#" Value="public int Delta { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Delta" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseWheelEventArgs.Delta" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Delta As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Delta { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Delta : int" Usage="System.Windows.Input.MouseWheelEventArgs.Delta" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa4b2-116">获取指示鼠标滚轮变更量的值。</span><span class="sxs-lookup"><span data-stu-id="fa4b2-116">Gets a value that indicates the amount that the mouse wheel has changed.</span></span></summary>
        <value><span data-ttu-id="fa4b2-117">鼠标滚轮的变更量。</span><span class="sxs-lookup"><span data-stu-id="fa4b2-117">The amount the wheel has changed.</span></span> <span data-ttu-id="fa4b2-118">如果鼠标滚轮朝上旋转（背离用户的方向），则该值为正；如果鼠标滚轮朝下旋转（朝着用户的方向），则该值为负。</span><span class="sxs-lookup"><span data-stu-id="fa4b2-118">This value is positive if the mouse wheel is rotated in an upward direction (away from the user) or negative if the mouse wheel is rotated in a downward direction (toward the user).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa4b2-119">此值的有效上限和下限可能来自设备实现或引发事件的其他调用方，因此未定义。</span><span class="sxs-lookup"><span data-stu-id="fa4b2-119">The effective upper and lower ranges of this value potentially come from device implementations or other callers that raised the event, and are therefore not defined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa4b2-120">下面的示例在 <xref:System.Windows.Controls.TextBox> 鼠标滚轮为正时向上移动 <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> ，并在 <xref:System.Windows.Controls.TextBox> 鼠标滚轮为负值时向下移动 <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> 。</span><span class="sxs-lookup"><span data-stu-id="fa4b2-120">The following example moves a <xref:System.Windows.Controls.TextBox> up if the mouse wheel <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> is positive and moves the <xref:System.Windows.Controls.TextBox> down if the mouse wheel <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> is negative.</span></span> <span data-ttu-id="fa4b2-121"><xref:System.Windows.Controls.TextBox>附加到 <xref:System.Windows.Controls.Canvas> 。</span><span class="sxs-lookup"><span data-stu-id="fa4b2-121">The <xref:System.Windows.Controls.TextBox> is attached to a <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 [!code-csharp[mousesnippetsample#MouseWheelDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mousewheeldelta)]
 [!code-vb[mousesnippetsample#MouseWheelDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mousewheeldelta)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine" />
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseWheelEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberSignature Language="F#" Value="override this.InvokeEventHandler : Delegate * obj -&gt; unit" Usage="mouseWheelEventArgs.InvokeEventHandler (genericHandler, genericTarget)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler"><span data-ttu-id="fa4b2-122">以特定于类型的方式调用的一般处理程序。</span><span class="sxs-lookup"><span data-stu-id="fa4b2-122">The generic handler to call in a type-specific way.</span></span></param>
        <param name="genericTarget"><span data-ttu-id="fa4b2-123">要对其调用处理程序的目标。</span><span class="sxs-lookup"><span data-stu-id="fa4b2-123">The target to call the handler on.</span></span></param>
        <summary><span data-ttu-id="fa4b2-124">以特定于类型的方式调用事件处理程序，这样做可以提高事件系统效率。</span><span class="sxs-lookup"><span data-stu-id="fa4b2-124">Invokes event handlers in a type-specific way, which can increase event system efficiency.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa4b2-125">此实现将泛型处理程序强制转换为 <xref:System.Windows.Input.MouseWheelEventHandler> ，然后调用它。</span><span class="sxs-lookup"><span data-stu-id="fa4b2-125">This implementation casts the generic handler as a <xref:System.Windows.Input.MouseWheelEventHandler> and then invokes it.</span></span> <span data-ttu-id="fa4b2-126">有关此实现模式及其原因的详细信息，请参阅 <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> 和 [路由事件概述](/dotnet/framework/wpf/advanced/routed-events-overview)。</span><span class="sxs-lookup"><span data-stu-id="fa4b2-126">For details on this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](/dotnet/framework/wpf/advanced/routed-events-overview).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
