<Type Name="Stylus" FullName="System.Windows.Input.Stylus">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dafe4e371e348d7cdbba73dd0970171ad08f6b51" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89745807" /></Metadata><TypeSignature Language="C#" Value="public static class Stylus" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Stylus extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Stylus" />
  <TypeSignature Language="VB.NET" Value="Public Class Stylus" />
  <TypeSignature Language="C++ CLI" Value="public ref class Stylus abstract sealed" />
  <TypeSignature Language="F#" Value="type Stylus = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="71b08-101">提供对有关触笔的一般信息的访问。</span><span class="sxs-lookup"><span data-stu-id="71b08-101">Provides access to general information about a tablet pen.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="71b08-102">下面的示例演示如何记录触笔的坐标，即使触笔离开的边界也是如此 <xref:System.Windows.Controls.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="71b08-102">The following example demonstrates how to record the coordinates of the stylus, even if the stylus leaves the bounds of a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="71b08-103">此示例假设有一个被 <xref:System.Windows.Controls.TextBox> 调用的 `textBox1` ，并且 <xref:System.Windows.Input.Stylus.StylusDown> 、 <xref:System.Windows.Input.Stylus.StylusUp> 和 <xref:System.Windows.Input.Stylus.StylusMove> 事件已连接到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-103">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, and <xref:System.Windows.Input.Stylus.StylusMove> events are connected to event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[StylusSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddGotStylusCaptureHandler">
      <MemberSignature Language="C#" Value="public static void AddGotStylusCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddGotStylusCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddGotStylusCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddGotStylusCaptureHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddGotStylusCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddGotStylusCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddGotStylusCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-104">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-104">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-105">要添加的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-105">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="71b08-106">为 <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> 附加事件添加处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-106">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLostStylusCaptureHandler">
      <MemberSignature Language="C#" Value="public static void AddLostStylusCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddLostStylusCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddLostStylusCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddLostStylusCaptureHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddLostStylusCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddLostStylusCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddLostStylusCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-107">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-107">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-108">要添加的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-108">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="71b08-109">为 <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> 附加事件添加处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-109">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusButtonDownHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusButtonDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusButtonDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusButtonDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusButtonDownHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusButtonDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusButtonDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusButtonDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-110">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-110">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-111">要添加的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-111">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="71b08-112">为 <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> 附加事件添加处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-112">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusButtonUpHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusButtonUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusButtonUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusButtonUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusButtonUpHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusButtonUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusButtonUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusButtonUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-113">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-113">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-114">要添加的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-114">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="71b08-115">为 <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> 附加事件添加处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-115">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusDownHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusDownEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusDownEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusDownEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusDownHandler (element As DependencyObject, handler As StylusDownEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusDownEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusDownEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusDownEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-116">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-116">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-117">要添加的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-117">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="71b08-118">为 <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> 附加事件添加处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-118">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusInAirMoveHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusInAirMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusInAirMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusInAirMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusInAirMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusInAirMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusInAirMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusInAirMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-119">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-119">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-120">要添加的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-120">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="71b08-121">为 <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> 附加事件添加处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-121">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusInRangeHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusInRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusInRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusInRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusInRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusInRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusInRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusInRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-122">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-122">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-123">要添加的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-123">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="71b08-124">为 <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> 附加事件添加处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-124">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusMoveHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-125">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-125">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-126">要添加的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-126">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="71b08-127">为 <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> 附加事件添加处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-127">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusOutOfRangeHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusOutOfRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusOutOfRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusOutOfRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusOutOfRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusOutOfRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusOutOfRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusOutOfRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-128">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-128">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-129">要添加的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-129">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="71b08-130">为 <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> 附加事件添加处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-130">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusSystemGestureHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusSystemGestureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusSystemGestureEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusSystemGestureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusSystemGestureEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusSystemGestureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusSystemGestureEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusSystemGestureHandler (element As DependencyObject, handler As StylusSystemGestureEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusSystemGestureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusSystemGestureEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusSystemGestureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusSystemGestureEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusSystemGestureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusSystemGestureEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-131">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-131">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-132">要添加的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-132">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="71b08-133">为 <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> 附加事件添加处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-133">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusUpHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusUpHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-134">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-134">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-135">要添加的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-135">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="71b08-136">为 <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> 附加事件添加处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-136">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusButtonDownHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusButtonDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusButtonDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusButtonDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusButtonDownHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusButtonDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusButtonDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusButtonDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-137">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-137">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-138">要添加的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-138">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="71b08-139">为 <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> 附加事件添加处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-139">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusButtonUpHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusButtonUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusButtonUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusButtonUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusButtonUpHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusButtonUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusButtonUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusButtonUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-140">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-140">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-141">要添加的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-141">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="71b08-142">为 <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> 附加事件添加处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-142">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusDownHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusDownEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusDownEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusDownEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusDownHandler (element As DependencyObject, handler As StylusDownEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusDownEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusDownEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusDownEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-143">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-143">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-144">要添加的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-144">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="71b08-145">为 <see cref="E:System.Windows.Input.Stylus.StylusDown" /> 附加事件添加处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-145">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusEnterHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusEnterHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusEnterHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusEnterHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusEnterHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusEnterHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusEnterHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusEnterHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-146">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-146">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-147">要添加的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-147">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="71b08-148">为 <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> 附加事件添加处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-148">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusInAirMoveHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusInAirMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusInAirMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusInAirMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusInAirMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusInAirMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusInAirMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusInAirMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-149">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-149">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-150">要添加的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-150">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="71b08-151">为 <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> 附加事件添加处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-151">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusInRangeHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusInRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusInRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusInRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusInRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusInRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusInRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusInRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-152">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-152">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-153">要添加的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-153">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="71b08-154">为 <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> 附加事件添加处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-154">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusLeaveHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusLeaveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusLeaveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusLeaveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusLeaveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusLeaveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusLeaveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-155">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-155">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-156">要添加的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-156">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="71b08-157">为 <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> 附加事件添加处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-157">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusMoveHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-158">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-158">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-159">要添加的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-159">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="71b08-160">为 <see cref="E:System.Windows.Input.Stylus.StylusMove" /> 附加事件添加处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-160">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusOutOfRangeHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusOutOfRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusOutOfRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusOutOfRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusOutOfRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusOutOfRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusOutOfRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusOutOfRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-161">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-161">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-162">要添加的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-162">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="71b08-163">为 <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> 附加事件添加处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-163">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusSystemGestureHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusSystemGestureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusSystemGestureEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusSystemGestureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusSystemGestureEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusSystemGestureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusSystemGestureEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusSystemGestureHandler (element As DependencyObject, handler As StylusSystemGestureEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusSystemGestureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusSystemGestureEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusSystemGestureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusSystemGestureEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusSystemGestureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusSystemGestureEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-164">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-164">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-165">要添加的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-165">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="71b08-166">为 <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> 附加事件添加处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-166">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusUpHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusUpHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-167">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-167">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-168">要添加的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-168">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="71b08-169">为 <see cref="E:System.Windows.Input.Stylus.StylusUp" /> 附加事件添加处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-169">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Capture">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71b08-170">捕获绑定到特定元素的触笔。</span><span class="sxs-lookup"><span data-stu-id="71b08-170">Captures the stylus that is bound to a particular element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public static bool Capture (System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Capture(class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.Capture(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Capture (element As IInputElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Capture(System::Windows::IInputElement ^ element);" />
      <MemberSignature Language="F#" Value="static member Capture : System.Windows.IInputElement -&gt; bool" Usage="System.Windows.Input.Stylus.Capture element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-171">要捕获触笔的元素。</span><span class="sxs-lookup"><span data-stu-id="71b08-171">The element to capture the stylus to.</span></span></param>
        <summary><span data-ttu-id="71b08-172">捕获指定元素的触笔。</span><span class="sxs-lookup"><span data-stu-id="71b08-172">Captures the stylus to the specified element.</span></span></summary>
        <returns><span data-ttu-id="71b08-173">如果 <paramref name="element" /> 捕获到触笔，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-173"><see langword="true" /> if the stylus is captured to <paramref name="element" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b08-174">使用 <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%29> 方法可确保 `element` 即使光标超出元素的边界，也会接收触笔事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-174">Use the <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%29> method to ensure that `element` receives stylus events even when the cursor goes out of the elements' bounds.</span></span> <span data-ttu-id="71b08-175">若要释放触笔，请调用， <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> 并将 <xref:System.Windows.Input.CaptureMode> 设置为 <xref:System.Windows.Input.CaptureMode.None> 。</span><span class="sxs-lookup"><span data-stu-id="71b08-175">To release the stylus, call <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> with the <xref:System.Windows.Input.CaptureMode> set to <xref:System.Windows.Input.CaptureMode.None>.</span></span>  
  
 <span data-ttu-id="71b08-176"><xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%29> `false` 如果不 `element` 可见或未启用，则该方法返回。</span><span class="sxs-lookup"><span data-stu-id="71b08-176">The <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%29> method returns `false` if `element` is not visible or enabled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71b08-177">下面的示例演示如何记录触笔的坐标，即使触笔离开的边界也是如此 <xref:System.Windows.Controls.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="71b08-177">The following example demonstrates how to record the coordinates of the stylus, even if the stylus leaves the bounds of a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="71b08-178">此示例假设有一个被 <xref:System.Windows.Controls.TextBox> 调用的 `textBox1` ，并且 <xref:System.Windows.Input.Stylus.StylusDown> 、 <xref:System.Windows.Input.Stylus.StylusUp> 和事件已 <xref:System.Windows.Input.Stylus.StylusMove> 连接到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-178">This example assumes there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, and <xref:System.Windows.Input.Stylus.StylusMove> events are connected to event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[StylusSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public static bool Capture (System.Windows.IInputElement element, System.Windows.Input.CaptureMode captureMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Capture(class System.Windows.IInputElement element, valuetype System.Windows.Input.CaptureMode captureMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Capture (element As IInputElement, captureMode As CaptureMode) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Capture(System::Windows::IInputElement ^ element, System::Windows::Input::CaptureMode captureMode);" />
      <MemberSignature Language="F#" Value="static member Capture : System.Windows.IInputElement * System.Windows.Input.CaptureMode -&gt; bool" Usage="System.Windows.Input.Stylus.Capture (element, captureMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="captureMode" Type="System.Windows.Input.CaptureMode" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-179">要捕获触笔的元素。</span><span class="sxs-lookup"><span data-stu-id="71b08-179">The element to capture the stylus to.</span></span></param>
        <param name="captureMode"><span data-ttu-id="71b08-180"><see cref="T:System.Windows.Input.CaptureMode" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="71b08-180">One of the <see cref="T:System.Windows.Input.CaptureMode" /> values.</span></span></param>
        <summary><span data-ttu-id="71b08-181">捕获指定元素的触笔。</span><span class="sxs-lookup"><span data-stu-id="71b08-181">Captures the stylus to the specified element.</span></span></summary>
        <returns><span data-ttu-id="71b08-182">如果 <paramref name="element" /> 捕获到触笔，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-182"><see langword="true" /> if the stylus is captured to <paramref name="element" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b08-183">使用 <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> 方法可确保 `element` 即使光标超出元素的边界，也会接收触笔事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-183">Use the <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> method to ensure that `element` receives stylus events even when the cursor goes out of the elements' bounds.</span></span> <span data-ttu-id="71b08-184">若要释放触笔，请调用， <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> 并将 <xref:System.Windows.Input.CaptureMode> 设置为 <xref:System.Windows.Input.CaptureMode.None> 。</span><span class="sxs-lookup"><span data-stu-id="71b08-184">To release the stylus, call <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> with the <xref:System.Windows.Input.CaptureMode> set to <xref:System.Windows.Input.CaptureMode.None>.</span></span>  
  
 <span data-ttu-id="71b08-185"><xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> `false` 如果不 `element` 可见或未启用，则该方法返回。</span><span class="sxs-lookup"><span data-stu-id="71b08-185">The <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> method returns `false` if `element` is not visible or enabled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71b08-186">下面的示例演示如何记录触笔的坐标，即使触笔离开的边界也是如此 <xref:System.Windows.Controls.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="71b08-186">The following example demonstrates how to record the coordinates of the stylus, even if the stylus leaves the bounds of a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="71b08-187">此示例假设有一个被 <xref:System.Windows.Controls.TextBox> 调用的 `textBox1` ，并且 <xref:System.Windows.Input.Stylus.StylusDown> 、 <xref:System.Windows.Input.Stylus.StylusUp> 和 <xref:System.Windows.Input.Stylus.StylusMove> 事件已连接到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-187">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, and <xref:System.Windows.Input.Stylus.StylusMove> events are connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[StylusSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Captured">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement Captured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.IInputElement Captured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.Captured" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Captured As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::IInputElement ^ Captured { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Captured : System.Windows.IInputElement" Usage="System.Windows.Input.Stylus.Captured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71b08-188">获取绑定了触笔的元素。</span><span class="sxs-lookup"><span data-stu-id="71b08-188">Gets the element to which the stylus is bound.</span></span></summary>
        <value><span data-ttu-id="71b08-189">绑定了触笔的 <see cref="T:System.Windows.IInputElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-189">The <see cref="T:System.Windows.IInputElement" /> to which the stylus is bound.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="71b08-190">下面的示例演示如何确保当用户将触笔接触到数字化仪时不捕获触笔。</span><span class="sxs-lookup"><span data-stu-id="71b08-190">The following example demonstrates how to ensure that the stylus is not captured when the user touches the stylus to the digitizer.</span></span> <span data-ttu-id="71b08-191">此示例假定事件已 <xref:System.Windows.Input.Stylus.PreviewStylusDown> 连接到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-191">This example assumes that the <xref:System.Windows.Input.Stylus.PreviewStylusDown> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#5](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#5)]
 [!code-vb[StylusSamples#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentStylusDevice">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.StylusDevice CurrentStylusDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.StylusDevice CurrentStylusDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.CurrentStylusDevice" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentStylusDevice As StylusDevice" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::StylusDevice ^ CurrentStylusDevice { System::Windows::Input::StylusDevice ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentStylusDevice : System.Windows.Input.StylusDevice" Usage="System.Windows.Input.Stylus.CurrentStylusDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71b08-192">获取当前正在使用的触笔。</span><span class="sxs-lookup"><span data-stu-id="71b08-192">Gets the stylus that represents the stylus currently in use.</span></span></summary>
        <value><span data-ttu-id="71b08-193"><see cref="T:System.Windows.Input.StylusDevice" />，表示当前正在使用的触笔。</span><span class="sxs-lookup"><span data-stu-id="71b08-193">The <see cref="T:System.Windows.Input.StylusDevice" /> that represents the stylus currently in use.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="71b08-194">下面的示例演示如何清除使用反转的触笔选定的文本。</span><span class="sxs-lookup"><span data-stu-id="71b08-194">The following example demonstrates how to erase the text that is selected with an inverted stylus.</span></span> <span data-ttu-id="71b08-195">此示例假定存在一个名为 <xref:System.Windows.Controls.TextBox> 的 `textBox1` ，该事件已 <xref:System.Windows.Input.Stylus.StylusUpEvent> 连接到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-195">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.StylusUpEvent> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#8](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#8)]
 [!code-vb[StylusSamples#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectlyOver">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement DirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.IInputElement DirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.DirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DirectlyOver As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::IInputElement ^ DirectlyOver { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectlyOver : System.Windows.IInputElement" Usage="System.Windows.Input.Stylus.DirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71b08-196">获取触笔正下方的元素。</span><span class="sxs-lookup"><span data-stu-id="71b08-196">Gets the element that is directly beneath the stylus.</span></span></summary>
        <value><span data-ttu-id="71b08-197">触笔正下方的 <see cref="T:System.Windows.IInputElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-197">The <see cref="T:System.Windows.IInputElement" /> that is directly beneath the stylus.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="71b08-198">下面的示例演示如何确定触笔位于哪个元素上。</span><span class="sxs-lookup"><span data-stu-id="71b08-198">The following example demonstrates how to determine which element the stylus is positioned over.</span></span> <span data-ttu-id="71b08-199">此示例假定存在一个名为 <xref:System.Windows.Controls.TextBox> 的 `textBox1` ，该事件已 <xref:System.Windows.Input.Stylus.StylusInAirMove> 连接到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-199">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.StylusInAirMove> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#3](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#3)]
 [!code-vb[StylusSamples#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsFlicksEnabled">
      <MemberSignature Language="C#" Value="public static bool GetIsFlicksEnabled (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsFlicksEnabled(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.GetIsFlicksEnabled(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsFlicksEnabled (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsFlicksEnabled(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetIsFlicksEnabled : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Input.Stylus.GetIsFlicksEnabled element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-200">一个 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />，用于确定是否启用了笔势。</span><span class="sxs-lookup"><span data-stu-id="71b08-200">A <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to determine whether flicks are enabled.</span></span></param>
        <summary><span data-ttu-id="71b08-201">获取指定元素上 <see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" /> 附加属性的值。</span><span class="sxs-lookup"><span data-stu-id="71b08-201">Gets the value of the <see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" /> attached property on the specified element.</span></span></summary>
        <returns><span data-ttu-id="71b08-202">如果指定元素启用了笔势，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-202"><see langword="true" /> if the specified element has flicks enabled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b08-203">在 Windows Vista 中，笔势是一种可能的系统手势，是一种可以映射到导航或快捷方式命令的简短、快速的直线。</span><span class="sxs-lookup"><span data-stu-id="71b08-203">In Windows Vista, a flick, one of the possible system gestures, is a short, quick, straight stroke that can be mapped to a navigation or shortcut command.</span></span> <span data-ttu-id="71b08-204">默认情况下，在、和上禁用笔锋 <xref:System.Windows.Controls.InkCanvas> <xref:System.Windows.Controls.InkPresenter> <xref:System.Windows.Controls.Primitives.ScrollBar> 。</span><span class="sxs-lookup"><span data-stu-id="71b08-204">By default, flicks are disabled on the <xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, and <xref:System.Windows.Controls.Primitives.ScrollBar>.</span></span> <span data-ttu-id="71b08-205">对所有其他控件启用了笔势。</span><span class="sxs-lookup"><span data-stu-id="71b08-205">Flicks are enabled on all other controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71b08-206">下面的示例演示如何确定是否在上启用了笔势 <xref:System.Windows.Controls.Canvas> 。</span><span class="sxs-lookup"><span data-stu-id="71b08-206">The following example demonstrates how to determine whether flicks are enabled on a <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 [!code-csharp[GestureSample#6](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#6)]
 [!code-vb[GestureSample#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsPressAndHoldEnabled">
      <MemberSignature Language="C#" Value="public static bool GetIsPressAndHoldEnabled (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsPressAndHoldEnabled(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsPressAndHoldEnabled (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsPressAndHoldEnabled(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetIsPressAndHoldEnabled : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Input.Stylus.GetIsPressAndHoldEnabled element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-207">要确定是否为其启用了按住的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-207">A <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to determine whether press and hold is enabled.</span></span></param>
        <summary><span data-ttu-id="71b08-208">获取指定元素上 <see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" /> 附加属性的值。</span><span class="sxs-lookup"><span data-stu-id="71b08-208">Gets the value of the <see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" /> attached property on the specified element.</span></span></summary>
        <returns><span data-ttu-id="71b08-209">如果指定元素已启用了按住，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-209"><see langword="true" /> if the specified element has press and hold enabled; otherwise, <see langword="false" />;</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="71b08-210">下面的示例演示如何启用上的按住 <xref:System.Windows.Controls.Slider> 。</span><span class="sxs-lookup"><span data-stu-id="71b08-210">The following example demonstrates how to enable press and hold on a <xref:System.Windows.Controls.Slider>.</span></span> <span data-ttu-id="71b08-211">此示例假定存在一个名为 <xref:System.Windows.Controls.Slider> 的 `horizontalSlider1` 。</span><span class="sxs-lookup"><span data-stu-id="71b08-211">This example assumes that there is a <xref:System.Windows.Controls.Slider> called `horizontalSlider1`.</span></span>  
  
 [!code-csharp[StylusSamples#9](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#9)]
 [!code-vb[StylusSamples#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsTapFeedbackEnabled">
      <MemberSignature Language="C#" Value="public static bool GetIsTapFeedbackEnabled (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsTapFeedbackEnabled(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.GetIsTapFeedbackEnabled(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsTapFeedbackEnabled (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsTapFeedbackEnabled(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetIsTapFeedbackEnabled : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Input.Stylus.GetIsTapFeedbackEnabled element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-212">要确定是否为其启用了点击反馈的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-212">A <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to determine whether tap feedback enabled.</span></span></param>
        <summary><span data-ttu-id="71b08-213">获取指定元素上 <see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" /> 附加属性的值。</span><span class="sxs-lookup"><span data-stu-id="71b08-213">Gets the value of the <see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" /> attached property on the specified element.</span></span></summary>
        <returns><span data-ttu-id="71b08-214">如果指定元素启用了点击反馈，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-214"><see langword="true" /> if the specified element has tap feedback enabled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b08-215">在 Windows Vista 中，当用户点击控件时会发生短暂的动画。</span><span class="sxs-lookup"><span data-stu-id="71b08-215">In Windows Vista, a short animation occurs when the user taps the control.</span></span>  <span data-ttu-id="71b08-216">默认情况下，点击上的 "反馈" 处于禁用状态 <xref:System.Windows.Controls.InkCanvas> 。</span><span class="sxs-lookup"><span data-stu-id="71b08-216">By default, tap feedback is disabled on the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="71b08-217">它在所有其他控件上都处于启用状态。</span><span class="sxs-lookup"><span data-stu-id="71b08-217">It is enabled on all other controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71b08-218">下面的示例演示如何确定是否在上启用了分流反馈 <xref:System.Windows.Controls.Canvas> 。</span><span class="sxs-lookup"><span data-stu-id="71b08-218">The following example demonstrates how to determine whether tap feedback is enabled on a <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 [!code-csharp[GestureSample#5](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#5)]
 [!code-vb[GestureSample#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsTouchFeedbackEnabled">
      <MemberSignature Language="C#" Value="public static bool GetIsTouchFeedbackEnabled (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsTouchFeedbackEnabled(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.GetIsTouchFeedbackEnabled(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsTouchFeedbackEnabled (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsTouchFeedbackEnabled(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetIsTouchFeedbackEnabled : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Input.Stylus.GetIsTouchFeedbackEnabled element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-219">要在其上确定是否启用了触控输入反馈的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-219">A <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to determine whether touch input feedback enabled.</span></span></param>
        <summary><span data-ttu-id="71b08-220">获取指定元素上 <see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" /> 附加属性的值。</span><span class="sxs-lookup"><span data-stu-id="71b08-220">Gets the value of the <see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" /> attached property on the specified element.</span></span></summary>
        <returns><span data-ttu-id="71b08-221">如果启用了触控输入反馈，否则 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-221"><see langword="true" /> if touch input feedback is enabled, otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="71b08-222">下面的示例演示如何确定是否在上启用了分流反馈 <xref:System.Windows.Controls.InkCanvas> 。</span><span class="sxs-lookup"><span data-stu-id="71b08-222">The following example demonstrates how to determine whether tap feedback is enabled on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[GestureSample#7](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#7)]
 [!code-vb[GestureSample#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCapture">
      <MemberSignature Language="C#" Value="see AddGotStylusCaptureHandler, and RemoveGotStylusCaptureHandler" />
      <MemberSignature Language="ILAsm" Value="see AddGotStylusCaptureHandler, and RemoveGotStylusCaptureHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.GotStylusCapture" />
      <MemberSignature Language="VB.NET" Value="see AddGotStylusCaptureHandler, and RemoveGotStylusCaptureHandler" />
      <MemberSignature Language="F#" Value="see AddGotStylusCaptureHandler, and RemoveGotStylusCaptureHandler" Usage="see AddGotStylusCaptureHandler, and RemoveGotStylusCaptureHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71b08-223">在元素捕获到触笔事件时发生。</span><span class="sxs-lookup"><span data-stu-id="71b08-223">Occurs when an element captures the stylus events.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b08-224">这是一个附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-224">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-225">将附加事件作为路由事件实现。</span><span class="sxs-lookup"><span data-stu-id="71b08-225">implements attached events as routed events.</span></span> <span data-ttu-id="71b08-226">附加事件本质上是一种 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 语言概念，用来引用处理的事件，而这些事件本身并不定义事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-226">Attached events are, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> <span data-ttu-id="71b08-227">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]进一步扩展了附加事件的功能，从而允许它遍历路由。</span><span class="sxs-lookup"><span data-stu-id="71b08-227">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="71b08-228">附加事件在代码中没有直接处理语法;若要在代码中附加路由事件的处理程序，请使用指定的 Add \* 处理程序方法。</span><span class="sxs-lookup"><span data-stu-id="71b08-228">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="71b08-229">有关详细信息，请参阅 [附加事件概述](/dotnet/framework/wpf/advanced/attached-events-overview)。</span><span class="sxs-lookup"><span data-stu-id="71b08-229">For details, see [Attached Events Overview](/dotnet/framework/wpf/advanced/attached-events-overview).</span></span>  
  
<a name="routedEventInfo_GotStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="71b08-230">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="71b08-230">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="71b08-231">标识符字段</span><span class="sxs-lookup"><span data-stu-id="71b08-231">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.GotStylusCaptureEvent>|  
|<span data-ttu-id="71b08-232">路由策略</span><span class="sxs-lookup"><span data-stu-id="71b08-232">Routing strategy</span></span>|<span data-ttu-id="71b08-233">冒泡</span><span class="sxs-lookup"><span data-stu-id="71b08-233">Bubbling</span></span>|  
|<span data-ttu-id="71b08-234">委托</span><span class="sxs-lookup"><span data-stu-id="71b08-234">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="71b08-235">下面的示例演示如何 <xref:System.Windows.Controls.TextBox> 在 <xref:System.Windows.Controls.TextBox> 捕获和释放触笔事件时更改的背景色。</span><span class="sxs-lookup"><span data-stu-id="71b08-235">The following example demonstrates how to change the background color of a <xref:System.Windows.Controls.TextBox> when the <xref:System.Windows.Controls.TextBox> captures and releases stylus events.</span></span> <span data-ttu-id="71b08-236">此示例假定存在一个名为的文本框 `textBox1` ， <xref:System.Windows.Input.Stylus.GotStylusCapture> 并且和事件已 <xref:System.Windows.Input.Stylus.LostStylusCapture> 连接到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-236">This example assumes that there is a textbox called `textBox1`, and that the <xref:System.Windows.Input.Stylus.GotStylusCapture> and <xref:System.Windows.Input.Stylus.LostStylusCapture> events are connected to event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#10](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#10)]
 [!code-vb[StylusSamples#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="GotStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.GotStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.GotStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71b08-237">标识 <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> 附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-237">Identifies the <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFlicksEnabled">
      <MemberSignature Language="C#" Value="see GetIsFlicksEnabled, and SetIsFlicksEnabled" />
      <MemberSignature Language="ILAsm" Value="see GetIsFlicksEnabled, and SetIsFlicksEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.IsFlicksEnabled" />
      <MemberSignature Language="VB.NET" Value="see GetIsFlicksEnabled, and SetIsFlicksEnabled" />
      <MemberSignature Language="F#" Value="see GetIsFlicksEnabled, and SetIsFlicksEnabled" Usage="see GetIsFlicksEnabled, and SetIsFlicksEnabled" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71b08-238">获取或设置一个值，该值指示是否启用了笔势。</span><span class="sxs-lookup"><span data-stu-id="71b08-238">Gets or sets a value indicating whether flicks are enabled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b08-239">在中， [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)] 笔势是一种可能的系统手势，是一种可以映射到导航或快捷方式命令的简短、快速的直线。</span><span class="sxs-lookup"><span data-stu-id="71b08-239">In [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)], a flick, one of the possible system gestures, is a short, quick, straight stroke that can be mapped to a navigation or shortcut command.</span></span> <span data-ttu-id="71b08-240">默认情况下，在、和上禁用笔锋 <xref:System.Windows.Controls.InkCanvas> <xref:System.Windows.Controls.InkPresenter> <xref:System.Windows.Controls.Primitives.ScrollBar> 。</span><span class="sxs-lookup"><span data-stu-id="71b08-240">By default, flicks are disabled on the <xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, and <xref:System.Windows.Controls.Primitives.ScrollBar>.</span></span> <span data-ttu-id="71b08-241">对所有其他控件启用了笔势。</span><span class="sxs-lookup"><span data-stu-id="71b08-241">Flicks are enabled on all other controls.</span></span>  
  
<a name="dependencyPropertyInfo_IsFlicksEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="71b08-242">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="71b08-242">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="71b08-243">标识符字段</span><span class="sxs-lookup"><span data-stu-id="71b08-243">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.IsFlicksEnabledProperty>|  
|<span data-ttu-id="71b08-244">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="71b08-244">Metadata properties set to `true`</span></span>|<span data-ttu-id="71b08-245">无</span><span class="sxs-lookup"><span data-stu-id="71b08-245">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="71b08-246">下面的示例演示如何在上禁用笔锋 <xref:System.Windows.Controls.Canvas> 。</span><span class="sxs-lookup"><span data-stu-id="71b08-246">The following example demonstrates how to disable flicks on a <xref:System.Windows.Controls.Canvas>.</span></span>  

```xaml
<Canvas Name="canvas1" Stylus.IsFlicksEnabled="False" ></Canvas>
```
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFlicksEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFlicksEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFlicksEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.IsFlicksEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFlicksEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFlicksEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFlicksEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.Stylus.IsFlicksEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71b08-247">标识 <see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" /> 附加属性。</span><span class="sxs-lookup"><span data-stu-id="71b08-247">Identifies the <see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPressAndHoldEnabled">
      <MemberSignature Language="C#" Value="see GetIsPressAndHoldEnabled, and SetIsPressAndHoldEnabled" />
      <MemberSignature Language="ILAsm" Value="see GetIsPressAndHoldEnabled, and SetIsPressAndHoldEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
      <MemberSignature Language="VB.NET" Value="see GetIsPressAndHoldEnabled, and SetIsPressAndHoldEnabled" />
      <MemberSignature Language="F#" Value="see GetIsPressAndHoldEnabled, and SetIsPressAndHoldEnabled" Usage="see GetIsPressAndHoldEnabled, and SetIsPressAndHoldEnabled" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71b08-248">获取或设置一个值，该值指示是否启用了按住。</span><span class="sxs-lookup"><span data-stu-id="71b08-248">Gets or sets a values indicating whether press and hold is enabled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b08-249">按下将映射到鼠标右键单击。</span><span class="sxs-lookup"><span data-stu-id="71b08-249">Press and hold maps to a right-click on a mouse.</span></span> <span data-ttu-id="71b08-250">在中， [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)] 如果你预见到用户可能会在不想模拟右键单击的情况下关闭 tablet 笔，则可以对元素禁用此行为。</span><span class="sxs-lookup"><span data-stu-id="71b08-250">In [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)] you can disable this behavior on elements if you foresee a situation where the user might hold the tablet pen down without intending to simulate a right-click.</span></span>  
  
<a name="dependencyPropertyInfo_IsPressAndHoldEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="71b08-251">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="71b08-251">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="71b08-252">标识符字段</span><span class="sxs-lookup"><span data-stu-id="71b08-252">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.IsPressAndHoldEnabledProperty>|  
|<span data-ttu-id="71b08-253">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="71b08-253">Metadata properties set to `true`</span></span>|<span data-ttu-id="71b08-254">无</span><span class="sxs-lookup"><span data-stu-id="71b08-254">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="71b08-255">下面的示例演示如何启用上的按住 <xref:System.Windows.Controls.Slider> 。</span><span class="sxs-lookup"><span data-stu-id="71b08-255">The following example demonstrates how to enable press and hold on a <xref:System.Windows.Controls.Slider>.</span></span>  

```xaml
<Slider Name="horizontalSlider1" Stylus.IsPressAndHoldEnabled="True" />
```
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPressAndHoldEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsPressAndHoldEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsPressAndHoldEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.IsPressAndHoldEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsPressAndHoldEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsPressAndHoldEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsPressAndHoldEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.Stylus.IsPressAndHoldEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71b08-256">标识 <see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" /> 附加属性。</span><span class="sxs-lookup"><span data-stu-id="71b08-256">Identifies the <see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTapFeedbackEnabled">
      <MemberSignature Language="C#" Value="see GetIsTapFeedbackEnabled, and SetIsTapFeedbackEnabled" />
      <MemberSignature Language="ILAsm" Value="see GetIsTapFeedbackEnabled, and SetIsTapFeedbackEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" />
      <MemberSignature Language="VB.NET" Value="see GetIsTapFeedbackEnabled, and SetIsTapFeedbackEnabled" />
      <MemberSignature Language="F#" Value="see GetIsTapFeedbackEnabled, and SetIsTapFeedbackEnabled" Usage="see GetIsTapFeedbackEnabled, and SetIsTapFeedbackEnabled" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71b08-257">获取或设置一个值，该值指示是否启用了点击反馈。</span><span class="sxs-lookup"><span data-stu-id="71b08-257">Gets or sets whether a value indicating whether tap feedback is enabled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b08-258">在中 [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)] ，当用户点击控件时，将发生短暂动画。</span><span class="sxs-lookup"><span data-stu-id="71b08-258">In [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)], a short animation occurs when the user taps the control.</span></span> <span data-ttu-id="71b08-259">默认情况下，点击上的 "反馈" 处于禁用状态 <xref:System.Windows.Controls.InkCanvas> 。</span><span class="sxs-lookup"><span data-stu-id="71b08-259">By default, tap feedback is disabled on the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="71b08-260">它在所有其他控件上都处于启用状态。</span><span class="sxs-lookup"><span data-stu-id="71b08-260">It is enabled on all other controls.</span></span>  
  
<a name="dependencyPropertyInfo_IsTapFeedbackEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="71b08-261">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="71b08-261">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="71b08-262">标识符字段</span><span class="sxs-lookup"><span data-stu-id="71b08-262">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.IsTapFeedbackEnabledProperty>|  
|<span data-ttu-id="71b08-263">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="71b08-263">Metadata properties set to `true`</span></span>|<span data-ttu-id="71b08-264">无</span><span class="sxs-lookup"><span data-stu-id="71b08-264">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="71b08-265">下面的示例在上禁用点击反馈 <xref:System.Windows.Controls.Canvas> 。</span><span class="sxs-lookup"><span data-stu-id="71b08-265">The following example disables tap feedback on a <xref:System.Windows.Controls.Canvas>.</span></span>  

```xaml
<Canvas Name="canvas1" Stylus.IsTapFeedbackEnabled="False"></Canvas>
```
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTapFeedbackEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsTapFeedbackEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsTapFeedbackEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.IsTapFeedbackEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTapFeedbackEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsTapFeedbackEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTapFeedbackEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.Stylus.IsTapFeedbackEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71b08-266">标识 <see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" /> 附加属性。</span><span class="sxs-lookup"><span data-stu-id="71b08-266">Identifies the <see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTouchFeedbackEnabled">
      <MemberSignature Language="C#" Value="see GetIsTouchFeedbackEnabled, and SetIsTouchFeedbackEnabled" />
      <MemberSignature Language="ILAsm" Value="see GetIsTouchFeedbackEnabled, and SetIsTouchFeedbackEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" />
      <MemberSignature Language="VB.NET" Value="see GetIsTouchFeedbackEnabled, and SetIsTouchFeedbackEnabled" />
      <MemberSignature Language="F#" Value="see GetIsTouchFeedbackEnabled, and SetIsTouchFeedbackEnabled" Usage="see GetIsTouchFeedbackEnabled, and SetIsTouchFeedbackEnabled" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71b08-267">获取或设置一个值，该值指示是否启用了触摸反馈。</span><span class="sxs-lookup"><span data-stu-id="71b08-267">Gets or sets whether a value indicating whether touch feedback is enabled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b08-268">在中 [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)] ，当用户使用手指触摸控件时，会发生短暂的动画。</span><span class="sxs-lookup"><span data-stu-id="71b08-268">In [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)], a short animation occurs when the user touches the control with a finger.</span></span> <span data-ttu-id="71b08-269">默认情况下，上的触摸反馈处于禁用状态 <xref:System.Windows.Controls.InkCanvas> 。</span><span class="sxs-lookup"><span data-stu-id="71b08-269">By default, touch feedback is disabled on the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="71b08-270">它在所有其他控件上都处于启用状态。</span><span class="sxs-lookup"><span data-stu-id="71b08-270">It is enabled on all other controls.</span></span>  
  
<a name="dependencyPropertyInfo_IsTouchFeedbackEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="71b08-271">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="71b08-271">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="71b08-272">标识符字段</span><span class="sxs-lookup"><span data-stu-id="71b08-272">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.IsTouchFeedbackEnabledProperty>|  
|<span data-ttu-id="71b08-273">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="71b08-273">Metadata properties set to `true`</span></span>|<span data-ttu-id="71b08-274">无</span><span class="sxs-lookup"><span data-stu-id="71b08-274">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="71b08-275">下面的示例在上启用了触摸反馈 <xref:System.Windows.Controls.InkCanvas> 。</span><span class="sxs-lookup"><span data-stu-id="71b08-275">The following example enables touch feedback on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  

```xaml
<InkCanvas Name="inkCanvas1" Stylus.IsTouchFeedbackEnabled="True" />
```

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTouchFeedbackEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsTouchFeedbackEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsTouchFeedbackEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.IsTouchFeedbackEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTouchFeedbackEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsTouchFeedbackEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTouchFeedbackEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.Stylus.IsTouchFeedbackEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71b08-276">标识 <see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" /> 附加属性。</span><span class="sxs-lookup"><span data-stu-id="71b08-276">Identifies the <see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCapture">
      <MemberSignature Language="C#" Value="see AddLostStylusCaptureHandler, and RemoveLostStylusCaptureHandler" />
      <MemberSignature Language="ILAsm" Value="see AddLostStylusCaptureHandler, and RemoveLostStylusCaptureHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.LostStylusCapture" />
      <MemberSignature Language="VB.NET" Value="see AddLostStylusCaptureHandler, and RemoveLostStylusCaptureHandler" />
      <MemberSignature Language="F#" Value="see AddLostStylusCaptureHandler, and RemoveLostStylusCaptureHandler" Usage="see AddLostStylusCaptureHandler, and RemoveLostStylusCaptureHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71b08-277">在元素释放触笔事件时发生。</span><span class="sxs-lookup"><span data-stu-id="71b08-277">Occurs when an element releases stylus events.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b08-278">这是一个附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-278">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-279">将附加事件作为路由事件实现。</span><span class="sxs-lookup"><span data-stu-id="71b08-279">implements attached events as routed events.</span></span> <span data-ttu-id="71b08-280">附加事件本质上是一种 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 语言概念，它用于引用处理的事件，这些事件本身不是定义事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-280">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-281">进一步扩展了附加事件的功能，从而允许它遍历路由。</span><span class="sxs-lookup"><span data-stu-id="71b08-281">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="71b08-282">附加事件在代码中没有直接处理语法;若要在代码中附加路由事件的处理程序，请使用指定的 Add \* 处理程序方法。</span><span class="sxs-lookup"><span data-stu-id="71b08-282">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="71b08-283">有关详细信息，请参阅 [附加事件概述](/dotnet/framework/wpf/advanced/attached-events-overview)。</span><span class="sxs-lookup"><span data-stu-id="71b08-283">For details, see [Attached Events Overview](/dotnet/framework/wpf/advanced/attached-events-overview).</span></span>  
  
<a name="routedEventInfo_LostStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="71b08-284">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="71b08-284">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="71b08-285">标识符字段</span><span class="sxs-lookup"><span data-stu-id="71b08-285">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.LostStylusCaptureEvent>|  
|<span data-ttu-id="71b08-286">路由策略</span><span class="sxs-lookup"><span data-stu-id="71b08-286">Routing strategy</span></span>|<span data-ttu-id="71b08-287">冒泡</span><span class="sxs-lookup"><span data-stu-id="71b08-287">Bubbling</span></span>|  
|<span data-ttu-id="71b08-288">委托</span><span class="sxs-lookup"><span data-stu-id="71b08-288">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="71b08-289">下面的示例演示如何 <xref:System.Windows.Controls.TextBox> 在 <xref:System.Windows.Controls.TextBox> 捕获和释放触笔事件时更改的背景色。</span><span class="sxs-lookup"><span data-stu-id="71b08-289">The following example demonstrates how to change the background color of a <xref:System.Windows.Controls.TextBox> when the <xref:System.Windows.Controls.TextBox> captures and releases stylus events.</span></span> <span data-ttu-id="71b08-290">此示例假定存在一个名为的文本框 `textBox1` ，并且 <xref:System.Windows.Input.Stylus.GotStylusCapture> 和事件已 <xref:System.Windows.Input.Stylus.LostStylusCapture> 连接到该示例中的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-290">This example assumes that there is a textbox called `textBox1`, and that the <xref:System.Windows.Input.Stylus.GotStylusCapture> and <xref:System.Windows.Input.Stylus.LostStylusCapture> events are connected to the event handlers in the example.</span></span>  
  
 [!code-csharp[StylusSamples#10](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#10)]
 [!code-vb[StylusSamples#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="LostStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.LostStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.LostStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71b08-291">标识 <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> 附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-291">Identifies the <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="see AddPreviewStylusButtonDownHandler, and RemovePreviewStylusButtonDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusButtonDownHandler, and RemovePreviewStylusButtonDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusButtonDownHandler, and RemovePreviewStylusButtonDownHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusButtonDownHandler, and RemovePreviewStylusButtonDownHandler" Usage="see AddPreviewStylusButtonDownHandler, and RemovePreviewStylusButtonDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71b08-292">在用户按下触笔上的其中一个按钮时发生。</span><span class="sxs-lookup"><span data-stu-id="71b08-292">Occurs when the user presses one of the buttons on the stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b08-293">这是一个附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-293">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-294">将附加事件作为路由事件实现。</span><span class="sxs-lookup"><span data-stu-id="71b08-294">implements attached events as routed events.</span></span> <span data-ttu-id="71b08-295">附加事件本质上是一种 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 语言概念，它用于引用处理的事件，这些事件本身不是定义事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-295">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-296">进一步扩展了附加事件的功能，从而允许它遍历路由。</span><span class="sxs-lookup"><span data-stu-id="71b08-296">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="71b08-297">附加事件在代码中没有直接处理语法;若要在代码中附加路由事件的处理程序，请使用指定的 Add \* 处理程序方法。</span><span class="sxs-lookup"><span data-stu-id="71b08-297">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="71b08-298">有关详细信息，请参阅 [附加事件概述](/dotnet/framework/wpf/advanced/attached-events-overview)。</span><span class="sxs-lookup"><span data-stu-id="71b08-298">For details, see [Attached Events Overview](/dotnet/framework/wpf/advanced/attached-events-overview).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="71b08-299">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="71b08-299">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="71b08-300">标识符字段</span><span class="sxs-lookup"><span data-stu-id="71b08-300">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusButtonDownEvent>|  
|<span data-ttu-id="71b08-301">路由策略</span><span class="sxs-lookup"><span data-stu-id="71b08-301">Routing strategy</span></span>|<span data-ttu-id="71b08-302">隧道</span><span class="sxs-lookup"><span data-stu-id="71b08-302">Tunneling</span></span>|  
|<span data-ttu-id="71b08-303">委托</span><span class="sxs-lookup"><span data-stu-id="71b08-303">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="71b08-304">下面的示例演示如何确定哪个按钮引发了 <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown> 事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-304">The following example demonstrates how to determine which button raised the <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown> event.</span></span> <span data-ttu-id="71b08-305">此示例假定存在一个名为 <xref:System.Windows.Controls.TextBox> 的 `textBox1` ，该事件已 <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown> 连接到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-305">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#13](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#13)]
 [!code-vb[StylusSamples#13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71b08-306">标识 <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> 附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-306">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="see AddPreviewStylusButtonUpHandler, and RemovePreviewStylusButtonUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusButtonUpHandler, and RemovePreviewStylusButtonUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusButtonUpHandler, and RemovePreviewStylusButtonUpHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusButtonUpHandler, and RemovePreviewStylusButtonUpHandler" Usage="see AddPreviewStylusButtonUpHandler, and RemovePreviewStylusButtonUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71b08-307">在用户松开触笔上的其中一个按钮时发生。</span><span class="sxs-lookup"><span data-stu-id="71b08-307">Occurs when the user releases one of the buttons on the stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b08-308">这是一个附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-308">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-309">将附加事件作为路由事件实现。</span><span class="sxs-lookup"><span data-stu-id="71b08-309">implements attached events as routed events.</span></span> <span data-ttu-id="71b08-310">附加事件本质上是一种 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 语言概念，它用于引用处理的事件，这些事件本身不是定义事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-310">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-311">进一步扩展了附加事件的功能，从而允许它遍历路由。</span><span class="sxs-lookup"><span data-stu-id="71b08-311">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="71b08-312">附加事件在代码中没有直接处理语法;若要在代码中附加路由事件的处理程序，请使用指定的 Add \* 处理程序方法。</span><span class="sxs-lookup"><span data-stu-id="71b08-312">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="71b08-313">有关详细信息，请参阅 [附加事件概述](/dotnet/framework/wpf/advanced/attached-events-overview)。</span><span class="sxs-lookup"><span data-stu-id="71b08-313">For details, see [Attached Events Overview](/dotnet/framework/wpf/advanced/attached-events-overview).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="71b08-314">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="71b08-314">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="71b08-315">标识符字段</span><span class="sxs-lookup"><span data-stu-id="71b08-315">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusButtonUpEvent>|  
|<span data-ttu-id="71b08-316">路由策略</span><span class="sxs-lookup"><span data-stu-id="71b08-316">Routing strategy</span></span>|<span data-ttu-id="71b08-317">隧道</span><span class="sxs-lookup"><span data-stu-id="71b08-317">Tunneling</span></span>|  
|<span data-ttu-id="71b08-318">委托</span><span class="sxs-lookup"><span data-stu-id="71b08-318">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="71b08-319">下面的示例演示如何确定哪个按钮引发了 <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp> 事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-319">The following example demonstrates how to determine which button raised the <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp> event.</span></span> <span data-ttu-id="71b08-320">此示例假定存在一个名为 <xref:System.Windows.Controls.TextBox> 的 `textBox1` ，该事件已 <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp> 连接到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-320">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#14](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#14)]
 [!code-vb[StylusSamples#14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71b08-321">标识 <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> 附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-321">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDown">
      <MemberSignature Language="C#" Value="see AddPreviewStylusDownHandler, and RemovePreviewStylusDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusDownHandler, and RemovePreviewStylusDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusDown" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusDownHandler, and RemovePreviewStylusDownHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusDownHandler, and RemovePreviewStylusDownHandler" Usage="see AddPreviewStylusDownHandler, and RemovePreviewStylusDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71b08-322">在用户将触笔的笔尖与手写板接触时发生。</span><span class="sxs-lookup"><span data-stu-id="71b08-322">Occurs when user touches the tip of the stylus to the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b08-323">这是一个附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-323">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-324">将附加事件作为路由事件实现。</span><span class="sxs-lookup"><span data-stu-id="71b08-324">implements attached events as routed events.</span></span> <span data-ttu-id="71b08-325">附加事件本质上是一种 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 语言概念，它用于引用处理的事件，这些事件本身不是定义事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-325">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-326">进一步扩展了附加事件的功能，从而允许它遍历路由。</span><span class="sxs-lookup"><span data-stu-id="71b08-326">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="71b08-327">附加事件在代码中没有直接处理语法;若要在代码中附加路由事件的处理程序，请使用指定的 Add \* 处理程序方法。</span><span class="sxs-lookup"><span data-stu-id="71b08-327">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="71b08-328">有关详细信息，请参阅 [附加事件概述](/dotnet/framework/wpf/advanced/attached-events-overview)。</span><span class="sxs-lookup"><span data-stu-id="71b08-328">For details, see [Attached Events Overview](/dotnet/framework/wpf/advanced/attached-events-overview).</span></span>  
  
<a name="routedEventInfo_PreviewStylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="71b08-329">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="71b08-329">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="71b08-330">标识符字段</span><span class="sxs-lookup"><span data-stu-id="71b08-330">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusDownEvent>|  
|<span data-ttu-id="71b08-331">路由策略</span><span class="sxs-lookup"><span data-stu-id="71b08-331">Routing strategy</span></span>|<span data-ttu-id="71b08-332">隧道</span><span class="sxs-lookup"><span data-stu-id="71b08-332">Tunneling</span></span>|  
|<span data-ttu-id="71b08-333">委托</span><span class="sxs-lookup"><span data-stu-id="71b08-333">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="71b08-334">下面的示例演示如何确保当用户将触笔与手写板接触时，不捕获触笔。</span><span class="sxs-lookup"><span data-stu-id="71b08-334">The following example demonstrates how to ensure that the stylus is not captured when the user touches the stylus to the tablet.</span></span> <span data-ttu-id="71b08-335">此示例假定事件已 <xref:System.Windows.Input.Stylus.PreviewStylusDown> 连接到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-335">This example assumes that the <xref:System.Windows.Input.Stylus.PreviewStylusDown> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#5](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#5)]
 [!code-vb[StylusSamples#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71b08-336">标识 <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> 附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-336">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="see AddPreviewStylusInAirMoveHandler, and RemovePreviewStylusInAirMoveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusInAirMoveHandler, and RemovePreviewStylusInAirMoveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusInAirMoveHandler, and RemovePreviewStylusInAirMoveHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusInAirMoveHandler, and RemovePreviewStylusInAirMoveHandler" Usage="see AddPreviewStylusInAirMoveHandler, and RemovePreviewStylusInAirMoveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71b08-337">当触笔在平板电脑范围内（但未接触）移动时发生。</span><span class="sxs-lookup"><span data-stu-id="71b08-337">Occurs if the stylus moves while it is within range of (but not touching) the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b08-338">这是一个附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-338">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-339">将附加事件作为路由事件实现。</span><span class="sxs-lookup"><span data-stu-id="71b08-339">implements attached events as routed events.</span></span> <span data-ttu-id="71b08-340">附加事件本质上是一种 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 语言概念，它用于引用处理的事件，这些事件本身不是定义事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-340">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-341">进一步扩展了附加事件的功能，从而允许它遍历路由。</span><span class="sxs-lookup"><span data-stu-id="71b08-341">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="71b08-342">附加事件在代码中没有直接处理语法;若要在代码中附加路由事件的处理程序，请使用指定的 Add \* 处理程序方法。</span><span class="sxs-lookup"><span data-stu-id="71b08-342">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="71b08-343">有关详细信息，请参阅 [附加事件概述](/dotnet/framework/wpf/advanced/attached-events-overview)。</span><span class="sxs-lookup"><span data-stu-id="71b08-343">For details, see [Attached Events Overview](/dotnet/framework/wpf/advanced/attached-events-overview).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="71b08-344">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="71b08-344">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="71b08-345">标识符字段</span><span class="sxs-lookup"><span data-stu-id="71b08-345">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusInAirMoveEvent>|  
|<span data-ttu-id="71b08-346">路由策略</span><span class="sxs-lookup"><span data-stu-id="71b08-346">Routing strategy</span></span>|<span data-ttu-id="71b08-347">隧道</span><span class="sxs-lookup"><span data-stu-id="71b08-347">Tunneling</span></span>|  
|<span data-ttu-id="71b08-348">委托</span><span class="sxs-lookup"><span data-stu-id="71b08-348">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="71b08-349">下面的示例演示如何确定触笔位于哪个元素上。</span><span class="sxs-lookup"><span data-stu-id="71b08-349">The following example demonstrates how to determine which element the stylus is positioned over.</span></span> <span data-ttu-id="71b08-350">此示例假设有一个被 <xref:System.Windows.Controls.TextBox> 调用的 `textBox1` ，并且该 <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove> 事件已连接到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-350">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#15](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#15)]
 [!code-vb[StylusSamples#15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71b08-351">标识 <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> 附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-351">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRange">
      <MemberSignature Language="C#" Value="see AddPreviewStylusInRangeHandler, and RemovePreviewStylusInRangeHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusInRangeHandler, and RemovePreviewStylusInRangeHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusInRange" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusInRangeHandler, and RemovePreviewStylusInRangeHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusInRangeHandler, and RemovePreviewStylusInRangeHandler" Usage="see AddPreviewStylusInRangeHandler, and RemovePreviewStylusInRangeHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71b08-352">在触笔进入绘图板范围时发生。</span><span class="sxs-lookup"><span data-stu-id="71b08-352">Occurs when the stylus comes within range of the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b08-353">这是一个附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-353">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-354">将附加事件作为路由事件实现。</span><span class="sxs-lookup"><span data-stu-id="71b08-354">implements attached events as routed events.</span></span> <span data-ttu-id="71b08-355">附加事件本质上是一种 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 语言概念，它用于引用处理的事件，这些事件本身不是定义事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-355">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-356">进一步扩展了附加事件的功能，从而允许它遍历路由。</span><span class="sxs-lookup"><span data-stu-id="71b08-356">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="71b08-357">附加事件在代码中没有直接处理语法;若要在代码中附加路由事件的处理程序，请使用指定的 Add \* 处理程序方法。</span><span class="sxs-lookup"><span data-stu-id="71b08-357">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="71b08-358">有关详细信息，请参阅 [附加事件概述](/dotnet/framework/wpf/advanced/attached-events-overview)。</span><span class="sxs-lookup"><span data-stu-id="71b08-358">For details, see [Attached Events Overview](/dotnet/framework/wpf/advanced/attached-events-overview).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="71b08-359">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="71b08-359">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="71b08-360">标识符字段</span><span class="sxs-lookup"><span data-stu-id="71b08-360">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusInRangeEvent>|  
|<span data-ttu-id="71b08-361">路由策略</span><span class="sxs-lookup"><span data-stu-id="71b08-361">Routing strategy</span></span>|<span data-ttu-id="71b08-362">隧道</span><span class="sxs-lookup"><span data-stu-id="71b08-362">Tunneling</span></span>|  
|<span data-ttu-id="71b08-363">委托</span><span class="sxs-lookup"><span data-stu-id="71b08-363">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="71b08-364">下面的示例演示如何确定触笔是否反转。</span><span class="sxs-lookup"><span data-stu-id="71b08-364">The following example demonstrates how to determine whether the stylus is inverted.</span></span> <span data-ttu-id="71b08-365">此示例假定存在一个名为 <xref:System.Windows.Controls.TextBox> 的 `textBox1` ，该事件已 <xref:System.Windows.Input.Stylus.PreviewStylusInRange> 连接到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-365">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusInRange> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#21](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#21)]
 [!code-vb[StylusSamples#21](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71b08-366">标识 <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> 附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-366">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMove">
      <MemberSignature Language="C#" Value="see AddPreviewStylusMoveHandler, and RemovePreviewStylusMoveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusMoveHandler, and RemovePreviewStylusMoveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusMove" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusMoveHandler, and RemovePreviewStylusMoveHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusMoveHandler, and RemovePreviewStylusMoveHandler" Usage="see AddPreviewStylusMoveHandler, and RemovePreviewStylusMoveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71b08-367">触笔接触平板电脑并移动时发生。</span><span class="sxs-lookup"><span data-stu-id="71b08-367">Occurs when the stylus moves while it is touching the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b08-368">这是一个附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-368">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-369">将附加事件作为路由事件实现。</span><span class="sxs-lookup"><span data-stu-id="71b08-369">implements attached events as routed events.</span></span> <span data-ttu-id="71b08-370">附加事件本质上是一种 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 语言概念，它用于引用处理的事件，这些事件本身不是定义事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-370">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-371">进一步扩展了附加事件的功能，从而允许它遍历路由。</span><span class="sxs-lookup"><span data-stu-id="71b08-371">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="71b08-372">附加事件在代码中没有直接处理语法;若要在代码中附加路由事件的处理程序，请使用指定的 Add \* 处理程序方法。</span><span class="sxs-lookup"><span data-stu-id="71b08-372">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="71b08-373">有关详细信息，请参阅 [附加事件概述](/dotnet/framework/wpf/advanced/attached-events-overview)。</span><span class="sxs-lookup"><span data-stu-id="71b08-373">For details, see [Attached Events Overview](/dotnet/framework/wpf/advanced/attached-events-overview).</span></span>  
  
<a name="routedEventInfo_PreviewStylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="71b08-374">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="71b08-374">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="71b08-375">标识符字段</span><span class="sxs-lookup"><span data-stu-id="71b08-375">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusMoveEvent>|  
|<span data-ttu-id="71b08-376">路由策略</span><span class="sxs-lookup"><span data-stu-id="71b08-376">Routing strategy</span></span>|<span data-ttu-id="71b08-377">隧道</span><span class="sxs-lookup"><span data-stu-id="71b08-377">Tunneling</span></span>|  
|<span data-ttu-id="71b08-378">委托</span><span class="sxs-lookup"><span data-stu-id="71b08-378">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="71b08-379">该示例演示如何在触笔移动时确定其位置。</span><span class="sxs-lookup"><span data-stu-id="71b08-379">The example demonstrates how to determine the position of the stylus when it moves.</span></span> <span data-ttu-id="71b08-380">此示例假定存在一个名为 <xref:System.Windows.Controls.TextBox> 的 `textBox1` ，该事件已 <xref:System.Windows.Input.Stylus.PreviewStylusMove> 连接到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-380">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusMove> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#16](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#16)]
 [!code-vb[StylusSamples#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusMove" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71b08-381">标识 <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> 附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-381">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="see AddPreviewStylusOutOfRangeHandler, and RemovePreviewStylusOutOfRangeHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusOutOfRangeHandler, and RemovePreviewStylusOutOfRangeHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusOutOfRangeHandler, and RemovePreviewStylusOutOfRangeHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusOutOfRangeHandler, and RemovePreviewStylusOutOfRangeHandler" Usage="see AddPreviewStylusOutOfRangeHandler, and RemovePreviewStylusOutOfRangeHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71b08-382">在触笔超出绘图板范围时发生。</span><span class="sxs-lookup"><span data-stu-id="71b08-382">Occurs when the stylus goes out of range of the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b08-383">这是一个附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-383">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-384">将附加事件作为路由事件实现。</span><span class="sxs-lookup"><span data-stu-id="71b08-384">implements attached events as routed events.</span></span> <span data-ttu-id="71b08-385">附加事件本质上是一种 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 语言概念，它用于引用处理的事件，这些事件本身不是定义事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-385">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-386">进一步扩展了附加事件的功能，从而允许它遍历路由。</span><span class="sxs-lookup"><span data-stu-id="71b08-386">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="71b08-387">附加事件在代码中没有直接处理语法;若要在代码中附加路由事件的处理程序，请使用指定的 Add \* 处理程序方法。</span><span class="sxs-lookup"><span data-stu-id="71b08-387">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="71b08-388">有关详细信息，请参阅 [附加事件概述](/dotnet/framework/wpf/advanced/attached-events-overview)。</span><span class="sxs-lookup"><span data-stu-id="71b08-388">For details, see [Attached Events Overview](/dotnet/framework/wpf/advanced/attached-events-overview).</span></span>  
  
<a name="routedEventInfo_PreviewStylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="71b08-389">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="71b08-389">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="71b08-390">标识符字段</span><span class="sxs-lookup"><span data-stu-id="71b08-390">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusOutOfRangeEvent>|  
|<span data-ttu-id="71b08-391">路由策略</span><span class="sxs-lookup"><span data-stu-id="71b08-391">Routing strategy</span></span>|<span data-ttu-id="71b08-392">隧道</span><span class="sxs-lookup"><span data-stu-id="71b08-392">Tunneling</span></span>|  
|<span data-ttu-id="71b08-393">委托</span><span class="sxs-lookup"><span data-stu-id="71b08-393">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="71b08-394">下面的示例演示如何确定触笔是否反转。</span><span class="sxs-lookup"><span data-stu-id="71b08-394">The following example demonstrates how to determine whether the stylus is inverted.</span></span> <span data-ttu-id="71b08-395">此示例假定存在一个名为的 <xref:System.Windows.Controls.TextBox> `textBox1` ，该 <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange> 事件已连接到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-395">This example assumes there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#20](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#20)]
 [!code-vb[StylusSamples#20](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71b08-396">标识 <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> 附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-396">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="see AddPreviewStylusSystemGestureHandler, and RemovePreviewStylusSystemGestureHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusSystemGestureHandler, and RemovePreviewStylusSystemGestureHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusSystemGestureHandler, and RemovePreviewStylusSystemGestureHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusSystemGestureHandler, and RemovePreviewStylusSystemGestureHandler" Usage="see AddPreviewStylusSystemGestureHandler, and RemovePreviewStylusSystemGestureHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71b08-397">在用户使用此触笔生成系统笔势时发生。</span><span class="sxs-lookup"><span data-stu-id="71b08-397">Occurs when the user makes a system gesture with this stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b08-398">这是一个附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-398">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-399">将附加事件作为路由事件实现。</span><span class="sxs-lookup"><span data-stu-id="71b08-399">implements attached events as routed events.</span></span> <span data-ttu-id="71b08-400">附加事件本质上是一种 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 语言概念，它用于引用处理的事件，这些事件本身不是定义事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-400">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-401">进一步扩展了附加事件的功能，从而允许它遍历路由。</span><span class="sxs-lookup"><span data-stu-id="71b08-401">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="71b08-402">附加事件在代码中没有直接处理语法;若要在代码中附加路由事件的处理程序，请使用指定的 Add \* 处理程序方法。</span><span class="sxs-lookup"><span data-stu-id="71b08-402">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="71b08-403">有关详细信息，请参阅 [附加事件概述](/dotnet/framework/wpf/advanced/attached-events-overview)。</span><span class="sxs-lookup"><span data-stu-id="71b08-403">For details, see [Attached Events Overview](/dotnet/framework/wpf/advanced/attached-events-overview).</span></span>  
  
<a name="routedEventInfo_PreviewStylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="71b08-404">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="71b08-404">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="71b08-405">标识符字段</span><span class="sxs-lookup"><span data-stu-id="71b08-405">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusSystemGestureEvent>|  
|<span data-ttu-id="71b08-406">路由策略</span><span class="sxs-lookup"><span data-stu-id="71b08-406">Routing strategy</span></span>|<span data-ttu-id="71b08-407">隧道</span><span class="sxs-lookup"><span data-stu-id="71b08-407">Tunneling</span></span>|  
|<span data-ttu-id="71b08-408">委托</span><span class="sxs-lookup"><span data-stu-id="71b08-408">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="71b08-409">下面的示例演示如何确定引发事件的系统手势 <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture> 。</span><span class="sxs-lookup"><span data-stu-id="71b08-409">The following example demonstrates how to determine the system gesture that raised the <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture> event.</span></span> <span data-ttu-id="71b08-410">此示例假定存在一个名为 <xref:System.Windows.Controls.TextBox> 的 `textBox1` ，该事件已 <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture> 连接到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-410">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#17](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#17)]
 [!code-vb[StylusSamples#17](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71b08-411">标识 <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> 附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-411">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUp">
      <MemberSignature Language="C#" Value="see AddPreviewStylusUpHandler, and RemovePreviewStylusUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusUpHandler, and RemovePreviewStylusUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusUp" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusUpHandler, and RemovePreviewStylusUpHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusUpHandler, and RemovePreviewStylusUpHandler" Usage="see AddPreviewStylusUpHandler, and RemovePreviewStylusUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71b08-412">当用户将触笔从平板电脑上提起时发生。</span><span class="sxs-lookup"><span data-stu-id="71b08-412">Occurs when the user lifts the stylus from the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b08-413">这是一个附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-413">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-414">将附加事件作为路由事件实现。</span><span class="sxs-lookup"><span data-stu-id="71b08-414">implements attached events as routed events.</span></span> <span data-ttu-id="71b08-415">附加事件本质上是一种 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 语言概念，它用于引用处理的事件，这些事件本身不是定义事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-415">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-416">进一步扩展了附加事件的功能，从而允许它遍历路由。</span><span class="sxs-lookup"><span data-stu-id="71b08-416">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="71b08-417">附加事件在代码中没有直接处理语法;若要在代码中附加路由事件的处理程序，请使用指定的 Add \* 处理程序方法。</span><span class="sxs-lookup"><span data-stu-id="71b08-417">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="71b08-418">有关详细信息，请参阅 [附加事件概述](/dotnet/framework/wpf/advanced/attached-events-overview)。</span><span class="sxs-lookup"><span data-stu-id="71b08-418">For details, see [Attached Events Overview](/dotnet/framework/wpf/advanced/attached-events-overview).</span></span>  
  
<a name="routedEventInfo_PreviewStylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="71b08-419">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="71b08-419">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="71b08-420">标识符字段</span><span class="sxs-lookup"><span data-stu-id="71b08-420">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusUpEvent>|  
|<span data-ttu-id="71b08-421">路由策略</span><span class="sxs-lookup"><span data-stu-id="71b08-421">Routing strategy</span></span>|<span data-ttu-id="71b08-422">隧道</span><span class="sxs-lookup"><span data-stu-id="71b08-422">Tunneling</span></span>|  
|<span data-ttu-id="71b08-423">委托</span><span class="sxs-lookup"><span data-stu-id="71b08-423">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="71b08-424">下面的示例演示了当用户将触笔从平板电脑上提起时，如何确定触笔的位置。</span><span class="sxs-lookup"><span data-stu-id="71b08-424">The following example demonstrates how to determine the position of the stylus when the user lifts it from the tablet.</span></span> <span data-ttu-id="71b08-425">此示例假定存在一个名为 <xref:System.Windows.Controls.TextBox> 的 `textBox1` ，该事件已 <xref:System.Windows.Input.Stylus.PreviewStylusUp> 连接到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-425">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusUp> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#22](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#22)]
 [!code-vb[StylusSamples#22](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#22)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71b08-426">标识 <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> 附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-426">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGotStylusCaptureHandler">
      <MemberSignature Language="C#" Value="public static void RemoveGotStylusCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveGotStylusCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveGotStylusCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveGotStylusCaptureHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveGotStylusCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveGotStylusCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveGotStylusCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-427">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-427">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-428">要移除的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-428">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="71b08-429">移除 <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> 附加事件的处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-429">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveLostStylusCaptureHandler">
      <MemberSignature Language="C#" Value="public static void RemoveLostStylusCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveLostStylusCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveLostStylusCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveLostStylusCaptureHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveLostStylusCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveLostStylusCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveLostStylusCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-430">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-430">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-431">要移除的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-431">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="71b08-432">移除 <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> 附加事件的处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-432">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusButtonDownHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusButtonDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusButtonDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusButtonDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusButtonDownHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusButtonDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusButtonDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusButtonDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-433">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-433">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-434">要移除的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-434">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="71b08-435">移除 <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> 附加事件的处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-435">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusButtonUpHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusButtonUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusButtonUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusButtonUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusButtonUpHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusButtonUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusButtonUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusButtonUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-436">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-436">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-437">要移除的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-437">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="71b08-438">移除 <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> 附加事件的处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-438">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusDownHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusDownEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusDownEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusDownEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusDownHandler (element As DependencyObject, handler As StylusDownEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusDownEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusDownEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusDownEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-439">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-439">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-440">要移除的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-440">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="71b08-441">移除 <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> 附加事件的处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-441">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusInAirMoveHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusInAirMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusInAirMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusInAirMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusInAirMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusInAirMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusInAirMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusInAirMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-442">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-442">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-443">要移除的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-443">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="71b08-444">移除 <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> 附加事件的处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-444">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusInRangeHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusInRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusInRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusInRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusInRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusInRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusInRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusInRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-445">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-445">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-446">要移除的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-446">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="71b08-447">移除 <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> 附加事件的处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-447">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusMoveHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-448">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-448">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-449">要移除的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-449">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="71b08-450">移除 <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> 附加事件的处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-450">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusOutOfRangeHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusOutOfRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusOutOfRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusOutOfRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusOutOfRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusOutOfRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusOutOfRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusOutOfRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-451">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-451">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-452">要移除的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-452">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="71b08-453">移除 <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> 附加事件的处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-453">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusSystemGestureHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusSystemGestureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusSystemGestureEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusSystemGestureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusSystemGestureEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusSystemGestureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusSystemGestureEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusSystemGestureHandler (element As DependencyObject, handler As StylusSystemGestureEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusSystemGestureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusSystemGestureEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusSystemGestureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusSystemGestureEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusSystemGestureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusSystemGestureEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-454">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-454">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-455">要移除的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-455">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="71b08-456">移除 <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> 附加事件的处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-456">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusUpHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusUpHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-457">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-457">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-458">要移除的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-458">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="71b08-459">移除 <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> 附加事件的处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-459">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusButtonDownHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusButtonDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusButtonDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusButtonDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusButtonDownHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusButtonDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusButtonDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusButtonDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-460">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-460">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-461">要移除的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-461">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="71b08-462">移除 <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> 附加事件的处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-462">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusButtonUpHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusButtonUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusButtonUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusButtonUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusButtonUpHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusButtonUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusButtonUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusButtonUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-463">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-463">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-464">要移除的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-464">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="71b08-465">移除 <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> 附加事件的处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-465">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusDownHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusDownEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusDownEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusDownEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusDownHandler (element As DependencyObject, handler As StylusDownEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusDownEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusDownEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusDownEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-466">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-466">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-467">要移除的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-467">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="71b08-468">移除 <see cref="E:System.Windows.Input.Stylus.StylusDown" /> 附加事件的处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-468">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusEnterHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusEnterHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusEnterHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusEnterHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusEnterHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusEnterHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusEnterHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusEnterHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-469">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-469">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-470">要移除的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-470">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="71b08-471">移除 <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> 附加事件的处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-471">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusInAirMoveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusInAirMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusInAirMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusInAirMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusInAirMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusInAirMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusInAirMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusInAirMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-472">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-472">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-473">要移除的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-473">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="71b08-474">移除 <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> 附加事件的处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-474">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusInRangeHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusInRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusInRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusInRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusInRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusInRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusInRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusInRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-475">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-475">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-476">要移除的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-476">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="71b08-477">移除 <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> 附加事件的处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-477">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusLeaveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusLeaveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusLeaveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusLeaveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusLeaveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusLeaveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusLeaveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-478">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-478">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-479">要移除的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-479">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="71b08-480">移除 <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> 附加事件的处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-480">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusMoveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-481">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-481">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-482">要移除的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-482">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="71b08-483">移除 <see cref="E:System.Windows.Input.Stylus.StylusMove" /> 附加事件的处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-483">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusOutOfRangeHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusOutOfRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusOutOfRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusOutOfRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusOutOfRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusOutOfRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusOutOfRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusOutOfRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-484">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-484">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-485">要移除的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-485">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="71b08-486">移除 <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> 附加事件的处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-486">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusSystemGestureHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusSystemGestureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusSystemGestureEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusSystemGestureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusSystemGestureEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusSystemGestureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusSystemGestureEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusSystemGestureHandler (element As DependencyObject, handler As StylusSystemGestureEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusSystemGestureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusSystemGestureEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusSystemGestureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusSystemGestureEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusSystemGestureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusSystemGestureEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-487">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-487">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-488">要移除的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-488">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="71b08-489">移除 <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> 附加事件的处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-489">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusUpHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusUpHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-490">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-490">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="71b08-491">要移除的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-491">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="71b08-492">移除 <see cref="E:System.Windows.Input.Stylus.StylusUp" /> 附加事件的处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-492">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsFlicksEnabled">
      <MemberSignature Language="C#" Value="public static void SetIsFlicksEnabled (System.Windows.DependencyObject element, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsFlicksEnabled(class System.Windows.DependencyObject element, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.SetIsFlicksEnabled(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsFlicksEnabled (element As DependencyObject, enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsFlicksEnabled(System::Windows::DependencyObject ^ element, bool enabled);" />
      <MemberSignature Language="F#" Value="static member SetIsFlicksEnabled : System.Windows.DependencyObject * bool -&gt; unit" Usage="System.Windows.Input.Stylus.SetIsFlicksEnabled (element, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-493">要为其启用笔势的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-493">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to enable flicks.</span></span></param>
        <param name="enabled"><span data-ttu-id="71b08-494">如果启用笔势，则为 <see langword="true" />；如果禁用笔势，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-494"><see langword="true" /> to enable flicks; <see langword="false" /> to disable flicks.</span></span></param>
        <summary><span data-ttu-id="71b08-495">获取指定元素上 <see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" /> 附加属性的值。</span><span class="sxs-lookup"><span data-stu-id="71b08-495">Gets the value of the <see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" /> attached property on the specified element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b08-496">在 Windows Vista 中，笔势是一种可能的系统手势，是一种可以映射到导航或快捷方式命令的简短、快速的直线。</span><span class="sxs-lookup"><span data-stu-id="71b08-496">In Windows Vista, a flick, one of the possible system gestures, is a short, quick, straight stroke that can be mapped to a navigation or shortcut command.</span></span> <span data-ttu-id="71b08-497">默认情况下，在、和上禁用笔锋 <xref:System.Windows.Controls.InkCanvas> <xref:System.Windows.Controls.InkPresenter> <xref:System.Windows.Controls.Primitives.ScrollBar> 。</span><span class="sxs-lookup"><span data-stu-id="71b08-497">By default, flicks are disabled on the <xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, and <xref:System.Windows.Controls.Primitives.ScrollBar>.</span></span> <span data-ttu-id="71b08-498">对所有其他控件启用了笔势。</span><span class="sxs-lookup"><span data-stu-id="71b08-498">Flicks are enabled on all other controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71b08-499">下面的示例演示如何在上禁用笔锋 <xref:System.Windows.Controls.Canvas> 。</span><span class="sxs-lookup"><span data-stu-id="71b08-499">The following example demonstrates how to disable flicks on a <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 [!code-csharp[GestureSample#2](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#2)]
 [!code-vb[GestureSample#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsPressAndHoldEnabled">
      <MemberSignature Language="C#" Value="public static void SetIsPressAndHoldEnabled (System.Windows.DependencyObject element, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsPressAndHoldEnabled(class System.Windows.DependencyObject element, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsPressAndHoldEnabled (element As DependencyObject, enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsPressAndHoldEnabled(System::Windows::DependencyObject ^ element, bool enabled);" />
      <MemberSignature Language="F#" Value="static member SetIsPressAndHoldEnabled : System.Windows.DependencyObject * bool -&gt; unit" Usage="System.Windows.Input.Stylus.SetIsPressAndHoldEnabled (element, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-500">将对其启用按住的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-500">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to enable press and hold.</span></span></param>
        <param name="enabled"><span data-ttu-id="71b08-501">若要启用按住，则为 <see langword="true" />；若要禁用按住，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-501"><see langword="true" /> to enable press and hold; <see langword="false" /> to disable press and hold.</span></span></param>
        <summary><span data-ttu-id="71b08-502">设置指定元素上的 <see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" /> 附加属性的值。</span><span class="sxs-lookup"><span data-stu-id="71b08-502">Sets the value of the <see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" /> attached property on the specified element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b08-503">按住地图，然后单击鼠标右键。</span><span class="sxs-lookup"><span data-stu-id="71b08-503">Press and hold maps to the right-click on a mouse.</span></span> <span data-ttu-id="71b08-504">在 Windows Vista 中，你可以对元素禁用此行为，前提是你预见到，用户可能会在不想模拟右键单击的情况下按住 tablet 笔。</span><span class="sxs-lookup"><span data-stu-id="71b08-504">In Windows Vista, you can disable this behavior on elements if you foresee a situation where the user might hold the tablet pen down without intending to simulate a right-click.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71b08-505">下面的示例演示如何启用上的按住 <xref:System.Windows.Controls.Slider> 。</span><span class="sxs-lookup"><span data-stu-id="71b08-505">The following example demonstrates how to enable press and hold on a <xref:System.Windows.Controls.Slider>.</span></span> <span data-ttu-id="71b08-506">此示例假定存在一个名为 <xref:System.Windows.Controls.Slider> 的 `horizontalSlider1` 。</span><span class="sxs-lookup"><span data-stu-id="71b08-506">This example assumes that there is a <xref:System.Windows.Controls.Slider> called `horizontalSlider1`.</span></span>  
  
 [!code-csharp[StylusSamples#9](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#9)]
 [!code-vb[StylusSamples#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsTapFeedbackEnabled">
      <MemberSignature Language="C#" Value="public static void SetIsTapFeedbackEnabled (System.Windows.DependencyObject element, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsTapFeedbackEnabled(class System.Windows.DependencyObject element, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.SetIsTapFeedbackEnabled(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsTapFeedbackEnabled (element As DependencyObject, enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsTapFeedbackEnabled(System::Windows::DependencyObject ^ element, bool enabled);" />
      <MemberSignature Language="F#" Value="static member SetIsTapFeedbackEnabled : System.Windows.DependencyObject * bool -&gt; unit" Usage="System.Windows.Input.Stylus.SetIsTapFeedbackEnabled (element, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-507">要为其启用点击反馈的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-507">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to enable tap feedback.</span></span></param>
        <param name="enabled"><span data-ttu-id="71b08-508">若要启用点击反馈，则为 <see langword="true" />；若要禁用点击反馈，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-508"><see langword="true" /> to enable tap feedback; <see langword="false" /> to disable tap feedback.</span></span></param>
        <summary><span data-ttu-id="71b08-509">设置指定元素上的 <see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" /> 附加属性的值。</span><span class="sxs-lookup"><span data-stu-id="71b08-509">Sets the value of the <see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" /> attached property on the specified element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b08-510">在 Windows Vista 中，当用户点击控件时会发生短暂的动画。</span><span class="sxs-lookup"><span data-stu-id="71b08-510">In Windows Vista, a short animation occurs when the user taps the control.</span></span> <span data-ttu-id="71b08-511">默认情况下，点击上的 "反馈" 处于禁用状态 <xref:System.Windows.Controls.InkCanvas> 。</span><span class="sxs-lookup"><span data-stu-id="71b08-511">By default, tap feedback is disabled on the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="71b08-512">它在所有其他控件上都处于启用状态。</span><span class="sxs-lookup"><span data-stu-id="71b08-512">It is enabled on all other controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71b08-513">下面的示例在上禁用点击反馈 <xref:System.Windows.Controls.Canvas> 。</span><span class="sxs-lookup"><span data-stu-id="71b08-513">The following example disables tap feedback on a <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 [!code-csharp[GestureSample#4](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#4)]
 [!code-vb[GestureSample#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsTouchFeedbackEnabled">
      <MemberSignature Language="C#" Value="public static void SetIsTouchFeedbackEnabled (System.Windows.DependencyObject element, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsTouchFeedbackEnabled(class System.Windows.DependencyObject element, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.SetIsTouchFeedbackEnabled(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsTouchFeedbackEnabled (element As DependencyObject, enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsTouchFeedbackEnabled(System::Windows::DependencyObject ^ element, bool enabled);" />
      <MemberSignature Language="F#" Value="static member SetIsTouchFeedbackEnabled : System.Windows.DependencyObject * bool -&gt; unit" Usage="System.Windows.Input.Stylus.SetIsTouchFeedbackEnabled (element, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="71b08-514">要为其启用点击反馈的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-514">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to enable tap feedback.</span></span></param>
        <param name="enabled"><span data-ttu-id="71b08-515">如果启用触控输入反馈，则为 <see langword="true" />；如果禁用触控输入反馈，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71b08-515"><see langword="true" /> to enable touch input feedback; <see langword="false" /> to disable touch input feedback.</span></span></param>
        <summary><span data-ttu-id="71b08-516">设置指定元素上的 <see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" /> 附加属性的值。</span><span class="sxs-lookup"><span data-stu-id="71b08-516">Sets the value of the <see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" /> attached property on the specified element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="71b08-517">下面的示例在上启用了触摸反馈 <xref:System.Windows.Controls.InkCanvas> 。</span><span class="sxs-lookup"><span data-stu-id="71b08-517">The following example enables touch feedback on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[GestureSample#8](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#8)]
 [!code-vb[GestureSample#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDown">
      <MemberSignature Language="C#" Value="see AddStylusButtonDownHandler, and RemoveStylusButtonDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusButtonDownHandler, and RemoveStylusButtonDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="see AddStylusButtonDownHandler, and RemoveStylusButtonDownHandler" />
      <MemberSignature Language="F#" Value="see AddStylusButtonDownHandler, and RemoveStylusButtonDownHandler" Usage="see AddStylusButtonDownHandler, and RemoveStylusButtonDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71b08-518">在用户按下触笔上的其中一个按钮时发生。</span><span class="sxs-lookup"><span data-stu-id="71b08-518">Occurs when the user presses one of the buttons on the stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b08-519">这是一个附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-519">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-520">将附加事件作为路由事件实现。</span><span class="sxs-lookup"><span data-stu-id="71b08-520">implements attached events as routed events.</span></span> <span data-ttu-id="71b08-521">附加事件本质上是一种 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 语言概念，它用于引用处理的事件，这些事件本身不是定义事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-521">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-522">进一步扩展了附加事件的功能，从而允许它遍历路由。</span><span class="sxs-lookup"><span data-stu-id="71b08-522">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="71b08-523">附加事件在代码中没有直接处理语法;若要在代码中附加路由事件的处理程序，请使用指定的 Add \* 处理程序方法。</span><span class="sxs-lookup"><span data-stu-id="71b08-523">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="71b08-524">有关详细信息，请参阅 [附加事件概述](/dotnet/framework/wpf/advanced/attached-events-overview)。</span><span class="sxs-lookup"><span data-stu-id="71b08-524">For details, see [Attached Events Overview](/dotnet/framework/wpf/advanced/attached-events-overview).</span></span>  
  
<a name="routedEventInfo_StylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="71b08-525">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="71b08-525">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="71b08-526">标识符字段</span><span class="sxs-lookup"><span data-stu-id="71b08-526">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusButtonDownEvent>|  
|<span data-ttu-id="71b08-527">路由策略</span><span class="sxs-lookup"><span data-stu-id="71b08-527">Routing strategy</span></span>|<span data-ttu-id="71b08-528">冒泡</span><span class="sxs-lookup"><span data-stu-id="71b08-528">Bubbling</span></span>|  
|<span data-ttu-id="71b08-529">委托</span><span class="sxs-lookup"><span data-stu-id="71b08-529">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="71b08-530">下面的示例演示如何在用户按下触笔上的圆筒按钮时显示快捷菜单。</span><span class="sxs-lookup"><span data-stu-id="71b08-530">The following example demonstrates how to show a shortcut menu when the user presses the barrel button on a stylus.</span></span> <span data-ttu-id="71b08-531">此示例假定存在一个名为 <xref:System.Windows.Controls.TextBox> 的 `textBox1` 和一个调用的， <xref:System.Windows.Controls.ContextMenu> 并且该事件已 `textBoxContextMenu` <xref:System.Windows.Input.Stylus.StylusButtonDown> 连接到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-531">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and a <xref:System.Windows.Controls.ContextMenu> called `textBoxContextMenu`, and that the <xref:System.Windows.Input.Stylus.StylusButtonDown> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#2](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#2)]
 [!code-vb[StylusSamples#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71b08-532">标识 <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> 附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-532">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUp">
      <MemberSignature Language="C#" Value="see AddStylusButtonUpHandler, and RemoveStylusButtonUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusButtonUpHandler, and RemoveStylusButtonUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="see AddStylusButtonUpHandler, and RemoveStylusButtonUpHandler" />
      <MemberSignature Language="F#" Value="see AddStylusButtonUpHandler, and RemoveStylusButtonUpHandler" Usage="see AddStylusButtonUpHandler, and RemoveStylusButtonUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71b08-533">在用户松开触笔上的其中一个按钮时发生。</span><span class="sxs-lookup"><span data-stu-id="71b08-533">Occurs when the user releases one of the buttons on the stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b08-534">这是一个附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-534">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-535">将附加事件作为路由事件实现。</span><span class="sxs-lookup"><span data-stu-id="71b08-535">implements attached events as routed events.</span></span> <span data-ttu-id="71b08-536">附加事件本质上是一种 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 语言概念，它用于引用处理的事件，这些事件本身不是定义事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-536">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-537">进一步扩展了附加事件的功能，从而允许它遍历路由。</span><span class="sxs-lookup"><span data-stu-id="71b08-537">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="71b08-538">附加事件在代码中没有直接处理语法;若要在代码中附加路由事件的处理程序，请使用指定的 Add \* 处理程序方法。</span><span class="sxs-lookup"><span data-stu-id="71b08-538">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="71b08-539">有关详细信息，请参阅 [附加事件概述](/dotnet/framework/wpf/advanced/attached-events-overview)。</span><span class="sxs-lookup"><span data-stu-id="71b08-539">For details, see [Attached Events Overview](/dotnet/framework/wpf/advanced/attached-events-overview).</span></span>  
  
<a name="routedEventInfo_StylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="71b08-540">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="71b08-540">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="71b08-541">标识符字段</span><span class="sxs-lookup"><span data-stu-id="71b08-541">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusButtonUpEvent>|  
|<span data-ttu-id="71b08-542">路由策略</span><span class="sxs-lookup"><span data-stu-id="71b08-542">Routing strategy</span></span>|<span data-ttu-id="71b08-543">冒泡</span><span class="sxs-lookup"><span data-stu-id="71b08-543">Bubbling</span></span>|  
|<span data-ttu-id="71b08-544">委托</span><span class="sxs-lookup"><span data-stu-id="71b08-544">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="71b08-545">下面的示例演示当用户释放触笔上的圆筒形按钮时，如何复制选定的文本。</span><span class="sxs-lookup"><span data-stu-id="71b08-545">The following example demonstrates how to copy the selected text when the user releases the barrel button on a stylus.</span></span> <span data-ttu-id="71b08-546">此示例假设有一个被 <xref:System.Windows.Controls.TextBox> 调用的 `textBox1` ，并且该 <xref:System.Windows.Input.Stylus.StylusButtonUp> 事件已连接到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-546">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusButtonUp> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#11](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#11)]
 [!code-vb[StylusSamples#11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71b08-547">标识 <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> 附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-547">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDown">
      <MemberSignature Language="C#" Value="see AddStylusDownHandler, and RemoveStylusDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusDownHandler, and RemoveStylusDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusDown" />
      <MemberSignature Language="VB.NET" Value="see AddStylusDownHandler, and RemoveStylusDownHandler" />
      <MemberSignature Language="F#" Value="see AddStylusDownHandler, and RemoveStylusDownHandler" Usage="see AddStylusDownHandler, and RemoveStylusDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71b08-548">在用户将触笔的笔尖与手写板接触时发生。</span><span class="sxs-lookup"><span data-stu-id="71b08-548">Occurs when the user touches the tip of the stylus to the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b08-549">这是一个附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-549">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-550">将附加事件作为路由事件实现。</span><span class="sxs-lookup"><span data-stu-id="71b08-550">implements attached events as routed events.</span></span> <span data-ttu-id="71b08-551">附加事件本质上是一种 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 语言概念，它用于引用处理的事件，这些事件本身不是定义事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-551">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-552">进一步扩展了附加事件的功能，从而允许它遍历路由。</span><span class="sxs-lookup"><span data-stu-id="71b08-552">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="71b08-553">附加事件在代码中没有直接处理语法;若要在代码中附加路由事件的处理程序，请使用指定的 Add \* 处理程序方法。</span><span class="sxs-lookup"><span data-stu-id="71b08-553">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="71b08-554">有关详细信息，请参阅 [附加事件概述](/dotnet/framework/wpf/advanced/attached-events-overview)。</span><span class="sxs-lookup"><span data-stu-id="71b08-554">For details, see [Attached Events Overview](/dotnet/framework/wpf/advanced/attached-events-overview).</span></span>  
  
<a name="routedEventInfo_StylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="71b08-555">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="71b08-555">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="71b08-556">标识符字段</span><span class="sxs-lookup"><span data-stu-id="71b08-556">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusDownEvent>|  
|<span data-ttu-id="71b08-557">路由策略</span><span class="sxs-lookup"><span data-stu-id="71b08-557">Routing strategy</span></span>|<span data-ttu-id="71b08-558">冒泡</span><span class="sxs-lookup"><span data-stu-id="71b08-558">Bubbling</span></span>|  
|<span data-ttu-id="71b08-559">委托</span><span class="sxs-lookup"><span data-stu-id="71b08-559">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="71b08-560">下面的示例演示如何记录触笔的坐标，即使触笔离开的边界也是如此 <xref:System.Windows.Controls.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="71b08-560">The following example demonstrates how to record the coordinates of the stylus, even if the stylus leaves the bounds of a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="71b08-561">此示例假设有一个被 <xref:System.Windows.Controls.TextBox> 调用的 `textBox1` ，并且 <xref:System.Windows.Input.Stylus.StylusDown> 、 <xref:System.Windows.Input.Stylus.StylusUp> 和 <xref:System.Windows.Input.Stylus.StylusMove> 事件已连接到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-561">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, and <xref:System.Windows.Input.Stylus.StylusMove> events are connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[StylusSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusDown" />
      </Docs>
    </Member>
    <Member MemberName="StylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71b08-562">标识 <see cref="E:System.Windows.Input.Stylus.StylusDown" /> 附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-562">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnter">
      <MemberSignature Language="C#" Value="see AddStylusEnterHandler, and RemoveStylusEnterHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusEnterHandler, and RemoveStylusEnterHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusEnter" />
      <MemberSignature Language="VB.NET" Value="see AddStylusEnterHandler, and RemoveStylusEnterHandler" />
      <MemberSignature Language="F#" Value="see AddStylusEnterHandler, and RemoveStylusEnterHandler" Usage="see AddStylusEnterHandler, and RemoveStylusEnterHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71b08-563">触笔光标进入元素的边界时发生。</span><span class="sxs-lookup"><span data-stu-id="71b08-563">Occurs when the stylus cursor enters the bounds of an element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b08-564">这是一个附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-564">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-565">将附加事件作为路由事件实现。</span><span class="sxs-lookup"><span data-stu-id="71b08-565">implements attached events as routed events.</span></span> <span data-ttu-id="71b08-566">附加事件本质上是一种 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 语言概念，它用于引用处理的事件，这些事件本身不是定义事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-566">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-567">进一步扩展了附加事件的功能，从而允许它遍历路由。</span><span class="sxs-lookup"><span data-stu-id="71b08-567">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="71b08-568">附加事件在代码中没有直接处理语法;若要在代码中附加路由事件的处理程序，请使用指定的 Add \* 处理程序方法。</span><span class="sxs-lookup"><span data-stu-id="71b08-568">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="71b08-569">有关详细信息，请参阅 [附加事件概述](/dotnet/framework/wpf/advanced/attached-events-overview)。</span><span class="sxs-lookup"><span data-stu-id="71b08-569">For details, see [Attached Events Overview](/dotnet/framework/wpf/advanced/attached-events-overview).</span></span>  
  
<a name="routedEventInfo_StylusEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="71b08-570">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="71b08-570">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="71b08-571">标识符字段</span><span class="sxs-lookup"><span data-stu-id="71b08-571">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusEnterEvent>|  
|<span data-ttu-id="71b08-572">路由策略</span><span class="sxs-lookup"><span data-stu-id="71b08-572">Routing strategy</span></span>|<span data-ttu-id="71b08-573">直接</span><span class="sxs-lookup"><span data-stu-id="71b08-573">Direct</span></span>|  
|<span data-ttu-id="71b08-574">委托</span><span class="sxs-lookup"><span data-stu-id="71b08-574">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="71b08-575">下面的示例演示如何 <xref:System.Windows.Controls.Button> 在触笔光标进入和离开边界时更改的颜色。</span><span class="sxs-lookup"><span data-stu-id="71b08-575">The following example demonstrates how to change the color of a <xref:System.Windows.Controls.Button> when the stylus cursor enters and leaves its bounds.</span></span> <span data-ttu-id="71b08-576">此示例假设有一个被调用的， <xref:System.Windows.Controls.Button> `button1` <xref:System.Windows.Input.Stylus.StylusEnter> 并且和 <xref:System.Windows.Input.Stylus.StylusLeave> 事件已连接到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-576">This example assumes that there is a <xref:System.Windows.Controls.Button> called `button1` and that the <xref:System.Windows.Input.Stylus.StylusEnter> and <xref:System.Windows.Input.Stylus.StylusLeave> events are connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#4](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#4)]
 [!code-vb[StylusSamples#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusEnter" />
      </Docs>
    </Member>
    <Member MemberName="StylusEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71b08-577">标识 <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> 附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-577">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMove">
      <MemberSignature Language="C#" Value="see AddStylusInAirMoveHandler, and RemoveStylusInAirMoveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusInAirMoveHandler, and RemoveStylusInAirMoveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="see AddStylusInAirMoveHandler, and RemoveStylusInAirMoveHandler" />
      <MemberSignature Language="F#" Value="see AddStylusInAirMoveHandler, and RemoveStylusInAirMoveHandler" Usage="see AddStylusInAirMoveHandler, and RemoveStylusInAirMoveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71b08-578">当触笔在平板电脑范围内移动但不接触平板电脑时发生。</span><span class="sxs-lookup"><span data-stu-id="71b08-578">Occurs when the stylus moves while it is in range of, but not touching, the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b08-579">这是一个附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-579">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-580">将附加事件作为路由事件实现。</span><span class="sxs-lookup"><span data-stu-id="71b08-580">implements attached events as routed events.</span></span> <span data-ttu-id="71b08-581">附加事件本质上是一种 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 语言概念，它用于引用处理的事件，这些事件本身不是定义事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-581">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-582">进一步扩展了附加事件的功能，从而允许它遍历路由。</span><span class="sxs-lookup"><span data-stu-id="71b08-582">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="71b08-583">附加事件在代码中没有直接处理语法;若要在代码中附加路由事件的处理程序，请使用指定的 Add \* 处理程序方法。</span><span class="sxs-lookup"><span data-stu-id="71b08-583">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="71b08-584">有关详细信息，请参阅 [附加事件概述](/dotnet/framework/wpf/advanced/attached-events-overview)。</span><span class="sxs-lookup"><span data-stu-id="71b08-584">For details, see [Attached Events Overview](/dotnet/framework/wpf/advanced/attached-events-overview).</span></span>  
  
<a name="routedEventInfo_StylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="71b08-585">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="71b08-585">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="71b08-586">标识符字段</span><span class="sxs-lookup"><span data-stu-id="71b08-586">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusInAirMoveEvent>|  
|<span data-ttu-id="71b08-587">路由策略</span><span class="sxs-lookup"><span data-stu-id="71b08-587">Routing strategy</span></span>|<span data-ttu-id="71b08-588">冒泡</span><span class="sxs-lookup"><span data-stu-id="71b08-588">Bubbling</span></span>|  
|<span data-ttu-id="71b08-589">委托</span><span class="sxs-lookup"><span data-stu-id="71b08-589">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="71b08-590">下面的示例演示如何确定触笔位于哪个元素上。</span><span class="sxs-lookup"><span data-stu-id="71b08-590">The following example demonstrates how to determine which element the stylus is positioned over.</span></span> <span data-ttu-id="71b08-591">此示例假定存在一个名为 <xref:System.Windows.Controls.TextBox> 的 `textBox1` ，该事件已 <xref:System.Windows.Input.Stylus.StylusInAirMove> 连接到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-591">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.StylusInAirMove> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#3](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#3)]
 [!code-vb[StylusSamples#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71b08-592">标识 <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> 附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-592">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRange">
      <MemberSignature Language="C#" Value="see AddStylusInRangeHandler, and RemoveStylusInRangeHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusInRangeHandler, and RemoveStylusInRangeHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusInRange" />
      <MemberSignature Language="VB.NET" Value="see AddStylusInRangeHandler, and RemoveStylusInRangeHandler" />
      <MemberSignature Language="F#" Value="see AddStylusInRangeHandler, and RemoveStylusInRangeHandler" Usage="see AddStylusInRangeHandler, and RemoveStylusInRangeHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71b08-593">在触笔进入绘图板范围时发生。</span><span class="sxs-lookup"><span data-stu-id="71b08-593">Occurs when the stylus comes within range of the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b08-594">这是一个附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-594">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-595">将附加事件作为路由事件实现。</span><span class="sxs-lookup"><span data-stu-id="71b08-595">implements attached events as routed events.</span></span> <span data-ttu-id="71b08-596">附加事件本质上是一种 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 语言概念，它用于引用处理的事件，这些事件本身不是定义事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-596">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-597">进一步扩展了附加事件的功能，从而允许它遍历路由。</span><span class="sxs-lookup"><span data-stu-id="71b08-597">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="71b08-598">附加事件在代码中没有直接处理语法;若要在代码中附加路由事件的处理程序，请使用指定的 Add \* 处理程序方法。</span><span class="sxs-lookup"><span data-stu-id="71b08-598">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="71b08-599">有关详细信息，请参阅 [附加事件概述](/dotnet/framework/wpf/advanced/attached-events-overview)。</span><span class="sxs-lookup"><span data-stu-id="71b08-599">For details, see [Attached Events Overview](/dotnet/framework/wpf/advanced/attached-events-overview).</span></span>  
  
<a name="routedEventInfo_StylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="71b08-600">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="71b08-600">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="71b08-601">标识符字段</span><span class="sxs-lookup"><span data-stu-id="71b08-601">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusInRangeEvent>|  
|<span data-ttu-id="71b08-602">路由策略</span><span class="sxs-lookup"><span data-stu-id="71b08-602">Routing strategy</span></span>|<span data-ttu-id="71b08-603">冒泡</span><span class="sxs-lookup"><span data-stu-id="71b08-603">Bubbling</span></span>|  
|<span data-ttu-id="71b08-604">委托</span><span class="sxs-lookup"><span data-stu-id="71b08-604">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="71b08-605">下面的示例演示如何 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> <xref:System.Windows.Controls.InkCanvas> <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke> 在触笔反转时将的属性设置为。</span><span class="sxs-lookup"><span data-stu-id="71b08-605">The following example demonstrates how to set the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property of an <xref:System.Windows.Controls.InkCanvas> to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke> when the stylus is inverted.</span></span> <span data-ttu-id="71b08-606">此示例假定存在一个名为 <xref:System.Windows.Controls.InkCanvas> 的 `inkCanvas1` ，该事件已 <xref:System.Windows.Input.Stylus.StylusInRange> 连接到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-606">This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1` and that the <xref:System.Windows.Input.Stylus.StylusInRange> event is connected to the event handlers.</span></span> <span data-ttu-id="71b08-607">若要查看光标更改，请将 <xref:System.Windows.Controls.InkCanvas.UseCustomCursor%2A> 属性设置为 `true` "开" `inkCanvas1` 。</span><span class="sxs-lookup"><span data-stu-id="71b08-607">To see the cursor change, set the <xref:System.Windows.Controls.InkCanvas.UseCustomCursor%2A> property to `true` on `inkCanvas1`.</span></span>  
  
 [!code-csharp[StylusSamples#18](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window2.xaml.cs#18)]
 [!code-vb[StylusSamples#18](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window2.xaml.vb#18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="StylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71b08-608">标识 <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> 附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-608">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeave">
      <MemberSignature Language="C#" Value="see AddStylusLeaveHandler, and RemoveStylusLeaveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusLeaveHandler, and RemoveStylusLeaveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusLeave" />
      <MemberSignature Language="VB.NET" Value="see AddStylusLeaveHandler, and RemoveStylusLeaveHandler" />
      <MemberSignature Language="F#" Value="see AddStylusLeaveHandler, and RemoveStylusLeaveHandler" Usage="see AddStylusLeaveHandler, and RemoveStylusLeaveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71b08-609">在触笔光标离开元素边界时发生。</span><span class="sxs-lookup"><span data-stu-id="71b08-609">Occurs when the stylus cursor leaves the bounds of an element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b08-610">这是一个附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-610">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-611">将附加事件作为路由事件实现。</span><span class="sxs-lookup"><span data-stu-id="71b08-611">implements attached events as routed events.</span></span> <span data-ttu-id="71b08-612">附加事件本质上是一种 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 语言概念，它用于引用处理的事件，这些事件本身不是定义事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-612">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-613">进一步扩展了附加事件的功能，从而允许它遍历路由。</span><span class="sxs-lookup"><span data-stu-id="71b08-613">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="71b08-614">附加事件在代码中没有直接处理语法;若要在代码中附加路由事件的处理程序，请使用指定的 Add \* 处理程序方法。</span><span class="sxs-lookup"><span data-stu-id="71b08-614">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="71b08-615">有关详细信息，请参阅 [附加事件概述](/dotnet/framework/wpf/advanced/attached-events-overview)。</span><span class="sxs-lookup"><span data-stu-id="71b08-615">For details, see [Attached Events Overview](/dotnet/framework/wpf/advanced/attached-events-overview).</span></span>  
  
<a name="routedEventInfo_StylusLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="71b08-616">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="71b08-616">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="71b08-617">标识符字段</span><span class="sxs-lookup"><span data-stu-id="71b08-617">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusLeaveEvent>|  
|<span data-ttu-id="71b08-618">路由策略</span><span class="sxs-lookup"><span data-stu-id="71b08-618">Routing strategy</span></span>|<span data-ttu-id="71b08-619">直接</span><span class="sxs-lookup"><span data-stu-id="71b08-619">Direct</span></span>|  
|<span data-ttu-id="71b08-620">委托</span><span class="sxs-lookup"><span data-stu-id="71b08-620">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="71b08-621">下面的示例演示如何 <xref:System.Windows.Controls.Button> 在触笔光标进入和离开边界时更改的颜色。</span><span class="sxs-lookup"><span data-stu-id="71b08-621">The following example demonstrates how to change the color of a <xref:System.Windows.Controls.Button> when the stylus cursor enters and leaves its bounds.</span></span> <span data-ttu-id="71b08-622">此示例假设有一个被调用的， <xref:System.Windows.Controls.Button> `button1` <xref:System.Windows.Input.Stylus.StylusEnter> 并且和 <xref:System.Windows.Input.Stylus.StylusLeave> 事件已连接到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-622">This example assumes that there is a <xref:System.Windows.Controls.Button> called `button1` and that the <xref:System.Windows.Input.Stylus.StylusEnter> and <xref:System.Windows.Input.Stylus.StylusLeave> events are connected to event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#4](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#4)]
 [!code-vb[StylusSamples#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusLeave" />
      </Docs>
    </Member>
    <Member MemberName="StylusLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71b08-623">标识 <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> 附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-623">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMove">
      <MemberSignature Language="C#" Value="see AddStylusMoveHandler, and RemoveStylusMoveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusMoveHandler, and RemoveStylusMoveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusMove" />
      <MemberSignature Language="VB.NET" Value="see AddStylusMoveHandler, and RemoveStylusMoveHandler" />
      <MemberSignature Language="F#" Value="see AddStylusMoveHandler, and RemoveStylusMoveHandler" Usage="see AddStylusMoveHandler, and RemoveStylusMoveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71b08-624">触笔接触平板电脑并移动时发生。</span><span class="sxs-lookup"><span data-stu-id="71b08-624">Occurs when the stylus moves while it is touching the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b08-625">这是一个附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-625">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-626">将附加事件作为路由事件实现。</span><span class="sxs-lookup"><span data-stu-id="71b08-626">implements attached events as routed events.</span></span> <span data-ttu-id="71b08-627">附加事件本质上是一种 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 语言概念，它用于引用处理的事件，这些事件本身不是定义事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-627">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-628">进一步扩展了附加事件的功能，从而允许它遍历路由。</span><span class="sxs-lookup"><span data-stu-id="71b08-628">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="71b08-629">附加事件在代码中没有直接处理语法;若要在代码中附加路由事件的处理程序，请使用指定的 Add \* 处理程序方法。</span><span class="sxs-lookup"><span data-stu-id="71b08-629">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="71b08-630">有关详细信息，请参阅 [附加事件概述](/dotnet/framework/wpf/advanced/attached-events-overview)。</span><span class="sxs-lookup"><span data-stu-id="71b08-630">For details, see [Attached Events Overview](/dotnet/framework/wpf/advanced/attached-events-overview).</span></span>  
  
<a name="routedEventInfo_StylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="71b08-631">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="71b08-631">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="71b08-632">标识符字段</span><span class="sxs-lookup"><span data-stu-id="71b08-632">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusMoveEvent>|  
|<span data-ttu-id="71b08-633">路由策略</span><span class="sxs-lookup"><span data-stu-id="71b08-633">Routing strategy</span></span>|<span data-ttu-id="71b08-634">冒泡</span><span class="sxs-lookup"><span data-stu-id="71b08-634">Bubbling</span></span>|  
|<span data-ttu-id="71b08-635">委托</span><span class="sxs-lookup"><span data-stu-id="71b08-635">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="71b08-636">下面的示例演示如何记录触笔的坐标，即使触笔离开的边界也是如此 <xref:System.Windows.Controls.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="71b08-636">The following example demonstrates how to record the coordinates of the stylus, even if the stylus leaves the bounds of a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="71b08-637">此示例假设有一个被 <xref:System.Windows.Controls.TextBox> 调用的 `textBox1` ，并且 <xref:System.Windows.Input.Stylus.StylusDown> 、 <xref:System.Windows.Input.Stylus.StylusUp> 和 <xref:System.Windows.Input.Stylus.StylusMove> 事件已连接到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-637">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, and <xref:System.Windows.Input.Stylus.StylusMove> events are connected to event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[StylusSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusMove" />
      </Docs>
    </Member>
    <Member MemberName="StylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71b08-638">标识 <see cref="E:System.Windows.Input.Stylus.StylusMove" /> 附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-638">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRange">
      <MemberSignature Language="C#" Value="see AddStylusOutOfRangeHandler, and RemoveStylusOutOfRangeHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusOutOfRangeHandler, and RemoveStylusOutOfRangeHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="see AddStylusOutOfRangeHandler, and RemoveStylusOutOfRangeHandler" />
      <MemberSignature Language="F#" Value="see AddStylusOutOfRangeHandler, and RemoveStylusOutOfRangeHandler" Usage="see AddStylusOutOfRangeHandler, and RemoveStylusOutOfRangeHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71b08-639">在触笔超出绘图板范围时发生。</span><span class="sxs-lookup"><span data-stu-id="71b08-639">Occurs when the stylus goes out of range of the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b08-640">这是一个附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-640">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-641">将附加事件作为路由事件实现。</span><span class="sxs-lookup"><span data-stu-id="71b08-641">implements attached events as routed events.</span></span> <span data-ttu-id="71b08-642">附加事件本质上是一种 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 语言概念，它用于引用处理的事件，这些事件本身不是定义事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-642">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-643">进一步扩展了附加事件的功能，从而允许它遍历路由。</span><span class="sxs-lookup"><span data-stu-id="71b08-643">further expands an attached event's capabilities, allowing it to traverse a route.</span></span>  <span data-ttu-id="71b08-644">附加事件在代码中没有直接处理语法;若要在代码中附加路由事件的处理程序，请使用指定的 Add \* 处理程序方法。</span><span class="sxs-lookup"><span data-stu-id="71b08-644">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="71b08-645">有关详细信息，请参阅 [附加事件概述](/dotnet/framework/wpf/advanced/attached-events-overview)。</span><span class="sxs-lookup"><span data-stu-id="71b08-645">For details, see [Attached Events Overview](/dotnet/framework/wpf/advanced/attached-events-overview).</span></span>  
  
<a name="routedEventInfo_StylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="71b08-646">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="71b08-646">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="71b08-647">标识符字段</span><span class="sxs-lookup"><span data-stu-id="71b08-647">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusOutOfRangeEvent>|  
|<span data-ttu-id="71b08-648">路由策略</span><span class="sxs-lookup"><span data-stu-id="71b08-648">Routing strategy</span></span>|<span data-ttu-id="71b08-649">冒泡</span><span class="sxs-lookup"><span data-stu-id="71b08-649">Bubbling</span></span>|  
|<span data-ttu-id="71b08-650">委托</span><span class="sxs-lookup"><span data-stu-id="71b08-650">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="71b08-651">下面的示例演示如何在触笔超出范围时将光标更改为箭头。</span><span class="sxs-lookup"><span data-stu-id="71b08-651">The following example demonstrates how to change the cursor to an arrow when the stylus goes out of range.</span></span> <span data-ttu-id="71b08-652">此示例假定存在一个名为 <xref:System.Windows.Controls.InkCanvas> 的 `inkCanvas1` ，该事件已 <xref:System.Windows.Input.Stylus.StylusOutOfRange> 连接到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-652">This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1` and that the <xref:System.Windows.Input.Stylus.StylusOutOfRange> event is connected to an event handler.</span></span> <span data-ttu-id="71b08-653">若要查看光标更改，请将 <xref:System.Windows.Controls.InkCanvas.UseCustomCursor%2A> 属性设置为 `true` "开" `inkCanvas1` 。</span><span class="sxs-lookup"><span data-stu-id="71b08-653">To see the cursor change, set the <xref:System.Windows.Controls.InkCanvas.UseCustomCursor%2A> property to `true` on `inkCanvas1`.</span></span>  
  
 [!code-csharp[StylusSamples#19](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window2.xaml.cs#19)]
 [!code-vb[StylusSamples#19](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window2.xaml.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71b08-654">标识 <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> 附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-654">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGesture">
      <MemberSignature Language="C#" Value="see AddStylusSystemGestureHandler, and RemoveStylusSystemGestureHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusSystemGestureHandler, and RemoveStylusSystemGestureHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="see AddStylusSystemGestureHandler, and RemoveStylusSystemGestureHandler" />
      <MemberSignature Language="F#" Value="see AddStylusSystemGestureHandler, and RemoveStylusSystemGestureHandler" Usage="see AddStylusSystemGestureHandler, and RemoveStylusSystemGestureHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71b08-655">在用户使用此触笔生成系统笔势时发生。</span><span class="sxs-lookup"><span data-stu-id="71b08-655">Occurs when the user makes a system gesture with this stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b08-656">这是一个附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-656">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-657">将附加事件作为路由事件实现。</span><span class="sxs-lookup"><span data-stu-id="71b08-657">implements attached events as routed events.</span></span> <span data-ttu-id="71b08-658">附加事件本质上是一种 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 语言概念，它用于引用处理的事件，这些事件本身不是定义事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-658">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-659">进一步扩展了附加事件的功能，从而允许它遍历路由。</span><span class="sxs-lookup"><span data-stu-id="71b08-659">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="71b08-660">附加事件在代码中没有直接处理语法;若要在代码中附加路由事件的处理程序，请使用指定的 Add \* 处理程序方法。</span><span class="sxs-lookup"><span data-stu-id="71b08-660">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="71b08-661">有关详细信息，请参阅 [附加事件概述](/dotnet/framework/wpf/advanced/attached-events-overview)。</span><span class="sxs-lookup"><span data-stu-id="71b08-661">For details, see [Attached Events Overview](/dotnet/framework/wpf/advanced/attached-events-overview).</span></span>  
  
<a name="routedEventInfo_StylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="71b08-662">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="71b08-662">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="71b08-663">标识符字段</span><span class="sxs-lookup"><span data-stu-id="71b08-663">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusSystemGestureEvent>|  
|<span data-ttu-id="71b08-664">路由策略</span><span class="sxs-lookup"><span data-stu-id="71b08-664">Routing strategy</span></span>|<span data-ttu-id="71b08-665">冒泡</span><span class="sxs-lookup"><span data-stu-id="71b08-665">Bubbling</span></span>|  
|<span data-ttu-id="71b08-666">委托</span><span class="sxs-lookup"><span data-stu-id="71b08-666">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="71b08-667">下面的示例演示如何确定引发事件的系统手势 <xref:System.Windows.Input.Stylus.StylusSystemGesture> 。</span><span class="sxs-lookup"><span data-stu-id="71b08-667">The following example demonstrates how to determine the system gesture that raised the <xref:System.Windows.Input.Stylus.StylusSystemGesture> event.</span></span> <span data-ttu-id="71b08-668">此示例假定存在一个名为 <xref:System.Windows.Controls.TextBox> 的 `textBox1` ，该事件已 <xref:System.Windows.Input.Stylus.StylusSystemGesture> 连接到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-668">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.StylusSystemGesture> event is connected to an event handler.</span></span>  
  
 [!code-csharp[StylusSamples#12](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#12)]
 [!code-vb[StylusSamples#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71b08-669">标识 <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> 附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-669">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUp">
      <MemberSignature Language="C#" Value="see AddStylusUpHandler, and RemoveStylusUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusUpHandler, and RemoveStylusUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusUp" />
      <MemberSignature Language="VB.NET" Value="see AddStylusUpHandler, and RemoveStylusUpHandler" />
      <MemberSignature Language="F#" Value="see AddStylusUpHandler, and RemoveStylusUpHandler" Usage="see AddStylusUpHandler, and RemoveStylusUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71b08-670">当用户将触笔从平板电脑处抬起时发生。</span><span class="sxs-lookup"><span data-stu-id="71b08-670">Occurs when the user raises the stylus from the Tablet PC.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b08-671">这是一个附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-671">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-672">将附加事件作为路由事件实现。</span><span class="sxs-lookup"><span data-stu-id="71b08-672">implements attached events as routed events.</span></span> <span data-ttu-id="71b08-673">附加事件本质上是一种 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 语言概念，它用于引用处理的事件，这些事件本身不是定义事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-673">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="71b08-674">进一步扩展了附加事件的功能，从而允许它遍历路由。</span><span class="sxs-lookup"><span data-stu-id="71b08-674">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="71b08-675">附加事件在代码中没有直接处理语法;若要在代码中附加路由事件的处理程序，请使用指定的 Add \* 处理程序方法。</span><span class="sxs-lookup"><span data-stu-id="71b08-675">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="71b08-676">有关详细信息，请参阅 [附加事件概述](/dotnet/framework/wpf/advanced/attached-events-overview)。</span><span class="sxs-lookup"><span data-stu-id="71b08-676">For details, see [Attached Events Overview](/dotnet/framework/wpf/advanced/attached-events-overview).</span></span>  
  
<a name="routedEventInfo_StylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="71b08-677">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="71b08-677">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="71b08-678">标识符字段</span><span class="sxs-lookup"><span data-stu-id="71b08-678">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusUpEvent>|  
|<span data-ttu-id="71b08-679">路由策略</span><span class="sxs-lookup"><span data-stu-id="71b08-679">Routing strategy</span></span>|<span data-ttu-id="71b08-680">冒泡</span><span class="sxs-lookup"><span data-stu-id="71b08-680">Bubbling</span></span>|  
|<span data-ttu-id="71b08-681">委托</span><span class="sxs-lookup"><span data-stu-id="71b08-681">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="71b08-682">下面的示例演示如何记录触笔的坐标，即使触笔离开的边界也是如此 <xref:System.Windows.Controls.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="71b08-682">The following example demonstrates how to record the coordinates of the stylus, even if the stylus leaves the bounds of a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="71b08-683">此示例假设有一个被 <xref:System.Windows.Controls.TextBox> 调用的 `textBox1` ，并且 <xref:System.Windows.Input.Stylus.StylusDown> 、 <xref:System.Windows.Input.Stylus.StylusUp> 和 <xref:System.Windows.Input.Stylus.StylusMove> 事件已连接到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="71b08-683">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, and <xref:System.Windows.Input.Stylus.StylusMove> events are connected to event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[StylusSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusUp" />
      </Docs>
    </Member>
    <Member MemberName="StylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71b08-684">标识 <see cref="E:System.Windows.Input.Stylus.StylusUp" /> 附加事件。</span><span class="sxs-lookup"><span data-stu-id="71b08-684">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Synchronize">
      <MemberSignature Language="C#" Value="public static void Synchronize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Synchronize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.Synchronize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Synchronize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Synchronize();" />
      <MemberSignature Language="F#" Value="static member Synchronize : unit -&gt; unit" Usage="System.Windows.Input.Stylus.Synchronize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71b08-685">同步光标和用户界面。</span><span class="sxs-lookup"><span data-stu-id="71b08-685">Synchronizes the cursor and the user interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71b08-686">应用程序可能需要确定光标所在的元素。</span><span class="sxs-lookup"><span data-stu-id="71b08-686">Applications may need to determine the element on which the cursor is located.</span></span> <span data-ttu-id="71b08-687">如果应用程序使用动画，则该 <xref:System.Windows.Input.Stylus.DirectlyOver%2A> 方法可能会返回从光标下移出的元素。</span><span class="sxs-lookup"><span data-stu-id="71b08-687">If the application uses animation, the <xref:System.Windows.Input.Stylus.DirectlyOver%2A> method might return an element that has moved out from under the cursor.</span></span> <span data-ttu-id="71b08-688">调用 <xref:System.Windows.Input.Stylus.Synchronize%2A> 以确保 <xref:System.Windows.Input.Stylus.DirectlyOver%2A> 返回正确的元素。</span><span class="sxs-lookup"><span data-stu-id="71b08-688">Call <xref:System.Windows.Input.Stylus.Synchronize%2A> to be sure that <xref:System.Windows.Input.Stylus.DirectlyOver%2A> returns the proper element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71b08-689">下面的示例演示如何获取光标下的元素。</span><span class="sxs-lookup"><span data-stu-id="71b08-689">The following example demonstrates how to get the element that is under the cursor.</span></span> <span data-ttu-id="71b08-690">调用 <xref:System.Windows.Input.Stylus.Synchronize%2A> 可确保 <xref:System.Windows.Input.Stylus.DirectlyOver%2A> 返回正确的元素。</span><span class="sxs-lookup"><span data-stu-id="71b08-690">Calling <xref:System.Windows.Input.Stylus.Synchronize%2A> ensures that <xref:System.Windows.Input.Stylus.DirectlyOver%2A> returns the correct element.</span></span>  
  
 [!code-csharp[StylusSamples#24](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window2.xaml.cs#24)]
 [!code-vb[StylusSamples#24](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window2.xaml.vb#24)]  
[!code-csharp[StylusSamples#25](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window2.xaml.cs#25)]
[!code-vb[StylusSamples#25](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window2.xaml.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
