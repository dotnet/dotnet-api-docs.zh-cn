<Type Name="FocusManager" FullName="System.Windows.Input.FocusManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="01841e2b81535664aafdc65f9cbf13c166f99ee8" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86651116" /></Metadata><TypeSignature Language="C#" Value="public static class FocusManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FocusManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.FocusManager" />
  <TypeSignature Language="VB.NET" Value="Public Class FocusManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class FocusManager abstract sealed" />
  <TypeSignature Language="F#" Value="type FocusManager = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="50f37-101">提供一组静态方法、附加属性和事件，用于确定和设置焦点范围以及设置该范围内具有焦点的元素。</span><span class="sxs-lookup"><span data-stu-id="50f37-101">Provides a set of static methods, attached properties, and events for determining and setting focus scopes and for setting the focused element within the scope.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50f37-102">在 Windows Presentation Foundation (WPF) 有两个与焦点有关的概念：键盘焦点和逻辑焦点。</span><span class="sxs-lookup"><span data-stu-id="50f37-102">In Windows Presentation Foundation (WPF) there are two concepts concerning focus: keyboard focus and logical focus.</span></span>  
  
 <span data-ttu-id="50f37-103">键盘焦点适用于当前正在接收键盘输入的元素。</span><span class="sxs-lookup"><span data-stu-id="50f37-103">Keyboard focus pertains to the element that is currently receiving keyboard input.</span></span>  <span data-ttu-id="50f37-104">只能有一个具有键盘焦点的元素。</span><span class="sxs-lookup"><span data-stu-id="50f37-104">There can be only one element with keyboard focus.</span></span>  <span data-ttu-id="50f37-105">此具有键盘焦点的元素 <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> 设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="50f37-105">This element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="50f37-106"><xref:System.Windows.Input.Keyboard.FocusedElement%2A?displayProperty=nameWithType> 返回具有键盘焦点的元素。</span><span class="sxs-lookup"><span data-stu-id="50f37-106"><xref:System.Windows.Input.Keyboard.FocusedElement%2A?displayProperty=nameWithType> returns the element with keyboard focus.</span></span>  
  
 <span data-ttu-id="50f37-107">逻辑焦点适用于 <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> 特定焦点范围内的。</span><span class="sxs-lookup"><span data-stu-id="50f37-107">Logical focus pertains to the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within a specific focus scope.</span></span>  
  
 <span data-ttu-id="50f37-108">焦点范围是在 <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> 其作用域内跟踪的容器元素。</span><span class="sxs-lookup"><span data-stu-id="50f37-108">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="50f37-109">默认情况下， <xref:System.Windows.Window> 类是 <xref:System.Windows.Controls.Menu> 、 <xref:System.Windows.Controls.ContextMenu> 和类的焦点范围 <xref:System.Windows.Controls.ToolBar> 。</span><span class="sxs-lookup"><span data-stu-id="50f37-109">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span> <span data-ttu-id="50f37-110">作为焦点范围的元素已 <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> 设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="50f37-110">An element that is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="50f37-111">可以有多个具有逻辑焦点的元素，但在单个焦点范围内只能有一个具有逻辑焦点的元素。</span><span class="sxs-lookup"><span data-stu-id="50f37-111">There can be multiple elements with logical focus, but there can only be one element with logical focus within a single focus scope.</span></span>  <span data-ttu-id="50f37-112">具有逻辑焦点的元素不一定具有键盘焦点，但具有键盘焦点的元素将具有逻辑焦点。</span><span class="sxs-lookup"><span data-stu-id="50f37-112">An element with logical focus does not necessarily have keyboard focus, but an element with keyboard focus will have logical focus.</span></span>  <span data-ttu-id="50f37-113">可以在焦点范围内定义焦点范围。</span><span class="sxs-lookup"><span data-stu-id="50f37-113">It is possible to define a focus scope within a focus scope.</span></span>  <span data-ttu-id="50f37-114">在这种情况下，父焦点范围和子焦点范围都可以具有 <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="50f37-114">In this case, both the parent focus scope and the child focus scope can have a <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="50f37-115">下面的方案演示了如何在具有具有的和具有的的 WPF 应用程序中，键盘焦点和逻辑焦点发生变化 <xref:System.Windows.Window> <xref:System.Windows.Controls.TextBox> <xref:System.Windows.Controls.Menu> <xref:System.Windows.Controls.MenuItem> 。</span><span class="sxs-lookup"><span data-stu-id="50f37-115">The following scenario illustrates how keyboard focus and logical focus change in a WPF application that has a <xref:System.Windows.Window> with a <xref:System.Windows.Controls.TextBox> and a <xref:System.Windows.Controls.Menu> that has a <xref:System.Windows.Controls.MenuItem>.</span></span>  <span data-ttu-id="50f37-116">当键盘焦点从更改 <xref:System.Windows.Controls.TextBox> 为时 <xref:System.Windows.Controls.MenuItem> ，会 <xref:System.Windows.Controls.TextBox> 失去键盘焦点，但会保留焦点范围的逻辑焦点 <xref:System.Windows.Window> 。</span><span class="sxs-lookup"><span data-stu-id="50f37-116">When keyboard focus changes from the <xref:System.Windows.Controls.TextBox> to the <xref:System.Windows.Controls.MenuItem>, the <xref:System.Windows.Controls.TextBox> losses keyboard focus but retains logical focus for the <xref:System.Windows.Window> focus scope.</span></span>  <span data-ttu-id="50f37-117"><xref:System.Windows.Controls.MenuItem>获取键盘焦点并获得焦点范围的逻辑焦点 <xref:System.Windows.Controls.Menu> 。</span><span class="sxs-lookup"><span data-stu-id="50f37-117">The <xref:System.Windows.Controls.MenuItem> obtains keyboard focus and obtains logical focus for the <xref:System.Windows.Controls.Menu> focus scope.</span></span>  <span data-ttu-id="50f37-118">当键盘焦点返回到根时 <xref:System.Windows.Window> ， <xref:System.Windows.Window> 焦点范围中具有逻辑焦点的元素将获取键盘焦点，在本例中为 <xref:System.Windows.Controls.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="50f37-118">When keyboard focus returns to the root <xref:System.Windows.Window>, the element in <xref:System.Windows.Window> focus scope with logical focus will obtain keyboard focus, which in this case is the <xref:System.Windows.Controls.TextBox>.</span></span>  <span data-ttu-id="50f37-119"><xref:System.Windows.Controls.TextBox>现在具有键盘焦点和逻辑焦点。</span><span class="sxs-lookup"><span data-stu-id="50f37-119">The <xref:System.Windows.Controls.TextBox> now has keyboard focus and logical focus.</span></span>  <span data-ttu-id="50f37-120"><xref:System.Windows.Controls.MenuItem>失去键盘焦点，但保留焦点范围的逻辑焦点 <xref:System.Windows.Controls.Menu> 。</span><span class="sxs-lookup"><span data-stu-id="50f37-120">The <xref:System.Windows.Controls.MenuItem> loses keyboard focus, but retains logical focus for the <xref:System.Windows.Controls.Menu> focus scope.</span></span>  
  
 <span data-ttu-id="50f37-121">、、和上的的默认值 <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> <xref:System.Windows.Window> <xref:System.Windows.Controls.Menu> <xref:System.Windows.Controls.ToolBar> <xref:System.Windows.Controls.ContextMenu> 为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="50f37-121">The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, and <xref:System.Windows.Controls.ContextMenu> is `true`.</span></span>  
  
 <span data-ttu-id="50f37-122">有关焦点的详细信息，请参阅 [输入概述](/dotnet/framework/wpf/advanced/input-overview) 和 [焦点概述](/dotnet/framework/wpf/advanced/focus-overview)。</span><span class="sxs-lookup"><span data-stu-id="50f37-122">For more information on focus, see the [Input Overview](/dotnet/framework/wpf/advanced/input-overview) and the [Focus Overview](/dotnet/framework/wpf/advanced/focus-overview).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddGotFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddGotFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddGotFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.AddGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddGotFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddGotFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddGotFocusHandler : System.Windows.DependencyObject * System.Windows.RoutedEventHandler -&gt; unit" Usage="System.Windows.Input.FocusManager.AddGotFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="50f37-123">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="50f37-123">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="50f37-124">要添加的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="50f37-124">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="50f37-125">为 <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> 附加事件添加处理程序。</span><span class="sxs-lookup"><span data-stu-id="50f37-125">Adds a handler for the <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLostFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddLostFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddLostFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.AddLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddLostFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddLostFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddLostFocusHandler : System.Windows.DependencyObject * System.Windows.RoutedEventHandler -&gt; unit" Usage="System.Windows.Input.FocusManager.AddLostFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="50f37-126">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="50f37-126">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="50f37-127">要添加的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="50f37-127">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="50f37-128">为 <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> 附加事件添加处理程序。</span><span class="sxs-lookup"><span data-stu-id="50f37-128">Adds a handler for the <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedElement">
      <MemberSignature Language="C#" Value="see GetFocusedElement, and SetFocusedElement" />
      <MemberSignature Language="ILAsm" Value="see GetFocusedElement, and SetFocusedElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.FocusManager.FocusedElement" />
      <MemberSignature Language="VB.NET" Value="see GetFocusedElement, and SetFocusedElement" />
      <MemberSignature Language="F#" Value="see GetFocusedElement, and SetFocusedElement" Usage="see GetFocusedElement, and SetFocusedElement" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="50f37-129">确定此属性附加到的元素是否具有逻辑焦点。</span><span class="sxs-lookup"><span data-stu-id="50f37-129">Determines whether the element this property is attached to has logical focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50f37-130"><xref:System.Windows.Input.FocusManager.FocusedElement%2A>是对特定焦点范围具有逻辑焦点的元素。</span><span class="sxs-lookup"><span data-stu-id="50f37-130">The <xref:System.Windows.Input.FocusManager.FocusedElement%2A> is the element that has logical focus for a specific focus scope.</span></span>  <span data-ttu-id="50f37-131">此对象不一定具有键盘焦点。</span><span class="sxs-lookup"><span data-stu-id="50f37-131">This object may or may not have keyboard focus.</span></span>  <span data-ttu-id="50f37-132">键盘焦点指的是接收键盘输入的元素。</span><span class="sxs-lookup"><span data-stu-id="50f37-132">Keyboard focus refers to the element that receives keyboard input.</span></span>  <span data-ttu-id="50f37-133">有关焦点、键盘焦点和逻辑焦点的详细信息，请参阅 [输入概述](/dotnet/framework/wpf/advanced/input-overview)。</span><span class="sxs-lookup"><span data-stu-id="50f37-133">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  
  
 <span data-ttu-id="50f37-134"><xref:System.Windows.Input.FocusManager.GetFocusedElement%2A> 和 <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> 可用于获取和设置指定焦点范围内的聚焦元素。</span><span class="sxs-lookup"><span data-stu-id="50f37-134"><xref:System.Windows.Input.FocusManager.GetFocusedElement%2A> and <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> can be used to get and set the focused element within the specified focus scope.</span></span>  
  
<a name="dependencyPropertyInfo_FocusedElement"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="50f37-135">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="50f37-135">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="50f37-136">标识符字段</span><span class="sxs-lookup"><span data-stu-id="50f37-136">Identifier field</span></span>|<xref:System.Windows.Input.FocusManager.FocusedElementProperty>|  
|<span data-ttu-id="50f37-137">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="50f37-137">Metadata properties set to `true`</span></span>|<span data-ttu-id="50f37-138">无</span><span class="sxs-lookup"><span data-stu-id="50f37-138">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="50f37-139">下面的示例演示如何使成为 <xref:System.Windows.Controls.Button> 焦点元素。</span><span class="sxs-lookup"><span data-stu-id="50f37-139">The following example shows how to make a <xref:System.Windows.Controls.Button> the focused element.</span></span>  
  
 [!code-xml[markupsnippets#MarkupFocusManagerFocusedElementXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/MarkupSnippets/CSharp/Window1.xaml#markupfocusmanagerfocusedelementxaml)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedElementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusedElementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusedElementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.FocusedElementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusedElementProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusedElementProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FocusedElementProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.FocusManager.FocusedElementProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50f37-140">标识 <see cref="P:System.Windows.Input.FocusManager.FocusedElement" /> 附加属性。</span><span class="sxs-lookup"><span data-stu-id="50f37-140">Identifies the <see cref="P:System.Windows.Input.FocusManager.FocusedElement" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFocusedElement">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement GetFocusedElement (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.IInputElement GetFocusedElement(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.GetFocusedElement(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFocusedElement (element As DependencyObject) As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::IInputElement ^ GetFocusedElement(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetFocusedElement : System.Windows.DependencyObject -&gt; System.Windows.IInputElement" Usage="System.Windows.Input.FocusManager.GetFocusedElement element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="50f37-141">作为焦点范围的元素。</span><span class="sxs-lookup"><span data-stu-id="50f37-141">An element that is a focus scope.</span></span></param>
        <summary><span data-ttu-id="50f37-142">获取在指定焦点范围内具有逻辑焦点的元素。</span><span class="sxs-lookup"><span data-stu-id="50f37-142">Gets the element with logical focus within the specified focus scope.</span></span></summary>
        <returns><span data-ttu-id="50f37-143">在指定焦点范围内具有逻辑焦点的元素。</span><span class="sxs-lookup"><span data-stu-id="50f37-143">The element in the specified focus scope with logical focus.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="50f37-144"><xref:System.Windows.Input.FocusManager.FocusedElement%2A>是对特定焦点范围具有逻辑焦点的元素。</span><span class="sxs-lookup"><span data-stu-id="50f37-144">The <xref:System.Windows.Input.FocusManager.FocusedElement%2A> is the element that has logical focus for a specific focus scope.</span></span> <span data-ttu-id="50f37-145">作为焦点范围的元素已 <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> 设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="50f37-145">An element that is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>
<span data-ttu-id="50f37-146">此对象不一定具有键盘焦点。</span><span class="sxs-lookup"><span data-stu-id="50f37-146">This object may or may not have keyboard focus.</span></span> <span data-ttu-id="50f37-147">键盘焦点指的是接收键盘输入的元素。</span><span class="sxs-lookup"><span data-stu-id="50f37-147">Keyboard focus refers to the element that receives keyboard input.</span></span> <span data-ttu-id="50f37-148">有关焦点、键盘焦点和逻辑焦点的详细信息，请参阅 [输入概述](/dotnet/framework/wpf/advanced/input-overview)。</span><span class="sxs-lookup"><span data-stu-id="50f37-148">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>
  
 <span data-ttu-id="50f37-149">如果不是 `element` 焦点范围，则此方法将返回 `null` 。</span><span class="sxs-lookup"><span data-stu-id="50f37-149">If `element` is not a focus scope, this method will return `null`.</span></span>  
  
 <span data-ttu-id="50f37-150">使用 <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> ，指定在指定焦点范围内具有逻辑焦点的元素。</span><span class="sxs-lookup"><span data-stu-id="50f37-150">Use <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>, to specify the element with logical focus within a specified focus scope.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50f37-151">下面的示例使用来设置具有逻辑焦点的元素 <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> ，并使用来获取具有逻辑焦点的元素 <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A> 。</span><span class="sxs-lookup"><span data-stu-id="50f37-151">The following example sets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> and it gets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>.</span></span>  
  
 [!code-csharp[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSnippets/CSharp/Window1.xaml.cs#focusgetsetfocusedelement)]
 [!code-vb[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSnippets/visualbasic/window1.xaml.vb#focusgetsetfocusedelement)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="50f37-152"><paramref name="element" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="50f37-152"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFocusScope">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetFocusScope (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetFocusScope(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.GetFocusScope(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFocusScope (element As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetFocusScope(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetFocusScope : System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="System.Windows.Input.FocusManager.GetFocusScope element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="50f37-153">要获取其最接近的焦点范围的元素。</span><span class="sxs-lookup"><span data-stu-id="50f37-153">The element to get the closest focus scope for.</span></span></param>
        <summary><span data-ttu-id="50f37-154">确定指定元素的 <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> 设置为 <see langword="true" /> 的最接近的上级。</span><span class="sxs-lookup"><span data-stu-id="50f37-154">Determines the closest ancestor of the specified element that has <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> set to <see langword="true" />.</span></span></summary>
        <returns><span data-ttu-id="50f37-155">指定元素的焦点范围。</span><span class="sxs-lookup"><span data-stu-id="50f37-155">The focus scope for the specified element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50f37-156"><xref:System.Windows.Input.FocusManager.IsFocusScope%2A>、、、上的默认 <xref:System.Windows.Window> 值 <xref:System.Windows.Controls.Menu> <xref:System.Windows.Controls.ToolBar> <xref:System.Windows.Controls.ContextMenu> 为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="50f37-156">The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu> is `true`.</span></span>  
  
 <span data-ttu-id="50f37-157">焦点范围是在 <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> 其作用域内跟踪的容器元素。</span><span class="sxs-lookup"><span data-stu-id="50f37-157">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="50f37-158">默认情况下， <xref:System.Windows.Window> 类是 <xref:System.Windows.Controls.Menu> 、 <xref:System.Windows.Controls.ContextMenu> 和类的焦点范围 <xref:System.Windows.Controls.ToolBar> 。</span><span class="sxs-lookup"><span data-stu-id="50f37-158">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span> <span data-ttu-id="50f37-159">作为焦点范围的元素已 <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> 设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="50f37-159">An element that is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="50f37-160">有关焦点、键盘焦点和逻辑焦点的详细信息，请参阅 [输入概述](/dotnet/framework/wpf/advanced/input-overview)。</span><span class="sxs-lookup"><span data-stu-id="50f37-160">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="50f37-161"><paramref name="element" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="50f37-161"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetIsFocusScope">
      <MemberSignature Language="C#" Value="public static bool GetIsFocusScope (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsFocusScope(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.GetIsFocusScope(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsFocusScope (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsFocusScope(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetIsFocusScope : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Input.FocusManager.GetIsFocusScope element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="50f37-162">从中读取附加属性的元素。</span><span class="sxs-lookup"><span data-stu-id="50f37-162">The element from which to read the attached property.</span></span></param>
        <summary><span data-ttu-id="50f37-163">确定指定的 <see cref="T:System.Windows.DependencyObject" /> 是否为焦点范围。</span><span class="sxs-lookup"><span data-stu-id="50f37-163">Determines whether the specified <see cref="T:System.Windows.DependencyObject" /> is a focus scope.</span></span></summary>
        <returns><span data-ttu-id="50f37-164">如果指定元素上的 <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> 设置为 <see langword="true" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="50f37-164"><see langword="true" /> if <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> is set to <see langword="true" /> on the specified element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50f37-165">焦点范围是在 <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> 其作用域内跟踪的容器元素。</span><span class="sxs-lookup"><span data-stu-id="50f37-165">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="50f37-166">默认情况下， <xref:System.Windows.Window> 类是 <xref:System.Windows.Controls.Menu> 、 <xref:System.Windows.Controls.ContextMenu> 和类的焦点范围 <xref:System.Windows.Controls.ToolBar> 。</span><span class="sxs-lookup"><span data-stu-id="50f37-166">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="50f37-167">作为焦点范围的元素已 <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> 设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="50f37-167">An element that is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="50f37-168">有关焦点、键盘焦点和逻辑焦点的详细信息，请参阅 [输入概述](/dotnet/framework/wpf/advanced/input-overview)。</span><span class="sxs-lookup"><span data-stu-id="50f37-168">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.FocusManager.GotFocus" />
      <MemberSignature Language="VB.NET" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberSignature Language="F#" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" Usage="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="50f37-169">当元素获得焦点时发生。</span><span class="sxs-lookup"><span data-stu-id="50f37-169">Occurs when an element gets focus.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.GotFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.FocusManager.GotFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50f37-170">标识 <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> 附加事件。</span><span class="sxs-lookup"><span data-stu-id="50f37-170">Identifies the <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocusScope">
      <MemberSignature Language="C#" Value="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberSignature Language="ILAsm" Value="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.FocusManager.IsFocusScope" />
      <MemberSignature Language="VB.NET" Value="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberSignature Language="F#" Value="see GetIsFocusScope, and SetIsFocusScope" Usage="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="50f37-171">确定此属性附加到的元素是否是焦点范围。</span><span class="sxs-lookup"><span data-stu-id="50f37-171">Determines whether the element this property is attached to is a focus scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50f37-172">焦点范围是在 <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> 其作用域内跟踪的容器元素。</span><span class="sxs-lookup"><span data-stu-id="50f37-172">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="50f37-173">默认情况下， <xref:System.Windows.Window> 类是 <xref:System.Windows.Controls.Menu> 、 <xref:System.Windows.Controls.ContextMenu> 和类的焦点范围 <xref:System.Windows.Controls.ToolBar> 。</span><span class="sxs-lookup"><span data-stu-id="50f37-173">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="50f37-174">作为焦点范围的元素已 <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> 设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="50f37-174">An element that is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="50f37-175">有关焦点、键盘焦点和逻辑焦点的详细信息，请参阅 [输入概述](/dotnet/framework/wpf/advanced/input-overview)。</span><span class="sxs-lookup"><span data-stu-id="50f37-175">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  
  
<a name="dependencyPropertyInfo_IsFocusScope"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="50f37-176">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="50f37-176">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="50f37-177">标识符字段</span><span class="sxs-lookup"><span data-stu-id="50f37-177">Identifier field</span></span>|<xref:System.Windows.Input.FocusManager.IsFocusScopeProperty>|  
|<span data-ttu-id="50f37-178">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="50f37-178">Metadata properties set to `true`</span></span>|<span data-ttu-id="50f37-179">无</span><span class="sxs-lookup"><span data-stu-id="50f37-179">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="50f37-180">下面的示例将创建 <xref:System.Windows.Controls.StackPanel> 一个焦点范围。</span><span class="sxs-lookup"><span data-stu-id="50f37-180">The following example makes a <xref:System.Windows.Controls.StackPanel> a focus scope.</span></span>  
  
 [!code-xml[markupsnippets#MarkupIsFocusScopeXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/MarkupSnippets/CSharp/Window1.xaml#markupisfocusscopexaml)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocusScopeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFocusScopeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFocusScopeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.IsFocusScopeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFocusScopeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFocusScopeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFocusScopeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.FocusManager.IsFocusScopeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50f37-181">标识 <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> 附加属性。</span><span class="sxs-lookup"><span data-stu-id="50f37-181">Identifies the <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> attached property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50f37-182"><xref:System.Windows.Input.FocusManager.IsFocusScope%2A>、、、上的默认 <xref:System.Windows.Window> 值 <xref:System.Windows.Controls.Menu> <xref:System.Windows.Controls.ToolBar> <xref:System.Windows.Controls.ContextMenu> 为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="50f37-182">The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu> is `true`.</span></span>  
  
 <span data-ttu-id="50f37-183">焦点范围是在 <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> 其作用域内跟踪的容器元素。</span><span class="sxs-lookup"><span data-stu-id="50f37-183">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="50f37-184">默认情况下， <xref:System.Windows.Window> 类是 <xref:System.Windows.Controls.Menu> 、 <xref:System.Windows.Controls.ContextMenu> 和类的焦点范围 <xref:System.Windows.Controls.ToolBar> 。</span><span class="sxs-lookup"><span data-stu-id="50f37-184">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="50f37-185">作为焦点范围的元素已 <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> 设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="50f37-185">An element that is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="50f37-186">有关焦点、键盘焦点和逻辑焦点的详细信息，请参阅 [输入概述](/dotnet/framework/wpf/advanced/input-overview)。</span><span class="sxs-lookup"><span data-stu-id="50f37-186">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.FocusManager.LostFocus" />
      <MemberSignature Language="VB.NET" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberSignature Language="F#" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" Usage="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="50f37-187">当元素丢失焦点时发生。</span><span class="sxs-lookup"><span data-stu-id="50f37-187">Occurs when an element loses focus.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.LostFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.FocusManager.LostFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50f37-188">标识 <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> 附加事件。</span><span class="sxs-lookup"><span data-stu-id="50f37-188">Identifies the <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGotFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveGotFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveGotFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.RemoveGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveGotFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveGotFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveGotFocusHandler : System.Windows.DependencyObject * System.Windows.RoutedEventHandler -&gt; unit" Usage="System.Windows.Input.FocusManager.RemoveGotFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="50f37-189">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="50f37-189">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="50f37-190">要删除的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="50f37-190">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="50f37-191">移除 <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> 附加事件的处理程序。</span><span class="sxs-lookup"><span data-stu-id="50f37-191">Removes a handler for the <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveLostFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveLostFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveLostFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.RemoveLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveLostFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveLostFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveLostFocusHandler : System.Windows.DependencyObject * System.Windows.RoutedEventHandler -&gt; unit" Usage="System.Windows.Input.FocusManager.RemoveLostFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="50f37-192">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="50f37-192">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="50f37-193">要删除的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="50f37-193">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="50f37-194">移除 <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> 附加事件的处理程序。</span><span class="sxs-lookup"><span data-stu-id="50f37-194">Removes a handler for the <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFocusedElement">
      <MemberSignature Language="C#" Value="public static void SetFocusedElement (System.Windows.DependencyObject element, System.Windows.IInputElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFocusedElement(class System.Windows.DependencyObject element, class System.Windows.IInputElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.SetFocusedElement(System.Windows.DependencyObject,System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetFocusedElement (element As DependencyObject, value As IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetFocusedElement(System::Windows::DependencyObject ^ element, System::Windows::IInputElement ^ value);" />
      <MemberSignature Language="F#" Value="static member SetFocusedElement : System.Windows.DependencyObject * System.Windows.IInputElement -&gt; unit" Usage="System.Windows.Input.FocusManager.SetFocusedElement (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="50f37-195">焦点范围，将使指定元素成为该范围内的 <see cref="P:System.Windows.Input.FocusManager.FocusedElement" />。</span><span class="sxs-lookup"><span data-stu-id="50f37-195">The focus scope in which to make the specified element the <see cref="P:System.Windows.Input.FocusManager.FocusedElement" />.</span></span></param>
        <param name="value"><span data-ttu-id="50f37-196">要获得逻辑焦点的元素。</span><span class="sxs-lookup"><span data-stu-id="50f37-196">The element to give logical focus to.</span></span></param>
        <summary><span data-ttu-id="50f37-197">对指定元素设置逻辑焦点。</span><span class="sxs-lookup"><span data-stu-id="50f37-197">Sets logical focus on the specified element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50f37-198"><xref:System.Windows.Input.FocusManager.FocusedElement%2A>是对特定焦点范围具有逻辑焦点的元素。</span><span class="sxs-lookup"><span data-stu-id="50f37-198">The <xref:System.Windows.Input.FocusManager.FocusedElement%2A> is the element that has logical focus for the specific focus scope.</span></span>  <span data-ttu-id="50f37-199">此对象不一定具有键盘焦点。</span><span class="sxs-lookup"><span data-stu-id="50f37-199">This object may or may not have keyboard focus.</span></span>  <span data-ttu-id="50f37-200">键盘焦点指的是接收键盘输入的元素。</span><span class="sxs-lookup"><span data-stu-id="50f37-200">Keyboard focus refers to the element that receives keyboard input.</span></span>  <span data-ttu-id="50f37-201">有关焦点、键盘焦点和逻辑焦点的详细信息，请参阅 [输入概述](/dotnet/framework/wpf/advanced/input-overview)。</span><span class="sxs-lookup"><span data-stu-id="50f37-201">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  
  
 <span data-ttu-id="50f37-202">可以指定一个焦点作用域，该作用域是元素所在的焦点作用域的上级。</span><span class="sxs-lookup"><span data-stu-id="50f37-202">It is possible to specify a focus scope that is an ancestor of the focus scope the element is in.</span></span>  <span data-ttu-id="50f37-203">例如，如果 <xref:System.Windows.Controls.StackPanel> 是焦点范围，其父级 <xref:System.Windows.Window> 为焦点范围， <xref:System.Windows.Controls.TextBox> 则的子将在 <xref:System.Windows.Controls.StackPanel> <xref:System.Windows.Window> 调用时将指定为焦点范围 <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> 。</span><span class="sxs-lookup"><span data-stu-id="50f37-203">For example, if a <xref:System.Windows.Controls.StackPanel> is a focus scope and its parent <xref:System.Windows.Window> is a focus scope, a <xref:System.Windows.Controls.TextBox> child of the <xref:System.Windows.Controls.StackPanel> could specify the <xref:System.Windows.Window> as the focus scope when calling <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>.</span></span>  <span data-ttu-id="50f37-204"><xref:System.Windows.Controls.TextBox> <xref:System.Windows.Input.FocusManager.FocusedElement%2A> 对于 <xref:System.Windows.Window> 焦点范围和 <xref:System.Windows.Controls.StackPanel> 焦点范围，则为。</span><span class="sxs-lookup"><span data-stu-id="50f37-204">The <xref:System.Windows.Controls.TextBox> is then <xref:System.Windows.Input.FocusManager.FocusedElement%2A> for both the <xref:System.Windows.Window> focus scope and the <xref:System.Windows.Controls.StackPanel> focus scope.</span></span>  
  
 <span data-ttu-id="50f37-205"><xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> 将在指定的焦点范围内给指定元素指定逻辑焦点，并尝试为元素键盘焦点。</span><span class="sxs-lookup"><span data-stu-id="50f37-205"><xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> will give the specified element logical focus in the specified focus scope and will attempt to give the element keyboard focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50f37-206">下面的示例使用来设置具有逻辑焦点的元素 <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> ，并使用来获取具有逻辑焦点的元素 <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A> 。</span><span class="sxs-lookup"><span data-stu-id="50f37-206">The following example sets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> and it gets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>.</span></span>  
  
 [!code-csharp[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSnippets/CSharp/Window1.xaml.cs#focusgetsetfocusedelement)]
 [!code-vb[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSnippets/visualbasic/window1.xaml.vb#focusgetsetfocusedelement)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsFocusScope">
      <MemberSignature Language="C#" Value="public static void SetIsFocusScope (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsFocusScope(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.SetIsFocusScope(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsFocusScope (element As DependencyObject, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsFocusScope(System::Windows::DependencyObject ^ element, bool value);" />
      <MemberSignature Language="F#" Value="static member SetIsFocusScope : System.Windows.DependencyObject * bool -&gt; unit" Usage="System.Windows.Input.FocusManager.SetIsFocusScope (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="50f37-207">要成为焦点范围的元素。</span><span class="sxs-lookup"><span data-stu-id="50f37-207">The element to make a focus scope.</span></span></param>
        <param name="value"><span data-ttu-id="50f37-208">如果 <paramref name="element" /> 为焦点范围，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="50f37-208"><see langword="true" /> if <paramref name="element" /> is a focus scope; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="50f37-209">将指定的 <see cref="T:System.Windows.DependencyObject" /> 设置为焦点范围。</span><span class="sxs-lookup"><span data-stu-id="50f37-209">Sets the specified <see cref="T:System.Windows.DependencyObject" /> as a focus scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50f37-210">焦点范围是在 <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> 其作用域内跟踪的容器元素。</span><span class="sxs-lookup"><span data-stu-id="50f37-210">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="50f37-211">默认情况下， <xref:System.Windows.Window> 类是 <xref:System.Windows.Controls.Menu> 、 <xref:System.Windows.Controls.ContextMenu> 和类的焦点范围 <xref:System.Windows.Controls.ToolBar> 。</span><span class="sxs-lookup"><span data-stu-id="50f37-211">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="50f37-212">作为焦点范围的元素已 <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> 设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="50f37-212">An element that is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="50f37-213">有关焦点、键盘焦点和逻辑焦点的详细信息，请参阅 [输入概述](/dotnet/framework/wpf/advanced/input-overview)。</span><span class="sxs-lookup"><span data-stu-id="50f37-213">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50f37-214">下面的示例通过使用使元素成为焦点范围 <xref:System.Windows.Input.FocusManager.SetIsFocusScope%2A> 。</span><span class="sxs-lookup"><span data-stu-id="50f37-214">The follow example makes an element a focus scope by using <xref:System.Windows.Input.FocusManager.SetIsFocusScope%2A>.</span></span>  
  
 [!code-csharp[focussnippets#FocusSetIsFocusScope](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSnippets/CSharp/Window1.xaml.cs#focussetisfocusscope)]
 [!code-vb[focussnippets#FocusSetIsFocusScope](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSnippets/visualbasic/window1.xaml.vb#focussetisfocusscope)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
