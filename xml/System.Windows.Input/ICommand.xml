<Type Name="ICommand" FullName="System.Windows.Input.ICommand">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6367059c5cfd517865d749fee78bd33e441f3202" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83948353" /></Metadata><TypeSignature Language="C#" Value="public interface ICommand" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICommand" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ICommand" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICommand" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICommand" />
  <TypeSignature Language="F#" Value="type ICommand = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ObjectModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows</AssemblyName>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="PresentationCore" FromVersion="5.0.0.0" To="System.ObjectModel" ToVersion="4.1.1.0" FrameworkAlternate="dotnet-plat-ext-5.0" />
    <TypeForwarding From="System" FromVersion="4.0.0.0" To="System.ObjectModel" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="System.Windows" FromVersion="4.0.0.0" To="System.ObjectModel" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.ObjectModel" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="PresentationCore" FromVersion="5.0.0.0" To="System.ObjectModel" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="PresentationCore" FromVersion="4.0.0.0" To="System.ObjectModel" ToVersion="4.1.1.0" FrameworkAlternate="netcore-3.0" />
    <TypeForwarding From="PresentationCore" FromVersion="4.0.0.0" To="System.ObjectModel" ToVersion="4.1.2.0" FrameworkAlternate="netcore-3.1" />
    <TypeForwarding From="PresentationCore" FromVersion="4.0.0.0" To="System" ToVersion="4.0.0.0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
    <TypeForwarding From="System.Windows" FromVersion="4.0.0.0" To="System" ToVersion="4.0.0.0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
    <TypeForwarding From="System.Windows" FromVersion="2.0.5.0" To="System" ToVersion="2.0.5.0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
  </TypeForwardingChain>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("PresentationCore, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Input.CommandConverter, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.Windows.Markup.ValueSerializer("System.Windows.Input.CommandValueSerializer, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
      <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Input.CommandConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
      <AttributeName>System.Windows.Markup.ValueSerializer("System.Windows.Input.CommandValueSerializer, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8bb92-101">定义一个命令。</span><span class="sxs-lookup"><span data-stu-id="8bb92-101">Defines a command.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bb92-102"><xref:System.Windows.Input.RoutedCommand> 和 <xref:System.Windows.Input.RoutedUICommand> 是 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]中的 <xref:System.Windows.Input.ICommand> 接口的两种实现。</span><span class="sxs-lookup"><span data-stu-id="8bb92-102"><xref:System.Windows.Input.RoutedCommand> and <xref:System.Windows.Input.RoutedUICommand> are two implementations of the <xref:System.Windows.Input.ICommand> interface in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)].</span></span>  
  
## <a name="icommand-in-windows-runtime-apps"></a><span data-ttu-id="8bb92-103">Windows 运行时应用中的 ICommand</span><span class="sxs-lookup"><span data-stu-id="8bb92-103">ICommand in Windows Runtime apps</span></span>  
 <span data-ttu-id="8bb92-104"><xref:System.Windows.Input.ICommand> 接口是用 .NET 编写的用于 Windows 运行时应用程序的命令的代码协定。</span><span class="sxs-lookup"><span data-stu-id="8bb92-104">The <xref:System.Windows.Input.ICommand> interface is the code contract for commands that are written in .NET for Windows Runtime apps.</span></span> <span data-ttu-id="8bb92-105">这些命令为 UI 元素（例如 Windows 运行时 XAML `Button` 和（尤其是 `AppBarButton`）提供命令行为。</span><span class="sxs-lookup"><span data-stu-id="8bb92-105">These commands provide the commanding behavior for UI elements such as a Windows Runtime XAML `Button` and in particular an `AppBarButton`.</span></span> <span data-ttu-id="8bb92-106">如果要为 Windows 运行时应用定义命令，你将使用用于为 .NET 应用定义命令的相同技术。</span><span class="sxs-lookup"><span data-stu-id="8bb92-106">If you're defining commands for Windows Runtime apps you use basically the same techniques you'd use for defining commands for a .NET app.</span></span> <span data-ttu-id="8bb92-107">通过定义一个实现 <xref:System.Windows.Input.ICommand> 并专门实现 <xref:System.Windows.Input.ICommand.Execute%2A> 方法的类来实现该命令。</span><span class="sxs-lookup"><span data-stu-id="8bb92-107">Implement the command by defining a class that implements <xref:System.Windows.Input.ICommand> and specifically implement the <xref:System.Windows.Input.ICommand.Execute%2A> method.</span></span>  
  
 <span data-ttu-id="8bb92-108">Windows 运行时的 XAML 不支持 x`:Static`，因此，如果从 Windows 运行时 XAML 使用命令，则不要尝试使用 `x:Static` 标记扩展。</span><span class="sxs-lookup"><span data-stu-id="8bb92-108">XAML for Windows Runtime does not support x`:Static`, so don't attempt to use the `x:Static` markup extension if the command is used from Windows Runtime XAML.</span></span> <span data-ttu-id="8bb92-109">此外，Windows 运行时没有任何预定义的命令库，因此此处显示的 XAML 语法实际上不适用于实现接口的情况，并为 Windows 运行时使用定义命令。</span><span class="sxs-lookup"><span data-stu-id="8bb92-109">Also, the Windows Runtime does not have any predefined command libraries, so the XAML syntax shown here doesn't really apply for the case where you're implementing the interface and defining the command for Windows Runtime usage.</span></span>  
  
<a name="xamlTextUsage_ICommand"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="8bb92-110">XAML 特性用法</span><span class="sxs-lookup"><span data-stu-id="8bb92-110">XAML Attribute Usage</span></span>  
 <span data-ttu-id="8bb92-111">\<*对象属性*= "*predefinedCommandName*"/></span><span class="sxs-lookup"><span data-stu-id="8bb92-111">\<*object property*="*predefinedCommandName*"/></span></span>  
  
<span data-ttu-id="8bb92-112">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8bb92-112">-or-</span></span>
  
 <span data-ttu-id="8bb92-113">\<*对象属性*= "*predefinedCommandName*"/></span><span class="sxs-lookup"><span data-stu-id="8bb92-113">\<*object property*="*predefinedCommandName.predefinedCommandName*"/></span></span>  
  
<span data-ttu-id="8bb92-114">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8bb92-114">-or-</span></span>
  
 <span data-ttu-id="8bb92-115">\<*对象属性*= "{ *customCommandName*}"/></span><span class="sxs-lookup"><span data-stu-id="8bb92-115">\<*object property*="{ *customClassName.customCommandName*}"/></span></span>  
  
<a name="xamlValues_ICommand"></a>   
## <a name="xaml-values"></a><span data-ttu-id="8bb92-116">XAML 值</span><span class="sxs-lookup"><span data-stu-id="8bb92-116">XAML Values</span></span>  
 <span data-ttu-id="8bb92-117">*predefinedClassName*</span><span class="sxs-lookup"><span data-stu-id="8bb92-117">*predefinedClassName*</span></span>  
 <span data-ttu-id="8bb92-118">预定义的命令类之一。</span><span class="sxs-lookup"><span data-stu-id="8bb92-118">One of the predefined command classes.</span></span>  
  
 <span data-ttu-id="8bb92-119">*predefinedCommandName*</span><span class="sxs-lookup"><span data-stu-id="8bb92-119">*predefinedCommandName*</span></span>  
 <span data-ttu-id="8bb92-120">预定义的命令之一。</span><span class="sxs-lookup"><span data-stu-id="8bb92-120">One of the predefined commands.</span></span>  
  
 <span data-ttu-id="8bb92-121">*customClassName*</span><span class="sxs-lookup"><span data-stu-id="8bb92-121">*customClassName*</span></span>  
 <span data-ttu-id="8bb92-122">一个包含自定义命令的自定义类。</span><span class="sxs-lookup"><span data-stu-id="8bb92-122">A custom class that contains the custom command.</span></span> <span data-ttu-id="8bb92-123">自定义类通常需要 `xlmns` 前缀映射;请参阅[WPF xaml 的 XAML 命名空间和命名空间映射](/dotnet/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml)。</span><span class="sxs-lookup"><span data-stu-id="8bb92-123">Custom classes generally require an `xlmns` prefix mapping; see [XAML Namespaces and Namespace Mapping for WPF XAML](/dotnet/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml).</span></span>  
  
 <span data-ttu-id="8bb92-124">*customCommandName*</span><span class="sxs-lookup"><span data-stu-id="8bb92-124">*customCommandName*</span></span>  
 <span data-ttu-id="8bb92-125">自定义命令。</span><span class="sxs-lookup"><span data-stu-id="8bb92-125">A custom command.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanExecute">
      <MemberSignature Language="C#" Value="public bool CanExecute (object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanExecute(object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ICommand.CanExecute(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExecute (parameter As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanExecute(System::Object ^ parameter);" />
      <MemberSignature Language="F#" Value="abstract member CanExecute : obj -&gt; bool" Usage="iCommand.CanExecute parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="8bb92-126">此命令使用的数据。</span><span class="sxs-lookup"><span data-stu-id="8bb92-126">Data used by the command.</span></span>  <span data-ttu-id="8bb92-127">如果此命令不需要传递数据，则该对象可以设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8bb92-127">If the command does not require data to be passed, this object can be set to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8bb92-128">定义确定此命令是否可在其当前状态下执行的方法。</span><span class="sxs-lookup"><span data-stu-id="8bb92-128">Defines the method that determines whether the command can execute in its current state.</span></span></summary>
        <returns><span data-ttu-id="8bb92-129">如果可执行此命令，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8bb92-129"><see langword="true" /> if this command can be executed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bb92-130">通常，命令源会在引发 <xref:System.Windows.Input.ICommand.CanExecuteChanged> 事件时调用 <xref:System.Windows.Input.ICommand.CanExecute%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="8bb92-130">Typically, a command source calls the <xref:System.Windows.Input.ICommand.CanExecute%2A> method when the <xref:System.Windows.Input.ICommand.CanExecuteChanged> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommandSource" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="CanExecuteChanged">
      <MemberSignature Language="C#" Value="event EventHandler CanExecuteChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CanExecuteChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.ICommand.CanExecuteChanged" />
      <MemberSignature Language="VB.NET" Value="Event CanExecuteChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CanExecuteChanged;" />
      <MemberSignature Language="F#" Value="member this.CanExecuteChanged : EventHandler " Usage="member this.CanExecuteChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8bb92-131">当出现影响是否应执行该命令的更改时发生。</span><span class="sxs-lookup"><span data-stu-id="8bb92-131">Occurs when changes occur that affect whether or not the command should execute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bb92-132">通常，当发生此事件时，命令源会调用命令 <xref:System.Windows.Input.ICommand.CanExecute%2A>。</span><span class="sxs-lookup"><span data-stu-id="8bb92-132">Normally, a command source calls <xref:System.Windows.Input.ICommand.CanExecute%2A> on the command when this event occurs.</span></span>  
  
 <span data-ttu-id="8bb92-133">通常，如果命令无法执行，命令源将禁用自身。</span><span class="sxs-lookup"><span data-stu-id="8bb92-133">Normally, if the command cannot execute, the command source disables itself.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommandSource" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Execute(object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ICommand.Execute(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (parameter As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::Object ^ parameter);" />
      <MemberSignature Language="F#" Value="abstract member Execute : obj -&gt; unit" Usage="iCommand.Execute parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="8bb92-134">此命令使用的数据。</span><span class="sxs-lookup"><span data-stu-id="8bb92-134">Data used by the command.</span></span>  <span data-ttu-id="8bb92-135">如果此命令不需要传递数据，则该对象可以设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8bb92-135">If the command does not require data to be passed, this object can be set to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8bb92-136">定义在调用此命令时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="8bb92-136">Defines the method to be called when the command is invoked.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.ICommandSource" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
  </Members>
</Type>
