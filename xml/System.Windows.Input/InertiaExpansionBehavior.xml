<Type Name="InertiaExpansionBehavior" FullName="System.Windows.Input.InertiaExpansionBehavior">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e2023bec3216f14dc5f2d383cd14405cc37cc752" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86651025" /></Metadata><TypeSignature Language="C#" Value="public class InertiaExpansionBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InertiaExpansionBehavior extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.InertiaExpansionBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Class InertiaExpansionBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class InertiaExpansionBehavior" />
  <TypeSignature Language="F#" Value="type InertiaExpansionBehavior = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>控制惯性运动期间大小调整操作的减速度。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.InertiaExpansionBehavior>类指定展开操作在惯性时的行为方式。  使用 <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs.ExpansionBehavior%2A> 事件中的属性 <xref:System.Windows.UIElement.ManipulationInertiaStarting> 执行以下操作：  
  
-   通过设置属性来指定惯性开始时的初始速度 <xref:System.Windows.Input.InertiaExpansionBehavior.InitialVelocity%2A> 。  
  
-   通过设置属性，指定惯性结束时所需的操作扩展 <xref:System.Windows.Input.InertiaExpansionBehavior.DesiredExpansion%2A> 。  
  
-   通过设置属性，指定所需的惯性减速度 <xref:System.Windows.Input.InertiaExpansionBehavior.DesiredDeceleration%2A> 。  
  
 设置 <xref:System.Windows.Input.InertiaExpansionBehavior.DesiredExpansion%2A> 或 <xref:System.Windows.Input.InertiaExpansionBehavior.DesiredDeceleration%2A> ，但不能同时设置两者。 设置其中一个属性后，如果另一个属性具有值，则其他属性将更改为 <xref:System.Double.NaN?displayProperty=nameWithType> 。  
  
 有关操作的详细信息，请参阅 [输入概述](/dotnet/framework/wpf/advanced/input-overview)。  有关响应操作的应用程序的示例，请参阅 [演练：创建你的第一个 Touch 应用程序](/dotnet/framework/wpf/advanced/walkthrough-creating-your-first-touch-application)。  
  
   
  
## Examples  
 下面的示例显示了 <xref:System.Windows.UIElement.ManipulationInertiaStarting> 事件处理程序，并为惯性期间使用的转换、扩展和旋转设置了所需的减速度。 本示例摘自 [演练：创建您的第一个 Touch 应用程序](/dotnet/framework/wpf/advanced/walkthrough-creating-your-first-touch-application)中的一个更大的示例。  
  
 [!code-csharp[BasicManipulation#ManipulationInertiaStarting](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationinertiastarting)]
 [!code-vb[BasicManipulation#ManipulationInertiaStarting](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationinertiastarting)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InertiaExpansionBehavior ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InertiaExpansionBehavior.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InertiaExpansionBehavior();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Input.InertiaExpansionBehavior" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesiredDeceleration">
      <MemberSignature Language="C#" Value="public double DesiredDeceleration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 DesiredDeceleration" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InertiaExpansionBehavior.DesiredDeceleration" />
      <MemberSignature Language="VB.NET" Value="Public Property DesiredDeceleration As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double DesiredDeceleration { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.DesiredDeceleration : double with get, set" Usage="System.Windows.Input.InertiaExpansionBehavior.DesiredDeceleration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置大小调整减慢的速率（[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]/平方毫秒）。</summary>
        <value>大小调整减慢的速率（[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]/平方毫秒）。 默认值为 <see cref="F:System.Double.NaN" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Windows.Input.InertiaExpansionBehavior.DesiredDeceleration%2A> 属性指定惯性所需的减速。 设置 <xref:System.Windows.Input.InertiaExpansionBehavior.DesiredExpansion%2A> 或 <xref:System.Windows.Input.InertiaExpansionBehavior.DesiredDeceleration%2A> ，但不能同时设置两者。 设置其中一个属性后，如果另一个属性具有值，则其他属性将更改为 <xref:System.Double.NaN?displayProperty=nameWithType> 。  
  
 有关操作的详细信息，请参阅 [输入概述](/dotnet/framework/wpf/advanced/input-overview)。  有关响应操作的应用程序的示例，请参阅 [演练：创建你的第一个 Touch 应用程序](/dotnet/framework/wpf/advanced/walkthrough-creating-your-first-touch-application)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">属性设置为无穷大。  
  
- 或 - 
属性设置为 <see cref="F:System.Double.NaN" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="DesiredExpansion">
      <MemberSignature Language="C#" Value="public System.Windows.Vector DesiredExpansion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Vector DesiredExpansion" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InertiaExpansionBehavior.DesiredExpansion" />
      <MemberSignature Language="VB.NET" Value="Public Property DesiredExpansion As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Vector DesiredExpansion { System::Windows::Vector get(); void set(System::Windows::Vector value); };" />
      <MemberSignature Language="F#" Value="member this.DesiredExpansion : System.Windows.Vector with get, set" Usage="System.Windows.Input.InertiaExpansionBehavior.DesiredExpansion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置惯性结束时元素调整的量。</summary>
        <value>惯性结束时元素调整的量。 默认是将 <see cref="T:System.Windows.Vector" /> 和 <see cref="P:System.Windows.Vector.X" /> 属性设置为 <see cref="P:System.Windows.Vector.Y" /> 的 <see cref="F:System.Double.NaN" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Windows.Input.InertiaExpansionBehavior.DesiredExpansion%2A> 属性指定惯性结束时所需的操作扩展。 设置 <xref:System.Windows.Input.InertiaExpansionBehavior.DesiredExpansion%2A> 或 <xref:System.Windows.Input.InertiaExpansionBehavior.DesiredDeceleration%2A> ，但不能同时设置两者。 设置其中一个属性后，如果另一个属性具有值，则其他属性将更改为 <xref:System.Double.NaN?displayProperty=nameWithType> 。  
  
 有关操作的详细信息，请参阅 [输入概述](/dotnet/framework/wpf/advanced/input-overview)。  有关响应操作的应用程序的示例，请参阅 [演练：创建你的第一个 Touch 应用程序](/dotnet/framework/wpf/advanced/walkthrough-creating-your-first-touch-application)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialRadius">
      <MemberSignature Language="C#" Value="public double InitialRadius { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 InitialRadius" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InertiaExpansionBehavior.InitialRadius" />
      <MemberSignature Language="VB.NET" Value="Public Property InitialRadius As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double InitialRadius { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.InitialRadius : double with get, set" Usage="System.Windows.Input.InertiaExpansionBehavior.InitialRadius" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置初始平均半径。</summary>
        <value>初始平均半径。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关操作的详细信息，请参阅 [输入概述](/dotnet/framework/wpf/advanced/input-overview)。  有关响应操作的应用程序的示例，请参阅 [演练：创建你的第一个 Touch 应用程序](/dotnet/framework/wpf/advanced/walkthrough-creating-your-first-touch-application)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialVelocity">
      <MemberSignature Language="C#" Value="public System.Windows.Vector InitialVelocity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Vector InitialVelocity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InertiaExpansionBehavior.InitialVelocity" />
      <MemberSignature Language="VB.NET" Value="Public Property InitialVelocity As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Vector InitialVelocity { System::Windows::Vector get(); void set(System::Windows::Vector value); };" />
      <MemberSignature Language="F#" Value="member this.InitialVelocity : System.Windows.Vector with get, set" Usage="System.Windows.Input.InertiaExpansionBehavior.InitialVelocity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置惯性开始时元素调整的初始速率。</summary>
        <value>惯性开始时元素调整的初始速率。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关操作的详细信息，请参阅 [输入概述](/dotnet/framework/wpf/advanced/input-overview)。  有关响应操作的应用程序的示例，请参阅 [演练：创建你的第一个 Touch 应用程序](/dotnet/framework/wpf/advanced/walkthrough-creating-your-first-touch-application)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
