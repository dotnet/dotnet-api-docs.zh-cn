<Type Name="KeyBinding" FullName="System.Windows.Input.KeyBinding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e08620944ce8093e7949c03e90f8f0cec7e3694e" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83977294" /></Metadata><TypeSignature Language="C#" Value="public class KeyBinding : System.Windows.Input.InputBinding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyBinding extends System.Windows.Input.InputBinding" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.KeyBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyBinding&#xA;Inherits InputBinding" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyBinding : System::Windows::Input::InputBinding" />
  <TypeSignature Language="F#" Value="type KeyBinding = class&#xA;    inherit InputBinding" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputBinding</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="62e23-101">将 <see cref="T:System.Windows.Input.KeyGesture" /> 绑定到 <see cref="T:System.Windows.Input.RoutedCommand" />（或另一个 <see cref="T:System.Windows.Input.ICommand" /> 实现）。</span><span class="sxs-lookup"><span data-stu-id="62e23-101">Binds a <see cref="T:System.Windows.Input.KeyGesture" /> to a <see cref="T:System.Windows.Input.RoutedCommand" /> (or another  <see cref="T:System.Windows.Input.ICommand" /> implementation).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62e23-102"><xref:System.Windows.Input.KeyBinding> 将 <xref:System.Windows.Input.KeyGesture> 与 <xref:System.Windows.Input.ICommand>相关联，例如 <xref:System.Windows.Input.RoutedCommand>。</span><span class="sxs-lookup"><span data-stu-id="62e23-102">A <xref:System.Windows.Input.KeyBinding> associates a <xref:System.Windows.Input.KeyGesture> with a <xref:System.Windows.Input.ICommand>, such as a <xref:System.Windows.Input.RoutedCommand>.</span></span> <span data-ttu-id="62e23-103"><xref:System.Windows.Input.RoutedCommand> 是 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 命令系统的 <xref:System.Windows.Input.ICommand> 接口的主要实现。</span><span class="sxs-lookup"><span data-stu-id="62e23-103"><xref:System.Windows.Input.RoutedCommand> is the primary implementation of the <xref:System.Windows.Input.ICommand> interface for the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] commanding system .</span></span>  <span data-ttu-id="62e23-104">通常情况下，当执行 <xref:System.Windows.Input.KeyGesture> 时，将调用命令，尽管命令的行为会进一步受到命令特定的因素（如 <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> 值）的影响。</span><span class="sxs-lookup"><span data-stu-id="62e23-104">In general, when the <xref:System.Windows.Input.KeyGesture> is executed the command is invoked, although the command behavior is further influenced by command-specific factors such as the <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> value.</span></span>  <span data-ttu-id="62e23-105">有关命令的详细信息，请参阅[命令概述](/dotnet/framework/wpf/advanced/commanding-overview)。</span><span class="sxs-lookup"><span data-stu-id="62e23-105">For more information on commanding, see the [Commanding Overview](/dotnet/framework/wpf/advanced/commanding-overview).</span></span>  
  
 <span data-ttu-id="62e23-106">除了函数键和数字键盘键以外，有效 <xref:System.Windows.Input.KeyGesture> 必须只包含一个 <xref:System.Windows.Input.Key> 和一个或多个 <xref:System.Windows.Input.ModifierKeys>。</span><span class="sxs-lookup"><span data-stu-id="62e23-106">With the exception of the function keys and the numeric keypad keys, a valid <xref:System.Windows.Input.KeyGesture> must contain exactly one <xref:System.Windows.Input.Key> and one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  <span data-ttu-id="62e23-107">功能键和数字键盘键不需要修改键即可成为有效 <xref:System.Windows.Input.KeyGesture>。</span><span class="sxs-lookup"><span data-stu-id="62e23-107">Function keys and numeric keypad keys do not require a modifier key in order to be a valid <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="62e23-108">可以通过 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 或代码指定无效的 <xref:System.Windows.Input.KeyGesture> 和具有无效关联手势的 <xref:System.Windows.Input.KeyBinding>。</span><span class="sxs-lookup"><span data-stu-id="62e23-108">It is possible to specify an invalid <xref:System.Windows.Input.KeyGesture> and a <xref:System.Windows.Input.KeyBinding> with an invalid associated gesture, either through [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] or code.</span></span> <span data-ttu-id="62e23-109">例如，没有用于阻止创建和绑定只包含 nonfunction 键的 <xref:System.Windows.Input.KeyGesture>，或仅包含修饰符但没有键的验证。</span><span class="sxs-lookup"><span data-stu-id="62e23-109">For instance, there is no validation that prevents creating and binding a <xref:System.Windows.Input.KeyGesture> that contains only a nonfunction key, or only modifiers but no key.</span></span> <span data-ttu-id="62e23-110">此类 <xref:System.Windows.Input.KeyBinding> 将永远不会尝试调用其关联的命令。</span><span class="sxs-lookup"><span data-stu-id="62e23-110">Such a <xref:System.Windows.Input.KeyBinding> will never attempt to invoke its associated command.</span></span>  
  
 <span data-ttu-id="62e23-111">在 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 中定义 <xref:System.Windows.Input.KeyBinding> 时，有两种方法可指定 <xref:System.Windows.Input.KeyGesture>。</span><span class="sxs-lookup"><span data-stu-id="62e23-111">When defining a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] there are two ways to specify the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="62e23-112">在 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 中建立 <xref:System.Windows.Input.KeyBinding> 的第一种方法是定义 <xref:System.Windows.Input.KeyBinding> 元素的 <xref:System.Windows.Input.KeyBinding.Gesture%2A> 属性，这将启用语法以将键和修饰符指定为单个字符串，例如 "CTRL + P"。</span><span class="sxs-lookup"><span data-stu-id="62e23-112">The first way to establish a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is to define the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute of the <xref:System.Windows.Input.KeyBinding> element, which enables a syntax to specify keys and modifiers as a single string, for example "CTRL+P".</span></span> <span data-ttu-id="62e23-113">第二种方法是定义 <xref:System.Windows.Input.KeyBinding.Key%2A> 属性和 <xref:System.Windows.Input.KeyBinding> 元素的 <xref:System.Windows.Input.KeyBinding.Modifiers%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="62e23-113">The second way is to define the <xref:System.Windows.Input.KeyBinding.Key%2A> attribute and the <xref:System.Windows.Input.KeyBinding.Modifiers%2A> attributes of the <xref:System.Windows.Input.KeyBinding> element.</span></span> <span data-ttu-id="62e23-114">设置 <xref:System.Windows.Input.KeyGesture> 的两种方法都是等效的，并且修改相同的基础对象，但如果两者都使用，则会发生冲突。</span><span class="sxs-lookup"><span data-stu-id="62e23-114">Both ways of setting the <xref:System.Windows.Input.KeyGesture> are equivalent and modify the same underlying object, but there will be a conflict if both are used.</span></span>  <span data-ttu-id="62e23-115">如果已设置 <xref:System.Windows.Input.KeyBinding.Key%2A>、<xref:System.Windows.Input.KeyBinding.Modifiers%2A>和 <xref:System.Windows.Input.KeyBinding.Gesture%2A> 属性，则最后定义的属性将用于该 <xref:System.Windows.Input.KeyGesture>。</span><span class="sxs-lookup"><span data-stu-id="62e23-115">In the case when the <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>, and the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attributes are all set, the attribute which is defined last will be used for the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="62e23-116">在某些情况下，您可能会遇到这样的情况：例如，<xref:System.Windows.Input.KeyBinding.Key%2A> 集最后将只覆盖前面的手势的关键组件，但使该笔势的修饰符保持不变。</span><span class="sxs-lookup"><span data-stu-id="62e23-116">You can potentially have situations where for example a <xref:System.Windows.Input.KeyBinding.Key%2A> set last will overwrite just the Key component of a preceding Gesture but leave the Gesture's modifiers the same.</span></span> <span data-ttu-id="62e23-117">通常，建议仅使用 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]中的 <xref:System.Windows.Input.KeyBinding.Gesture%2A> 属性;这将避免多义性，提供最简单的语法，并提供最简单的序列化表示形式。</span><span class="sxs-lookup"><span data-stu-id="62e23-117">In general, it is recommended that you use only the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute from [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; this will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</span></span>  
  
 <span data-ttu-id="62e23-118">可以通过在 <xref:System.Windows.Input.CommandManager> 类上注册 <xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A>，在特定对象上或在类级别上定义 <xref:System.Windows.Input.KeyBinding>。</span><span class="sxs-lookup"><span data-stu-id="62e23-118">A <xref:System.Windows.Input.KeyBinding> can be defined on a specific object or at the class level by registering a <xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A> on the <xref:System.Windows.Input.CommandManager> class.</span></span> <span data-ttu-id="62e23-119">定义 <xref:System.Windows.Input.KeyBinding> 的最典型方法是在控件模板内，通过声明一个或多个 <xref:System.Windows.Input.MouseBinding> 或 <xref:System.Windows.Input.KeyBinding> 元素来设置 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 中的 <xref:System.Windows.UIElement.InputBindings%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="62e23-119">The most typical way to define a <xref:System.Windows.Input.KeyBinding> is within the control template, setting the <xref:System.Windows.UIElement.InputBindings%2A> property in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] by declaring one or more <xref:System.Windows.Input.MouseBinding> or <xref:System.Windows.Input.KeyBinding> elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62e23-120">下面的示例创建一个 <xref:System.Windows.Input.KeyBinding>，并将其添加到根窗口的 <xref:System.Windows.Input.InputBindingCollection> 中。</span><span class="sxs-lookup"><span data-stu-id="62e23-120">The following example creates a <xref:System.Windows.Input.KeyBinding> and adds it to the <xref:System.Windows.Input.InputBindingCollection> of the root window.</span></span>  
  
 [!code-xaml[commandWithHandler#CommandHandlerKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlerkeybinding)]  
  
 [!code-csharp[CommandHandlerProcedural#CommandHandlerKeyBindingCodeBehind](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandHandlerProcedural/CSharp/Window1.xaml.cs#commandhandlerkeybindingcodebehind)]
 [!code-vb[CommandHandlerProcedural#CommandHandlerKeyBindingCodeBehind](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandHandlerProcedural/visualbasic/window1.xaml.vb#commandhandlerkeybindingcodebehind)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.KeyBinding" />
    <altmember cref="T:System.Windows.Input.MouseBinding" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.KeyGesture" />
    <altmember cref="T:System.Windows.Input.MouseGesture" />
    <altmember cref="T:System.Windows.Input.InputGesture" />
    <altmember cref="T:System.Windows.Input.InputBinding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="62e23-121">初始化 <see cref="T:System.Windows.Input.KeyBinding" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="62e23-121">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyBinding" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="62e23-122">初始化 <see cref="T:System.Windows.Input.KeyBinding" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="62e23-122">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyBinding" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding (System.Windows.Input.ICommand command, System.Windows.Input.KeyGesture gesture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, class System.Windows.Input.KeyGesture gesture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.KeyGesture)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As ICommand, gesture As KeyGesture)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::KeyGesture ^ gesture);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.KeyBinding : System.Windows.Input.ICommand * System.Windows.Input.KeyGesture -&gt; System.Windows.Input.KeyBinding" Usage="new System.Windows.Input.KeyBinding (command, gesture)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="gesture" Type="System.Windows.Input.KeyGesture" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="62e23-123">要与 <paramref name="gesture" /> 关联的命令。</span><span class="sxs-lookup"><span data-stu-id="62e23-123">The command to associate with <paramref name="gesture" />.</span></span></param>
        <param name="gesture"><span data-ttu-id="62e23-124">要与 <paramref name="command" /> 关联的键组合。</span><span class="sxs-lookup"><span data-stu-id="62e23-124">The key combination to associate with <paramref name="command" />.</span></span></param>
        <summary><span data-ttu-id="62e23-125">使用指定的 <see cref="T:System.Windows.Input.KeyBinding" /> 和 <see cref="T:System.Windows.Input.ICommand" /> 初始化 <see cref="T:System.Windows.Input.KeyGesture" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="62e23-125">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyBinding" /> class using the specified <see cref="T:System.Windows.Input.ICommand" /> and <see cref="T:System.Windows.Input.KeyGesture" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="62e23-126"><paramref name="command" /> 或 <paramref name="gesture" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="62e23-126"><paramref name="command" /> or <paramref name="gesture" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding (System.Windows.Input.ICommand command, System.Windows.Input.Key key, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, valuetype System.Windows.Input.Key key, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.Key,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As ICommand, key As Key, modifiers As ModifierKeys)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::Key key, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.KeyBinding : System.Windows.Input.ICommand * System.Windows.Input.Key * System.Windows.Input.ModifierKeys -&gt; System.Windows.Input.KeyBinding" Usage="new System.Windows.Input.KeyBinding (command, key, modifiers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="key" Type="System.Windows.Input.Key" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="62e23-127">要调用的命令。</span><span class="sxs-lookup"><span data-stu-id="62e23-127">The command to invoke.</span></span></param>
        <param name="key"><span data-ttu-id="62e23-128">要与 <paramref name="command" /> 关联的键。</span><span class="sxs-lookup"><span data-stu-id="62e23-128">The key to be associated with <paramref name="command" />.</span></span></param>
        <param name="modifiers"><span data-ttu-id="62e23-129">要与 <paramref name="command" /> 关联的修饰符。</span><span class="sxs-lookup"><span data-stu-id="62e23-129">The modifiers to be associated with <paramref name="command" />.</span></span></param>
        <summary><span data-ttu-id="62e23-130">使用指定的 <see cref="T:System.Windows.Input.KeyBinding" /> 以及将要转换为 <see cref="T:System.Windows.Input.ICommand" /> 的指定的 <see cref="T:System.Windows.Input.Key" /> 和 <see cref="T:System.Windows.Input.ModifierKeys" /> 初始化 <see cref="T:System.Windows.Input.KeyGesture" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="62e23-130">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyBinding" /> class using the specified <see cref="T:System.Windows.Input.ICommand" /> and the specified <see cref="T:System.Windows.Input.Key" /> and <see cref="T:System.Windows.Input.ModifierKeys" /> which will be converted into a <see cref="T:System.Windows.Input.KeyGesture" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="keyBinding.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="62e23-131">创建 <see cref="T:System.Windows.Input.KeyBinding" /> 的实例。</span><span class="sxs-lookup"><span data-stu-id="62e23-131">Creates an instance of a <see cref="T:System.Windows.Input.KeyBinding" />.</span></span></summary>
        <returns><span data-ttu-id="62e23-132">新对象。</span><span class="sxs-lookup"><span data-stu-id="62e23-132">The new object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Gesture">
      <MemberSignature Language="C#" Value="public override System.Windows.Input.InputGesture Gesture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputGesture Gesture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Gesture" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Gesture As InputGesture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Input::InputGesture ^ Gesture { System::Windows::Input::InputGesture ^ get(); void set(System::Windows::Input::InputGesture ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Gesture : System.Windows.Input.InputGesture with get, set" Usage="System.Windows.Input.KeyBinding.Gesture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Input.KeyGestureConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Input.KeyGestureValueSerializer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputGesture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="62e23-133">获取或设置与此 <see cref="T:System.Windows.Input.KeyBinding" /> 关联的笔势。</span><span class="sxs-lookup"><span data-stu-id="62e23-133">Gets or sets the gesture associated with this <see cref="T:System.Windows.Input.KeyBinding" />.</span></span></summary>
        <value><span data-ttu-id="62e23-134">键序列。</span><span class="sxs-lookup"><span data-stu-id="62e23-134">The key sequence.</span></span> <span data-ttu-id="62e23-135">默认值是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="62e23-135">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62e23-136">除了函数键和数字键盘键以外，<xref:System.Windows.Input.KeyGesture> 必须包含 <xref:System.Windows.Input.Key> 和一个或多个 <xref:System.Windows.Input.ModifierKeys>。</span><span class="sxs-lookup"><span data-stu-id="62e23-136">With the exception of the function keys and the numeric keypad keys, a <xref:System.Windows.Input.KeyGesture> must contain a <xref:System.Windows.Input.Key> and one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62e23-137">下面的示例演示如何使用 <xref:System.Windows.Input.KeyBinding> 将 <xref:System.Windows.Input.KeyGesture> 绑定到 <xref:System.Windows.Input.RoutedCommand> （标记和代码示例指定不同的键，但在其他方面等效）。</span><span class="sxs-lookup"><span data-stu-id="62e23-137">The following example shows how to bind a <xref:System.Windows.Input.KeyGesture> to a <xref:System.Windows.Input.RoutedCommand> using a <xref:System.Windows.Input.KeyBinding> (the markup and code examples specify different keys but are otherwise equivalent).</span></span>  
  
 [!code-xaml[commandWithHandler#CommandHandlerKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlerkeybinding)]  
  
 [!code-csharp[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keybindingwithkeyandmodifiers)]
 [!code-vb[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keybindingwithkeyandmodifiers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="62e23-138"><paramref name="gesture" /> 将要设置为的值不是 <see cref="T:System.Windows.Input.KeyGesture" />。</span><span class="sxs-lookup"><span data-stu-id="62e23-138">the value <paramref name="gesture" /> is being set to is not a <see cref="T:System.Windows.Input.KeyGesture" />.</span></span></exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Key Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.Key Key" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Key" />
      <MemberSignature Language="VB.NET" Value="Public Property Key As Key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Key Key { System::Windows::Input::Key get(); void set(System::Windows::Input::Key value); };" />
      <MemberSignature Language="F#" Value="member this.Key : System.Windows.Input.Key with get, set" Usage="System.Windows.Input.KeyBinding.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="62e23-139">获取或设置与此 <see cref="T:System.Windows.Input.Key" /> 关联的 <see cref="T:System.Windows.Input.KeyGesture" /> 的 <see cref="T:System.Windows.Input.KeyBinding" />。</span><span class="sxs-lookup"><span data-stu-id="62e23-139">Gets or sets the <see cref="T:System.Windows.Input.Key" /> of the <see cref="T:System.Windows.Input.KeyGesture" /> associated with this <see cref="T:System.Windows.Input.KeyBinding" />.</span></span></summary>
        <value><span data-ttu-id="62e23-140"><see cref="T:System.Windows.Input.KeyGesture" /> 的键部分。</span><span class="sxs-lookup"><span data-stu-id="62e23-140">The key part of the <see cref="T:System.Windows.Input.KeyGesture" />.</span></span> <span data-ttu-id="62e23-141">默认值是 <see cref="F:System.Windows.Input.Key.None" />。</span><span class="sxs-lookup"><span data-stu-id="62e23-141">The default value is <see cref="F:System.Windows.Input.Key.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62e23-142">除了函数键和数字键盘键以外，<xref:System.Windows.Input.KeyGesture> 必须包含 <xref:System.Windows.Input.Key> 和一个或多个 <xref:System.Windows.Input.ModifierKeys>。</span><span class="sxs-lookup"><span data-stu-id="62e23-142">With the exception of the function keys and the numeric keypad keys, a <xref:System.Windows.Input.KeyGesture> must contain a <xref:System.Windows.Input.Key> and one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  
  
 <span data-ttu-id="62e23-143">在 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 中定义 <xref:System.Windows.Input.KeyBinding> 时，有两种方法可指定 <xref:System.Windows.Input.KeyGesture>。</span><span class="sxs-lookup"><span data-stu-id="62e23-143">When defining a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] there are two ways to specify the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="62e23-144">在 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 中建立 <xref:System.Windows.Input.KeyBinding> 的第一种方法是定义 <xref:System.Windows.Input.KeyBinding> 元素的 <xref:System.Windows.Input.KeyBinding.Gesture%2A> 属性，这将启用语法以将键和修饰符指定为单个字符串，例如 "CTRL + P"。</span><span class="sxs-lookup"><span data-stu-id="62e23-144">The first way to establish a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is to define the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute of the <xref:System.Windows.Input.KeyBinding> element, which enables a syntax to specify keys and modifiers as a single string, for example "CTRL+P".</span></span> <span data-ttu-id="62e23-145">第二种方法是定义 <xref:System.Windows.Input.KeyBinding.Key%2A> 属性和 <xref:System.Windows.Input.KeyBinding> 元素的 <xref:System.Windows.Input.KeyBinding.Modifiers%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="62e23-145">The second way is to define the <xref:System.Windows.Input.KeyBinding.Key%2A> attribute and the <xref:System.Windows.Input.KeyBinding.Modifiers%2A> attributes of the <xref:System.Windows.Input.KeyBinding> element.</span></span> <span data-ttu-id="62e23-146">设置 <xref:System.Windows.Input.KeyGesture> 的两种方法都是等效的，并且修改相同的基础对象，但如果两者都使用，则会发生冲突。</span><span class="sxs-lookup"><span data-stu-id="62e23-146">Both ways of setting the <xref:System.Windows.Input.KeyGesture> are equivalent and modify the same underlying object, but there will be a conflict if both are used.</span></span>  <span data-ttu-id="62e23-147">如果已设置 <xref:System.Windows.Input.KeyBinding.Key%2A>、<xref:System.Windows.Input.KeyBinding.Modifiers%2A>和 <xref:System.Windows.Input.KeyBinding.Gesture%2A> 属性，则最后定义的属性将用于该 <xref:System.Windows.Input.KeyGesture>。</span><span class="sxs-lookup"><span data-stu-id="62e23-147">In the case when the <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>, and the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attributes are all set, the attribute which is defined last will be used for the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="62e23-148">在某些情况下，您可能会遇到这样的情况：例如，<xref:System.Windows.Input.KeyBinding.Key%2A> 集最后将只覆盖前面的手势的关键组件，但使该笔势的修饰符保持不变。</span><span class="sxs-lookup"><span data-stu-id="62e23-148">You can potentially have situations where for example a <xref:System.Windows.Input.KeyBinding.Key%2A> set last will overwrite just the Key component of a preceding Gesture but leave the Gesture's modifiers the same.</span></span> <span data-ttu-id="62e23-149">通常，建议仅使用 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]中的 <xref:System.Windows.Input.KeyBinding.Gesture%2A> 属性;这将避免多义性，提供最简单的语法，并提供最简单的序列化表示形式。</span><span class="sxs-lookup"><span data-stu-id="62e23-149">In general, it is recommended that you use only the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute from [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; this will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="KeyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty KeyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty KeyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.KeyBinding.KeyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ KeyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.KeyBinding.KeyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="62e23-150">标识 <see cref="P:System.Windows.Input.KeyBinding.Key" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="62e23-150">Identifies the <see cref="P:System.Windows.Input.KeyBinding.Key" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ModifierKeys Modifiers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.ModifierKeys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public Property Modifiers As ModifierKeys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ModifierKeys Modifiers { System::Windows::Input::ModifierKeys get(); void set(System::Windows::Input::ModifierKeys value); };" />
      <MemberSignature Language="F#" Value="member this.Modifiers : System.Windows.Input.ModifierKeys with get, set" Usage="System.Windows.Input.KeyBinding.Modifiers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ModifierKeys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="62e23-151">获取或设置与此 <see cref="T:System.Windows.Input.ModifierKeys" /> 关联的 <see cref="T:System.Windows.Input.KeyGesture" /> 的 <see cref="T:System.Windows.Input.KeyBinding" />。</span><span class="sxs-lookup"><span data-stu-id="62e23-151">Gets or sets the <see cref="T:System.Windows.Input.ModifierKeys" /> of the <see cref="T:System.Windows.Input.KeyGesture" /> associated with this <see cref="T:System.Windows.Input.KeyBinding" />.</span></span></summary>
        <value><span data-ttu-id="62e23-152"><see cref="T:System.Windows.Input.KeyGesture" /> 的修改键。</span><span class="sxs-lookup"><span data-stu-id="62e23-152">The modifier keys of the <see cref="T:System.Windows.Input.KeyGesture" />.</span></span>  <span data-ttu-id="62e23-153">默认值是 <see cref="F:System.Windows.Input.ModifierKeys.None" />。</span><span class="sxs-lookup"><span data-stu-id="62e23-153">The default value is <see cref="F:System.Windows.Input.ModifierKeys.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62e23-154">除了函数键和数字键盘键以外，<xref:System.Windows.Input.KeyGesture> 必须包含 <xref:System.Windows.Input.Key> 和一个或多个 <xref:System.Windows.Input.ModifierKeys>。</span><span class="sxs-lookup"><span data-stu-id="62e23-154">With the exception of the function keys and the numeric keypad keys, a <xref:System.Windows.Input.KeyGesture> must contain a <xref:System.Windows.Input.Key> and one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  
  
 <span data-ttu-id="62e23-155">在 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 中定义 <xref:System.Windows.Input.KeyBinding> 时，有两种方法可指定 <xref:System.Windows.Input.KeyGesture>。</span><span class="sxs-lookup"><span data-stu-id="62e23-155">When defining a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] there are two ways to specify the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="62e23-156">在 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 中建立 <xref:System.Windows.Input.KeyBinding> 的第一种方法是定义 <xref:System.Windows.Input.KeyBinding> 元素的 <xref:System.Windows.Input.KeyBinding.Gesture%2A> 属性，这将启用语法以将键和修饰符指定为单个字符串，例如 "CTRL + P"。</span><span class="sxs-lookup"><span data-stu-id="62e23-156">The first way to establish a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is to define the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute of the <xref:System.Windows.Input.KeyBinding> element, which enables a syntax to specify keys and modifiers as a single string, for example "CTRL+P".</span></span> <span data-ttu-id="62e23-157">第二种方法是定义 <xref:System.Windows.Input.KeyBinding.Key%2A> 属性和 <xref:System.Windows.Input.KeyBinding> 元素的 <xref:System.Windows.Input.KeyBinding.Modifiers%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="62e23-157">The second way is to define the <xref:System.Windows.Input.KeyBinding.Key%2A> attribute and the <xref:System.Windows.Input.KeyBinding.Modifiers%2A> attributes of the <xref:System.Windows.Input.KeyBinding> element.</span></span> <span data-ttu-id="62e23-158">设置 <xref:System.Windows.Input.KeyGesture> 的两种方法都是等效的，并且修改相同的基础对象，但如果两者都使用，则会发生冲突。</span><span class="sxs-lookup"><span data-stu-id="62e23-158">Both ways of setting the <xref:System.Windows.Input.KeyGesture> are equivalent and modify the same underlying object, but there will be a conflict if both are used.</span></span>  <span data-ttu-id="62e23-159">如果已设置 <xref:System.Windows.Input.KeyBinding.Key%2A>、<xref:System.Windows.Input.KeyBinding.Modifiers%2A>和 <xref:System.Windows.Input.KeyBinding.Gesture%2A> 属性，则最后定义的属性将用于该 <xref:System.Windows.Input.KeyGesture>。</span><span class="sxs-lookup"><span data-stu-id="62e23-159">In the case when the <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>, and the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attributes are all set, the attribute which is defined last will be used for the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="62e23-160">在某些情况下，您可能会遇到这样的情况：例如，<xref:System.Windows.Input.KeyBinding.Key%2A> 集最后将只覆盖前面的手势的关键组件，但使该笔势的修饰符保持不变。</span><span class="sxs-lookup"><span data-stu-id="62e23-160">You can potentially have situations where for example a <xref:System.Windows.Input.KeyBinding.Key%2A> set last will overwrite just the Key component of a preceding Gesture but leave the Gesture's modifiers the same.</span></span> <span data-ttu-id="62e23-161">通常，建议仅使用 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]中的 <xref:System.Windows.Input.KeyBinding.Gesture%2A> 属性;这将避免多义性，提供最简单的语法，并提供最简单的序列化表示形式。</span><span class="sxs-lookup"><span data-stu-id="62e23-161">In general, it is recommended that you use only the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute from [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; this will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</span></span>  
  
<a name="xamlAttributeUsage_Modifiers"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="62e23-162">XAML 特性用法</span><span class="sxs-lookup"><span data-stu-id="62e23-162">XAML Attribute Usage</span></span>  
  
```  
<object Modifiers="oneOrMoreModifierKeys"/>  
  
```  
  
<a name="xamlValues_Modifiers"></a>   
## <a name="xaml-values"></a><span data-ttu-id="62e23-163">XAML 值</span><span class="sxs-lookup"><span data-stu-id="62e23-163">XAML Values</span></span>  
 <span data-ttu-id="62e23-164">*oneOrMoreModifierKeys*</span><span class="sxs-lookup"><span data-stu-id="62e23-164">*oneOrMoreModifierKeys*</span></span>  
 <span data-ttu-id="62e23-165">由 <xref:System.Windows.Input.ModifierKeys> 枚举定义的一个或多个修改键，用 "+" 字符分隔。</span><span class="sxs-lookup"><span data-stu-id="62e23-165">One or more modifier keys, defined by the <xref:System.Windows.Input.ModifierKeys> enumeration, delimited with a "+" character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="ModifiersProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ModifiersProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ModifiersProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.KeyBinding.ModifiersProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ModifiersProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ModifiersProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ModifiersProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.KeyBinding.ModifiersProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="62e23-166">标识 <see cref="P:System.Windows.Input.KeyBinding.Modifiers" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="62e23-166">Identifies the <see cref="P:System.Windows.Input.KeyBinding.Modifiers" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
