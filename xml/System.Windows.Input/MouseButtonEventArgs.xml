<Type Name="MouseButtonEventArgs" FullName="System.Windows.Input.MouseButtonEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="417e176f451e62e544b8f51174662a6d74389e8e" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86700204" /></Metadata><TypeSignature Language="C#" Value="public class MouseButtonEventArgs : System.Windows.Input.MouseEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MouseButtonEventArgs extends System.Windows.Input.MouseEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.MouseButtonEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class MouseButtonEventArgs&#xA;Inherits MouseEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class MouseButtonEventArgs : System::Windows::Input::MouseEventArgs" />
  <TypeSignature Language="F#" Value="type MouseButtonEventArgs = class&#xA;    inherit MouseEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.MouseEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为鼠标按钮相关事件提供数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.MouseButtonEventArgs> 与以下事件一起使用： <xref:System.Windows.Input.Mouse.MouseDown> 、 <xref:System.Windows.Input.Mouse.MouseUp> 、、、、 <xref:System.Windows.UIElement.MouseLeftButtonDown> <xref:System.Windows.UIElement.MouseLeftButtonUp> <xref:System.Windows.UIElement.MouseRightButtonDown> <xref:System.Windows.UIElement.MouseRightButtonUp> 和对应的隧道事件。  
  
 <xref:System.Windows.Input.Mouse>类提供用于确定鼠标状态的附加属性和方法。  
  
   
  
## Examples  
 下面的示例创建一个鼠标按钮事件处理程序，该处理程序更改引发事件的对象的颜色。  选择的颜色取决于按下的鼠标按钮。  <xref:System.Windows.Input.MouseButtonEventArgs.ChangedButton%2A>检查属性以确定所按下的按钮。  
  
 [!code-csharp[mousesnippetsample#MouseEventArgsChangedButton](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mouseeventargschangedbutton)]
 [!code-vb[mousesnippetsample#MouseEventArgsChangedButton](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mouseeventargschangedbutton)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.MouseButtonEventHandler" />
    <altmember cref="T:System.Windows.Input.MouseEventArgs" />
    <altmember cref="T:System.Windows.Input.MouseEventHandler" />
    <altmember cref="T:System.Windows.Input.MouseButtonState" />
    <altmember cref="T:System.Windows.Input.MouseAction" />
    <altmember cref="T:System.Windows.Input.Mouse" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseButtonEventArgs (System.Windows.Input.MouseDevice mouse, int timestamp, System.Windows.Input.MouseButton button);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.MouseDevice mouse, int32 timestamp, valuetype System.Windows.Input.MouseButton button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseButtonEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.MouseButton)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mouse As MouseDevice, timestamp As Integer, button As MouseButton)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MouseButtonEventArgs(System::Windows::Input::MouseDevice ^ mouse, int timestamp, System::Windows::Input::MouseButton button);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.MouseButtonEventArgs : System.Windows.Input.MouseDevice * int * System.Windows.Input.MouseButton -&gt; System.Windows.Input.MouseButtonEventArgs" Usage="new System.Windows.Input.MouseButtonEventArgs (mouse, timestamp, button)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mouse" Type="System.Windows.Input.MouseDevice" />
        <Parameter Name="timestamp" Type="System.Int32" />
        <Parameter Name="button" Type="System.Windows.Input.MouseButton" />
      </Parameters>
      <Docs>
        <param name="mouse">与此事件关联的逻辑鼠标设备。</param>
        <param name="timestamp">发生输入的时间。</param>
        <param name="button">要描述其状态的鼠标按钮。</param>
        <summary>使用指定的 <see cref="T:System.Windows.Input.MouseButtonEventArgs" />、时间戳和 <see cref="T:System.Windows.Input.MouseDevice" /> 初始化 <see cref="T:System.Windows.Input.MouseButton" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseEventArgs" />
        <altmember cref="T:System.Windows.Input.MouseEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseButtonState" />
        <altmember cref="T:System.Windows.Input.MouseAction" />
        <altmember cref="T:System.Windows.Input.Mouse" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseButtonEventArgs (System.Windows.Input.MouseDevice mouse, int timestamp, System.Windows.Input.MouseButton button, System.Windows.Input.StylusDevice stylusDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.MouseDevice mouse, int32 timestamp, valuetype System.Windows.Input.MouseButton button, class System.Windows.Input.StylusDevice stylusDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseButtonEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.MouseButton,System.Windows.Input.StylusDevice)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mouse As MouseDevice, timestamp As Integer, button As MouseButton, stylusDevice As StylusDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MouseButtonEventArgs(System::Windows::Input::MouseDevice ^ mouse, int timestamp, System::Windows::Input::MouseButton button, System::Windows::Input::StylusDevice ^ stylusDevice);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.MouseButtonEventArgs : System.Windows.Input.MouseDevice * int * System.Windows.Input.MouseButton * System.Windows.Input.StylusDevice -&gt; System.Windows.Input.MouseButtonEventArgs" Usage="new System.Windows.Input.MouseButtonEventArgs (mouse, timestamp, button, stylusDevice)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mouse" Type="System.Windows.Input.MouseDevice" />
        <Parameter Name="timestamp" Type="System.Int32" />
        <Parameter Name="button" Type="System.Windows.Input.MouseButton" />
        <Parameter Name="stylusDevice" Type="System.Windows.Input.StylusDevice" />
      </Parameters>
      <Docs>
        <param name="mouse">与此事件关联的逻辑鼠标设备。</param>
        <param name="timestamp">事件发生的时间。</param>
        <param name="button">与该事件关联的按钮。</param>
        <param name="stylusDevice">与该事件关联的触笔设备。</param>
        <summary>使用指定的 <see cref="T:System.Windows.Input.MouseButtonEventArgs" />、时间戳、<see cref="T:System.Windows.Input.MouseDevice" /> 和 <see cref="T:System.Windows.Input.MouseButton" /> 初始化 <see cref="T:System.Windows.Input.StylusDevice" /> 类的新实例。  .</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseEventArgs" />
        <altmember cref="T:System.Windows.Input.MouseEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseButtonState" />
        <altmember cref="T:System.Windows.Input.MouseAction" />
        <altmember cref="T:System.Windows.Input.Mouse" />
      </Docs>
    </Member>
    <Member MemberName="ButtonState">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButtonState ButtonState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButtonState ButtonState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseButtonEventArgs.ButtonState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ButtonState As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseButtonState ButtonState { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.ButtonState : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.MouseButtonEventArgs.ButtonState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与该事件关联的按钮的状态。</summary>
        <value>按钮的状态。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.Mouse>类提供用于确定鼠标状态的附加属性和方法。  
  
   
  
## Examples  
 下面的示例创建鼠标按钮事件处理程序，该处理程序更改处理事件的对象的颜色。  选择的颜色取决于按下还是释放鼠标按钮。  
  
 [!code-csharp[mousesnippetsample#MouseEventArgsButtonStatePressed](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mouseeventargsbuttonstatepressed)]
 [!code-vb[mousesnippetsample#MouseEventArgsButtonStatePressed](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mouseeventargsbuttonstatepressed)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseEventArgs" />
        <altmember cref="T:System.Windows.Input.MouseEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseButtonState" />
        <altmember cref="T:System.Windows.Input.MouseAction" />
        <altmember cref="T:System.Windows.Input.Mouse" />
      </Docs>
    </Member>
    <Member MemberName="ChangedButton">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButton ChangedButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButton ChangedButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseButtonEventArgs.ChangedButton" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChangedButton As MouseButton" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseButton ChangedButton { System::Windows::Input::MouseButton get(); };" />
      <MemberSignature Language="F#" Value="member this.ChangedButton : System.Windows.Input.MouseButton" Usage="System.Windows.Input.MouseButtonEventArgs.ChangedButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButton</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与该事件关联的按钮。</summary>
        <value>按下的按钮。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.Mouse>类提供用于确定鼠标状态的附加属性和方法。  
  
   
  
## Examples  
 下面的示例创建一个鼠标按钮事件处理程序，该处理程序根据所按下的鼠标按钮更改对象的颜色。  <xref:System.Windows.Input.MouseButtonEventArgs.ChangedButton%2A>检查属性以确定所按下的按钮。  
  
 [!code-csharp[mousesnippetsample#MouseEventArgsChangedButton](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mouseeventargschangedbutton)]
 [!code-vb[mousesnippetsample#MouseEventArgsChangedButton](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mouseeventargschangedbutton)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseEventArgs" />
        <altmember cref="T:System.Windows.Input.MouseEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseButtonState" />
        <altmember cref="T:System.Windows.Input.MouseAction" />
        <altmember cref="T:System.Windows.Input.Mouse" />
      </Docs>
    </Member>
    <Member MemberName="ClickCount">
      <MemberSignature Language="C#" Value="public int ClickCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ClickCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseButtonEventArgs.ClickCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClickCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ClickCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ClickCount : int" Usage="System.Windows.Input.MouseButtonEventArgs.ClickCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取单击此按钮的次数。</summary>
        <value>单击此鼠标按钮的次数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 的一个用途 <xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> 是确定是否发生了双击鼠标。  某些类公开双击事件，例如 <xref:System.Windows.Controls.Control.MouseDoubleClick> 类的事件 <xref:System.Windows.Controls.Control> 。 在类上未公开双击事件时，可以使用 <xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> 事件数据的属性检测双击。  
  
   
  
## Examples  
 下面的示例创建一个 <xref:System.Windows.Input.MouseButtonEventHandler> ，它确定是发生了单个、双重还是三次单击。  <xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> 属性用于确定点击数。  
  
 [!code-csharp[mousesnippetsample#MouseClickCountDoubleClick](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mouseclickcountdoubleclick)]
 [!code-vb[mousesnippetsample#MouseClickCountDoubleClick](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mouseclickcountdoubleclick)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseEventArgs" />
        <altmember cref="T:System.Windows.Input.MouseEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseButtonState" />
        <altmember cref="T:System.Windows.Input.MouseAction" />
        <altmember cref="T:System.Windows.Input.Mouse" />
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberSignature Language="F#" Value="override this.InvokeEventHandler : Delegate * obj -&gt; unit" Usage="mouseButtonEventArgs.InvokeEventHandler (genericHandler, genericTarget)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">以特定于类型的方式调用的一般处理程序。</param>
        <param name="genericTarget">要对其调用处理程序的目标。</param>
        <summary>以特定于类型的方式调用事件处理程序，这样做可以提高事件系统效率。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此实现将泛型处理程序强制转换为 <xref:System.Windows.Input.MouseEventHandler> ，然后调用它。 有关此实现模式及其原因的详细信息，请参阅 <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> 和 [路由事件概述](/dotnet/framework/wpf/advanced/routed-events-overview)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseEventArgs" />
        <altmember cref="T:System.Windows.Input.MouseEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseButtonState" />
        <altmember cref="T:System.Windows.Input.MouseAction" />
        <altmember cref="T:System.Windows.Input.Mouse" />
      </Docs>
    </Member>
  </Members>
</Type>
