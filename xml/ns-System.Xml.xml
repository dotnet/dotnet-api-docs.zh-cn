<Namespace Name="System.Xml">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3684eea60557b4111b167685ed6ae94a8c750912" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89710033" /></Metadata><Docs>
    <summary><span data-ttu-id="ecba8-101"><see cref="N:System.Xml" /> 命名空间为处理 XML 提供基于标准的支持。</span><span class="sxs-lookup"><span data-stu-id="ecba8-101">The <see cref="N:System.Xml" /> namespace provides standards-based support for processing XML.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="std"></a>   
## <a name="supported-standards"></a><span data-ttu-id="ecba8-102">支持的标准</span><span class="sxs-lookup"><span data-stu-id="ecba8-102">Supported standards</span></span>  
 <span data-ttu-id="ecba8-103"><xref:System.Xml>命名空间支持以下标准：</span><span class="sxs-lookup"><span data-stu-id="ecba8-103">The <xref:System.Xml> namespace supports these standards:</span></span>  
  
- [<span data-ttu-id="ecba8-104">XML 1.0，包括 DTD 支持</span><span class="sxs-lookup"><span data-stu-id="ecba8-104">XML 1.0, including DTD support</span></span>](https://www.w3.org/TR/2006/REC-xml-20060816/)  
  
- <span data-ttu-id="ecba8-105">[XML 命名空间](https://www.w3.org/TR/REC-xml-names/)，流级别和 DOM</span><span class="sxs-lookup"><span data-stu-id="ecba8-105">[XML namespaces](https://www.w3.org/TR/REC-xml-names/), both stream-level and DOM</span></span>  
  
- [<span data-ttu-id="ecba8-106">XML 架构</span><span class="sxs-lookup"><span data-stu-id="ecba8-106">XML schemas</span></span>](https://www.w3.org/2001/XMLSchema)  
  
- [<span data-ttu-id="ecba8-107">XPath 表达式</span><span class="sxs-lookup"><span data-stu-id="ecba8-107">XPath expressions</span></span>](https://www.w3.org/TR/xpath)  
  
- [<span data-ttu-id="ecba8-108">XSLT 转换</span><span class="sxs-lookup"><span data-stu-id="ecba8-108">XSLT transformations</span></span>](https://www.w3.org/TR/xslt)  
  
- [<span data-ttu-id="ecba8-109">DOM 级别1核心</span><span class="sxs-lookup"><span data-stu-id="ecba8-109">DOM Level 1 Core</span></span>](https://www.w3.org/TR/REC-DOM-Level-1/)  
  
- [<span data-ttu-id="ecba8-110">DOM 级别2核心</span><span class="sxs-lookup"><span data-stu-id="ecba8-110">DOM Level 2 Core</span></span>](https://www.w3.org/TR/DOM-Level-2/)  
  
 <span data-ttu-id="ecba8-111">请参阅 [w3c 规范与 w3c 规范的区别](#diff) 部分，其中的两种情况下的 XML 类不同于 w3c 建议。</span><span class="sxs-lookup"><span data-stu-id="ecba8-111">See the section [Differences from the W3C specs](#diff) for two cases in which the XML classes differ from the W3C recommendations.</span></span>  
  
<a name="related"></a>   
## <a name="related-namespaces"></a><span data-ttu-id="ecba8-112">相关命名空间</span><span class="sxs-lookup"><span data-stu-id="ecba8-112">Related namespaces</span></span>  
 <span data-ttu-id="ecba8-113">.NET Framework 还为 XML 相关操作提供了其他命名空间。</span><span class="sxs-lookup"><span data-stu-id="ecba8-113">The .NET Framework also provides other namespaces for XML-related operations.</span></span> <span data-ttu-id="ecba8-114">有关列表、说明和链接，请参阅 " [System.Xml 命名空间](https://msdn.microsoft.com/library/gg145036.aspx) " 网页。</span><span class="sxs-lookup"><span data-stu-id="ecba8-114">For a list, descriptions, and links, see the [System.Xml Namespaces](https://msdn.microsoft.com/library/gg145036.aspx) webpage.</span></span>  
  
<a name="async"></a>   
## <a name="processing-xml-asynchronously"></a><span data-ttu-id="ecba8-115">异步处理 XML</span><span class="sxs-lookup"><span data-stu-id="ecba8-115">Processing XML asynchronously</span></span>  
 <span data-ttu-id="ecba8-116"><xref:System.Xml.XmlReader?displayProperty=nameWithType>和 <xref:System.Xml.XmlWriter?displayProperty=nameWithType> 类包括许多基于异步编程模型的异步方法。</span><span class="sxs-lookup"><span data-stu-id="ecba8-116">The <xref:System.Xml.XmlReader?displayProperty=nameWithType> and <xref:System.Xml.XmlWriter?displayProperty=nameWithType> classes include a number of asynchronous methods that are based on the asynchronous programming model.</span></span> <span data-ttu-id="ecba8-117">这些方法可以通过其名称末尾的字符串 "Async" 进行标识。</span><span class="sxs-lookup"><span data-stu-id="ecba8-117">These methods can be identified by the string "Async" at the end of their names.</span></span> <span data-ttu-id="ecba8-118">利用这些方法，你可以编写类似于同步代码的异步代码，并可以轻松地将现有同步代码迁移到异步代码。</span><span class="sxs-lookup"><span data-stu-id="ecba8-118">With these methods, you can write asynchronous code that's similar to your synchronous code, and you can migrate your existing synchronous code to asynchronous code easily.</span></span>  
  
-   <span data-ttu-id="ecba8-119">在具有大量网络流延迟的应用程序中使用异步方法。</span><span class="sxs-lookup"><span data-stu-id="ecba8-119">Use the asynchronous methods in apps where there is significant network stream latency.</span></span> <span data-ttu-id="ecba8-120">避免使用异步 Api 进行内存流或本地文件流读/写操作。</span><span class="sxs-lookup"><span data-stu-id="ecba8-120">Avoid using the asynchronous APIs for memory stream or local file stream read/write operations.</span></span> <span data-ttu-id="ecba8-121">输入流、 <xref:System.Xml.XmlTextReader> 和 <xref:System.Xml.XmlTextWriter> 应该也支持异步操作。</span><span class="sxs-lookup"><span data-stu-id="ecba8-121">The input stream, <xref:System.Xml.XmlTextReader>, and <xref:System.Xml.XmlTextWriter> should support asynchronous operations as well.</span></span> <span data-ttu-id="ecba8-122">否则，i/o 操作仍将阻止线程。</span><span class="sxs-lookup"><span data-stu-id="ecba8-122">Otherwise, threads will still be blocked by I/O operations.</span></span>  
  
-   <span data-ttu-id="ecba8-123">我们不建议混合使用同步和异步函数调用，因为你可能会忘记使用 `await` 关键字或使用同步 API （在这种情况下需要使用异步的）。</span><span class="sxs-lookup"><span data-stu-id="ecba8-123">We don't recommend mixing synchronous and asynchronous function calls, because you might forget to use the `await` keyword or use a synchronous API where an asynchronous one is necessary.</span></span>  
  
-   <span data-ttu-id="ecba8-124"><xref:System.Xml.XmlReaderSettings.Async%2A?displayProperty=nameWithType> <xref:System.Xml.XmlWriterSettings.Async%2A?displayProperty=nameWithType> `true` 如果不打算使用异步方法，请不要将或标记设置为。</span><span class="sxs-lookup"><span data-stu-id="ecba8-124">Do not set the <xref:System.Xml.XmlReaderSettings.Async%2A?displayProperty=nameWithType> or <xref:System.Xml.XmlWriterSettings.Async%2A?displayProperty=nameWithType> flag to `true` if you don't intend to use an asynchronous method.</span></span>  
  
-   <span data-ttu-id="ecba8-125">如果在 `await` 调用异步方法时忘记指定关键字，则结果是不确定的：你可能会收到预期结果或异常。</span><span class="sxs-lookup"><span data-stu-id="ecba8-125">If you forget to specify the `await` keyword when you call an asynchronous method, the results are non-deterministic: You might receive the result you expected or an exception.</span></span>  
  
-   <span data-ttu-id="ecba8-126">当 <xref:System.Xml.XmlReader> 对象读取大文本节点时，它可能仅缓存部分文本值并且返回文本节点，因此，在检索 <xref:System.Xml.XmlReader.Value%2A?displayProperty=nameWithType> 属性时，可能会被 i/o 操作阻止。</span><span class="sxs-lookup"><span data-stu-id="ecba8-126">When an <xref:System.Xml.XmlReader> object is reading a large text node, it might cache only a partial text value and return the text node, so retrieving the <xref:System.Xml.XmlReader.Value%2A?displayProperty=nameWithType> property might be blocked by an I/O operation.</span></span> <span data-ttu-id="ecba8-127">使用 <xref:System.Xml.XmlReader.GetValueAsync%2A?displayProperty=nameWithType> 方法可获取异步模式下的文本值，或使用 <xref:System.Xml.XmlReader.ReadValueChunkAsync%2A?displayProperty=nameWithType> 方法读取块区中的大型文本块。</span><span class="sxs-lookup"><span data-stu-id="ecba8-127">Use the <xref:System.Xml.XmlReader.GetValueAsync%2A?displayProperty=nameWithType> method to get the text value in asynchronous mode, or use the <xref:System.Xml.XmlReader.ReadValueChunkAsync%2A?displayProperty=nameWithType> method to read a large text block in chunks.</span></span>  
  
-   <span data-ttu-id="ecba8-128">使用 <xref:System.Xml.XmlWriter> 对象时，请在 <xref:System.Xml.XmlWriter.FlushAsync%2A?displayProperty=nameWithType> 调用之前调用方法， <xref:System.Xml.XmlWriter.Close%2A?displayProperty=nameWithType> 以避免阻塞 i/o 操作。</span><span class="sxs-lookup"><span data-stu-id="ecba8-128">When you use an <xref:System.Xml.XmlWriter> object, call the <xref:System.Xml.XmlWriter.FlushAsync%2A?displayProperty=nameWithType> method before calling <xref:System.Xml.XmlWriter.Close%2A?displayProperty=nameWithType> to avoid blocking an I/O operation.</span></span>  
  
<a name="diff"></a>   
## <a name="differences-from-the-w3c-specs"></a><span data-ttu-id="ecba8-129">与 W3C 规范的区别</span><span class="sxs-lookup"><span data-stu-id="ecba8-129">Differences from the W3C specs</span></span>  
 <span data-ttu-id="ecba8-130">在两个涉及模型组架构组件的约束的情况下， <xref:System.Xml> 命名空间不同于 W3C 建议。</span><span class="sxs-lookup"><span data-stu-id="ecba8-130">In two cases that involve constraints on model group schema components, the <xref:System.Xml> namespace differs from the W3C recommendations.</span></span>  
  
 <span data-ttu-id="ecba8-131">**元素声明中的一致性：**</span><span class="sxs-lookup"><span data-stu-id="ecba8-131">**Consistency in element declarations:**</span></span>  
  
 <span data-ttu-id="ecba8-132">在某些情况下，当使用替代组时， <xref:System.Xml> 实现不满足 "架构组件约束：元素声明的一致性" 这一点，详见 W3C 规范的 " [模型组架构组件约束](https://go.microsoft.com/fwlink/?LinkId=137029) " 部分。</span><span class="sxs-lookup"><span data-stu-id="ecba8-132">In some cases, when substitution groups are used, the <xref:System.Xml> implementation does not satisfy the "Schema Component Constraint: Element Declarations Consistent," which is described in the [Constraints on Model Group Schema Components](https://go.microsoft.com/fwlink/?LinkId=137029) section of the W3C spec.</span></span>  
  
 <span data-ttu-id="ecba8-133">例如，下面的架构包含名称相同但在同一内容模型中具有不同类型的元素，并且使用了替换组。</span><span class="sxs-lookup"><span data-stu-id="ecba8-133">For example, the following schema includes elements that have the same name but different types in the same content model, and substitution groups are used.</span></span> <span data-ttu-id="ecba8-134">这应该会导致错误，但是 <xref:System.Xml> 能够正确编译和验证该架构，而不会出错。</span><span class="sxs-lookup"><span data-stu-id="ecba8-134">This should cause an error, but <xref:System.Xml> compiles and validates the schema without errors.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>   
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">  
  
   <xs:element name="e1" type="t1"/>  
   <xs:complexType name="t1"/>  
  
   <xs:element name="e2" type="t2" substitutionGroup="e1"/>  
      <xs:complexType name="t2">  
         <xs:complexContent>  
            <xs:extension base="t1">  
         </xs:extension>  
      </xs:complexContent>  
   </xs:complexType>  
  
   <xs:complexType name="t3">  
      <xs:sequence>  
         <xs:element ref="e1"/>  
         <xs:element name="e2" type="xs:int"/>  
      </xs:sequence>  
   </xs:complexType>  
</xs:schema>  
```  
  
 <span data-ttu-id="ecba8-135">在此架构中，`t3` 类型包含一个元素序列。</span><span class="sxs-lookup"><span data-stu-id="ecba8-135">In this schema, type `t3` contains a sequence of elements.</span></span> <span data-ttu-id="ecba8-136">由于使用了替换，从序列中对元素 `e1` 的引用会导致类型为 `e1` 的元素 `t1` 或类型为 `e2` 的元素 `t2`。</span><span class="sxs-lookup"><span data-stu-id="ecba8-136">Because of the substitution, the reference to element `e1` from the sequence can result either in element `e1` of type `t1` or in element `e2` of type `t2`.</span></span> <span data-ttu-id="ecba8-137">后一种情况会产生两个元素的序列 `e2` ，其中一个元素的类型为 `t2` ，另一个的类型为 `xs:int` 。</span><span class="sxs-lookup"><span data-stu-id="ecba8-137">The latter case would result in a sequence of two `e2` elements, where one is of type `t2` and the other is of type `xs:int`.</span></span>  
  
 <span data-ttu-id="ecba8-138">**唯一粒子归属：**</span><span class="sxs-lookup"><span data-stu-id="ecba8-138">**Unique particle attribution:**</span></span>  
  
 <span data-ttu-id="ecba8-139">在以下条件下， <xref:System.Xml> 实现不满足 "架构组件约束：唯一粒子归属"，这在 W3C 规范的 " [模型组架构组件的约束](https://go.microsoft.com/fwlink/?LinkId=137029) " 部分中进行了介绍。</span><span class="sxs-lookup"><span data-stu-id="ecba8-139">Under the following conditions, the <xref:System.Xml> implementation does not satisfy the "Schema Component Constraint: Unique Particle Attribution," which is described in the [Constraints on Model Group Schema Components](https://go.microsoft.com/fwlink/?LinkId=137029) section of the W3C spec.</span></span>  
  
-   <span data-ttu-id="ecba8-140">组中的某个元素引用另一个元素。</span><span class="sxs-lookup"><span data-stu-id="ecba8-140">One of the elements in the group references another element.</span></span>  
  
-   <span data-ttu-id="ecba8-141">被引用的元素是替换组的头元素。</span><span class="sxs-lookup"><span data-stu-id="ecba8-141">The referenced element is a head element of a substitution group.</span></span>  
  
-   <span data-ttu-id="ecba8-142">替换组包含与组中的一个元素同名的元素。</span><span class="sxs-lookup"><span data-stu-id="ecba8-142">The substitution group contains an element that has the same name as one of the elements in the group.</span></span>  
  
-   <span data-ttu-id="ecba8-143">引用替换组头元素的元素基数与替换组元素同名的元素不会固定 (minOccurs < maxOccurs) 。</span><span class="sxs-lookup"><span data-stu-id="ecba8-143">The cardinality of the element that references the substitution group head element and the element with the same name as a substitution group element is not fixed (minOccurs < maxOccurs).</span></span>  
  
-   <span data-ttu-id="ecba8-144">引用替换组的元素的定义位于与替换组元素同名的元素的定义之前。</span><span class="sxs-lookup"><span data-stu-id="ecba8-144">The definition of the element that references the substitution group precedes the definition of the element with the same name as a substitution group element.</span></span>  
  
 <span data-ttu-id="ecba8-145">例如，在下面的架构中，内容模型有歧义，应该会导致编译错误，但是 <xref:System.Xml> 能够正确编译该架构，而不会出错。</span><span class="sxs-lookup"><span data-stu-id="ecba8-145">For example, in the schema below the content model is ambiguous and should cause a compilation error, but <xref:System.Xml> compiles the schema without errors.</span></span>  
  
```xml  
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">  
  
  <xs:element name="e1" type="xs:int"/>  
  <xs:element name="e2" type="xs:int" substitutionGroup="e1"/>  
  
  <xs:complexType name="t3">  
    <xs:sequence>  
      <xs:element ref="e1" minOccurs="0" maxOccurs="1"/>  
      <xs:element name="e2" type="xs:int" minOccurs="0" maxOccurs="1"/>  
    </xs:sequence>  
  </xs:complexType>  
  
  <xs:element name="e3" type="t3"/>  
</xs:schema>  
```  
  
 <span data-ttu-id="ecba8-146">如果尝试针对上述架构验证以下 XML，验证将失败，并出现以下消息： "元素 ' e3 ' 具有无效的子元素 ' e2 '。"， <xref:System.Xml.Schema.XmlSchemaValidationException> 将引发异常。</span><span class="sxs-lookup"><span data-stu-id="ecba8-146">If you try to validate the following XML against the schema above, the validation will fail with the following message: "The element 'e3' has invalid child element 'e2'." and an <xref:System.Xml.Schema.XmlSchemaValidationException> exception will be thrown.</span></span>  
  
```xml  
<e3>  
  <e2>1</e2>  
  <e2>2</e2>  
</e3>  
```  
  
 <span data-ttu-id="ecba8-147">若要解决此问题，可以在 XSD 文档中交换元素声明。</span><span class="sxs-lookup"><span data-stu-id="ecba8-147">To work around this problem, you can swap element declarations in the XSD document.</span></span> <span data-ttu-id="ecba8-148">例如：</span><span class="sxs-lookup"><span data-stu-id="ecba8-148">For example:</span></span>  
  
```xml  
<xs:sequence>  
  <xs:element ref="e1" minOccurs="0" maxOccurs="1"/>  
  <xs:element name="e2" type="xs:int" minOccurs="0" maxOccurs="1"/>  
</xs:sequence>  
```  
  
 <span data-ttu-id="ecba8-149">变为：</span><span class="sxs-lookup"><span data-stu-id="ecba8-149">becomes this:</span></span>  
  
```xml  
<xs:sequence>  
  <xs:element name="e2" type="xs:int" minOccurs="0" maxOccurs="1"/>  
  <xs:element ref="e1" minOccurs="0" maxOccurs="1"/>  
</xs:sequence>  
```  
  
 <span data-ttu-id="ecba8-150">下面是同一问题的另一个示例：</span><span class="sxs-lookup"><span data-stu-id="ecba8-150">Here's another example of the same issue:</span></span>  
  
```xml  
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">  
   <xs:element name="e1" type="xs:string"/>  
   <xs:element name="e2" type="xs:string" substitutionGroup="e1"/>  
  
   <xs:complexType name="t3">  
      <xs:sequence>  
         <xs:element ref="e1" minOccurs="0" maxOccurs="1"/>  
         <xs:element name="e2" type="xs:int" minOccurs="0" maxOccurs="1"/>  
      </xs:sequence>  
   </xs:complexType>  
   <xs:element name="e3" type="t3"/>  
</xs:schema>  
```  
  
 <span data-ttu-id="ecba8-151">如果尝试针对上述架构验证以下 XML，验证将失败，并出现以下异常： "未经处理的异常： System.Xml.Schema.XmlSchemaValidationException：" e2 "el 元素无效-根据其数据类型，值" abc "无效， `'http://www.w3.org/2001/XMLSchema:int'` 字符串" abc "不是有效的 Int32 值。</span><span class="sxs-lookup"><span data-stu-id="ecba8-151">If you try to validate the following XML against the schema above, the validation will fail with the following exception: "Unhandled Exception: System.Xml.Schema.XmlSchemaValidationException: The 'e2' el element is invalid - The value 'abc' is invalid according to its datatype `'http://www.w3.org/2001/XMLSchema:int'` - The string 'abc' is not a valid Int32 value."</span></span>
  
```xml  
<e3><e2>abc</e2></e3>  
```  
  
<a name="security"></a>   
## <a name="security-considerations"></a><span data-ttu-id="ecba8-152">安全注意事项</span><span class="sxs-lookup"><span data-stu-id="ecba8-152">Security considerations</span></span>  
 <span data-ttu-id="ecba8-153">命名空间中的类型和成员 <xref:System.Xml> 依赖于 [.net 安全系统](/dotnet/standard/security/)。</span><span class="sxs-lookup"><span data-stu-id="ecba8-153">The types and members in the <xref:System.Xml> namespace rely on the [.NET security system](/dotnet/standard/security/).</span></span> <span data-ttu-id="ecba8-154">以下部分介绍了特定于 XML 技术的安全问题。</span><span class="sxs-lookup"><span data-stu-id="ecba8-154">The following sections discuss security issues that are specific to XML technologies.</span></span>
  
 <span data-ttu-id="ecba8-155">另请注意，当你使用 <xref:System.Xml> 类型和成员时，如果 XML 包含有潜在的隐私隐患的数据，则需要以一种与最终用户的隐私相关的方式实现应用。</span><span class="sxs-lookup"><span data-stu-id="ecba8-155">Also note that when you use the <xref:System.Xml> types and members, if the XML contains data that has potential privacy implications, you need to implement your app in a way that respects your end users' privacy.</span></span>
  
 <span data-ttu-id="ecba8-156">**外部访问**</span><span class="sxs-lookup"><span data-stu-id="ecba8-156">**External access**</span></span>  
  
 <span data-ttu-id="ecba8-157">多项 XML 技术可以在处理期间检索其他文档。</span><span class="sxs-lookup"><span data-stu-id="ecba8-157">Several XML technologies have the ability to retrieve other documents during processing.</span></span> <span data-ttu-id="ecba8-158">例如，文档类型定义 (DTD) 可以驻留在正在分析的文档中。</span><span class="sxs-lookup"><span data-stu-id="ecba8-158">For example, a document type definition (DTD) can reside in the document being parsed.</span></span> <span data-ttu-id="ecba8-159">DTD 还可以驻留在正在分析的文档所引用的外部文档中。</span><span class="sxs-lookup"><span data-stu-id="ecba8-159">The DTD can also live in an external document that is referenced by the document being parsed.</span></span> <span data-ttu-id="ecba8-160">XML 架构定义语言 (XSD) 和 XSLT 技术还可以包括其他文件中的信息。</span><span class="sxs-lookup"><span data-stu-id="ecba8-160">The XML Schema definition language (XSD) and XSLT technologies also have the ability to include information from other files.</span></span> <span data-ttu-id="ecba8-161">这些外部资源可能存在一些安全问题。</span><span class="sxs-lookup"><span data-stu-id="ecba8-161">These external resources can present some security concerns.</span></span> <span data-ttu-id="ecba8-162">例如，你将需要确保你的应用只从受信任的站点检索文件，并且该应用程序检索的文件不包含恶意数据。</span><span class="sxs-lookup"><span data-stu-id="ecba8-162">For example, you'll want to ensure that your app retrieves files only from trusted sites, and that the file it retrieves doesn't contain malicious data.</span></span>  
  
 <span data-ttu-id="ecba8-163"><xref:System.Xml.XmlUrlResolver>类用于加载 XML 文档和解析外部资源（如实体、dtd 或架构）以及导入或包含指令。</span><span class="sxs-lookup"><span data-stu-id="ecba8-163">The <xref:System.Xml.XmlUrlResolver> class is used to load XML documents and to resolve external resources such as entities, DTDs, or schemas, and import or include directives.</span></span>  
  
 <span data-ttu-id="ecba8-164">您可以重写此类并指定 <xref:System.Xml.XmlResolver> 要使用的对象。</span><span class="sxs-lookup"><span data-stu-id="ecba8-164">You can override this class and specify the <xref:System.Xml.XmlResolver> object to use.</span></span> <span data-ttu-id="ecba8-165">如果需要打开自己无法控制的或不可信的资源，请使用 <xref:System.Xml.XmlSecureResolver> 类。</span><span class="sxs-lookup"><span data-stu-id="ecba8-165">Use the <xref:System.Xml.XmlSecureResolver> class if you need to open a resource that you do not control, or that is untrusted.</span></span> <span data-ttu-id="ecba8-166"><xref:System.Xml.XmlSecureResolver> 包装 <xref:System.Xml.XmlResolver> 并允许您限制基础 <xref:System.Xml.XmlResolver> 有权访问的资源。</span><span class="sxs-lookup"><span data-stu-id="ecba8-166">The <xref:System.Xml.XmlSecureResolver> wraps an <xref:System.Xml.XmlResolver> and allows you to restrict the resources that the underlying <xref:System.Xml.XmlResolver> has access to.</span></span>  
  
 <span data-ttu-id="ecba8-167">**拒绝服务**</span><span class="sxs-lookup"><span data-stu-id="ecba8-167">**Denial of service**</span></span>  
  
 <span data-ttu-id="ecba8-168">下列方案被认为不太容易受到拒绝服务攻击，原因是 <xref:System.Xml> 类可以防止受到此类攻击。</span><span class="sxs-lookup"><span data-stu-id="ecba8-168">The following scenarios are considered to be less vulnerable to denial of service attacks because the <xref:System.Xml> classes provide a means of protection from such attacks.</span></span>  
  
-   <span data-ttu-id="ecba8-169">分析文本 XML 数据。</span><span class="sxs-lookup"><span data-stu-id="ecba8-169">Parsing text XML data.</span></span>  
  
-   <span data-ttu-id="ecba8-170">分析二进制 XML 数据（如果二进制 XML 数据由 Microsoft SQL Server 生成）。</span><span class="sxs-lookup"><span data-stu-id="ecba8-170">Parsing binary XML data if the binary XML data was generated by Microsoft SQL Server.</span></span>  
  
-   <span data-ttu-id="ecba8-171">将数据源中的 XML 文档和片断写入文件系统、流、<xref:System.IO.TextWriter> 或 <xref:System.Text.StringBuilder>。</span><span class="sxs-lookup"><span data-stu-id="ecba8-171">Writing XML documents and fragments from data sources to the file system, streams, a <xref:System.IO.TextWriter>, or a <xref:System.Text.StringBuilder>.</span></span>  
  
-   <span data-ttu-id="ecba8-172">如果使用的是 <xref:System.Xml.XmlReader> 对象，并且 <xref:System.Xml.XmlReaderSettings.DtdProcessing%2A?displayProperty=nameWithType> 设置为 <xref:System.Xml.DtdProcessing.Prohibit?displayProperty=nameWithType>，则将文档加载到文档对象模型 (DOM) 对象。</span><span class="sxs-lookup"><span data-stu-id="ecba8-172">Loading documents into the Document Object Model (DOM) object if you are using an <xref:System.Xml.XmlReader> object and <xref:System.Xml.XmlReaderSettings.DtdProcessing%2A?displayProperty=nameWithType> set to <xref:System.Xml.DtdProcessing.Prohibit?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="ecba8-173">浏览 DOM 对象。</span><span class="sxs-lookup"><span data-stu-id="ecba8-173">Navigating the DOM object.</span></span>  
  
 <span data-ttu-id="ecba8-174">如果担心受到拒绝服务攻击，或处于不可信的环境下，建议不要使用下列方案。</span><span class="sxs-lookup"><span data-stu-id="ecba8-174">The following scenarios are not recommended if you are concerned about denial of service attacks, or if you are working in an untrusted environment.</span></span>  
  
-   <span data-ttu-id="ecba8-175">DTD 处理。</span><span class="sxs-lookup"><span data-stu-id="ecba8-175">DTD processing.</span></span>  
  
-   <span data-ttu-id="ecba8-176">架构处理。</span><span class="sxs-lookup"><span data-stu-id="ecba8-176">Schema processing.</span></span> <span data-ttu-id="ecba8-177">这涉及到将不可信架构添加到架构集合中、编译不可信架构以及使用不可信架构进行验证。</span><span class="sxs-lookup"><span data-stu-id="ecba8-177">This includes adding an untrusted schema to the schema collection, compiling an untrusted schema, and validating by using an untrusted schema.</span></span>  
  
-   <span data-ttu-id="ecba8-178">XSLT 处理。</span><span class="sxs-lookup"><span data-stu-id="ecba8-178">XSLT processing.</span></span>  
  
-   <span data-ttu-id="ecba8-179">分析用户提供的二进制 XML 数据的任意流。</span><span class="sxs-lookup"><span data-stu-id="ecba8-179">Parsing any arbitrary stream of user supplied binary XML data.</span></span>  
  
-   <span data-ttu-id="ecba8-180">DOM 操作，例如查询、编辑、在文档之间移动子树以及保存 DOM 对象。</span><span class="sxs-lookup"><span data-stu-id="ecba8-180">DOM operations such as querying, editing, moving sub-trees between documents, and saving DOM objects.</span></span>  
  
 <span data-ttu-id="ecba8-181">如果你担心拒绝服务问题，或者如果你正在处理不受信任的源，则不要启用 DTD 处理。</span><span class="sxs-lookup"><span data-stu-id="ecba8-181">If you are concerned about denial of service issues or if you are dealing with untrusted sources, do not enable DTD processing.</span></span> <span data-ttu-id="ecba8-182">默认情况下，此方法在该 <xref:System.Xml.XmlReader> 方法创建的对象上处于禁用状态 <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="ecba8-182">This is disabled by default on <xref:System.Xml.XmlReader> objects that the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method creates.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ecba8-183">默认情况下，<xref:System.Xml.XmlTextReader> 允许进行 DTD 处理。</span><span class="sxs-lookup"><span data-stu-id="ecba8-183">The <xref:System.Xml.XmlTextReader> allows DTD processing by default.</span></span> <span data-ttu-id="ecba8-184">可以使用 <xref:System.Xml.XmlTextReader.DtdProcessing%2A?displayProperty=nameWithType> 属性禁用此功能。</span><span class="sxs-lookup"><span data-stu-id="ecba8-184">Use the <xref:System.Xml.XmlTextReader.DtdProcessing%2A?displayProperty=nameWithType> property to disable this feature.</span></span>  
  
 <span data-ttu-id="ecba8-185">如果已启用 DTD 处理，则可以使用 <xref:System.Xml.XmlSecureResolver> 类来限制 <xref:System.Xml.XmlReader> 可以访问的资源。</span><span class="sxs-lookup"><span data-stu-id="ecba8-185">If you have DTD processing enabled, you can use the <xref:System.Xml.XmlSecureResolver> class to restrict the resources that the <xref:System.Xml.XmlReader> can access.</span></span> <span data-ttu-id="ecba8-186">你还可以设计应用程序，以便 XML 处理的内存和时间受到限制。</span><span class="sxs-lookup"><span data-stu-id="ecba8-186">You can also design your app so that the XML processing is memory and time constrained.</span></span> <span data-ttu-id="ecba8-187">例如，可以在 ASP.NET 应用程序中配置超时限制。</span><span class="sxs-lookup"><span data-stu-id="ecba8-187">For example, you can configure timeout limits in your ASP.NET app.</span></span>  
  
 <span data-ttu-id="ecba8-188">**处理注意事项**</span><span class="sxs-lookup"><span data-stu-id="ecba8-188">**Processing considerations**</span></span>  
  
 <span data-ttu-id="ecba8-189">由于 XML 文档可以包含对其他文件的引用，因此，很难确定分析 XML 文档所需的处理能力。</span><span class="sxs-lookup"><span data-stu-id="ecba8-189">Because XML documents can include references to other files, it is difficult to determine how much processing power is required to parse an XML document.</span></span> <span data-ttu-id="ecba8-190">例如，XML 文档可以包括 DTD。</span><span class="sxs-lookup"><span data-stu-id="ecba8-190">For example, XML documents can include a DTD.</span></span> <span data-ttu-id="ecba8-191">如果 DTD 包含嵌套实体或复杂内容模型，可能需要大量时间来分析文档。</span><span class="sxs-lookup"><span data-stu-id="ecba8-191">If the DTD contains nested entities or complex content models, it could take an excessive amount of time to parse the document.</span></span>  
  
 <span data-ttu-id="ecba8-192">使用 <xref:System.Xml.XmlReader> 时，通过设置 <xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A?displayProperty=nameWithType> 属性，您可以限制能够分析的文档大小。</span><span class="sxs-lookup"><span data-stu-id="ecba8-192">When using <xref:System.Xml.XmlReader>, you can limit the size of the document that can be parsed by setting the <xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="ecba8-193">通过设置 <xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A?displayProperty=nameWithType> 属性，您可以限制从扩展实体中生成的字符数。</span><span class="sxs-lookup"><span data-stu-id="ecba8-193">You can limit the number of characters that result from expanding entities by setting the <xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="ecba8-194">有关设置这些属性的示例，请参见相应的参考主题。</span><span class="sxs-lookup"><span data-stu-id="ecba8-194">See the appropriate reference topics for examples of setting these properties.</span></span>  
  
 <span data-ttu-id="ecba8-195">XSD 和 XSLT 技术具有其他一些可能影响处理性能的功能。</span><span class="sxs-lookup"><span data-stu-id="ecba8-195">The XSD and XSLT technologies have additional capabilities that can affect processing performance.</span></span> <span data-ttu-id="ecba8-196">例如，在计算相对较小的文档时，构造的 XML 架构可能需要大量的时间来处理。</span><span class="sxs-lookup"><span data-stu-id="ecba8-196">For example, it is possible to construct an XML schema that requires a substantial amount of time to process when evaluated over a relatively small document.</span></span> <span data-ttu-id="ecba8-197">还可能会在 XSLT 样式表中嵌入脚本块。</span><span class="sxs-lookup"><span data-stu-id="ecba8-197">It is also possible to embed script blocks within an XSLT style sheet.</span></span> <span data-ttu-id="ecba8-198">这两种情况都会给应用带来潜在的安全威胁。</span><span class="sxs-lookup"><span data-stu-id="ecba8-198">Both cases pose a potential security threat to your app.</span></span>  
  
 <span data-ttu-id="ecba8-199">创建使用类的应用时 <xref:System.Xml.Xsl.XslCompiledTransform> ，应注意以下各项及其含义：</span><span class="sxs-lookup"><span data-stu-id="ecba8-199">When creating an app that uses the <xref:System.Xml.Xsl.XslCompiledTransform> class, you should be aware of the following items and their implications:</span></span>  
  
-   <span data-ttu-id="ecba8-200">默认情况下禁用 XSLT 脚本。</span><span class="sxs-lookup"><span data-stu-id="ecba8-200">XSLT scripting is disabled by default.</span></span> <span data-ttu-id="ecba8-201">只有要求脚本支持并且处于完全可信的环境下时，才应启用 XSLT 脚本。</span><span class="sxs-lookup"><span data-stu-id="ecba8-201">XSLT scripting should be enabled only if you require script support and you are working in a fully trusted environment.</span></span>  
  
-   <span data-ttu-id="ecba8-202">默认情况下禁用 XSLT `document()` 函数。</span><span class="sxs-lookup"><span data-stu-id="ecba8-202">The XSLT `document()` function is disabled by default.</span></span> <span data-ttu-id="ecba8-203">如果启用 `document()` 函数，通过将 <xref:System.Xml.XmlSecureResolver> 对象传递给 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A?displayProperty=nameWithType> 方法，限制可以访问的资源。</span><span class="sxs-lookup"><span data-stu-id="ecba8-203">If you enable the `document()` function, restrict the resources that can be accessed by passing an <xref:System.Xml.XmlSecureResolver> object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="ecba8-204">默认情况下启用扩展对象。</span><span class="sxs-lookup"><span data-stu-id="ecba8-204">Extension objects are enabled by default.</span></span> <span data-ttu-id="ecba8-205">如果包含扩展对象的 <xref:System.Xml.Xsl.XsltArgumentList> 对象传递给 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A?displayProperty=nameWithType> 方法，将使用这些扩展对象。</span><span class="sxs-lookup"><span data-stu-id="ecba8-205">If an <xref:System.Xml.Xsl.XsltArgumentList> object that contains extension objects is passed to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A?displayProperty=nameWithType> method, the extension objects are used.</span></span>  
  
-   <span data-ttu-id="ecba8-206">XSLT 样式表可以包括对其他文件的引用以及嵌入式脚本块。</span><span class="sxs-lookup"><span data-stu-id="ecba8-206">XSLT style sheets can include references to other files and embedded script blocks.</span></span> <span data-ttu-id="ecba8-207">恶意用户可能会利用这一点，方法是为您提供数据或样式表，在执行时，可能会使您的系统不断进行处理，直到计算机资源不足。</span><span class="sxs-lookup"><span data-stu-id="ecba8-207">A malicious user can exploit this by supplying you with data or style sheets that, when executed, can cause your system to process until the computer runs low on resources.</span></span>  
  
-   <span data-ttu-id="ecba8-208">在混合信任环境中运行的 XSLT 应用可能导致样式表欺骗。</span><span class="sxs-lookup"><span data-stu-id="ecba8-208">XSLT apps that run in a mixed trust environment can result in style sheet spoofing.</span></span> <span data-ttu-id="ecba8-209">例如，恶意用户可能会为对象加载有害的样式表，并将其交给另一个用户，而后者会继续调用 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A?displayProperty=nameWithType> 方法并执行转换。</span><span class="sxs-lookup"><span data-stu-id="ecba8-209">For example, a malicious user can load an object with a harmful style sheet and hand it off to another user who subsequently calls the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A?displayProperty=nameWithType> method and executes the transformation.</span></span>  
  
 <span data-ttu-id="ecba8-210">如果不启用脚本或 `document()` 函数（除非样式表来自可信的源），或不接受来自不可信的源的 <xref:System.Xml.Xsl.XslCompiledTransform> 对象、XSLT 样式表或 XML 源数据，可以缓解这些安全问题。</span><span class="sxs-lookup"><span data-stu-id="ecba8-210">These security issues can be mitigated by not enabling scripting or the `document()` function unless the style sheet comes from a trusted source, and by not accepting <xref:System.Xml.Xsl.XslCompiledTransform> objects, XSLT style sheets, or XML source data from an untrusted source.</span></span>  
  
 <span data-ttu-id="ecba8-211">**异常处理**</span><span class="sxs-lookup"><span data-stu-id="ecba8-211">**Exception handling**</span></span>  
  
 <span data-ttu-id="ecba8-212">由较低级别的组件引发的异常可能会泄露您不希望公开给应用程序的路径信息。</span><span class="sxs-lookup"><span data-stu-id="ecba8-212">Exceptions thrown by lower level components can disclose path information that you do not want exposed to the app.</span></span> <span data-ttu-id="ecba8-213">应用必须捕获异常并对其进行相应处理。</span><span class="sxs-lookup"><span data-stu-id="ecba8-213">Your apps must catch exceptions and process them appropriately.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="N:System.Xml.Xsl" />
    <altmember cref="N:System.Xml.Schema" />
    <altmember cref="N:System.Xml.Linq" />
    <related type="Article" href="/dotnet/standard/data/xml/"><span data-ttu-id="ecba8-214">XML 文档和数据</span><span class="sxs-lookup"><span data-stu-id="ecba8-214">XML Documents and Data</span></span></related>
  </Docs>
</Namespace>
