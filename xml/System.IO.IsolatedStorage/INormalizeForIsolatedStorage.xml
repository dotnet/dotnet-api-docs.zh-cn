<Type Name="INormalizeForIsolatedStorage" FullName="System.IO.IsolatedStorage.INormalizeForIsolatedStorage">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c22aeec54a93dd16c4aec114fcd50314968cffb8" /><Meta Name="ms.sourcegitcommit" Value="a8ca33e500a87229bed50d12e09b1347df519648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/09/2020" /><Meta Name="ms.locfileid" Value="91916813" /></Metadata><TypeSignature Language="C#" Value="public interface INormalizeForIsolatedStorage" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INormalizeForIsolatedStorage" />
  <TypeSignature Language="DocId" Value="T:System.IO.IsolatedStorage.INormalizeForIsolatedStorage" />
  <TypeSignature Language="VB.NET" Value="Public Interface INormalizeForIsolatedStorage" />
  <TypeSignature Language="C++ CLI" Value="public interface class INormalizeForIsolatedStorage" />
  <TypeSignature Language="F#" Value="type INormalizeForIsolatedStorage = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.IO.IsolatedStorage" ToVersion="0.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.IO.IsolatedStorage" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>启用独立存储和应用程序域与程序集的证据之间的比较。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 独立存储使用程序集的证据来识别程序集，并为其提供唯一的文件存储位置。 当程序集请求某个存储区时，其证据 (由加载它的主机提供) 处理，并与用于创建现有存储的证据进行比较。 这会确定是否需要创建新的存储，如果存在相关程序集，则为。 由于所使用的比较方法，如果序列化的窗体不完全相同，则功能等效的证据片段可能不会导致真正的比较。 实现自定义证据时，请考虑证据类是否为这种情况，如果是，则实现 <xref:System.IO.IsolatedStorage.INormalizeForIsolatedStorage> 。 对于实现此接口的证据，将 <xref:System.IO.IsolatedStorage.INormalizeForIsolatedStorage.Normalize%2A> 调用方法，并根据该方法返回的对象的规范化副本进行比较。  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>实现自定义证据并需要确定存储是否已存在时，实现此接口。 在某些情况下，不应使用序列化对象进行比较，例如区分大小写的字符串。 例如， `www.MSN.com` 等于 `WWW.msn.com` 并且将 <see langword="true" /> 在比较时返回。 若要创建 <see cref="T:System.IO.IsolatedStorage.INormalizeForIsolatedStorage" /> 对象，需要实现 <see cref="M:System.IO.IsolatedStorage.INormalizeForIsolatedStorage.Normalize" /> 方法。</para></block>
    <block subset="none" type="usage"><para>调用此接口的方法，以在程序集证据和当前现有的独立存储之间进行比较之前规范化实例。</para></block>
  </Docs>
  <Members>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public object Normalize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Normalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.INormalizeForIsolatedStorage.Normalize" />
      <MemberSignature Language="VB.NET" Value="Public Function Normalize () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Normalize();" />
      <MemberSignature Language="F#" Value="abstract member Normalize : unit -&gt; obj" Usage="iNormalizeForIsolatedStorage.Normalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>当在派生类中重写时，返回在其上调用它的对象的正常化副本。</summary>
        <returns>一个正常化的对象，它表示在其上调用该方法的实例。 该实例可以是字符串、流或任何可序列化的对象。</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>当重写此方法并且返回的对象是流时，将假定它是序列化的，并与用于创建现有存储区的证据的序列化形式直接进行比较。 如果返回的对象是一个字符串，则将其视为独立存储区的名称，并与现有存储区的名称进行比较。</para></block>
        <block subset="none" type="usage"><para>如果要编写从独立存储派生的类，并且需要检查是否已存在当前程序集的独立存储，则通常会调用此方法。</para></block>
      </Docs>
    </Member>
  </Members>
</Type>
