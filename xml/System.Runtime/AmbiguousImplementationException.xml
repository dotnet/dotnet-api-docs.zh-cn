<Type Name="AmbiguousImplementationException" FullName="System.Runtime.AmbiguousImplementationException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9e0cb163425a045141e58c00f1c97f809dac9633" /><Meta Name="ms.sourcegitcommit" Value="9506e50ec7beb4fa30206b9840dc546b035a6600" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/23/2020" /><Meta Name="ms.locfileid" Value="83530913" /></Metadata><TypeSignature Language="C#" Value="public sealed class AmbiguousImplementationException : Exception" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AmbiguousImplementationException extends System.Exception" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.AmbiguousImplementationException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AmbiguousImplementationException&#xA;Inherits Exception" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbiguousImplementationException sealed : Exception" />
  <TypeSignature Language="F#" Value="type AmbiguousImplementationException = class&#xA;    inherit Exception" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="004ff-101">当多个不兼容的接口方法替代另一个方法时引发的异常。</span><span class="sxs-lookup"><span data-stu-id="004ff-101">The exception that is thrown when there are multiple incompatible interface methods overriding another method.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="004ff-102">通常，如果有多个不兼容的接口方法实现另一个接口方法，则会生成编译错误。</span><span class="sxs-lookup"><span data-stu-id="004ff-102">Normally, a compilation error is generated if there are multiple incompatible interface methods implementing another interface method.</span></span> <span data-ttu-id="004ff-103">`AmbiguousImplementationException`当依赖程序集中的类型从已修改的程序集实现接口时，将引发。</span><span class="sxs-lookup"><span data-stu-id="004ff-103">`AmbiguousImplementationException` is thrown when a type in a dependent assembly implements an interface from an assembly that was modified.</span></span>

<span data-ttu-id="004ff-104">若要解决此错误，必须提供接口方法的最特定实现。</span><span class="sxs-lookup"><span data-stu-id="004ff-104">To resolve the error, the most specific implementation of the interface method has to be provided.</span></span> <span data-ttu-id="004ff-105">接口方法的最特定实现可以在实现接口的类上提供，也可以在需要接口提供冲突实现的其他接口上提供。</span><span class="sxs-lookup"><span data-stu-id="004ff-105">The most specific implementation of the interface method can be provided on the class that implements the interface, or on another interface that requires the interface providing the conflicting implementation.</span></span>

<span data-ttu-id="004ff-106">`AmbiguousImplementationException`使用 `HRESULT COR_E_AMBIGUOUSIMPLEMENTATION` ，其值为 `0x8013106A` 。</span><span class="sxs-lookup"><span data-stu-id="004ff-106">`AmbiguousImplementationException` uses the `HRESULT COR_E_AMBIGUOUSIMPLEMENTATION`, which has a value of `0x8013106A`.</span></span>

      ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbiguousImplementationException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.AmbiguousImplementationException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbiguousImplementationException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="004ff-107">初始化 <see cref="T:System.Runtime.AmbiguousImplementationException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="004ff-107">Initializes a new instance of the <see cref="T:System.Runtime.AmbiguousImplementationException" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbiguousImplementationException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.AmbiguousImplementationException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbiguousImplementationException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Runtime.AmbiguousImplementationException : string -&gt; System.Runtime.AmbiguousImplementationException" Usage="new System.Runtime.AmbiguousImplementationException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="004ff-108">本地化的错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="004ff-108">The localized error message string.</span></span></param>
        <summary><span data-ttu-id="004ff-109">用指定的错误消息初始化 <see cref="T:System.Runtime.AmbiguousImplementationException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="004ff-109">Initializes a new instance of the <see cref="T:System.Runtime.AmbiguousImplementationException" /> class with a specified error message.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbiguousImplementationException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.AmbiguousImplementationException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbiguousImplementationException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.Runtime.AmbiguousImplementationException : string * Exception -&gt; System.Runtime.AmbiguousImplementationException" Usage="new System.Runtime.AmbiguousImplementationException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="004ff-110">描述错误的字符串。</span><span class="sxs-lookup"><span data-stu-id="004ff-110">A string that describes the error.</span></span></param>
        <param name="innerException"><span data-ttu-id="004ff-111">导致当前异常的异常。</span><span class="sxs-lookup"><span data-stu-id="004ff-111">The exception that is the cause of the current exception.</span></span></param>
        <summary><span data-ttu-id="004ff-112">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:System.Runtime.AmbiguousImplementationException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="004ff-112">Initializes a new instance of the <see cref="T:System.Runtime.AmbiguousImplementationException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
