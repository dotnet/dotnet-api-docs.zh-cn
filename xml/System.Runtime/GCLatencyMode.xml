<Type Name="GCLatencyMode" FullName="System.Runtime.GCLatencyMode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="991355e500d07141fb87fe1c299d0395ff090607" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86582853" /></Metadata><TypeSignature Language="C#" Value="public enum GCLatencyMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed GCLatencyMode extends System.Enum" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.GCLatencyMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum GCLatencyMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class GCLatencyMode" />
  <TypeSignature Language="F#" Value="type GCLatencyMode = " />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed GCLatencyMode extends System.Enum" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a1ad8-101">调整垃圾收集器侵入应用程序的时间。</span><span class="sxs-lookup"><span data-stu-id="a1ad8-101">Adjusts the time that the garbage collector intrudes in your application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1ad8-102">可以通过将 <xref:System.Runtime.GCSettings.LatencyMode%2A> 属性设置为除以外的任何枚举值来调整应用程序中垃圾回收的侵入性 <xref:System.Runtime.GCLatencyMode> `GCLatencyMode.NoGCRegion` 。</span><span class="sxs-lookup"><span data-stu-id="a1ad8-102">You can adjust the intrusiveness of garbage collection in your application by setting the <xref:System.Runtime.GCSettings.LatencyMode%2A> property to any <xref:System.Runtime.GCLatencyMode> enumeration value except `GCLatencyMode.NoGCRegion`.</span></span> <span data-ttu-id="a1ad8-103">还可以通过检索属性值，确定垃圾回收器的当前延迟模式 <xref:System.Runtime.GCSettings.LatencyMode%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="a1ad8-103">You can also determine the garbage collector's current latency mode by retrieving the <xref:System.Runtime.GCSettings.LatencyMode%2A?displayProperty=nameWithType> property value.</span></span>  
  
 <span data-ttu-id="a1ad8-104">有关垃圾回收的运行时配置设置如何影响此枚举的默认值的讨论，请参阅 [滞后时间模式](/dotnet/standard/garbage-collection/latency) 。</span><span class="sxs-lookup"><span data-stu-id="a1ad8-104">See [Latency Modes](/dotnet/standard/garbage-collection/latency) for a discussion of how the runtime configuration settings for garbage collection affect the default value for this enumeration.</span></span>  

<span data-ttu-id="a1ad8-105"><xref:System.Runtime.GCLatencyMode.Batch?displayProperty=nameWithType>模式替代了 [\<gcConcurrent>](/dotnet/framework/configure-apps/file-schema/runtime/gcconcurrent-element) 运行时配置设置。</span><span class="sxs-lookup"><span data-stu-id="a1ad8-105">The <xref:System.Runtime.GCLatencyMode.Batch?displayProperty=nameWithType> mode overrides the [\<gcConcurrent>](/dotnet/framework/configure-apps/file-schema/runtime/gcconcurrent-element) runtime configuration setting.</span></span> <span data-ttu-id="a1ad8-106">如果元素启用了并发垃圾回收 [\<gcConcurrent>](/dotnet/framework/configure-apps/file-schema/runtime/gcconcurrent-element) ，则切换到批处理模式会阻止任何其他并发回收。</span><span class="sxs-lookup"><span data-stu-id="a1ad8-106">If concurrent garbage collection is enabled by the [\<gcConcurrent>](/dotnet/framework/configure-apps/file-schema/runtime/gcconcurrent-element) element, switching to Batch mode prevents any further concurrent collections.</span></span>    

 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/standard/garbage-collection/latency"><span data-ttu-id="a1ad8-107">滞后时间模式</span><span class="sxs-lookup"><span data-stu-id="a1ad8-107">Latency Modes</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Batch">
      <MemberSignature Language="C#" Value="Batch" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.GCLatencyMode Batch = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.GCLatencyMode.Batch" />
      <MemberSignature Language="VB.NET" Value="Batch" />
      <MemberSignature Language="C++ CLI" Value="Batch" />
      <MemberSignature Language="F#" Value="Batch = 0" Usage="System.Runtime.GCLatencyMode.Batch" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.GCLatencyMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a1ad8-108">在批调用中禁用垃圾回收并发，并回收对象。</span><span class="sxs-lookup"><span data-stu-id="a1ad8-108">Disables garbage collection concurrency and reclaims objects in a batch call.</span></span> <span data-ttu-id="a1ad8-109">这是最高级别的侵入模式。</span><span class="sxs-lookup"><span data-stu-id="a1ad8-109">This is the most intrusive mode.</span></span> <span data-ttu-id="a1ad8-110">此模式专用于最大吞吐量（但以牺牲响应性为代价）。</span><span class="sxs-lookup"><span data-stu-id="a1ad8-110">This mode is designed for maximum throughput at the expense of responsiveness.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Interactive">
      <MemberSignature Language="C#" Value="Interactive" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.GCLatencyMode Interactive = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.GCLatencyMode.Interactive" />
      <MemberSignature Language="VB.NET" Value="Interactive" />
      <MemberSignature Language="C++ CLI" Value="Interactive" />
      <MemberSignature Language="F#" Value="Interactive = 1" Usage="System.Runtime.GCLatencyMode.Interactive" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.GCLatencyMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a1ad8-111">在应用程序运行时启用垃圾回收并发，并回收对象。</span><span class="sxs-lookup"><span data-stu-id="a1ad8-111">Enables garbage collection concurrency and reclaims objects while the application is running.</span></span> <span data-ttu-id="a1ad8-112">这是工作站上垃圾回收的默认模式，并且较 <see cref="F:System.Runtime.GCLatencyMode.Batch" /> 少受侵入。</span><span class="sxs-lookup"><span data-stu-id="a1ad8-112">This is the default mode for garbage collection on a workstation and is less intrusive than <see cref="F:System.Runtime.GCLatencyMode.Batch" />.</span></span> <span data-ttu-id="a1ad8-113">它可以平衡响应性和吞吐量。</span><span class="sxs-lookup"><span data-stu-id="a1ad8-113">It balances responsiveness with throughput.</span></span> <span data-ttu-id="a1ad8-114">此模式等同于在并发的工作站上执行垃圾回收。</span><span class="sxs-lookup"><span data-stu-id="a1ad8-114">This mode is equivalent to garbage collection on a workstation that is concurrent.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="LowLatency">
      <MemberSignature Language="C#" Value="LowLatency" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.GCLatencyMode LowLatency = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.GCLatencyMode.LowLatency" />
      <MemberSignature Language="VB.NET" Value="LowLatency" />
      <MemberSignature Language="C++ CLI" Value="LowLatency" />
      <MemberSignature Language="F#" Value="LowLatency = 2" Usage="System.Runtime.GCLatencyMode.LowLatency" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.GCLatencyMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a1ad8-115">启用回收对象时比较保守的垃圾回收。</span><span class="sxs-lookup"><span data-stu-id="a1ad8-115">Enables garbage collection that is more conservative in reclaiming objects.</span></span> <span data-ttu-id="a1ad8-116">仅在系统遇到内存压力时才发生完全回收，而通常情况下发生 0 代和 1 代回收。</span><span class="sxs-lookup"><span data-stu-id="a1ad8-116">Full collections occur only if the system is under memory pressure, whereas generation 0 and generation 1 collections might occur more frequently.</span></span> <span data-ttu-id="a1ad8-117">此模式不可用于服务器垃圾回收器。</span><span class="sxs-lookup"><span data-stu-id="a1ad8-117">This mode is not available for the server garbage collector.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="NoGCRegion">
      <MemberSignature Language="C#" Value="NoGCRegion" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.GCLatencyMode NoGCRegion = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.GCLatencyMode.NoGCRegion" />
      <MemberSignature Language="VB.NET" Value="NoGCRegion" />
      <MemberSignature Language="C++ CLI" Value="NoGCRegion" />
      <MemberSignature Language="F#" Value="NoGCRegion = 4" Usage="System.Runtime.GCLatencyMode.NoGCRegion" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.GCLatencyMode</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a1ad8-118">指示当应用正在执行关键路径时挂起垃圾回收。</span><span class="sxs-lookup"><span data-stu-id="a1ad8-118">Indicates that garbage collection is suspended while the app is executing a critical path.</span></span>  
  
 <span data-ttu-id="a1ad8-119"><see cref="F:System.Runtime.GCLatencyMode.NoGCRegion" /> 是一个只读值；也就是说，不能将 <see cref="F:System.Runtime.GCLatencyMode.NoGCRegion" /> 值分配给 <see cref="P:System.Runtime.GCSettings.LatencyMode" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="a1ad8-119"><see cref="F:System.Runtime.GCLatencyMode.NoGCRegion" /> is a read-only value; that is, you cannot assign the <see cref="F:System.Runtime.GCLatencyMode.NoGCRegion" /> value to the <see cref="P:System.Runtime.GCSettings.LatencyMode" /> property.</span></span> <span data-ttu-id="a1ad8-120">通过调用 <see cref="Overload:System.GC.TryStartNoGCRegion" /> 方法指定无 GC 区域延迟模式，并通过调用 <see cref="M:System.GC.EndNoGCRegion" /> 方法终止该模式。</span><span class="sxs-lookup"><span data-stu-id="a1ad8-120">You specify the no GC region latency mode by calling the <see cref="Overload:System.GC.TryStartNoGCRegion" /> method and terminate it by calling the <see cref="M:System.GC.EndNoGCRegion" /> method.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="SustainedLowLatency">
      <MemberSignature Language="C#" Value="SustainedLowLatency" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.GCLatencyMode SustainedLowLatency = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.GCLatencyMode.SustainedLowLatency" />
      <MemberSignature Language="VB.NET" Value="SustainedLowLatency" />
      <MemberSignature Language="C++ CLI" Value="SustainedLowLatency" />
      <MemberSignature Language="F#" Value="SustainedLowLatency = 3" Usage="System.Runtime.GCLatencyMode.SustainedLowLatency" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.GCLatencyMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a1ad8-121">启用尝试减少延长时期的延迟的垃圾回收。</span><span class="sxs-lookup"><span data-stu-id="a1ad8-121">Enables garbage collection that tries to minimize latency over an extended period.</span></span> <span data-ttu-id="a1ad8-122">回收器尝试只执行生成 0、生成 1，以及并发只生成 2 个集合。</span><span class="sxs-lookup"><span data-stu-id="a1ad8-122">The collector tries to perform only generation 0, generation 1, and concurrent generation 2 collections.</span></span> <span data-ttu-id="a1ad8-123">如果系统处于内存压力之下，则完整的阻碍性回收还是会出现。</span><span class="sxs-lookup"><span data-stu-id="a1ad8-123">Full blocking collections may still occur if the system is under memory pressure.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
