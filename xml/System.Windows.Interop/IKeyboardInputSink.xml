<Type Name="IKeyboardInputSink" FullName="System.Windows.Interop.IKeyboardInputSink">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6f3846f9da9f7fd51f51cdfe4c3765494e1d53db" /><Meta Name="ms.sourcegitcommit" Value="9f423345753728e8cad38d4a22663a109e69ea91" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/04/2021" /><Meta Name="ms.locfileid" Value="102061661" /></Metadata><TypeSignature Language="C#" Value="public interface IKeyboardInputSink" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IKeyboardInputSink" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.IKeyboardInputSink" />
  <TypeSignature Language="VB.NET" Value="Public Interface IKeyboardInputSink" />
  <TypeSignature Language="C++ CLI" Value="public interface class IKeyboardInputSink" />
  <TypeSignature Language="F#" Value="type IKeyboardInputSink = interface" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="35a47-101">为跨互操作边界和在 HWND 之间管理 Tab 键次序、快捷键、助记键的组件提供键盘接收器。</span><span class="sxs-lookup"><span data-stu-id="35a47-101">Provides a keyboard sink for components that manages tabbing, accelerators, and mnemonics across interop boundaries and between HWNDs.</span></span> <span data-ttu-id="35a47-102">此接口实现 WPF-Win32 互操作方案中的键盘消息管理。</span><span class="sxs-lookup"><span data-stu-id="35a47-102">This interface implements keyboard message management in WPF-Win32 interoperation scenarios.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35a47-103">键盘接收器处理 Win32 的总体键盘输入模型的特定子集的输入和 Windows Presentation Foundation (WPF) ，并允许处理某些键盘输入，并将其定向到与当前键盘焦点不同的 Hwnd。</span><span class="sxs-lookup"><span data-stu-id="35a47-103">A keyboard sink handles input from particular subsets of the overall keyboard input model for Win32 and Windows Presentation Foundation (WPF), and enables some keyboard input to be processed and directed to HWNDs other than the one with current keyboard focus.</span></span>  
  
 <span data-ttu-id="35a47-104">如果你的组件包含其他组件，并且保持一个 tab 键顺序，则你的组件还必须实现 <xref:System.Windows.Interop.IKeyboardInputSite> 并跟踪哪个组件具有焦点。</span><span class="sxs-lookup"><span data-stu-id="35a47-104">If your component contains other components, and maintains a tab order, your component must also implement <xref:System.Windows.Interop.IKeyboardInputSite> and keep track of which component has focus.</span></span>  
  
 <span data-ttu-id="35a47-105">有关专门为 Windows 窗体互操作实现的输入体系结构的讨论，请参阅 [Windows 窗体和 WPF 互操作性输入体系结构](/dotnet/framework/wpf/advanced/windows-forms-and-wpf-interoperability-input-architecture)。</span><span class="sxs-lookup"><span data-stu-id="35a47-105">For a discussion of the input architecture specifically implemented for Windows Forms interop, see [Windows Forms and WPF Interoperability Input Architecture](/dotnet/framework/wpf/advanced/windows-forms-and-wpf-interoperability-input-architecture).</span></span>  
  
 <span data-ttu-id="35a47-106"><xref:System.Windows.Interop.HwndSource><xref:System.Windows.Interop.HwndHost>每个 <xref:System.Windows.Interop.IKeyboardInputSink> 通过显式接口定义实现接口。</span><span class="sxs-lookup"><span data-stu-id="35a47-106"><xref:System.Windows.Interop.HwndSource> and <xref:System.Windows.Interop.HwndHost> each implement the <xref:System.Windows.Interop.IKeyboardInputSink> interface, through explicit interface definitions.</span></span> <span data-ttu-id="35a47-107">显式定义提供默认行为，也可以在必要时通过 <xref:System.Windows.Interop.IKeyboardInputSink> 或的接口强制转换来访问 <xref:System.Windows.Interop.HwndSource> <xref:System.Windows.Interop.HwndHost> 。</span><span class="sxs-lookup"><span data-stu-id="35a47-107">The explicit definitions supply default behaviors, and can also be accessed if necessary through an <xref:System.Windows.Interop.IKeyboardInputSink> interface cast of <xref:System.Windows.Interop.HwndSource> or <xref:System.Windows.Interop.HwndHost>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Interop.IKeyboardInputSite" />
    <altmember cref="T:System.Windows.Interop.HwndSource" />
    <altmember cref="T:System.Windows.Interop.HwndHost" />
  </Docs>
  <Members>
    <Member MemberName="HasFocusWithin">
      <MemberSignature Language="C#" Value="public bool HasFocusWithin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasFocusWithin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Public Function HasFocusWithin () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasFocusWithin();" />
      <MemberSignature Language="F#" Value="abstract member HasFocusWithin : unit -&gt; bool" Usage="iKeyboardInputSink.HasFocusWithin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="35a47-108">获取一个值，该值指示接收器或其所包含的组件之一是否具有焦点。</span><span class="sxs-lookup"><span data-stu-id="35a47-108">Gets a value that indicates whether the sink or one of its contained components has focus.</span></span></summary>
        <returns><span data-ttu-id="35a47-109">如果接收器或其所包含的组件之一具有焦点，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="35a47-109"><see langword="true" /> if the sink or one of its contained components has focus; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35a47-110">此方法对于 <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> 从实现中将对子组件的调用转发到具有焦点的子组件是必需的 <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> 。</span><span class="sxs-lookup"><span data-stu-id="35a47-110">This method is necessary for forwarding <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> calls to child components with focus from within the <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> implementation.</span></span> <span data-ttu-id="35a47-111"><xref:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin%2A>以递归方式调用，直到达到特定焦点的级别并将其转发到 <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> 该处。</span><span class="sxs-lookup"><span data-stu-id="35a47-111">Call <xref:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin%2A> recursively until you reach the level of specific focus and forward <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> there.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSite" />
      </Docs>
    </Member>
    <Member MemberName="KeyboardInputSite">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.IKeyboardInputSite KeyboardInputSite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Interop.IKeyboardInputSite KeyboardInputSite" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyboardInputSite As IKeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Interop::IKeyboardInputSite ^ KeyboardInputSite { System::Windows::Interop::IKeyboardInputSite ^ get(); void set(System::Windows::Interop::IKeyboardInputSite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.KeyboardInputSite : System.Windows.Interop.IKeyboardInputSite with get, set" Usage="System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[set: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="35a47-112">获取或设置对组件容器的 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 接口的引用。</span><span class="sxs-lookup"><span data-stu-id="35a47-112">Gets or sets a reference to the component's container's <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> interface.</span></span></summary>
        <value><span data-ttu-id="35a47-113">对容器的 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 接口的引用。</span><span class="sxs-lookup"><span data-stu-id="35a47-113">A reference to the container's <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> interface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35a47-114">此属性最初应设置为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="35a47-114">This property should initially be set to `null`.</span></span> <span data-ttu-id="35a47-115">任何其他方法被调用之前，将接收器添加到其组件列表中的所有容器都将设置 <xref:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite%2A> ，并且可在该方法之后多次设置。</span><span class="sxs-lookup"><span data-stu-id="35a47-115">Any container that adds the sink to its components list will set <xref:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite%2A> before any other methods are called, and it can be set multiple times after that.</span></span> <span data-ttu-id="35a47-116">应在处置之前将属性设置为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="35a47-116">You should set the property to `null` again before disposal.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSite" />
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="OnMnemonic">
      <MemberSignature Language="C#" Value="public bool OnMnemonic (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMnemonic(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Public Function OnMnemonic (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool OnMnemonic(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="abstract member OnMnemonic : MSG * System.Windows.Input.ModifierKeys -&gt; bool" Usage="iKeyboardInputSink.OnMnemonic (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="35a47-117">助记键和关联数据的消息。</span><span class="sxs-lookup"><span data-stu-id="35a47-117">The message for the mnemonic and associated data.</span></span> <span data-ttu-id="35a47-118">请勿修改此消息结构。</span><span class="sxs-lookup"><span data-stu-id="35a47-118">Do not modify this message structure.</span></span> <span data-ttu-id="35a47-119">仅由于性能原因，通过引用来传递此消息。</span><span class="sxs-lookup"><span data-stu-id="35a47-119">It is passed by reference for performance reasons only.</span></span></param>
        <param name="modifiers"><span data-ttu-id="35a47-120">修改键。</span><span class="sxs-lookup"><span data-stu-id="35a47-120">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="35a47-121">调用此接收器的助记键（访问键）之一时调用。</span><span class="sxs-lookup"><span data-stu-id="35a47-121">Called when one of the mnemonics (access keys) for this sink is invoked.</span></span></summary>
        <returns><span data-ttu-id="35a47-122">如果消息已处理，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="35a47-122"><see langword="true" /> if the message was handled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35a47-123">Microsoft Windows 消息必须 WM_CHAR、WM_SYSCHAR、WM_DEADCHAR 或 WM_SYSDEADCHAR。</span><span class="sxs-lookup"><span data-stu-id="35a47-123">The Microsoft Windows message must be WM_CHAR, WM_SYSCHAR, WM_DEADCHAR or WM_SYSDEADCHAR.</span></span>  
  
 <span data-ttu-id="35a47-124">如果组件包含组件，则必须通过调用每个包含组件的方法在实现中传递消息 <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A> 。</span><span class="sxs-lookup"><span data-stu-id="35a47-124">If the component has contained components, the message must be passed in your implementation by calling each contained component's <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A> method.</span></span>  
  
 <span data-ttu-id="35a47-125">从返回的接口 `true` <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> 将不会调用 <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A> 。</span><span class="sxs-lookup"><span data-stu-id="35a47-125">An interface that returns `true` from <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> will not call <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>.</span></span> <span data-ttu-id="35a47-126">实现可以选择在中执行所有特定的组合键处理 <xref:System.Windows.Interop.IKeyboardInputSink.TranslateChar%2A> 并绕过 <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A> 。</span><span class="sxs-lookup"><span data-stu-id="35a47-126">Implementations can choose to perform all specific key combination handling in <xref:System.Windows.Interop.IKeyboardInputSink.TranslateChar%2A>.and bypass <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <altmember cref="T:System.Windows.Input.AccessKeyManager" />
      </Docs>
    </Member>
    <Member MemberName="RegisterKeyboardInputSink">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSink (System.Windows.Interop.IKeyboardInputSink sink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSink(class System.Windows.Interop.IKeyboardInputSink sink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegisterKeyboardInputSink (sink As IKeyboardInputSink) As IKeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Interop::IKeyboardInputSite ^ RegisterKeyboardInputSink(System::Windows::Interop::IKeyboardInputSink ^ sink);" />
      <MemberSignature Language="F#" Value="abstract member RegisterKeyboardInputSink : System.Windows.Interop.IKeyboardInputSink -&gt; System.Windows.Interop.IKeyboardInputSite" Usage="iKeyboardInputSink.RegisterKeyboardInputSink sink" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sink" Type="System.Windows.Interop.IKeyboardInputSink" />
      </Parameters>
      <Docs>
        <param name="sink"><span data-ttu-id="35a47-127">所包含组件的 <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> 接收器。</span><span class="sxs-lookup"><span data-stu-id="35a47-127">The <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> sink of the contained component.</span></span></param>
        <summary><span data-ttu-id="35a47-128">注册所包含组件的 <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> 接口。</span><span class="sxs-lookup"><span data-stu-id="35a47-128">Registers the <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> interface of a contained component.</span></span></summary>
        <returns><span data-ttu-id="35a47-129">所包含组件的 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 站点。</span><span class="sxs-lookup"><span data-stu-id="35a47-129">The <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> site of the contained component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35a47-130">具有子组件的组件应维护站点的内部集合，并使用此方法添加新接收器并返回新站点。</span><span class="sxs-lookup"><span data-stu-id="35a47-130">Components with child components should maintain internal collections of sites and use this method to add a new sink and return the new site.</span></span> <span data-ttu-id="35a47-131">你只需维护网站集，因为可以从站点获取接收器。</span><span class="sxs-lookup"><span data-stu-id="35a47-131">You only need to maintain the site collection, because the sink can be obtained from the site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabInto">
      <MemberSignature Language="C#" Value="public bool TabInto (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TabInto(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function TabInto (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TabInto(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberSignature Language="F#" Value="abstract member TabInto : System.Windows.Input.TraversalRequest -&gt; bool" Usage="iKeyboardInputSink.TabInto request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="35a47-132">指定是将焦点设置到第一个制表位，还是设置到最后一个制表位。</span><span class="sxs-lookup"><span data-stu-id="35a47-132">Specifies whether focus should be set to the first or the last tab stop.</span></span></param>
        <summary><span data-ttu-id="35a47-133">在接收器的第一个制表位或最后一个制表位上设置焦点。</span><span class="sxs-lookup"><span data-stu-id="35a47-133">Sets focus on either the first tab stop or the last tab stop of the sink.</span></span></summary>
        <returns><span data-ttu-id="35a47-134">如果已按要求对焦点进行了设置，则为 <see langword="true" />；如果没有制表位，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="35a47-134"><see langword="true" /> if the focus has been set as requested; <see langword="false" />, if there are no tab stops.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35a47-135"><xref:System.Windows.Input.FocusNavigationDirection.First> 和 <xref:System.Windows.Input.FocusNavigationDirection.Last> 是在中应传递到此方法的唯一相关值 <xref:System.Windows.Input.TraversalRequest> 。</span><span class="sxs-lookup"><span data-stu-id="35a47-135"><xref:System.Windows.Input.FocusNavigationDirection.First> and <xref:System.Windows.Input.FocusNavigationDirection.Last> are the only relevant values that should be passed to this method in the <xref:System.Windows.Input.TraversalRequest>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslateAccelerator">
      <MemberSignature Language="C#" Value="public bool TranslateAccelerator (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TranslateAccelerator(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Public Function TranslateAccelerator (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TranslateAccelerator(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="abstract member TranslateAccelerator : MSG * System.Windows.Input.ModifierKeys -&gt; bool" Usage="iKeyboardInputSink.TranslateAccelerator (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="35a47-136">消息及关联数据。</span><span class="sxs-lookup"><span data-stu-id="35a47-136">The message and associated data.</span></span> <span data-ttu-id="35a47-137">请勿修改此结构。</span><span class="sxs-lookup"><span data-stu-id="35a47-137">Do not modify this structure.</span></span> <span data-ttu-id="35a47-138">仅由于性能原因，通过引用来传递此消息。</span><span class="sxs-lookup"><span data-stu-id="35a47-138">It is passed by reference for performance reasons only.</span></span></param>
        <param name="modifiers"><span data-ttu-id="35a47-139">修改键。</span><span class="sxs-lookup"><span data-stu-id="35a47-139">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="35a47-140">在 keydown 消息级处理键盘输入。</span><span class="sxs-lookup"><span data-stu-id="35a47-140">Processes keyboard input at the keydown message level.</span></span></summary>
        <returns><span data-ttu-id="35a47-141">如果方法实现对该消息进行了处理，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="35a47-141"><see langword="true" /> if the message was handled by the method implementation; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35a47-142">消息必须是 WM_KEYDOWN 或 WM_SYSKEYDOWN。</span><span class="sxs-lookup"><span data-stu-id="35a47-142">The message must either be WM_KEYDOWN or WM_SYSKEYDOWN.</span></span>  
  
 <span data-ttu-id="35a47-143">如果组件无法处理输入翻译并且具有可能具有翻译的子组件，则它通常会 <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> 在返回结果之前，对保持当前焦点的子组件调用方法。</span><span class="sxs-lookup"><span data-stu-id="35a47-143">If the component is unable to handle the input translations and has child components that might have translations, it typically calls <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> method on the child component that holds the current focus before returning a result.</span></span>  
  
 <span data-ttu-id="35a47-144">如果无法立即处理该消息，则可以在必要时从实现中重新调度该消息， <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> 然后返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="35a47-144">If the message cannot be handled immediately, you can re-dispatch it from within the <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> implementation if necessary, and then return `false`.</span></span>  
  
 <span data-ttu-id="35a47-145">转换快捷键的主要方案是处理 VK_TAB 的 keydown 消息，并确定是将焦点设置在组件内、调用 <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A> 子组件还是 <xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A> 在父站点上调用，因为 TAB 序列已达到开始或结束边界。</span><span class="sxs-lookup"><span data-stu-id="35a47-145">A primary scenario for translating accelerator keys is handling the VK_TAB keydown message and determining whether to set focus within the component, to call <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A> to a child component, or to call <xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A> on the parent site because the tab sequence has reached the beginning or end bounds.</span></span> <span data-ttu-id="35a47-146">某些组件可能会选择不以这种方式处理 tab 键。</span><span class="sxs-lookup"><span data-stu-id="35a47-146">Certain components may choose to not handle the tab key in this fashion.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      </Docs>
    </Member>
    <Member MemberName="TranslateChar">
      <MemberSignature Language="C#" Value="public bool TranslateChar (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TranslateChar(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Public Function TranslateChar (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TranslateChar(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="abstract member TranslateChar : MSG * System.Windows.Input.ModifierKeys -&gt; bool" Usage="iKeyboardInputSink.TranslateChar (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="35a47-147">消息及关联数据。</span><span class="sxs-lookup"><span data-stu-id="35a47-147">The message and associated data.</span></span> <span data-ttu-id="35a47-148">请勿修改此结构。</span><span class="sxs-lookup"><span data-stu-id="35a47-148">Do not modify this structure.</span></span> <span data-ttu-id="35a47-149">仅由于性能原因，通过引用来传递此消息。</span><span class="sxs-lookup"><span data-stu-id="35a47-149">It is passed by reference for performance reasons only.</span></span></param>
        <param name="modifiers"><span data-ttu-id="35a47-150">修改键。</span><span class="sxs-lookup"><span data-stu-id="35a47-150">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="35a47-151">在调用 <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> 之前处理 WM_CHAR、WM_SYSCHAR、WM_DEADCHAR 和 WM_SYSDEADCHAR 输入消息。</span><span class="sxs-lookup"><span data-stu-id="35a47-151">Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> is called.</span></span></summary>
        <returns><span data-ttu-id="35a47-152">如果消息已处理并且不应调用 <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="35a47-152"><see langword="true" /> if the message was processed and <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> should not be called; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35a47-153">如果实现此方法以返回 `true` ，则输入体系结构将不会调用 <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A> 该密钥消息。</span><span class="sxs-lookup"><span data-stu-id="35a47-153">If you implement this method to return `true`, the input architecture will not call <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A> for that key message.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
