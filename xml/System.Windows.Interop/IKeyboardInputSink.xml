<Type Name="IKeyboardInputSink" FullName="System.Windows.Interop.IKeyboardInputSink">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ad92227e284ff07ac229eae4ea9750f80da83723" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83903143" /></Metadata><TypeSignature Language="C#" Value="public interface IKeyboardInputSink" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IKeyboardInputSink" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.IKeyboardInputSink" />
  <TypeSignature Language="VB.NET" Value="Public Interface IKeyboardInputSink" />
  <TypeSignature Language="C++ CLI" Value="public interface class IKeyboardInputSink" />
  <TypeSignature Language="F#" Value="type IKeyboardInputSink = interface" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>为跨互操作边界和在 HWND 之间管理 Tab 键次序、快捷键、助记键的组件提供键盘接收器。 此接口实现 WPF-Win32 互操作方案中的键盘消息管理。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 键盘接收器处理 [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] 和 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]的整体键盘输入模型的特定子集的输入，并允许处理某些键盘输入，并将其定向到与当前键盘焦点不同的 Hwnd。  
  
 如果你的组件包含其他组件，并保持 tab 键顺序，则组件还必须实现 <xref:System.Windows.Interop.IKeyboardInputSite> 并跟踪哪个组件具有焦点。  
  
 有关专门为 [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)] 互操作实现的输入体系结构的讨论，请参阅[Windows 窗体和 WPF 互操作性输入体系结构](/dotnet/framework/wpf/advanced/windows-forms-and-wpf-interoperability-input-architecture)。  
  
 <xref:System.Windows.Interop.HwndSource> 和 <xref:System.Windows.Interop.HwndHost> 每个都通过显式接口定义实现 <xref:System.Windows.Interop.IKeyboardInputSink> 接口。 显式定义提供默认行为，也可以在必要时通过 <xref:System.Windows.Interop.HwndSource> 或 <xref:System.Windows.Interop.HwndHost>的 <xref:System.Windows.Interop.IKeyboardInputSink> 接口强制转换来访问。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Interop.IKeyboardInputSite" />
    <altmember cref="T:System.Windows.Interop.HwndSource" />
    <altmember cref="T:System.Windows.Interop.HwndHost" />
  </Docs>
  <Members>
    <Member MemberName="HasFocusWithin">
      <MemberSignature Language="C#" Value="public bool HasFocusWithin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasFocusWithin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Public Function HasFocusWithin () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasFocusWithin();" />
      <MemberSignature Language="F#" Value="abstract member HasFocusWithin : unit -&gt; bool" Usage="iKeyboardInputSink.HasFocusWithin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取一个值，该值指示接收器或其所包含的组件之一是否具有焦点。</summary>
        <returns>如果接收器或其所包含的组件之一具有焦点，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法对于从 <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> 实现中将 <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> 对子组件的调用转发给子组件是必需的。 以递归方式调用 <xref:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin%2A>，直到达到特定焦点的级别，并向前 <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A>。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSite" />
      </Docs>
    </Member>
    <Member MemberName="KeyboardInputSite">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.IKeyboardInputSite KeyboardInputSite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Interop.IKeyboardInputSite KeyboardInputSite" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyboardInputSite As IKeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Interop::IKeyboardInputSite ^ KeyboardInputSite { System::Windows::Interop::IKeyboardInputSite ^ get(); void set(System::Windows::Interop::IKeyboardInputSite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.KeyboardInputSite : System.Windows.Interop.IKeyboardInputSite with get, set" Usage="System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置对组件容器的 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 接口的引用。</summary>
        <value>对容器的 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 接口的引用。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性最初应设置为 `null`。 将接收器添加到其组件列表中的任何容器都将在调用任何其他方法之前设置 <xref:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite%2A>，并且可以在该方法之后多次设置。 应将属性设置为在处置之前再次 `null`。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSite" />
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="OnMnemonic">
      <MemberSignature Language="C#" Value="public bool OnMnemonic (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMnemonic(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Public Function OnMnemonic (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool OnMnemonic(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="abstract member OnMnemonic : MSG * System.Windows.Input.ModifierKeys -&gt; bool" Usage="iKeyboardInputSink.OnMnemonic (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">助记键和关联数据的消息。 请勿修改此消息结构。 仅由于性能原因，通过引用来传递此消息。</param>
        <param name="modifiers">修改键。</param>
        <summary>调用此接收器的助记键（访问键）之一时调用。</summary>
        <returns>如果消息已处理，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] 消息必须 WM_CHAR、WM_SYSCHAR、WM_DEADCHAR 或 WM_SYSDEADCHAR。  
  
 如果组件包含组件，则必须通过调用每个包含组件的 <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A> 方法，将消息传递到实现中。  
  
 从 <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> 返回 `true` 的接口将不会调用 <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>。 实现可以选择在 <xref:System.Windows.Interop.IKeyboardInputSink.TranslateChar%2A>中执行所有特定的键组合处理，并绕过 <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <altmember cref="T:System.Windows.Input.AccessKeyManager" />
      </Docs>
    </Member>
    <Member MemberName="RegisterKeyboardInputSink">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSink (System.Windows.Interop.IKeyboardInputSink sink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSink(class System.Windows.Interop.IKeyboardInputSink sink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegisterKeyboardInputSink (sink As IKeyboardInputSink) As IKeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Interop::IKeyboardInputSite ^ RegisterKeyboardInputSink(System::Windows::Interop::IKeyboardInputSink ^ sink);" />
      <MemberSignature Language="F#" Value="abstract member RegisterKeyboardInputSink : System.Windows.Interop.IKeyboardInputSink -&gt; System.Windows.Interop.IKeyboardInputSite" Usage="iKeyboardInputSink.RegisterKeyboardInputSink sink" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sink" Type="System.Windows.Interop.IKeyboardInputSink" />
      </Parameters>
      <Docs>
        <param name="sink">所包含组件的 <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> 接收器。</param>
        <summary>注册所包含组件的 <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> 接口。</summary>
        <returns>所包含组件的 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 站点。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 具有子组件的组件应维护站点的内部集合，并使用此方法添加新接收器并返回新站点。 你只需维护网站集，因为可以从站点获取接收器。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabInto">
      <MemberSignature Language="C#" Value="public bool TabInto (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TabInto(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function TabInto (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TabInto(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberSignature Language="F#" Value="abstract member TabInto : System.Windows.Input.TraversalRequest -&gt; bool" Usage="iKeyboardInputSink.TabInto request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request">指定是将焦点设置到第一个制表位，还是设置到最后一个制表位。</param>
        <summary>在接收器的第一个制表位或最后一个制表位上设置焦点。</summary>
        <returns>如果已按要求对焦点进行了设置，则为 <see langword="true" />；如果没有制表位，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.FocusNavigationDirection.First> 和 <xref:System.Windows.Input.FocusNavigationDirection.Last> 是 <xref:System.Windows.Input.TraversalRequest>中应传递到此方法的唯一相关值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslateAccelerator">
      <MemberSignature Language="C#" Value="public bool TranslateAccelerator (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TranslateAccelerator(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Public Function TranslateAccelerator (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TranslateAccelerator(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="abstract member TranslateAccelerator : MSG * System.Windows.Input.ModifierKeys -&gt; bool" Usage="iKeyboardInputSink.TranslateAccelerator (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">消息及关联数据。 请勿修改此结构。 仅由于性能原因，通过引用来传递此消息。</param>
        <param name="modifiers">修改键。</param>
        <summary>在 keydown 消息级处理键盘输入。</summary>
        <returns>如果方法实现对该消息进行了处理，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 消息必须是 WM_KEYDOWN 或 WM_SYSKEYDOWN。  
  
 如果组件无法处理输入翻译并且具有可能具有翻译的子组件，则它通常会在返回结果之前，对保持当前焦点的子组件调用 <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> 方法。  
  
 如果无法立即处理该消息，则可以在必要时从 <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> 实现中重新调度该消息，然后返回 `false`。  
  
 转换快捷键的主要方案是处理 VK_TAB 的 keydown 消息，并确定是在组件内设置焦点，还是调用子组件 <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A>，或在父站点上调用 <xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A>，因为 TAB 序列已达到开始或结束边界。 某些组件可能会选择不以这种方式处理 tab 键。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      </Docs>
    </Member>
    <Member MemberName="TranslateChar">
      <MemberSignature Language="C#" Value="public bool TranslateChar (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TranslateChar(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Public Function TranslateChar (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TranslateChar(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="abstract member TranslateChar : MSG * System.Windows.Input.ModifierKeys -&gt; bool" Usage="iKeyboardInputSink.TranslateChar (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">消息及关联数据。 请勿修改此结构。 仅由于性能原因，通过引用来传递此消息。</param>
        <param name="modifiers">修改键。</param>
        <summary>在调用 <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> 之前处理 WM_CHAR、WM_SYSCHAR、WM_DEADCHAR 和 WM_SYSDEADCHAR 输入消息。</summary>
        <returns>如果消息已处理并且不应调用 <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果实现此方法以返回 `true`，则输入体系结构将不会为该密钥消息调用 <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
