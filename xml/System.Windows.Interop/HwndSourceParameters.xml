<Type Name="HwndSourceParameters" FullName="System.Windows.Interop.HwndSourceParameters">
  <Metadata><Meta Name="ms.openlocfilehash" Value="81887cfd40c6d05f5ef9b3aa3832cb05a34e3269" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86723994" /></Metadata><TypeSignature Language="C#" Value="public struct HwndSourceParameters" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit HwndSourceParameters extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.HwndSourceParameters" />
  <TypeSignature Language="VB.NET" Value="Public Structure HwndSourceParameters" />
  <TypeSignature Language="C++ CLI" Value="public value class HwndSourceParameters" />
  <TypeSignature Language="F#" Value="type HwndSourceParameters = struct" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="fa6b2-101">包含用 <see cref="M:System.Windows.Interop.HwndSource.#ctor(System.Windows.Interop.HwndSourceParameters)" /> 构造函数来创建 <see cref="T:System.Windows.Interop.HwndSource" /> 对象所使用的参数。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-101">Contains the parameters that are used to create an <see cref="T:System.Windows.Interop.HwndSource" /> object using the <see cref="M:System.Windows.Interop.HwndSource.#ctor(System.Windows.Interop.HwndSourceParameters)" /> constructor.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6b2-102">此结构仅在 <xref:System.Windows.Interop.HwndSource> 对象构造函数调用中使用。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-102">This structure is used only in the <xref:System.Windows.Interop.HwndSource> object constructor call.</span></span>  
  
 <span data-ttu-id="fa6b2-103">当构造时，不会在实例上直接公开其值由此结构建立的属性 <xref:System.Windows.Interop.HwndSource> <xref:System.Windows.Interop.HwndSource> 。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-103">The properties whose values are established by this structure are not directly exposed on <xref:System.Windows.Interop.HwndSource> instances when an <xref:System.Windows.Interop.HwndSource> is constructed.</span></span> <span data-ttu-id="fa6b2-104">但是，结构的值 <xref:System.Windows.Interop.HwndSourceParameters> 通常会影响常规 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 属性，如特定的托管对象及其 api 中可能存在的 "高度" 和 "宽度"。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-104">However, the values of the <xref:System.Windows.Interop.HwndSourceParameters> structure typically affect general [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] properties such as "Height" and "Width" that might exist in specific hosted objects and their APIs.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fa6b2-105">不要使用默认的 (无参数) 构造函数构造此结构的实例。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-105">Do not construct instances of this structure using the default (parameterless) constructor.</span></span> <span data-ttu-id="fa6b2-106"><xref:System.Windows.Interop.HwndSourceParameters>无参数构造函数创建的实例会导致 <xref:System.Windows.Interop.HwndSourceParameters> 无法将 (分配给， <xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A> 即使该 <xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A> 属性看起来可) 设置。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-106">An <xref:System.Windows.Interop.HwndSourceParameters> instance that is created by the parameterless constructor results in <xref:System.Windows.Interop.HwndSourceParameters> that cannot be assigned a <xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A> (even though the <xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A> property appears to be settable).</span></span> <span data-ttu-id="fa6b2-107">如果将此类实例应用为构造函数的参数 <xref:System.Windows.Interop.HwndSource> ，则生成的将 <xref:System.Windows.Interop.HwndSource> 无法显示窗口。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-107">If such an instance is applied as the parameters for an <xref:System.Windows.Interop.HwndSource> constructor, the resulting <xref:System.Windows.Interop.HwndSource> cannot display a window.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Interop.HwndSource" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fa6b2-108">初始化 <see cref="T:System.Windows.Interop.HwndSourceParameters" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-108">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSourceParameters" /> class.</span></span> <span data-ttu-id="fa6b2-109">请勿将无参数构造函数用于 <see cref="T:System.Windows.Interop.HwndSourceParameters" />；请参见备注。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-109">Do not use the parameterless constructor for <see cref="T:System.Windows.Interop.HwndSourceParameters" />; see Remarks.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="fa6b2-110">不要使用默认的 (无参数) 构造函数构造此结构的实例。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-110">Do not construct instances of this structure using the default (parameterless) constructor.</span></span> <span data-ttu-id="fa6b2-111"><xref:System.Windows.Interop.HwndSourceParameters>无参数构造函数创建的实例会导致 <xref:System.Windows.Interop.HwndSourceParameters> 无法将 (分配给， <xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A> 即使该 <xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A> 属性看起来可) 设置。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-111">An <xref:System.Windows.Interop.HwndSourceParameters> instance that is created by the parameterless constructor results in <xref:System.Windows.Interop.HwndSourceParameters> that cannot be assigned a <xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A> (even though the <xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A> property appears to be settable).</span></span> <span data-ttu-id="fa6b2-112">如果将此类实例应用为构造函数的参数 <xref:System.Windows.Interop.HwndSource> ，则生成的将 <xref:System.Windows.Interop.HwndSource> 无法显示窗口。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-112">If such an instance is applied as the parameters for an <xref:System.Windows.Interop.HwndSource> constructor, the resulting <xref:System.Windows.Interop.HwndSource> cannot display a window.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HwndSourceParameters (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSourceParameters.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HwndSourceParameters(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Windows.Interop.HwndSourceParameters : string -&gt; System.Windows.Interop.HwndSourceParameters" Usage="new System.Windows.Interop.HwndSourceParameters name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fa6b2-113">窗口的名称。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-113">The window's name.</span></span></param>
        <summary><span data-ttu-id="fa6b2-114">用指定的窗口名称初始化 <see cref="T:System.Windows.Interop.HwndSourceParameters" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-114">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSourceParameters" /> class with a specified window name.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HwndSourceParameters (string name, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSourceParameters.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HwndSourceParameters(System::String ^ name, int width, int height);" />
      <MemberSignature Language="F#" Value="new System.Windows.Interop.HwndSourceParameters : string * int * int -&gt; System.Windows.Interop.HwndSourceParameters" Usage="new System.Windows.Interop.HwndSourceParameters (name, width, height)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fa6b2-115">窗口的名称。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-115">The window's name.</span></span></param>
        <param name="width"><span data-ttu-id="fa6b2-116">以像素为单位的窗口宽度。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-116">The window's width, in pixels.</span></span></param>
        <param name="height"><span data-ttu-id="fa6b2-117">以像素为单位的窗口高度。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-117">The window's height, in pixels.</span></span></param>
        <summary><span data-ttu-id="fa6b2-118">用指定的窗口名称和初始大小初始化 <see cref="T:System.Windows.Interop.HwndSourceParameters" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-118">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSourceParameters" /> class with a specified window name and initial size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6b2-119">不要为或参数传递 0 (零) `width` `height` 。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-119">Do not pass 0 (zero) for either the `width` or `height` parameters.</span></span> <span data-ttu-id="fa6b2-120">尽管方法最终会成功，但即使您确实要传递0，也会显著降低性能。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-120">Although the method eventually succeeds, even if you do pass 0, a significant performance penalty occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="AcquireHwndFocusInMenuMode">
      <MemberSignature Language="C#" Value="public bool AcquireHwndFocusInMenuMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcquireHwndFocusInMenuMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AcquireHwndFocusInMenuMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcquireHwndFocusInMenuMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AcquireHwndFocusInMenuMode : bool with get, set" Usage="System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa6b2-121">获取或设置一个值，该值确定在创建 <see cref="T:System.Windows.Interop.HwndSource" /> 时是否获取包含窗口的 WPF 的 Win32 焦点。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-121">Gets or sets the value that determines whether to acquire Win32 focus for the WPF containing window when an <see cref="T:System.Windows.Interop.HwndSource" /> is created.</span></span></summary>
        <value><span data-ttu-id="fa6b2-122">若要在用户与菜单交互时获取包含窗口的 WPF 的 Win32 焦点，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-122"><see langword="true" /> to acquire Win32 focus for the WPF containing window when the user interacts with menus; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fa6b2-123">如果为 <see langword="null" />，则使用 <see cref="P:System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-123"><see langword="null" /> to use the value of <see cref="P:System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdjustSizingForNonClientArea">
      <MemberSignature Language="C#" Value="public bool AdjustSizingForNonClientArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AdjustSizingForNonClientArea" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.AdjustSizingForNonClientArea" />
      <MemberSignature Language="VB.NET" Value="Public Property AdjustSizingForNonClientArea As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AdjustSizingForNonClientArea { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AdjustSizingForNonClientArea : bool with get, set" Usage="System.Windows.Interop.HwndSourceParameters.AdjustSizingForNonClientArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa6b2-124">设置或获取一个值，指示调整大小是否包括非工作区。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-124">Gets or sets a value that indicates whether to include the nonclient area for sizing.</span></span></summary>
        <value><span data-ttu-id="fa6b2-125">如果布局管理器调整大小逻辑应包括非工作区，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-125"><see langword="true" /> if the layout manager sizing logic should include the nonclient area; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fa6b2-126">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-126">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6b2-127"><xref:System.Windows.Window> `true` 当在内部使用此结构时，该类将此参数设置为，作为其 [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] 窗口创建过程的一部分。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-127">The <xref:System.Windows.Window> class sets this parameter to `true` when using this structure internally, as part of its [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] window-creation process.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
        <altmember cref="P:System.Windows.Interop.HwndSourceParameters.PositionX" />
        <altmember cref="P:System.Windows.Interop.HwndSourceParameters.PositionY" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fa6b2-128">确定此结构是否与指定的结构相等。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-128">Determines whether this structure is equal to a specified structure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSourceParameters.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="hwndSourceParameters.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="fa6b2-129">要测试是否相等的对象。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-129">The objects to be tested for equality.</span></span></param>
        <summary><span data-ttu-id="fa6b2-130">确定此结构是否与指定对象相等。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-130">Determines whether this structure is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="fa6b2-131">如果比较结果相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-131"><see langword="true" /> if the comparison is equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6b2-132">此实现将检查两个结构 (公有和私有) 的所有成员，以实现精确的值相等性。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-132">This implementation checks all members (public and private) of both structures for exact value equality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Interop.HwndSourceParameters obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Windows.Interop.HwndSourceParameters obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSourceParameters.Equals(System.Windows.Interop.HwndSourceParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As HwndSourceParameters) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Windows::Interop::HwndSourceParameters obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.Interop.HwndSourceParameters -&gt; bool" Usage="hwndSourceParameters.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Windows.Interop.HwndSourceParameters" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="fa6b2-133">要测试是否相等的结构。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-133">The structure to be tested for equality.</span></span></param>
        <summary><span data-ttu-id="fa6b2-134">确定此结构是否与指定的 <see cref="T:System.Windows.Interop.HwndSourceParameters" /> 结构相等。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-134">Determines whether this structure is equal to a specified <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure.</span></span></summary>
        <returns><span data-ttu-id="fa6b2-135">如果结构相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-135"><see langword="true" /> if the structures are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6b2-136">此实现将检查两个结构 (公有和私有) 的所有成员，以实现精确的值相等性。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-136">This implementation checks all members (public and private) of both structures for exact value equality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtendedWindowStyle">
      <MemberSignature Language="C#" Value="public int ExtendedWindowStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ExtendedWindowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.ExtendedWindowStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendedWindowStyle As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ExtendedWindowStyle { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ExtendedWindowStyle : int with get, set" Usage="System.Windows.Interop.HwndSourceParameters.ExtendedWindowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa6b2-137">获取或设置窗口的扩展 [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] 样式。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-137">Gets or sets the extended [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] styles for the window.</span></span></summary>
        <value><span data-ttu-id="fa6b2-138">扩展窗口样式。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-138">The extended window styles.</span></span> <span data-ttu-id="fa6b2-139">有关这些样式的列表，请参阅[CreateWindowEx](https://go.microsoft.com/fwlink/?LinkId=98462) 。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-139">See [CreateWindowEx](https://go.microsoft.com/fwlink/?LinkId=98462) for a list of these styles.</span></span> <span data-ttu-id="fa6b2-140">默认值为 0（无扩展窗口样式）。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-140">The default is 0 (no extended window styles).</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSourceParameters.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="hwndSourceParameters.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fa6b2-141">返回此 <see cref="T:System.Windows.Interop.HwndSourceParameters" /> 实例的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-141">Returns the hash code for this <see cref="T:System.Windows.Interop.HwndSourceParameters" /> instance.</span></span></summary>
        <returns><span data-ttu-id="fa6b2-142">32 位有符号整数哈希代码。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-142">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6b2-143">此实现使用 GetHashCode 的对象实现。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-143">This implementation uses the Object implementation of GetHashCode.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAssignedSize">
      <MemberSignature Language="C#" Value="public bool HasAssignedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAssignedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.HasAssignedSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAssignedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAssignedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAssignedSize : bool" Usage="System.Windows.Interop.HwndSourceParameters.HasAssignedSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa6b2-144">获取一个值，该值指示是否已分配大小。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-144">Gets a value that indicates whether a size was assigned.</span></span></summary>
        <value><span data-ttu-id="fa6b2-145">如果已分配窗口大小，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-145"><see langword="true" /> if the window size was assigned; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fa6b2-146">默认值为 <see langword="false" />，除非使用提供的高度和宽度创建该结构，此种情况下，该值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-146">The default is <see langword="false" />, unless the structure was created with provided height and width, in which case the value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6b2-147">如果未分配大小，则窗口的默认大小为。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-147">If a size was not assigned, the window has the default size.</span></span>  
  
 <span data-ttu-id="fa6b2-148">调用 <xref:System.Windows.Interop.HwndSourceParameters.SetSize%2A> 或设置 <xref:System.Windows.Interop.HwndSourceParameters.Width%2A> 或 <xref:System.Windows.Interop.HwndSourceParameters.Height%2A> 此属性中的所有结果均为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-148">Calls to <xref:System.Windows.Interop.HwndSourceParameters.SetSize%2A> or setting <xref:System.Windows.Interop.HwndSourceParameters.Width%2A> or <xref:System.Windows.Interop.HwndSourceParameters.Height%2A> all result in this property being `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public int Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Height { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Height : int with get, set" Usage="System.Windows.Interop.HwndSourceParameters.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa6b2-149">获取或设置一个值，该值指示窗口的高度。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-149">Gets or sets a value that indicates the height of the window.</span></span></summary>
        <value><span data-ttu-id="fa6b2-150">窗口的宽度（以设备像素为单位）。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-150">The height of the window, in device pixels.</span></span> <span data-ttu-id="fa6b2-151">默认值为 1。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-151">The default value is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6b2-152">与中采用矩形屏幕区域度量值的大多数方法不同， [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 您可以用设备像素指定此窗口大小，而不是使用与设备无关的典型单位来指定。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-152">Unlike most methods that take rectangle screen-region measures in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], you specify this window size in device pixels, not the typical device-independent units.</span></span> <span data-ttu-id="fa6b2-153">如果需要将窗口大小调整到其内容，请将设置 <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> 为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-153">If you need to size your window to its content, set <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> to `true`.</span></span>  
  
 <span data-ttu-id="fa6b2-154">请勿将 <xref:System.Windows.Interop.HwndSourceParameters.Height%2A> (零) 设置为0。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-154">Do not set <xref:System.Windows.Interop.HwndSourceParameters.Height%2A> to 0 (zero).</span></span> <span data-ttu-id="fa6b2-155">这样做会导致呈现明显的性能损失。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-155">Doing so incurs a significant performance penalty in rendering.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
        <altmember cref="M:System.Windows.Interop.HwndSourceParameters.SetSize(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="HwndSourceHook">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.HwndSourceHook HwndSourceHook { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Interop.HwndSourceHook HwndSourceHook" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.HwndSourceHook" />
      <MemberSignature Language="VB.NET" Value="Public Property HwndSourceHook As HwndSourceHook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Interop::HwndSourceHook ^ HwndSourceHook { System::Windows::Interop::HwndSourceHook ^ get(); void set(System::Windows::Interop::HwndSourceHook ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HwndSourceHook : System.Windows.Interop.HwndSourceHook with get, set" Usage="System.Windows.Interop.HwndSourceParameters.HwndSourceHook" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.HwndSourceHook</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa6b2-156">获取或设置窗口的消息挂钩。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-156">Gets or sets the message hook for the window.</span></span></summary>
        <value><span data-ttu-id="fa6b2-157">窗口的消息挂钩。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-157">The message hook for the window.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6b2-158">此消息挂钩在调用之前已启用， `CreateWindow` 因此它接收所有窗口创建消息。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-158">This message hook is enabled before `CreateWindow` is called so that it receives all the window creation messages.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Interop.HwndSourceParameters a, System.Windows.Interop.HwndSourceParameters b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Interop.HwndSourceParameters a, valuetype System.Windows.Interop.HwndSourceParameters b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSourceParameters.op_Equality(System.Windows.Interop.HwndSourceParameters,System.Windows.Interop.HwndSourceParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (a As HwndSourceParameters, b As HwndSourceParameters) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Interop::HwndSourceParameters a, System::Windows::Interop::HwndSourceParameters b);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Interop.HwndSourceParameters * System.Windows.Interop.HwndSourceParameters -&gt; bool" Usage="a = b" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Windows.Interop.HwndSourceParameters" />
        <Parameter Name="b" Type="System.Windows.Interop.HwndSourceParameters" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="fa6b2-159">要比较的第一个 <see cref="T:System.Windows.Interop.HwndSourceParameters" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-159">The first <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure to compare.</span></span></param>
        <param name="b"><span data-ttu-id="fa6b2-160">要比较的第二个 <see cref="T:System.Windows.Interop.HwndSourceParameters" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-160">The second <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure to compare.</span></span></param>
        <summary><span data-ttu-id="fa6b2-161">确定 <see cref="T:System.Windows.Interop.HwndSourceParameters" /> 结构是否与另一个 <see cref="T:System.Windows.Interop.HwndSourceParameters" /> 结构相等。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-161">Determines whether an <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure is equal to another <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure.</span></span></summary>
        <returns><span data-ttu-id="fa6b2-162">如果结构相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-162"><see langword="true" /> if the structures are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6b2-163">此实现调用 <xref:System.Windows.Interop.HwndSourceParameters.Equals%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-163">This implementation calls the <xref:System.Windows.Interop.HwndSourceParameters.Equals%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Interop.HwndSourceParameters a, System.Windows.Interop.HwndSourceParameters b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Interop.HwndSourceParameters a, valuetype System.Windows.Interop.HwndSourceParameters b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSourceParameters.op_Inequality(System.Windows.Interop.HwndSourceParameters,System.Windows.Interop.HwndSourceParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (a As HwndSourceParameters, b As HwndSourceParameters) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Interop::HwndSourceParameters a, System::Windows::Interop::HwndSourceParameters b);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Interop.HwndSourceParameters * System.Windows.Interop.HwndSourceParameters -&gt; bool" Usage="System.Windows.Interop.HwndSourceParameters.op_Inequality (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Windows.Interop.HwndSourceParameters" />
        <Parameter Name="b" Type="System.Windows.Interop.HwndSourceParameters" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="fa6b2-164">要比较的第一个 <see cref="T:System.Windows.Interop.HwndSourceParameters" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-164">The first <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure to compare.</span></span></param>
        <param name="b"><span data-ttu-id="fa6b2-165">要比较的第二个 <see cref="T:System.Windows.Interop.HwndSourceParameters" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-165">The second <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure to compare.</span></span></param>
        <summary><span data-ttu-id="fa6b2-166">确定 <see cref="T:System.Windows.Interop.HwndSourceParameters" /> 结构是否与另一个 <see cref="T:System.Windows.Interop.HwndSourceParameters" /> 结构不相等。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-166">Determines whether an <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure is not equal to another <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure.</span></span></summary>
        <returns><span data-ttu-id="fa6b2-167">如果两个结构不相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-167"><see langword="true" /> if the structures are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6b2-168">此实现调用 <xref:System.Windows.Interop.HwndSourceParameters.Equals%2A> 方法并反转结果。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-168">This implementation calls the <xref:System.Windows.Interop.HwndSourceParameters.Equals%2A> method and inverts the result.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentWindow">
      <MemberSignature Language="C#" Value="public IntPtr ParentWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ParentWindow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.ParentWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property ParentWindow As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr ParentWindow { IntPtr get(); void set(IntPtr value); };" />
      <MemberSignature Language="F#" Value="member this.ParentWindow : nativeint with get, set" Usage="System.Windows.Interop.HwndSourceParameters.ParentWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa6b2-169">获取或设置已创建窗口的父级的窗口句柄 (HWND)。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-169">Gets or sets the window handle (HWND) of the parent for the created window.</span></span></summary>
        <value><span data-ttu-id="fa6b2-170">父窗口的 HWND。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-170">The HWND of the parent window.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="PositionX">
      <MemberSignature Language="C#" Value="public int PositionX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PositionX" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.PositionX" />
      <MemberSignature Language="VB.NET" Value="Public Property PositionX As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PositionX { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PositionX : int with get, set" Usage="System.Windows.Interop.HwndSourceParameters.PositionX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa6b2-171">获取或设置窗口左边缘的位置。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-171">Gets or sets the left-edge position of the window.</span></span></summary>
        <value><span data-ttu-id="fa6b2-172">窗口左边缘的位置。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-172">The left-edge position of the window.</span></span> <span data-ttu-id="fa6b2-173">默认值为 CW_USEDEFAULT，由<c>CreateWindow</c>处理。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-173">The default is CW_USEDEFAULT, as processed by <c>CreateWindow</c>.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Interop.HwndSourceParameters.SetPosition(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="PositionY">
      <MemberSignature Language="C#" Value="public int PositionY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PositionY" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.PositionY" />
      <MemberSignature Language="VB.NET" Value="Public Property PositionY As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PositionY { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PositionY : int with get, set" Usage="System.Windows.Interop.HwndSourceParameters.PositionY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa6b2-174">获取或设置窗口上边缘的位置。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-174">Gets or sets the upper-edge position of the window.</span></span></summary>
        <value><span data-ttu-id="fa6b2-175">窗口上边缘的位置。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-175">The upper-edge position of the window.</span></span> <span data-ttu-id="fa6b2-176">默认值为 CW_USEDEFAULT，由<c>CreateWindow</c>处理。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-176">The default is CW_USEDEFAULT, as processed by <c>CreateWindow</c>.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="RestoreFocusMode">
      <MemberSignature Language="C#" Value="public System.Windows.Input.RestoreFocusMode RestoreFocusMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.RestoreFocusMode RestoreFocusMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.RestoreFocusMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RestoreFocusMode As RestoreFocusMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::RestoreFocusMode RestoreFocusMode { System::Windows::Input::RestoreFocusMode get(); void set(System::Windows::Input::RestoreFocusMode value); };" />
      <MemberSignature Language="F#" Value="member this.RestoreFocusMode : System.Windows.Input.RestoreFocusMode with get, set" Usage="System.Windows.Interop.HwndSourceParameters.RestoreFocusMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RestoreFocusMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa6b2-177">获取或设置 WPF 如何处理将焦点还原到窗口。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-177">Gets or sets how WPF handles restoring focus to the window.</span></span></summary>
        <value><span data-ttu-id="fa6b2-178">指定 WPF 如何处理还原窗口的焦点的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-178">One of the enumeration values that specifies how WPF handles restoring focus for the window.</span></span> <span data-ttu-id="fa6b2-179">默认值为 <see cref="F:System.Windows.Input.RestoreFocusMode.Auto" />。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-179">The default is <see cref="F:System.Windows.Input.RestoreFocusMode.Auto" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6b2-180">WPF 会自动尝试将焦点还原到窗口，除非将 <xref:System.Windows.Interop.HwndSourceParameters.RestoreFocusMode%2A> 设置为 <xref:System.Windows.Input.RestoreFocusMode.None> 。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-180">WPF automatically tries to restore focus to the window unless <xref:System.Windows.Interop.HwndSourceParameters.RestoreFocusMode%2A> is set to <xref:System.Windows.Input.RestoreFocusMode.None>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPosition">
      <MemberSignature Language="C#" Value="public void SetPosition (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPosition(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSourceParameters.SetPosition(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPosition (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPosition(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.SetPosition : int * int -&gt; unit" Usage="hwndSourceParameters.SetPosition (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="fa6b2-181">窗口左边缘的位置。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-181">The position of the left edge of the window.</span></span></param>
        <param name="y"><span data-ttu-id="fa6b2-182">窗口上边缘的位置。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-182">The position of the upper edge of the window.</span></span></param>
        <summary><span data-ttu-id="fa6b2-183">设置用于 <see cref="T:System.Windows.Interop.HwndSource" /> 的窗口的屏幕位置的值。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-183">Sets the values that are used for the screen position of the window for the <see cref="T:System.Windows.Interop.HwndSource" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="SetSize">
      <MemberSignature Language="C#" Value="public void SetSize (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSize(int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSourceParameters.SetSize(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSize (width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSize(int width, int height);" />
      <MemberSignature Language="F#" Value="member this.SetSize : int * int -&gt; unit" Usage="hwndSourceParameters.SetSize (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width"><span data-ttu-id="fa6b2-184">窗口的宽度（以设备像素为单位）。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-184">The width of the window, in device pixels.</span></span></param>
        <param name="height"><span data-ttu-id="fa6b2-185">窗口的宽度（以设备像素为单位）。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-185">The height of the window, in device pixels.</span></span></param>
        <summary><span data-ttu-id="fa6b2-186">设置用于 <see cref="T:System.Windows.Interop.HwndSource" /> 的窗口大小的值。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-186">Sets the values that are used for the window size of the <see cref="T:System.Windows.Interop.HwndSource" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6b2-187">与中采用矩形屏幕区域度量值的大多数方法不同 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] ，您可以用设备像素指定此窗口大小，而不是以与设备无关的典型单位来指定。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-187">Unlike most methods that take rectangle screen-region measures in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], you specify this window size in device pixels, not in the typical device-independent units.</span></span> <span data-ttu-id="fa6b2-188">如果需要将窗口大小调整到其内容，请将设置 <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> 为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-188">If you need to size your window to its content, set <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> to `true`.</span></span>  
  
 <span data-ttu-id="fa6b2-189">不要为或参数传递 0 (零) `width` `height` 。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-189">Do not pass 0 (zero) for either the `width` or `height` parameters.</span></span> <span data-ttu-id="fa6b2-190">尽管方法最终会成功，但如果您确实要传递0，则会发生巨大的性能损失。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-190">Although the method eventually succeeds even if you do pass 0, a substantial performance penalty occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
        <altmember cref="P:System.Windows.Interop.HwndSourceParameters.Height" />
        <altmember cref="P:System.Windows.Interop.HwndSourceParameters.Width" />
      </Docs>
    </Member>
    <Member MemberName="TreatAncestorsAsNonClientArea">
      <MemberSignature Language="C#" Value="public bool TreatAncestorsAsNonClientArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TreatAncestorsAsNonClientArea" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.TreatAncestorsAsNonClientArea" />
      <MemberSignature Language="VB.NET" Value="Public Property TreatAncestorsAsNonClientArea As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TreatAncestorsAsNonClientArea { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TreatAncestorsAsNonClientArea : bool with get, set" Usage="System.Windows.Interop.HwndSourceParameters.TreatAncestorsAsNonClientArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa6b2-191">获取设置指示布局期间，<see cref="T:System.Windows.Interop.HwndSource" /> 的父窗口是否应被视作窗口的无客户端区域的值。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-191">Gets or sets a value that indicates whether the parent windows of the <see cref="T:System.Windows.Interop.HwndSource" /> should be considered the non-client area of the window during layout passes.</span></span></summary>
        <value><span data-ttu-id="fa6b2-192">如果 <see cref="T:System.Windows.Interop.HwndSource" /> 的父级窗口在布局过程传递应被视为该窗口的非客户区域，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-192"><see langword="true" /> if parent windows of the <see cref="T:System.Windows.Interop.HwndSource" /> should be considered the non-client area of the window during layout passes.; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fa6b2-193">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-193">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TreatAsInputRoot">
      <MemberSignature Language="C#" Value="public bool TreatAsInputRoot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TreatAsInputRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.TreatAsInputRoot" />
      <MemberSignature Language="VB.NET" Value="Public Property TreatAsInputRoot As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TreatAsInputRoot { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TreatAsInputRoot : bool with get, set" Usage="System.Windows.Interop.HwndSourceParameters.TreatAsInputRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa6b2-194">获取或设置指示 <see cref="T:System.Windows.Interop.HwndSource" /> 是否应通过 <see cref="T:System.Windows.Interop.ComponentDispatcher" /> 接收消息泵引发的窗口消息的值。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-194">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Interop.HwndSource" /> should receive window messages raised by the message pump via the <see cref="T:System.Windows.Interop.ComponentDispatcher" />.</span></span></summary>
        <value><span data-ttu-id="fa6b2-195">如果 <see cref="T:System.Windows.Interop.HwndSource" /> 应通过 <see cref="T:System.Windows.Interop.ComponentDispatcher" /> 接收消息泵引发的窗口消息，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-195"><see langword="true" /> if the <see cref="T:System.Windows.Interop.HwndSource" /> should receive window messages raised by the message pump via the <see cref="T:System.Windows.Interop.ComponentDispatcher" />; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="fa6b2-196">如果 <see cref="T:System.Windows.Interop.HwndSource" /> 与顶级窗口相对应，则默认值为 <see langword="true" />；否则默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-196">The default is <see langword="true" /> if the <see cref="T:System.Windows.Interop.HwndSource" /> corresponds to a top-level window; otherwise, the default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesPerPixelOpacity">
      <MemberSignature Language="C#" Value="public bool UsesPerPixelOpacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesPerPixelOpacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.UsesPerPixelOpacity" />
      <MemberSignature Language="VB.NET" Value="Public Property UsesPerPixelOpacity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsesPerPixelOpacity { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UsesPerPixelOpacity : bool with get, set" Usage="System.Windows.Interop.HwndSourceParameters.UsesPerPixelOpacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa6b2-197">获取一个值，该值声明是否遵守源窗口内容的每像素不透明度。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-197">Gets a value that declares whether the per-pixel opacity of the source window content is respected.</span></span></summary>
        <value><span data-ttu-id="fa6b2-198">如果使用每像素不透明度，则为 <see langword="true" />；否则，为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-198"><see langword="true" /> if using per-pixel opacity; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6b2-199">通过启用每像素不透明度，系统不再绘制非工作区。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-199">By enabling per-pixel opacity, the system no longer draws the non-client area.</span></span>  
  
 <span data-ttu-id="fa6b2-200">当在桌面上绘制窗口时使用不透明度 (它表示最终渲染步骤，而不显示为属性值（如) ）的参与者 <xref:System.Windows.UIElement.Opacity%2A> 。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-200">The opacity is used when the window is drawn on the desktop (it represents a final rendering step and does not appear as a contributor to property values such as <xref:System.Windows.UIElement.Opacity%2A>).</span></span>  
  
 <span data-ttu-id="fa6b2-201"><xref:System.Windows.Interop.HwndSourceParameters.UsesPerPixelOpacity%2A>仅适用于顶级窗口。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-201"><xref:System.Windows.Interop.HwndSourceParameters.UsesPerPixelOpacity%2A> applies only to top-level windows.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="UsesPerPixelTransparency">
      <MemberSignature Language="C#" Value="public bool UsesPerPixelTransparency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesPerPixelTransparency" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.UsesPerPixelTransparency" />
      <MemberSignature Language="VB.NET" Value="Public Property UsesPerPixelTransparency As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsesPerPixelTransparency { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UsesPerPixelTransparency : bool with get, set" Usage="System.Windows.Interop.HwndSourceParameters.UsesPerPixelTransparency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa6b2-202">获取一个值，该值声明是否遵守源窗口内容的每像素透明度。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-202">Gets a value that declares whether the per-pixel transparency of the source window content is respected.</span></span></summary>
        <value><span data-ttu-id="fa6b2-203">如果使用每像素透明度，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-203"><see langword="true" /> if using per-pixel transparency; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public int Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Width { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Width : int with get, set" Usage="System.Windows.Interop.HwndSourceParameters.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa6b2-204">获取或设置一个值，该值指示窗口的宽度。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-204">Gets or sets a value that indicates the width of the window.</span></span></summary>
        <value><span data-ttu-id="fa6b2-205">窗口的宽度（以设备像素为单位）。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-205">The window width, in device pixels.</span></span> <span data-ttu-id="fa6b2-206">默认值为 1。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-206">The default value is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6b2-207">不同于采用矩形屏幕区域度量值的大多数方法 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] ，您可以在设备像素中指定此窗口的大小，而不是以与普通设备无关的单位来指定。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-207">Unlike most methods that take rectangle screen region measures in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], you specify this window's size in device pixels, not in the usual device-independent units.</span></span> <span data-ttu-id="fa6b2-208">如果需要将窗口大小调整到其内容，请将设置 <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> 为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-208">If you need to size your window to its content, set <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> to `true`.</span></span>  
  
 <span data-ttu-id="fa6b2-209">请勿将 <xref:System.Windows.Interop.HwndSourceParameters.Width%2A> (零) 设置为0。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-209">Do not set <xref:System.Windows.Interop.HwndSourceParameters.Width%2A> to 0 (zero).</span></span> <span data-ttu-id="fa6b2-210">这样做会导致呈现时的性能损失巨大。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-210">Doing so incurs a substantial performance penalty in rendering.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.HwndSourceParameters.SetSize(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WindowClassStyle">
      <MemberSignature Language="C#" Value="public int WindowClassStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WindowClassStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.WindowClassStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowClassStyle As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int WindowClassStyle { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WindowClassStyle : int with get, set" Usage="System.Windows.Interop.HwndSourceParameters.WindowClassStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa6b2-211">获取或设置窗口的 [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] 类样式。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-211">Gets or sets the [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] class style for the window.</span></span></summary>
        <value><span data-ttu-id="fa6b2-212">窗口类样式。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-212">The window class style.</span></span> <span data-ttu-id="fa6b2-213">有关详细信息，请参见[窗口类样式](https://go.microsoft.com/fwlink/?LinkId=178417)。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-213">See [Window Class Styles](https://go.microsoft.com/fwlink/?LinkId=178417) for detailed information.</span></span> <span data-ttu-id="fa6b2-214">默认值为 0（无窗口类样式）。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-214">The default is 0 (no window class style).</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="WindowName">
      <MemberSignature Language="C#" Value="public string WindowName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WindowName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.WindowName" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WindowName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WindowName : string with get, set" Usage="System.Windows.Interop.HwndSourceParameters.WindowName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa6b2-215">获取或设置窗口的名称。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-215">Gets or sets the name of the window.</span></span></summary>
        <value><span data-ttu-id="fa6b2-216">窗口名称。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-216">The window name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="fa6b2-217">不要使用默认的 (无参数) 构造函数构造此结构的实例。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-217">Do not construct instances of this structure using the default (parameterless) constructor.</span></span> <span data-ttu-id="fa6b2-218"><xref:System.Windows.Interop.HwndSourceParameters>无参数构造函数创建的实例会导致 <xref:System.Windows.Interop.HwndSourceParameters> 无法将 (分配给， <xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A> 即使该 <xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A> 属性看起来可) 设置。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-218">An <xref:System.Windows.Interop.HwndSourceParameters> instance that is created by the parameterless constructor results in <xref:System.Windows.Interop.HwndSourceParameters> that cannot be assigned a <xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A> (even though the <xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A> property appears to be settable).</span></span> <span data-ttu-id="fa6b2-219">如果将此类实例应用为构造函数的参数 <xref:System.Windows.Interop.HwndSource> ，则生成的将 <xref:System.Windows.Interop.HwndSource> 无法显示窗口。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-219">If such an instance is applied as the parameters for an <xref:System.Windows.Interop.HwndSource> constructor, the resulting <xref:System.Windows.Interop.HwndSource> cannot display a window.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="WindowStyle">
      <MemberSignature Language="C#" Value="public int WindowStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WindowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.WindowStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowStyle As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int WindowStyle { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WindowStyle : int with get, set" Usage="System.Windows.Interop.HwndSourceParameters.WindowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa6b2-220">获取或设置窗口的样式。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-220">Gets or sets the style for the window.</span></span></summary>
        <value><span data-ttu-id="fa6b2-221">窗口样式。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-221">The window style.</span></span> <span data-ttu-id="fa6b2-222">有关样式位的完整列表，请参阅[CreateWindowEx](https://go.microsoft.com/fwlink/?LinkId=98462)函数。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-222">See the [CreateWindowEx](https://go.microsoft.com/fwlink/?LinkId=98462) function for a complete list of style bits.</span></span> <span data-ttu-id="fa6b2-223">默认值： WS_VISIBLE、WS_CAPTION、WS_SYSMENU、WS_THICKFRAME、WS_MINIMIZEBOX、WS_MAXIMIZEBOX、WS_CLIPCHILDREN</span><span class="sxs-lookup"><span data-stu-id="fa6b2-223">Defaults: WS_VISIBLE, WS_CAPTION, WS_SYSMENU, WS_THICKFRAME, WS_MINIMIZEBOX, WS_MAXIMIZEBOX, WS_CLIPCHILDREN</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa6b2-224">默认情况下，在创建结构时设置以下位： WS_VISIBLE;WS_CAPTION;WS_SYSMENU;WS_THICKFRAME;WS_MINIMIZEBOX;WS_MAXIMIZEBOX;WS_CLIPCHILDREN。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-224">By default, the following bits are set when the structure is created: WS_VISIBLE; WS_CAPTION; WS_SYSMENU; WS_THICKFRAME; WS_MINIMIZEBOX; WS_MAXIMIZEBOX; WS_CLIPCHILDREN.</span></span>  
  
 <span data-ttu-id="fa6b2-225">对于标准窗口，必须设置 WS_CLIPCHILDREN 位。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-225">For a standard window, you must set the WS_CLIPCHILDREN bit.</span></span> <span data-ttu-id="fa6b2-226">此样式位在代码本身中强制执行;如果省略设置此标志，则 WPF 会将其添加到提供的任何值。</span><span class="sxs-lookup"><span data-stu-id="fa6b2-226">This style bit is enforced in the code itself; if you omit to set this flag, WPF adds it to whatever value you provide.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
  </Members>
</Type>
