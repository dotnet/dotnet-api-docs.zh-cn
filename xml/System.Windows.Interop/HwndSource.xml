<Type Name="HwndSource" FullName="System.Windows.Interop.HwndSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b9b8dcd4ba3f81134d42cce1c1a7ff9f5d1e9e2a" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83952865" /></Metadata><TypeSignature Language="C#" Value="public class HwndSource : System.Windows.PresentationSource, IDisposable, System.Windows.Interop.IKeyboardInputSink, System.Windows.Interop.IWin32Window" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HwndSource extends System.Windows.PresentationSource implements class System.IDisposable, class System.Windows.Interop.IKeyboardInputSink, class System.Windows.Interop.IWin32Window" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.HwndSource" />
  <TypeSignature Language="VB.NET" Value="Public Class HwndSource&#xA;Inherits PresentationSource&#xA;Implements IDisposable, IKeyboardInputSink, IWin32Window" />
  <TypeSignature Language="C++ CLI" Value="public ref class HwndSource : System::Windows::PresentationSource, IDisposable, System::Windows::Interop::IKeyboardInputSink, System::Windows::Interop::IWin32Window" />
  <TypeSignature Language="F#" Value="type HwndSource = class&#xA;    inherit PresentationSource&#xA;    interface IDisposable&#xA;    interface IKeyboardInputSink&#xA;    interface IWin32Window" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi HwndSource extends System.Windows.PresentationSource implements class System.IDisposable, class System.Windows.Interop.IKeyboardInputSink, class System.Windows.Interop.IWin32Window" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type HwndSource = class&#xA;    inherit PresentationSource&#xA;    interface IDisposable&#xA;    interface IWin32Window&#xA;    interface IKeyboardInputSink" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.PresentationSource</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Interop.IKeyboardInputSink</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Interop.IWin32Window</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="4baaf-101">在 Win32 窗口中呈现 Windows Presentation Foundation (WPF) 内容。</span><span class="sxs-lookup"><span data-stu-id="4baaf-101">Presents Windows Presentation Foundation (WPF) content in a Win32 window.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="4baaf-102">此类的多个成员在 Internet 安全区域中不可用。</span><span class="sxs-lookup"><span data-stu-id="4baaf-102">Many members of this class are unavailable in the Internet security zone.</span></span>  
  
 <span data-ttu-id="4baaf-103"><xref:System.Windows.Interop.HwndSource> 实现一个可包含 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 内容的 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 窗口。</span><span class="sxs-lookup"><span data-stu-id="4baaf-103">An <xref:System.Windows.Interop.HwndSource> implements a [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] window that can contain [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] content.</span></span> <span data-ttu-id="4baaf-104">窗口中的 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 内容将进行排列、测量和呈现;与输入交互。</span><span class="sxs-lookup"><span data-stu-id="4baaf-104">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] content in the window is arranged, measured, and rendered; and is interactive to input.</span></span> <span data-ttu-id="4baaf-105">由于 <xref:System.Windows.Interop.HwndSource> 专门用于与 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]进行互操作，因此此类公开几个低级别的 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 功能。</span><span class="sxs-lookup"><span data-stu-id="4baaf-105">Because the <xref:System.Windows.Interop.HwndSource> is specifically designed to interoperate with [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)], this class exposes several low-level [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] features.</span></span> <span data-ttu-id="4baaf-106">此类可用于执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="4baaf-106">You can use this class to do the following:</span></span>  
  
-   <span data-ttu-id="4baaf-107">指定窗口样式、窗口类样式和扩展窗口样式。</span><span class="sxs-lookup"><span data-stu-id="4baaf-107">Specify window styles, window class styles, and extended window styles.</span></span>  
  
-   <span data-ttu-id="4baaf-108">挂钩窗口过程。</span><span class="sxs-lookup"><span data-stu-id="4baaf-108">Hook the window procedure.</span></span>  
  
-   <span data-ttu-id="4baaf-109">提供对窗口句柄（HWND）的访问权限。</span><span class="sxs-lookup"><span data-stu-id="4baaf-109">Provide access to the window handle (HWND).</span></span>  
  
-   <span data-ttu-id="4baaf-110">销毁窗口。</span><span class="sxs-lookup"><span data-stu-id="4baaf-110">Destroy the window.</span></span>  
  
 <span data-ttu-id="4baaf-111"><xref:System.Windows.Interop.HwndSource> 类旨在实现常规互操作性，并且不是作为托管的 HWND 包装设计的。</span><span class="sxs-lookup"><span data-stu-id="4baaf-111">The <xref:System.Windows.Interop.HwndSource> class is designed for general interoperability and is not designed as a managed HWND wrapper.</span></span> <span data-ttu-id="4baaf-112">通常，它不提供用于操作窗口或属性以检查其状态的托管方法。</span><span class="sxs-lookup"><span data-stu-id="4baaf-112">In general, it does not provide managed methods for manipulating the window or properties for inspecting its state.</span></span> <span data-ttu-id="4baaf-113">相反，<xref:System.Windows.Interop.HwndSource> 类通过 <xref:System.Windows.Interop.HwndSource.Handle%2A> 属性提供对 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 窗口句柄（HWND）的访问，可通过 PInvoke 技术将这些方法传递给 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] Api，以便操作窗口。</span><span class="sxs-lookup"><span data-stu-id="4baaf-113">Instead, the <xref:System.Windows.Interop.HwndSource> class provides access to the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] window handle (HWND) through the <xref:System.Windows.Interop.HwndSource.Handle%2A> property, which can be passed by means of PInvoke techniques to [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] APIs in order to manipulate the window.</span></span>  
  
 <span data-ttu-id="4baaf-114">**完成**</span><span class="sxs-lookup"><span data-stu-id="4baaf-114">**Construction**</span></span>  
  
 <span data-ttu-id="4baaf-115"><xref:System.Windows.Interop.HwndSource> 的许多方面只能在构造时指定。</span><span class="sxs-lookup"><span data-stu-id="4baaf-115">Many aspects of the <xref:System.Windows.Interop.HwndSource> can only be specified at construction time.</span></span> <span data-ttu-id="4baaf-116">若要创建 <xref:System.Windows.Interop.HwndSource>，请先创建一个 <xref:System.Windows.Interop.HwndSourceParameters> 结构并使用所需的参数来填充它。</span><span class="sxs-lookup"><span data-stu-id="4baaf-116">To create an <xref:System.Windows.Interop.HwndSource>, first create an <xref:System.Windows.Interop.HwndSourceParameters> structure and populate it with the desired parameters.</span></span> <span data-ttu-id="4baaf-117">这些参数包括：</span><span class="sxs-lookup"><span data-stu-id="4baaf-117">These parameters include the following:</span></span>  
  
-   <span data-ttu-id="4baaf-118">类、窗口和扩展窗口样式。</span><span class="sxs-lookup"><span data-stu-id="4baaf-118">The class, window, and extended window styles.</span></span> <span data-ttu-id="4baaf-119">创建窗口后，必须使用 PInvoke 来更改样式。</span><span class="sxs-lookup"><span data-stu-id="4baaf-119">You must use PInvoke to change the styles after the window is created.</span></span> <span data-ttu-id="4baaf-120">创建窗口后，不能更改所有样式。</span><span class="sxs-lookup"><span data-stu-id="4baaf-120">Not all styles can be changed after the window is created.</span></span> <span data-ttu-id="4baaf-121">更改窗口样式之前，请参考 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 文档。</span><span class="sxs-lookup"><span data-stu-id="4baaf-121">Consult the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] documentation before changing window styles.</span></span>  
  
-   <span data-ttu-id="4baaf-122">窗口的初始位置。</span><span class="sxs-lookup"><span data-stu-id="4baaf-122">The initial position of the window.</span></span>  
  
-   <span data-ttu-id="4baaf-123">窗口的初始大小，其中包括是否指定大小，或者是否应根据所确定的 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 内容大小确定大小。</span><span class="sxs-lookup"><span data-stu-id="4baaf-123">The initial size of the window, which includes whether the size is specified or should be determined from the determined size of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] content.</span></span>  
  
-   <span data-ttu-id="4baaf-124">父窗口。</span><span class="sxs-lookup"><span data-stu-id="4baaf-124">The parent window.</span></span>  
  
-   <span data-ttu-id="4baaf-125">要包括在窗口过程链中的 <xref:System.Windows.Interop.HwndSourceHook>。</span><span class="sxs-lookup"><span data-stu-id="4baaf-125">The <xref:System.Windows.Interop.HwndSourceHook> to include in the window procedure chain.</span></span> <span data-ttu-id="4baaf-126">如果在构造时指定了挂钩，则它将接收窗口的所有消息。</span><span class="sxs-lookup"><span data-stu-id="4baaf-126">If you specify a hook at construction time, it receives all messages for the window.</span></span> <span data-ttu-id="4baaf-127">创建窗口后，可以使用 <xref:System.Windows.Interop.HwndSource.AddHook%2A> 添加挂钩。</span><span class="sxs-lookup"><span data-stu-id="4baaf-127">You can use <xref:System.Windows.Interop.HwndSource.AddHook%2A> to add a hook after the window is created.</span></span>  
  
-   <span data-ttu-id="4baaf-128">透明度设置。</span><span class="sxs-lookup"><span data-stu-id="4baaf-128">The transparency settings.</span></span> <span data-ttu-id="4baaf-129">可以根据 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 内容的每像素透明度，将顶级窗口配置为与桌面上的其他窗口混合。</span><span class="sxs-lookup"><span data-stu-id="4baaf-129">A top-level window can be configured to blend with the other windows on the desktop according to the per-pixel transparency of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] content.</span></span> <span data-ttu-id="4baaf-130">若要启用此设置，请将 <xref:System.Windows.Interop.HwndSourceParameters> 中的 <xref:System.Windows.Interop.HwndSourceParameters.UsesPerPixelOpacity%2A> 属性设置为 "`true`"。</span><span class="sxs-lookup"><span data-stu-id="4baaf-130">To enable this, set the <xref:System.Windows.Interop.HwndSourceParameters.UsesPerPixelOpacity%2A> property in the <xref:System.Windows.Interop.HwndSourceParameters> to `true`.</span></span> <span data-ttu-id="4baaf-131">只能在构造时指定此属性，并且只能通过 <xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29> 构造函数签名来指定此属性，并且它会施加一些限制。</span><span class="sxs-lookup"><span data-stu-id="4baaf-131">This property can only be specified at construction time, and only through the <xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29> constructor signature, and it imposes several limitations.</span></span>  
  
 <span data-ttu-id="4baaf-132">填充 <xref:System.Windows.Interop.HwndSourceParameters> 结构后，将其传递给 <xref:System.Windows.Interop.HwndSource>的 <xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29> 构造函数。</span><span class="sxs-lookup"><span data-stu-id="4baaf-132">After you populate the <xref:System.Windows.Interop.HwndSourceParameters> structure, pass it to the <xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29> constructor for the <xref:System.Windows.Interop.HwndSource>.</span></span>  
  
 <span data-ttu-id="4baaf-133">**对象生存期**</span><span class="sxs-lookup"><span data-stu-id="4baaf-133">**Object Lifetime**</span></span>  
  
 <span data-ttu-id="4baaf-134"><xref:System.Windows.Interop.HwndSource> 是常规 [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] 对象，其生存期由垃圾回收器管理。</span><span class="sxs-lookup"><span data-stu-id="4baaf-134">An <xref:System.Windows.Interop.HwndSource> is a regular [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] object, and its lifetime is managed by the garbage collector.</span></span> <span data-ttu-id="4baaf-135">由于 <xref:System.Windows.Interop.HwndSource> 表示非托管资源，因此 <xref:System.Windows.Interop.HwndSource> 实现 <xref:System.IDisposable>。</span><span class="sxs-lookup"><span data-stu-id="4baaf-135">Because the <xref:System.Windows.Interop.HwndSource> represents an unmanaged resource, <xref:System.Windows.Interop.HwndSource> implements <xref:System.IDisposable>.</span></span> <span data-ttu-id="4baaf-136">如果从所有者线程调用，则同步调用 <xref:System.Windows.Interop.HwndSource.Dispose%2A> 会立即销毁 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 窗口。</span><span class="sxs-lookup"><span data-stu-id="4baaf-136">Synchronously calling <xref:System.Windows.Interop.HwndSource.Dispose%2A> immediately destroys the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] window if called from the owner thread.</span></span> <span data-ttu-id="4baaf-137">如果从另一个线程调用，则会以异步方式销毁 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 窗口。</span><span class="sxs-lookup"><span data-stu-id="4baaf-137">If called from another thread, the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] window is destroyed asynchronously.</span></span> <span data-ttu-id="4baaf-138">对于某些互操作方案，可能需要从互操作代码中显式调用 <xref:System.Windows.Interop.HwndSource.Dispose%2A>。</span><span class="sxs-lookup"><span data-stu-id="4baaf-138">Calling <xref:System.Windows.Interop.HwndSource.Dispose%2A> explicitly from the interoperating code might be necessary for certain interoperation scenarios.</span></span>  
  
 <span data-ttu-id="4baaf-139">**窗口过程**</span><span class="sxs-lookup"><span data-stu-id="4baaf-139">**Window Procedures**</span></span>  
  
 <span data-ttu-id="4baaf-140"><xref:System.Windows.Interop.HwndSource> 类实现其自己的窗口过程。</span><span class="sxs-lookup"><span data-stu-id="4baaf-140">The <xref:System.Windows.Interop.HwndSource> class implements its own window procedure.</span></span> <span data-ttu-id="4baaf-141">此窗口过程用于处理重要的窗口消息，如与布局、呈现和输入相关的消息。</span><span class="sxs-lookup"><span data-stu-id="4baaf-141">This window procedure is used to process important window messages, such as those related to layout, rendering, and input.</span></span> <span data-ttu-id="4baaf-142">不过，您也可以挂钩窗口过程以供自己使用。</span><span class="sxs-lookup"><span data-stu-id="4baaf-142">However, you can also hook the window procedure for your own use.</span></span> <span data-ttu-id="4baaf-143">您可以通过设置 "<xref:System.Windows.Interop.HwndSourceParameters.HwndSourceHook%2A?displayProperty=nameWithType>" 属性在构造过程中指定自己的挂钩，也可以在创建窗口后使用 <xref:System.Windows.Interop.HwndSource.AddHook%2A> 和 <xref:System.Windows.Interop.HwndSource.RemoveHook%2A> 来添加和删除挂钩。</span><span class="sxs-lookup"><span data-stu-id="4baaf-143">You can specify your own hook during construction by setting the <xref:System.Windows.Interop.HwndSourceParameters.HwndSourceHook%2A?displayProperty=nameWithType> property, or you can also use <xref:System.Windows.Interop.HwndSource.AddHook%2A> and <xref:System.Windows.Interop.HwndSource.RemoveHook%2A> to add and remove hooks after the window is created.</span></span> <span data-ttu-id="4baaf-144">挂钩按后进先出的顺序调用，这使得挂钩可以在内置处理之前执行。</span><span class="sxs-lookup"><span data-stu-id="4baaf-144">The hooks are called by last-in first-out order, which enables your hooks to execute before the built-in processing.</span></span> <span data-ttu-id="4baaf-145">实际挂钩由弱引用持有。</span><span class="sxs-lookup"><span data-stu-id="4baaf-145">The actual hooks are held by a weak reference.</span></span> <span data-ttu-id="4baaf-146">因此，请确保你管理挂钩委托的生存期。</span><span class="sxs-lookup"><span data-stu-id="4baaf-146">Therefore, make sure that you manage the lifetime of your hook delegate.</span></span>  
  
 <span data-ttu-id="4baaf-147">有关 <xref:System.Windows.Interop.HwndSource> 和其他互操作类的详细信息，请参阅[WPF 和 Win32 互操作](/dotnet/framework/wpf/advanced/wpf-and-win32-interoperation)。</span><span class="sxs-lookup"><span data-stu-id="4baaf-147">For more information about <xref:System.Windows.Interop.HwndSource> and other interoperation classes, see [WPF and Win32 Interoperation](/dotnet/framework/wpf/advanced/wpf-and-win32-interoperation).</span></span>  
  
 <span data-ttu-id="4baaf-148">请注意，<xref:System.Windows.Interop.HwndSource> 的构造函数如何采用类似于 [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] 函数（如[CreateWindowEx](https://go.microsoft.com/fwlink/?LinkID=98462)）参数的参数。</span><span class="sxs-lookup"><span data-stu-id="4baaf-148">Notice how the constructors for <xref:System.Windows.Interop.HwndSource> take parameters that resemble the parameters for [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] functions such as [CreateWindowEx](https://go.microsoft.com/fwlink/?LinkID=98462).</span></span>  
  
 <span data-ttu-id="4baaf-149">缩放转换不应应用于 <xref:System.Windows.Interop.HwndSource>的 <xref:System.Windows.Interop.HwndSource.RootVisual%2A>。</span><span class="sxs-lookup"><span data-stu-id="4baaf-149">Scale transformations should not be applied to the <xref:System.Windows.Interop.HwndSource.RootVisual%2A> of an <xref:System.Windows.Interop.HwndSource>.</span></span> <span data-ttu-id="4baaf-150">请参阅 <xref:System.Windows.Interop.HwndSource.RootVisual%2A>的备注。</span><span class="sxs-lookup"><span data-stu-id="4baaf-150">See Remarks for <xref:System.Windows.Interop.HwndSource.RootVisual%2A>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Interop.HwndHost" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4baaf-151">初始化 <see cref="T:System.Windows.Interop.HwndSource" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="4baaf-151">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSource" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="4baaf-152">此方法在 Internet 安全区域中不可用。</span><span class="sxs-lookup"><span data-stu-id="4baaf-152">This method is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HwndSource (System.Windows.Interop.HwndSourceParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Interop.HwndSourceParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.#ctor(System.Windows.Interop.HwndSourceParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameters As HwndSourceParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HwndSource(System::Windows::Interop::HwndSourceParameters parameters);" />
      <MemberSignature Language="F#" Value="new System.Windows.Interop.HwndSource : System.Windows.Interop.HwndSourceParameters -&gt; System.Windows.Interop.HwndSource" Usage="new System.Windows.Interop.HwndSource parameters" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parameters" Type="System.Windows.Interop.HwndSourceParameters" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="4baaf-153">包含创建窗口所需的参数的结构。</span><span class="sxs-lookup"><span data-stu-id="4baaf-153">A structure that contains the parameters that are required to create the window.</span></span></param>
        <summary><span data-ttu-id="4baaf-154">通过使用包含初始设置的结构初始化 <see cref="T:System.Windows.Interop.HwndSource" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="4baaf-154">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSource" /> class by using a structure that contains the initial settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="4baaf-155">此方法在 Internet 安全区域中不可用。</span><span class="sxs-lookup"><span data-stu-id="4baaf-155">This method is not available in the Internet security zone.</span></span>  
  
 <span data-ttu-id="4baaf-156">在某些情况下，此构造函数签名可能更为方便，因为默认结构包含一些适当的初始默认值。</span><span class="sxs-lookup"><span data-stu-id="4baaf-156">This constructor signature might be more convenient in certain situations, because the default structure contains some appropriate initial default values.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4baaf-157">如果使用此签名，请不要使用默认的 <xref:System.Windows.Interop.HwndSourceParameters> 构造函数来构造 `parameters` 值的 <xref:System.Windows.Interop.HwndSourceParameters> 结构。</span><span class="sxs-lookup"><span data-stu-id="4baaf-157">If you use this signature, do not use the default <xref:System.Windows.Interop.HwndSourceParameters> constructor to construct the <xref:System.Windows.Interop.HwndSourceParameters> structure for the `parameters` value.</span></span> <span data-ttu-id="4baaf-158">您必须使用可用于指定初始窗口名称的 <xref:System.Windows.Interop.HwndSourceParameters> 构造函数。</span><span class="sxs-lookup"><span data-stu-id="4baaf-158">You must use the <xref:System.Windows.Interop.HwndSourceParameters> constructor that enables you to specify an initial window name.</span></span> <span data-ttu-id="4baaf-159">如果使用默认的 <xref:System.Windows.Interop.HwndSourceParameters> 构造函数并使用它创建 <xref:System.Windows.Interop.HwndSource>，则 <xref:System.Windows.Interop.HwndSource> 不会显示，因为初始窗口名称是所表示的 HWND 的构造要求。</span><span class="sxs-lookup"><span data-stu-id="4baaf-159">If you use the default <xref:System.Windows.Interop.HwndSourceParameters> constructor and create an <xref:System.Windows.Interop.HwndSource> with it, that <xref:System.Windows.Interop.HwndSource> does not display because an initial window name is a construction requirement for the represented HWND.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HwndSource (int classStyle, int style, int exStyle, int x, int y, string name, IntPtr parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 classStyle, int32 style, int32 exStyle, int32 x, int32 y, string name, native int parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (classStyle As Integer, style As Integer, exStyle As Integer, x As Integer, y As Integer, name As String, parent As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HwndSource(int classStyle, int style, int exStyle, int x, int y, System::String ^ name, IntPtr parent);" />
      <MemberSignature Language="F#" Value="new System.Windows.Interop.HwndSource : int * int * int * int * int * string * nativeint -&gt; System.Windows.Interop.HwndSource" Usage="new System.Windows.Interop.HwndSource (classStyle, style, exStyle, x, y, name, parent)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="classStyle" Type="System.Int32" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="exStyle" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="parent" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="classStyle"><span data-ttu-id="4baaf-160">窗口的 [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] 类样式。</span><span class="sxs-lookup"><span data-stu-id="4baaf-160">The [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] class styles for the window.</span></span></param>
        <param name="style"><span data-ttu-id="4baaf-161">窗口的 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 样式。</span><span class="sxs-lookup"><span data-stu-id="4baaf-161">The [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] styles for the window.</span></span></param>
        <param name="exStyle"><span data-ttu-id="4baaf-162">窗口的扩展 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 样式。</span><span class="sxs-lookup"><span data-stu-id="4baaf-162">The extended [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] styles for the window.</span></span></param>
        <param name="x"><span data-ttu-id="4baaf-163">窗口左边缘的位置。</span><span class="sxs-lookup"><span data-stu-id="4baaf-163">The position of the window's left edge.</span></span></param>
        <param name="y"><span data-ttu-id="4baaf-164">窗口上边缘的位置。</span><span class="sxs-lookup"><span data-stu-id="4baaf-164">The position of the window's upper edge.</span></span></param>
        <param name="name"><span data-ttu-id="4baaf-165">窗口的名称。</span><span class="sxs-lookup"><span data-stu-id="4baaf-165">The name of the window.</span></span></param>
        <param name="parent"><span data-ttu-id="4baaf-166">窗口的父窗口的句柄。</span><span class="sxs-lookup"><span data-stu-id="4baaf-166">The handle of the window's parent window.</span></span></param>
        <summary><span data-ttu-id="4baaf-167">初始化具有指定类样式、样式、扩展样式、x-y 位置、名称和父窗口的 <see cref="T:System.Windows.Interop.HwndSource" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="4baaf-167">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSource" /> class with a specified class style, style, extended style, x-y position, name, and parent window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="4baaf-168">此方法在 Internet 安全区域中不可用。</span><span class="sxs-lookup"><span data-stu-id="4baaf-168">This method is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HwndSource (int classStyle, int style, int exStyle, int x, int y, int width, int height, string name, IntPtr parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 classStyle, int32 style, int32 exStyle, int32 x, int32 y, int32 width, int32 height, string name, native int parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (classStyle As Integer, style As Integer, exStyle As Integer, x As Integer, y As Integer, width As Integer, height As Integer, name As String, parent As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HwndSource(int classStyle, int style, int exStyle, int x, int y, int width, int height, System::String ^ name, IntPtr parent);" />
      <MemberSignature Language="F#" Value="new System.Windows.Interop.HwndSource : int * int * int * int * int * int * int * string * nativeint -&gt; System.Windows.Interop.HwndSource" Usage="new System.Windows.Interop.HwndSource (classStyle, style, exStyle, x, y, width, height, name, parent)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="classStyle" Type="System.Int32" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="exStyle" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="parent" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="classStyle"><span data-ttu-id="4baaf-169">窗口的 [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] 类样式。</span><span class="sxs-lookup"><span data-stu-id="4baaf-169">The [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] class styles for the window.</span></span></param>
        <param name="style"><span data-ttu-id="4baaf-170">窗口的 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 样式。</span><span class="sxs-lookup"><span data-stu-id="4baaf-170">The [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] styles for the window.</span></span></param>
        <param name="exStyle"><span data-ttu-id="4baaf-171">窗口的扩展 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 样式。</span><span class="sxs-lookup"><span data-stu-id="4baaf-171">The extended [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] styles for the window.</span></span></param>
        <param name="x"><span data-ttu-id="4baaf-172">窗口左边缘的位置。</span><span class="sxs-lookup"><span data-stu-id="4baaf-172">The position of the window's left edge.</span></span></param>
        <param name="y"><span data-ttu-id="4baaf-173">窗口上边缘的位置。</span><span class="sxs-lookup"><span data-stu-id="4baaf-173">The position of the window's upper edge.</span></span></param>
        <param name="width"><span data-ttu-id="4baaf-174">窗口的宽度。</span><span class="sxs-lookup"><span data-stu-id="4baaf-174">The width of the window.</span></span></param>
        <param name="height"><span data-ttu-id="4baaf-175">窗口的高度。</span><span class="sxs-lookup"><span data-stu-id="4baaf-175">The height of the window.</span></span></param>
        <param name="name"><span data-ttu-id="4baaf-176">窗口的名称。</span><span class="sxs-lookup"><span data-stu-id="4baaf-176">The name of the window.</span></span></param>
        <param name="parent"><span data-ttu-id="4baaf-177">窗口的父窗口的句柄。</span><span class="sxs-lookup"><span data-stu-id="4baaf-177">The handle of the window's parent window.</span></span></param>
        <summary><span data-ttu-id="4baaf-178">初始化具有指定类样式、样式、扩展样式、x-y 位置、宽度、高度、名称和父窗口的 <see cref="T:System.Windows.Interop.HwndSource" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="4baaf-178">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSource" /> class with a specified class style, style, extended style, x-y position, width, height, name, and parent window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="4baaf-179">此方法在 Internet 安全区域中不可用。</span><span class="sxs-lookup"><span data-stu-id="4baaf-179">This method is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HwndSource (int classStyle, int style, int exStyle, int x, int y, int width, int height, string name, IntPtr parent, bool adjustSizingForNonClientArea);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 classStyle, int32 style, int32 exStyle, int32 x, int32 y, int32 width, int32 height, string name, native int parent, bool adjustSizingForNonClientArea) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (classStyle As Integer, style As Integer, exStyle As Integer, x As Integer, y As Integer, width As Integer, height As Integer, name As String, parent As IntPtr, adjustSizingForNonClientArea As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HwndSource(int classStyle, int style, int exStyle, int x, int y, int width, int height, System::String ^ name, IntPtr parent, bool adjustSizingForNonClientArea);" />
      <MemberSignature Language="F#" Value="new System.Windows.Interop.HwndSource : int * int * int * int * int * int * int * string * nativeint * bool -&gt; System.Windows.Interop.HwndSource" Usage="new System.Windows.Interop.HwndSource (classStyle, style, exStyle, x, y, width, height, name, parent, adjustSizingForNonClientArea)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="classStyle" Type="System.Int32" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="exStyle" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="parent" Type="System.IntPtr" />
        <Parameter Name="adjustSizingForNonClientArea" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="classStyle"><span data-ttu-id="4baaf-180">窗口的 [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] 类样式。</span><span class="sxs-lookup"><span data-stu-id="4baaf-180">The [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] class styles for the window.</span></span></param>
        <param name="style"><span data-ttu-id="4baaf-181">窗口的 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 样式。</span><span class="sxs-lookup"><span data-stu-id="4baaf-181">The [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] styles for the window.</span></span></param>
        <param name="exStyle"><span data-ttu-id="4baaf-182">窗口的扩展 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 样式。</span><span class="sxs-lookup"><span data-stu-id="4baaf-182">The extended [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] styles for the window.</span></span></param>
        <param name="x"><span data-ttu-id="4baaf-183">窗口左边缘的位置。</span><span class="sxs-lookup"><span data-stu-id="4baaf-183">The position of the window's left edge.</span></span></param>
        <param name="y"><span data-ttu-id="4baaf-184">窗口上边缘的位置。</span><span class="sxs-lookup"><span data-stu-id="4baaf-184">The position of the window's upper edge.</span></span></param>
        <param name="width"><span data-ttu-id="4baaf-185">窗口的宽度。</span><span class="sxs-lookup"><span data-stu-id="4baaf-185">The width of the window.</span></span></param>
        <param name="height"><span data-ttu-id="4baaf-186">窗口的高度。</span><span class="sxs-lookup"><span data-stu-id="4baaf-186">The height of the window.</span></span></param>
        <param name="name"><span data-ttu-id="4baaf-187">窗口的名称。</span><span class="sxs-lookup"><span data-stu-id="4baaf-187">The name of the window.</span></span></param>
        <param name="parent"><span data-ttu-id="4baaf-188">窗口的父窗口的句柄。</span><span class="sxs-lookup"><span data-stu-id="4baaf-188">The handle of the window's parent window.</span></span></param>
        <param name="adjustSizingForNonClientArea"><span data-ttu-id="4baaf-189">如果布局管理器包含要调整大小的非工作区，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4baaf-189"><see langword="true" /> to have the layout manager include the non-client area for sizing; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="4baaf-190">初始化 <see cref="T:System.Windows.Interop.HwndSource" /> 类的新实例，此实例具有指定的类样式、样式、扩展样式、x-y 位置、宽度、高度、名称和父窗口，并且指示了窗口是否自动调整大小。</span><span class="sxs-lookup"><span data-stu-id="4baaf-190">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSource" /> class with a specified class style, style, extended style, x-y position, width, height, name, and parent window, and by specifying whether the window is autosized.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="4baaf-191">此方法在 Internet 安全区域中不可用。</span><span class="sxs-lookup"><span data-stu-id="4baaf-191">This method is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcquireHwndFocusInMenuMode">
      <MemberSignature Language="C#" Value="public bool AcquireHwndFocusInMenuMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcquireHwndFocusInMenuMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcquireHwndFocusInMenuMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcquireHwndFocusInMenuMode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AcquireHwndFocusInMenuMode : bool" Usage="System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4baaf-192">获取一个值，该值确定是否为此 <see cref="T:System.Windows.Interop.HwndSource" /> 获取包含窗口的 WPF 的 Win32 焦点。</span><span class="sxs-lookup"><span data-stu-id="4baaf-192">Gets the value that determines whether to acquire Win32 focus for the WPF containing window for this <see cref="T:System.Windows.Interop.HwndSource" />.</span></span></summary>
        <value><span data-ttu-id="4baaf-193">若要在用户与菜单交互时获取包含窗口的 WPF 的 Win32 焦点，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4baaf-193"><see langword="true" /> to acquire Win32 focus for the WPF containing window when the user interacts with menus; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4baaf-194">在通过设置 <xref:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode%2A> 参数创建 <xref:System.Windows.Interop.HwndSource> 时，将设置此值。</span><span class="sxs-lookup"><span data-stu-id="4baaf-194">This value is set when you create the <xref:System.Windows.Interop.HwndSource> by setting the <xref:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode%2A> parameter.</span></span>  
  
 <span data-ttu-id="4baaf-195">默认值由 <xref:System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode%2A> 属性确定。</span><span class="sxs-lookup"><span data-stu-id="4baaf-195">The default value is determined by the <xref:System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHook">
      <MemberSignature Language="C#" Value="public void AddHook (System.Windows.Interop.HwndSourceHook hook);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHook(class System.Windows.Interop.HwndSourceHook hook) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddHook (hook As HwndSourceHook)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHook(System::Windows::Interop::HwndSourceHook ^ hook);" />
      <MemberSignature Language="F#" Value="member this.AddHook : System.Windows.Interop.HwndSourceHook -&gt; unit" Usage="hwndSource.AddHook hook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hook" Type="System.Windows.Interop.HwndSourceHook" />
      </Parameters>
      <Docs>
        <param name="hook"><span data-ttu-id="4baaf-196">接收窗口消息的处理程序实现（基于 <see cref="T:System.Windows.Interop.HwndSourceHook" /> 委托）。</span><span class="sxs-lookup"><span data-stu-id="4baaf-196">The handler implementation (based on the <see cref="T:System.Windows.Interop.HwndSourceHook" /> delegate) that receives the window messages.</span></span></param>
        <summary><span data-ttu-id="4baaf-197">添加接收所有窗口消息的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4baaf-197">Adds an event handler that receives all window messages.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="4baaf-198">此方法在 Internet 安全区域中不可用。</span><span class="sxs-lookup"><span data-stu-id="4baaf-198">This method is not available in the Internet security zone.</span></span>  
  
 <span data-ttu-id="4baaf-199">到达 <xref:System.Windows.Interop.HwndSource> 的大多数 [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] 消息具有近似 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 等效项。</span><span class="sxs-lookup"><span data-stu-id="4baaf-199">Most [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] messages that reach the <xref:System.Windows.Interop.HwndSource> have an approximate [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] equivalent.</span></span> <span data-ttu-id="4baaf-200">您可以使用 <xref:System.Windows.Interop.HwndSource.AddHook%2A> 来处理消息没有 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 等效项的情况。</span><span class="sxs-lookup"><span data-stu-id="4baaf-200">You use <xref:System.Windows.Interop.HwndSource.AddHook%2A> to handle the cases where the message has no [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] equivalent.</span></span>  
  
 <span data-ttu-id="4baaf-201"><xref:System.Windows.Interop.HwndSourceHook> 委托类似于 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 主窗口过程的参数配置文件。</span><span class="sxs-lookup"><span data-stu-id="4baaf-201">The <xref:System.Windows.Interop.HwndSourceHook> delegate resembles the parameter profile of a [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] main window procedure.</span></span> <span data-ttu-id="4baaf-202">同时接收 <xref:System.Windows.Interop.HwndSource> 父窗口的主窗口过程的所有窗口消息都将转发到 <xref:System.Windows.Interop.HwndSourceHook> 委托。</span><span class="sxs-lookup"><span data-stu-id="4baaf-202">All window messages that the main window procedure of the <xref:System.Windows.Interop.HwndSource> parent window receives are also forwarded to the <xref:System.Windows.Interop.HwndSourceHook> delegates.</span></span>  
  
 <span data-ttu-id="4baaf-203">挂钩按其添加顺序进行调用。</span><span class="sxs-lookup"><span data-stu-id="4baaf-203">Hooks are called in the order that they were added.</span></span> <span data-ttu-id="4baaf-204">如果任何挂钩返回消息 `handled`=`true`，则不会为该消息调用位于调用顺序中的挂钩。</span><span class="sxs-lookup"><span data-stu-id="4baaf-204">If any hook returns `handled`=`true` for a message, the hooks after it in the call order are not called for that message.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.HwndSourceHook" />
        <altmember cref="M:System.Windows.Interop.HwndSource.RemoveHook(System.Windows.Interop.HwndSourceHook)" />
      </Docs>
    </Member>
    <Member MemberName="AutoResized">
      <MemberSignature Language="C#" Value="public event System.Windows.AutoResizedEventHandler AutoResized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.AutoResizedEventHandler AutoResized" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.HwndSource.AutoResized" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoResized As AutoResizedEventHandler " FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::AutoResizedEventHandler ^ AutoResized;" />
      <MemberSignature Language="F#" Value="member this.AutoResized : System.Windows.AutoResizedEventHandler " Usage="member this.AutoResized : System.Windows.AutoResizedEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event AutoResized As AutoResizedEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.AutoResizedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4baaf-205">当布局导致 <see cref="T:System.Windows.Interop.HwndSource" /> 自动调整大小时发生。</span><span class="sxs-lookup"><span data-stu-id="4baaf-205">Occurs when layout causes the <see cref="T:System.Windows.Interop.HwndSource" /> to automatically resize.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4baaf-206"><xref:System.Windows.Interop.HwndSource> 的本机行为是根据通过 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 布局系统报告的更改自动调整内容和窗口区域的大小。</span><span class="sxs-lookup"><span data-stu-id="4baaf-206">The native behavior of <xref:System.Windows.Interop.HwndSource> is to automatically resize content and the window region based on changes reported through the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] layout system.</span></span> <span data-ttu-id="4baaf-207">如果窗口当前已最小化或 <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> 设置为 <xref:System.Windows.SizeToContent.Manual>，则窗口不会调整大小。</span><span class="sxs-lookup"><span data-stu-id="4baaf-207">The window does not resize if it is currently minimized or if <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> is set to <xref:System.Windows.SizeToContent.Manual>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildKeyboardInputSinks">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Interop.IKeyboardInputSink&gt; ChildKeyboardInputSinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Interop.IKeyboardInputSink&gt; ChildKeyboardInputSinks" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.ChildKeyboardInputSinks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildKeyboardInputSinks As IEnumerable(Of IKeyboardInputSink)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Interop::IKeyboardInputSink ^&gt; ^ ChildKeyboardInputSinks { System::Collections::Generic::IEnumerable&lt;System::Windows::Interop::IKeyboardInputSink ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildKeyboardInputSinks : seq&lt;System.Windows.Interop.IKeyboardInputSink&gt;" Usage="System.Windows.Interop.HwndSource.ChildKeyboardInputSinks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Windows.Interop.HwndSource/&lt;get_ChildKeyboardInputSinks&gt;d__29))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Windows.Interop.HwndSource/&lt;get_ChildKeyboardInputSinks&gt;d__1))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6.1">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Windows.Interop.HwndSource/&lt;get_ChildKeyboardInputSinks&gt;d__24))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.8">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Windows.Interop.HwndSource/&lt;get_ChildKeyboardInputSinks&gt;d__31))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Interop.IKeyboardInputSink&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4baaf-208">获取一系列注册的输入接收器。</span><span class="sxs-lookup"><span data-stu-id="4baaf-208">Gets a sequence of registered input sinks.</span></span></summary>
        <value><span data-ttu-id="4baaf-209">键盘输入接收器的枚举。</span><span class="sxs-lookup"><span data-stu-id="4baaf-209">An enumeration of keyboard input sinks.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompositionTarget">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.HwndTarget CompositionTarget { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Interop.HwndTarget CompositionTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.CompositionTarget" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompositionTarget As HwndTarget" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Interop::HwndTarget ^ CompositionTarget { System::Windows::Interop::HwndTarget ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CompositionTarget : System.Windows.Interop.HwndTarget" Usage="System.Windows.Interop.HwndSource.CompositionTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.HwndTarget</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4baaf-210">获取所承载的窗口的可视化管理器。</span><span class="sxs-lookup"><span data-stu-id="4baaf-210">Gets the visual manager for the hosted window.</span></span></summary>
        <value><span data-ttu-id="4baaf-211">可视化管理器。</span><span class="sxs-lookup"><span data-stu-id="4baaf-211">The visual manager.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4baaf-212">重写 <xref:System.Windows.Interop.HwndSource.GetCompositionTargetCore%2A> 以便重写 <xref:System.Windows.Interop.HwndSource.CompositionTarget%2A> 返回的值。</span><span class="sxs-lookup"><span data-stu-id="4baaf-212">Override <xref:System.Windows.Interop.HwndSource.GetCompositionTargetCore%2A> in order to override the value that <xref:System.Windows.Interop.HwndSource.CompositionTarget%2A> returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHandleRef">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.HandleRef CreateHandleRef ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Runtime.InteropServices.HandleRef CreateHandleRef() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.CreateHandleRef" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateHandleRef () As HandleRef" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::InteropServices::HandleRef CreateHandleRef();" />
      <MemberSignature Language="F#" Value="member this.CreateHandleRef : unit -&gt; System.Runtime.InteropServices.HandleRef" Usage="hwndSource.CreateHandleRef " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.HandleRef</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4baaf-213">获取 <see cref="T:System.Windows.Interop.HwndSource" /> 的窗口句柄。</span><span class="sxs-lookup"><span data-stu-id="4baaf-213">Gets the window handle for the <see cref="T:System.Windows.Interop.HwndSource" />.</span></span> <span data-ttu-id="4baaf-214">此窗口句柄作为 <see cref="T:System.Runtime.InteropServices.HandleRef" /> 结构一部分打包。</span><span class="sxs-lookup"><span data-stu-id="4baaf-214">The window handle is packaged as part of a <see cref="T:System.Runtime.InteropServices.HandleRef" /> structure.</span></span></summary>
        <returns><span data-ttu-id="4baaf-215">包含此 <see cref="T:System.Windows.Interop.HwndSource" /> 的窗口句柄的结构。</span><span class="sxs-lookup"><span data-stu-id="4baaf-215">A structure that contains the window handle for this <see cref="T:System.Windows.Interop.HwndSource" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4baaf-216">您可以使用从 <xref:System.Windows.Interop.HwndSource.CreateHandleRef%2A> 获取的句柄从 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 代码引用 <xref:System.Windows.Interop.HwndSource>。</span><span class="sxs-lookup"><span data-stu-id="4baaf-216">You can use the handle that is obtained from <xref:System.Windows.Interop.HwndSource.CreateHandleRef%2A> to reference the <xref:System.Windows.Interop.HwndSource> from [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] code.</span></span> <span data-ttu-id="4baaf-217">使用消息处理和窗口行为等操作的句柄。</span><span class="sxs-lookup"><span data-stu-id="4baaf-217">Use the handle for operations such as message handling and window behavior.</span></span>  
  
 <span data-ttu-id="4baaf-218">若要仅获取句柄，请使用 <xref:System.Windows.Interop.HwndSource.Handle%2A>。</span><span class="sxs-lookup"><span data-stu-id="4baaf-218">To get just the handle, use <xref:System.Windows.Interop.HwndSource.Handle%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.HwndSource.Handle" />
      </Docs>
    </Member>
    <Member MemberName="DefaultAcquireHwndFocusInMenuMode">
      <MemberSignature Language="C#" Value="public static bool DefaultAcquireHwndFocusInMenuMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool DefaultAcquireHwndFocusInMenuMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultAcquireHwndFocusInMenuMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool DefaultAcquireHwndFocusInMenuMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultAcquireHwndFocusInMenuMode : bool with get, set" Usage="System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4baaf-219">获取或设置 <see cref="P:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode" /> 的新实例的默认 <see cref="T:System.Windows.Interop.HwndSource" /> 值。</span><span class="sxs-lookup"><span data-stu-id="4baaf-219">Gets or sets the default <see cref="P:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode" /> value for new instances of <see cref="T:System.Windows.Interop.HwndSource" />.</span></span></summary>
        <value><span data-ttu-id="4baaf-220">若要在用户与菜单交互时获取包含窗口的 WPF 的 Win32 焦点，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4baaf-220"><see langword="true" /> to acquire Win32 focus for the WPF containing window when the user interacts with menus; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="4baaf-221">默认为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="4baaf-221">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4baaf-222"><xref:System.Windows.Interop.HwndSource> 的新实例 <xref:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode%2A> 设置为此默认值，除非使用 <xref:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode%2A> 属性将其他值作为参数传递给特定实例的 <xref:System.Windows.Interop.HwndSource> 构造函数。</span><span class="sxs-lookup"><span data-stu-id="4baaf-222">New instances of <xref:System.Windows.Interop.HwndSource> have <xref:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode%2A> set to this default value, unless a different value is passed as a parameter to the <xref:System.Windows.Interop.HwndSource> constructor for a specific instance, by using the <xref:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="hwndSource.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4baaf-223">释放 <see cref="T:System.Windows.Interop.HwndSource" /> 使用的所有托管资源，并引发 <see cref="E:System.Windows.Interop.HwndSource.Disposed" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="4baaf-223">Releases all managed resources that are used by the <see cref="T:System.Windows.Interop.HwndSource" />, and raises the <see cref="E:System.Windows.Interop.HwndSource.Disposed" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="4baaf-224">此方法在 Internet 安全区域中不可用。</span><span class="sxs-lookup"><span data-stu-id="4baaf-224">This method is not available in the Internet security zone.</span></span>  
  
 <span data-ttu-id="4baaf-225"><xref:System.Windows.Interop.HwndSource.Dispose%2A> 为 HWND 启动相关的清除工作。</span><span class="sxs-lookup"><span data-stu-id="4baaf-225"><xref:System.Windows.Interop.HwndSource.Dispose%2A> initiates related cleanup work for the HWND.</span></span> <span data-ttu-id="4baaf-226">如果通过与主 UI 线程不同的线程调用 <xref:System.Windows.Interop.HwndSource.Dispose%2A>，则清除工作可能会延迟，直到可以将其发布到主 UI 线程。</span><span class="sxs-lookup"><span data-stu-id="4baaf-226">If <xref:System.Windows.Interop.HwndSource.Dispose%2A> is called through a thread that is different from the main UI thread, the cleanup work may be deferred until it can be posted to the main UI thread.</span></span>  
  
 <span data-ttu-id="4baaf-227">对于某些互操作方案，可能需要从互操作代码中显式调用 <xref:System.Windows.Interop.HwndSource.Dispose%2A>，因为某些互操作方案中的 <xref:System.Windows.Interop.HwndSource> 可能会在多个互操作边界内生成对它的多个引用。</span><span class="sxs-lookup"><span data-stu-id="4baaf-227">Calling <xref:System.Windows.Interop.HwndSource.Dispose%2A> explicitly from the interoperating code might be necessary for certain interoperation scenarios, because an <xref:System.Windows.Interop.HwndSource> in some interoperation scenarios can generate several references to it across the interoperation boundaries that might prevent timely garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.HwndSource.IsDisposed" />
      </Docs>
    </Member>
    <Member MemberName="Disposed">
      <MemberSignature Language="C#" Value="public event EventHandler Disposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Disposed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.HwndSource.Disposed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Disposed As EventHandler " FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Disposed;" />
      <MemberSignature Language="F#" Value="member this.Disposed : EventHandler " Usage="member this.Disposed : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event Disposed As EventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4baaf-228">对此对象调用 <see cref="M:System.Windows.Interop.HwndSource.Dispose" /> 方法时发生。</span><span class="sxs-lookup"><span data-stu-id="4baaf-228">Occurs when the <see cref="M:System.Windows.Interop.HwndSource.Dispose" /> method is called on this object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4baaf-229"><xref:System.Windows.Interop.HwndSource.Disposed> 事件在 <xref:System.Windows.Interop.HwndSource>释放任何资源之前引发。</span><span class="sxs-lookup"><span data-stu-id="4baaf-229">The <xref:System.Windows.Interop.HwndSource.Disposed> event is raised before any resources are released by the <xref:System.Windows.Interop.HwndSource>.</span></span> <span data-ttu-id="4baaf-230"><xref:System.Windows.Interop.HwndSource.Disposed> 事件指示引发事件的对象将对其删除所有引用。</span><span class="sxs-lookup"><span data-stu-id="4baaf-230">The <xref:System.Windows.Interop.HwndSource.Disposed> event indicates that the object that raises the event is about to have all references to it removed.</span></span>  
  
 <span data-ttu-id="4baaf-231">使用 <xref:System.Windows.Interop.HwndSource.Disposed> 和 <xref:System.Windows.Interop.HwndSource.IsDisposed%2A> 属性可避免两次调用 <xref:System.Windows.Interop.HwndSource.Dispose%2A> （这会引发异常）。</span><span class="sxs-lookup"><span data-stu-id="4baaf-231">Use <xref:System.Windows.Interop.HwndSource.Disposed> and the <xref:System.Windows.Interop.HwndSource.IsDisposed%2A> property to avoid calling <xref:System.Windows.Interop.HwndSource.Dispose%2A> twice (which raises an exception).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.HwndSource.Dispose" />
      </Docs>
    </Member>
    <Member MemberName="DpiChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.HwndDpiChangedEventHandler DpiChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.HwndDpiChangedEventHandler DpiChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.HwndSource.DpiChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DpiChanged As HwndDpiChangedEventHandler " FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::HwndDpiChangedEventHandler ^ DpiChanged;" />
      <MemberSignature Language="F#" Value="member this.DpiChanged : System.Windows.HwndDpiChangedEventHandler " Usage="member this.DpiChanged : System.Windows.HwndDpiChangedEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event DpiChanged As HwndDpiChangedEventHandler " FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.HwndDpiChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4baaf-232">已更改此 Hwnd 的监视器的 DPI 或 Hwnd 移动到具有不同 DPI 的监视器时发生。</span><span class="sxs-lookup"><span data-stu-id="4baaf-232">Occurs when the DPI of the monitor of this Hwnd has changed, or the Hwnd is moved to a monitor with a different DPI.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromHwnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Interop.HwndSource FromHwnd (IntPtr hwnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Interop.HwndSource FromHwnd(native int hwnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.FromHwnd(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHwnd (hwnd As IntPtr) As HwndSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Interop::HwndSource ^ FromHwnd(IntPtr hwnd);" />
      <MemberSignature Language="F#" Value="static member FromHwnd : nativeint -&gt; System.Windows.Interop.HwndSource" Usage="System.Windows.Interop.HwndSource.FromHwnd hwnd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.HwndSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwnd" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hwnd"><span data-ttu-id="4baaf-233">提供的窗口句柄。</span><span class="sxs-lookup"><span data-stu-id="4baaf-233">The provided window handle.</span></span></param>
        <summary><span data-ttu-id="4baaf-234">返回指定窗口的 <see cref="T:System.Windows.Interop.HwndSource" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="4baaf-234">Returns the <see cref="T:System.Windows.Interop.HwndSource" /> object of the specified window.</span></span></summary>
        <returns><span data-ttu-id="4baaf-235"><paramref name="hwnd" /> 窗口句柄指定的窗口的 <see cref="T:System.Windows.Interop.HwndSource" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="4baaf-235">The <see cref="T:System.Windows.Interop.HwndSource" /> object for the window that is specified by the <paramref name="hwnd" /> window handle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="4baaf-236">此方法在 Internet 安全区域中不可用，或者通常用于部分信任。</span><span class="sxs-lookup"><span data-stu-id="4baaf-236">This method is not available in the Internet security zone, or for partial trust in general.</span></span>  
  
 <span data-ttu-id="4baaf-237">您可以使用此方法为不是显式互操作窗口的窗口返回 <xref:System.Windows.Interop.HwndSource>。</span><span class="sxs-lookup"><span data-stu-id="4baaf-237">You can use this method to return an <xref:System.Windows.Interop.HwndSource> for a window that is not explicitly an interoperation window.</span></span> <span data-ttu-id="4baaf-238">此过程的过程如下：</span><span class="sxs-lookup"><span data-stu-id="4baaf-238">The procedure for this is:</span></span>  
  
1.  <span data-ttu-id="4baaf-239">创建 <xref:System.Windows.Interop.WindowInteropHelper> 实例（提供 main <xref:System.Windows.Window> 作为构造函数参数）。</span><span class="sxs-lookup"><span data-stu-id="4baaf-239">Create a <xref:System.Windows.Interop.WindowInteropHelper> instance (providing the main <xref:System.Windows.Window> as a constructor parameter).</span></span>  
  
2.  <span data-ttu-id="4baaf-240">从该 <xref:System.Windows.Interop.WindowInteropHelper> 实例获取 <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="4baaf-240">Get the value of the <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> property from that <xref:System.Windows.Interop.WindowInteropHelper> instance.</span></span>  
  
3.  <span data-ttu-id="4baaf-241">将该 HWND 值作为参数传递给 <xref:System.Windows.Interop.HwndSource.FromHwnd%2A>。</span><span class="sxs-lookup"><span data-stu-id="4baaf-241">Pass that HWND value as a parameter to <xref:System.Windows.Interop.HwndSource.FromHwnd%2A>.</span></span>  
  
 <span data-ttu-id="4baaf-242">如果要将常规 <xref:System.Windows.Interop.HwndSource.AddHook%2A> 消息处理添加到窗口，此方法会很有用。</span><span class="sxs-lookup"><span data-stu-id="4baaf-242">This technique can be useful if you then want to add general <xref:System.Windows.Interop.HwndSource.AddHook%2A> message processing to the window.</span></span> <span data-ttu-id="4baaf-243">但是，无论何时创建 <xref:System.Windows.Interop.HwndSource>，你还会负责销毁它。</span><span class="sxs-lookup"><span data-stu-id="4baaf-243">However, whenever you create an <xref:System.Windows.Interop.HwndSource>, you are also responsible for destroying it.</span></span> <span data-ttu-id="4baaf-244">即使释放应用程序 <xref:System.Windows.Interop.HwndSource> 的 <xref:System.Windows.Application> 对象也是如此。</span><span class="sxs-lookup"><span data-stu-id="4baaf-244">This is true even if the <xref:System.Windows.Application> object for an application <xref:System.Windows.Interop.HwndSource> is disposed.</span></span> <span data-ttu-id="4baaf-245">有关详细信息，请参阅 <xref:System.Windows.Interop.HwndSource>上的 "备注"。</span><span class="sxs-lookup"><span data-stu-id="4baaf-245">For more information, see Remarks on <xref:System.Windows.Interop.HwndSource>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.WindowInteropHelper" />
      </Docs>
    </Member>
    <Member MemberName="GetCompositionTargetCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.CompositionTarget GetCompositionTargetCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.CompositionTarget GetCompositionTargetCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.GetCompositionTargetCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetCompositionTargetCore () As CompositionTarget" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::CompositionTarget ^ GetCompositionTargetCore();" />
      <MemberSignature Language="F#" Value="override this.GetCompositionTargetCore : unit -&gt; System.Windows.Media.CompositionTarget" Usage="hwndSource.GetCompositionTargetCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CompositionTarget</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4baaf-246">获取窗口的可视化目标。</span><span class="sxs-lookup"><span data-stu-id="4baaf-246">Gets the visual target of the window.</span></span></summary>
        <returns><span data-ttu-id="4baaf-247">返回窗口的可视化目标。</span><span class="sxs-lookup"><span data-stu-id="4baaf-247">Returns the visual target of the window.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4baaf-248">默认实现返回与 <xref:System.Windows.Interop.HwndSource.CompositionTarget%2A>相同的结果。</span><span class="sxs-lookup"><span data-stu-id="4baaf-248">The default implementation returns the same result as <xref:System.Windows.Interop.HwndSource.CompositionTarget%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="4baaf-249">实现此方法以返回特定于类型的视觉对象。</span><span class="sxs-lookup"><span data-stu-id="4baaf-249">Implement this method to return a type-specific visual target.</span></span> <span data-ttu-id="4baaf-250"><see cref="T:System.Windows.Interop.HwndSource" /> 实现此方法以返回 <see cref="T:System.Windows.Interop.HwndTarget" />。</span><span class="sxs-lookup"><span data-stu-id="4baaf-250"><see cref="T:System.Windows.Interop.HwndSource" /> implements this method to return <see cref="T:System.Windows.Interop.HwndTarget" />.</span></span></para></block>
        <altmember cref="T:System.Windows.Media.CompositionTarget" />
        <altmember cref="P:System.Windows.Interop.HwndSource.CompositionTarget" />
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.Windows.Interop.HwndSource.Handle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Interop.IWin32Window.Handle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4baaf-251">获取此 <see cref="T:System.Windows.Interop.HwndSource" /> 的窗口句柄。</span><span class="sxs-lookup"><span data-stu-id="4baaf-251">Gets the window handle for this <see cref="T:System.Windows.Interop.HwndSource" />.</span></span></summary>
        <value><span data-ttu-id="4baaf-252">窗口句柄。</span><span class="sxs-lookup"><span data-stu-id="4baaf-252">The window handle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="4baaf-253">此属性在 Internet 安全区域中不可用。</span><span class="sxs-lookup"><span data-stu-id="4baaf-253">This property is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasFocusWithinCore">
      <MemberSignature Language="C#" Value="protected virtual bool HasFocusWithinCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool HasFocusWithinCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.HasFocusWithinCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HasFocusWithinCore () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool HasFocusWithinCore();" />
      <MemberSignature Language="F#" Value="abstract member HasFocusWithinCore : unit -&gt; bool&#xA;override this.HasFocusWithinCore : unit -&gt; bool" Usage="hwndSource.HasFocusWithinCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4baaf-254">获取一个值，该值指示接收器或其所包含的组件之一是否具有焦点。</span><span class="sxs-lookup"><span data-stu-id="4baaf-254">Gets a value that indicates whether the sink or one of its contained components has focus.</span></span></summary>
        <returns><span data-ttu-id="4baaf-255">如果接收器或其所包含的组件之一具有焦点，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4baaf-255"><see langword="true" /> if the sink or one of its contained components has focus; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin" />
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="public override bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDisposed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDisposed : bool" Usage="System.Windows.Interop.HwndSource.IsDisposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4baaf-256">获取一个值，指示是否已对此 <see cref="M:System.Windows.Interop.HwndSource.Dispose" /> 调用 <see cref="T:System.Windows.Interop.HwndSource" />。</span><span class="sxs-lookup"><span data-stu-id="4baaf-256">Gets a value that indicates whether <see cref="M:System.Windows.Interop.HwndSource.Dispose" /> has been called on this <see cref="T:System.Windows.Interop.HwndSource" />.</span></span></summary>
        <value><span data-ttu-id="4baaf-257">如果已对该对象调用了 <see cref="M:System.Windows.Interop.HwndSource.Dispose" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4baaf-257"><see langword="true" /> if the object has had <see cref="M:System.Windows.Interop.HwndSource.Dispose" /> called on it; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4baaf-258"><xref:System.Windows.Interop.HwndSource.Dispose%2A> 为 HWND 启动相关的清除工作。</span><span class="sxs-lookup"><span data-stu-id="4baaf-258"><xref:System.Windows.Interop.HwndSource.Dispose%2A> initiates related cleanup work for the HWND.</span></span> <span data-ttu-id="4baaf-259">如果通过与主 UI 线程不同的线程调用 <xref:System.Windows.Interop.HwndSource.Dispose%2A>，则清除工作可能会延迟，直到可以将其发布到主 UI 线程。</span><span class="sxs-lookup"><span data-stu-id="4baaf-259">If <xref:System.Windows.Interop.HwndSource.Dispose%2A> is called through a thread that is different from the main UI thread, the cleanup work may be deferred until it can be posted to the main UI thread.</span></span> <span data-ttu-id="4baaf-260">如果调用 <xref:System.Windows.Interop.HwndSource.Dispose%2A>，将引发 <xref:System.Windows.Interop.HwndSource.Disposed> 事件，<xref:System.Windows.Interop.HwndSource.IsDisposed%2A> 的值将变为 `false`。</span><span class="sxs-lookup"><span data-stu-id="4baaf-260">The <xref:System.Windows.Interop.HwndSource.Disposed> event is raised and the value of <xref:System.Windows.Interop.HwndSource.IsDisposed%2A> becomes `false` as soon as <xref:System.Windows.Interop.HwndSource.Dispose%2A> is called.</span></span> <span data-ttu-id="4baaf-261">在此期间，如果再次调用 <xref:System.Windows.Interop.HwndSource.Dispose%2A>，<xref:System.Windows.Interop.HwndSource.Dispose%2A> 会引发异常。</span><span class="sxs-lookup"><span data-stu-id="4baaf-261">During this time, if you call <xref:System.Windows.Interop.HwndSource.Dispose%2A> again, <xref:System.Windows.Interop.HwndSource.Dispose%2A> raises an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.HwndSource.Dispose" />
      </Docs>
    </Member>
    <Member MemberName="KeyboardInputSiteCore">
      <MemberSignature Language="C#" Value="protected System.Windows.Interop.IKeyboardInputSite KeyboardInputSiteCore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Interop.IKeyboardInputSite KeyboardInputSiteCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.KeyboardInputSiteCore" />
      <MemberSignature Language="VB.NET" Value="Protected Property KeyboardInputSiteCore As IKeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Interop::IKeyboardInputSite ^ KeyboardInputSiteCore { System::Windows::Interop::IKeyboardInputSite ^ get(); void set(System::Windows::Interop::IKeyboardInputSite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.KeyboardInputSiteCore : System.Windows.Interop.IKeyboardInputSite with get, set" Usage="System.Windows.Interop.HwndSource.KeyboardInputSiteCore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4baaf-262">获取或设置对组件容器的 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 接口的引用。</span><span class="sxs-lookup"><span data-stu-id="4baaf-262">Gets or sets a reference to the component's container's <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> interface.</span></span></summary>
        <value><span data-ttu-id="4baaf-263">对容器的 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 接口的引用；或者，如果未分配站点，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4baaf-263">A reference to the container's <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> interface; or <see langword="null" /> if no site is assigned.</span></span> <span data-ttu-id="4baaf-264">默认为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4baaf-264">The default is <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      </Docs>
    </Member>
    <Member MemberName="OnDpiChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDpiChanged (System.Windows.HwndDpiChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDpiChanged(class System.Windows.HwndDpiChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.OnDpiChanged(System.Windows.HwndDpiChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDpiChanged (e As HwndDpiChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDpiChanged(System::Windows::HwndDpiChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDpiChanged : System.Windows.HwndDpiChangedEventArgs -&gt; unit&#xA;override this.OnDpiChanged : System.Windows.HwndDpiChangedEventArgs -&gt; unit" Usage="hwndSource.OnDpiChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.HwndDpiChangedEventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="4baaf-265">事件参数</span><span class="sxs-lookup"><span data-stu-id="4baaf-265">The event arguments</span></span></param>
        <summary><span data-ttu-id="4baaf-266">在窗口的 DPI 即将变化时进行调用。</span><span class="sxs-lookup"><span data-stu-id="4baaf-266">Called when the DPI is going to change for the window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4baaf-267">如果用户处理此事件，则 WPF 不会缩放任何视觉对象。</span><span class="sxs-lookup"><span data-stu-id="4baaf-267">If the user handles this event,         WPF does not scale any visuals.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4baaf-268">此方法访问关键数据 <xref:System.Windows.Interop.HwndTarget>。</span><span class="sxs-lookup"><span data-stu-id="4baaf-268">This method accesses critical data <xref:System.Windows.Interop.HwndTarget>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMnemonicCore">
      <MemberSignature Language="C#" Value="protected virtual bool OnMnemonicCore (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnMnemonicCore(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnMnemonicCore (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnMnemonicCore(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="abstract member OnMnemonicCore : MSG * System.Windows.Input.ModifierKeys -&gt; bool&#xA;override this.OnMnemonicCore : MSG * System.Windows.Input.ModifierKeys -&gt; bool" Usage="hwndSource.OnMnemonicCore (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" Index="1" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="4baaf-269">助记键和关联数据的消息。</span><span class="sxs-lookup"><span data-stu-id="4baaf-269">The message for the mnemonic and associated data.</span></span></param>
        <param name="modifiers"><span data-ttu-id="4baaf-270">修改键。</span><span class="sxs-lookup"><span data-stu-id="4baaf-270">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="4baaf-271">调用此接收器的助记键（访问键）之一时调用。</span><span class="sxs-lookup"><span data-stu-id="4baaf-271">Called when one of the mnemonics (access keys) for this sink is invoked.</span></span></summary>
        <returns><span data-ttu-id="4baaf-272">如果消息已处理，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4baaf-272"><see langword="true" /> if the message was handled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4baaf-273"><paramref name="msg" /> 不是 WM_KEYDOWN、WM_SYSKEYDOWN、WM_CHAR 或 WM_DEADCHAR。</span><span class="sxs-lookup"><span data-stu-id="4baaf-273"><paramref name="msg" /> is not WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, or WM_DEADCHAR.</span></span></exception>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterKeyboardInputSinkCore">
      <MemberSignature Language="C#" Value="protected System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSinkCore (System.Windows.Interop.IKeyboardInputSink sink);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSinkCore(class System.Windows.Interop.IKeyboardInputSink sink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.RegisterKeyboardInputSinkCore(System.Windows.Interop.IKeyboardInputSink)" />
      <MemberSignature Language="VB.NET" Value="Protected Function RegisterKeyboardInputSinkCore (sink As IKeyboardInputSink) As IKeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Interop::IKeyboardInputSite ^ RegisterKeyboardInputSinkCore(System::Windows::Interop::IKeyboardInputSink ^ sink);" />
      <MemberSignature Language="F#" Value="member this.RegisterKeyboardInputSinkCore : System.Windows.Interop.IKeyboardInputSink -&gt; System.Windows.Interop.IKeyboardInputSite" Usage="hwndSource.RegisterKeyboardInputSinkCore sink" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sink" Type="System.Windows.Interop.IKeyboardInputSink" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sink"><span data-ttu-id="4baaf-274">所包含组件的 <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> 接收器。</span><span class="sxs-lookup"><span data-stu-id="4baaf-274">The <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> sink of the contained component.</span></span></param>
        <summary><span data-ttu-id="4baaf-275">注册所包含组件的 <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> 接口。</span><span class="sxs-lookup"><span data-stu-id="4baaf-275">Registers the <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> interface of a contained component.</span></span></summary>
        <returns><span data-ttu-id="4baaf-276">所包含组件的 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 站点。</span><span class="sxs-lookup"><span data-stu-id="4baaf-276">The <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> site of the contained component.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveHook">
      <MemberSignature Language="C#" Value="public void RemoveHook (System.Windows.Interop.HwndSourceHook hook);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveHook(class System.Windows.Interop.HwndSourceHook hook) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.RemoveHook(System.Windows.Interop.HwndSourceHook)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveHook (hook As HwndSourceHook)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveHook(System::Windows::Interop::HwndSourceHook ^ hook);" />
      <MemberSignature Language="F#" Value="member this.RemoveHook : System.Windows.Interop.HwndSourceHook -&gt; unit" Usage="hwndSource.RemoveHook hook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hook" Type="System.Windows.Interop.HwndSourceHook" />
      </Parameters>
      <Docs>
        <param name="hook"><span data-ttu-id="4baaf-277">要移除的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4baaf-277">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="4baaf-278">移除 <see cref="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)" /> 已添加的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4baaf-278">Removes the event handlers that were added by <see cref="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="4baaf-279">此方法在 Internet 安全区域中不可用。</span><span class="sxs-lookup"><span data-stu-id="4baaf-279">This method is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)" />
        <altmember cref="T:System.Windows.Interop.HwndSourceHook" />
      </Docs>
    </Member>
    <Member MemberName="RestoreFocusMode">
      <MemberSignature Language="C#" Value="public System.Windows.Input.RestoreFocusMode RestoreFocusMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.RestoreFocusMode RestoreFocusMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.RestoreFocusMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RestoreFocusMode As RestoreFocusMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::RestoreFocusMode RestoreFocusMode { System::Windows::Input::RestoreFocusMode get(); };" />
      <MemberSignature Language="F#" Value="member this.RestoreFocusMode : System.Windows.Input.RestoreFocusMode" Usage="System.Windows.Interop.HwndSource.RestoreFocusMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RestoreFocusMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4baaf-280">获取窗口的 <see cref="T:System.Windows.Input.RestoreFocusMode" />。</span><span class="sxs-lookup"><span data-stu-id="4baaf-280">Gets the <see cref="T:System.Windows.Input.RestoreFocusMode" /> for the window.</span></span></summary>
        <value><span data-ttu-id="4baaf-281">窗口的 <see cref="T:System.Windows.Input.RestoreFocusMode" />。</span><span class="sxs-lookup"><span data-stu-id="4baaf-281">The <see cref="T:System.Windows.Input.RestoreFocusMode" /> for the window.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4baaf-282">仅可通过使用 <xref:System.Windows.Interop.HwndSourceParameters.RestoreFocusMode%2A?displayProperty=nameWithType> 属性在 <xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29?displayProperty=nameWithType> 构造函数中设置此属性。</span><span class="sxs-lookup"><span data-stu-id="4baaf-282">This property can be set only in the <xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29?displayProperty=nameWithType> constructor by using the <xref:System.Windows.Interop.HwndSourceParameters.RestoreFocusMode%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootVisual">
      <MemberSignature Language="C#" Value="public override System.Windows.Media.Visual RootVisual { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Visual RootVisual" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.RootVisual" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property RootVisual As Visual" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Media::Visual ^ RootVisual { System::Windows::Media::Visual ^ get(); void set(System::Windows::Media::Visual ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RootVisual : System.Windows.Media.Visual with get, set" Usage="System.Windows.Interop.HwndSource.RootVisual" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4baaf-283">获取或设置窗口的 <see cref="P:System.Windows.Media.CompositionTarget.RootVisual" />。</span><span class="sxs-lookup"><span data-stu-id="4baaf-283">Gets or sets the <see cref="P:System.Windows.Media.CompositionTarget.RootVisual" /> of the window.</span></span></summary>
        <value><span data-ttu-id="4baaf-284">窗口的根可视化对象。</span><span class="sxs-lookup"><span data-stu-id="4baaf-284">The root visual object of the window.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4baaf-285">使用此属性将 <xref:System.Windows.Controls.Page> 或另一个根视觉对象连接到 <xref:System.Windows.Interop.HwndSource>。</span><span class="sxs-lookup"><span data-stu-id="4baaf-285">Use this property to connect a <xref:System.Windows.Controls.Page> or another root visual to the <xref:System.Windows.Interop.HwndSource>.</span></span>  
  
 <span data-ttu-id="4baaf-286">缩放转换不应应用于 <xref:System.Windows.Interop.HwndSource> 的 <xref:System.Windows.Interop.HwndSource.RootVisual%2A>，因为这样可以禁用 <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> 行为。</span><span class="sxs-lookup"><span data-stu-id="4baaf-286">Scale transformations should not be applied to the <xref:System.Windows.Interop.HwndSource.RootVisual%2A> of an <xref:System.Windows.Interop.HwndSource> because this can disable <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> behavior.</span></span> <span data-ttu-id="4baaf-287">内容将会缩放，但封闭窗口将不会。</span><span class="sxs-lookup"><span data-stu-id="4baaf-287">The content will scale, but the enclosing window will not.</span></span> <span data-ttu-id="4baaf-288">将转换应用于作为 <xref:System.Windows.Interop.HwndSource.RootVisual%2A>的子元素的对象，而不是将转换应用于 <xref:System.Windows.Interop.HwndSource.RootVisual%2A>的对象。</span><span class="sxs-lookup"><span data-stu-id="4baaf-288">Instead of applying the transformation to the object that is the <xref:System.Windows.Interop.HwndSource.RootVisual%2A>, apply the transformation to an object that is a child element of the <xref:System.Windows.Interop.HwndSource.RootVisual%2A>.</span></span> <span data-ttu-id="4baaf-289">你可能需要将额外的封闭元素添加到 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 内容（如面板），以便提供可缩放的对象。</span><span class="sxs-lookup"><span data-stu-id="4baaf-289">You might need to add an extra enclosing element to the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] content, such as a panel, in order to provide a scaleable object.</span></span>  
  
 <span data-ttu-id="4baaf-290">可以将 <xref:System.Windows.Window> 添加为根视觉对象，但仅作为顶级窗口（具有 WS_OVERLAPPED），而不是作为子窗口。</span><span class="sxs-lookup"><span data-stu-id="4baaf-290">You can add a <xref:System.Windows.Window> as the root visual, but only as a top-level window (with WS_OVERLAPPED), not as a child window.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.HwndTarget.RootVisual" />
      </Docs>
    </Member>
    <Member MemberName="SizeToContent">
      <MemberSignature Language="C#" Value="public System.Windows.SizeToContent SizeToContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.SizeToContent SizeToContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.SizeToContent" />
      <MemberSignature Language="VB.NET" Value="Public Property SizeToContent As SizeToContent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::SizeToContent SizeToContent { System::Windows::SizeToContent get(); void set(System::Windows::SizeToContent value); };" />
      <MemberSignature Language="F#" Value="member this.SizeToContent : System.Windows.SizeToContent with get, set" Usage="System.Windows.Interop.HwndSource.SizeToContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.SizeToContent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4baaf-291">获取或设置窗口是否根据其内容调整大小以及如何调整大小。</span><span class="sxs-lookup"><span data-stu-id="4baaf-291">Get or sets whether and how the window is sized to its content.</span></span></summary>
        <value><span data-ttu-id="4baaf-292">枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="4baaf-292">One of the enumeration values.</span></span> <span data-ttu-id="4baaf-293">默认值为 <see cref="F:System.Windows.SizeToContent.Manual" />，它指定窗口不会根据内容调整大小。</span><span class="sxs-lookup"><span data-stu-id="4baaf-293">The default value is <see cref="F:System.Windows.SizeToContent.Manual" />, which specifies that the window is not sized to its content.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4baaf-294">如果应用程序公开此功能，则最终用户可以通过应用程序 UI 间接设置此属性。</span><span class="sxs-lookup"><span data-stu-id="4baaf-294">End users might indirectly set this property through application UI, if that functionality is exposed by the application.</span></span>  
  
 <span data-ttu-id="4baaf-295">缩放转换不应应用于 <xref:System.Windows.Interop.HwndSource>的 <xref:System.Windows.Interop.HwndSource.RootVisual%2A>，因为这样可以禁用 <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> 行为。</span><span class="sxs-lookup"><span data-stu-id="4baaf-295">Scale transformations should not be applied to the <xref:System.Windows.Interop.HwndSource.RootVisual%2A> of an <xref:System.Windows.Interop.HwndSource>, because this can disable <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> behavior.</span></span> <span data-ttu-id="4baaf-296">请参阅 <xref:System.Windows.Interop.HwndSource.RootVisual%2A>的备注。</span><span class="sxs-lookup"><span data-stu-id="4baaf-296">See Remarks for <xref:System.Windows.Interop.HwndSource.RootVisual%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.SizeToContent" />
      </Docs>
    </Member>
    <Member MemberName="SizeToContentChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SizeToContentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SizeToContentChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.HwndSource.SizeToContentChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SizeToContentChanged As EventHandler " FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SizeToContentChanged;" />
      <MemberSignature Language="F#" Value="member this.SizeToContentChanged : EventHandler " Usage="member this.SizeToContentChanged : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event SizeToContentChanged As EventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4baaf-297">当 <see cref="P:System.Windows.Interop.HwndSource.SizeToContent" /> 属性的值更改时发生。</span><span class="sxs-lookup"><span data-stu-id="4baaf-297">Occurs when the value of the <see cref="P:System.Windows.Interop.HwndSource.SizeToContent" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4baaf-298">仅当用户交互导致更改时才引发 <xref:System.Windows.Interop.HwndSource.SizeToContentChanged> 事件。</span><span class="sxs-lookup"><span data-stu-id="4baaf-298">The <xref:System.Windows.Interop.HwndSource.SizeToContentChanged> event is only raised when user interaction causes the change.</span></span> <span data-ttu-id="4baaf-299">如果在代码中设置 <xref:System.Windows.Window.SizeToContent%2A>，则不会引发 <xref:System.Windows.Interop.HwndSource.SizeToContentChanged> 事件。</span><span class="sxs-lookup"><span data-stu-id="4baaf-299">If you set <xref:System.Windows.Window.SizeToContent%2A> in code, the <xref:System.Windows.Interop.HwndSource.SizeToContentChanged> event is not raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Interop.HwndSource.AutoResized" />
        <altmember cref="P:System.Windows.Interop.HwndSource.SizeToContent" />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.HasFocusWithin">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.HasFocusWithin ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.HasFocusWithin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Function HasFocusWithin () As Boolean Implements IKeyboardInputSink.HasFocusWithin" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.HasFocusWithin() = System::Windows::Interop::IKeyboardInputSink::HasFocusWithin;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Interop.IKeyboardInputSink.HasFocusWithin : unit -&gt; bool&#xA;override this.System.Windows.Interop.IKeyboardInputSink.HasFocusWithin : unit -&gt; bool" Usage="hwndSource.System.Windows.Interop.IKeyboardInputSink.HasFocusWithin " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4baaf-300">有关此成员的说明，请参见 <see cref="M:System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Remove(System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="4baaf-300">For a description of this member, see <see cref="M:System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Remove(System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="4baaf-301">如果接收器或其所包含的组件之一具有焦点，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4baaf-301"><see langword="true" /> if the sink or one of its contained components has focus; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4baaf-302">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="4baaf-302">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4baaf-303">它只能在 <xref:System.Windows.Interop.HwndSource> 实例被强制转换为 <xref:System.Windows.Interop.IKeyboardInputSink> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="4baaf-303">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite">
      <MemberSignature Language="C#" Value="System.Windows.Interop.IKeyboardInputSite System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Interop.IKeyboardInputSite System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite" />
      <MemberSignature Language="VB.NET" Value=" Property KeyboardInputSite As IKeyboardInputSite Implements IKeyboardInputSink.KeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="property System::Windows::Interop::IKeyboardInputSite ^ System::Windows::Interop::IKeyboardInputSink::KeyboardInputSite { System::Windows::Interop::IKeyboardInputSite ^ get(); void set(System::Windows::Interop::IKeyboardInputSite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite : System.Windows.Interop.IKeyboardInputSite with get, set" Usage="System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4baaf-304">有关此成员的说明，请参见 <see cref="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />。</span><span class="sxs-lookup"><span data-stu-id="4baaf-304">For a description of this member, see <see cref="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />.</span></span></summary>
        <value><span data-ttu-id="4baaf-305">对容器的 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 接口的引用。</span><span class="sxs-lookup"><span data-stu-id="4baaf-305">A reference to the container's <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> interface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4baaf-306">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="4baaf-306">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4baaf-307">它只能在 <xref:System.Windows.Interop.HwndSource> 实例被强制转换为 <xref:System.Windows.Interop.IKeyboardInputSink> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="4baaf-307">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/0ffbde0d-701d-45a3-a6fa-dd71f4d9772e"><span data-ttu-id="4baaf-308">WPF 和 Win32 互操作概述</span><span class="sxs-lookup"><span data-stu-id="4baaf-308">WPF and Win32 Interoperation Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/ee5258b7-6567-415a-9b1c-c0cbe46e79ef"><span data-ttu-id="4baaf-309">输入概述</span><span class="sxs-lookup"><span data-stu-id="4baaf-309">Input Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.OnMnemonic">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.OnMnemonic (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.OnMnemonic(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Function OnMnemonic (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean Implements IKeyboardInputSink.OnMnemonic" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers) = System::Windows::Interop::IKeyboardInputSink::OnMnemonic;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Interop.IKeyboardInputSink.OnMnemonic : MSG * System.Windows.Input.ModifierKeys -&gt; bool&#xA;override this.System.Windows.Interop.IKeyboardInputSink.OnMnemonic : MSG * System.Windows.Input.ModifierKeys -&gt; bool" Usage="hwndSource.System.Windows.Interop.IKeyboardInputSink.OnMnemonic (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="4baaf-310">助记键和关联数据的消息。</span><span class="sxs-lookup"><span data-stu-id="4baaf-310">The message for the mnemonic and associated data.</span></span> <span data-ttu-id="4baaf-311">请勿修改此消息结构。</span><span class="sxs-lookup"><span data-stu-id="4baaf-311">Do not modify this message structure.</span></span> <span data-ttu-id="4baaf-312">仅由于性能原因，通过引用来传递此消息。</span><span class="sxs-lookup"><span data-stu-id="4baaf-312">It is passed by reference for performance reasons only.</span></span></param>
        <param name="modifiers"><span data-ttu-id="4baaf-313">修改键。</span><span class="sxs-lookup"><span data-stu-id="4baaf-313">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="4baaf-314">有关此成员的说明，请参见 <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />。</span><span class="sxs-lookup"><span data-stu-id="4baaf-314">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />.</span></span></summary>
        <returns><span data-ttu-id="4baaf-315">如果消息已处理，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4baaf-315"><see langword="true" /> if the message was handled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4baaf-316">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="4baaf-316">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4baaf-317">它只能在 <xref:System.Windows.Interop.HwndSource> 实例被强制转换为 <xref:System.Windows.Interop.IKeyboardInputSink> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="4baaf-317">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink">
      <MemberSignature Language="C#" Value="System.Windows.Interop.IKeyboardInputSite IKeyboardInputSink.RegisterKeyboardInputSink (System.Windows.Interop.IKeyboardInputSink sink);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Windows.Interop.IKeyboardInputSite System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(class System.Windows.Interop.IKeyboardInputSink sink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />
      <MemberSignature Language="VB.NET" Value="Function RegisterKeyboardInputSink (sink As IKeyboardInputSink) As IKeyboardInputSite Implements IKeyboardInputSink.RegisterKeyboardInputSink" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Windows::Interop::IKeyboardInputSite ^ System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System::Windows::Interop::IKeyboardInputSink ^ sink) = System::Windows::Interop::IKeyboardInputSink::RegisterKeyboardInputSink;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink : System.Windows.Interop.IKeyboardInputSink -&gt; System.Windows.Interop.IKeyboardInputSite&#xA;override this.System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink : System.Windows.Interop.IKeyboardInputSink -&gt; System.Windows.Interop.IKeyboardInputSite" Usage="hwndSource.System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink sink" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sink" Type="System.Windows.Interop.IKeyboardInputSink" />
      </Parameters>
      <Docs>
        <param name="sink"><span data-ttu-id="4baaf-318">所包含组件的 <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> 接收器。</span><span class="sxs-lookup"><span data-stu-id="4baaf-318">The <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> sink of the contained component.</span></span></param>
        <summary><span data-ttu-id="4baaf-319">有关此成员的说明，请参见 <see cref="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />。</span><span class="sxs-lookup"><span data-stu-id="4baaf-319">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />.</span></span></summary>
        <returns><span data-ttu-id="4baaf-320">所包含组件的 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 站点。</span><span class="sxs-lookup"><span data-stu-id="4baaf-320">The <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> site of the contained component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4baaf-321">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="4baaf-321">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4baaf-322">它只能在 <xref:System.Windows.Interop.HwndSource> 实例被强制转换为 <xref:System.Windows.Interop.IKeyboardInputSink> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="4baaf-322">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.TabInto">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.TabInto (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.TabInto(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Function TabInto (request As TraversalRequest) As Boolean Implements IKeyboardInputSink.TabInto" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.TabInto(System::Windows::Input::TraversalRequest ^ request) = System::Windows::Interop::IKeyboardInputSink::TabInto;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Interop.IKeyboardInputSink.TabInto : System.Windows.Input.TraversalRequest -&gt; bool&#xA;override this.System.Windows.Interop.IKeyboardInputSink.TabInto : System.Windows.Input.TraversalRequest -&gt; bool" Usage="hwndSource.System.Windows.Interop.IKeyboardInputSink.TabInto request" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="4baaf-323">指定是将焦点设置到第一个制表位，还是设置到最后一个制表位。</span><span class="sxs-lookup"><span data-stu-id="4baaf-323">Specifies whether focus should be set to the first or the last tab stop.</span></span></param>
        <summary><span data-ttu-id="4baaf-324">有关此成员的说明，请参见 <see cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />。</span><span class="sxs-lookup"><span data-stu-id="4baaf-324">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />.</span></span></summary>
        <returns><span data-ttu-id="4baaf-325">如果已按要求对焦点进行了设置，则为 <see langword="true" />；如果没有制表位，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4baaf-325"><see langword="true" /> if the focus has been set as requested; <see langword="false" />, if there are no tab stops.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4baaf-326">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="4baaf-326">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4baaf-327">它只能在 <xref:System.Windows.Interop.HwndSource> 实例被强制转换为 <xref:System.Windows.Interop.IKeyboardInputSink> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="4baaf-327">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.TranslateAccelerator (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Function TranslateAccelerator (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean Implements IKeyboardInputSink.TranslateAccelerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers) = System::Windows::Interop::IKeyboardInputSink::TranslateAccelerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator : MSG * System.Windows.Input.ModifierKeys -&gt; bool&#xA;override this.System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator : MSG * System.Windows.Input.ModifierKeys -&gt; bool" Usage="hwndSource.System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="4baaf-328">消息及关联数据。</span><span class="sxs-lookup"><span data-stu-id="4baaf-328">The message and associated data.</span></span> <span data-ttu-id="4baaf-329">请勿修改此结构。</span><span class="sxs-lookup"><span data-stu-id="4baaf-329">Do not modify this structure.</span></span> <span data-ttu-id="4baaf-330">仅由于性能原因，通过引用来传递此消息。</span><span class="sxs-lookup"><span data-stu-id="4baaf-330">It is passed by reference for performance reasons only.</span></span></param>
        <param name="modifiers"><span data-ttu-id="4baaf-331">修改键。</span><span class="sxs-lookup"><span data-stu-id="4baaf-331">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="4baaf-332">有关此成员的说明，请参见 <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />。</span><span class="sxs-lookup"><span data-stu-id="4baaf-332">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />.</span></span></summary>
        <returns><span data-ttu-id="4baaf-333">如果方法实现对该消息进行了处理，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4baaf-333"><see langword="true" /> if the message was handled by the method implementation; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4baaf-334">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="4baaf-334">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4baaf-335">它只能在 <xref:System.Windows.Interop.HwndSource> 实例被强制转换为 <xref:System.Windows.Interop.IKeyboardInputSink> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="4baaf-335">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.TranslateChar">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.TranslateChar (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.TranslateChar(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Function TranslateChar (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean Implements IKeyboardInputSink.TranslateChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.TranslateChar(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers) = System::Windows::Interop::IKeyboardInputSink::TranslateChar;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Interop.IKeyboardInputSink.TranslateChar : MSG * System.Windows.Input.ModifierKeys -&gt; bool&#xA;override this.System.Windows.Interop.IKeyboardInputSink.TranslateChar : MSG * System.Windows.Input.ModifierKeys -&gt; bool" Usage="hwndSource.System.Windows.Interop.IKeyboardInputSink.TranslateChar (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="4baaf-336">消息及关联数据。</span><span class="sxs-lookup"><span data-stu-id="4baaf-336">The message and associated data.</span></span> <span data-ttu-id="4baaf-337">请勿修改此结构。</span><span class="sxs-lookup"><span data-stu-id="4baaf-337">Do not modify this structure.</span></span> <span data-ttu-id="4baaf-338">仅由于性能原因，通过引用来传递此消息。</span><span class="sxs-lookup"><span data-stu-id="4baaf-338">It is passed by reference for performance reasons only.</span></span></param>
        <param name="modifiers"><span data-ttu-id="4baaf-339">修改键。</span><span class="sxs-lookup"><span data-stu-id="4baaf-339">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="4baaf-340">有关此成员的说明，请参见 <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />。</span><span class="sxs-lookup"><span data-stu-id="4baaf-340">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />.</span></span></summary>
        <returns><span data-ttu-id="4baaf-341">如果消息已处理并且不应调用 <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4baaf-341"><see langword="true" /> if the message was processed and <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> should not be called; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4baaf-342">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="4baaf-342">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4baaf-343">它只能在 <xref:System.Windows.Interop.HwndSource> 实例被强制转换为 <xref:System.Windows.Interop.IKeyboardInputSink> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="4baaf-343">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabIntoCore">
      <MemberSignature Language="C#" Value="protected virtual bool TabIntoCore (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TabIntoCore(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.TabIntoCore(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TabIntoCore (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TabIntoCore(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberSignature Language="F#" Value="abstract member TabIntoCore : System.Windows.Input.TraversalRequest -&gt; bool&#xA;override this.TabIntoCore : System.Windows.Input.TraversalRequest -&gt; bool" Usage="hwndSource.TabIntoCore request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="4baaf-344">指定是将焦点设置到第一个制表位，还是设置到最后一个制表位。</span><span class="sxs-lookup"><span data-stu-id="4baaf-344">Specifies whether focus should be set to the first or the last tab stop.</span></span></param>
        <summary><span data-ttu-id="4baaf-345">在接收器的第一个制表位或最后一个制表位上设置焦点。</span><span class="sxs-lookup"><span data-stu-id="4baaf-345">Sets focus on either the first tab stop or the last tab stop of the sink.</span></span></summary>
        <returns><span data-ttu-id="4baaf-346">如果已按要求对焦点进行了设置，则为 <see langword="true" />；如果没有制表位，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4baaf-346"><see langword="true" /> if the focus has been set as requested; <see langword="false" />, if there are no tab stops.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4baaf-347"><paramref name="request" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4baaf-347"><paramref name="request" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />
      </Docs>
    </Member>
    <Member MemberName="TranslateAcceleratorCore">
      <MemberSignature Language="C#" Value="protected virtual bool TranslateAcceleratorCore (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TranslateAcceleratorCore(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TranslateAcceleratorCore (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TranslateAcceleratorCore(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="abstract member TranslateAcceleratorCore : MSG * System.Windows.Input.ModifierKeys -&gt; bool&#xA;override this.TranslateAcceleratorCore : MSG * System.Windows.Input.ModifierKeys -&gt; bool" Usage="hwndSource.TranslateAcceleratorCore (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" Index="1" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="4baaf-348">消息及关联数据。</span><span class="sxs-lookup"><span data-stu-id="4baaf-348">The message and associated data.</span></span> <span data-ttu-id="4baaf-349">请勿修改此结构。</span><span class="sxs-lookup"><span data-stu-id="4baaf-349">Do not modify this structure.</span></span> <span data-ttu-id="4baaf-350">仅由于性能原因，通过引用来传递此消息。</span><span class="sxs-lookup"><span data-stu-id="4baaf-350">It is passed by reference for performance reasons only.</span></span></param>
        <param name="modifiers"><span data-ttu-id="4baaf-351">修改键。</span><span class="sxs-lookup"><span data-stu-id="4baaf-351">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="4baaf-352">在键按下消息级处理键盘输入。</span><span class="sxs-lookup"><span data-stu-id="4baaf-352">Processes keyboard input at the key-down message level.</span></span></summary>
        <returns><span data-ttu-id="4baaf-353">如果方法实现对该消息进行了处理，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4baaf-353"><see langword="true" /> if the message was handled by the method implementation; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      </Docs>
    </Member>
    <Member MemberName="TranslateCharCore">
      <MemberSignature Language="C#" Value="protected virtual bool TranslateCharCore (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TranslateCharCore(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TranslateCharCore (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TranslateCharCore(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="abstract member TranslateCharCore : MSG * System.Windows.Input.ModifierKeys -&gt; bool&#xA;override this.TranslateCharCore : MSG * System.Windows.Input.ModifierKeys -&gt; bool" Usage="hwndSource.TranslateCharCore (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" Index="1" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="4baaf-354">消息及关联数据。</span><span class="sxs-lookup"><span data-stu-id="4baaf-354">The message and associated data.</span></span> <span data-ttu-id="4baaf-355">请勿修改此结构。</span><span class="sxs-lookup"><span data-stu-id="4baaf-355">Do not modify this structure.</span></span> <span data-ttu-id="4baaf-356">仅由于性能原因，通过引用来传递此消息。</span><span class="sxs-lookup"><span data-stu-id="4baaf-356">It is passed by reference for performance reasons only.</span></span></param>
        <param name="modifiers"><span data-ttu-id="4baaf-357">修改键。</span><span class="sxs-lookup"><span data-stu-id="4baaf-357">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="4baaf-358">在调用 <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> 方法之前处理 WM_CHAR、WM_SYSCHAR、WM_DEADCHAR 和 WM_SYSDEADCHAR 输入消息。</span><span class="sxs-lookup"><span data-stu-id="4baaf-358">Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before the <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> method is called.</span></span></summary>
        <returns><span data-ttu-id="4baaf-359">如果消息已处理并且不应调用 <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4baaf-359"><see langword="true" /> if the message was processed and <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> should not be called; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesPerPixelOpacity">
      <MemberSignature Language="C#" Value="public bool UsesPerPixelOpacity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesPerPixelOpacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.UsesPerPixelOpacity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsesPerPixelOpacity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsesPerPixelOpacity { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UsesPerPixelOpacity : bool" Usage="System.Windows.Interop.HwndSource.UsesPerPixelOpacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4baaf-360">获取一个值，该值声明是否遵守源窗口内容的每像素不透明度。</span><span class="sxs-lookup"><span data-stu-id="4baaf-360">Gets a value that declares whether the per-pixel opacity of the source window content is respected.</span></span></summary>
        <value><span data-ttu-id="4baaf-361">如果系统使用每像素不透明度，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4baaf-361"><see langword="true" /> if the system uses per-pixel opacity; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4baaf-362">启用每像素不透明度时，系统不再绘制非工作区。</span><span class="sxs-lookup"><span data-stu-id="4baaf-362">When you enable per-pixel opacity, the system no longer draws the non-client area.</span></span> <span data-ttu-id="4baaf-363">这是因为 <xref:System.Windows.Interop.HwndSource.UsesPerPixelOpacity%2A> 的目标目的是显示可在互操作方案中使用的非矩形顶级 UI。</span><span class="sxs-lookup"><span data-stu-id="4baaf-363">This is because the intended purpose of <xref:System.Windows.Interop.HwndSource.UsesPerPixelOpacity%2A> is to show non-rectangular top-level UI that works in interoperation scenarios.</span></span> <span data-ttu-id="4baaf-364">因此，显示矩形非工作区的情况将违背此目的。</span><span class="sxs-lookup"><span data-stu-id="4baaf-364">Therefore, showing the rectangular non-client area defeats that purpose.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
