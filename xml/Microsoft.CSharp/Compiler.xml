<Type Name="Compiler" FullName="Microsoft.CSharp.Compiler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6235631c8aca5511199fd2acfa5239af6bb15917" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83976028" /></Metadata><TypeSignature Language="C#" Value="public class Compiler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Compiler extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CSharp.Compiler" />
  <TypeSignature Language="VB.NET" Value="Public Class Compiler" />
  <TypeSignature Language="C++ CLI" Value="public ref class Compiler" />
  <TypeSignature Language="F#" Value="type Compiler = class" />
  <AssemblyInfo>
    <AssemblyName>cscompmgd</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Obsolete("The recommended alternative is Microsoft.CSharp.CSharpCodeProvider and System.CodeDom.Compiler.ICodeCompiler.  The CSharpCodeProvider and CodeDom ICodeCompiler provide a much richer set of functionality for specifying how to launch the compiler.")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>C# 编译器的托管包装器。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks  
若要编译 C\# 进程中的代码，请调用 <xref:Microsoft.CSharp.Compiler.Compile(System.String[],System.String[],System.String,System.String[],System.Collections.IDictionary)>。

]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Compile">
      <MemberSignature Language="C#" Value="public static Microsoft.CSharp.CompilerError[] Compile (string[] sourceTexts, string[] sourceTextNames, string target, string[] imports, System.Collections.IDictionary options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.CSharp.CompilerError[] Compile(string[] sourceTexts, string[] sourceTextNames, string target, string[] imports, class System.Collections.IDictionary options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CSharp.Compiler.Compile(System.String[],System.String[],System.String,System.String[],System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile (sourceTexts As String(), sourceTextNames As String(), target As String, imports As String(), options As IDictionary) As CompilerError()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Microsoft::CSharp::CompilerError ^&gt; ^ Compile(cli::array &lt;System::String ^&gt; ^ sourceTexts, cli::array &lt;System::String ^&gt; ^ sourceTextNames, System::String ^ target, cli::array &lt;System::String ^&gt; ^ imports, System::Collections::IDictionary ^ options);" />
      <MemberSignature Language="F#" Value="static member Compile : string[] * string[] * string * string[] * System.Collections.IDictionary -&gt; Microsoft.CSharp.CompilerError[]" Usage="Microsoft.CSharp.Compiler.Compile (sourceTexts, sourceTextNames, target, imports, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>cscompmgd</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CSharp.CompilerError[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceTexts" Type="System.String[]" />
        <Parameter Name="sourceTextNames" Type="System.String[]" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="imports" Type="System.String[]" />
        <Parameter Name="options" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="sourceTexts">类型字符串数组，每一个均使用 C\# 代码。</param>
        <param name="sourceTextNames">包含每个 sourceTexts 的文件名的类型字符串数组。</param>
        <param name="target">输出文件名。 此参数是必需的参数。</param>
        <param name="imports">类型字符串数组，含要引用的文件。</param>
        <param name="options">编译器选项的 <see cref="T:System.Collections.IDictionary" />。</param>
        <summary>编译指定的目标文件的给定 C# 源。</summary>
        <returns>将诊断消息作为 <see cref="T:Microsoft.CSharp.CompilerError" /> 类型的数组返回。 数组为空或所有元素都为警告，表示编译成功。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
SourceTexts 参数中的每个字符串都等效于一个源文件。 必须至少有一个 sourceTexts 元素。

SourceTextNames 参数中的文件名用于编译器诊断和调试信息。 数组是必需的，但它可以通过使用 \#line 指令进行本地重写。 该数组必须具有与 sourceTexts 参数相同的元素数目。

Imports 参数与/reference 编译器选项相同。 此参数可以为 <see langword="null" />。

对于 options 参数，该键是编译器选项的缩写形式。 值是选项所需的值。 Options 参数可以 <see langword="null" />。 某些编译器选项无法识别。 可识别的选项和值：

| 密钥名称 | 用法 |
| --- | --- |
| addmodule | 要包括在此程序集中的模块的列表。 模块名称必须由竖线或竖线分隔。 值必须为 <xref:System.String>类型。 请参阅[-addmodule （ C# 编译器选项）](https://msdn.microsoft.com/library/1s46f83c)。 |
| baseaddress | 库的基址。 值必须为 <xref:System.UInt32>类型。 请参阅[-baseaddress （ C# 编译器选项）](/dotnet/csharp/language-reference/compiler-options/baseaddress-compiler-option)。 |
| bugreport | 生成 bug 报告文件。 值必须为 <xref:System.String>类型。 请参阅[-bugreport （ C# 编译器选项）](https://msdn.microsoft.com/library/kaky3xy9)。 |
| 已选中 | 将默认表达式计算设置为选中（或取消选中）。 值必须为 <xref:System.Boolean>类型。 请参见[-checked （ C# 编译器选项）](https://msdn.microsoft.com/library/h25wtyxf)。 |
| d | 要定义的以分号分隔的符号列表。 值必须为 <xref:System.String>类型。 请参阅[-define （ C# 编译器选项）](https://msdn.microsoft.com/library/0feaad6z)。 |
| debug | 发出带有输出的调试信息。 值必须为 <xref:System.Boolean>类型。 不能指定 Full 或 pdb。 请参阅[-debug （ C# 编译器选项）](https://msdn.microsoft.com/library/8cw0bt21)。 |
| doc | 要在其中放置 XML 注释的文件名。 值必须为 <xref:System.String>类型。 请参阅[-doc （ C# 编译器选项）](https://msdn.microsoft.com/library/3260k4x7)。 |
| filealign | PE 部分的对齐大小。 值必须为 <xref:System.UInt32>类型。 请参阅[-filealign （ C# 编译器选项）](https://msdn.microsoft.com/library/0s4tzdf2)。 |
| 增量 | 启用增量重新生成。 值必须为 <xref:System.Boolean>类型。 |
| lib | 查找模块和引用程序集时要搜索的其他路径。 值必须为 <xref:System.String>类型。 请参见[-lib （ C# 编译器选项）](https://msdn.microsoft.com/library/s5bac5fx)。 |
| linkres | 将托管资源链接到程序集。 值必须为 <xref:System.String>类型。 请参阅[-linkresource （ C# 编译器选项）](https://msdn.microsoft.com/library/xawyf94k)。 |
| m | 键入以搜索 Main 方法。 值必须为 <xref:System.String>类型。 请参阅[-main （ C# 编译器选项）](https://msdn.microsoft.com/library/x3eht538)。 |
| nostdlib | 不要自动引用 mscorlib.dll。 值必须为 <xref:System.Boolean>类型。 请参阅[-nostdlib （ C# 编译器选项）](https://msdn.microsoft.com/library/fa13yay7)。 |
| nowarn | 不报告的以分号分隔的警告编号的列表。 值必须为 <xref:System.String>类型。 请参阅[-nowarn （ C# 编译器选项）](https://msdn.microsoft.com/library/7f28x9z3)。 |
| o | 启用编译器优化。 值必须为 <xref:System.Boolean>类型。 请参阅[-optimize （ C# 编译器选项）](https://msdn.microsoft.com/library/t0hfscdc)。 |
| r | 引用的程序集。 值必须为字符串类型。 如果指定了多个程序集，则文件名必须由竖线或竖线分隔。 请参阅[-reference （ C# 编译器选项）](https://msdn.microsoft.com/library/yabyz3h4)。 |
| res | 嵌入托管资源。 值必须为 <xref:System.String>类型。 请参阅[-resource （ C# 编译器选项）](/dotnet/csharp/language-reference/compiler-options/resource-compiler-option)。 |
| target | 输出文件目标类型，为下列其中一项： "library"、"exe"、"winexe" 或 "module"。 值必须为 <xref:System.String>类型。 请参见[-target （ C# 编译器选项）](https://msdn.microsoft.com/library/6h25dztx)。 |
| unsafe | 允许不安全的构造。 值必须为 <xref:System.Boolean>类型。 请参阅[-unsafe （ C# 编译器选项）](https://msdn.microsoft.com/library/ct597kb0)。 |
| w | 警告等级（0-4）。 值必须为 <xref:System.String>类型。 请参阅[-警告（ C# 编译器选项）](https://msdn.microsoft.com/library/13b90fz7)。 |
| warnaserror | 将警告诊断报告为错误。 值必须为 <xref:System.Boolean>类型。 请参阅[-warnaserror （ C# 编译器选项）](https://msdn.microsoft.com/library/406xhdz3)。 |
| win32icon | 自动生成的 Win32 资源的 win32 图标。 值必须为 <xref:System.String>类型。 请参阅[-win32icon （ C# 编译器选项）](https://msdn.microsoft.com/library/2aaxe43f)。 |
| win32res | Win32 资源文件。 值必须为 <xref:System.String>类型。 请参阅[-win32res （ C# 编译器选项）](https://msdn.microsoft.com/library/8f2f5x2e)。 |

]]></format>
        </remarks>
        <altmember cref="T:Microsoft.CSharp.Compiler" />
        <exception cref="T:System.ArgumentNullException"><paramref name="sourceTexts" /> 为 <see langword="null" />。
          
- 或 -

<paramref name="sourceTextNames" /> 为 <see langword="null" />。

- 或 -

<paramref name="target" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="sourceTexts" /> 是一个空数组。

- 或 -

<paramref name="sourceTextNames" /> 与 <paramref name="sourceTexts" /> 的大小不同。</exception>
        <related type="Article" href="/dotnet/csharp/language-reference/preprocessor-directives/preprocessor-line">#line（C# 参考）</related>
        <related type="Article" href="/dotnet/csharp/language-reference/compiler-options/reference-compiler-option">-reference（C# 编译器选项）</related>
        <related type="Article" href="/dotnet/csharp/language-reference/compiler-options/">C# 编译器选项</related>
      </Docs>
    </Member>
  </Members>
</Type>
