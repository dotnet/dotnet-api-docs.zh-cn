<Type Name="StringSegment" FullName="Microsoft.Extensions.Primitives.StringSegment">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5105b425f42ccc02fdd2ee770713a9be3bc98a2f" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89975039" /></Metadata><TypeSignature Language="C#" Value="public struct StringSegment : IEquatable&lt;Microsoft.Extensions.Primitives.StringSegment&gt;, IEquatable&lt;string&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit StringSegment extends System.ValueType implements class System.IEquatable`1&lt;string&gt;, class System.IEquatable`1&lt;valuetype Microsoft.Extensions.Primitives.StringSegment&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Primitives.StringSegment" />
  <TypeSignature Language="VB.NET" Value="Public Structure StringSegment&#xA;Implements IEquatable(Of String), IEquatable(Of StringSegment)" />
  <TypeSignature Language="C++ CLI" Value="public value class StringSegment : IEquatable&lt;Microsoft::Extensions::Primitives::StringSegment&gt;, IEquatable&lt;System::String ^&gt;" />
  <TypeSignature Language="F#" Value="type StringSegment = struct" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.Extensions.Primitives.StringSegment&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.String&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>子字符串的优化表示形式。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringSegment (string buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (buffer As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringSegment(System::String ^ buffer);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Primitives.StringSegment : string -&gt; Microsoft.Extensions.Primitives.StringSegment" Usage="new Microsoft.Extensions.Primitives.StringSegment buffer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="buffer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="buffer">原始 <see cref="T:System.String" />。 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 包括整个 <see cref="T:System.String" />。</param>
        <summary>初始化 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 结构的实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringSegment (string buffer, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string buffer, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (buffer As String, offset As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringSegment(System::String ^ buffer, int offset, int length);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Primitives.StringSegment : string * int * int -&gt; Microsoft.Extensions.Primitives.StringSegment" Usage="new Microsoft.Extensions.Primitives.StringSegment (buffer, offset, length)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="buffer" Type="System.String" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">用作缓冲区的原始 <see cref="T:System.String" />。</param>
        <param name="offset"><paramref name="buffer" /> 中段的偏移量。</param>
        <param name="length">段的长度。</param>
        <summary>初始化 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 结构的实例。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buffer" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> 或 <paramref name="length" /> 小于零，或者 <paramref name="offset" /> +
            <paramref name="length" /> 大于 <paramref name="buffer" /> 中的字符数。</exception>
      </Docs>
    </Member>
    <Member MemberName="AsMemory">
      <MemberSignature Language="C#" Value="public ReadOnlyMemory&lt;char&gt; AsMemory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.ReadOnlyMemory`1&lt;char&gt; AsMemory() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.AsMemory" />
      <MemberSignature Language="VB.NET" Value="Public Function AsMemory () As ReadOnlyMemory(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReadOnlyMemory&lt;char&gt; AsMemory();" />
      <MemberSignature Language="F#" Value="member this.AsMemory : unit -&gt; ReadOnlyMemory&lt;char&gt;" Usage="stringSegment.AsMemory " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlyMemory&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从当前 <see cref="T:System.ReadOnlyMemory`1" /> 中获取 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />。</summary>
        <returns>此 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 中的 <see cref="T:System.ReadOnlyMemory`1" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsSpan">
      <MemberSignature Language="C#" Value="public ReadOnlySpan&lt;char&gt; AsSpan ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.ReadOnlySpan`1&lt;char&gt; AsSpan() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.AsSpan" />
      <MemberSignature Language="VB.NET" Value="Public Function AsSpan () As ReadOnlySpan(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReadOnlySpan&lt;char&gt; AsSpan();" />
      <MemberSignature Language="F#" Value="member this.AsSpan : unit -&gt; ReadOnlySpan&lt;char&gt;" Usage="stringSegment.AsSpan " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从当前 <see cref="T:System.ReadOnlySpan`1" /> 中获取 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />。</summary>
        <returns>此 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 中的 <see cref="T:System.ReadOnlySpan`1" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Buffer">
      <MemberSignature Language="C#" Value="public string Buffer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Buffer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Primitives.StringSegment.Buffer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Buffer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Buffer { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Buffer : string" Usage="Microsoft.Extensions.Primitives.StringSegment.Buffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 的 <see cref="T:System.String" /> 缓冲区。</summary>
        <value><see cref="T:System.String" />此的缓冲区 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 。</value>
        <remarks>To be added.</remarks>
      </Docs>
      <summary>Gets the value of this segment as a <see cref="T:System.String" />.</summary>
      <value>The value of this segment as a <see cref="T:System.String" />.</value>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (Microsoft.Extensions.Primitives.StringSegment a, Microsoft.Extensions.Primitives.StringSegment b, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(valuetype Microsoft.Extensions.Primitives.StringSegment a, valuetype Microsoft.Extensions.Primitives.StringSegment b, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.Compare(Microsoft.Extensions.Primitives.StringSegment,Microsoft.Extensions.Primitives.StringSegment,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (a As StringSegment, b As StringSegment, comparisonType As StringComparison) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(Microsoft::Extensions::Primitives::StringSegment a, Microsoft::Extensions::Primitives::StringSegment b, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="static member Compare : Microsoft.Extensions.Primitives.StringSegment * Microsoft.Extensions.Primitives.StringSegment * StringComparison -&gt; int" Usage="Microsoft.Extensions.Primitives.StringSegment.Compare (a, b, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Microsoft.Extensions.Primitives.StringSegment" Index="0" FrameworkAlternate="dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="b" Type="Microsoft.Extensions.Primitives.StringSegment" Index="1" FrameworkAlternate="dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="comparisonType" Type="System.StringComparison" Index="2" FrameworkAlternate="dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="a">要比较的第一个 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />。</param>
        <param name="b">要比较的第二个 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />。</param>
        <param name="comparisonType">枚举值之一，用于指定比较的规则。</param>
        <summary>使用指定的规则比较两个指定的 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 对象的子字符串，并返回一个整数，指示二者在排序顺序中的相对位置。</summary>
        <returns>一个 32 位有符号整数，指示两个比较数之间的词法关系。
如果 <paramref name="a" /> 小于 <paramref name="b" />，则该值为负数；如果二者比较后相等，则为 0；如果 <paramref name="a" /> 大于 <paramref name="b" />，则为正数。
。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Extensions.Primitives.StringSegment Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Microsoft.Extensions.Primitives.StringSegment Empty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Extensions.Primitives.StringSegment.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Empty As StringSegment " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Extensions::Primitives::StringSegment Empty;" />
      <MemberSignature Language="F#" Value=" staticval mutable Empty : Microsoft.Extensions.Primitives.StringSegment" Usage="Microsoft.Extensions.Primitives.StringSegment.Empty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.StringSegment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="F:System.String.Empty" /> 的 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndsWith">
      <MemberSignature Language="C#" Value="public bool EndsWith (string text, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool EndsWith(string text, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.EndsWith(System.String,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndsWith (text As String, comparisonType As StringComparison) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EndsWith(System::String ^ text, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="member this.EndsWith : string * StringComparison -&gt; bool" Usage="stringSegment.EndsWith (text, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="text">要比较的 <see cref="T:System.String" />。</param>
        <param name="comparisonType">一个枚举值，用于指定比较中要使用的规则。</param>
        <summary>使用指定的 <paramref name="comparisonType" /> 进行比较时，检查此 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 的结尾是否与指定的 <see cref="T:System.String" /> 匹配。</summary>
        <returns>如果 <paramref name="text" /> 与此 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 的结尾匹配，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="text" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.Extensions.Primitives.StringSegment other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype Microsoft.Extensions.Primitives.StringSegment other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.Equals(Microsoft.Extensions.Primitives.StringSegment)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As StringSegment) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(Microsoft::Extensions::Primitives::StringSegment other);" />
      <MemberSignature Language="F#" Value="override this.Equals : Microsoft.Extensions.Primitives.StringSegment -&gt; bool" Usage="stringSegment.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.Extensions.Primitives.StringSegment" />
      </Parameters>
      <Docs>
        <param name="other">一个与此对象进行比较的对象。</param>
        <summary>指示当前对象是否等于同一类型的另一个对象。</summary>
        <returns>如果当前对象等于另一个参数，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="stringSegment.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.Equals(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (text As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.Equals : string -&gt; bool" Usage="stringSegment.Equals text" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">要与当前的 <see cref="T:System.String" /> 进行比较的 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />。</param>
        <summary>检查指定的 <see cref="T:System.String" /> 是否等于当前的 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />。</summary>
        <returns>如果指定的 <see langword="true" /> 等于当前的 <see cref="T:System.String" />，则为 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.Extensions.Primitives.StringSegment other, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype Microsoft.Extensions.Primitives.StringSegment other, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.Equals(Microsoft.Extensions.Primitives.StringSegment,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As StringSegment, comparisonType As StringComparison) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(Microsoft::Extensions::Primitives::StringSegment other, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="override this.Equals : Microsoft.Extensions.Primitives.StringSegment * StringComparison -&gt; bool" Usage="stringSegment.Equals (other, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.Extensions.Primitives.StringSegment" />
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="other">一个与此对象进行比较的对象。</param>
        <param name="comparisonType">一个枚举值，用于指定比较中要使用的规则。</param>
        <summary>指示当前对象是否等于同一类型的另一个对象。</summary>
        <returns>如果当前对象等于另一个参数，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (string text, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(string text, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.Equals(System.String,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (text As String, comparisonType As StringComparison) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::String ^ text, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="override this.Equals : string * StringComparison -&gt; bool" Usage="stringSegment.Equals (text, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="text">要与当前的 <see cref="T:System.String" /> 进行比较的 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />。</param>
        <param name="comparisonType">一个枚举值，用于指定比较中要使用的规则。</param>
        <summary>检查指定的 <see cref="T:System.String" /> 是否等于当前的 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />。</summary>
        <returns>如果指定的 <see langword="true" /> 等于当前的 <see cref="T:System.String" />，则为 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="text" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (Microsoft.Extensions.Primitives.StringSegment a, Microsoft.Extensions.Primitives.StringSegment b, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype Microsoft.Extensions.Primitives.StringSegment a, valuetype Microsoft.Extensions.Primitives.StringSegment b, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.Equals(Microsoft.Extensions.Primitives.StringSegment,Microsoft.Extensions.Primitives.StringSegment,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (a As StringSegment, b As StringSegment, comparisonType As StringComparison) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(Microsoft::Extensions::Primitives::StringSegment a, Microsoft::Extensions::Primitives::StringSegment b, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="static member Equals : Microsoft.Extensions.Primitives.StringSegment * Microsoft.Extensions.Primitives.StringSegment * StringComparison -&gt; bool" Usage="Microsoft.Extensions.Primitives.StringSegment.Equals (a, b, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Microsoft.Extensions.Primitives.StringSegment" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="b" Type="Microsoft.Extensions.Primitives.StringSegment" Index="1" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="comparisonType" Type="System.StringComparison" Index="2" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="a">要比较的第一个 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />。</param>
        <param name="b">要比较的第二个 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />。</param>
        <param name="comparisonType">枚举值之一，用于指定比较的规则。</param>
        <summary>确定两个指定的 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 对象是否具有相同的值。 参数指定区域性、大小写以及比较所用的排序规则。</summary>
        <returns>如果对象相同，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="stringSegment.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>此 GetHashCode 的开销很高，因为它会在每次调用时进行分配。
但这是为了确保保留任何行为 (如) 该字符串的哈希代码随机化。GetHashCode 具有。</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public bool HasValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Primitives.StringSegment.HasValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValue : bool" Usage="Microsoft.Extensions.Primitives.StringSegment.HasValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 是否包含有效的值。</summary>
        <value><see langword="true" /> 如果 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 包含有效的值，则为; <see langword="false" /> 否则为。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.IndexOf(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (c As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(char c);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : char -&gt; int" Usage="stringSegment.IndexOf c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">要查找的 Unicode 字符。</param>
        <summary>获取 <paramref name="c" /> 字符在此 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 中的第一个匹配项从零开始的索引。</summary>
        <returns>如果找到该字符，则为从 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 的起始位置起 <paramref name="c" /> 从零开始的索引位置；如果未找到，则为 -1。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (char c, int start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(char c, int32 start) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.IndexOf(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (c As Char, start As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(char c, int start);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : char * int -&gt; int" Usage="stringSegment.IndexOf (c, start)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
        <Parameter Name="start" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="c">要查找的 Unicode 字符。</param>
        <param name="start">搜索起始位置的从零开始的索引位置。</param>
        <summary>获取 <paramref name="c" /> 字符在此 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 中的第一个匹配项从零开始的索引。
搜索的起始位置为 <paramref name="start" />。</summary>
        <returns>如果找到该字符，则为从 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 的起始位置起 <paramref name="c" /> 从零开始的索引位置；如果未找到，则为 -1。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="start" /> 大于或等于 <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" />，或小于零。</exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (char c, int start, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(char c, int32 start, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.IndexOf(System.Char,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (c As Char, start As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(char c, int start, int count);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : char * int * int -&gt; int" Usage="stringSegment.IndexOf (c, start, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="c">要查找的 Unicode 字符。</param>
        <param name="start">搜索起始位置的从零开始的索引位置。</param>
        <param name="count">要检查的字符数。</param>
        <summary>获取 <paramref name="c" /> 字符在此 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 中的第一个匹配项从零开始的索引。
搜索从 <paramref name="start" /> 开始，并检查指定数量的 <paramref name="count" /> 字符位置。</summary>
        <returns>如果找到该字符，则为从 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 的起始位置起 <paramref name="c" /> 从零开始的索引位置；如果未找到，则为 -1。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="start" /> 或 <paramref name="count" /> 小于零，或 <paramref name="start" /> + <paramref name="count" /> 大于 <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOfAny">
      <MemberSignature Language="C#" Value="public int IndexOfAny (char[] anyOf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOfAny(char[] anyOf) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.IndexOfAny(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOfAny (anyOf As Char()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOfAny(cli::array &lt;char&gt; ^ anyOf);" />
      <MemberSignature Language="F#" Value="member this.IndexOfAny : char[] -&gt; int" Usage="stringSegment.IndexOfAny anyOf" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anyOf" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="anyOf">Unicode 字符数组，包含一个或多个要查找的字符。</param>
        <summary>报告指定 Unicode 字符数组中的任意字符在此实例中第一个匹配项的从零开始的索引。</summary>
        <returns>在此实例中第一次找到 <paramref name="anyOf" /> 中的任意字符的索引位置（从零开始）；如果未找到 <paramref name="anyOf" /> 中的字符，则为 -1。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOfAny">
      <MemberSignature Language="C#" Value="public int IndexOfAny (char[] anyOf, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOfAny(char[] anyOf, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.IndexOfAny(System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOfAny (anyOf As Char(), startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOfAny(cli::array &lt;char&gt; ^ anyOf, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.IndexOfAny : char[] * int -&gt; int" Usage="stringSegment.IndexOfAny (anyOf, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anyOf" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="startIndex" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="anyOf">Unicode 字符数组，包含一个或多个要查找的字符。</param>
        <param name="startIndex">搜索起始位置。</param>
        <summary>报告指定 Unicode 字符数组中的任意字符在此实例中第一个匹配项的从零开始的索引。 该搜索从指定字符位置开始。</summary>
        <returns>在此实例中第一次找到 <paramref name="anyOf" /> 中的任意字符的索引位置（从零开始）；如果未找到 <paramref name="anyOf" /> 中的字符，则为 -1。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" /> 大于或等于 <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" />，或小于零。</exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOfAny">
      <MemberSignature Language="C#" Value="public int IndexOfAny (char[] anyOf, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOfAny(char[] anyOf, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.IndexOfAny(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOfAny (anyOf As Char(), startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOfAny(cli::array &lt;char&gt; ^ anyOf, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.IndexOfAny : char[] * int * int -&gt; int" Usage="stringSegment.IndexOfAny (anyOf, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anyOf" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="startIndex" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="anyOf">Unicode 字符数组，包含一个或多个要查找的字符。</param>
        <param name="startIndex">搜索起始位置。</param>
        <param name="count">要检查的字符位置数。</param>
        <summary>报告指定 Unicode 字符数组中的任意字符在此实例中第一个匹配项的从零开始的索引。 搜索从指定字符位置开始，并检查指定数量的字符位置。</summary>
        <returns>在此实例中第一次找到 <paramref name="anyOf" /> 中的任意字符的索引位置（从零开始）；如果未找到 <paramref name="anyOf" /> 中的字符，则为 -1。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="anyOf" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" /> 或 <paramref name="count" /> 小于零，或 <paramref name="startIndex" /> + <paramref name="count" /> 大于 <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNullOrEmpty">
      <MemberSignature Language="C#" Value="public static bool IsNullOrEmpty (Microsoft.Extensions.Primitives.StringSegment value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNullOrEmpty(valuetype Microsoft.Extensions.Primitives.StringSegment value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.IsNullOrEmpty(Microsoft.Extensions.Primitives.StringSegment)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNullOrEmpty (value As StringSegment) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNullOrEmpty(Microsoft::Extensions::Primitives::StringSegment value);" />
      <MemberSignature Language="F#" Value="static member IsNullOrEmpty : Microsoft.Extensions.Primitives.StringSegment -&gt; bool" Usage="Microsoft.Extensions.Primitives.StringSegment.IsNullOrEmpty value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Microsoft.Extensions.Primitives.StringSegment" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="value">要测试的 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />。</param>
        <summary>指示指定的 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 是 null 还是空字符串。</summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public char this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char Item(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Primitives.StringSegment.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char default[int] { char get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : char" Usage="Microsoft.Extensions.Primitives.StringSegment.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="index">进入 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 的偏移量</param>
        <summary>获取位于当前 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 中指定位置的 <see cref="T:System.Char" />。</summary>
        <value><see cref="T:System.Char" />位于指定位置的。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> 大于或等于 <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" />，或小于零。</exception>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.LastIndexOf(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(char value);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : char -&gt; int" Usage="stringSegment.LastIndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="value">要查找的 Unicode 字符。</param>
        <summary>报告指定 Unicode 字符在此实例中的最后一个匹配项的从零开始的索引的位置。</summary>
        <returns>如果找到该字符，则为值的从零开始的索引位置；如果未找到，则为 -1。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Primitives.StringSegment.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="Microsoft.Extensions.Primitives.StringSegment.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 的长度。</summary>
        <value>此的长度 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public int Offset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Offset" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Primitives.StringSegment.Offset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Offset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Offset { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Offset : int" Usage="Microsoft.Extensions.Primitives.StringSegment.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 的缓冲区内的偏移量。</summary>
        <value>此的缓冲区内的偏移量 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Microsoft.Extensions.Primitives.StringSegment left, Microsoft.Extensions.Primitives.StringSegment right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype Microsoft.Extensions.Primitives.StringSegment left, valuetype Microsoft.Extensions.Primitives.StringSegment right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.op_Equality(Microsoft.Extensions.Primitives.StringSegment,Microsoft.Extensions.Primitives.StringSegment)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As StringSegment, right As StringSegment) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(Microsoft::Extensions::Primitives::StringSegment left, Microsoft::Extensions::Primitives::StringSegment right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : Microsoft.Extensions.Primitives.StringSegment * Microsoft.Extensions.Primitives.StringSegment -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Microsoft.Extensions.Primitives.StringSegment" />
        <Parameter Name="right" Type="Microsoft.Extensions.Primitives.StringSegment" />
      </Parameters>
      <Docs>
        <param name="left">要比较的第一个 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />，或 <see langword="null" />。</param>
        <param name="right">要比较的第二个 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />，或 <see langword="null" />。</param>
        <summary>检查两个指定的 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 是否具有相同的值。</summary>
        <returns>如果 <see langword="true" /> 的值与 <paramref name="left" /> 的值相同，则为 <paramref name="right" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator ReadOnlyMemory&lt;char&gt; (Microsoft.Extensions.Primitives.StringSegment segment);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.ReadOnlyMemory`1&lt;char&gt; op_Implicit(valuetype Microsoft.Extensions.Primitives.StringSegment segment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.op_Implicit(Microsoft.Extensions.Primitives.StringSegment)~System.ReadOnlyMemory{System.Char}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (segment As StringSegment) As ReadOnlyMemory(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator ReadOnlyMemory&lt;char&gt;(Microsoft::Extensions::Primitives::StringSegment segment);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : Microsoft.Extensions.Primitives.StringSegment -&gt; ReadOnlyMemory&lt;char&gt;" Usage="Microsoft.Extensions.Primitives.StringSegment.op_Implicit segment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlyMemory&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="segment" Type="Microsoft.Extensions.Primitives.StringSegment" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="segment">要转换为 <see cref="T:System.ReadOnlyMemory`1" /> 的 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />。</param>
        <summary>从给定的 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 创建新的 <see cref="T:System.ReadOnlyMemory`1" />。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator ReadOnlySpan&lt;char&gt; (Microsoft.Extensions.Primitives.StringSegment segment);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.ReadOnlySpan`1&lt;char&gt; op_Implicit(valuetype Microsoft.Extensions.Primitives.StringSegment segment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.op_Implicit(Microsoft.Extensions.Primitives.StringSegment)~System.ReadOnlySpan{System.Char}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (segment As StringSegment) As ReadOnlySpan(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator ReadOnlySpan&lt;char&gt;(Microsoft::Extensions::Primitives::StringSegment segment);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : Microsoft.Extensions.Primitives.StringSegment -&gt; ReadOnlySpan&lt;char&gt;" Usage="Microsoft.Extensions.Primitives.StringSegment.op_Implicit segment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="segment" Type="Microsoft.Extensions.Primitives.StringSegment" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="segment">要转换为 <see cref="T:System.ReadOnlySpan`1" /> 的 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />。</param>
        <summary>从给定的 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 创建新的 <see cref="T:System.ReadOnlySpan`1" />。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator Microsoft.Extensions.Primitives.StringSegment (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype Microsoft.Extensions.Primitives.StringSegment op_Implicit(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.op_Implicit(System.String)~Microsoft.Extensions.Primitives.StringSegment" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As String) As StringSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator Microsoft::Extensions::Primitives::StringSegment(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : string -&gt; Microsoft.Extensions.Primitives.StringSegment" Usage="Microsoft.Extensions.Primitives.StringSegment.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.StringSegment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="value">要转换为 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 的 <see cref="T:System.String" /></param>
        <summary>从给定的 <see cref="T:System.String" /> 创建新的 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Microsoft.Extensions.Primitives.StringSegment left, Microsoft.Extensions.Primitives.StringSegment right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype Microsoft.Extensions.Primitives.StringSegment left, valuetype Microsoft.Extensions.Primitives.StringSegment right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.op_Inequality(Microsoft.Extensions.Primitives.StringSegment,Microsoft.Extensions.Primitives.StringSegment)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As StringSegment, right As StringSegment) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(Microsoft::Extensions::Primitives::StringSegment left, Microsoft::Extensions::Primitives::StringSegment right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Microsoft.Extensions.Primitives.StringSegment * Microsoft.Extensions.Primitives.StringSegment -&gt; bool" Usage="Microsoft.Extensions.Primitives.StringSegment.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Microsoft.Extensions.Primitives.StringSegment" />
        <Parameter Name="right" Type="Microsoft.Extensions.Primitives.StringSegment" />
      </Parameters>
      <Docs>
        <param name="left">要比较的第一个 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />，或 <see langword="null" />。</param>
        <param name="right">要比较的第二个 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />，或 <see langword="null" />。</param>
        <summary>检查两个指定的 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 是否具有不同的值。</summary>
        <returns>如果 <see langword="true" /> 的值与 <paramref name="left" /> 的值不同，则为 <paramref name="right" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.StringTokenizer Split (char[] chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.Extensions.Primitives.StringTokenizer Split(char[] chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.Split(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (chars As Char()) As StringTokenizer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Primitives::StringTokenizer Split(cli::array &lt;char&gt; ^ chars);" />
      <MemberSignature Language="F#" Value="member this.Split : char[] -&gt; Microsoft.Extensions.Primitives.StringTokenizer" Usage="stringSegment.Split chars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.StringTokenizer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="chars">分隔此字符串中子字符串的字符数组、不包含分隔符的空数组或 null。</param>
        <summary>基于数组中的字符将字符串拆分为 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />。</summary>
        <returns>一个 <see cref="T:Microsoft.Extensions.Primitives.StringTokenizer" />，其元素包含此实例中由 <paramref name="chars" /> 中的一个或多个字符分隔的 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartsWith">
      <MemberSignature Language="C#" Value="public bool StartsWith (string text, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool StartsWith(string text, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.StartsWith(System.String,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartsWith (text As String, comparisonType As StringComparison) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool StartsWith(System::String ^ text, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="member this.StartsWith : string * StringComparison -&gt; bool" Usage="stringSegment.StartsWith (text, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="text">要比较的 <see cref="T:System.String" />。</param>
        <param name="comparisonType">一个枚举值，用于指定比较中要使用的规则。</param>
        <summary>使用指定的 <paramref name="comparisonType" /> 进行比较时，检查此 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 的开头是否与指定的 <see cref="T:System.String" /> 匹配。</summary>
        <returns>如果 <paramref name="text" /> 与此 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 的开头匹配，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="text" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Subsegment">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.StringSegment Subsegment (int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.Extensions.Primitives.StringSegment Subsegment(int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.Subsegment(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Subsegment (offset As Integer) As StringSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Primitives::StringSegment Subsegment(int offset);" />
      <MemberSignature Language="F#" Value="member this.Subsegment : int -&gt; Microsoft.Extensions.Primitives.StringSegment" Usage="stringSegment.Subsegment offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.StringSegment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="offset">此 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 中子字符串的起始字符位置（从零开始）。</param>
        <summary>检索表示此 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 中的子字符串的 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />。
<see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 从 <paramref name="offset" /> 指定的位置开始。</summary>
        <returns>在此 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 中从 <paramref name="offset" /> 开始的 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />，其长度为余数。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> 大于或等于 <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" />，或小于零。</exception>
      </Docs>
    </Member>
    <Member MemberName="Subsegment">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.StringSegment Subsegment (int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.Extensions.Primitives.StringSegment Subsegment(int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.Subsegment(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Subsegment (offset As Integer, length As Integer) As StringSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Primitives::StringSegment Subsegment(int offset, int length);" />
      <MemberSignature Language="F#" Value="member this.Subsegment : int * int -&gt; Microsoft.Extensions.Primitives.StringSegment" Usage="stringSegment.Subsegment (offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.StringSegment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset">此 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 中子字符串的起始字符位置（从零开始）。</param>
        <param name="length">子字符串中的字符数。</param>
        <summary>检索表示此 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 中的子字符串的 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />。
<see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 从 <paramref name="offset" /> 指定的位置开始，并具有指定的 <paramref name="length" />。</summary>
        <returns>一个 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />，等效于在此 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 中从 <paramref name="offset" /> 开始的长度为 <paramref name="length" /> 的子字符串</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> 或 <paramref name="length" /> 小于零，或 <paramref name="offset" /> + <paramref name="length" /> 大于 <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Substring">
      <MemberSignature Language="C#" Value="public string Substring (int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Substring(int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.Substring(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Substring (offset As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Substring(int offset);" />
      <MemberSignature Language="F#" Value="member this.Substring : int -&gt; string" Usage="stringSegment.Substring offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="offset">此 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 中子字符串的起始字符位置（从零开始）。</param>
        <summary>从此 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 检索子字符串。
子字符串从 <paramref name="offset" /> 指定的位置开始，并具有剩余长度。</summary>
        <returns>一个 <see cref="T:System.String" />，等效于在此 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 中从 <paramref name="offset" /> 开始的剩余长度的子字符串</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> 大于或等于 <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" />，或小于零。</exception>
      </Docs>
    </Member>
    <Member MemberName="Substring">
      <MemberSignature Language="C#" Value="public string Substring (int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Substring(int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.Substring(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Substring (offset As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Substring(int offset, int length);" />
      <MemberSignature Language="F#" Value="member this.Substring : int * int -&gt; string" Usage="stringSegment.Substring (offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset">此 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 中子字符串的起始字符位置（从零开始）。</param>
        <param name="length">子字符串中的字符数。</param>
        <summary>从此 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 检索子字符串。
子字符串从 <paramref name="offset" /> 指定的位置开始，并具有指定的 <paramref name="length" />。</summary>
        <returns>一个 <see cref="T:System.String" />，等效于在此 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 中从 <paramref name="offset" /> 开始的长度为 <paramref name="length" /> 的子字符串</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> 或 <paramref name="length" /> 小于零，或 <paramref name="offset" /> + <paramref name="length" /> 大于 <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="stringSegment.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>如果 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 不包含值，则返回由此 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 或 <see cref="F:System.String.Empty" /> 表示的 <see cref="T:System.String" />。</summary>
        <returns>如果 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 不包含值，则此 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> 或 <see cref="F:System.String.Empty" /> 表示的 <see cref="T:System.String" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Trim">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.StringSegment Trim ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.Extensions.Primitives.StringSegment Trim() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.Trim" />
      <MemberSignature Language="VB.NET" Value="Public Function Trim () As StringSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Primitives::StringSegment Trim();" />
      <MemberSignature Language="F#" Value="member this.Trim : unit -&gt; Microsoft.Extensions.Primitives.StringSegment" Usage="stringSegment.Trim " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.StringSegment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>删除所有前导空格和尾随空格。</summary>
        <returns>剪裁后的 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimEnd">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.StringSegment TrimEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.Extensions.Primitives.StringSegment TrimEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.TrimEnd" />
      <MemberSignature Language="VB.NET" Value="Public Function TrimEnd () As StringSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Primitives::StringSegment TrimEnd();" />
      <MemberSignature Language="F#" Value="member this.TrimEnd : unit -&gt; Microsoft.Extensions.Primitives.StringSegment" Usage="stringSegment.TrimEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.StringSegment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>删除所有尾随空格。</summary>
        <returns>剪裁后的 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimStart">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.StringSegment TrimStart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.Extensions.Primitives.StringSegment TrimStart() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Primitives.StringSegment.TrimStart" />
      <MemberSignature Language="VB.NET" Value="Public Function TrimStart () As StringSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Primitives::StringSegment TrimStart();" />
      <MemberSignature Language="F#" Value="member this.TrimStart : unit -&gt; Microsoft.Extensions.Primitives.StringSegment" Usage="stringSegment.TrimStart " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.StringSegment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>删除所有前导空格。</summary>
        <returns>剪裁后的 <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Primitives.StringSegment.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="Microsoft.Extensions.Primitives.StringSegment.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Primitives</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此段的值作为 <see cref="T:System.String" />。</summary>
        <value>此段的值（作为） <see cref="T:System.String" /> 。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
