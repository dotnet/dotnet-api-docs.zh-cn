<Type Name="ResXResourceReader" FullName="System.Resources.ResXResourceReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e6a9eabdca8ae6fced9c61d77e3a66db1a080857" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83937583" /></Metadata><TypeSignature Language="C#" Value="public class ResXResourceReader : IDisposable, System.Collections.IEnumerable, System.Resources.IResourceReader" FrameworkAlternate="dotnet-plat-ext-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResXResourceReader extends System.Object implements class System.Collections.IEnumerable, class System.IDisposable, class System.Resources.IResourceReader" />
  <TypeSignature Language="DocId" Value="T:System.Resources.ResXResourceReader" />
  <TypeSignature Language="VB.NET" Value="Public Class ResXResourceReader&#xA;Implements IDisposable, IEnumerable, IResourceReader" FrameworkAlternate="dotnet-plat-ext-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResXResourceReader : IDisposable, System::Collections::IEnumerable, System::Resources::IResourceReader" FrameworkAlternate="dotnet-plat-ext-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="F#" Value="type ResXResourceReader = class&#xA;    interface IResourceReader&#xA;    interface IEnumerable&#xA;    interface IDisposable" />
  <TypeSignature Language="C#" Value="public class ResXResourceReader : System.Resources.IResourceReader" FrameworkAlternate="net-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="VB.NET" Value="Public Class ResXResourceReader&#xA;Implements IResourceReader" FrameworkAlternate="net-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResXResourceReader : System::Resources::IResourceReader" FrameworkAlternate="net-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Resources.IResourceReader</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="a862d-101">枚举 XML 资源 (.resx) 文件和流，并读取顺序资源名称和值对。</span><span class="sxs-lookup"><span data-stu-id="a862d-101">Enumerates XML resource (.resx) files and streams, and reads the sequential resource name and value pairs.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a862d-102"><xref:System.Resources.ResXResourceReader> 类提供 <xref:System.Resources.IResourceReader> 接口的默认实现，该实现读取 XML 格式的资源信息。</span><span class="sxs-lookup"><span data-stu-id="a862d-102">The <xref:System.Resources.ResXResourceReader> class provides a default implementation of the <xref:System.Resources.IResourceReader> interface that reads resource information in an XML format.</span></span> <span data-ttu-id="a862d-103">若要从二进制资源格式读取资源信息，请使用 <xref:System.Resources.ResourceReader> 类。</span><span class="sxs-lookup"><span data-stu-id="a862d-103">To read resource information from a binary resource format, use the <xref:System.Resources.ResourceReader> class.</span></span>  
  
 <span data-ttu-id="a862d-104">通过遍历 <xref:System.Resources.ResXResourceReader.GetEnumerator%2A> 方法返回的字典枚举器（<xref:System.Collections.IDictionaryEnumerator>），可以使用 <xref:System.Resources.ResXResourceReader> 类枚举 .resx 文件中的资源。</span><span class="sxs-lookup"><span data-stu-id="a862d-104">You use the <xref:System.Resources.ResXResourceReader> class to enumerate resources in .resx files by traversing the dictionary enumerator (<xref:System.Collections.IDictionaryEnumerator>) that is returned by the <xref:System.Resources.ResXResourceReader.GetEnumerator%2A> method.</span></span> <span data-ttu-id="a862d-105">调用 <xref:System.Collections.IDictionaryEnumerator> 提供的方法来前进到下一个资源，并读取 .resx 文件中每个资源的名称和值。</span><span class="sxs-lookup"><span data-stu-id="a862d-105">You call the methods provided by <xref:System.Collections.IDictionaryEnumerator> to advance to the next resource and to read the name and value of each resource in the .resx file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a862d-106"><xref:System.Resources.ResXResourceReader> 类提供两个枚举器。</span><span class="sxs-lookup"><span data-stu-id="a862d-106">The <xref:System.Resources.ResXResourceReader> class provides two enumerators.</span></span> <span data-ttu-id="a862d-107"><xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=nameWithType> 方法返回 <xref:System.Collections.IDictionaryEnumerator> 对象;建议使用此方法来枚举资源。</span><span class="sxs-lookup"><span data-stu-id="a862d-107">The <xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=nameWithType> method returns an <xref:System.Collections.IDictionaryEnumerator> object; we recommend that you use this method to enumerate resources.</span></span> <span data-ttu-id="a862d-108"><xref:System.Resources.ResXResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=nameWithType> 方法是返回 <xref:System.Collections.IEnumerator> 对象的显式接口实现;不建议使用。</span><span class="sxs-lookup"><span data-stu-id="a862d-108">The <xref:System.Resources.ResXResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=nameWithType> method is an explicit interface implementation that returns an <xref:System.Collections.IEnumerator> object; we do not recommend its use.</span></span>  
  
 <span data-ttu-id="a862d-109">下面的示例使用 <xref:System.Resources.ResXResourceReader.GetEnumerator%2A> 方法获取用于枚举 .resx 文件中的资源的 <xref:System.Collections.IDictionaryEnumerator> 对象。</span><span class="sxs-lookup"><span data-stu-id="a862d-109">The following example uses the <xref:System.Resources.ResXResourceReader.GetEnumerator%2A> method to obtain an <xref:System.Collections.IDictionaryEnumerator> object that is used to enumerate the resources in a .resx file.</span></span> <span data-ttu-id="a862d-110">该示例包含一个 `CreateResourceFile` 例程，用于创建必要的资源文件。</span><span class="sxs-lookup"><span data-stu-id="a862d-110">The example includes a `CreateResourceFile` routine that creates the necessary resource file.</span></span>  
  
 [!code-csharp[System.Resources.ResXResourceReader.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resxresourcereader.class/cs/resxresourcereader1.cs#1)]
 [!code-vb[System.Resources.ResXResourceReader.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resxresourcereader.class/vb/resxresourcereader1.vb#1)]  
  
 <span data-ttu-id="a862d-111">如果 `true`<xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> 属性，<xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> 属性的值为 <xref:System.Resources.ResXDataNode> 对象，而不是资源值。</span><span class="sxs-lookup"><span data-stu-id="a862d-111">If the <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> property is `true`, the value of the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property is a <xref:System.Resources.ResXDataNode> object rather than the resource value.</span></span> <span data-ttu-id="a862d-112">这会使资源项的注释在 <xref:System.Resources.ResXDataNode.Comment%2A?displayProperty=nameWithType> 属性中可用。</span><span class="sxs-lookup"><span data-stu-id="a862d-112">This makes a resource item's comment available from the <xref:System.Resources.ResXDataNode.Comment%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="a862d-113">下面的示例将 <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> 属性设置为 `true` 并枚举 .resx 文件中的资源。</span><span class="sxs-lookup"><span data-stu-id="a862d-113">The following example sets the <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> property to `true` and enumerates the resources in a .resx file,</span></span>  
  
 [!code-csharp[System.Resources.ResXResourceReader.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resxresourcereader.class/cs/resxresourcereader2.cs#2)]
 [!code-vb[System.Resources.ResXResourceReader.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resxresourcereader.class/vb/resxresourcereader2.vb#2)]  
  
 <span data-ttu-id="a862d-114">如果 `true`<xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>，则枚举中的 <xref:System.Resources.ResXDataNode> 项可以是：</span><span class="sxs-lookup"><span data-stu-id="a862d-114">If <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> is `true`, the <xref:System.Resources.ResXDataNode> items in the enumeration can be either:</span></span>  
  
-   <span data-ttu-id="a862d-115">命名资源及其数据。</span><span class="sxs-lookup"><span data-stu-id="a862d-115">Named resources along with their data.</span></span> <span data-ttu-id="a862d-116">在这种情况下，将 `null`<xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=nameWithType> 属性。</span><span class="sxs-lookup"><span data-stu-id="a862d-116">In this case, the <xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=nameWithType> property is `null`.</span></span>  
  
-   <span data-ttu-id="a862d-117">命名的资源以及包含资源数据的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="a862d-117">Named resources along with the name of the file that contains the resource data.</span></span> <span data-ttu-id="a862d-118">在这种情况下，<xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=nameWithType> 属性返回一个 <xref:System.Resources.ResXFileRef> 对象，该对象提供有关资源的信息，包括其文件名。</span><span class="sxs-lookup"><span data-stu-id="a862d-118">In this case, the <xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=nameWithType> property returns a <xref:System.Resources.ResXFileRef> object that provides information about the resource, including its filename.</span></span> <span data-ttu-id="a862d-119">如果使用了相对文件名，则应始终将 <xref:System.Resources.ResXResourceReader.BasePath%2A> 属性设置为提供相对文件路径的参考点。</span><span class="sxs-lookup"><span data-stu-id="a862d-119">If relative file names are used, you should always set the <xref:System.Resources.ResXResourceReader.BasePath%2A> property to provide a reference point for the relative file path.</span></span>  
  
 <span data-ttu-id="a862d-120">如果要从 .resx 文件中检索命名资源而不是枚举其资源，可以实例化一个 <xref:System.Resources.ResXResourceSet> 对象并调用其 `GetString` 和 `GetObject` 方法。</span><span class="sxs-lookup"><span data-stu-id="a862d-120">If you want to retrieve named resources from a .resx file rather than enumerating its resources, you can instantiate a <xref:System.Resources.ResXResourceSet> object and call its `GetString` and `GetObject` methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a862d-121"><xref:System.Resources.ResXResourceReader> 类在类级别包含应用于所有成员的链接要求和继承要求。</span><span class="sxs-lookup"><span data-stu-id="a862d-121">The <xref:System.Resources.ResXResourceReader> class contains a link demand and an inheritance demand at the class level that applies to all members.</span></span> <span data-ttu-id="a862d-122">当直接调用方或派生类不具有完全信任权限时，将引发 <xref:System.Security.SecurityException> 异常。</span><span class="sxs-lookup"><span data-stu-id="a862d-122">A <xref:System.Security.SecurityException> exception is thrown when either the immediate caller or the derived class does not have full-trust permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a862d-123">下面的示例演示如何使用 <xref:System.Resources.ResXResourceReader> 来循环访问 .resx 文件中的资源。</span><span class="sxs-lookup"><span data-stu-id="a862d-123">The following example demonstrates how to use a <xref:System.Resources.ResXResourceReader> to iterate through the resources in a .resx file.</span></span> <span data-ttu-id="a862d-124">首先，为文件 `items.resx`创建 <xref:System.Resources.ResXResourceReader>`rsxr`。</span><span class="sxs-lookup"><span data-stu-id="a862d-124">First, the <xref:System.Resources.ResXResourceReader>`rsxr` is created for the file `items.resx`.</span></span> <span data-ttu-id="a862d-125">接下来，使用 <xref:System.Resources.ResXResourceReader.GetEnumerator%2A> 方法来创建 <xref:System.Collections.IDictionaryEnumerator>，以循环访问资源并将内容显示到控制台。</span><span class="sxs-lookup"><span data-stu-id="a862d-125">Next, the <xref:System.Resources.ResXResourceReader.GetEnumerator%2A> method is used to create an <xref:System.Collections.IDictionaryEnumerator> to iterate through the resources and display the contents to the console.</span></span>  
  
 [!code-cpp[System.Resources.ResxresourceReader Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/CPP/resxresourcereader.cpp#1)]
 [!code-csharp[System.Resources.ResxresourceReader Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/CS/resxresourcereader.cs#1)]
 [!code-vb[System.Resources.ResxresourceReader Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/VB/resxresourcereader.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Resources.ResXResourceWriter" />
    <related type="Article" href="/dotnet/framework/resources/creating-resource-files-for-desktop-apps"><span data-ttu-id="a862d-126">创建桌面应用程序的资源文件</span><span class="sxs-lookup"><span data-stu-id="a862d-126">Creating Resource Files for Desktop Apps</span></span></related>
    <related type="Article" href="/dotnet/framework/resources/working-with-resx-files-programmatically"><span data-ttu-id="a862d-127">以编程方式使用 .resx 文件</span><span class="sxs-lookup"><span data-stu-id="a862d-127">Working with .resx Files Programmatically</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a862d-128">初始化 <see cref="T:System.Resources.ResXResourceReader" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a862d-128">Initializes a new instance of the <see cref="T:System.Resources.ResXResourceReader" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceReader (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceReader(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXResourceReader : System.IO.Stream -&gt; System.Resources.ResXResourceReader" Usage="new System.Resources.ResXResourceReader stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="a862d-129">包含了资源的输入流。</span><span class="sxs-lookup"><span data-stu-id="a862d-129">An input stream that contains resources.</span></span></param>
        <summary><span data-ttu-id="a862d-130">为指定的流初始化 <see cref="T:System.Resources.ResXResourceReader" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a862d-130">Initializes a new instance of the <see cref="T:System.Resources.ResXResourceReader" /> class for the specified stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a862d-131"><xref:System.Resources.ResXResourceReader.Dispose%2A> 和 <xref:System.Resources.ResXResourceReader.Close%2A> 方法不会关闭在此构造函数中指定的流。</span><span class="sxs-lookup"><span data-stu-id="a862d-131">The <xref:System.Resources.ResXResourceReader.Dispose%2A> and <xref:System.Resources.ResXResourceReader.Close%2A> methods do not close the stream you specify in this constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceReader (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceReader(System::IO::TextReader ^ reader);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXResourceReader : System.IO.TextReader -&gt; System.Resources.ResXResourceReader" Usage="new System.Resources.ResXResourceReader reader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="a862d-132">包含资源的文本输入流。</span><span class="sxs-lookup"><span data-stu-id="a862d-132">A text input stream that contains resources.</span></span></param>
        <summary><span data-ttu-id="a862d-133">为指定的 <see cref="T:System.IO.TextReader" /> 初始化 <see cref="T:System.Resources.ResXResourceReader" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a862d-133">Initializes a new instance of the <see cref="T:System.Resources.ResXResourceReader" /> class for the specified <see cref="T:System.IO.TextReader" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceReader (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceReader(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXResourceReader : string -&gt; System.Resources.ResXResourceReader" Usage="new System.Resources.ResXResourceReader fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="a862d-134">要读取的资源文件的路径。</span><span class="sxs-lookup"><span data-stu-id="a862d-134">The path of the resource file to read.</span></span></param>
        <summary><span data-ttu-id="a862d-135">为指定的资源文件初始化 <see cref="T:System.Resources.ResXResourceReader" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a862d-135">Initializes a new instance of the <see cref="T:System.Resources.ResXResourceReader" /> class for the specified resource file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a862d-136">下面的示例创建指定文件的 <xref:System.Resources.ResXResourceReader> 类的新实例，循环访问该文件的资源，并将内容显示到控制台。</span><span class="sxs-lookup"><span data-stu-id="a862d-136">The following example creates a new instance of the <xref:System.Resources.ResXResourceReader> class for the specified file, iterates through the resources of the file, and displays the contents to the console.</span></span>  
  
 [!code-cpp[System.Resources.ResxresourceReader Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/CPP/resxresourcereader.cpp#1)]
 [!code-csharp[System.Resources.ResxresourceReader Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/CS/resxresourcereader.cs#1)]
 [!code-vb[System.Resources.ResxresourceReader Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/VB/resxresourcereader.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceReader (System.IO.Stream stream, System.ComponentModel.Design.ITypeResolutionService typeResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.ComponentModel.Design.ITypeResolutionService typeResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stream As Stream, typeResolver As ITypeResolutionService)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceReader(System::IO::Stream ^ stream, System::ComponentModel::Design::ITypeResolutionService ^ typeResolver);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXResourceReader : System.IO.Stream * System.ComponentModel.Design.ITypeResolutionService -&gt; System.Resources.ResXResourceReader" Usage="new System.Resources.ResXResourceReader (stream, typeResolver)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="typeResolver" Type="System.ComponentModel.Design.ITypeResolutionService" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="a862d-137">包含了资源的输入流。</span><span class="sxs-lookup"><span data-stu-id="a862d-137">An input stream that contains resources.</span></span></param>
        <param name="typeResolver"><span data-ttu-id="a862d-138">一个对象，它解析资源中指定的类型名称。</span><span class="sxs-lookup"><span data-stu-id="a862d-138">An object that resolves type names specified in a resource.</span></span></param>
        <summary><span data-ttu-id="a862d-139">使用输入流和类型解析服务初始化 <see cref="T:System.Resources.ResXResourceReader" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a862d-139">Initializes a new instance of the <see cref="T:System.Resources.ResXResourceReader" /> class using an input stream and a type resolution service.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceReader (System.IO.Stream stream, System.Reflection.AssemblyName[] assemblyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Reflection.AssemblyName[] assemblyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.Reflection.AssemblyName[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stream As Stream, assemblyNames As AssemblyName())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceReader(System::IO::Stream ^ stream, cli::array &lt;System::Reflection::AssemblyName ^&gt; ^ assemblyNames);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXResourceReader : System.IO.Stream * System.Reflection.AssemblyName[] -&gt; System.Resources.ResXResourceReader" Usage="new System.Resources.ResXResourceReader (stream, assemblyNames)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="assemblyNames" Type="System.Reflection.AssemblyName[]" Index="1" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="a862d-140">包含了资源的输入流。</span><span class="sxs-lookup"><span data-stu-id="a862d-140">An input stream that contains resources.</span></span></param>
        <param name="assemblyNames"><span data-ttu-id="a862d-141"><see cref="T:System.Reflection.AssemblyName" /> 对象的数组，它指定一个或多个程序集。</span><span class="sxs-lookup"><span data-stu-id="a862d-141">An array of <see cref="T:System.Reflection.AssemblyName" /> objects that specifies one or more assemblies.</span></span> <span data-ttu-id="a862d-142">程序集用于将资源中的类型名称解析为一个实际类型。</span><span class="sxs-lookup"><span data-stu-id="a862d-142">The assemblies are used to resolve a type name in the resource to an actual type.</span></span></param>
        <summary><span data-ttu-id="a862d-143">使用流和程序集名称数组初始化 <see cref="T:System.Resources.ResXResourceReader" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a862d-143">Initializes a new instance of the <see cref="T:System.Resources.ResXResourceReader" /> class using a stream and an array of assembly names.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceReader (System.IO.TextReader reader, System.ComponentModel.Design.ITypeResolutionService typeResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextReader reader, class System.ComponentModel.Design.ITypeResolutionService typeResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As TextReader, typeResolver As ITypeResolutionService)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceReader(System::IO::TextReader ^ reader, System::ComponentModel::Design::ITypeResolutionService ^ typeResolver);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXResourceReader : System.IO.TextReader * System.ComponentModel.Design.ITypeResolutionService -&gt; System.Resources.ResXResourceReader" Usage="new System.Resources.ResXResourceReader (reader, typeResolver)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
        <Parameter Name="typeResolver" Type="System.ComponentModel.Design.ITypeResolutionService" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="a862d-144">包含资源的文本流读取器。</span><span class="sxs-lookup"><span data-stu-id="a862d-144">A text stream reader that contains resources.</span></span></param>
        <param name="typeResolver"><span data-ttu-id="a862d-145">一个对象，它解析资源中指定的类型名称。</span><span class="sxs-lookup"><span data-stu-id="a862d-145">An object that resolves type names specified in a resource.</span></span></param>
        <summary><span data-ttu-id="a862d-146">使用文本流读取器和类型解析服务初始化 <see cref="T:System.Resources.ResXResourceReader" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a862d-146">Initializes a new instance of the <see cref="T:System.Resources.ResXResourceReader" /> class using a text stream reader and a type resolution service.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceReader (System.IO.TextReader reader, System.Reflection.AssemblyName[] assemblyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextReader reader, class System.Reflection.AssemblyName[] assemblyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As TextReader, assemblyNames As AssemblyName())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceReader(System::IO::TextReader ^ reader, cli::array &lt;System::Reflection::AssemblyName ^&gt; ^ assemblyNames);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXResourceReader : System.IO.TextReader * System.Reflection.AssemblyName[] -&gt; System.Resources.ResXResourceReader" Usage="new System.Resources.ResXResourceReader (reader, assemblyNames)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="assemblyNames" Type="System.Reflection.AssemblyName[]" Index="1" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="a862d-147">用于从文本流中读取资源的一个对象。</span><span class="sxs-lookup"><span data-stu-id="a862d-147">An object used to read resources from a stream of text.</span></span></param>
        <param name="assemblyNames"><span data-ttu-id="a862d-148"><see cref="T:System.Reflection.AssemblyName" /> 对象的数组，它指定一个或多个程序集。</span><span class="sxs-lookup"><span data-stu-id="a862d-148">An array of <see cref="T:System.Reflection.AssemblyName" /> objects that specifies one or more assemblies.</span></span> <span data-ttu-id="a862d-149">程序集用于将资源中的类型名称解析为一个实际类型。</span><span class="sxs-lookup"><span data-stu-id="a862d-149">The assemblies are used to resolve a type name in the resource to an actual type.</span></span></param>
        <summary><span data-ttu-id="a862d-150">使用 <see cref="T:System.IO.TextReader" /> 对象和程序集名称数组初始化 <see cref="T:System.Resources.ResXResourceReader" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a862d-150">Initializes a new instance of the <see cref="T:System.Resources.ResXResourceReader" /> class using a <see cref="T:System.IO.TextReader" /> object and an array of assembly names.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceReader (string fileName, System.ComponentModel.Design.ITypeResolutionService typeResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, class System.ComponentModel.Design.ITypeResolutionService typeResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, typeResolver As ITypeResolutionService)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceReader(System::String ^ fileName, System::ComponentModel::Design::ITypeResolutionService ^ typeResolver);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXResourceReader : string * System.ComponentModel.Design.ITypeResolutionService -&gt; System.Resources.ResXResourceReader" Usage="new System.Resources.ResXResourceReader (fileName, typeResolver)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="typeResolver" Type="System.ComponentModel.Design.ITypeResolutionService" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="a862d-151">包含资源的 XML 资源文件的名称。</span><span class="sxs-lookup"><span data-stu-id="a862d-151">The name of an XML resource file that contains resources.</span></span></param>
        <param name="typeResolver"><span data-ttu-id="a862d-152">一个对象，它解析资源中指定的类型名称。</span><span class="sxs-lookup"><span data-stu-id="a862d-152">An object that resolves type names specified in a resource.</span></span></param>
        <summary><span data-ttu-id="a862d-153">使用文件名和类型解析服务初始化 <see cref="T:System.Resources.ResXResourceReader" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a862d-153">Initializes a new instance of the <see cref="T:System.Resources.ResXResourceReader" /> class using a file name and a type resolution service.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXResourceReader (string fileName, System.Reflection.AssemblyName[] assemblyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, class System.Reflection.AssemblyName[] assemblyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.#ctor(System.String,System.Reflection.AssemblyName[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, assemblyNames As AssemblyName())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXResourceReader(System::String ^ fileName, cli::array &lt;System::Reflection::AssemblyName ^&gt; ^ assemblyNames);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXResourceReader : string * System.Reflection.AssemblyName[] -&gt; System.Resources.ResXResourceReader" Usage="new System.Resources.ResXResourceReader (fileName, assemblyNames)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="assemblyNames" Type="System.Reflection.AssemblyName[]" Index="1" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="a862d-154">包含资源的 XML 资源文件的名称。</span><span class="sxs-lookup"><span data-stu-id="a862d-154">The name of an XML resource file that contains resources.</span></span></param>
        <param name="assemblyNames"><span data-ttu-id="a862d-155"><see cref="T:System.Reflection.AssemblyName" /> 对象的数组，它指定一个或多个程序集。</span><span class="sxs-lookup"><span data-stu-id="a862d-155">An array of <see cref="T:System.Reflection.AssemblyName" /> objects that specifies one or more assemblies.</span></span> <span data-ttu-id="a862d-156">程序集用于将资源中的类型名称解析为一个实际类型。</span><span class="sxs-lookup"><span data-stu-id="a862d-156">The assemblies are used to resolve a type name in the resource to an actual type.</span></span></param>
        <summary><span data-ttu-id="a862d-157">使用 XML 资源文件名和程序集名称数组初始化 <see cref="T:System.Resources.ResXResourceReader" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a862d-157">Initializes a new instance of the <see cref="T:System.Resources.ResXResourceReader" /> class using an XML resource file name and an array of assembly names.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BasePath">
      <MemberSignature Language="C#" Value="public string BasePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BasePath" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResXResourceReader.BasePath" />
      <MemberSignature Language="VB.NET" Value="Public Property BasePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BasePath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BasePath : string with get, set" Usage="System.Resources.ResXResourceReader.BasePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a862d-158">获取或设置在 <see cref="T:System.Resources.ResXFileRef" /> 对象中指定的相对文件路径的基路径。</span><span class="sxs-lookup"><span data-stu-id="a862d-158">Gets or sets the base path for the relative file path specified in a <see cref="T:System.Resources.ResXFileRef" /> object.</span></span></summary>
        <value><span data-ttu-id="a862d-159">如果路径预置在 <see cref="T:System.Resources.ResXFileRef" /> 对象中指定的相对文件路径中，则该路径产生到资源文件的绝对路径。</span><span class="sxs-lookup"><span data-stu-id="a862d-159">A path that, if prepended to the relative file path specified in a <see cref="T:System.Resources.ResXFileRef" /> object, yields an absolute path to a resource file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a862d-160"><xref:System.Resources.ResXResourceReader.BasePath%2A> 属性用于解析分配给 <xref:System.Resources.ResXFileRef> 对象的 <xref:System.Resources.ResXFileRef.FileName%2A> 属性的相对文件路径引用。</span><span class="sxs-lookup"><span data-stu-id="a862d-160">The <xref:System.Resources.ResXResourceReader.BasePath%2A> property is used to resolve relative file path references that are assigned to the <xref:System.Resources.ResXFileRef.FileName%2A> property of <xref:System.Resources.ResXFileRef> objects.</span></span>  <span data-ttu-id="a862d-161">默认情况下，其值为 <xref:System.String.Empty?displayProperty=nameWithType>，相对文件路径引用将与 <xref:System.Environment.CurrentDirectory%2A?displayProperty=nameWithType> 属性返回的当前目录进行解析。</span><span class="sxs-lookup"><span data-stu-id="a862d-161">By default, its value is <xref:System.String.Empty?displayProperty=nameWithType>, and relative file path references are resolved in relationship to the current directory returned by the <xref:System.Environment.CurrentDirectory%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="a862d-162">在开始枚举资源之前，应设置此属性。</span><span class="sxs-lookup"><span data-stu-id="a862d-162">You should set this property before you begin enumerating resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a862d-163">下面的示例创建一个 XML 资源文件，其中包含狗猫的图像，同时还创建了一个字符串资源，用于指定创建该资源的应用程序。</span><span class="sxs-lookup"><span data-stu-id="a862d-163">The following example creates an XML resource file that contains images of dog breeds, and also creates a string resource that specifies the application that created the resource.</span></span> <span data-ttu-id="a862d-164"><xref:System.Resources.ResXFileRef> 对象用于存储图像的路径，而不是将二进制图像本身存储在资源文件中。</span><span class="sxs-lookup"><span data-stu-id="a862d-164"><xref:System.Resources.ResXFileRef> objects are used to store the path to the images rather than storing the binary images themselves in the resource file.</span></span> <span data-ttu-id="a862d-165">该示例将设置 <xref:System.Resources.ResXResourceReader.BasePath%2A> 属性，以便将图像文件名中的相对文件路径解释为名为 C:\data\\目录的子目录。</span><span class="sxs-lookup"><span data-stu-id="a862d-165">The example sets the <xref:System.Resources.ResXResourceReader.BasePath%2A> property so that the relative file paths in the images' file names are interpreted as subdirectories of a directory named C:\data\\.</span></span>  
  
 [!code-csharp[System.Resources.ResXResourceReader.BasePath#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resxresourcereader.basepath/cs/basepathex1.cs#1)]
 [!code-vb[System.Resources.ResXResourceReader.BasePath#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resxresourcereader.basepath/vb/basepathex1.vb#1)]  
  
 <span data-ttu-id="a862d-166">请注意，必须添加对 System.web 的引用才能成功编译项目。</span><span class="sxs-lookup"><span data-stu-id="a862d-166">Note that you must add a reference to System.Drawing.dll to compile the project successfully.</span></span> <span data-ttu-id="a862d-167">该示例还要求在名为 C:\data\images\\目录中存在必要的映像。</span><span class="sxs-lookup"><span data-stu-id="a862d-167">The example also requires that the necessary images exist in a directory named C:\data\images\\.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a862d-168">在设置操作中无法指定值，因为 XML 资源文件已被访问且正在使用。</span><span class="sxs-lookup"><span data-stu-id="a862d-168">In a set operation, a value cannot be specified because the XML resource file has already been accessed and is in use.</span></span></exception>
        <altmember cref="M:System.Resources.ResXResourceReader.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="resXResourceReader.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceReader.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a862d-169">释放 <see cref="T:System.Resources.ResXResourceReader" /> 使用的所有资源。</span><span class="sxs-lookup"><span data-stu-id="a862d-169">Releases all resources used by the <see cref="T:System.Resources.ResXResourceReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a862d-170">调用 <xref:System.Resources.ResXResourceReader.Close%2A> 会启用 <xref:System.Resources.ResXResourceReader> 出于其他目的而重新分配的资源。</span><span class="sxs-lookup"><span data-stu-id="a862d-170">Calling <xref:System.Resources.ResXResourceReader.Close%2A> enables the resources used by the <xref:System.Resources.ResXResourceReader> to be reallocated for other purposes.</span></span> <span data-ttu-id="a862d-171">有关 <xref:System.Resources.ResXResourceReader.Close%2A>的详细信息，请参阅[清理非托管资源](/dotnet/standard/garbage-collection/unmanaged)。</span><span class="sxs-lookup"><span data-stu-id="a862d-171">For more information about <xref:System.Resources.ResXResourceReader.Close%2A>, see [Cleaning Up Unmanaged Resources](/dotnet/standard/garbage-collection/unmanaged).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a862d-172">下面的示例在控制台中显示文件的资源，然后使用 <xref:System.Resources.ResXResourceReader.Close%2A> 方法关闭读取器并使其资源可用于其他进程。</span><span class="sxs-lookup"><span data-stu-id="a862d-172">The following example displays the resources of a file to the console, and then uses the <xref:System.Resources.ResXResourceReader.Close%2A> method to shut down the reader and to make its resources available for other processes.</span></span>  
  
 [!code-cpp[System.Resources.ResxresourceReader Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/CPP/resxresourcereader.cpp#1)]
 [!code-csharp[System.Resources.ResxresourceReader Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/CS/resxresourcereader.cs#1)]
 [!code-vb[System.Resources.ResxresourceReader Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/VB/resxresourcereader.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="resXResourceReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="a862d-173">如果为 <see langword="true" />，则托管及非托管资源都释放；如果为 <see langword="false" />，则仅释放非托管资源。</span><span class="sxs-lookup"><span data-stu-id="a862d-173"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="a862d-174">释放 <see cref="T:System.Resources.ResXResourceReader" /> 使用的非托管资源，并选择性地释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="a862d-174">Releases the unmanaged resources used by the <see cref="T:System.Resources.ResXResourceReader" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a862d-175">此方法可由 <xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A> 方法或 <xref:System.Object.Finalize%2A?displayProperty=nameWithType> 方法调用。</span><span class="sxs-lookup"><span data-stu-id="a862d-175">This method can be called by either the <xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A> method or the <xref:System.Object.Finalize%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="a862d-176"><xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A> 在 `disposing` 参数设置为 `true`时调用此方法。</span><span class="sxs-lookup"><span data-stu-id="a862d-176"><xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A> invokes this method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="a862d-177"><xref:System.Object.Finalize%2A> 在将 `disposing` 设置为 `false`时调用此方法。</span><span class="sxs-lookup"><span data-stu-id="a862d-177"><xref:System.Object.Finalize%2A> invokes this method with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="a862d-178">当 `disposing` 参数为 `true` 时，此方法释放该 <xref:System.Resources.ResXResourceReader> 引用的、由任何托管对象持有的全部资源。</span><span class="sxs-lookup"><span data-stu-id="a862d-178">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Resources.ResXResourceReader> references.</span></span> <span data-ttu-id="a862d-179">此方法将调用每个被引用对象的 `Dispose` 方法。</span><span class="sxs-lookup"><span data-stu-id="a862d-179">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="a862d-180">
            <see langword="Dispose" /> 可以由其他对象多次调用。</span><span class="sxs-lookup"><span data-stu-id="a862d-180">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="a862d-181">重写 <see langword="Dispose(Boolean)" /> 时，请注意不要引用在以前调用 <see langword="Dispose" /> 时已释放的对象。</span><span class="sxs-lookup"><span data-stu-id="a862d-181">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="a862d-182">有关如何实现 <see langword="Dispose(Boolean)" /> 和有关可释放模式的详细信息，请参阅[实现 Dispose 方法](/dotnet/standard/garbage-collection/implementing-dispose)、<see cref="T:System.IDisposable" />和 <see cref="M:System.Object.Finalize" />。</span><span class="sxs-lookup"><span data-stu-id="a862d-182">For more information about how to implement <see langword="Dispose(Boolean)" /> and about the disposable pattern, see [Implementing a Dispose Method](/dotnet/standard/garbage-collection/implementing-dispose), <see cref="T:System.IDisposable" />, and <see cref="M:System.Object.Finalize" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ResXResourceReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ResXResourceReader ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="resXResourceReader.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a862d-183">此成员重写 <see cref="M:System.Object.Finalize" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a862d-183">This member overrides the <see cref="M:System.Object.Finalize" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromFileContents">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a862d-184">创建一个新 <see cref="T:System.Resources.ResXResourceReader" /> 对象，然后将它初始化，以读取内容为 XML 资源文件格式的字符串。</span><span class="sxs-lookup"><span data-stu-id="a862d-184">Creates a new <see cref="T:System.Resources.ResXResourceReader" /> object and initializes it to read a string whose contents are in the form of an XML resource file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromFileContents">
      <MemberSignature Language="C#" Value="public static System.Resources.ResXResourceReader FromFileContents (string fileContents);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Resources.ResXResourceReader FromFileContents(string fileContents) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.FromFileContents(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFileContents (fileContents As String) As ResXResourceReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Resources::ResXResourceReader ^ FromFileContents(System::String ^ fileContents);" />
      <MemberSignature Language="F#" Value="static member FromFileContents : string -&gt; System.Resources.ResXResourceReader" Usage="System.Resources.ResXResourceReader.FromFileContents fileContents" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Resources.ResXResourceReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileContents" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileContents"><span data-ttu-id="a862d-185">一个字符串，它包含 XML 资源格式的信息。</span><span class="sxs-lookup"><span data-stu-id="a862d-185">A string containing XML resource-formatted information.</span></span></param>
        <summary><span data-ttu-id="a862d-186">创建一个新 <see cref="T:System.Resources.ResXResourceReader" /> 对象，然后将它初始化，以读取内容为 XML 资源文件格式的字符串。</span><span class="sxs-lookup"><span data-stu-id="a862d-186">Creates a new <see cref="T:System.Resources.ResXResourceReader" /> object and initializes it to read a string whose contents are in the form of an XML resource file.</span></span></summary>
        <returns><span data-ttu-id="a862d-187">一个对象，它从 <paramref name="fileContents" /> 字符串读取资源。</span><span class="sxs-lookup"><span data-stu-id="a862d-187">An object that reads resources from the <paramref name="fileContents" /> string.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromFileContents">
      <MemberSignature Language="C#" Value="public static System.Resources.ResXResourceReader FromFileContents (string fileContents, System.ComponentModel.Design.ITypeResolutionService typeResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Resources.ResXResourceReader FromFileContents(string fileContents, class System.ComponentModel.Design.ITypeResolutionService typeResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFileContents (fileContents As String, typeResolver As ITypeResolutionService) As ResXResourceReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Resources::ResXResourceReader ^ FromFileContents(System::String ^ fileContents, System::ComponentModel::Design::ITypeResolutionService ^ typeResolver);" />
      <MemberSignature Language="F#" Value="static member FromFileContents : string * System.ComponentModel.Design.ITypeResolutionService -&gt; System.Resources.ResXResourceReader" Usage="System.Resources.ResXResourceReader.FromFileContents (fileContents, typeResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.ResXResourceReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileContents" Type="System.String" />
        <Parameter Name="typeResolver" Type="System.ComponentModel.Design.ITypeResolutionService" />
      </Parameters>
      <Docs>
        <param name="fileContents"><span data-ttu-id="a862d-188">一个字符串，它包含 XML 资源格式的信息。</span><span class="sxs-lookup"><span data-stu-id="a862d-188">A string containing XML resource-formatted information.</span></span></param>
        <param name="typeResolver"><span data-ttu-id="a862d-189">一个对象，它解析资源中指定的类型名称。</span><span class="sxs-lookup"><span data-stu-id="a862d-189">An object that resolves type names specified in a resource.</span></span></param>
        <summary><span data-ttu-id="a862d-190">创建一个新 <see cref="T:System.Resources.ResXResourceReader" /> 对象，然后将它初始化，以读取内容为 XML 资源文件格式的字符串并使用 <see cref="T:System.ComponentModel.Design.ITypeResolutionService" /> 对象解析资源中指定的类型名称。</span><span class="sxs-lookup"><span data-stu-id="a862d-190">Creates a new <see cref="T:System.Resources.ResXResourceReader" /> object and initializes it to read a string whose contents are in the form of an XML resource file, and to use an <see cref="T:System.ComponentModel.Design.ITypeResolutionService" /> object to resolve type names specified in a resource.</span></span></summary>
        <returns><span data-ttu-id="a862d-191">一个对象，它从 <paramref name="fileContents" /> 字符串读取资源。</span><span class="sxs-lookup"><span data-stu-id="a862d-191">An object that reads resources from the <paramref name="fileContents" /> string.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromFileContents">
      <MemberSignature Language="C#" Value="public static System.Resources.ResXResourceReader FromFileContents (string fileContents, System.Reflection.AssemblyName[] assemblyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Resources.ResXResourceReader FromFileContents(string fileContents, class System.Reflection.AssemblyName[] assemblyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFileContents (fileContents As String, assemblyNames As AssemblyName()) As ResXResourceReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Resources::ResXResourceReader ^ FromFileContents(System::String ^ fileContents, cli::array &lt;System::Reflection::AssemblyName ^&gt; ^ assemblyNames);" />
      <MemberSignature Language="F#" Value="static member FromFileContents : string * System.Reflection.AssemblyName[] -&gt; System.Resources.ResXResourceReader" Usage="System.Resources.ResXResourceReader.FromFileContents (fileContents, assemblyNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.ResXResourceReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileContents" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="assemblyNames" Type="System.Reflection.AssemblyName[]" Index="1" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="fileContents"><span data-ttu-id="a862d-192">一个内容为 XML 资源文件格式的字符串。</span><span class="sxs-lookup"><span data-stu-id="a862d-192">A string whose contents are in the form of an XML resource file.</span></span></param>
        <param name="assemblyNames"><span data-ttu-id="a862d-193"><see cref="T:System.Reflection.AssemblyName" /> 对象的数组，它指定一个或多个程序集。</span><span class="sxs-lookup"><span data-stu-id="a862d-193">An array of <see cref="T:System.Reflection.AssemblyName" /> objects that specifies one or more assemblies.</span></span> <span data-ttu-id="a862d-194">程序集用于将资源中的类型名称解析为一个实际类型。</span><span class="sxs-lookup"><span data-stu-id="a862d-194">The assemblies are used to resolve a type name in the resource to an actual type.</span></span></param>
        <summary><span data-ttu-id="a862d-195">创建一个新 <see cref="T:System.Resources.ResXResourceReader" /> 对象，然后将它初始化，以读取内容为 XML 资源文件格式的字符串并使用 <see cref="T:System.Reflection.AssemblyName" /> 对象数组解析资源中指定的类型名称。</span><span class="sxs-lookup"><span data-stu-id="a862d-195">Creates a new <see cref="T:System.Resources.ResXResourceReader" /> object and initializes it to read a string whose contents are in the form of an XML resource file, and to use an array of <see cref="T:System.Reflection.AssemblyName" /> objects to resolve type names specified in a resource.</span></span></summary>
        <returns><span data-ttu-id="a862d-196">一个对象，它从 <paramref name="fileContents" /> 字符串读取资源。</span><span class="sxs-lookup"><span data-stu-id="a862d-196">An object that reads resources from the <paramref name="fileContents" /> string.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="resXResourceReader.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceReader.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a862d-197">返回当前 <see cref="T:System.Resources.ResXResourceReader" /> 对象的一个枚举器。</span><span class="sxs-lookup"><span data-stu-id="a862d-197">Returns an enumerator for the current <see cref="T:System.Resources.ResXResourceReader" /> object.</span></span></summary>
        <returns><span data-ttu-id="a862d-198">当前 <see cref="T:System.Resources.ResourceReader" /> 对象的一个枚举数。</span><span class="sxs-lookup"><span data-stu-id="a862d-198">An enumerator for the current <see cref="T:System.Resources.ResourceReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a862d-199"><xref:System.Resources.ResXResourceReader.GetEnumerator%2A> 方法检索与当前 <xref:System.Resources.ResXResourceReader> 对象关联的 XML 资源（.resx）流或字符串中的名称/值对。</span><span class="sxs-lookup"><span data-stu-id="a862d-199">The <xref:System.Resources.ResXResourceReader.GetEnumerator%2A> method retrieves the name/value pairs in the XML resource (.resx) stream or string associated with the current <xref:System.Resources.ResXResourceReader> object.</span></span> <span data-ttu-id="a862d-200">但是，如果在调用 <xref:System.Resources.ResXResourceReader.GetEnumerator%2A>之前 <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> 属性设置为 `true`，则会将资源项作为 <xref:System.Resources.ResXDataNode> 对象进行检索。</span><span class="sxs-lookup"><span data-stu-id="a862d-200">However, if the <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> property is set to `true` before you call <xref:System.Resources.ResXResourceReader.GetEnumerator%2A>, the resource items are retrieved as <xref:System.Resources.ResXDataNode> objects.</span></span> <span data-ttu-id="a862d-201">在这种情况下，将返回所有资源节点，而不考虑类型。</span><span class="sxs-lookup"><span data-stu-id="a862d-201">In this case, all resource nodes are returned regardless of type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a862d-202">下面的示例使用 <xref:System.Resources.ResXResourceReader.GetEnumerator%2A> 方法获取用于枚举 .resx 文件中的资源的 <xref:System.Collections.IDictionaryEnumerator> 对象。</span><span class="sxs-lookup"><span data-stu-id="a862d-202">The following example uses the <xref:System.Resources.ResXResourceReader.GetEnumerator%2A> method to obtain an <xref:System.Collections.IDictionaryEnumerator> object that is used to enumerate the resources in a .resx file.</span></span> <span data-ttu-id="a862d-203">该示例包含一个 `CreateResourceFile` 例程，用于创建必要的资源文件。</span><span class="sxs-lookup"><span data-stu-id="a862d-203">The example includes a `CreateResourceFile` routine that creates the necessary resource file.</span></span>  
  
 [!code-csharp[System.Resources.ResXResourceReader.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resxresourcereader.class/cs/resxresourcereader1.cs#1)]
 [!code-vb[System.Resources.ResXResourceReader.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resxresourcereader.class/vb/resxresourcereader1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetMetadataEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IDictionaryEnumerator GetMetadataEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.GetMetadataEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadataEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionaryEnumerator ^ GetMetadataEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetMetadataEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="resXResourceReader.GetMetadataEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a862d-204">提供一个字典枚举数，该枚举数可以从当前 XML 资源文件或流中检索设计时属性。</span><span class="sxs-lookup"><span data-stu-id="a862d-204">Provides a dictionary enumerator that can retrieve the design-time properties from the current XML resource file or stream.</span></span></summary>
        <returns><span data-ttu-id="a862d-205">资源的元数据的枚举数。</span><span class="sxs-lookup"><span data-stu-id="a862d-205">An enumerator for the metadata in a resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a862d-206">资源以名称/值对的形式存储在资源文件或流中。</span><span class="sxs-lookup"><span data-stu-id="a862d-206">Resources are stored as name/value pairs in a resource file or stream.</span></span> <span data-ttu-id="a862d-207">称为 "元数据" 的设计时属性与运行时数据资源一起存储在资源文件或流中。</span><span class="sxs-lookup"><span data-stu-id="a862d-207">Design-time properties, which are called metadata, are stored in the resource file or stream along with runtime data resources.</span></span> <span data-ttu-id="a862d-208"><xref:System.Resources.ResXResourceReader.GetMetadataEnumerator%2A> 方法提供一个 <xref:System.Collections.IDictionaryEnumerator> 对象，该对象可从与当前 <xref:System.Resources.ResXResourceReader> 对象关联的资源文件或流中检索元数据。</span><span class="sxs-lookup"><span data-stu-id="a862d-208">The <xref:System.Resources.ResXResourceReader.GetMetadataEnumerator%2A> method provides an <xref:System.Collections.IDictionaryEnumerator> object that can retrieve the metadata from the resource file or stream associated with the current <xref:System.Resources.ResXResourceReader> object.</span></span> <span data-ttu-id="a862d-209">但是，如果在调用 <xref:System.Resources.ResXResourceReader.GetMetadataEnumerator%2A>之前 <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> 属性设置为 `true`，则不会检索任何资源节点。</span><span class="sxs-lookup"><span data-stu-id="a862d-209">However, if the <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> property is set to `true` before you call <xref:System.Resources.ResXResourceReader.GetMetadataEnumerator%2A>, no resource nodes are retrieved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a862d-210">下面的示例使用 <xref:System.Resources.ResXResourceReader.GetMetadataEnumerator%2A> 方法遍历 XML 资源文件中的元数据资源。</span><span class="sxs-lookup"><span data-stu-id="a862d-210">The following example uses the <xref:System.Resources.ResXResourceReader.GetMetadataEnumerator%2A> method to iterate through the metadata resources in an XML resource file.</span></span> <span data-ttu-id="a862d-211">此代码示例是为 <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> 属性提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="a862d-211">This code example is part of a larger example provided for the <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> property.</span></span>  
  
 [!code-cpp[System.Resources.ResxresourceReader Example#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/CPP/useresxdatanodes.cpp#4)]
 [!code-csharp[System.Resources.ResxresourceReader Example#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/CS/useresxdatanodes.cs#4)]
 [!code-vb[System.Resources.ResxresourceReader Example#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/VB/useresxdatanodes.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="resXResourceReader.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a862d-212">返回当前 <see cref="T:System.Resources.ResXResourceReader" /> 对象的一个枚举器。</span><span class="sxs-lookup"><span data-stu-id="a862d-212">Returns an enumerator for the current <see cref="T:System.Resources.ResXResourceReader" /> object.</span></span> <span data-ttu-id="a862d-213">有关此成员的说明，请参见 <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a862d-213">For a description of this member, see the <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> method.</span></span></summary>
        <returns><span data-ttu-id="a862d-214">一个枚举器，可以循环访问与当前 <see cref="T:System.Resources.ResXResourceReader" /> 对象关联的 XML 资源 (.resx) 流或字符串中的名称/值对。</span><span class="sxs-lookup"><span data-stu-id="a862d-214">An enumerator that can iterate through the name/value pairs in the XML resource (.resx) stream or string associated with the current <see cref="T:System.Resources.ResXResourceReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a862d-215">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="a862d-215">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a862d-216">它只能在 <xref:System.Resources.ResXResourceReader> 实例被强制转换为 <xref:System.Collections.IEnumerable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="a862d-216">It can be used only when the <xref:System.Resources.ResXResourceReader> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span> <span data-ttu-id="a862d-217">若要枚举 .resx 文件中的资源，建议调用 <xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=nameWithType> 方法，然后对返回的 <xref:System.Collections.IDictionaryEnumerator> 对象调用 `MoveNext` 方法。</span><span class="sxs-lookup"><span data-stu-id="a862d-217">To enumerate the resources in a .resx file, we recommend that you call the <xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=nameWithType> method, and then call the `MoveNext` method on the returned <xref:System.Collections.IDictionaryEnumerator> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXResourceReader.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberSignature Language="F#" Value="abstract member System.IDisposable.Dispose : unit -&gt; unit&#xA;override this.System.IDisposable.Dispose : unit -&gt; unit" Usage="resXResourceReader.System.IDisposable.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a862d-218">释放 <see cref="T:System.Resources.ResXResourceReader" /> 使用的非托管资源，并选择性地释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="a862d-218">Releases the unmanaged resources used by the <see cref="T:System.Resources.ResXResourceReader" /> and optionally releases the managed resources.</span></span> <span data-ttu-id="a862d-219">有关此成员的说明，请参见 <see cref="M:System.IDisposable.Dispose" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a862d-219">For a description of this member, see the <see cref="M:System.IDisposable.Dispose" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a862d-220">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="a862d-220">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a862d-221">它只能在 <xref:System.Resources.ResXResourceReader> 实例被强制转换为 <xref:System.IDisposable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="a862d-221">It can be used only when the <xref:System.Resources.ResXResourceReader> instance is cast to an <xref:System.IDisposable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Resources.ResXResourceReader.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="UseResXDataNodes">
      <MemberSignature Language="C#" Value="public bool UseResXDataNodes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseResXDataNodes" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResXResourceReader.UseResXDataNodes" />
      <MemberSignature Language="VB.NET" Value="Public Property UseResXDataNodes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseResXDataNodes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseResXDataNodes : bool with get, set" Usage="System.Resources.ResXResourceReader.UseResXDataNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a862d-222">获取或设置一个值，该值指示是否在读取当前 XML 资源文件或流时返回 <see cref="T:System.Resources.ResXDataNode" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a862d-222">Gets or sets a value that indicates whether <see cref="T:System.Resources.ResXDataNode" /> objects are returned when reading the current XML resource file or stream.</span></span></summary>
        <value><span data-ttu-id="a862d-223">如果检索资源数据节点，则为 <see langword="true" />；如果忽略资源数据节点，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a862d-223"><see langword="true" /> if resource data nodes are retrieved; <see langword="false" /> if resource data nodes are ignored.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a862d-224">可以在开始枚举资源之前设置 <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="a862d-224">You can set the <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> property before you begin enumerating resources.</span></span> <span data-ttu-id="a862d-225">默认情况下，其值为 `false`。</span><span class="sxs-lookup"><span data-stu-id="a862d-225">By default, its value is `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a862d-226">下面的示例枚举并显示 XML 文件中的资源项。</span><span class="sxs-lookup"><span data-stu-id="a862d-226">The following example enumerates and displays resource items in an XML file.</span></span> <span data-ttu-id="a862d-227">最初，<xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> 设置为 `false`，以便在资源文件中出现数据和元数据项时显示它们。</span><span class="sxs-lookup"><span data-stu-id="a862d-227">Initially, <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> is set to `false` to show both data and metadata items as they occur in the resource file.</span></span> <span data-ttu-id="a862d-228">第二个枚举的 <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> 设置为 `true` 以便将资源数据元素作为 <xref:System.Resources.ResXDataNode> 对象返回。</span><span class="sxs-lookup"><span data-stu-id="a862d-228">The second enumeration has the <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> set to `true` so that resource data elements are returned as <xref:System.Resources.ResXDataNode> objects.</span></span>  
  
 [!code-cpp[System.Resources.ResXResourceReader Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/CPP/useresxdatanodes.cpp#2)]
 [!code-csharp[System.Resources.ResXResourceReader Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/CS/useresxdatanodes.cs#2)]
 [!code-vb[System.Resources.ResXResourceReader Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResXResourceReader Example/VB/useresxdatanodes.vb#2)]  
  
 <span data-ttu-id="a862d-229">该示例使用的资源 XML 文件包含一个数据节点和一个元数据节点。</span><span class="sxs-lookup"><span data-stu-id="a862d-229">The resource XML file used by the example contains one data node and one metadata node.</span></span> <span data-ttu-id="a862d-230">若要在前面的示例中使用 XML 文件，请复制以下文本，并将其保存到名为 Resource1.resx 的文件中。</span><span class="sxs-lookup"><span data-stu-id="a862d-230">To use the XML file with the previous example, copy the following text and save it to a file named Resource1.resx.</span></span>  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<root>  
  <resheader name="resmimetype">  
    <value>text/microsoft-resx</value>  
  </resheader>  
  <resheader name="version">  
    <value>2.0</value>  
  </resheader>  
  <resheader name="reader">  
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0,  
           Culture=neutral, PublicKeyToken=b77a5c561934e089  
    </value>  
  </resheader>  
  <resheader name="writer">  
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0,  
           Culture=neutral, PublicKeyToken=b77a5c561934e089  
    </value>  
  </resheader>  
  <data name="DataSample" xml:space="preserve">  
    <value>Sample DATA value</value>  
  </data>  
  <metadata name="MetadataSample">  
    <value>Sample METADATA value</value>  
  </metadata>  
</root>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a862d-231">在设置操作中，资源文件或流的枚举数已经打开。</span><span class="sxs-lookup"><span data-stu-id="a862d-231">In a set operation, the enumerator for the resource file or stream is already open.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
