<Type Name="AsyncInfo" FullName="System.Runtime.InteropServices.WindowsRuntime.AsyncInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="205f131aa0d0f99ecd2785b6c6ce4552de83b061" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86766584" /></Metadata><TypeSignature Language="C#" Value="public static class AsyncInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AsyncInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.WindowsRuntime.AsyncInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class AsyncInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsyncInfo abstract sealed" />
  <TypeSignature Language="F#" Value="type AsyncInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
    <AssemblyVersion>4.0.15.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="dotnet-uwp-10.0">
      <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c3fea-101">提供工厂方法，用于构造与 Windows 运行时异步动作和操作兼容的托管任务的表示形式。</span><span class="sxs-lookup"><span data-stu-id="c3fea-101">Provides factory methods to construct representations of managed tasks that are compatible with Windows Runtime asynchronous actions and operations.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public static Windows.Foundation.IAsyncAction Run (Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&gt; taskProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Windows.Foundation.IAsyncAction Run(class System.Func`2&lt;valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task&gt; taskProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Run (taskProvider As Func(Of CancellationToken, Task)) As IAsyncAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Windows::Foundation::IAsyncAction ^ Run(Func&lt;System::Threading::CancellationToken, System::Threading::Tasks::Task ^&gt; ^ taskProvider);" />
      <MemberSignature Language="F#" Value="static member Run : Func&lt;System.Threading.CancellationToken, System.Threading.Tasks.Task&gt; -&gt; Windows.Foundation.IAsyncAction" Usage="System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run taskProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Windows.Foundation.IAsyncAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskProvider" Type="System.Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="taskProvider"><span data-ttu-id="c3fea-102">表示创建和启动任务的函数的委托。</span><span class="sxs-lookup"><span data-stu-id="c3fea-102">A delegate that represents the function that creates and starts the task.</span></span> <span data-ttu-id="c3fea-103">启动任务由返回的 Windows 运行时异步动作表示。</span><span class="sxs-lookup"><span data-stu-id="c3fea-103">The started task is represented by the Windows Runtime asynchronous action that is returned.</span></span> <span data-ttu-id="c3fea-104">函数被传入一个可以用来监视任务提醒取消请求的取消令牌；如果任务不支持取消，则可以忽略该令牌。</span><span class="sxs-lookup"><span data-stu-id="c3fea-104">The function is passed a cancellation token that the task can monitor to be notified of cancellation requests; you can ignore the token if your task does not support cancellation.</span></span></param>
        <summary><span data-ttu-id="c3fea-105">使用生成启动任务的函数创建并启动 Windows 运行时异步操作。</span><span class="sxs-lookup"><span data-stu-id="c3fea-105">Creates and starts a Windows Runtime asynchronous action by using a function that generates a started task.</span></span> <span data-ttu-id="c3fea-106">该任务支持取消操作。</span><span class="sxs-lookup"><span data-stu-id="c3fea-106">The task can support cancellation.</span></span></summary>
        <returns><span data-ttu-id="c3fea-107">表示由 <paramref name="taskProvider" /> 生成的任务的启动 Windows.Foundation.IAsyncAction 实例。</span><span class="sxs-lookup"><span data-stu-id="c3fea-107">A started Windows.Foundation.IAsyncAction instance that represents the task that is generated by <paramref name="taskProvider" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3fea-108"><paramref name="taskProvider" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="c3fea-108"><paramref name="taskProvider" /> is null.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c3fea-109"><paramref name="taskProvider" /> 将返回未开始的任务。</span><span class="sxs-lookup"><span data-stu-id="c3fea-109"><paramref name="taskProvider" /> returns an unstarted task.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Run&lt;TProgress&gt;">
      <MemberSignature Language="C#" Value="public static Windows.Foundation.IAsyncActionWithProgress&lt;TProgress&gt; Run&lt;TProgress&gt; (Func&lt;System.Threading.CancellationToken,IProgress&lt;TProgress&gt;,System.Threading.Tasks.Task&gt; taskProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Windows.Foundation.IAsyncActionWithProgress`1&lt;!!TProgress&gt; Run&lt;TProgress&gt;(class System.Func`3&lt;valuetype System.Threading.CancellationToken, class System.IProgress`1&lt;!!TProgress&gt;, class System.Threading.Tasks.Task&gt; taskProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run``1(System.Func{System.Threading.CancellationToken,System.IProgress{``0},System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Run(Of TProgress) (taskProvider As Func(Of CancellationToken, IProgress(Of TProgress), Task)) As IAsyncActionWithProgress(Of TProgress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TProgress&gt;&#xA; static Windows::Foundation::IAsyncActionWithProgress&lt;TProgress&gt; ^ Run(Func&lt;System::Threading::CancellationToken, IProgress&lt;TProgress&gt; ^, System::Threading::Tasks::Task ^&gt; ^ taskProvider);" />
      <MemberSignature Language="F#" Value="static member Run : Func&lt;System.Threading.CancellationToken, IProgress&lt;'Progress&gt;, System.Threading.Tasks.Task&gt; -&gt; Windows.Foundation.IAsyncActionWithProgress&lt;'Progress&gt;" Usage="System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run taskProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Windows.Foundation.IAsyncActionWithProgress&lt;TProgress&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProgress" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="taskProvider" Type="System.Func&lt;System.Threading.CancellationToken,System.IProgress&lt;TProgress&gt;,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TProgress"><span data-ttu-id="c3fea-110">用于进度通知的类型。</span><span class="sxs-lookup"><span data-stu-id="c3fea-110">The type that is used for progress notifications.</span></span></typeparam>
        <param name="taskProvider"><span data-ttu-id="c3fea-111">表示创建和启动任务的函数的委托。</span><span class="sxs-lookup"><span data-stu-id="c3fea-111">A delegate that represents the function that creates and starts the task.</span></span> <span data-ttu-id="c3fea-112">启动任务由返回的 Windows 运行时异步动作表示。</span><span class="sxs-lookup"><span data-stu-id="c3fea-112">The started task is represented by the Windows Runtime asynchronous action that is returned.</span></span> <span data-ttu-id="c3fea-113">函数被传入可以用来监视任务提醒取消请求的取消令牌，和用于报告进度的接口；如果任务不支持进度报告或取消，则可以忽视任一或所有参数。</span><span class="sxs-lookup"><span data-stu-id="c3fea-113">The function is passed a cancellation token that the task can monitor to be notified of cancellation requests, and an interface for reporting progress; you can ignore either or both of these arguments if your task does not support progress reporting or cancellation.</span></span></param>
        <summary><span data-ttu-id="c3fea-114">使用生成启动任务的函数创建并启动 Windows 运行时异步操作，该操作包括进度更新。</span><span class="sxs-lookup"><span data-stu-id="c3fea-114">Creates and starts a Windows Runtime asynchronous action that includes progress updates, by using a function that generates a started task.</span></span> <span data-ttu-id="c3fea-115">该任务支持取消操作和进度报告。</span><span class="sxs-lookup"><span data-stu-id="c3fea-115">The task can support cancellation and progress reporting.</span></span></summary>
        <returns><span data-ttu-id="c3fea-116">表示由 <paramref name="taskProvider" /> 生成的任务的启动 Windows.Foundation.IAsyncActionWithProgress&lt;TProgress&gt; 实例。</span><span class="sxs-lookup"><span data-stu-id="c3fea-116">A started Windows.Foundation.IAsyncActionWithProgress&lt;TProgress&gt; instance that represents the task that is generated by <paramref name="taskProvider" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3fea-117"><paramref name="taskProvider" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="c3fea-117"><paramref name="taskProvider" /> is null.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c3fea-118"><paramref name="taskProvider" /> 将返回未开始的任务。</span><span class="sxs-lookup"><span data-stu-id="c3fea-118"><paramref name="taskProvider" /> returns an unstarted task.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Run&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static Windows.Foundation.IAsyncOperation&lt;TResult&gt; Run&lt;TResult&gt; (Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;TResult&gt;&gt; taskProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Windows.Foundation.IAsyncOperation`1&lt;!!TResult&gt; Run&lt;TResult&gt;(class System.Func`2&lt;valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task`1&lt;!!TResult&gt;&gt; taskProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run``1(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Run(Of TResult) (taskProvider As Func(Of CancellationToken, Task(Of TResult))) As IAsyncOperation(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; static Windows::Foundation::IAsyncOperation&lt;TResult&gt; ^ Run(Func&lt;System::Threading::CancellationToken, System::Threading::Tasks::Task&lt;TResult&gt; ^&gt; ^ taskProvider);" />
      <MemberSignature Language="F#" Value="static member Run : Func&lt;System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;'Result&gt;&gt; -&gt; Windows.Foundation.IAsyncOperation&lt;'Result&gt;" Usage="System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run taskProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Windows.Foundation.IAsyncOperation&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="taskProvider" Type="System.Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="c3fea-119">返回结果的类型。</span><span class="sxs-lookup"><span data-stu-id="c3fea-119">The type that returns the result.</span></span></typeparam>
        <param name="taskProvider"><span data-ttu-id="c3fea-120">表示创建和启动任务的函数的委托。</span><span class="sxs-lookup"><span data-stu-id="c3fea-120">A delegate that represents the function that creates and starts the task.</span></span> <span data-ttu-id="c3fea-121">启动任务由返回的 Windows 运行时异步操作表示。</span><span class="sxs-lookup"><span data-stu-id="c3fea-121">The started task is represented by the Windows Runtime asynchronous operation that is returned.</span></span> <span data-ttu-id="c3fea-122">函数被传入一个可以用来监视任务提醒取消请求的取消令牌；如果任务不支持取消，则可以忽略该令牌。</span><span class="sxs-lookup"><span data-stu-id="c3fea-122">The function is passed a cancellation token that the task can monitor to be notified of cancellation requests; you can ignore the token if your task does not support cancellation.</span></span></param>
        <summary><span data-ttu-id="c3fea-123">使用生成可返回结果的启动任务的函数，创建并启动 Windows 运行时异步操作。</span><span class="sxs-lookup"><span data-stu-id="c3fea-123">Creates and starts a Windows Runtime asynchronous operation by using a function that generates a started task that returns results.</span></span> <span data-ttu-id="c3fea-124">该任务支持取消操作。</span><span class="sxs-lookup"><span data-stu-id="c3fea-124">The task can support cancellation.</span></span></summary>
        <returns><span data-ttu-id="c3fea-125">表示由 <paramref name="taskProvider" /> 生成的任务的启动 Windows.Foundation.IAsyncOperation&lt;TResult&gt; 实例。</span><span class="sxs-lookup"><span data-stu-id="c3fea-125">A started Windows.Foundation.IAsyncOperation&lt;TResult&gt; instance that represents the task that is generated by <paramref name="taskProvider" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3fea-126"><paramref name="taskProvider" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="c3fea-126"><paramref name="taskProvider" /> is null.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c3fea-127"><paramref name="taskProvider" /> 将返回未开始的任务。</span><span class="sxs-lookup"><span data-stu-id="c3fea-127"><paramref name="taskProvider" /> returns an unstarted task.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Run&lt;TResult,TProgress&gt;">
      <MemberSignature Language="C#" Value="public static Windows.Foundation.IAsyncOperationWithProgress&lt;TResult,TProgress&gt; Run&lt;TResult,TProgress&gt; (Func&lt;System.Threading.CancellationToken,IProgress&lt;TProgress&gt;,System.Threading.Tasks.Task&lt;TResult&gt;&gt; taskProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Windows.Foundation.IAsyncOperationWithProgress`2&lt;!!TResult, !!TProgress&gt; Run&lt;TResult, TProgress&gt;(class System.Func`3&lt;valuetype System.Threading.CancellationToken, class System.IProgress`1&lt;!!TProgress&gt;, class System.Threading.Tasks.Task`1&lt;!!TResult&gt;&gt; taskProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run``2(System.Func{System.Threading.CancellationToken,System.IProgress{``1},System.Threading.Tasks.Task{``0}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Run(Of TResult, TProgress) (taskProvider As Func(Of CancellationToken, IProgress(Of TProgress), Task(Of TResult))) As IAsyncOperationWithProgress(Of TResult, TProgress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult, typename TProgress&gt;&#xA; static Windows::Foundation::IAsyncOperationWithProgress&lt;TResult, TProgress&gt; ^ Run(Func&lt;System::Threading::CancellationToken, IProgress&lt;TProgress&gt; ^, System::Threading::Tasks::Task&lt;TResult&gt; ^&gt; ^ taskProvider);" />
      <MemberSignature Language="F#" Value="static member Run : Func&lt;System.Threading.CancellationToken, IProgress&lt;'Progress&gt;, System.Threading.Tasks.Task&lt;'Result&gt;&gt; -&gt; Windows.Foundation.IAsyncOperationWithProgress&lt;'Result, 'Progress&gt;" Usage="System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run taskProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Windows.Foundation.IAsyncOperationWithProgress&lt;TResult,TProgress&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProgress" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="taskProvider" Type="System.Func&lt;System.Threading.CancellationToken,System.IProgress&lt;TProgress&gt;,System.Threading.Tasks.Task&lt;TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="c3fea-128">返回结果的类型。</span><span class="sxs-lookup"><span data-stu-id="c3fea-128">The type that returns the result.</span></span></typeparam>
        <typeparam name="TProgress"><span data-ttu-id="c3fea-129">用于进度通知的类型。</span><span class="sxs-lookup"><span data-stu-id="c3fea-129">The type that is used for progress notifications.</span></span></typeparam>
        <param name="taskProvider"><span data-ttu-id="c3fea-130">表示创建和启动任务的函数的委托。</span><span class="sxs-lookup"><span data-stu-id="c3fea-130">A delegate that represents the function that creates and starts the task.</span></span> <span data-ttu-id="c3fea-131">启动任务由返回的 Windows 运行时异步动作表示。</span><span class="sxs-lookup"><span data-stu-id="c3fea-131">The started task is represented by the Windows Runtime asynchronous action that is returned.</span></span> <span data-ttu-id="c3fea-132">函数被传入可以用来监视任务提醒取消请求的取消令牌，和用于报告进度的接口；如果任务不支持进度报告或取消，则可以忽视任一或所有参数。</span><span class="sxs-lookup"><span data-stu-id="c3fea-132">The function is passed a cancellation token that the task can monitor to be notified of cancellation requests, and an interface for reporting progress; you can ignore either or both of these arguments if your task does not support progress reporting or cancellation.</span></span></param>
        <summary><span data-ttu-id="c3fea-133">使用生成可返回结果的启动任务的函数，创建并启动 Windows 运行时异步操作，该操作包括进度更新。</span><span class="sxs-lookup"><span data-stu-id="c3fea-133">Creates and starts a Windows Runtime asynchronous operation that includes progress updates, by using a function that generates a started task that returns results.</span></span> <span data-ttu-id="c3fea-134">该任务支持取消操作和进度报告。</span><span class="sxs-lookup"><span data-stu-id="c3fea-134">The task can support cancellation and progress reporting.</span></span></summary>
        <returns><span data-ttu-id="c3fea-135">表示由 <paramref name="taskProvider" /> 生成的任务的启动 Windows.Foundation.IAsyncOperationWithProgress&lt;TResult,TProgress&gt; 实例。</span><span class="sxs-lookup"><span data-stu-id="c3fea-135">A started Windows.Foundation.IAsyncOperationWithProgress&lt;TResult,TProgress&gt; instance that represents the task that is generated by <paramref name="taskProvider" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3fea-136"><paramref name="taskProvider" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="c3fea-136"><paramref name="taskProvider" /> is null.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c3fea-137"><paramref name="taskProvider" /> 将返回未开始的任务。</span><span class="sxs-lookup"><span data-stu-id="c3fea-137"><paramref name="taskProvider" /> returns an unstarted task.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
