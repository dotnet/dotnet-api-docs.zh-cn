<Type Name="ActionBlock&lt;TInput&gt;" FullName="System.Threading.Tasks.Dataflow.ActionBlock&lt;TInput&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="aca7a2bd448ca62f627ebc76c6dc627f644e9ff5" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83960324" /></Metadata><TypeSignature Language="C#" Value="public sealed class ActionBlock&lt;TInput&gt; : System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ActionBlock`1&lt;TInput&gt; extends System.Object implements class System.Threading.Tasks.Dataflow.IDataflowBlock, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!TInput&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.Dataflow.ActionBlock`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ActionBlock(Of TInput)&#xA;Implements ITargetBlock(Of TInput)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TInput&gt;&#xA;public ref class ActionBlock sealed : System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt;" />
  <TypeSignature Language="F#" Value="type ActionBlock&lt;'Input&gt; = class&#xA;    interface ITargetBlock&lt;'Input&gt;&#xA;    interface IDataflowBlock" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
  <TypeSignature Language="F#" Value="type ActionBlock&lt;'Input&gt; = class&#xA;    interface IDataflowBlock&#xA;    interface ITargetBlock&lt;'Input&gt;" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
    <AssemblyVersion>4.5.25.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.0</AssemblyVersion>
    <AssemblyVersion>4.6.2.0</AssemblyVersion>
    <AssemblyVersion>4.6.3.0</AssemblyVersion>
    <AssemblyVersion>4.6.4.0</AssemblyVersion>
    <AssemblyVersion>4.6.5.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TInput" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.IDataflowBlock</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;dotnet-uwp-10.0">
      <AttributeName>System.Diagnostics.DebuggerDisplay("{DebuggerDisplayContent,nq}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;dotnet-uwp-10.0">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Threading.Tasks.Dataflow.ActionBlock`1/DebugView))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TInput"><span data-ttu-id="8c58e-101">此 <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> 操作的数据类型。</span><span class="sxs-lookup"><span data-stu-id="8c58e-101">The type of data that this <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> operates on.</span></span></typeparam>
    <summary><span data-ttu-id="8c58e-102">提供数据流块，其调用为每个接收的数据提供的 <see cref="T:System.Action`1" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="8c58e-102">Provides a dataflow block that invokes a provided <see cref="T:System.Action`1" /> delegate for every data element received.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [tpl-install-instructions](~/includes/tpl-install-instructions.md)]
  
## Examples  
 <span data-ttu-id="8c58e-103">下面的示例演示如何使用 <xref:System.Threading.Tasks.Dataflow.ActionBlock%601> 类来使用数据流块执行几个计算，并返回执行计算所需的运行时间。</span><span class="sxs-lookup"><span data-stu-id="8c58e-103">The following example shows the use of the <xref:System.Threading.Tasks.Dataflow.ActionBlock%601> class to perform several computations using dataflow blocks, and returns the elapsed time required to perform the computations.</span></span> <span data-ttu-id="8c58e-104">此代码示例摘自为[如何：在数据流块中指定并行度主题中](/dotnet/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block)提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="8c58e-104">This code example is part of a larger example provided for the [How to: Specify the Degree of Parallelism in a Dataflow Block](/dotnet/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block) topic.</span></span>  
  
 [!code-csharp[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_degreeofparallelism/cs/dataflowdegreeofparallelism.cs#2)]
 [!code-vb[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_degreeofparallelism/vb/dataflowdegreeofparallelism.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActionBlock (Action&lt;TInput&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Action`1&lt;!TInput&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Action{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As Action(Of TInput))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActionBlock(Action&lt;TInput&gt; ^ action);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; : Action&lt;'Input&gt; -&gt; System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt;" Usage="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; action" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
        <AssemblyVersion>4.6.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;TInput&gt;" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="8c58e-105">使用接收的每个数据元素调用的操作。</span><span class="sxs-lookup"><span data-stu-id="8c58e-105">The action to invoke with each data element received.</span></span></param>
        <summary><span data-ttu-id="8c58e-106">使用指定的操作初始化 <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8c58e-106">Initializes a new instance of the <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> class with the specified action.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c58e-107"><paramref name="action" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8c58e-107"><paramref name="action" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActionBlock (Func&lt;TInput,System.Threading.Tasks.Task&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;!TInput, class System.Threading.Tasks.Task&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Func{`0,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As Func(Of TInput, Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActionBlock(Func&lt;TInput, System::Threading::Tasks::Task ^&gt; ^ action);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; : Func&lt;'Input, System.Threading.Tasks.Task&gt; -&gt; System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt;" Usage="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; action" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
        <AssemblyVersion>4.6.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;TInput,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="8c58e-108">使用接收的每个数据元素调用的操作。</span><span class="sxs-lookup"><span data-stu-id="8c58e-108">The action to invoke with each data element received.</span></span></param>
        <summary><span data-ttu-id="8c58e-109">使用指定的操作初始化 <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8c58e-109">Initializes a new instance of the <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> class with the specified action.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c58e-110"><paramref name="action" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8c58e-110"><paramref name="action" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActionBlock (Action&lt;TInput&gt; action, System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions dataflowBlockOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Action`1&lt;!TInput&gt; action, class System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions dataflowBlockOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Action{`0},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As Action(Of TInput), dataflowBlockOptions As ExecutionDataflowBlockOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActionBlock(Action&lt;TInput&gt; ^ action, System::Threading::Tasks::Dataflow::ExecutionDataflowBlockOptions ^ dataflowBlockOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; : Action&lt;'Input&gt; * System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions -&gt; System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt;" Usage="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; (action, dataflowBlockOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
        <AssemblyVersion>4.6.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;TInput&gt;" />
        <Parameter Name="dataflowBlockOptions" Type="System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="8c58e-111">使用接收的每个数据元素调用的操作。</span><span class="sxs-lookup"><span data-stu-id="8c58e-111">The action to invoke with each data element received.</span></span></param>
        <param name="dataflowBlockOptions"><span data-ttu-id="8c58e-112">用来配置此 <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" />的选项。</span><span class="sxs-lookup"><span data-stu-id="8c58e-112">The options with which to configure this <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" />.</span></span></param>
        <summary><span data-ttu-id="8c58e-113">初始化指定操作和配置选项的 <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8c58e-113">Initializes a new instance of the <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> class with the specified action and configuration options.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c58e-114">下面的示例演示如何使用 <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.%23ctor%28System.Action%7B%600%7D%2CSystem.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions%29> 构造函数创建新的 <xref:System.Threading.Tasks.Dataflow.ActionBlock%601> 对象。</span><span class="sxs-lookup"><span data-stu-id="8c58e-114">The following example shows how to use the <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.%23ctor%28System.Action%7B%600%7D%2CSystem.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions%29> constructor to create a new <xref:System.Threading.Tasks.Dataflow.ActionBlock%601> object.</span></span> <span data-ttu-id="8c58e-115">此代码示例摘自为[如何：在数据流块中指定并行度主题中](/dotnet/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block)提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="8c58e-115">This code example is part of a larger example provided for the [How to: Specify the Degree of Parallelism in a Dataflow Block](/dotnet/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block) topic.</span></span>  
  
 [!code-csharp[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_degreeofparallelism/cs/dataflowdegreeofparallelism.cs#2)]
 [!code-vb[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_degreeofparallelism/vb/dataflowdegreeofparallelism.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c58e-116"><paramref name="action" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8c58e-116"><paramref name="action" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="8c58e-117">-或-</span><span class="sxs-lookup"><span data-stu-id="8c58e-117">-or-</span></span> 
 <span data-ttu-id="8c58e-118"><paramref name="dataflowBlockOptions" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8c58e-118"><paramref name="dataflowBlockOptions" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActionBlock (Func&lt;TInput,System.Threading.Tasks.Task&gt; action, System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions dataflowBlockOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;!TInput, class System.Threading.Tasks.Task&gt; action, class System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions dataflowBlockOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Func{`0,System.Threading.Tasks.Task},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As Func(Of TInput, Task), dataflowBlockOptions As ExecutionDataflowBlockOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActionBlock(Func&lt;TInput, System::Threading::Tasks::Task ^&gt; ^ action, System::Threading::Tasks::Dataflow::ExecutionDataflowBlockOptions ^ dataflowBlockOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; : Func&lt;'Input, System.Threading.Tasks.Task&gt; * System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions -&gt; System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt;" Usage="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; (action, dataflowBlockOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
        <AssemblyVersion>4.6.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;TInput,System.Threading.Tasks.Task&gt;" />
        <Parameter Name="dataflowBlockOptions" Type="System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="8c58e-119">使用接收的每个数据元素调用的操作。</span><span class="sxs-lookup"><span data-stu-id="8c58e-119">The action to invoke with each data element received.</span></span></param>
        <param name="dataflowBlockOptions"><span data-ttu-id="8c58e-120">用来配置此 <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" />的选项。</span><span class="sxs-lookup"><span data-stu-id="8c58e-120">The options with which to configure this <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" />.</span></span></param>
        <summary><span data-ttu-id="8c58e-121">初始化指定操作和配置选项的 <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8c58e-121">Initializes a new instance of the <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> class with the specified action and configuration options.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c58e-122"><paramref name="action" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8c58e-122"><paramref name="action" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="8c58e-123">-或-</span><span class="sxs-lookup"><span data-stu-id="8c58e-123">-or-</span></span> 
 <span data-ttu-id="8c58e-124"><paramref name="dataflowBlockOptions" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8c58e-124"><paramref name="dataflowBlockOptions" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.Complete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Complete();" />
      <MemberSignature Language="F#" Value="abstract member Complete : unit -&gt; unit&#xA;override this.Complete : unit -&gt; unit" Usage="actionBlock.Complete " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
        <AssemblyVersion>4.6.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8c58e-125">通知数据流块，告知其不应再接受或生成更多消息也不应再使用更多的延迟消息。</span><span class="sxs-lookup"><span data-stu-id="8c58e-125">Signals to the dataflow block  that it shouldn't accept or produce any more messages and shouldn't consume any more postponed messages.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c58e-126">在数据流块上调用 <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Complete%2A> 后，该块将完成（以便其 <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> 任务在处理完以前可用的所有数据后进入最终状态）。</span><span class="sxs-lookup"><span data-stu-id="8c58e-126">After <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Complete%2A> has been called on a dataflow block, that block will complete (so that its  <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> task will enter a final state) after it has processed all previously available data.</span></span> <span data-ttu-id="8c58e-127">此方法不会阻止等待完成，但会启动请求。</span><span class="sxs-lookup"><span data-stu-id="8c58e-127">This method will not block waiting for completion to occur, but will initiate the request.</span></span> <span data-ttu-id="8c58e-128">若要等待完成，请使用 <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="8c58e-128">To wait for completion to occur, use the <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c58e-129">下面的示例演示如何使用 <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Complete%2A> 方法来向数据流块发出信号，指出它不应接受或生成更多的消息，也不会消耗更多的延迟消息。</span><span class="sxs-lookup"><span data-stu-id="8c58e-129">The following example shows the use of the <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Complete%2A> method to signal to the dataflow block  that it shouldn't accept or produce any more messages nor consume any more postponed messages.</span></span> <span data-ttu-id="8c58e-130">此代码示例摘自为[如何：在数据流块中指定并行度主题中](/dotnet/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block)提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="8c58e-130">This code example is part of a larger example provided for the [How to: Specify the Degree of Parallelism in a Dataflow Block](/dotnet/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block) topic.</span></span>  
  
 [!code-csharp[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_degreeofparallelism/cs/dataflowdegreeofparallelism.cs#2)]
 [!code-vb[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_degreeofparallelism/vb/dataflowdegreeofparallelism.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completion">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task Completion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.Task Completion" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Dataflow.ActionBlock`1.Completion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Completion As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::Task ^ Completion { System::Threading::Tasks::Task ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Completion : System.Threading.Tasks.Task" Usage="System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt;.Completion" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
        <AssemblyVersion>4.6.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c58e-131">获取 <see cref="T:System.Threading.Tasks.Task" /> 对象，该对象表示数据流块的异步操作和完成。</span><span class="sxs-lookup"><span data-stu-id="8c58e-131">Gets a  <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation and completion of the dataflow block.</span></span></summary>
        <value><span data-ttu-id="8c58e-132">已完成任务。</span><span class="sxs-lookup"><span data-stu-id="8c58e-132">The completed task.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c58e-133">数据流块在当前未处理消息时，将被视为已完成，并保证其不会再处理其他消息。</span><span class="sxs-lookup"><span data-stu-id="8c58e-133">A dataflow block is considered completed when it is not currently processing a message and when it has guaranteed that it will not process any more messages.</span></span> <span data-ttu-id="8c58e-134">关联的块完成后，返回的 <xref:System.Threading.Tasks.Task> 将转换为已完成状态。</span><span class="sxs-lookup"><span data-stu-id="8c58e-134">The returned <xref:System.Threading.Tasks.Task> will transition to a completed state  when the associated block has completed.</span></span> <span data-ttu-id="8c58e-135">当块根据数据流块的定义语义成功完成其处理时，它将转换为 <xref:System.Threading.Tasks.TaskStatus.RanToCompletion> 状态。</span><span class="sxs-lookup"><span data-stu-id="8c58e-135">It will transition to the <xref:System.Threading.Tasks.TaskStatus.RanToCompletion> state when the block completes its processing successfully according to the dataflow block's defined semantics.</span></span> <span data-ttu-id="8c58e-136">当数据流块由于未经处理的异常而提前完成处理时，它将转换为 <xref:System.Threading.Tasks.TaskStatus.Faulted> 状态，并且当数据流块在收到取消请求后提前处理完时，它将转换为 <xref:System.Threading.Tasks.TaskStatus.Canceled> 状态。</span><span class="sxs-lookup"><span data-stu-id="8c58e-136">It will transition to the <xref:System.Threading.Tasks.TaskStatus.Faulted> state when the dataflow block has completed processing prematurely due to an unhandled exception, and it will transition to the  <xref:System.Threading.Tasks.TaskStatus.Canceled> state when the dataflow block has completed processing prematurely after receiving a cancellation request.</span></span> <span data-ttu-id="8c58e-137">如果任务在 <xref:System.Threading.Tasks.TaskStatus.Faulted> 状态中完成，则其 `Exception` 属性将返回一个 <xref:System.AggregateException> 异常，该异常包含导致块失败的一个或多个异常。</span><span class="sxs-lookup"><span data-stu-id="8c58e-137">If the task completes in the <xref:System.Threading.Tasks.TaskStatus.Faulted> state, its `Exception` property returns an <xref:System.AggregateException> exception that contains one or more exceptions that caused the block to fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c58e-138">下面的示例演示如何使用 <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> 属性等待所有消息通过网络传播。</span><span class="sxs-lookup"><span data-stu-id="8c58e-138">The following example shows how to use the <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> property to wait for all messages to propagate through the network.</span></span> <span data-ttu-id="8c58e-139">此代码示例摘自为[如何：在数据流块中指定并行度主题中](/dotnet/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block)提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="8c58e-139">This code example is part of a larger example provided for the [How to: Specify the Degree of Parallelism in a Dataflow Block](/dotnet/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block) topic.</span></span>  
  
 [!code-csharp[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_degreeofparallelism/cs/dataflowdegreeofparallelism.cs#2)]
 [!code-vb[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_degreeofparallelism/vb/dataflowdegreeofparallelism.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputCount">
      <MemberSignature Language="C#" Value="public int InputCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InputCount" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Dataflow.ActionBlock`1.InputCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InputCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.InputCount : int" Usage="System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt;.InputCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
        <AssemblyVersion>4.6.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c58e-140">获取等待被此代码块处理的输入项的数目。</span><span class="sxs-lookup"><span data-stu-id="8c58e-140">Gets the number of input items waiting to be processed by this block.</span></span></summary>
        <value><span data-ttu-id="8c58e-141">等待被此代码块处理的输入项的数目。</span><span class="sxs-lookup"><span data-stu-id="8c58e-141">The number of input items waiting to be processed by this block.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c58e-142"><xref:System.Threading.Tasks.Dataflow.ActionBlock%601.InputCount%2A> 不包括当前正在由块处理的任何项或已被该块处理的任何项。</span><span class="sxs-lookup"><span data-stu-id="8c58e-142">The <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.InputCount%2A> does not include any items that are currently being processed by the block or any items that have already been processed by the block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Post">
      <MemberSignature Language="C#" Value="public bool Post (TInput item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Post(!TInput item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.Post(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Post (item As TInput) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Post(TInput item);" />
      <MemberSignature Language="F#" Value="member this.Post : 'Input -&gt; bool" Usage="actionBlock.Post item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
        <AssemblyVersion>4.6.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="TInput" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="8c58e-143">提供给目标的项。</span><span class="sxs-lookup"><span data-stu-id="8c58e-143">The item being offered to the target.</span></span></param>
        <summary><span data-ttu-id="8c58e-144">将项目发送到目标数据流块。</span><span class="sxs-lookup"><span data-stu-id="8c58e-144">Posts an item to the target dataflow block.</span></span></summary>
        <returns><span data-ttu-id="8c58e-145">如果项目被发送至数据流块，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8c58e-145"><see langword="true" /> if the item is posted to the dataflow block; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c58e-146">下面的示例演示如何使用 <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Post%2A> 方法将项发布到目标数据流块。</span><span class="sxs-lookup"><span data-stu-id="8c58e-146">The following example shows how to use the <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Post%2A> method to post an item to the target dataflow block.</span></span> <span data-ttu-id="8c58e-147">此代码示例摘自为[如何：在数据流块中指定并行度主题中](/dotnet/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block)提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="8c58e-147">This code example is part of a larger example provided for the [How to: Specify the Degree of Parallelism in a Dataflow Block](/dotnet/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block) topic.</span></span>  
  
 [!code-csharp[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_degreeofparallelism/cs/dataflowdegreeofparallelism.cs#2)]
 [!code-vb[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_degreeofparallelism/vb/dataflowdegreeofparallelism.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.IDataflowBlock.Fault">
      <MemberSignature Language="C#" Value="void IDataflowBlock.Fault (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Sub Fault (exception As Exception) Implements IDataflowBlock.Fault" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(Exception ^ exception) = System::Threading::Tasks::Dataflow::IDataflowBlock::Fault;" />
      <MemberSignature Language="F#" Value="abstract member System.Threading.Tasks.Dataflow.IDataflowBlock.Fault : Exception -&gt; unit&#xA;override this.System.Threading.Tasks.Dataflow.IDataflowBlock.Fault : Exception -&gt; unit" Usage="actionBlock.System.Threading.Tasks.Dataflow.IDataflowBlock.Fault exception" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(System.Exception)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
        <AssemblyVersion>4.6.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception"><span data-ttu-id="8c58e-148">导致出错的异常。</span><span class="sxs-lookup"><span data-stu-id="8c58e-148">The exception that caused the faulting.</span></span></param>
        <summary><span data-ttu-id="8c58e-149">导致数据流块在出错的状态下完成。</span><span class="sxs-lookup"><span data-stu-id="8c58e-149">Causes the dataflow block to complete in a faulted state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c58e-150">在数据流块上调用 <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A> 后，该块将完成，并且其 <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> 任务将进入最终状态。</span><span class="sxs-lookup"><span data-stu-id="8c58e-150">After <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A> has been called on a dataflow block, that block will complete and its  <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> task will enter a final state.</span></span> <span data-ttu-id="8c58e-151">如果对块进行错误处理，就像取消块一样，导致缓冲消息（未处理的输入消息以及 unoffered 的输出消息）丢失。</span><span class="sxs-lookup"><span data-stu-id="8c58e-151">Faulting a block, as with canceling a block, causes buffered messages (unprocessed input messages as well as unoffered output messages) to be lost.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8c58e-152"><paramref name="exception" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8c58e-152"><paramref name="exception" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;.OfferMessage">
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Dataflow.DataflowMessageStatus ITargetBlock&lt;TInput&gt;.OfferMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, TInput messageValue, System.Threading.Tasks.Dataflow.ISourceBlock&lt;TInput&gt; source, bool consumeToAccept);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Threading.Tasks.Dataflow.DataflowMessageStatus System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;.OfferMessage(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, !TInput messageValue, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!TInput&gt; source, bool consumeToAccept) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&lt;TInput&gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function OfferMessage (messageHeader As DataflowMessageHeader, messageValue As TInput, source As ISourceBlock(Of TInput), consumeToAccept As Boolean) As DataflowMessageStatus Implements ITargetBlock(Of TInput).OfferMessage" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Threading::Tasks::Dataflow::DataflowMessageStatus System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;.OfferMessage(System::Threading::Tasks::Dataflow::DataflowMessageHeader messageHeader, TInput messageValue, System::Threading::Tasks::Dataflow::ISourceBlock&lt;TInput&gt; ^ source, bool consumeToAccept) = System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt;::OfferMessage;" />
      <MemberSignature Language="F#" Value="abstract member System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;.OfferMessage : System.Threading.Tasks.Dataflow.DataflowMessageHeader * 'Input * System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Input&gt; * bool -&gt; System.Threading.Tasks.Dataflow.DataflowMessageStatus&#xA;override this.System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;.OfferMessage : System.Threading.Tasks.Dataflow.DataflowMessageHeader * 'Input * System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Input&gt; * bool -&gt; System.Threading.Tasks.Dataflow.DataflowMessageStatus" Usage="actionBlock.System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;.OfferMessage (messageHeader, messageValue, source, consumeToAccept)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
        <AssemblyVersion>4.6.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Dataflow.DataflowMessageStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="messageValue" Type="TInput" />
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TInput&gt;" />
        <Parameter Name="consumeToAccept" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="messageHeader"><span data-ttu-id="8c58e-153">提供的消息的标题。</span><span class="sxs-lookup"><span data-stu-id="8c58e-153">The header of the message being offered.</span></span></param>
        <param name="messageValue"><span data-ttu-id="8c58e-154">要提供的消息值。</span><span class="sxs-lookup"><span data-stu-id="8c58e-154">The value of the message being offered.</span></span></param>
        <param name="source"><span data-ttu-id="8c58e-155">提供消息的数据流块。</span><span class="sxs-lookup"><span data-stu-id="8c58e-155">The dataflow block that is offering the message.</span></span> <span data-ttu-id="8c58e-156">这可能是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8c58e-156">This may be <see langword="null" />.</span></span></param>
        <param name="consumeToAccept"><span data-ttu-id="8c58e-157">如果要指示目标在返回 <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> 前，在进行对 <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" /> 的调用期间同步调用 <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> 以使用消息，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8c58e-157"><see langword="true" /> to instruct the target to call <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> synchronously during the call to <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />, prior to returning <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" />, in order to consume the message; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8c58e-158">提供信息至数据流块，并提供使用或延迟信息的机会。</span><span class="sxs-lookup"><span data-stu-id="8c58e-158">Offers a message to the dataflow block, and gives it the opportunity to consume or postpone the message.</span></span></summary>
        <returns><span data-ttu-id="8c58e-159">所提供消息的状态。</span><span class="sxs-lookup"><span data-stu-id="8c58e-159">The status of the offered message.</span></span>  <span data-ttu-id="8c58e-160">如果消息为该目标接受，则将返回 <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" />，将返回，并且源不应再使用提供的消息，因为其现在归目标所有。</span><span class="sxs-lookup"><span data-stu-id="8c58e-160">If the message was accepted by the target, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> is returned, and the source should no longer use the offered message, because it is now owned by the target.</span></span> <span data-ttu-id="8c58e-161">如果消息因该目标延迟，则将以通知的形式返回 <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" />，该通知是目标稍后可能会尝试使用或保留消息的通知；同时，源仍拥有消息并将其提供给其他块。</span><span class="sxs-lookup"><span data-stu-id="8c58e-161">If the message was postponed by the target, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> is returned as a notification that the target may later attempt to consume or reserve the message; in the meantime, the source still owns the message and may offer it to other blocks.</span></span>  
  
<span data-ttu-id="8c58e-162">如果目标推迟了消息，而源为 <see langword="null" />，则返回 <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />。</span><span class="sxs-lookup"><span data-stu-id="8c58e-162">If the target would have otherwise postponed message, but source was <see langword="null" />, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> is returned.</span></span>  
  
<span data-ttu-id="8c58e-163">如果尝试了接受此则消息但由于将消息交付给另一目标或放弃该消息的源而错过该消息，则将返回 <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" />。</span><span class="sxs-lookup"><span data-stu-id="8c58e-163">If the target tried to accept the message but missed it due to the source delivering the message to another target or simply discarding it, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" /> is returned.</span></span>  
  
<span data-ttu-id="8c58e-164">如果目标选择不接受消息，则将返回 <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />。</span><span class="sxs-lookup"><span data-stu-id="8c58e-164">If the target chose not to accept the message, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> is returned.</span></span> <span data-ttu-id="8c58e-165">如果源选择不接受该消息并将从不从此源接受另一则消息，则将返回 <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" />。</span><span class="sxs-lookup"><span data-stu-id="8c58e-165">If the target chose not to accept the message and will never accept another message from this source, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" /> is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8c58e-166"><paramref name="messageHeader" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="8c58e-166"><paramref name="messageHeader" /> is not valid.</span></span>  
  
<span data-ttu-id="8c58e-167">或者，<paramref name="consumeToAccept" /> 仅在被提供了非 null <paramref name="source" /> 时可能为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="8c58e-167">-or- <paramref name="consumeToAccept" /> may be <see langword="true" /> only if provided with a non-null <paramref name="source" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="actionBlock.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
        <AssemblyVersion>4.6.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8c58e-168">返回一个字符串，该字符串表示此 <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> 实例的格式化名称。</span><span class="sxs-lookup"><span data-stu-id="8c58e-168">Returns a string that represents the formatted name of this <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> instance.</span></span></summary>
        <returns><span data-ttu-id="8c58e-169">一个字符串，该字符串表示此 <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> 实例的格式化名称。</span><span class="sxs-lookup"><span data-stu-id="8c58e-169">A string that represents the formatted name of this <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c58e-170">从 <xref:System.Object> 继承。</span><span class="sxs-lookup"><span data-stu-id="8c58e-170">Inherited from <xref:System.Object>.</span></span> <span data-ttu-id="8c58e-171">使用 <xref:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat%2A> 选项。</span><span class="sxs-lookup"><span data-stu-id="8c58e-171">Uses the  <xref:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat%2A> option.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
