<Type Name="CodePagesEncodingProvider" FullName="System.Text.CodePagesEncodingProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0a882baa946a7452fc1f291ed1ab02234ed37d57" /><Meta Name="ms.sourcegitcommit" Value="4adcc144a575f0b27871c22eeb7c5db11c37f05d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/14/2020" /><Meta Name="ms.locfileid" Value="90066678" /></Metadata><TypeSignature Language="C#" Value="public sealed class CodePagesEncodingProvider : System.Text.EncodingProvider" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CodePagesEncodingProvider extends System.Text.EncodingProvider" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Text.CodePagesEncodingProvider" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CodePagesEncodingProvider&#xA;Inherits EncodingProvider" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodePagesEncodingProvider sealed : System::Text::EncodingProvider" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="F#" Value="type CodePagesEncodingProvider = class&#xA;    inherit EncodingProvider" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="C#" Value="public sealed class CodePagesEncodingProvider" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CodePagesEncodingProvider extends System.Object" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CodePagesEncodingProvider" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodePagesEncodingProvider sealed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
  <TypeSignature Language="F#" Value="type CodePagesEncodingProvider = class" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding.CodePages</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.EncodingProvider</BaseTypeName>
    <BaseTypeName FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1">System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1">
      <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7a6c8-101">为只在桌面 .NET Framework 中可用的代码页提供对编码提供程序的访问权限。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-101">Provides access to an encoding provider for code pages that otherwise are available only in the desktop .NET Framework.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

 <span data-ttu-id="7a6c8-102">Windows 桌面的 .NET Framework 支持大量的 Unicode 和代码页编码。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-102">The .NET Framework for the Windows desktop supports a large set of Unicode and code page encodings.</span></span> <span data-ttu-id="7a6c8-103">另一方面，.NET Core 仅支持以下编码：</span><span class="sxs-lookup"><span data-stu-id="7a6c8-103">.NET Core, on the other hand, supports only the following encodings:</span></span>

-   <span data-ttu-id="7a6c8-104">ASCII (代码页 20127) ，由 <xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType> 属性返回。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-104">ASCII (code page 20127), which is returned by the <xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType> property.</span></span>

-   <span data-ttu-id="7a6c8-105">ISO-8859-1 (代码页 28591) 。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-105">ISO-8859-1 (code page 28591).</span></span>

-   <span data-ttu-id="7a6c8-106">UTF-7 (代码页 65000) ，由 <xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType> 属性返回。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-106">UTF-7 (code page 65000), which is returned by the <xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType> property.</span></span>

-   <span data-ttu-id="7a6c8-107">UTF-8 (代码页 65001) ，由 <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> 属性返回。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-107">UTF-8 (code page 65001), which is returned by the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span>

-   <span data-ttu-id="7a6c8-108">UTF-16 和 UTF-16LE (代码页 1200) ，由 <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> 属性返回。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-108">UTF-16 and UTF-16LE (code page 1200), which is returned by the <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> property.</span></span>

-   <span data-ttu-id="7a6c8-109">UTF-16BE (代码页 1201) ，它是通过调用 <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> 值为的或构造函数进行实例化的 `bigEndian` `true` 。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-109">UTF-16BE (code page 1201), which is instantiated by calling the <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> or <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> constructor with a `bigEndian` value of `true`.</span></span>

-   <span data-ttu-id="7a6c8-110">32和 32LE (代码页 12000) ，由 <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> 属性返回。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-110">UTF-32 and UTF-32LE (code page 12000), which is returned by the <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> property.</span></span>

-   <span data-ttu-id="7a6c8-111">32BE (代码页 12001) ，它是通过调用 <xref:System.Text.UTF32Encoding> 具有参数的构造函数 `bigEndian` 并 `true` 在方法调用中提供的值来进行实例化的。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-111">UTF-32BE (code page 12001), which is instantiated by calling an <xref:System.Text.UTF32Encoding> constructor that has a `bigEndian` parameter and providing a value of `true` in the method call.</span></span>

 <span data-ttu-id="7a6c8-112">除代码页20127之外，不支持代码页编码。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-112">Other than code page 20127, code page encodings are not supported.</span></span>

 <span data-ttu-id="7a6c8-113"><xref:System.Text.CodePagesEncodingProvider>类扩展 <xref:System.Text.EncodingProvider> ，使这些代码页可用于 .net Core。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-113">The <xref:System.Text.CodePagesEncodingProvider> class extends <xref:System.Text.EncodingProvider> to make these code pages available to .NET Core.</span></span> <span data-ttu-id="7a6c8-114">若要使用这些附加代码页，请执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="7a6c8-114">To use these additional code pages, you do the following:</span></span>

-   <span data-ttu-id="7a6c8-115">向项目添加对 System.Text.Encoding.CodePages.dll 程序集的引用。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-115">Add a reference to the System.Text.Encoding.CodePages.dll assembly to your project.</span></span>

-   <span data-ttu-id="7a6c8-116"><xref:System.Text.CodePagesEncodingProvider>从静态属性中检索对象 <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-116">Retrieve a <xref:System.Text.CodePagesEncodingProvider> object from the static <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType> property.</span></span>

-   <span data-ttu-id="7a6c8-117">将 <xref:System.Text.CodePagesEncodingProvider> 对象传递给 <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-117">Pass the <xref:System.Text.CodePagesEncodingProvider> object to the <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> method.</span></span>

 <span data-ttu-id="7a6c8-118"><xref:System.Text.EncodingProvider>注册对象之后，通过调用的重载可以使用它支持的编码 <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> ; 不应调用 <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> 重载。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-118">After an <xref:System.Text.EncodingProvider> object is registered, the encodings that it supports are available by calling the overloads of <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType>; you should not call the <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> overloads.</span></span>

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="GetEncoding">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.CodePages</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="7a6c8-119">.NET Framework 支持大量字符编码和代码页。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-119">The .NET Framework supports a large number of character encodings and code pages.</span></span> <span data-ttu-id="7a6c8-120">可以通过调用方法获取完整的编码列表 <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType> ，.NET Framework 中提供了该方法。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-120">You can get a complete list of encodings by calling the <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType> method, which is available in the .NET Framework.</span></span> <span data-ttu-id="7a6c8-121">另一方面，.NET Core 在默认情况下仅支持以下编码：</span><span class="sxs-lookup"><span data-stu-id="7a6c8-121">On the other hand, .NET Core only supports the following encodings by default:</span></span>

-   <span data-ttu-id="7a6c8-122">ASCII (代码页 20127) ，由 <xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType> 属性返回。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-122">ASCII (code page 20127), which is returned by the <xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType> property.</span></span>

-   <span data-ttu-id="7a6c8-123">ISO-8859-1 (代码页 28591) 。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-123">ISO-8859-1 (code page 28591).</span></span>

-   <span data-ttu-id="7a6c8-124">UTF-7 (代码页 65000) ，由 <xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType> 属性返回。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-124">UTF-7 (code page 65000), which is returned by the <xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType> property.</span></span>

-   <span data-ttu-id="7a6c8-125">UTF-8 (代码页 65001) ，由 <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> 属性返回。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-125">UTF-8 (code page 65001), which is returned by the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span>

-   <span data-ttu-id="7a6c8-126">UTF-16 和 UTF-16LE (代码页 1200) ，由 <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> 属性返回。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-126">UTF-16 and UTF-16LE (code page 1200), which is returned by the <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> property.</span></span>

-   <span data-ttu-id="7a6c8-127">UTF-16BE (代码页 1201) ，它是通过调用 <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> 值为的或构造函数进行实例化的 `bigEndian` `true` 。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-127">UTF-16BE (code page 1201), which is instantiated by calling the <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> or <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> constructor with a `bigEndian` value of `true`.</span></span>

-   <span data-ttu-id="7a6c8-128">32和 32LE (代码页 12000) ，由 <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> 属性返回。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-128">UTF-32 and UTF-32LE (code page 12000), which is returned by the <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> property.</span></span>

-   <span data-ttu-id="7a6c8-129">32BE (代码页 12001) ，它是通过调用 <xref:System.Text.UTF32Encoding> 具有参数的构造函数 `bigEndian` 并 `true` 在方法调用中提供的值来进行实例化的。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-129">UTF-32BE (code page 12001), which is instantiated by calling an <xref:System.Text.UTF32Encoding> constructor that has a `bigEndian` parameter and providing a value of `true` in the method call.</span></span>

 <span data-ttu-id="7a6c8-130">若要检索 .NET Framework 中存在但在 .NET Core 中不存在的编码，请执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="7a6c8-130">To retrieve an encoding that is present in .NET Framework but not in .NET Core, you do the following:</span></span>

-   <span data-ttu-id="7a6c8-131">向项目添加对 *System.Text.Encoding.CodePages.dll* 程序集的引用。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-131">Add a reference to the *System.Text.Encoding.CodePages.dll* assembly to your project.</span></span>

-   <span data-ttu-id="7a6c8-132">获取 <xref:System.Text.EncodingProvider> 静态属性中的对象 <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-132">Get the <xref:System.Text.EncodingProvider> object from the static <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType> property.</span></span>

-   <span data-ttu-id="7a6c8-133">将 <xref:System.Text.EncodingProvider> 对象传递给 <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> 方法，以使对象提供的编码 <xref:System.Text.EncodingProvider> 可供公共语言运行时使用。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-133">Pass the <xref:System.Text.EncodingProvider> object to the <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> method to make the encodings supplied by the <xref:System.Text.EncodingProvider> object available to the common language runtime.</span></span>

-   <span data-ttu-id="7a6c8-134">调用 <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> 重载以检索编码。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-134">Call an <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> overload to retrieve the encoding.</span></span> <span data-ttu-id="7a6c8-135"><xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType>方法将调用相应的 <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> 方法来确定它是否可以提供请求的编码。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-135">The <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> method will call the corresponding <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> method to determine whether it can supply the requested encoding.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding GetEncoding (int codepage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoding GetEncoding(int32 codepage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.CodePagesEncodingProvider.GetEncoding(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoding (codepage As Integer) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoding ^ GetEncoding(int codepage);" />
      <MemberSignature Language="F#" Value="override this.GetEncoding : int -&gt; System.Text.Encoding" Usage="codePagesEncodingProvider.GetEncoding codepage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.CodePages</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepage" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="codepage"><span data-ttu-id="7a6c8-136">编码提供程序可能支持的首选编码的代码页标识符。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-136">The code page identifier of the preferred encoding which the encoding provider may support.</span></span></param>
        <summary><span data-ttu-id="7a6c8-137">返回与指定代码页标识符关联的编码。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-137">Returns the encoding associated with the specified code page identifier.</span></span></summary>
        <returns><span data-ttu-id="7a6c8-138">与指定代码页标识符关联的编码；如果提供程序不支持请求的代码页编码，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-138">The encoding associated with the specified code page identifier, or <see langword="null" /> if the provider does not support the requested codepage encoding.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding GetEncoding (string name);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoding GetEncoding(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.CodePagesEncodingProvider.GetEncoding(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoding (name As String) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoding ^ GetEncoding(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetEncoding : string -&gt; System.Text.Encoding" Usage="codePagesEncodingProvider.GetEncoding name" />
      <MemberSignature Language="C#" Value="public override System.Text.Encoding? GetEncoding (string name);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.CodePages</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;net-5.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="7a6c8-139">编码提供程序可能支持的首选编码的代码页名称。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-139">The code page name of the preferred encoding which the encoding provider may support.</span></span></param>
        <summary><span data-ttu-id="7a6c8-140">返回与指定代码页名称关联的编码。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-140">Returns the encoding associated with the specified code page name.</span></span></summary>
        <returns><span data-ttu-id="7a6c8-141">与指定代码页关联的编码；如果提供程序不支持请求的编码，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-141">The encoding associated with the specified code page, or <see langword="null" /> if the provider does not support the requested encoding.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEncodings">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;System.Text.EncodingInfo&gt; GetEncodings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Text.EncodingInfo&gt; GetEncodings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.CodePagesEncodingProvider.GetEncodings" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncodings () As IEnumerable(Of EncodingInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IEnumerable&lt;System::Text::EncodingInfo ^&gt; ^ GetEncodings();" />
      <MemberSignature Language="F#" Value="override this.GetEncodings : unit -&gt; seq&lt;System.Text.EncodingInfo&gt;" Usage="codePagesEncodingProvider.GetEncodings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.CodePages</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Text.EncodingInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7a6c8-142">返回一个数组，其中包含 <see cref="T:System.Text.CodePagesEncodingProvider" /> 支持的所有编码。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-142">Returns an array that contains all the encodings that are supported by the <see cref="T:System.Text.CodePagesEncodingProvider" />.</span></span></summary>
        <returns><span data-ttu-id="7a6c8-143">一个数组，其中包含所有受支持的编码。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-143">An array that contains all the supported encodings.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public static System.Text.EncodingProvider Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.EncodingProvider Instance" />
      <MemberSignature Language="DocId" Value="P:System.Text.CodePagesEncodingProvider.Instance" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Instance As EncodingProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::EncodingProvider ^ Instance { System::Text::EncodingProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Instance : System.Text.EncodingProvider" Usage="System.Text.CodePagesEncodingProvider.Instance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.CodePages</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncodingProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7a6c8-144">获取桌面 .NET Framework 支持但当前 .NET Framework 平台不支持的代码页的编码提供程序。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-144">Gets an encoding provider for code pages supported in the desktop .NET Framework but not in the current .NET Framework platform.</span></span></summary>
        <value><span data-ttu-id="7a6c8-145">允许访问当前 .NET Framework 平台上不支持的编码的编码提供程序。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-145">An encoding provider that allows access to encodings not supported on the current .NET Framework platform.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 <span data-ttu-id="7a6c8-146">.NET Framework 支持大量字符编码和代码页。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-146">The .NET Framework supports a large number of character encodings and code pages.</span></span> <span data-ttu-id="7a6c8-147">可以通过调用方法获取完整的编码列表 <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType> ，.NET Framework 中提供了该方法。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-147">You can get a complete list of encodings by calling the <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType> method, which is available in the .NET Framework.</span></span> <span data-ttu-id="7a6c8-148">另一方面，.NET Core 在默认情况下仅支持以下编码：</span><span class="sxs-lookup"><span data-stu-id="7a6c8-148">On the other hand, .NET Core only supports the following encodings by default:</span></span>

-   <span data-ttu-id="7a6c8-149">ASCII (代码页 20127) ，由 <xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType> 属性返回。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-149">ASCII (code page 20127), which is returned by the <xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType> property.</span></span>

-   <span data-ttu-id="7a6c8-150">ISO-8859-1 (代码页 28591) 。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-150">ISO-8859-1 (code page 28591).</span></span>

-   <span data-ttu-id="7a6c8-151">UTF-7 (代码页 65000) ，由 <xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType> 属性返回。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-151">UTF-7 (code page 65000), which is returned by the <xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType> property.</span></span>

-   <span data-ttu-id="7a6c8-152">UTF-8 (代码页 65001) ，由 <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> 属性返回。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-152">UTF-8 (code page 65001), which is returned by the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span>

-   <span data-ttu-id="7a6c8-153">UTF-16 和 UTF-16LE (代码页 1200) ，由 <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> 属性返回。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-153">UTF-16 and UTF-16LE (code page 1200), which is returned by the <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> property.</span></span>

-   <span data-ttu-id="7a6c8-154">UTF-16BE (代码页 1201) ，它是通过调用 <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> 值为的或构造函数进行实例化的 `bigEndian` `true` 。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-154">UTF-16BE (code page 1201), which is instantiated by calling the <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> or <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> constructor with a `bigEndian` value of `true`.</span></span>

-   <span data-ttu-id="7a6c8-155">32和 32LE (代码页 12000) ，由 <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> 属性返回。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-155">UTF-32 and UTF-32LE (code page 12000), which is returned by the <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> property.</span></span>

-   <span data-ttu-id="7a6c8-156">32BE (代码页 12001) ，它是通过调用 <xref:System.Text.UTF32Encoding> 具有参数的构造函数 `bigEndian` 并 `true` 在方法调用中提供的值来进行实例化的。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-156">UTF-32BE (code page 12001), which is instantiated by calling an <xref:System.Text.UTF32Encoding> constructor that has a `bigEndian` parameter and providing a value of `true` in the method call.</span></span>

 <span data-ttu-id="7a6c8-157">若要检索在 Windows 桌面的 .NET Framework 中存在但在 .NET Core 中不存在的编码，请执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="7a6c8-157">To retrieve an encoding that is present in the .NET Framework on the Windows desktop but not in .NET Core, you do the following:</span></span>

-   <span data-ttu-id="7a6c8-158">向项目添加对 System.Text.Encoding.CodePages.dll 程序集的引用。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-158">Add a reference to the System.Text.Encoding.CodePages.dll assembly to your project.</span></span>

-   <span data-ttu-id="7a6c8-159">获取 <xref:System.Text.EncodingProvider> 静态属性中的对象 <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-159">Get the <xref:System.Text.EncodingProvider> object from the static <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType> property.</span></span>

-   <span data-ttu-id="7a6c8-160">将 <xref:System.Text.EncodingProvider> 对象传递给 <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> 方法，以使对象提供的编码 <xref:System.Text.EncodingProvider> 可供公共语言运行时使用。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-160">Pass the <xref:System.Text.EncodingProvider> object to the <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> method to make the encodings supplied by the <xref:System.Text.EncodingProvider> object available to the common language runtime.</span></span>

-   <span data-ttu-id="7a6c8-161">调用 <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> 重载以检索编码。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-161">Call an <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> overload to retrieve the encoding.</span></span> <span data-ttu-id="7a6c8-162"><xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType>方法将调用相应的 <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> 方法来确定它是否可以提供请求的编码。</span><span class="sxs-lookup"><span data-stu-id="7a6c8-162">The <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> method will call the corresponding <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> method to determine whether it can supply the requested encoding.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
