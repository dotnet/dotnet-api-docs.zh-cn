<Type Name="EncoderFallback" FullName="System.Text.EncoderFallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e67085bef402670ea298a1d5e5adaaa71c0bfac4" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89880062" /></Metadata><TypeSignature Language="C#" Value="public abstract class EncoderFallback" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EncoderFallback extends System.Object" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncoderFallback" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EncoderFallback" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncoderFallback abstract" />
  <TypeSignature Language="F#" Value="type EncoderFallback = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit EncoderFallback extends System.Object" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Text.Encoding" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Text.Encoding" FromVersion="4.1.0.0" To="System.Runtime" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.Text.Encoding" FromVersion="4.1.1.0" To="System.Runtime" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Text.Encoding" FromVersion="4.1.2.0" To="System.Runtime" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="31c7a-101">为不能转换为已编码输出字节序列的输入字符提供称为“回退”的失败处理机制。</span><span class="sxs-lookup"><span data-stu-id="31c7a-101">Provides a failure-handling mechanism, called a fallback, for an input character that cannot be converted to an encoded output byte sequence.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31c7a-102">编码将 Unicode 字符映射到编码的字节序列。</span><span class="sxs-lookup"><span data-stu-id="31c7a-102">An encoding maps a Unicode character to an encoded sequence of bytes.</span></span> <span data-ttu-id="31c7a-103">特定的编码由派生自类的类型表示 <xref:System.Text.Encoding> 。</span><span class="sxs-lookup"><span data-stu-id="31c7a-103">A particular encoding is represented by a type that is derived from the <xref:System.Text.Encoding> class.</span></span> <span data-ttu-id="31c7a-104">具体而言，通过调用编码类型的方法将字符编码为字节序列 <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> ，并通过调用或方法将字节序列解码为字符数组或字符串 <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> <xref:System.Text.Encoding.GetString%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="31c7a-104">Specifically, a character is encoded to a byte sequence by calling the encoding type's <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> method, and the byte sequence is decoded to a character array or a string by calling the <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> or <xref:System.Text.Encoding.GetString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="31c7a-105">如果输入字符无法由编码表示，则编码操作可能会失败。</span><span class="sxs-lookup"><span data-stu-id="31c7a-105">An encoding operation can fail if the input character cannot be represented by the encoding.</span></span> <span data-ttu-id="31c7a-106">例如， <xref:System.Text.ASCIIEncoding> 对象无法对其 Unicode 码位值不在 u + 0000 到 u + 007F 范围内的字符进行编码。</span><span class="sxs-lookup"><span data-stu-id="31c7a-106">For example, an <xref:System.Text.ASCIIEncoding> object cannot encode a character whose Unicode code point value is outside the range U+0000 to U+007F.</span></span>  
  
 <span data-ttu-id="31c7a-107">当无法执行编码转换时，.NET Framework 提供称为 "回退" 的失败处理机制。</span><span class="sxs-lookup"><span data-stu-id="31c7a-107">When an encoding conversion cannot be performed, the .NET Framework provides a failure-handling mechanism called a fallback.</span></span> <span data-ttu-id="31c7a-108">应用程序可以使用预定义的 .NET Framework 编码器回退，也可以创建派生自和类的自定义编码器回退 <xref:System.Text.EncoderFallback> <xref:System.Text.EncoderFallbackBuffer> 。</span><span class="sxs-lookup"><span data-stu-id="31c7a-108">Your application can use predefined .NET Framework encoder fallbacks, or it can create a custom encoder fallback derived from the <xref:System.Text.EncoderFallback> and <xref:System.Text.EncoderFallbackBuffer> classes.</span></span>  
  
 <span data-ttu-id="31c7a-109"><xref:System.Text.EncoderFallback> 和 <xref:System.Text.EncoderFallbackBuffer> 是 .NET Framework 中所有编码回退处理程序的基类。</span><span class="sxs-lookup"><span data-stu-id="31c7a-109"><xref:System.Text.EncoderFallback> and <xref:System.Text.EncoderFallbackBuffer> are the base classes for all encoding fallback handlers in the .NET Framework.</span></span> <span data-ttu-id="31c7a-110">它们支持以下三种类型的回退处理机制：</span><span class="sxs-lookup"><span data-stu-id="31c7a-110">They support the following three kinds of fallback handling mechanisms:</span></span>  
  
-   <span data-ttu-id="31c7a-111">最佳回退，可映射无法编码为近似等效项的有效 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="31c7a-111">Best-fit fallback, which maps valid Unicode characters that cannot be encoded to an approximate equivalent.</span></span> <span data-ttu-id="31c7a-112">例如，类的最佳回退处理程序 <xref:System.Text.ASCIIEncoding> 可能会将Æ (u + 00C6) 映射到 AE (u + 0041 + u + 0045) 。</span><span class="sxs-lookup"><span data-stu-id="31c7a-112">For example, a best-fit fallback handler for the <xref:System.Text.ASCIIEncoding> class might map Æ (U+00C6) to AE (U+0041 + U+0045).</span></span> <span data-ttu-id="31c7a-113">还可以实现最佳回退处理程序，以将 (（如西里尔) ）的一种字母表为其他 (如拉丁语或罗马字) 。</span><span class="sxs-lookup"><span data-stu-id="31c7a-113">A best-fit fallback handler might also be implemented to transliterate one alphabet (such as Cyrillic) to another (such as Latin or Roman).</span></span> <span data-ttu-id="31c7a-114">.NET Framework 不提供任何公共最佳回退实现。</span><span class="sxs-lookup"><span data-stu-id="31c7a-114">The .NET Framework does not provide any public best-fit fallback implementations.</span></span>  
  
-   <span data-ttu-id="31c7a-115">替换回退：替换不能用预定义字符串编码的每个字符。</span><span class="sxs-lookup"><span data-stu-id="31c7a-115">Replacement fallback, which replaces each character that cannot be encoded with a predefined string.</span></span> <span data-ttu-id="31c7a-116">.NET Framework 提供预定义的替换回退处理程序。</span><span class="sxs-lookup"><span data-stu-id="31c7a-116">The .NET Framework provides a predefined replacement fallback handler.</span></span> <span data-ttu-id="31c7a-117"><xref:System.Text.EncoderReplacementFallback>类将不能解码的每个字节序列替换为问号字符 ( "？" 或 u + 003F) 或替换字符 (u + FFFD) 。</span><span class="sxs-lookup"><span data-stu-id="31c7a-117">The <xref:System.Text.EncoderReplacementFallback> class replaces each byte sequence that cannot be decoded with a question mark character ("?", or U+003F) or a REPLACEMENT CHARACTER (U+FFFD).</span></span> <span data-ttu-id="31c7a-118">您可以通过在对构造函数的调用中指定替换来自定义替换字符串 <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="31c7a-118">You can customize the replacement string by specifying a substitute in the call to the <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="31c7a-119">发出替换字符串后，编码操作继续转换输入的其余部分。</span><span class="sxs-lookup"><span data-stu-id="31c7a-119">After the substitute string is emitted, the encoding operation continues converting the remainder of the input.</span></span>  
  
-   <span data-ttu-id="31c7a-120">异常回退，当无法对字符进行编码时，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="31c7a-120">Exception fallback, which throws an exception when a character cannot be encoded.</span></span> <span data-ttu-id="31c7a-121">.NET Framework 提供预定义的异常回退处理程序。</span><span class="sxs-lookup"><span data-stu-id="31c7a-121">The .NET Framework provides a predefined exception fallback handler.</span></span> <span data-ttu-id="31c7a-122"><xref:System.Text.EncoderExceptionFallback> <xref:System.Text.EncoderFallbackException> 当遇到无效的字符，并且编码操作终止时，类将引发。</span><span class="sxs-lookup"><span data-stu-id="31c7a-122">The <xref:System.Text.EncoderExceptionFallback> class throws an <xref:System.Text.EncoderFallbackException> when an invalid character is encountered, and the encoding operation terminates.</span></span>  
  
 <span data-ttu-id="31c7a-123">如果选择实现自定义解决方案，则必须重写类的以下抽象成员 <xref:System.Text.EncoderFallback> ：</span><span class="sxs-lookup"><span data-stu-id="31c7a-123">If you choose to implement a custom solution, you must override the following abstract members of the <xref:System.Text.EncoderFallback> class:</span></span>  
  
-   <span data-ttu-id="31c7a-124"><xref:System.Text.EncoderFallback.CreateFallbackBuffer%2A>方法，它返回派生自的类实例 <xref:System.Text.EncoderFallbackBuffer> 。</span><span class="sxs-lookup"><span data-stu-id="31c7a-124">The <xref:System.Text.EncoderFallback.CreateFallbackBuffer%2A> method, which returns a class instance derived from <xref:System.Text.EncoderFallbackBuffer>.</span></span> <span data-ttu-id="31c7a-125">根据要开发的回退处理程序的类型， <xref:System.Text.EncoderFallbackBuffer> 实现负责执行映射或替换，或引发异常。</span><span class="sxs-lookup"><span data-stu-id="31c7a-125">Depending on the type of fallback handler that you are developing, the <xref:System.Text.EncoderFallbackBuffer> implementation is responsible for performing the mapping or replacement, or for throwing the exception.</span></span>  
  
-   <span data-ttu-id="31c7a-126"><xref:System.Text.EncoderFallback.MaxCharCount%2A>属性，该属性返回回退实现可返回的最大字符数。</span><span class="sxs-lookup"><span data-stu-id="31c7a-126">The <xref:System.Text.EncoderFallback.MaxCharCount%2A> property, which returns the maximum number of characters that the fallback implementation can return.</span></span> <span data-ttu-id="31c7a-127">对于异常回退处理程序，其值应为零。</span><span class="sxs-lookup"><span data-stu-id="31c7a-127">For an exception fallback handler, its value should be zero.</span></span>  
  
 <span data-ttu-id="31c7a-128">有关编码、解码和回退策略的详细信息，请参阅 [.NET Framework 中的字符编码](/dotnet/standard/base-types/character-encoding)。</span><span class="sxs-lookup"><span data-stu-id="31c7a-128">For more information about encoding, decoding, and fallback strategies, see [Character Encoding in the .NET Framework](/dotnet/standard/base-types/character-encoding).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.EncoderFallbackBuffer" />
    <altmember cref="T:System.Text.EncoderReplacementFallback" />
    <altmember cref="T:System.Text.EncoderExceptionFallback" />
    <related type="Article" href="/dotnet/standard/base-types/character-encoding"><span data-ttu-id="31c7a-129">.NET Framework 中的字符编码</span><span class="sxs-lookup"><span data-stu-id="31c7a-129">Character Encoding in the .NET Framework</span></span></related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/Cyrillic-to-Roman-f7e88b29"><span data-ttu-id="31c7a-130">示例：西里尔文到罗马音译实用工具</span><span class="sxs-lookup"><span data-stu-id="31c7a-130">Sample: Cyrillic to Roman Transliteration Utility</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EncoderFallback ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallback.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EncoderFallback();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="31c7a-131">初始化 <see cref="T:System.Text.EncoderFallback" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="31c7a-131">Initializes a new instance of the <see cref="T:System.Text.EncoderFallback" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFallbackBuffer">
      <MemberSignature Language="C#" Value="public abstract System.Text.EncoderFallbackBuffer CreateFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.EncoderFallbackBuffer CreateFallbackBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallback.CreateFallbackBuffer" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateFallbackBuffer () As EncoderFallbackBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Text::EncoderFallbackBuffer ^ CreateFallbackBuffer();" />
      <MemberSignature Language="F#" Value="abstract member CreateFallbackBuffer : unit -&gt; System.Text.EncoderFallbackBuffer" Usage="encoderFallback.CreateFallbackBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncoderFallbackBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="31c7a-132">在派生类中重写时，将初始化 <see cref="T:System.Text.EncoderFallbackBuffer" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="31c7a-132">When overridden in a derived class, initializes a new instance of the <see cref="T:System.Text.EncoderFallbackBuffer" /> class.</span></span></summary>
        <returns><span data-ttu-id="31c7a-133">提供编码器回退缓冲区的对象。</span><span class="sxs-lookup"><span data-stu-id="31c7a-133">An object that provides a fallback buffer for an encoder.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31c7a-134">此方法返回派生自的对象 <xref:System.Text.EncoderFallbackBuffer> ，该对象负责执行回退操作。</span><span class="sxs-lookup"><span data-stu-id="31c7a-134">This method returns an object derived from <xref:System.Text.EncoderFallbackBuffer> that is responsible for performing the fallback operation.</span></span> <span data-ttu-id="31c7a-135">例如， <xref:System.Text.EncoderFallback> 在 .NET Framework 中预定义的实现，该 <xref:System.Text.EncoderReplacementFallback.CreateFallbackBuffer%2A?displayProperty=nameWithType> 方法返回一个 <xref:System.Text.EncoderReplacementFallbackBuffer> 对象，该 <xref:System.Text.EncoderExceptionFallback.CreateFallbackBuffer%2A?displayProperty=nameWithType> 方法返回一个 <xref:System.Text.EncoderExceptionFallbackBuffer> 对象。</span><span class="sxs-lookup"><span data-stu-id="31c7a-135">For example, of the predefined <xref:System.Text.EncoderFallback> implementations in the .NET Framework, the <xref:System.Text.EncoderReplacementFallback.CreateFallbackBuffer%2A?displayProperty=nameWithType> method returns an <xref:System.Text.EncoderReplacementFallbackBuffer> object, and the <xref:System.Text.EncoderExceptionFallback.CreateFallbackBuffer%2A?displayProperty=nameWithType> method returns an <xref:System.Text.EncoderExceptionFallbackBuffer> object.</span></span>  
  
 <span data-ttu-id="31c7a-136"><xref:System.Text.EncoderFallback.CreateFallbackBuffer%2A>当遇到无法进行编码的第一个字符时，编码器将调用方法。</span><span class="sxs-lookup"><span data-stu-id="31c7a-136">The <xref:System.Text.EncoderFallback.CreateFallbackBuffer%2A> method is called by an encoder when it encounters the first character that it is unable to encode.</span></span> <span data-ttu-id="31c7a-137"><xref:System.Text.EncoderFallbackBuffer>此方法返回的对象提供回退实现，负责返回替换无法编码的字符的字节数组。</span><span class="sxs-lookup"><span data-stu-id="31c7a-137">The <xref:System.Text.EncoderFallbackBuffer> object returned by this method provides the fallback implementation and is responsible for returning the byte array that replaces the character or characters that could not be encoded.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.DecoderFallbackBuffer" />
        <related type="Article" href="/dotnet/standard/base-types/character-encoding"><span data-ttu-id="31c7a-138">.NET Framework 中的字符编码</span><span class="sxs-lookup"><span data-stu-id="31c7a-138">Character Encoding in the .NET Framework</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExceptionFallback">
      <MemberSignature Language="C#" Value="public static System.Text.EncoderFallback ExceptionFallback { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.EncoderFallback ExceptionFallback" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderFallback.ExceptionFallback" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ExceptionFallback As EncoderFallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::EncoderFallback ^ ExceptionFallback { System::Text::EncoderFallback ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionFallback : System.Text.EncoderFallback" Usage="System.Text.EncoderFallback.ExceptionFallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncoderFallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="31c7a-139">获取一个对象，在无法对输入字符进行编码时，该对象将引发异常。</span><span class="sxs-lookup"><span data-stu-id="31c7a-139">Gets an object that throws an exception when an input character cannot be encoded.</span></span></summary>
        <value><span data-ttu-id="31c7a-140">从 <see cref="T:System.Text.EncoderFallback" /> 类派生的类型。</span><span class="sxs-lookup"><span data-stu-id="31c7a-140">A type derived from the <see cref="T:System.Text.EncoderFallback" /> class.</span></span> <span data-ttu-id="31c7a-141">默认值为 <see cref="T:System.Text.EncoderExceptionFallback" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="31c7a-141">The default value is a <see cref="T:System.Text.EncoderExceptionFallback" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCharCount">
      <MemberSignature Language="C#" Value="public abstract int MaxCharCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxCharCount" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderFallback.MaxCharCount" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MaxCharCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int MaxCharCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxCharCount : int" Usage="System.Text.EncoderFallback.MaxCharCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="31c7a-142">当用派生类重写时，获取当前 <see cref="T:System.Text.EncoderFallback" /> 对象能返回的最大字符数。</span><span class="sxs-lookup"><span data-stu-id="31c7a-142">When overridden in a derived class, gets the maximum number of characters the current <see cref="T:System.Text.EncoderFallback" /> object can return.</span></span></summary>
        <value><span data-ttu-id="31c7a-143">当前 <see cref="T:System.Text.EncoderFallback" /> 对象能返回的最大字符数。</span><span class="sxs-lookup"><span data-stu-id="31c7a-143">The maximum number of characters the current <see cref="T:System.Text.EncoderFallback" /> object can return.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31c7a-144">对于异常回退处理程序，此属性应返回零。</span><span class="sxs-lookup"><span data-stu-id="31c7a-144">For an exception fallback handler, this property should return zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplacementFallback">
      <MemberSignature Language="C#" Value="public static System.Text.EncoderFallback ReplacementFallback { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.EncoderFallback ReplacementFallback" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderFallback.ReplacementFallback" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ReplacementFallback As EncoderFallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::EncoderFallback ^ ReplacementFallback { System::Text::EncoderFallback ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReplacementFallback : System.Text.EncoderFallback" Usage="System.Text.EncoderFallback.ReplacementFallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncoderFallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="31c7a-145">获取一个对象，该对象会输出一个替代字符串来代替无法编码的输入字符。</span><span class="sxs-lookup"><span data-stu-id="31c7a-145">Gets an object that outputs a substitute string in place of an input character that cannot be encoded.</span></span></summary>
        <value><span data-ttu-id="31c7a-146">从 <see cref="T:System.Text.EncoderFallback" /> 类派生的类型。</span><span class="sxs-lookup"><span data-stu-id="31c7a-146">A type derived from the <see cref="T:System.Text.EncoderFallback" /> class.</span></span> <span data-ttu-id="31c7a-147">默认值是 <see cref="T:System.Text.EncoderReplacementFallback" /> 对象，该对象将未知输入字符替换为问号字符（“?”，U+003F）。</span><span class="sxs-lookup"><span data-stu-id="31c7a-147">The default value is a <see cref="T:System.Text.EncoderReplacementFallback" /> object that replaces unknown input characters with the QUESTION MARK character ("?", U+003F).</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
