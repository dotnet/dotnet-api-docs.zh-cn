<Type Name="Rune" FullName="System.Text.Rune">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d225ea5ac7f03ccca20b87a17830cf73ffdd9aa8" /><Meta Name="ms.sourcegitcommit" Value="930a2e90be5bc29a285f5df9da5cd44a74574596" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/23/2020" /><Meta Name="ms.locfileid" Value="91130240" /></Metadata><TypeSignature Language="C#" Value="public struct Rune : IComparable, IComparable&lt;System.Text.Rune&gt;, IEquatable&lt;System.Text.Rune&gt;" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit Rune extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;valuetype System.Text.Rune&gt;, class System.IEquatable`1&lt;valuetype System.Text.Rune&gt;" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="DocId" Value="T:System.Text.Rune" />
  <TypeSignature Language="VB.NET" Value="Public Structure Rune&#xA;Implements IComparable, IComparable(Of Rune), IEquatable(Of Rune)" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="C++ CLI" Value="public value class Rune : IComparable, IComparable&lt;System::Text::Rune&gt;, IEquatable&lt;System::Text::Rune&gt;" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="F#" Value="type Rune = struct" />
  <TypeSignature Language="C#" Value="public struct Rune : IComparable&lt;System.Text.Rune&gt;, IEquatable&lt;System.Text.Rune&gt;" FrameworkAlternate="netcore-3.0;netcore-3.1" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit Rune extends System.ValueType implements class System.IComparable`1&lt;valuetype System.Text.Rune&gt;, class System.IEquatable`1&lt;valuetype System.Text.Rune&gt;" FrameworkAlternate="netcore-3.0;netcore-3.1" />
  <TypeSignature Language="VB.NET" Value="Public Structure Rune&#xA;Implements IComparable(Of Rune), IEquatable(Of Rune)" FrameworkAlternate="netcore-3.0;netcore-3.1" />
  <TypeSignature Language="C++ CLI" Value="public value class Rune : IComparable&lt;System::Text::Rune&gt;, IEquatable&lt;System::Text::Rune&gt;" FrameworkAlternate="netcore-3.0;netcore-3.1" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="net-5.0">
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Text.Rune&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Text.Rune&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="01189-101">表示 Unicode 标量值（[ U+0000..U+D7FF ]，含首尾值；或 [ U+E000..U+10FFFF ]，含首尾值）。</span><span class="sxs-lookup"><span data-stu-id="01189-101">Represents a Unicode scalar value ([ U+0000..U+D7FF ], inclusive; or [ U+E000..U+10FFFF ], inclusive).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="01189-102"><xref:System.Text.Rune>实例表示一个 Unicode 标量值，这意味着，任何不包括代理项范围的代码点都 (U + D800.。U + DFFF) 。</span><span class="sxs-lookup"><span data-stu-id="01189-102">A <xref:System.Text.Rune> instance represents a Unicode scalar value, which means any code point excluding the surrogate range (U+D800..U+DFFF).</span></span> <span data-ttu-id="01189-103">类型的构造函数和转换运算符会验证输入，因此使用者可以调用 Api，假定基础 <xref:System.Text.Rune> 实例的格式正确。</span><span class="sxs-lookup"><span data-stu-id="01189-103">The type's constructors and conversion operators validate the input, so consumers can call the APIs assuming that the underlying <xref:System.Text.Rune> instance is well formed.</span></span>

<span data-ttu-id="01189-104">如果你不熟悉 Unicode 标量值、代码点、代理项范围和格式正确的术语，请参阅 [.net 中的字符编码简介](/dotnet/standard/base-types/character-encoding-introduction)。</span><span class="sxs-lookup"><span data-stu-id="01189-104">If you aren't familiar with the terms Unicode scalar value, code point, surrogate range, and well-formed, see [Introduction to character encoding in .NET](/dotnet/standard/base-types/character-encoding-introduction).</span></span>

<span data-ttu-id="01189-105">以下各节将对此进行说明：</span><span class="sxs-lookup"><span data-stu-id="01189-105">The following sections explain:</span></span>

* [<span data-ttu-id="01189-106">何时使用 Rune 类型</span><span class="sxs-lookup"><span data-stu-id="01189-106">When to use the Rune type</span></span>](#when-to-use-the-rune-type)
* [<span data-ttu-id="01189-107">何时不使用 Rune 类型</span><span class="sxs-lookup"><span data-stu-id="01189-107">When not to use the Rune type</span></span>](#when-not-to-use-rune)
* [<span data-ttu-id="01189-108">如何实例化 Rune</span><span class="sxs-lookup"><span data-stu-id="01189-108">How to instantiate a Rune</span></span>](#how-to-instantiate-a-rune)
* [<span data-ttu-id="01189-109">如何查询 Rune 实例的属性</span><span class="sxs-lookup"><span data-stu-id="01189-109">How to query properties of a Rune instance</span></span>](#query-properties-of-a-rune)
* [<span data-ttu-id="01189-110">将转换为 `Rune` utf-8 或 utf-16</span><span class="sxs-lookup"><span data-stu-id="01189-110">Convert a `Rune` to UTF-8 or UTF-16</span></span>](#convert-a-rune-to-utf-8-or-utf-16)
* [<span data-ttu-id="01189-111">.NET 中的 Rune 与其他语言</span><span class="sxs-lookup"><span data-stu-id="01189-111">Rune in .NET vs. other languages</span></span>](#rune-in-net-vs-other-languages)

### <a name="when-to-use-the-rune-type"></a><span data-ttu-id="01189-112">何时使用 Rune 类型</span><span class="sxs-lookup"><span data-stu-id="01189-112">When to use the Rune type</span></span>

<span data-ttu-id="01189-113">`Rune`如果你的代码，请考虑使用类型：</span><span class="sxs-lookup"><span data-stu-id="01189-113">Consider using the `Rune` type if your code:</span></span>

* <span data-ttu-id="01189-114">调用需要 Unicode 标量值的 Api</span><span class="sxs-lookup"><span data-stu-id="01189-114">Calls APIs that require Unicode scalar values</span></span>
* <span data-ttu-id="01189-115">显式处理代理项对</span><span class="sxs-lookup"><span data-stu-id="01189-115">Explicitly handles surrogate pairs</span></span>

#### <a name="apis-that-require-unicode-scalar-values"></a><span data-ttu-id="01189-116">需要 Unicode 标量值的 Api</span><span class="sxs-lookup"><span data-stu-id="01189-116">APIs that require Unicode scalar values</span></span>

<span data-ttu-id="01189-117">如果代码 `char` 在或中循环访问实例 `string` `ReadOnlySpan<char>` ，则某些 `char` 方法将无法在 `char` 代理项范围内的实例上正常工作。</span><span class="sxs-lookup"><span data-stu-id="01189-117">If your code iterates through the `char` instances in a `string` or a `ReadOnlySpan<char>`, some of the `char` methods won't work correctly on `char` instances that are in the surrogate range.</span></span> <span data-ttu-id="01189-118">例如，以下 Api 需要标量值 `char` 才能正常工作：</span><span class="sxs-lookup"><span data-stu-id="01189-118">For example, the following APIs require a scalar value `char` to work correctly:</span></span>

* <xref:System.Char.GetNumericValue%2A?displayProperty=nameWithType>
* <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>
* <xref:System.Char.IsDigit%2A?displayProperty=nameWithType>
* <xref:System.Char.IsLetter%2A?displayProperty=nameWithType>
* <xref:System.Char.IsLetterOrDigit%2A?displayProperty=nameWithType>
* <xref:System.Char.IsLower%2A?displayProperty=nameWithType>
* <xref:System.Char.IsNumber%2A?displayProperty=nameWithType>
* <xref:System.Char.IsPunctuation%2A?displayProperty=nameWithType>
* <xref:System.Char.IsSymbol%2A?displayProperty=nameWithType>
* <xref:System.Char.IsUpper%2A?displayProperty=nameWithType>

<span data-ttu-id="01189-119">下面的示例演示如果有任何 `char` 实例是代理项码位，代码将无法正常运行：</span><span class="sxs-lookup"><span data-stu-id="01189-119">The following example shows code that won't work correctly if any of the `char` instances are surrogate code points:</span></span>

:::code language="csharp" source="~/snippets/System.Text/Rune/csharp/CountLettersInString.cs" id="SnippetBadExample":::

<span data-ttu-id="01189-120">下面是适用于的等效代码 `ReadOnlySpan<char>` ：</span><span class="sxs-lookup"><span data-stu-id="01189-120">Here's equivalent code that works with a `ReadOnlySpan<char>`:</span></span>

:::code language="csharp" source="~/snippets/System.Text/Rune/csharp/CountLettersInSpan.cs" id="SnippetBadExample":::

<span data-ttu-id="01189-121">前面的代码使用某些语言（如英语）正常工作：</span><span class="sxs-lookup"><span data-stu-id="01189-121">The preceding code works correctly with some languages such as English:</span></span>

```csharp
CountLettersInString("Hello")
// Returns 5
```

<span data-ttu-id="01189-122">但对于基本多语言平面以外的语言（如 Osage），它将无法正常工作：</span><span class="sxs-lookup"><span data-stu-id="01189-122">But it won't work correctly for languages outside the Basic Multilingual Plane, such as Osage:</span></span>

```csharp
CountLettersInString("𐓏𐓘𐓻𐓘𐓻𐓟 𐒻𐓟")
// Returns 0
```

<span data-ttu-id="01189-123">此方法返回不正确的 Osage 文本结果的原因是 `char` Osage 字母的实例是代理项码位。</span><span class="sxs-lookup"><span data-stu-id="01189-123">The reason this method returns incorrect results for Osage text is that the `char` instances for Osage letters are surrogate code points.</span></span> <span data-ttu-id="01189-124">没有单个代理项码位具有足够的信息来确定它是否是字母。</span><span class="sxs-lookup"><span data-stu-id="01189-124">No single surrogate code point has enough information to determine if it's a letter.</span></span>

<span data-ttu-id="01189-125">如果将此代码更改为使用 `Rune` 而不是 `char` ，则该方法将与基本多语言平面之外的代码点一起正常工作：</span><span class="sxs-lookup"><span data-stu-id="01189-125">If you change this code to use `Rune` instead of `char`, the method works correctly with code points outside the Basic Multilingual Plane:</span></span>

:::code language="csharp" source="~/snippets/System.Text/Rune/csharp/CountLettersInString.cs" id="SnippetGoodExample":::

<span data-ttu-id="01189-126">下面是适用于的等效代码 `ReadOnlySpan<char>` ：</span><span class="sxs-lookup"><span data-stu-id="01189-126">Here's equivalent code that works with a `ReadOnlySpan<char>`:</span></span>

:::code language="csharp" source="~/snippets/System.Text/Rune/csharp/CountLettersInSpan.cs" id="SnippetGoodExample":::

<span data-ttu-id="01189-127">前面的代码会正确统计 Osage 字母：</span><span class="sxs-lookup"><span data-stu-id="01189-127">The preceding code counts Osage letters correctly:</span></span>

```csharp
CountLettersInString("𐓏𐓘𐓻𐓘𐓻𐓟 𐒻𐓟")
// Returns 8
```

#### <a name="code-that-explicitly-handles-surrogate-pairs"></a><span data-ttu-id="01189-128">显式处理代理项对的代码</span><span class="sxs-lookup"><span data-stu-id="01189-128">Code that explicitly handles surrogate pairs</span></span>

<span data-ttu-id="01189-129">`Rune`如果你的代码调用显式操作代理项码位的 api （例如以下方法），请考虑使用类型：</span><span class="sxs-lookup"><span data-stu-id="01189-129">Consider using the `Rune` type if your code calls APIs that explicitly operate on surrogate code points, such as the following methods:</span></span>

* <xref:System.Char.IsSurrogate%2A?displayProperty=nameWithType>
* <xref:System.Char.IsSurrogatePair%2A?displayProperty=nameWithType>
* <xref:System.Char.IsHighSurrogate%2A?displayProperty=nameWithType>
* <xref:System.Char.IsLowSurrogate%2A?displayProperty=nameWithType>
* <xref:System.Char.ConvertFromUtf32%2A?displayProperty=nameWithType>
* <xref:System.Char.ConvertToUtf32%2A?displayProperty=nameWithType>

<span data-ttu-id="01189-130">例如，下面的方法具有用于处理代理项对的特殊逻辑 `char` ：</span><span class="sxs-lookup"><span data-stu-id="01189-130">For example, the following method has special logic to deal with surrogate `char` pairs:</span></span>

:::code language="csharp" source="~/snippets/System.Text/Rune/csharp/WorkWithSurrogates.cs" id="SnippetUseChar":::

<span data-ttu-id="01189-131">此类代码在使用时更简单 `Rune` ，如以下示例中所示：</span><span class="sxs-lookup"><span data-stu-id="01189-131">Such code is simpler if it uses `Rune`, as in the following example:</span></span>

:::code language="csharp" source="~/snippets/System.Text/Rune/csharp/WorkWithSurrogates.cs" id="SnippetUseRune":::

### <a name="when-not-to-use-rune"></a><span data-ttu-id="01189-132">何时不使用 `Rune`</span><span class="sxs-lookup"><span data-stu-id="01189-132">When not to use `Rune`</span></span>

<span data-ttu-id="01189-133">如果你的代码为，则无需使用 `Rune` 类型：</span><span class="sxs-lookup"><span data-stu-id="01189-133">You don't need to use the `Rune` type if your code:</span></span>

* <span data-ttu-id="01189-134">查找完全 `char` 匹配项</span><span class="sxs-lookup"><span data-stu-id="01189-134">Looks for exact `char` matches</span></span>
* <span data-ttu-id="01189-135">拆分已知 char 值上的字符串</span><span class="sxs-lookup"><span data-stu-id="01189-135">Splits a string on a known char value</span></span>

<span data-ttu-id="01189-136">`Rune`如果你的代码：</span><span class="sxs-lookup"><span data-stu-id="01189-136">Using the `Rune` type may return incorrect results if your code:</span></span>

* <span data-ttu-id="01189-137">计算中的显示字符数 `string`</span><span class="sxs-lookup"><span data-stu-id="01189-137">Counts the number of display characters in a `string`</span></span>

#### <a name="look-for-exact-char-matches"></a><span data-ttu-id="01189-138">查找完全 `char` 匹配项</span><span class="sxs-lookup"><span data-stu-id="01189-138">Look for exact `char` matches</span></span>

<span data-ttu-id="01189-139">下面的代码循环访问 `string` 查找特定字符，并返回第一个匹配项的索引。</span><span class="sxs-lookup"><span data-stu-id="01189-139">The following code iterates through a `string` looking for specific characters, returning the index of the first match.</span></span> <span data-ttu-id="01189-140">无需更改此代码即可使用 `Rune` ，因为代码查找由单个表示的字符 `char` 。</span><span class="sxs-lookup"><span data-stu-id="01189-140">There's no need to change this code to use `Rune`, as the code is looking for characters that are represented by a single `char`.</span></span>

:::code language="csharp" source="~/snippets/System.Text/Rune/csharp/FindFirstLetter.cs" id="SnippetExample":::

#### <a name="split-a-string-on-a-known-char"></a><span data-ttu-id="01189-141">拆分已知的字符串 `char`</span><span class="sxs-lookup"><span data-stu-id="01189-141">Split a string on a known `char`</span></span>

<span data-ttu-id="01189-142">通常调用 `string.Split` 和使用分隔符（如 `' '` (space) 或 `','` (逗号) ），如以下示例中所示：</span><span class="sxs-lookup"><span data-stu-id="01189-142">It's common to call `string.Split` and use delimiters such as `' '` (space) or `','` (comma), as in the following example:</span></span>

:::code language="csharp" source="~/snippets/System.Text/Rune/csharp/SplitStringOnChar.cs" id="SnippetExample":::

<span data-ttu-id="01189-143">无需 `Rune` 在此处使用，因为代码正在查找由单个表示的字符 `char` 。</span><span class="sxs-lookup"><span data-stu-id="01189-143">There is no need to use `Rune` here, because the code is looking for characters that are represented by a single `char`.</span></span>

#### <a name="count-the-number-of-display-characters-in-a-string"></a><span data-ttu-id="01189-144">计算中的显示字符数 `string`</span><span class="sxs-lookup"><span data-stu-id="01189-144">Count the number of display characters in a `string`</span></span>

<span data-ttu-id="01189-145">`Rune`字符串中的实例数可能与显示字符串时所显示的用户可识别字符的数目不匹配。</span><span class="sxs-lookup"><span data-stu-id="01189-145">The number of `Rune` instances in a string might not match the number of user-perceivable characters shown when displaying the string.</span></span>

<span data-ttu-id="01189-146">由于 `Rune` 实例表示 unicode 标量值，因此遵循 [unicode 文本分段指导原则](https://www.unicode.org/reports/tr29/) 的组件可 `Rune` 用作统计显示字符的构建基块。</span><span class="sxs-lookup"><span data-stu-id="01189-146">Since `Rune` instances represent Unicode scalar values, components that follow the [Unicode text segmentation guidelines](https://www.unicode.org/reports/tr29/) can use `Rune` as a building block for counting display characters.</span></span>

<span data-ttu-id="01189-147"><xref:System.Globalization.StringInfo>类型可用于统计显示字符，但在 .net 以外的 .net 实现中，它不会在所有方案中正确计数。</span><span class="sxs-lookup"><span data-stu-id="01189-147">The <xref:System.Globalization.StringInfo> type can be used to count display characters, but in implementations of .NET other than .NET 5 it doesn't count correctly in all scenarios.</span></span>

<span data-ttu-id="01189-148">有关详细信息，请参阅 [字形群集](/dotnet/standard/base-types/character-encoding-introduction#grapheme-clusters)。</span><span class="sxs-lookup"><span data-stu-id="01189-148">For more information, see [Grapheme clusters](/dotnet/standard/base-types/character-encoding-introduction#grapheme-clusters).</span></span>

### <a name="how-to-instantiate-a-rune"></a><span data-ttu-id="01189-149">如何实例化 `Rune`</span><span class="sxs-lookup"><span data-stu-id="01189-149">How to instantiate a `Rune`</span></span>

<span data-ttu-id="01189-150">可以通过多种方法获取 `Rune` 实例。</span><span class="sxs-lookup"><span data-stu-id="01189-150">There are several ways to get a `Rune` instance.</span></span> <span data-ttu-id="01189-151">可以使用构造函数 `Rune` 直接从中创建：</span><span class="sxs-lookup"><span data-stu-id="01189-151">You can use a constructor to create a `Rune` directly from:</span></span>

* <span data-ttu-id="01189-152">码位。</span><span class="sxs-lookup"><span data-stu-id="01189-152">A code point.</span></span>

  :::code language="csharp" source="~/snippets/System.Text/Rune/csharp/InstantiateRunes.cs" id="SnippetCodePoint":::

* <span data-ttu-id="01189-153">单个 `char`。</span><span class="sxs-lookup"><span data-stu-id="01189-153">A single `char`.</span></span>

  :::code language="csharp" source="~/snippets/System.Text/Rune/csharp/InstantiateRunes.cs" id="SnippetChar":::

* <span data-ttu-id="01189-154">代理项 `char` 对。</span><span class="sxs-lookup"><span data-stu-id="01189-154">A surrogate `char` pair.</span></span>

  :::code language="csharp" source="~/snippets/System.Text/Rune/csharp/InstantiateRunes.cs" id="SnippetSurrogate":::

<span data-ttu-id="01189-155">`ArgumentException`如果输入不表示有效的 Unicode 标量值，则所有构造函数都将引发。</span><span class="sxs-lookup"><span data-stu-id="01189-155">All of the constructors throw an `ArgumentException` if the input doesn't represent a valid Unicode scalar value.</span></span>

<span data-ttu-id="01189-156">有一些 <xref:System.Text.Rune.TryCreate%2A?displayProperty=nameWithType> 方法可用于不希望在失败时引发异常的调用方。</span><span class="sxs-lookup"><span data-stu-id="01189-156">There are <xref:System.Text.Rune.TryCreate%2A?displayProperty=nameWithType> methods available for callers who don't want exceptions to be thrown on failure.</span></span>

<span data-ttu-id="01189-157">`Rune` 也可以从现有输入序列中读取实例。</span><span class="sxs-lookup"><span data-stu-id="01189-157">`Rune` instances can also be read from existing input sequences.</span></span> <span data-ttu-id="01189-158">例如，如果给定 `ReadOnlySpan<char>` 表示 utf-16 数据的，则该方法将 <xref:System.Text.Rune.DecodeFromUtf16%2A?displayProperty=nameWithType> 返回 `Rune` 输入范围开始处的第一个实例。</span><span class="sxs-lookup"><span data-stu-id="01189-158">For instance, given a `ReadOnlySpan<char>` that represents UTF-16 data, the <xref:System.Text.Rune.DecodeFromUtf16%2A?displayProperty=nameWithType> method returns the first `Rune` instance at the beginning of the input span.</span></span> <span data-ttu-id="01189-159">此 <xref:System.Text.Rune.DecodeFromUtf8%2A?displayProperty=nameWithType> 方法的操作方式类似于接受 `ReadOnlySpan<byte>` 表示 utf-8 数据的参数。</span><span class="sxs-lookup"><span data-stu-id="01189-159">The <xref:System.Text.Rune.DecodeFromUtf8%2A?displayProperty=nameWithType> method operates similarly, accepting a `ReadOnlySpan<byte>` parameter that represents UTF-8 data.</span></span> <span data-ttu-id="01189-160">可以从跨度的末尾而不是在范围的开头读取等效的方法。</span><span class="sxs-lookup"><span data-stu-id="01189-160">There are equivalent methods to read from the end of the span instead of the beginning of the span.</span></span>

### <a name="query-properties-of-a-rune"></a><span data-ttu-id="01189-161">的查询属性 `Rune`</span><span class="sxs-lookup"><span data-stu-id="01189-161">Query properties of a `Rune`</span></span>

<span data-ttu-id="01189-162">若要获取实例的整数码位值 `Rune` ，请使用 <xref:System.Text.Rune.Value?displayProperty=nameWithType> 属性。</span><span class="sxs-lookup"><span data-stu-id="01189-162">To get the integer code point value of a `Rune` instance, use the <xref:System.Text.Rune.Value?displayProperty=nameWithType> property.</span></span>

:::code language="csharp" source="~/snippets/System.Text/Rune/csharp/InstantiateRunes.cs" id="SnippetValue":::

<span data-ttu-id="01189-163">类型上也提供了许多可用的静态 Api `char` `Rune` 。</span><span class="sxs-lookup"><span data-stu-id="01189-163">Many of the static APIs available on the `char` type are also available on the `Rune` type.</span></span> <span data-ttu-id="01189-164">例如， <xref:System.Text.Rune.IsWhiteSpace%2A?displayProperty=nameWithType> 和 <xref:System.Text.Rune.GetUnicodeCategory%2A?displayProperty=nameWithType> 是与 <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType> 和方法等效的 <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="01189-164">For instance, <xref:System.Text.Rune.IsWhiteSpace%2A?displayProperty=nameWithType> and <xref:System.Text.Rune.GetUnicodeCategory%2A?displayProperty=nameWithType> are equivalents to <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType> and <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="01189-165">这些 `Rune` 方法正确地处理代理项对。</span><span class="sxs-lookup"><span data-stu-id="01189-165">The `Rune` methods correctly handle surrogate pairs.</span></span>

<span data-ttu-id="01189-166">下面的代码示例采用 `ReadOnlySpan<char>` 作为输入，并在跨度的起始和结束之间进行裁剪，每个 `Rune` 不是字母或数字。</span><span class="sxs-lookup"><span data-stu-id="01189-166">The following example code takes a `ReadOnlySpan<char>` as input and trims from both the start and the end of the span every `Rune` that isn't a letter or a digit.</span></span>

:::code language="csharp" source="~/snippets/System.Text/Rune/csharp/TrimNonLettersAndNonDigits.cs" id="SnippetExample":::

<span data-ttu-id="01189-167">与之间存在一些 API 差异 `char` `Rune` 。</span><span class="sxs-lookup"><span data-stu-id="01189-167">There are some API differences between `char` and `Rune`.</span></span> <span data-ttu-id="01189-168">例如：</span><span class="sxs-lookup"><span data-stu-id="01189-168">For example:</span></span>

* <span data-ttu-id="01189-169">没有等效项 `Rune` <xref:System.Char.IsSurrogate(System.Char)?displayProperty=nameWithType> ，因为 `Rune` 根据定义，实例永远不能是代理项码位。</span><span class="sxs-lookup"><span data-stu-id="01189-169">There is no `Rune` equivalent  to <xref:System.Char.IsSurrogate(System.Char)?displayProperty=nameWithType>, since `Rune` instances by definition can never be surrogate code points.</span></span>
* <span data-ttu-id="01189-170"><xref:System.Text.Rune.GetUnicodeCategory%2A?displayProperty=nameWithType>并不总是返回与相同的结果 <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="01189-170">The <xref:System.Text.Rune.GetUnicodeCategory%2A?displayProperty=nameWithType> doesn't always return the same result as <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="01189-171">它会返回与相同的值 <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="01189-171">It does return the same value as <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="01189-172">有关详细信息，请参阅中的 **备注** <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="01189-172">For more information, see the **Remarks** on <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>.</span></span>

### <a name="convert-a-rune-to-utf-8-or-utf-16"></a><span data-ttu-id="01189-173">将转换为 `Rune` utf-8 或 utf-16</span><span class="sxs-lookup"><span data-stu-id="01189-173">Convert a `Rune` to UTF-8 or UTF-16</span></span>

<span data-ttu-id="01189-174">由于 `Rune` 是一个 Unicode 标量值，因此可将其转换为 utf-8、utf-16 或 utf-32 编码。</span><span class="sxs-lookup"><span data-stu-id="01189-174">Since a `Rune` is a Unicode scalar value, it can be converted to UTF-8, UTF-16, or UTF-32 encoding.</span></span> <span data-ttu-id="01189-175">`Rune`类型内置了对 utf-8 和 utf-16 的转换支持。</span><span class="sxs-lookup"><span data-stu-id="01189-175">The `Rune` type has built-in support for conversion to UTF-8 and UTF-16.</span></span>

<span data-ttu-id="01189-176">将 <xref:System.Text.Rune.EncodeToUtf16%2A?displayProperty=nameWithType> 实例转换 `Rune` 为 `char` 实例。</span><span class="sxs-lookup"><span data-stu-id="01189-176">The <xref:System.Text.Rune.EncodeToUtf16%2A?displayProperty=nameWithType> converts a `Rune` instance to `char` instances.</span></span> <span data-ttu-id="01189-177">若要查询 `char` 将实例转换为 utf-16 而产生的实例数 `Rune` ，请使用 <xref:System.Text.Rune.Utf16SequenceLength?displayProperty=nameWithType> 属性。</span><span class="sxs-lookup"><span data-stu-id="01189-177">To query the number of `char` instances that would result from converting a `Rune` instance to UTF-16, use the <xref:System.Text.Rune.Utf16SequenceLength?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="01189-178">对于 UTF-8 转换，存在类似的方法。</span><span class="sxs-lookup"><span data-stu-id="01189-178">Similar methods exist for UTF-8 conversion.</span></span>

<span data-ttu-id="01189-179">下面的示例将 `Rune` 实例转换为 `char` 数组。</span><span class="sxs-lookup"><span data-stu-id="01189-179">The following example converts a `Rune` instance to a `char` array.</span></span> <span data-ttu-id="01189-180">该代码假定 `Rune` 变量中有一个实例 `rune` ：</span><span class="sxs-lookup"><span data-stu-id="01189-180">The code assumes you have a `Rune` instance in the `rune` variable:</span></span>

:::code language="csharp" source="~/snippets/System.Text/Rune/csharp/EncodeRune.cs" id="SnippetUtf16CharArray":::

<span data-ttu-id="01189-181">由于 `string` 是 utf-16 字符的序列，下面的示例还将 `Rune` 实例转换为 utf-16：</span><span class="sxs-lookup"><span data-stu-id="01189-181">Since a `string` is a sequence of UTF-16 chars, the following example also converts a `Rune` instance to UTF-16:</span></span>

:::code language="csharp" source="~/snippets/System.Text/Rune/csharp/EncodeRune.cs" id="SnippetUtf16String":::

<span data-ttu-id="01189-182">下面的示例将 `Rune` 实例转换为 `UTF-8` 字节数组：</span><span class="sxs-lookup"><span data-stu-id="01189-182">The following example converts a `Rune` instance to a `UTF-8` byte array:</span></span>

:::code language="csharp" source="~/snippets/System.Text/Rune/csharp/EncodeRune.cs" id="SnippetUtf8ByteArray":::

<span data-ttu-id="01189-183"><xref:System.Text.Rune.EncodeToUtf16%2A?displayProperty=nameWithType>和 <xref:System.Text.Rune.EncodeToUtf8%2A?displayProperty=nameWithType> 方法返回已写入的实际元素数。</span><span class="sxs-lookup"><span data-stu-id="01189-183">The <xref:System.Text.Rune.EncodeToUtf16%2A?displayProperty=nameWithType> and <xref:System.Text.Rune.EncodeToUtf8%2A?displayProperty=nameWithType> methods return the actual number of elements written.</span></span> <span data-ttu-id="01189-184">如果目标缓冲区太短而无法包含结果，它们将引发异常。</span><span class="sxs-lookup"><span data-stu-id="01189-184">They throw an exception if the destination buffer is too short to contain the result.</span></span> <span data-ttu-id="01189-185"><xref:System.Text.Rune.TryEncodeToUtf8%2A> <xref:System.Text.Rune.EncodeToUtf16%2A> 对于想要避免异常的调用方，还存在非引发和方法。</span><span class="sxs-lookup"><span data-stu-id="01189-185">There are non-throwing <xref:System.Text.Rune.TryEncodeToUtf8%2A> and <xref:System.Text.Rune.EncodeToUtf16%2A> methods as well for callers who want to avoid exceptions.</span></span>

### <a name="rune-in-net-vs-other-languages"></a><span data-ttu-id="01189-186">.NET 中的 Rune 与其他语言</span><span class="sxs-lookup"><span data-stu-id="01189-186">Rune in .NET vs. other languages</span></span>

<span data-ttu-id="01189-187">Unicode 标准中未定义 "rune" 一词。</span><span class="sxs-lookup"><span data-stu-id="01189-187">The term "rune" is not defined in the Unicode Standard.</span></span> <span data-ttu-id="01189-188">术语 "日期" 改回 [创建 utf-8](https://www.cl.cam.ac.uk/~mgk25/ucs/utf-8-history.txt)。</span><span class="sxs-lookup"><span data-stu-id="01189-188">The term dates back to [the creation of UTF-8](https://www.cl.cam.ac.uk/~mgk25/ucs/utf-8-history.txt).</span></span> <span data-ttu-id="01189-189">讨论涌现和 Ken Thompson 正在寻找一项术语来描述最终成为一个码位的内容。</span><span class="sxs-lookup"><span data-stu-id="01189-189">Rob Pike and Ken Thompson were looking for a term to describe what would eventually become known as a code point.</span></span> <span data-ttu-id="01189-190">[它们是在 "rune" 一词上结算](https://twitter.com/rob_pike/status/732353233474064384)的，而且在涌现的更高版本中，对中转编程语言的影响将会帮助 popularize。</span><span class="sxs-lookup"><span data-stu-id="01189-190">[They settled on the term "rune"](https://twitter.com/rob_pike/status/732353233474064384), and Rob Pike's later influence over the Go programming language helped popularize the term.</span></span>

<span data-ttu-id="01189-191">但是，.NET `Rune` 类型不是 "开始" 类型的等效项 `rune` 。</span><span class="sxs-lookup"><span data-stu-id="01189-191">However, the .NET `Rune` type is not the equivalent of the Go `rune` type.</span></span> <span data-ttu-id="01189-192">在 "开始" 中， `rune` 类型是[的 `int32` 别名](https://blog.golang.org/strings)。</span><span class="sxs-lookup"><span data-stu-id="01189-192">In Go, the `rune` type is an [alias for `int32`](https://blog.golang.org/strings).</span></span> <span data-ttu-id="01189-193">中转 rune 用于表示 Unicode 码位，但它可以是任何32位值，其中包括代理项码位和不是合法 Unicode 码位的值。</span><span class="sxs-lookup"><span data-stu-id="01189-193">A Go rune is intended to represent a Unicode code point, but it can be any 32-bit value, including surrogate code points and values that are not legal Unicode code points.</span></span>

<span data-ttu-id="01189-194">对于其他编程语言中类似的类型，请参阅 [Rust 的基元 `char` 类型](https://doc.rust-lang.org/std/primitive.char.html) 或 [Swift 的 `Unicode.Scalar` 类型](https://developer.apple.com/documentation/swift/unicode/scalar)，两者都表示 Unicode 标量值。</span><span class="sxs-lookup"><span data-stu-id="01189-194">For similar types in other programming languages, see [Rust's primitive `char` type](https://doc.rust-lang.org/std/primitive.char.html) or [Swift's `Unicode.Scalar` type](https://developer.apple.com/documentation/swift/unicode/scalar), both of which represent Unicode scalar values.</span></span> <span data-ttu-id="01189-195">它们提供类似于的功能。NET 的 `Rune` 类型，并且不允许对不是合法 Unicode 标量值的值进行实例化。</span><span class="sxs-lookup"><span data-stu-id="01189-195">They provide functionality similar to .NET's `Rune` type, and they disallow instantiation of values that are not legal Unicode scalar values.</span></span>

          ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rune (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.#ctor(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ch As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rune(char ch);" />
      <MemberSignature Language="F#" Value="new System.Text.Rune : char -&gt; System.Text.Rune" Usage="new System.Text.Rune ch" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="01189-196">UTF-16 代码单元。</span><span class="sxs-lookup"><span data-stu-id="01189-196">A UTF-16 code unit.</span></span></param>
        <summary><span data-ttu-id="01189-197">从提供的 UTF-16 代码单元中创建 <see cref="T:System.Text.Rune" />。</span><span class="sxs-lookup"><span data-stu-id="01189-197">Creates a <see cref="T:System.Text.Rune" /> from the provided UTF-16 code unit.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="01189-198"><paramref name="ch" /> 表示 UTF-16 代理项码位（U+D800..U+DFFF，含首尾值）。</span><span class="sxs-lookup"><span data-stu-id="01189-198"><paramref name="ch" /> represents a UTF-16 surrogate code point (U+D800..U+DFFF, inclusive).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rune (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rune(int value);" />
      <MemberSignature Language="F#" Value="new System.Text.Rune : int -&gt; System.Text.Rune" Usage="new System.Text.Rune value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="01189-199">一个 Unicode 标量值。</span><span class="sxs-lookup"><span data-stu-id="01189-199">A Unicode scalar value.</span></span></param>
        <summary><span data-ttu-id="01189-200">从表示 Unicode 标量值的指定 32 位整数中创建 <see cref="T:System.Text.Rune" />。</span><span class="sxs-lookup"><span data-stu-id="01189-200">Creates a <see cref="T:System.Text.Rune" /> from the specified 32-bit integer that represents a Unicode scalar value.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="01189-201"><paramref name="value" /> 不表示 Unicode 标量值。</span><span class="sxs-lookup"><span data-stu-id="01189-201"><paramref name="value" /> does not represent a Unicode scalar value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rune (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.#ctor(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rune(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="new System.Text.Rune : uint32 -&gt; System.Text.Rune" Usage="new System.Text.Rune value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="01189-202">一个 Unicode 标量值。</span><span class="sxs-lookup"><span data-stu-id="01189-202">A Unicode scalar value.</span></span></param>
        <summary><span data-ttu-id="01189-203">从表示 Unicode 标量值的指定 32 位无符号整数中创建 <see cref="T:System.Text.Rune" />。</span><span class="sxs-lookup"><span data-stu-id="01189-203">Creates a <see cref="T:System.Text.Rune" /> from the specified 32-bit unsigned integer that represents a Unicode scalar value.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="01189-204"><paramref name="value" /> 不表示 Unicode 标量值。</span><span class="sxs-lookup"><span data-stu-id="01189-204"><paramref name="value" /> does not represent a Unicode scalar value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rune (char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char highSurrogate, char lowSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.#ctor(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (highSurrogate As Char, lowSurrogate As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rune(char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="F#" Value="new System.Text.Rune : char * char -&gt; System.Text.Rune" Usage="new System.Text.Rune (highSurrogate, lowSurrogate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="highSurrogate" Type="System.Char" />
        <Parameter Name="lowSurrogate" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="highSurrogate"><span data-ttu-id="01189-205">代理项对的高代理项。</span><span class="sxs-lookup"><span data-stu-id="01189-205">The high surrogate of the surrogate pair.</span></span></param>
        <param name="lowSurrogate"><span data-ttu-id="01189-206">代理项对的低代理项。</span><span class="sxs-lookup"><span data-stu-id="01189-206">The low surrogate of the surrogate pair.</span></span></param>
        <summary><span data-ttu-id="01189-207">从提供的 UTF-16 代理项对中创建 <see cref="T:System.Text.Rune" />。</span><span class="sxs-lookup"><span data-stu-id="01189-207">Creates a <see cref="T:System.Text.Rune" /> from the provided UTF-16 surrogate pair.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="01189-208"><paramref name="highSurrogate" /> 不表示 UTF-16 高代理项码位。</span><span class="sxs-lookup"><span data-stu-id="01189-208"><paramref name="highSurrogate" /> does not represent a UTF-16 high surrogate code point.</span></span>
          
<span data-ttu-id="01189-209">- 或 -</span><span class="sxs-lookup"><span data-stu-id="01189-209">-or-</span></span>

<span data-ttu-id="01189-210"><paramref name="lowSurrogate" /> 不表示 UTF-16 低代理项码位。</span><span class="sxs-lookup"><span data-stu-id="01189-210"><paramref name="lowSurrogate" /> does not represent a UTF-16 low surrogate code point.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (System.Text.Rune other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.Text.Rune other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.CompareTo(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As Rune) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Text::Rune other);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : System.Text.Rune -&gt; int&#xA;override this.CompareTo : System.Text.Rune -&gt; int" Usage="rune.CompareTo other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="01189-211">要与当前实例进行比较的实例。</span><span class="sxs-lookup"><span data-stu-id="01189-211">The instance to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="01189-212">将当前实例与指定的 <see cref="T:System.Text.Rune" /> 实例进行比较。</span><span class="sxs-lookup"><span data-stu-id="01189-212">Compares the current instance to the specified <see cref="T:System.Text.Rune" /> instance.</span></span></summary>
        <returns><span data-ttu-id="01189-213">一个带符号整数，指示此实例在排序顺序中相对于 <paramref name="other" /> 的位置：</span><span class="sxs-lookup"><span data-stu-id="01189-213">A signed integer indicating the position of this instance in the sort order in relation to <paramref name="other" />:</span></span> <br /><span data-ttu-id="01189-214">- 小于零：此实例位于 <paramref name="other" /> 之前。</span><span class="sxs-lookup"><span data-stu-id="01189-214">- Less than zero: This instance precedes <paramref name="other" />.</span></span> 
<br /><span data-ttu-id="01189-215">- 零：实例在排序顺序中的位置与 <paramref name="other" /> 相同。</span><span class="sxs-lookup"><span data-stu-id="01189-215">- Zero: The instance has the same position in the sort order as <paramref name="other" />.</span></span>
<br /><span data-ttu-id="01189-216">- 大于零：此实例位于 <paramref name="other" /> 之后。</span><span class="sxs-lookup"><span data-stu-id="01189-216">- Greater than zero: This instance follows <paramref name="other" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeFromUtf16">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus DecodeFromUtf16 (ReadOnlySpan&lt;char&gt; source, out System.Text.Rune result, out int charsConsumed);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus DecodeFromUtf16(valuetype System.ReadOnlySpan`1&lt;char&gt; source, [out] valuetype System.Text.Rune&amp; result, [out] int32&amp; charsConsumed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.DecodeFromUtf16(System.ReadOnlySpan{System.Char},System.Text.Rune@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeFromUtf16 (source As ReadOnlySpan(Of Char), ByRef result As Rune, ByRef charsConsumed As Integer) As OperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::OperationStatus DecodeFromUtf16(ReadOnlySpan&lt;char&gt; source, [Runtime::InteropServices::Out] System::Text::Rune % result, [Runtime::InteropServices::Out] int % charsConsumed);" />
      <MemberSignature Language="F#" Value="static member DecodeFromUtf16 : ReadOnlySpan&lt;char&gt; * Rune * int -&gt; System.Buffers.OperationStatus" Usage="System.Text.Rune.DecodeFromUtf16 (source, result, charsConsumed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Text.Rune" RefType="out" />
        <Parameter Name="charsConsumed" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="01189-217">只读 UTF-16 字符范围。</span><span class="sxs-lookup"><span data-stu-id="01189-217">A read-only UTF-16 character span.</span></span></param>
        <param name="result"><span data-ttu-id="01189-218">此方法返回时，已解码的 rune。</span><span class="sxs-lookup"><span data-stu-id="01189-218">When this method returns, the decoded rune.</span></span></param>
        <param name="charsConsumed"><span data-ttu-id="01189-219">此方法返回时，为创建 rune 而读取的字符数。</span><span class="sxs-lookup"><span data-stu-id="01189-219">When this method returns, the number of characters read to create the rune.</span></span></param>
        <summary><span data-ttu-id="01189-220">在提供的 UTF-16 源缓冲区开始处解码 <see cref="T:System.Text.Rune" />。</span><span class="sxs-lookup"><span data-stu-id="01189-220">Decodes the <see cref="T:System.Text.Rune" /> at the beginning of the provided UTF-16 source buffer.</span></span></summary>
        <returns><span data-ttu-id="01189-221">如果源缓冲区以有效的 UTF-16 编码标量值开头，则 <see cref="F:System.Buffers.OperationStatus.Done" />。</span><span class="sxs-lookup"><span data-stu-id="01189-221"><see cref="F:System.Buffers.OperationStatus.Done" /> if the source buffer begins with a valid UTF-16 encoded scalar value.</span></span> <span data-ttu-id="01189-222">然后 <paramref name="result" /> 包含解码的 <see cref="T:System.Text.Rune" />，<paramref name="charsConsumed" /> 包含用于在输入缓冲区中解码 <see cref="T:System.Text.Rune" /> 的 <see cref="T:System.Char" /> 值的数目。</span><span class="sxs-lookup"><span data-stu-id="01189-222"><paramref name="result" /> then contains the decoded <see cref="T:System.Text.Rune" />, and <paramref name="charsConsumed" /> contains the number of <see cref="T:System.Char" /> values used in the input buffer to encode the <see cref="T:System.Text.Rune" />.</span></span>
            
<span data-ttu-id="01189-223">如果源缓冲区为空，或仅包含独立的 UTF-16 高代理项字符，则 <see cref="F:System.Buffers.OperationStatus.NeedMoreData" />。</span><span class="sxs-lookup"><span data-stu-id="01189-223"><see cref="F:System.Buffers.OperationStatus.NeedMoreData" /> if the source buffer is empty or contains only a standalone UTF-16 high surrogate character.</span></span> <span data-ttu-id="01189-224">然后 <paramref name="result" /> 包含 <see cref="P:System.Text.Rune.ReplacementChar" />，<paramref name="charsConsumed" /> 包含输入缓冲区的长度。</span><span class="sxs-lookup"><span data-stu-id="01189-224"><paramref name="result" /> then contains <see cref="P:System.Text.Rune.ReplacementChar" />, and <paramref name="charsConsumed" /> contains the length of the input buffer.</span></span>
            
<span data-ttu-id="01189-225">如果源缓冲区以格式错误的 UTF-16 编码标量值开头，则 <see cref="F:System.Buffers.OperationStatus.InvalidData" />。</span><span class="sxs-lookup"><span data-stu-id="01189-225"><see cref="F:System.Buffers.OperationStatus.InvalidData" /> if the source buffer begins with an ill-formed UTF-16 encoded scalar value.</span></span> <span data-ttu-id="01189-226">然后 <paramref name="result" /> 包含 <see cref="P:System.Text.Rune.ReplacementChar" />，<paramref name="charsConsumed" /> 包含用于解码格式错误的序列的 <see cref="T:System.Char" /> 值的数目。</span><span class="sxs-lookup"><span data-stu-id="01189-226"><paramref name="result" /> then contains <see cref="P:System.Text.Rune.ReplacementChar" />, and <paramref name="charsConsumed" /> contains the number of <see cref="T:System.Char" /> values used to encode the ill-formed sequence.</span></span>
<span data-ttu-id="01189-227">。</span><span class="sxs-lookup"><span data-stu-id="01189-227">.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="01189-228">一般约定是在循环中调用此方法， `source` 通过 `charsConsumed` 循环的每次迭代上的元素对缓冲区进行切片。</span><span class="sxs-lookup"><span data-stu-id="01189-228">The general convention is to call this method in a loop, slicing the `source` buffer by `charsConsumed` elements on each iteration of the loop.</span></span> <span data-ttu-id="01189-229">在循环的每次迭代中， `result` 如果数据已成功解码，则包含实标量值; <xref:System.Text.Rune.ReplacementChar?displayProperty=nameWithType> 如果数据未成功解码，则包含它。</span><span class="sxs-lookup"><span data-stu-id="01189-229">On each iteration of the loop, `result` contains the real scalar value if the data was successfully decoded, or it contains <xref:System.Text.Rune.ReplacementChar?displayProperty=nameWithType> if the data was not successfully decoded.</span></span> <span data-ttu-id="01189-230">在循环访问循环时，此模式提供了方便的自动 U + FFFD 替换无效序列。</span><span class="sxs-lookup"><span data-stu-id="01189-230">This pattern provides convenient automatic U+FFFD substitution of invalid sequences while iterating through the loop.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeFromUtf8">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus DecodeFromUtf8 (ReadOnlySpan&lt;byte&gt; source, out System.Text.Rune result, out int bytesConsumed);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus DecodeFromUtf8(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.Text.Rune&amp; result, [out] int32&amp; bytesConsumed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.DecodeFromUtf8(System.ReadOnlySpan{System.Byte},System.Text.Rune@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeFromUtf8 (source As ReadOnlySpan(Of Byte), ByRef result As Rune, ByRef bytesConsumed As Integer) As OperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::OperationStatus DecodeFromUtf8(ReadOnlySpan&lt;System::Byte&gt; source, [Runtime::InteropServices::Out] System::Text::Rune % result, [Runtime::InteropServices::Out] int % bytesConsumed);" />
      <MemberSignature Language="F#" Value="static member DecodeFromUtf8 : ReadOnlySpan&lt;byte&gt; * Rune * int -&gt; System.Buffers.OperationStatus" Usage="System.Text.Rune.DecodeFromUtf8 (source, result, bytesConsumed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="result" Type="System.Text.Rune" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="01189-231">只读 UTF-8 编码字节范围。</span><span class="sxs-lookup"><span data-stu-id="01189-231">A read-only UTF-8 encoded byte span.</span></span></param>
        <param name="result"><span data-ttu-id="01189-232">此方法返回时，已解码的 rune。</span><span class="sxs-lookup"><span data-stu-id="01189-232">When this method returns, the decoded rune.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="01189-233">此方法返回时，为创建 rune 而读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="01189-233">When this method returns, the number of bytes read to create the rune.</span></span></param>
        <summary><span data-ttu-id="01189-234">在提供的 UTF-8 源缓冲区开始处解码 <see cref="T:System.Text.Rune" />。</span><span class="sxs-lookup"><span data-stu-id="01189-234">Decodes the <see cref="T:System.Text.Rune" /> at the beginning of the provided UTF-8 source buffer.</span></span></summary>
        <returns><span data-ttu-id="01189-235">如果源缓冲区以有效的 UTF-8 编码标量值开头，则 <see cref="F:System.Buffers.OperationStatus.Done" />。</span><span class="sxs-lookup"><span data-stu-id="01189-235"><see cref="F:System.Buffers.OperationStatus.Done" /> if the source buffer begins with a valid UTF-8 encoded scalar value.</span></span> <span data-ttu-id="01189-236">然后 <paramref name="result" /> 包含解码的 <see cref="T:System.Text.Rune" />，<paramref name="bytesConsumed" /> 包含用于在输入缓冲区中解码 <see cref="T:System.Text.Rune" /> 的 <see cref="T:System.Byte" /> 值的数目。</span><span class="sxs-lookup"><span data-stu-id="01189-236"><paramref name="result" /> then contains the decoded <see cref="T:System.Text.Rune" />, and <paramref name="bytesConsumed" /> contains the number of <see cref="T:System.Byte" /> values used in the input buffer to encode the <see cref="T:System.Text.Rune" />.</span></span>
            
<span data-ttu-id="01189-237">如果源缓冲区为空，或仅包含独立的 UTF-8 高代理项字符，则 <see cref="F:System.Buffers.OperationStatus.NeedMoreData" />。</span><span class="sxs-lookup"><span data-stu-id="01189-237"><see cref="F:System.Buffers.OperationStatus.NeedMoreData" /> if the source buffer is empty or contains only a standalone UTF-8 high surrogate character.</span></span> <span data-ttu-id="01189-238">然后 <paramref name="result" /> 包含 <see cref="P:System.Text.Rune.ReplacementChar" />，<paramref name="bytesConsumed" /> 包含输入缓冲区的长度。</span><span class="sxs-lookup"><span data-stu-id="01189-238"><paramref name="result" /> then contains <see cref="P:System.Text.Rune.ReplacementChar" />, and <paramref name="bytesConsumed" /> contains the length of the input buffer.</span></span>
            
<span data-ttu-id="01189-239">如果源缓冲区以格式错误的 UTF-8 编码标量值开头，则 <see cref="F:System.Buffers.OperationStatus.InvalidData" />。</span><span class="sxs-lookup"><span data-stu-id="01189-239"><see cref="F:System.Buffers.OperationStatus.InvalidData" /> if the source buffer begins with an ill-formed UTF-8 encoded scalar value.</span></span> <span data-ttu-id="01189-240">然后 <paramref name="result" /> 包含 <see cref="P:System.Text.Rune.ReplacementChar" />，<paramref name="bytesConsumed" /> 包含用于在输入缓冲区解码格式错误的序列的 <see cref="T:System.Byte" /> 值的数目。</span><span class="sxs-lookup"><span data-stu-id="01189-240"><paramref name="result" /> then contains <see cref="P:System.Text.Rune.ReplacementChar" />, and <paramref name="bytesConsumed" /> contains the number of <see cref="T:System.Byte" /> values used in the input buffer to encode the ill-formed sequence.</span></span>
<span data-ttu-id="01189-241">。</span><span class="sxs-lookup"><span data-stu-id="01189-241">.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="01189-242">一般约定是在循环中调用此方法， `source` 通过 `bytesConsumed` 循环的每次迭代上的元素对缓冲区进行切片。</span><span class="sxs-lookup"><span data-stu-id="01189-242">The general convention is to call this method in a loop, slicing the `source` buffer by `bytesConsumed` elements on each iteration of the loop.</span></span> <span data-ttu-id="01189-243">在循环的每次迭代中， `result` 如果成功进行解码，则包含实际标量值; <xref:System.Text.Rune.ReplacementChar?displayProperty=nameWithType> 如果数据无法成功解码，则包含它。</span><span class="sxs-lookup"><span data-stu-id="01189-243">On each iteration of the loop, `result` contains the real scalar value if successfully decoded, or it contains <xref:System.Text.Rune.ReplacementChar?displayProperty=nameWithType> if the data could not be successfully decoded.</span></span> <span data-ttu-id="01189-244">在循环访问循环时，此模式提供了方便的自动 U + FFFD 替换无效序列。</span><span class="sxs-lookup"><span data-stu-id="01189-244">This pattern provides convenient automatic U+FFFD substitution of invalid sequences while iterating through the loop.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeLastFromUtf16">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus DecodeLastFromUtf16 (ReadOnlySpan&lt;char&gt; source, out System.Text.Rune result, out int charsConsumed);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus DecodeLastFromUtf16(valuetype System.ReadOnlySpan`1&lt;char&gt; source, [out] valuetype System.Text.Rune&amp; result, [out] int32&amp; charsConsumed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.DecodeLastFromUtf16(System.ReadOnlySpan{System.Char},System.Text.Rune@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeLastFromUtf16 (source As ReadOnlySpan(Of Char), ByRef result As Rune, ByRef charsConsumed As Integer) As OperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::OperationStatus DecodeLastFromUtf16(ReadOnlySpan&lt;char&gt; source, [Runtime::InteropServices::Out] System::Text::Rune % result, [Runtime::InteropServices::Out] int % charsConsumed);" />
      <MemberSignature Language="F#" Value="static member DecodeLastFromUtf16 : ReadOnlySpan&lt;char&gt; * Rune * int -&gt; System.Buffers.OperationStatus" Usage="System.Text.Rune.DecodeLastFromUtf16 (source, result, charsConsumed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Text.Rune" RefType="out" />
        <Parameter Name="charsConsumed" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="01189-245">只读 UTF-16 编码字符范围。</span><span class="sxs-lookup"><span data-stu-id="01189-245">A read-only UTF-16 encoded character span.</span></span></param>
        <param name="result"><span data-ttu-id="01189-246">此方法返回时，已解码的 rune。</span><span class="sxs-lookup"><span data-stu-id="01189-246">When this method returns, the decoded rune.</span></span></param>
        <param name="charsConsumed"><span data-ttu-id="01189-247">此方法返回时，为创建 rune 而读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="01189-247">When this method returns, the number of bytes read to create the rune.</span></span></param>
        <summary><span data-ttu-id="01189-248">在提供的 UTF-16 源缓冲区结尾处解码 <see cref="T:System.Text.Rune" />。</span><span class="sxs-lookup"><span data-stu-id="01189-248">Decodes the <see cref="T:System.Text.Rune" /> at the end of the provided UTF-16 source buffer.</span></span></summary>
        <returns><span data-ttu-id="01189-249">如果源缓冲区以有效的 UTF-16 编码标量值开头，则 <see cref="F:System.Buffers.OperationStatus.Done" />。</span><span class="sxs-lookup"><span data-stu-id="01189-249"><see cref="F:System.Buffers.OperationStatus.Done" /> if the source buffer begins with a valid UTF-16 encoded scalar value.</span></span> <span data-ttu-id="01189-250">然后 <paramref name="result" /> 包含解码的 <see cref="T:System.Text.Rune" />，<paramref name="charsConsumed" /> 包含用于在输入缓冲区中解码 <see cref="T:System.Text.Rune" /> 的 <see cref="T:System.Char" /> 值的数目。</span><span class="sxs-lookup"><span data-stu-id="01189-250"><paramref name="result" /> then contains the decoded <see cref="T:System.Text.Rune" />, and <paramref name="charsConsumed" /> contains the number of <see cref="T:System.Char" /> values used in the input buffer to encode the <see cref="T:System.Text.Rune" />.</span></span>
            
<span data-ttu-id="01189-251">如果源缓冲区为空，或仅包含独立的 UTF-16 高代理项字符，则 <see cref="F:System.Buffers.OperationStatus.NeedMoreData" />。</span><span class="sxs-lookup"><span data-stu-id="01189-251"><see cref="F:System.Buffers.OperationStatus.NeedMoreData" /> if the source buffer is empty or contains only a standalone UTF-16 high surrogate character.</span></span> <span data-ttu-id="01189-252">然后 <paramref name="result" /> 包含 <see cref="P:System.Text.Rune.ReplacementChar" />，<paramref name="charsConsumed" /> 包含输入缓冲区的长度。</span><span class="sxs-lookup"><span data-stu-id="01189-252"><paramref name="result" /> then contains <see cref="P:System.Text.Rune.ReplacementChar" />, and <paramref name="charsConsumed" /> contains the length of the input buffer.</span></span>
            
<span data-ttu-id="01189-253">如果源缓冲区以格式错误的 UTF-16 编码标量值开头，则 <see cref="F:System.Buffers.OperationStatus.InvalidData" />。</span><span class="sxs-lookup"><span data-stu-id="01189-253"><see cref="F:System.Buffers.OperationStatus.InvalidData" /> if the source buffer begins with an ill-formed UTF-16 encoded scalar value.</span></span> <span data-ttu-id="01189-254">然后 <paramref name="result" /> 包含 <see cref="P:System.Text.Rune.ReplacementChar" />，<paramref name="charsConsumed" /> 包含用于解码格式错误的序列的 <see cref="T:System.Char" /> 值的数目。</span><span class="sxs-lookup"><span data-stu-id="01189-254"><paramref name="result" /> then contains <see cref="P:System.Text.Rune.ReplacementChar" />, and <paramref name="charsConsumed" /> contains the number of <see cref="T:System.Char" /> values used to encode the ill-formed sequence.</span></span>
<span data-ttu-id="01189-255">。</span><span class="sxs-lookup"><span data-stu-id="01189-255">.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="01189-256">此方法非常类似于 <xref:System.Text.Rune.DecodeFromUtf16(System.ReadOnlySpan{System.Char},System.Text.Rune@,System.Int32@)> ，但它允许调用方反向循环，而不是转发。</span><span class="sxs-lookup"><span data-stu-id="01189-256">This method is very similar to <xref:System.Text.Rune.DecodeFromUtf16(System.ReadOnlySpan{System.Char},System.Text.Rune@,System.Int32@)>, except it allows the caller to loop backward instead of forward.</span></span> <span data-ttu-id="01189-257">典型的调用约定是，在循环的每次迭代时，调用方应切分缓冲区的最后一个 `charsConsumed` 元素 `source` 。</span><span class="sxs-lookup"><span data-stu-id="01189-257">The typical calling convention is that on each iteration of the loop, the caller should slice off the final `charsConsumed` elements of the `source` buffer.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeLastFromUtf8">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus DecodeLastFromUtf8 (ReadOnlySpan&lt;byte&gt; source, out System.Text.Rune value, out int bytesConsumed);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus DecodeLastFromUtf8(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.Text.Rune&amp; value, [out] int32&amp; bytesConsumed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.DecodeLastFromUtf8(System.ReadOnlySpan{System.Byte},System.Text.Rune@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeLastFromUtf8 (source As ReadOnlySpan(Of Byte), ByRef value As Rune, ByRef bytesConsumed As Integer) As OperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::OperationStatus DecodeLastFromUtf8(ReadOnlySpan&lt;System::Byte&gt; source, [Runtime::InteropServices::Out] System::Text::Rune % value, [Runtime::InteropServices::Out] int % bytesConsumed);" />
      <MemberSignature Language="F#" Value="static member DecodeLastFromUtf8 : ReadOnlySpan&lt;byte&gt; * Rune * int -&gt; System.Buffers.OperationStatus" Usage="System.Text.Rune.DecodeLastFromUtf8 (source, value, bytesConsumed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Text.Rune" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="01189-258">只读 UTF-8 编码字节范围。</span><span class="sxs-lookup"><span data-stu-id="01189-258">A read-only UTF-8 encoded byte span.</span></span></param>
        <param name="value"><span data-ttu-id="01189-259">此方法返回时，已解码的 rune。</span><span class="sxs-lookup"><span data-stu-id="01189-259">When this method returns, the decoded rune.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="01189-260">此方法返回时，为创建 rune 而读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="01189-260">When this method returns, the number of bytes read to create the rune.</span></span></param>
        <summary><span data-ttu-id="01189-261">在提供的 UTF-8 源缓冲区结尾处解码 <see cref="T:System.Text.Rune" />。</span><span class="sxs-lookup"><span data-stu-id="01189-261">Decodes the <see cref="T:System.Text.Rune" /> at the end of the provided UTF-8 source buffer.</span></span></summary>
        <returns><span data-ttu-id="01189-262">如果源缓冲区以有效的 UTF-8 编码标量值结尾，则 <see cref="F:System.Buffers.OperationStatus.Done" />。</span><span class="sxs-lookup"><span data-stu-id="01189-262"><see cref="F:System.Buffers.OperationStatus.Done" /> if the source buffer ends with a valid UTF-8 encoded scalar value.</span></span> <span data-ttu-id="01189-263">然后 <paramref name="result" /> 包含解码的 <see cref="T:System.Text.Rune" />，<paramref name="bytesConsumed" /> 包含用于在输入缓冲区中解码 <see cref="T:System.Text.Rune" /> 的 <see cref="T:System.Byte" /> 值的数目。</span><span class="sxs-lookup"><span data-stu-id="01189-263"><paramref name="result" /> then contains the decoded <see cref="T:System.Text.Rune" />, and <paramref name="bytesConsumed" /> contains the number of <see cref="T:System.Byte" /> values used in the input buffer to encode the <see cref="T:System.Text.Rune" />.</span></span>
            
<span data-ttu-id="01189-264">如果源缓冲区为空，或仅包含独立的 UTF-8 高代理项字符，则 <see cref="F:System.Buffers.OperationStatus.NeedMoreData" />。</span><span class="sxs-lookup"><span data-stu-id="01189-264"><see cref="F:System.Buffers.OperationStatus.NeedMoreData" /> if the source buffer is empty or contains only a standalone UTF-8 high surrogate character.</span></span> <span data-ttu-id="01189-265">然后 <paramref name="result" /> 包含 <see cref="P:System.Text.Rune.ReplacementChar" />，<paramref name="bytesConsumed" /> 包含输入缓冲区的长度。</span><span class="sxs-lookup"><span data-stu-id="01189-265"><paramref name="result" /> then contains <see cref="P:System.Text.Rune.ReplacementChar" />, and <paramref name="bytesConsumed" /> contains the length of the input buffer.</span></span>
            
<span data-ttu-id="01189-266">如果源缓冲区以格式错误的 UTF-8 编码标量值结尾，则 <see cref="F:System.Buffers.OperationStatus.InvalidData" />。</span><span class="sxs-lookup"><span data-stu-id="01189-266"><see cref="F:System.Buffers.OperationStatus.InvalidData" /> if the source buffer ends with an ill-formed UTF-8 encoded scalar value.</span></span> <span data-ttu-id="01189-267">然后 <paramref name="result" /> 包含 <see cref="P:System.Text.Rune.ReplacementChar" />，<paramref name="bytesConsumed" /> 包含用于在输入缓冲区解码格式错误的序列的 <see cref="T:System.Byte" /> 值的数目。</span><span class="sxs-lookup"><span data-stu-id="01189-267"><paramref name="result" /> then contains <see cref="P:System.Text.Rune.ReplacementChar" />, and <paramref name="bytesConsumed" /> contains the number of <see cref="T:System.Byte" /> values used in the input buffer to encode the ill-formed sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="01189-268">此方法非常类似于 <xref:System.Text.Rune.DecodeFromUtf8(System.ReadOnlySpan{System.Byte},System.Text.Rune@,System.Int32@)> ，但它允许调用方反向循环，而不是转发。</span><span class="sxs-lookup"><span data-stu-id="01189-268">This method is very similar to <xref:System.Text.Rune.DecodeFromUtf8(System.ReadOnlySpan{System.Byte},System.Text.Rune@,System.Int32@)>, except it allows the caller to loop backward instead of forward.</span></span> <span data-ttu-id="01189-269">典型的调用约定是，在循环的每次迭代时，调用方应切分缓冲区的最后一个 `bytesConsumed` 元素 `source` 。</span><span class="sxs-lookup"><span data-stu-id="01189-269">The typical calling convention is that on each iteration of the loop, the caller should slice off the final `bytesConsumed` elements of the `source` buffer.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeToUtf16">
      <MemberSignature Language="C#" Value="public int EncodeToUtf16 (Span&lt;char&gt; destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EncodeToUtf16(valuetype System.Span`1&lt;char&gt; destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.EncodeToUtf16(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Function EncodeToUtf16 (destination As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EncodeToUtf16(Span&lt;char&gt; destination);" />
      <MemberSignature Language="F#" Value="member this.EncodeToUtf16 : Span&lt;char&gt; -&gt; int" Usage="rune.EncodeToUtf16 destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="01189-270">将此值作为 UTF-16 写入到的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="01189-270">The buffer to which to write this value as UTF-16.</span></span></param>
        <summary><span data-ttu-id="01189-271">将此 <see cref="T:System.Text.Rune" /> 解码为 UTF-16 目标缓冲区。</span><span class="sxs-lookup"><span data-stu-id="01189-271">Encodes this <see cref="T:System.Text.Rune" /> to a UTF-16 destination buffer.</span></span></summary>
        <returns><span data-ttu-id="01189-272">写入到 <paramref name="destination" /> 的 <see cref="T:System.Char" /> 值的数目。</span><span class="sxs-lookup"><span data-stu-id="01189-272">The number of <see cref="T:System.Char" /> values written to <paramref name="destination" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="01189-273"><paramref name="destination" /> 的大小不足以保存输出。</span><span class="sxs-lookup"><span data-stu-id="01189-273"><paramref name="destination" /> is not large enough to hold the output.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EncodeToUtf8">
      <MemberSignature Language="C#" Value="public int EncodeToUtf8 (Span&lt;byte&gt; destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EncodeToUtf8(valuetype System.Span`1&lt;unsigned int8&gt; destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.EncodeToUtf8(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function EncodeToUtf8 (destination As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EncodeToUtf8(Span&lt;System::Byte&gt; destination);" />
      <MemberSignature Language="F#" Value="member this.EncodeToUtf8 : Span&lt;byte&gt; -&gt; int" Usage="rune.EncodeToUtf8 destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="01189-274">将此值作为 UTF-8 写入到的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="01189-274">The buffer to which to write this value as UTF-8.</span></span></param>
        <summary><span data-ttu-id="01189-275">将此 <see cref="T:System.Text.Rune" /> 解码为 UTF-8 目标缓冲区。</span><span class="sxs-lookup"><span data-stu-id="01189-275">Encodes this <see cref="T:System.Text.Rune" /> to a UTF-8 destination buffer.</span></span></summary>
        <returns><span data-ttu-id="01189-276">写入到 <paramref name="destination" /> 的 <see cref="T:System.Byte" /> 值的数目。</span><span class="sxs-lookup"><span data-stu-id="01189-276">The number of <see cref="T:System.Byte" /> values written to <paramref name="destination" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="01189-277"><paramref name="destination" /> 的大小不足以保存输出。</span><span class="sxs-lookup"><span data-stu-id="01189-277"><paramref name="destination" /> is not large enough to hold the output.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="rune.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="01189-278">要与当前实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="01189-278">The object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="01189-279">返回一个指示当前实例是否与指定对象相等的值。</span><span class="sxs-lookup"><span data-stu-id="01189-279">Returns a value that indicates whether the current instance and a specified object are equal.</span></span></summary>
        <returns><span data-ttu-id="01189-280">如果 <paramref name="obj" /> 为 <see cref="T:System.Text.Rune" /> 类型，并且等于当前的实例，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01189-280"><see langword="true" /> if <paramref name="obj" /> is of type <see cref="T:System.Text.Rune" /> and is equal to the current instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Text.Rune other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Text.Rune other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.Equals(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Text::Rune other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Text.Rune -&gt; bool" Usage="rune.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="01189-281">要与当前实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="01189-281">The object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="01189-282">返回一个值，该值指示当前实例是否与指定的 rune 相等。</span><span class="sxs-lookup"><span data-stu-id="01189-282">Returns a value that indicates whether the current instance and a specified rune are equal.</span></span></summary>
        <returns><span data-ttu-id="01189-283">如果当前实例与 <paramref name="other" /> 相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01189-283"><see langword="true" /> if the current instance and <paramref name="other" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="rune.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01189-284">返回此实例的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="01189-284">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="01189-285">此实例的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="01189-285">The hash code for this instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.GetNumericValue(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (value As Rune) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member GetNumericValue : System.Text.Rune -&gt; double" Usage="System.Text.Rune.GetNumericValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="01189-286">要获取其数值的 rune。</span><span class="sxs-lookup"><span data-stu-id="01189-286">The rune for which to get the numeric value.</span></span></param>
        <summary><span data-ttu-id="01189-287">获取与指定 rune 关联的数值。</span><span class="sxs-lookup"><span data-stu-id="01189-287">Gets the numeric value associated with the specified rune.</span></span></summary>
        <returns><span data-ttu-id="01189-288">与 <paramref name="value" /> 关联的数值；如果 <paramref name="value" /> 不表示数字字符，则为 -1。</span><span class="sxs-lookup"><span data-stu-id="01189-288">The numeric value associated with <paramref name="value" />, or -1 if <paramref name="value" /> doesn't represent a numeric character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="01189-289">此方法的行为与等效 <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="01189-289">This method has behavior equivalent to <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="01189-290">有关详细信息，请参阅该文档。</span><span class="sxs-lookup"><span data-stu-id="01189-290">Refer to that documentation for more information.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRuneAt">
      <MemberSignature Language="C#" Value="public static System.Text.Rune GetRuneAt (string input, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Text.Rune GetRuneAt(string input, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.GetRuneAt(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRuneAt (input As String, index As Integer) As Rune" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Rune GetRuneAt(System::String ^ input, int index);" />
      <MemberSignature Language="F#" Value="static member GetRuneAt : string * int -&gt; System.Text.Rune" Usage="System.Text.Rune.GetRuneAt (input, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Rune</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="01189-291">从中创建 rune 的字符串。</span><span class="sxs-lookup"><span data-stu-id="01189-291">The string from which to create the rune.</span></span></param>
        <param name="index"><span data-ttu-id="01189-292">在 <paramref name="input" /> 中创建 rune 的起始位置。</span><span class="sxs-lookup"><span data-stu-id="01189-292">The starting position in <paramref name="input" /> at which to create the rune.</span></span></param>
        <summary><span data-ttu-id="01189-293">获取在字符串中指定位置开始的 <see cref="T:System.Text.Rune" />。</span><span class="sxs-lookup"><span data-stu-id="01189-293">Gets the <see cref="T:System.Text.Rune" /> that begins at a specified position in a string.</span></span></summary>
        <returns><span data-ttu-id="01189-294">从 <paramref name="input" /> 中的指定 <paramref name="index" /> 处获取的 rune。</span><span class="sxs-lookup"><span data-stu-id="01189-294">The rune obtained from <paramref name="input" /> at the specified <paramref name="index" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="01189-295">如果 `input` 为 `null` 、 `index` 超出范围或 `index` 未引用中有效标量值的开头，则会引发异常 `input` 。</span><span class="sxs-lookup"><span data-stu-id="01189-295">Throws an exception if `input` is `null`, `index` is out of range, or `index` does not reference the start of a valid scalar value within `input`.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="01189-296"><paramref name="input" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="01189-296"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="01189-297"><paramref name="index" /> 不引用 <paramref name="input" /> 中有效标量值的开头。</span><span class="sxs-lookup"><span data-stu-id="01189-297"><paramref name="index" /> does not reference the start of a valid scalar value in <paramref name="input" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="01189-298"><paramref name="index" /> 超出了 <paramref name="input" /> 的范围。</span><span class="sxs-lookup"><span data-stu-id="01189-298"><paramref name="index" /> is outside the range of <paramref name="input" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (value As Rune) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member GetUnicodeCategory : System.Text.Rune -&gt; System.Globalization.UnicodeCategory" Usage="System.Text.Rune.GetUnicodeCategory value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="01189-299">要获取其 Unicode 类别的 rune。</span><span class="sxs-lookup"><span data-stu-id="01189-299">The rune for which to get the Unicode category.</span></span></param>
        <summary><span data-ttu-id="01189-300">获取与指定 rune 关联的 Unicode 类别。</span><span class="sxs-lookup"><span data-stu-id="01189-300">Gets the Unicode category associated with the specified rune.</span></span></summary>
        <returns><span data-ttu-id="01189-301">与 <paramref name="value" /> 关联的 Unicode 类别。</span><span class="sxs-lookup"><span data-stu-id="01189-301">The Unicode category associated with <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="01189-302">此方法的行为与等效 <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="01189-302">This method has behavior equivalent to <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="01189-303">有关详细信息，请参阅该文档。</span><span class="sxs-lookup"><span data-stu-id="01189-303">Refer to that documentation for more information.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAscii">
      <MemberSignature Language="C#" Value="public bool IsAscii { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAscii" />
      <MemberSignature Language="DocId" Value="P:System.Text.Rune.IsAscii" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAscii As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAscii { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAscii : bool" Usage="System.Text.Rune.IsAscii" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01189-304">获取一个值，该值指示与此 <see cref="T:System.Text.Rune" /> 关联的标量值是否在 ASCII 编码范围内。</span><span class="sxs-lookup"><span data-stu-id="01189-304">Gets a value that indicates whether the scalar value associated with this <see cref="T:System.Text.Rune" /> is within the ASCII encoding range.</span></span></summary>
        <value><span data-ttu-id="01189-305"><see langword="true" /> 如果关联的标量值在 ASCII 编码范围内 ( [U + 0000.. U + 007F] ) 并因此由单个 UTF-8 代码单元表示，则为;否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="01189-305"><see langword="true" /> if the scalar value associated is within the ASCII encoding range ([ U+0000..U+007F ]) and therefore representable by a single UTF-8 code unit; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBmp">
      <MemberSignature Language="C#" Value="public bool IsBmp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBmp" />
      <MemberSignature Language="DocId" Value="P:System.Text.Rune.IsBmp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBmp As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBmp { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBmp : bool" Usage="System.Text.Rune.IsBmp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01189-306">获取一个值，该值指示与此 <see cref="T:System.Text.Rune" /> 关联的标量值是否在 BMP 编码范围内。</span><span class="sxs-lookup"><span data-stu-id="01189-306">Gets a value that indicates whether the scalar value associated with this <see cref="T:System.Text.Rune" /> is within the BMP encoding range.</span></span></summary>
        <value><span data-ttu-id="01189-307"><see langword="true" /> 如果关联的标量值在 BMP 编码范围内 ( [U + 0000. U + FFFF] ) 并因此由单个 UTF-16 代码单元表示，则为;否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="01189-307"><see langword="true" /> if the scalar value associated is within the BMP encoding range ([ U+0000..U+FFFF ]) and therefore representable by a single UTF-16 code unit; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsControl">
      <MemberSignature Language="C#" Value="public static bool IsControl (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsControl(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsControl(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsControl (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsControl(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsControl : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsControl value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="01189-308">要计算的 rune。</span><span class="sxs-lookup"><span data-stu-id="01189-308">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="01189-309">返回一个值，该值指示指定的 rune 是否属于控制字符类别。</span><span class="sxs-lookup"><span data-stu-id="01189-309">Returns a value that indicates whether the specified rune is categorized as a control character.</span></span></summary>
        <returns><span data-ttu-id="01189-310">如果 <see langword="true" /> 是控制字符，则为 <paramref name="value" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01189-310"><see langword="true" /> if <paramref name="value" /> is a control character; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="01189-311">此方法等效于对结果进行查询 <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> 和比较 <xref:System.Globalization.UnicodeCategory.Control> 。</span><span class="sxs-lookup"><span data-stu-id="01189-311">This method is equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against <xref:System.Globalization.UnicodeCategory.Control>.</span></span>

<span data-ttu-id="01189-312">根据 [Unicode 稳定性策略](https://www.unicode.org/policies/stability_policy.html)，控制字符集永久固定为和的联合 `[ U+0000..U+001F ]` `[ U+007F..U+009F ]` 。</span><span class="sxs-lookup"><span data-stu-id="01189-312">Per [Unicode stability policies](https://www.unicode.org/policies/stability_policy.html), the set of control characters is permanently fixed to be the union of `[ U+0000..U+001F ]` and `[ U+007F..U+009F ]`.</span></span>

<span data-ttu-id="01189-313">有关详细信息，请参阅 <xref:System.Char.IsControl%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="01189-313">For more information, see <xref:System.Char.IsControl%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDigit">
      <MemberSignature Language="C#" Value="public static bool IsDigit (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDigit(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsDigit(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDigit (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDigit(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsDigit : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsDigit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="01189-314">要计算的 rune。</span><span class="sxs-lookup"><span data-stu-id="01189-314">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="01189-315">返回一个值，该值指示指定的 rune 是否属于十进制数字类别。</span><span class="sxs-lookup"><span data-stu-id="01189-315">Returns a value that indicates whether the specified rune is categorized as a decimal digit.</span></span></summary>
        <returns><span data-ttu-id="01189-316">如果 <see langword="true" /> 是十进制数，则为 <paramref name="value" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01189-316"><see langword="true" /> if <paramref name="value" /> is a decimal digit; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="01189-317">此方法等效于对结果进行查询 <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> 和比较 <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber> 。</span><span class="sxs-lookup"><span data-stu-id="01189-317">This method is equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber>.</span></span>

<span data-ttu-id="01189-318">有关详细信息，请参阅 <xref:System.Char.IsDigit%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="01189-318">For more information, see <xref:System.Char.IsDigit%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLetter">
      <MemberSignature Language="C#" Value="public static bool IsLetter (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetter(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsLetter(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetter (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetter(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsLetter : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsLetter value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="01189-319">要计算的 rune。</span><span class="sxs-lookup"><span data-stu-id="01189-319">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="01189-320">返回一个值，该值指示指定的 rune 是否属于字母类别。</span><span class="sxs-lookup"><span data-stu-id="01189-320">Returns a value that indicates whether the specified rune is categorized as a letter.</span></span></summary>
        <returns><span data-ttu-id="01189-321">如果 <see langword="true" /> 是一个字母，则为 <paramref name="value" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01189-321"><see langword="true" /> if <paramref name="value" /> is a letter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="01189-322">此方法等效于对 <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> 任何值 <xref:System.Globalization.UnicodeCategory.UppercaseLetter> （ <xref:System.Globalization.UnicodeCategory.LowercaseLetter> 、 <xref:System.Globalization.UnicodeCategory.TitlecaseLetter> 、 <xref:System.Globalization.UnicodeCategory.ModifierLetter> 和）进行查询和比较 <xref:System.Globalization.UnicodeCategory.OtherLetter> 。</span><span class="sxs-lookup"><span data-stu-id="01189-322">This method is equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against any of the values <xref:System.Globalization.UnicodeCategory.UppercaseLetter>, <xref:System.Globalization.UnicodeCategory.LowercaseLetter>, <xref:System.Globalization.UnicodeCategory.TitlecaseLetter>, <xref:System.Globalization.UnicodeCategory.ModifierLetter>, and <xref:System.Globalization.UnicodeCategory.OtherLetter>.</span></span>

<span data-ttu-id="01189-323">有关详细信息，请参阅 <xref:System.Char.IsLetter%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="01189-323">For more information, see <xref:System.Char.IsLetter%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLetterOrDigit">
      <MemberSignature Language="C#" Value="public static bool IsLetterOrDigit (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetterOrDigit(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsLetterOrDigit(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetterOrDigit (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetterOrDigit(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsLetterOrDigit : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsLetterOrDigit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="01189-324">要计算的 rune。</span><span class="sxs-lookup"><span data-stu-id="01189-324">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="01189-325">返回一个值，该值指示指定的 rune 属于字母类别还是十进制数字类别。</span><span class="sxs-lookup"><span data-stu-id="01189-325">Returns a value that indicates whether the specified rune is categorized as a letter or a decimal digit.</span></span></summary>
        <returns><span data-ttu-id="01189-326">如果 <see langword="true" /> 是字母或十进制数，则为 <paramref name="value" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01189-326"><see langword="true" /> if <paramref name="value" /> is a letter or a decimal digit; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="01189-327">此方法等效于对 <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> 任何值 <xref:System.Globalization.UnicodeCategory.UppercaseLetter> （ <xref:System.Globalization.UnicodeCategory.LowercaseLetter> 、 <xref:System.Globalization.UnicodeCategory.TitlecaseLetter> 、、 <xref:System.Globalization.UnicodeCategory.ModifierLetter> <xref:System.Globalization.UnicodeCategory.OtherLetter> 和 <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber> ）进行查询和比较。</span><span class="sxs-lookup"><span data-stu-id="01189-327">This method is equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against any of the values <xref:System.Globalization.UnicodeCategory.UppercaseLetter>, <xref:System.Globalization.UnicodeCategory.LowercaseLetter>, <xref:System.Globalization.UnicodeCategory.TitlecaseLetter>, <xref:System.Globalization.UnicodeCategory.ModifierLetter>, <xref:System.Globalization.UnicodeCategory.OtherLetter>, and <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber>.</span></span>

<span data-ttu-id="01189-328">有关详细信息，请参阅 <xref:System.Char.IsLetterOrDigit%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="01189-328">For more information, see <xref:System.Char.IsLetterOrDigit%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLower">
      <MemberSignature Language="C#" Value="public static bool IsLower (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLower(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsLower(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLower (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLower(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsLower : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsLower value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="01189-329">要计算的 rune。</span><span class="sxs-lookup"><span data-stu-id="01189-329">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="01189-330">返回一个值，该值指示指定的 rune 是否属于小写字母类别。</span><span class="sxs-lookup"><span data-stu-id="01189-330">Returns a value that indicates whether the specified rune is categorized as a lowercase letter.</span></span></summary>
        <returns><span data-ttu-id="01189-331">如果 <see langword="true" /> 是一个小写字母，则为 <paramref name="value" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01189-331"><see langword="true" /> if <paramref name="value" /> is a lowercase letter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="01189-332">此方法等效于对结果进行查询 <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> 和比较 <xref:System.Globalization.UnicodeCategory.LowercaseLetter> 。</span><span class="sxs-lookup"><span data-stu-id="01189-332">This method is equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against <xref:System.Globalization.UnicodeCategory.LowercaseLetter>.</span></span>

<span data-ttu-id="01189-333">有关详细信息，请参阅 <xref:System.Char.IsLower%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="01189-333">For more information, see <xref:System.Char.IsLower%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNumber">
      <MemberSignature Language="C#" Value="public static bool IsNumber (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNumber(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsNumber(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNumber (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNumber(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsNumber : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsNumber value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="01189-334">要计算的 rune。</span><span class="sxs-lookup"><span data-stu-id="01189-334">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="01189-335">返回一个值，该值指示指定的 rune 是否属于数字类别。</span><span class="sxs-lookup"><span data-stu-id="01189-335">Returns a value that indicates whether the specified rune is categorized as a number.</span></span></summary>
        <returns><span data-ttu-id="01189-336">如果 <see langword="true" /> 是一个数字，则为 <paramref name="value" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01189-336"><see langword="true" /> if <paramref name="value" /> is a number; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="01189-337">此方法等效于查询 <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> 结果并将其与任何值 <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber> 、和进行比较 <xref:System.Globalization.UnicodeCategory.LetterNumber> <xref:System.Globalization.UnicodeCategory.OtherNumber> 。</span><span class="sxs-lookup"><span data-stu-id="01189-337">This method is equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against any of the values <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber>, <xref:System.Globalization.UnicodeCategory.LetterNumber>, and <xref:System.Globalization.UnicodeCategory.OtherNumber>.</span></span>

<span data-ttu-id="01189-338">有关详细信息，请参阅 <xref:System.Char.IsNumber%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="01189-338">For more information, see <xref:System.Char.IsNumber%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPunctuation">
      <MemberSignature Language="C#" Value="public static bool IsPunctuation (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPunctuation(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsPunctuation(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPunctuation (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPunctuation(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsPunctuation : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsPunctuation value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="01189-339">要计算的 rune。</span><span class="sxs-lookup"><span data-stu-id="01189-339">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="01189-340">返回一个值，该值指示指定的 rune 是否属于标点符号类别。</span><span class="sxs-lookup"><span data-stu-id="01189-340">Returns a value that indicates whether the specified rune is categorized as a punctuation mark.</span></span></summary>
        <returns><span data-ttu-id="01189-341">如果 <see langword="true" /> 是一个标点符号，则为 <paramref name="value" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01189-341"><see langword="true" /> if <paramref name="value" /> is a punctuation mark; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="01189-342">此方法等效于对 <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> 任何值 <xref:System.Globalization.UnicodeCategory.ConnectorPunctuation> （ <xref:System.Globalization.UnicodeCategory.DashPunctuation> 、、、、 <xref:System.Globalization.UnicodeCategory.OpenPunctuation> <xref:System.Globalization.UnicodeCategory.ClosePunctuation> <xref:System.Globalization.UnicodeCategory.InitialQuotePunctuation> <xref:System.Globalization.UnicodeCategory.FinalQuotePunctuation> 和 <xref:System.Globalization.UnicodeCategory.OtherPunctuation> ）进行查询和比较。</span><span class="sxs-lookup"><span data-stu-id="01189-342">This method is equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against any of the values <xref:System.Globalization.UnicodeCategory.ConnectorPunctuation>, <xref:System.Globalization.UnicodeCategory.DashPunctuation>, <xref:System.Globalization.UnicodeCategory.OpenPunctuation>, <xref:System.Globalization.UnicodeCategory.ClosePunctuation>, <xref:System.Globalization.UnicodeCategory.InitialQuotePunctuation>, <xref:System.Globalization.UnicodeCategory.FinalQuotePunctuation>, and <xref:System.Globalization.UnicodeCategory.OtherPunctuation>.</span></span>

<span data-ttu-id="01189-343">有关详细信息，请参阅 <xref:System.Char.IsPunctuation%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="01189-343">For more information, see <xref:System.Char.IsPunctuation%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSeparator">
      <MemberSignature Language="C#" Value="public static bool IsSeparator (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSeparator(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsSeparator(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSeparator (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSeparator(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsSeparator : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsSeparator value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="01189-344">要计算的 rune。</span><span class="sxs-lookup"><span data-stu-id="01189-344">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="01189-345">返回一个值，该值指示指定的 rune 是否属于分隔符类别。</span><span class="sxs-lookup"><span data-stu-id="01189-345">Returns a value that indicates whether the specified rune is categorized as a separator character.</span></span></summary>
        <returns><span data-ttu-id="01189-346">如果 <see langword="true" /> 是分隔符，则为 <paramref name="value" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01189-346"><see langword="true" /> if <paramref name="value" /> is a separator character; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="01189-347">此方法等效于查询 <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> 结果并将其与任何值 <xref:System.Globalization.UnicodeCategory.SpaceSeparator> 、和进行比较 <xref:System.Globalization.UnicodeCategory.LineSeparator> <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> 。</span><span class="sxs-lookup"><span data-stu-id="01189-347">This method is equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against any of the values <xref:System.Globalization.UnicodeCategory.SpaceSeparator>, <xref:System.Globalization.UnicodeCategory.LineSeparator>, and <xref:System.Globalization.UnicodeCategory.ParagraphSeparator>.</span></span>

<span data-ttu-id="01189-348">有关详细信息，请参阅 <xref:System.Char.IsSeparator%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="01189-348">For more information, see <xref:System.Char.IsSeparator%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSymbol">
      <MemberSignature Language="C#" Value="public static bool IsSymbol (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSymbol(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsSymbol(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSymbol (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSymbol(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsSymbol : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsSymbol value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="01189-349">要计算的 rune。</span><span class="sxs-lookup"><span data-stu-id="01189-349">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="01189-350">返回一个值，该值指示指定的 rune 是否属于符号字符类别。</span><span class="sxs-lookup"><span data-stu-id="01189-350">Returns a value that indicates whether the specified rune is categorized as a symbol character.</span></span></summary>
        <returns><span data-ttu-id="01189-351">如果 <see langword="true" /> 是符号字符，则为 <paramref name="value" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01189-351"><see langword="true" /> if <paramref name="value" /> is a symbol character; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="01189-352">此方法等效于对 <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> 任何值 <xref:System.Globalization.UnicodeCategory.MathSymbol> （、和）进行查询和比较 <xref:System.Globalization.UnicodeCategory.CurrencySymbol> <xref:System.Globalization.UnicodeCategory.ModifierSymbol> <xref:System.Globalization.UnicodeCategory.OtherSymbol> 。</span><span class="sxs-lookup"><span data-stu-id="01189-352">This method is equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against any of the values <xref:System.Globalization.UnicodeCategory.MathSymbol>, <xref:System.Globalization.UnicodeCategory.CurrencySymbol>, <xref:System.Globalization.UnicodeCategory.ModifierSymbol>, and <xref:System.Globalization.UnicodeCategory.OtherSymbol>.</span></span>

<span data-ttu-id="01189-353">有关详细信息，请参阅 <xref:System.Char.IsSymbol%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="01189-353">For more information, see <xref:System.Char.IsSymbol%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUpper">
      <MemberSignature Language="C#" Value="public static bool IsUpper (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUpper(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsUpper(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUpper (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUpper(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsUpper : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsUpper value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="01189-354">要计算的 rune。</span><span class="sxs-lookup"><span data-stu-id="01189-354">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="01189-355">返回一个值，该值指示指定的 rune 是否属于大写字母类别。</span><span class="sxs-lookup"><span data-stu-id="01189-355">Returns a value that indicates whether the specified rune is categorized as an uppercase letter.</span></span></summary>
        <returns><span data-ttu-id="01189-356">如果 <paramref name="value" /> 是一个大写字母，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01189-356"><see langword="true" /> if <paramref name="value" /> is an uppercase letter; otherwise,<see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="01189-357">此方法等效于对结果进行查询 <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> 和比较 <xref:System.Globalization.UnicodeCategory.UppercaseLetter> 。</span><span class="sxs-lookup"><span data-stu-id="01189-357">This method is equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against <xref:System.Globalization.UnicodeCategory.UppercaseLetter>.</span></span>

<span data-ttu-id="01189-358">有关详细信息，请参阅 <xref:System.Char.IsUpper%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="01189-358">For more information, see <xref:System.Char.IsUpper%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public static bool IsValid (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValid(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsValid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValid (value As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValid(int value);" />
      <MemberSignature Language="F#" Value="static member IsValid : int -&gt; bool" Usage="System.Text.Rune.IsValid value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="01189-359">Unicode 标量值。</span><span class="sxs-lookup"><span data-stu-id="01189-359">The Unicode scalar value.</span></span></param>
        <summary><span data-ttu-id="01189-360">返回一个值，该值指示 32 位带符号整数是否表示有效的 Unicode 标量值；即它在 [ U+0000..U+D7FF ]（含首尾值）或 [ U+E000..U+10FFFF ]（含首尾值）范围内。</span><span class="sxs-lookup"><span data-stu-id="01189-360">Returns a value that indicates whether a 32-bit signed integer represents a valid Unicode scalar value; that is, it is in the range [ U+0000..U+D7FF ], inclusive; or [ U+E000..U+10FFFF ], inclusive.</span></span></summary>
        <returns><span data-ttu-id="01189-361">如果 <paramref name="value" /> 是有效的 Unicode 标量值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01189-361"><see langword="true" /> if <paramref name="value" /> is a valid Unicode scalar value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public static bool IsValid (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValid(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsValid(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValid (value As UInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValid(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member IsValid : uint32 -&gt; bool" Usage="System.Text.Rune.IsValid value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="01189-362">Unicode 标量值。</span><span class="sxs-lookup"><span data-stu-id="01189-362">The Unicode scalar value.</span></span></param>
        <summary><span data-ttu-id="01189-363">返回一个值，该值指示 32 位无符号整数是否表示有效的 Unicode 标量值；即它在 [ U+0000..U+D7FF ]（含首尾值）或 [ U+E000..U+10FFFF ]（含首尾值）范围内。</span><span class="sxs-lookup"><span data-stu-id="01189-363">Returns a value that indicates whether a 32-bit unsigned integer represents a valid Unicode scalar value; that is, it is in the range [ U+0000..U+D7FF ], inclusive, or [ U+E000..U+10FFFF ], inclusive.</span></span></summary>
        <returns><span data-ttu-id="01189-364">如果 <paramref name="value" /> 是有效的 Unicode 标量值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01189-364"><see langword="true" /> if <paramref name="value" /> is a valid Unicode scalar value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWhiteSpace">
      <MemberSignature Language="C#" Value="public static bool IsWhiteSpace (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWhiteSpace(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsWhiteSpace(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWhiteSpace (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWhiteSpace(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsWhiteSpace : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsWhiteSpace value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="01189-365">要计算的 rune。</span><span class="sxs-lookup"><span data-stu-id="01189-365">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="01189-366">返回一个值，该值指示指定的 rune 是否属于空格字符类别。</span><span class="sxs-lookup"><span data-stu-id="01189-366">Returns a value that indicates whether the specified rune is categorized as a white space character.</span></span></summary>
        <returns><span data-ttu-id="01189-367">如果 <paramref name="value" /> 是一个空格字符，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01189-367"><see langword="true" /> if <paramref name="value" /> is a white space character; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="01189-368">此方法通常等效于查询 <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> 结果并将其与任何值 <xref:System.Globalization.UnicodeCategory.SpaceSeparator> 、和进行比较 <xref:System.Globalization.UnicodeCategory.LineSeparator> <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> 。</span><span class="sxs-lookup"><span data-stu-id="01189-368">This method is generally equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against any of the values <xref:System.Globalization.UnicodeCategory.SpaceSeparator>, <xref:System.Globalization.UnicodeCategory.LineSeparator>, and <xref:System.Globalization.UnicodeCategory.ParagraphSeparator>.</span></span> <span data-ttu-id="01189-369">但是， <xref:System.Text.Rune> 在类别中有一些 <xref:System.Globalization.UnicodeCategory.Control> 也归类为空白字符，此方法会对这些值进行说明。</span><span class="sxs-lookup"><span data-stu-id="01189-369">However, there are some <xref:System.Text.Rune>s in the <xref:System.Globalization.UnicodeCategory.Control> category which are also classified as white space characters, and this method accounts for those values.</span></span>

<span data-ttu-id="01189-370">有关详细信息，请参阅 <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="01189-370">For more information, see <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Text.Rune left, System.Text.Rune right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Text.Rune left, valuetype System.Text.Rune right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.op_Equality(System.Text.Rune,System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As Rune, right As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Text::Rune left, System::Text::Rune right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Text.Rune * System.Text.Rune -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Text.Rune" />
        <Parameter Name="right" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="01189-371">要比较的第一个值。</span><span class="sxs-lookup"><span data-stu-id="01189-371">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="01189-372">要比较的第二个值。</span><span class="sxs-lookup"><span data-stu-id="01189-372">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="01189-373">返回一个值，该值指示两个 <see cref="T:System.Text.Rune" /> 实例是否相等。</span><span class="sxs-lookup"><span data-stu-id="01189-373">Returns a value that indicates whether two <see cref="T:System.Text.Rune" /> instances are equal.</span></span></summary>
        <returns><span data-ttu-id="01189-374">如果 <paramref name="left" /> 和 <paramref name="right" /> 相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01189-374"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Text.Rune (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Text.Rune op_Explicit(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.op_Explicit(System.Char)~System.Text.Rune" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (ch As Char) As Rune" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Text::Rune(char ch);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : char -&gt; System.Text.Rune" Usage="System.Text.Rune.op_Explicit ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Rune</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="01189-375">要转换的 16 位 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="01189-375">The 16-bit Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="01189-376">定义从 16 位 Unicode 字符到 <see cref="T:System.Text.Rune" /> 的显式转换。</span><span class="sxs-lookup"><span data-stu-id="01189-376">Defines an explicit conversion of a 16-bit Unicode character to a <see cref="T:System.Text.Rune" />.</span></span></summary>
        <returns><span data-ttu-id="01189-377">32 位 Unicode 字符形式的 <paramref name="ch" />。</span><span class="sxs-lookup"><span data-stu-id="01189-377"><paramref name="ch" /> as a 32-bit Unicode character.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="01189-378"><paramref name="ch" /> 是表示代理码位的 Unicode 标量。</span><span class="sxs-lookup"><span data-stu-id="01189-378"><paramref name="ch" /> is a Unicode scalar that represents a surrogate code point.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Text.Rune (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Text.Rune op_Explicit(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.op_Explicit(System.Int32)~System.Text.Rune" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Integer) As Rune" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Text::Rune(int value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : int -&gt; System.Text.Rune" Usage="System.Text.Rune.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Rune</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="01189-379">要转换的 32 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="01189-379">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="01189-380">定义从 32 位带符号整数到 <see cref="T:System.Text.Rune" /> 的显式转换。</span><span class="sxs-lookup"><span data-stu-id="01189-380">Defines an explicit conversion of a 32-bit signed integer to a <see cref="T:System.Text.Rune" />.</span></span></summary>
        <returns><span data-ttu-id="01189-381">32 位 Unicode 字符形式的 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="01189-381"><paramref name="value" /> as a 32-bit Unicode character.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="01189-382"><paramref name="value" /> 是无效的 Unicode 标量。</span><span class="sxs-lookup"><span data-stu-id="01189-382"><paramref name="value" /> is an invalid Unicode scalar.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Text.Rune (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Text.Rune op_Explicit(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.op_Explicit(System.UInt32)~System.Text.Rune" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As UInteger) As Rune" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Text::Rune(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : uint32 -&gt; System.Text.Rune" Usage="System.Text.Rune.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Rune</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="01189-383">要转换的 32 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="01189-383">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="01189-384">定义从 32 位无符号整数到 <see cref="T:System.Text.Rune" /> 的显式转换。</span><span class="sxs-lookup"><span data-stu-id="01189-384">Defines an explicit conversion of a 32-bit unsigned integer to a <see cref="T:System.Text.Rune" />.</span></span></summary>
        <returns><span data-ttu-id="01189-385">32 位 Unicode 字符形式的 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="01189-385"><paramref name="value" /> as a 32-bit Unicode character.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="01189-386"><paramref name="value" /> 是无效的 Unicode 标量。</span><span class="sxs-lookup"><span data-stu-id="01189-386"><paramref name="value" /> is an invalid Unicode scalar.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (System.Text.Rune left, System.Text.Rune right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.Text.Rune left, valuetype System.Text.Rune right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.op_GreaterThan(System.Text.Rune,System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As Rune, right As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::Text::Rune left, System::Text::Rune right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : System.Text.Rune * System.Text.Rune -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Text.Rune" />
        <Parameter Name="right" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="01189-387">要比较的第一个值。</span><span class="sxs-lookup"><span data-stu-id="01189-387">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="01189-388">要比较的第二个值。</span><span class="sxs-lookup"><span data-stu-id="01189-388">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="01189-389">返回一个值，该值指示指定的 <see cref="T:System.Text.Rune" /> 是否大于另一个指定的 <see cref="T:System.Text.Rune" />。</span><span class="sxs-lookup"><span data-stu-id="01189-389">Returns a value indicating whether a specified <see cref="T:System.Text.Rune" /> is greater than another specified <see cref="T:System.Text.Rune" />.</span></span></summary>
        <returns><span data-ttu-id="01189-390">如果 <see langword="true" /> 大于 <paramref name="left" />，则为 <paramref name="right" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01189-390"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (System.Text.Rune left, System.Text.Rune right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.Text.Rune left, valuetype System.Text.Rune right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.op_GreaterThanOrEqual(System.Text.Rune,System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As Rune, right As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::Text::Rune left, System::Text::Rune right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : System.Text.Rune * System.Text.Rune -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Text.Rune" />
        <Parameter Name="right" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="01189-391">要比较的第一个值。</span><span class="sxs-lookup"><span data-stu-id="01189-391">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="01189-392">要比较的第二个值。</span><span class="sxs-lookup"><span data-stu-id="01189-392">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="01189-393">返回一个值，该值指示指定的 <see cref="T:System.Text.Rune" /> 是否大于等于另一个指定的 <see cref="T:System.Text.Rune" />。</span><span class="sxs-lookup"><span data-stu-id="01189-393">Returns a value indicating whether a specified <see cref="T:System.Text.Rune" /> is greater than or equal to another specified <see cref="T:System.Text.Rune" />.</span></span></summary>
        <returns><span data-ttu-id="01189-394">如果 <paramref name="left" /> 大于等于 <paramref name="right" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01189-394"><see langword="true" /> if <paramref name="left" /> is greater than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Text.Rune left, System.Text.Rune right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Text.Rune left, valuetype System.Text.Rune right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.op_Inequality(System.Text.Rune,System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As Rune, right As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Text::Rune left, System::Text::Rune right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Text.Rune * System.Text.Rune -&gt; bool" Usage="System.Text.Rune.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Text.Rune" />
        <Parameter Name="right" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="01189-395">要比较的第一个值。</span><span class="sxs-lookup"><span data-stu-id="01189-395">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="01189-396">要比较的第二个值。</span><span class="sxs-lookup"><span data-stu-id="01189-396">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="01189-397">返回一个值，该值指示两个 <see cref="T:System.Text.Rune" /> 实例是否具有不同的值。</span><span class="sxs-lookup"><span data-stu-id="01189-397">Returns a value that indicates whether two <see cref="T:System.Text.Rune" /> instances have different values.</span></span></summary>
        <returns><span data-ttu-id="01189-398">如果 <paramref name="left" /> 和 <paramref name="right" /> 不相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01189-398"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (System.Text.Rune left, System.Text.Rune right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.Text.Rune left, valuetype System.Text.Rune right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.op_LessThan(System.Text.Rune,System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As Rune, right As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::Text::Rune left, System::Text::Rune right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : System.Text.Rune * System.Text.Rune -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Text.Rune" />
        <Parameter Name="right" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="01189-399">要比较的第一个值。</span><span class="sxs-lookup"><span data-stu-id="01189-399">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="01189-400">要比较的第二个值。</span><span class="sxs-lookup"><span data-stu-id="01189-400">the second value to compare.</span></span></param>
        <summary><span data-ttu-id="01189-401">返回一个值，该值指示指定的 <see cref="T:System.Text.Rune" /> 是否小于另一个指定的 <see cref="T:System.Text.Rune" />。</span><span class="sxs-lookup"><span data-stu-id="01189-401">Returns a value indicating whether a specified <see cref="T:System.Text.Rune" /> is less than another specified <see cref="T:System.Text.Rune" />.</span></span></summary>
        <returns><span data-ttu-id="01189-402">如果 <paramref name="left" /> 小于 <paramref name="right" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01189-402"><see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (System.Text.Rune left, System.Text.Rune right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.Text.Rune left, valuetype System.Text.Rune right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.op_LessThanOrEqual(System.Text.Rune,System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As Rune, right As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::Text::Rune left, System::Text::Rune right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : System.Text.Rune * System.Text.Rune -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Text.Rune" />
        <Parameter Name="right" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="01189-403">要比较的第一个值。</span><span class="sxs-lookup"><span data-stu-id="01189-403">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="01189-404">要比较的第二个值。</span><span class="sxs-lookup"><span data-stu-id="01189-404">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="01189-405">返回一个值，该值指示指定的 <see cref="T:System.Text.Rune" /> 是小于还是等于另一个指定的 <see cref="T:System.Text.Rune" />。</span><span class="sxs-lookup"><span data-stu-id="01189-405">Returns a value indicating whether a specified <see cref="T:System.Text.Rune" /> is less than or equal to another specified <see cref="T:System.Text.Rune" />.</span></span></summary>
        <returns><span data-ttu-id="01189-406">如果 <paramref name="left" /> 小于等于 <paramref name="right" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01189-406"><see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Plane">
      <MemberSignature Language="C#" Value="public int Plane { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Plane" />
      <MemberSignature Language="DocId" Value="P:System.Text.Rune.Plane" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Plane As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Plane { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Plane : int" Usage="System.Text.Rune.Plane" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01189-407">获取包含此标量的 Unicode 平面（0 至 16，含 0 和 16）。</span><span class="sxs-lookup"><span data-stu-id="01189-407">Gets the Unicode plane (0 to 16, inclusive) that contains this scalar.</span></span></summary>
        <value><span data-ttu-id="01189-408">Unicode 平面 (0 到16，其中包含此标量) 。</span><span class="sxs-lookup"><span data-stu-id="01189-408">The Unicode plane (0 to 16, inclusive) that contains this scalar.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplacementChar">
      <MemberSignature Language="C#" Value="public static System.Text.Rune ReplacementChar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Text.Rune ReplacementChar" />
      <MemberSignature Language="DocId" Value="P:System.Text.Rune.ReplacementChar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ReplacementChar As Rune" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Rune ReplacementChar { System::Text::Rune get(); };" />
      <MemberSignature Language="F#" Value="member this.ReplacementChar : System.Text.Rune" Usage="System.Text.Rune.ReplacementChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Rune</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01189-409">获取表示 Unicode 替换字符 U+FFFD 的 <see cref="T:System.Text.Rune" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="01189-409">Gets a <see cref="T:System.Text.Rune" /> instance that represents the Unicode replacement character U+FFFD.</span></span></summary>
        <value><span data-ttu-id="01189-410">一个 <see cref="T:System.Text.Rune" /> 实例，表示 Unicode 替换字符 U+FFFD。</span><span class="sxs-lookup"><span data-stu-id="01189-410">A <see cref="T:System.Text.Rune" /> instance that represents the Unicode replacement character U+FFFD.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberSignature Language="F#" Value="abstract member System.IComparable.CompareTo : obj -&gt; int&#xA;override this.System.IComparable.CompareTo : obj -&gt; int" Usage="rune.System.IComparable.CompareTo obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="01189-411">要与当前实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="01189-411">The object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="01189-412">将当前实例与指定的对象进行比较。</span><span class="sxs-lookup"><span data-stu-id="01189-412">Compares the current instance to the specified object.</span></span></summary>
        <returns><span data-ttu-id="01189-413">一个带符号整数，指示此实例在排序顺序中相对于 <paramref name="other" /> 的位置：</span><span class="sxs-lookup"><span data-stu-id="01189-413">A signed integer indicating the position of this instance in the sort order in relation to <paramref name="other" />:</span></span> <br /><span data-ttu-id="01189-414">- 小于零：此实例位于 <paramref name="other" /> 之前。</span><span class="sxs-lookup"><span data-stu-id="01189-414">- Less than zero: This instance precedes <paramref name="other" />.</span></span> 
<br /><span data-ttu-id="01189-415">- 零：实例在排序顺序中的位置与 <paramref name="other" /> 相同。</span><span class="sxs-lookup"><span data-stu-id="01189-415">- Zero: The instance has the same position in the sort order as <paramref name="other" />.</span></span>
<br /><span data-ttu-id="01189-416">- 大于零：此实例位于 <paramref name="other" /> 之后。</span><span class="sxs-lookup"><span data-stu-id="01189-416">- Greater than zero: This instance follows <paramref name="other" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="01189-417">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="01189-417">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="01189-418">它只能在 <xref:System.Text.Rune> 实例被强制转换为 <xref:System.IComparable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="01189-418">It can be used only when the <xref:System.Text.Rune> instance is cast to an <xref:System.IComparable> interface.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public static System.Text.Rune ToLower (System.Text.Rune value, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Text.Rune ToLower(valuetype System.Text.Rune value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.ToLower(System.Text.Rune,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLower (value As Rune, culture As CultureInfo) As Rune" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Rune ToLower(System::Text::Rune value, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member ToLower : System.Text.Rune * System.Globalization.CultureInfo -&gt; System.Text.Rune" Usage="System.Text.Rune.ToLower (value, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Rune</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="01189-419">要转换的 32 位 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="01189-419">The 32-bit Unicode character to convert.</span></span></param>
        <param name="culture"><span data-ttu-id="01189-420">一个对象，用于提供区域性特定的大小写规则。</span><span class="sxs-lookup"><span data-stu-id="01189-420">An object that supplies culture-specific casing rules.</span></span></param>
        <summary><span data-ttu-id="01189-421">根据指定区域性的大小写规则返回指定 <see cref="T:System.Text.Rune" /> 转换为小写形式的副本。</span><span class="sxs-lookup"><span data-stu-id="01189-421">Returns a copy of the specified <see cref="T:System.Text.Rune" /> converted to lowercase, using the casing rules of the specified culture.</span></span></summary>
        <returns><span data-ttu-id="01189-422"><paramref name="value" /> 的小写等效形式。</span><span class="sxs-lookup"><span data-stu-id="01189-422">The lowercase equivalent of <paramref name="value" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToLowerInvariant">
      <MemberSignature Language="C#" Value="public static System.Text.Rune ToLowerInvariant (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Text.Rune ToLowerInvariant(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.ToLowerInvariant(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLowerInvariant (value As Rune) As Rune" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Rune ToLowerInvariant(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member ToLowerInvariant : System.Text.Rune -&gt; System.Text.Rune" Usage="System.Text.Rune.ToLowerInvariant value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Rune</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="01189-423">要转换的 32 位 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="01189-423">The 32-bit Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="01189-424">根据固定区域性的大小写规则返回指定 <see cref="T:System.Text.Rune" /> 转换为小写形式的副本。</span><span class="sxs-lookup"><span data-stu-id="01189-424">Returns a copy of the specified <see cref="T:System.Text.Rune" /> converted to lowercase using the casing rules of the invariant culture.</span></span></summary>
        <returns><span data-ttu-id="01189-425"><paramref name="value" /> 的小写等效形式。</span><span class="sxs-lookup"><span data-stu-id="01189-425">The lowercase equivalent of <paramref name="value" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="rune.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01189-426">返回此 <see cref="T:System.Text.Rune" /> 实例的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="01189-426">Returns the string representation of this <see cref="T:System.Text.Rune" /> instance.</span></span></summary>
        <returns><span data-ttu-id="01189-427">此 rune 的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="01189-427">The string representation of this rune.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public static System.Text.Rune ToUpper (System.Text.Rune value, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Text.Rune ToUpper(valuetype System.Text.Rune value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.ToUpper(System.Text.Rune,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpper (value As Rune, culture As CultureInfo) As Rune" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Rune ToUpper(System::Text::Rune value, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member ToUpper : System.Text.Rune * System.Globalization.CultureInfo -&gt; System.Text.Rune" Usage="System.Text.Rune.ToUpper (value, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Rune</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="01189-428">要转换的 32 位 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="01189-428">The 32-bit Unicode character to convert.</span></span></param>
        <param name="culture"><span data-ttu-id="01189-429">一个对象，用于提供区域性特定的大小写规则。</span><span class="sxs-lookup"><span data-stu-id="01189-429">An object that supplies culture-specific casing rules.</span></span></param>
        <summary><span data-ttu-id="01189-430">根据指定区域性的大小写规则返回指定 <see cref="T:System.Text.Rune" /> 转换为大写形式的副本。</span><span class="sxs-lookup"><span data-stu-id="01189-430">Returns a copy of the specified <see cref="T:System.Text.Rune" /> converted to uppercase, using the casing rules of the specified culture.</span></span></summary>
        <returns><span data-ttu-id="01189-431"><paramref name="value" /> 的大写等效形式。</span><span class="sxs-lookup"><span data-stu-id="01189-431">The uppercase equivalent of <paramref name="value" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUpperInvariant">
      <MemberSignature Language="C#" Value="public static System.Text.Rune ToUpperInvariant (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Text.Rune ToUpperInvariant(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.ToUpperInvariant(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpperInvariant (value As Rune) As Rune" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Rune ToUpperInvariant(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member ToUpperInvariant : System.Text.Rune -&gt; System.Text.Rune" Usage="System.Text.Rune.ToUpperInvariant value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Rune</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="01189-432">要转换的 32 位 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="01189-432">The 32-bit Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="01189-433">根据固定区域性的大小写规则返回指定 <see cref="T:System.Text.Rune" /> 转换为大写形式的副本。</span><span class="sxs-lookup"><span data-stu-id="01189-433">Returns a copy of the specified <see cref="T:System.Text.Rune" /> converted to uppercase using the casing rules of the invariant culture.</span></span></summary>
        <returns><span data-ttu-id="01189-434"><paramref name="value" /> 的大写等效形式。</span><span class="sxs-lookup"><span data-stu-id="01189-434">The uppercase equivalent of <paramref name="value" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreate">
      <MemberSignature Language="C#" Value="public static bool TryCreate (char ch, out System.Text.Rune result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryCreate(char ch, [out] valuetype System.Text.Rune&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.TryCreate(System.Char,System.Text.Rune@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryCreate (ch As Char, ByRef result As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryCreate(char ch, [Runtime::InteropServices::Out] System::Text::Rune % result);" />
      <MemberSignature Language="F#" Value="static member TryCreate : char * Rune -&gt; bool" Usage="System.Text.Rune.TryCreate (ch, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
        <Parameter Name="result" Type="System.Text.Rune" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="01189-435">从中创建 rune 的字符。</span><span class="sxs-lookup"><span data-stu-id="01189-435">The character from which to create the rune.</span></span></param>
        <param name="result"><span data-ttu-id="01189-436">此方法返回时，对应于 <paramref name="ch" /> 的 rune。</span><span class="sxs-lookup"><span data-stu-id="01189-436">When this method returns, the rune that corresponds to <paramref name="ch" />.</span></span></param>
        <summary><span data-ttu-id="01189-437">尝试从指定的字符中创建 <see cref="T:System.Text.Rune" />，并返回指示操作是否成功的值。</span><span class="sxs-lookup"><span data-stu-id="01189-437">Attempts to create a <see cref="T:System.Text.Rune" /> from a specified character and returns a value that indicates whether the operation succeeded.</span></span></summary>
        <returns><span data-ttu-id="01189-438">如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01189-438"><see langword="true" /> if the method succeeded; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreate">
      <MemberSignature Language="C#" Value="public static bool TryCreate (int value, out System.Text.Rune result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryCreate(int32 value, [out] valuetype System.Text.Rune&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.TryCreate(System.Int32,System.Text.Rune@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryCreate (value As Integer, ByRef result As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryCreate(int value, [Runtime::InteropServices::Out] System::Text::Rune % result);" />
      <MemberSignature Language="F#" Value="static member TryCreate : int * Rune -&gt; bool" Usage="System.Text.Rune.TryCreate (value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="result" Type="System.Text.Rune" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="01189-439">Unicode 标量值。</span><span class="sxs-lookup"><span data-stu-id="01189-439">The Unicode scalar value.</span></span></param>
        <param name="result"><span data-ttu-id="01189-440">此方法返回时，对应于 <paramref name="value" /> 的 rune。</span><span class="sxs-lookup"><span data-stu-id="01189-440">When this method returns, the rune that corresponds to <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="01189-441">尝试从表示 Unicode 标量值的指定带符号整数中创建 <see cref="T:System.Text.Rune" />。</span><span class="sxs-lookup"><span data-stu-id="01189-441">Attempts to create a <see cref="T:System.Text.Rune" /> from a specified signed integer that represents a Unicode scalar value.</span></span></summary>
        <returns><span data-ttu-id="01189-442">如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01189-442"><see langword="true" /> if the method succeeded; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreate">
      <MemberSignature Language="C#" Value="public static bool TryCreate (uint value, out System.Text.Rune result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryCreate(unsigned int32 value, [out] valuetype System.Text.Rune&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.TryCreate(System.UInt32,System.Text.Rune@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryCreate (value As UInteger, ByRef result As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryCreate(System::UInt32 value, [Runtime::InteropServices::Out] System::Text::Rune % result);" />
      <MemberSignature Language="F#" Value="static member TryCreate : uint32 * Rune -&gt; bool" Usage="System.Text.Rune.TryCreate (value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="result" Type="System.Text.Rune" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="01189-443">Unicode 标量值。</span><span class="sxs-lookup"><span data-stu-id="01189-443">The Unicode scalar value.</span></span></param>
        <param name="result"><span data-ttu-id="01189-444">此方法返回时，对应于 <paramref name="value" /> 的 rune。</span><span class="sxs-lookup"><span data-stu-id="01189-444">When this method returns, the rune that corresponds to <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="01189-445">尝试从表示 Unicode 标量值的指定 32 位无符号整数中创建 <see cref="T:System.Text.Rune" />。</span><span class="sxs-lookup"><span data-stu-id="01189-445">Attempts to create a <see cref="T:System.Text.Rune" /> from the specified 32-bit unsigned integer that represents a Unicode scalar value.</span></span></summary>
        <returns><span data-ttu-id="01189-446">如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01189-446"><see langword="true" /> if the method succeeded; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreate">
      <MemberSignature Language="C#" Value="public static bool TryCreate (char highSurrogate, char lowSurrogate, out System.Text.Rune result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryCreate(char highSurrogate, char lowSurrogate, [out] valuetype System.Text.Rune&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.TryCreate(System.Char,System.Char,System.Text.Rune@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryCreate (highSurrogate As Char, lowSurrogate As Char, ByRef result As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryCreate(char highSurrogate, char lowSurrogate, [Runtime::InteropServices::Out] System::Text::Rune % result);" />
      <MemberSignature Language="F#" Value="static member TryCreate : char * char * Rune -&gt; bool" Usage="System.Text.Rune.TryCreate (highSurrogate, lowSurrogate, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="highSurrogate" Type="System.Char" />
        <Parameter Name="lowSurrogate" Type="System.Char" />
        <Parameter Name="result" Type="System.Text.Rune" RefType="out" />
      </Parameters>
      <Docs>
        <param name="highSurrogate"><span data-ttu-id="01189-447">代理项对的高代理项。</span><span class="sxs-lookup"><span data-stu-id="01189-447">The high surrogate of the surrogate pair.</span></span></param>
        <param name="lowSurrogate"><span data-ttu-id="01189-448">代理项对的低代理项。</span><span class="sxs-lookup"><span data-stu-id="01189-448">The low surrogate of the surrogate pair.</span></span></param>
        <param name="result"><span data-ttu-id="01189-449">对应于指定的代理项对的 rune。</span><span class="sxs-lookup"><span data-stu-id="01189-449">The rune that corresponds to the specified surrogate pair.</span></span></param>
        <summary><span data-ttu-id="01189-450">尝试从指定的 UTF-16 代理项对中创建 <see cref="T:System.Text.Rune" />，并返回指示操作是否成功的值。</span><span class="sxs-lookup"><span data-stu-id="01189-450">Attempts to create a <see cref="T:System.Text.Rune" /> from the specified UTF-16 surrogate pair and returns a value that indicates whether the operation was successful.</span></span></summary>
        <returns><span data-ttu-id="01189-451">如果操作成功，则为 <see langword="true" />；如果输入值不表示格式标准的 UTF-16 代理项对，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01189-451"><see langword="true" /> if the operation succeeded; <see langword="false" /> if the input values don't represent a well-formed UTF-16 surrogate pair.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryEncodeToUtf16">
      <MemberSignature Language="C#" Value="public bool TryEncodeToUtf16 (Span&lt;char&gt; destination, out int charsWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryEncodeToUtf16(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.TryEncodeToUtf16(System.Span{System.Char},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryEncodeToUtf16 (destination As Span(Of Char), ByRef charsWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryEncodeToUtf16(Span&lt;char&gt; destination, [Runtime::InteropServices::Out] int % charsWritten);" />
      <MemberSignature Language="F#" Value="member this.TryEncodeToUtf16 : Span&lt;char&gt; * int -&gt; bool" Usage="rune.TryEncodeToUtf16 (destination, charsWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="01189-452">将此值作为 UTF-16 编码值写入到的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="01189-452">The buffer to which to write this value as UTF-16 encoded value.</span></span></param>
        <param name="charsWritten"><span data-ttu-id="01189-453">写入 <paramref name="destination" /> 的 <see cref="T:System.Char" /> 值的数目，或者如果目标缓冲区大小不足以包含输出，则为 0。</span><span class="sxs-lookup"><span data-stu-id="01189-453">The number of <see cref="T:System.Char" /> values written to <paramref name="destination" />, or 0 if the destination buffer is not large enough to contain the output.</span></span></param>
        <summary><span data-ttu-id="01189-454">将此 <see cref="T:System.Text.Rune" /> 解码为 UTF-16 编码目标缓冲区。</span><span class="sxs-lookup"><span data-stu-id="01189-454">Encodes this <see cref="T:System.Text.Rune" /> to a UTF-16 encoded destination buffer.</span></span></summary>
        <returns><span data-ttu-id="01189-455">如果该值已写入缓冲区，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01189-455"><see langword="true" /> if the value was written to the buffer; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
          
## Remarks

<span data-ttu-id="01189-456"><xref:System.Text.Rune.Utf16SequenceLength>可以提前查询属性，以确定所需的 `destination` 缓冲区大小。</span><span class="sxs-lookup"><span data-stu-id="01189-456">The <xref:System.Text.Rune.Utf16SequenceLength> property can be queried ahead of time to determine the required size of the `destination` buffer.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryEncodeToUtf8">
      <MemberSignature Language="C#" Value="public bool TryEncodeToUtf8 (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryEncodeToUtf8(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.TryEncodeToUtf8(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryEncodeToUtf8 (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryEncodeToUtf8(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="member this.TryEncodeToUtf8 : Span&lt;byte&gt; * int -&gt; bool" Usage="rune.TryEncodeToUtf8 (destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="01189-457">UTF-8 编码值写入到的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="01189-457">The buffer to which to write the UTF-8 encoded value.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="01189-458">写入 <paramref name="destination" /> 的 <see cref="T:System.Byte" /> 值的数目，或者如果目标缓冲区大小不足以包含输出，则为 0。</span><span class="sxs-lookup"><span data-stu-id="01189-458">The number of <see cref="T:System.Byte" /> values written to <paramref name="destination" />, or 0 if the destination buffer is not large enough to contain the output.</span></span></param>
        <summary><span data-ttu-id="01189-459">将此 <see cref="T:System.Text.Rune" /> 解码为 UTF-8 编码目标缓冲区。</span><span class="sxs-lookup"><span data-stu-id="01189-459">Encodes this <see cref="T:System.Text.Rune" /> to a UTF-8 encoded destination buffer.</span></span></summary>
        <returns><span data-ttu-id="01189-460">如果该值已写入缓冲区，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01189-460"><see langword="true" /> if the value was written to the buffer; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
          
## Remarks

<span data-ttu-id="01189-461"><xref:System.Text.Rune.Utf8SequenceLength>可以提前查询属性，以确定所需的 `destination` 缓冲区大小。</span><span class="sxs-lookup"><span data-stu-id="01189-461">The <xref:System.Text.Rune.Utf8SequenceLength> property can be queried ahead of time to determine the required size of the `destination` buffer.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetRuneAt">
      <MemberSignature Language="C#" Value="public static bool TryGetRuneAt (string input, int index, out System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetRuneAt(string input, int32 index, [out] valuetype System.Text.Rune&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.TryGetRuneAt(System.String,System.Int32,System.Text.Rune@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetRuneAt (input As String, index As Integer, ByRef value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGetRuneAt(System::String ^ input, int index, [Runtime::InteropServices::Out] System::Text::Rune % value);" />
      <MemberSignature Language="F#" Value="static member TryGetRuneAt : string * int * Rune -&gt; bool" Usage="System.Text.Rune.TryGetRuneAt (input, index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Text.Rune" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="01189-462">从中提取 rune 的字符串。</span><span class="sxs-lookup"><span data-stu-id="01189-462">The string from which to extract the rune.</span></span></param>
        <param name="index"><span data-ttu-id="01189-463">从中提取 rune 的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="01189-463">The zero-based index from which to extract the rune.</span></span></param>
        <param name="value"><span data-ttu-id="01189-464">此方法返回时，已解码的 rune。</span><span class="sxs-lookup"><span data-stu-id="01189-464">When this method returns, the decoded rune.</span></span></param>
        <summary><span data-ttu-id="01189-465">尝试获取在字符串的指定位置处开始的 <see cref="T:System.Text.Rune" />，并返回指示操作是否成功的值。</span><span class="sxs-lookup"><span data-stu-id="01189-465">Attempts to get the <see cref="T:System.Text.Rune" /> that begins at a specified position in a string, and return a value that indicates whether the operation succeeded.</span></span></summary>
        <returns><span data-ttu-id="01189-466">如果成功从指定索引中提取标量值，则为 <see langword="true" />；如果某值由于无效数据而无法进行提取，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01189-466"><see langword="true" /> if a scalar value was successfully extracted from the specified index; <see langword="false" /> if a value could not be extracted because of invalid data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="01189-467">如果 `input` 为 `null` 或 `index` 超出范围，则引发异常。</span><span class="sxs-lookup"><span data-stu-id="01189-467">Throws an exception if `input` is `null` or `index` is out of range.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="01189-468"><paramref name="input" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="01189-468"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="01189-469"><paramref name="index" /> 超出了 <paramref name="input" /> 的范围。</span><span class="sxs-lookup"><span data-stu-id="01189-469"><paramref name="index" /> is out of the range of <paramref name="input" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Utf16SequenceLength">
      <MemberSignature Language="C#" Value="public int Utf16SequenceLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Utf16SequenceLength" />
      <MemberSignature Language="DocId" Value="P:System.Text.Rune.Utf16SequenceLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Utf16SequenceLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Utf16SequenceLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Utf16SequenceLength : int" Usage="System.Text.Rune.Utf16SequenceLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01189-470">获取表示此标量值所需的 UTF-16 序列的代码单元 (<see cref="T:System.Char" />) 中的长度。</span><span class="sxs-lookup"><span data-stu-id="01189-470">Gets the length in code units (<see cref="T:System.Char" />) of the UTF-16 sequence required to represent this scalar value.</span></span></summary>
        <value><span data-ttu-id="01189-471">用代码单位表示的长度 (<see cref="T:System.Char" /> 用于表示此标量值所需的 utf-16 序列) 。</span><span class="sxs-lookup"><span data-stu-id="01189-471">The length in code units (<see cref="T:System.Char" />) of the UTF-16 sequence required to represent this scalar value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="01189-472">返回值将为1或2。</span><span class="sxs-lookup"><span data-stu-id="01189-472">The return value will be 1 or 2.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Utf8SequenceLength">
      <MemberSignature Language="C#" Value="public int Utf8SequenceLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Utf8SequenceLength" />
      <MemberSignature Language="DocId" Value="P:System.Text.Rune.Utf8SequenceLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Utf8SequenceLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Utf8SequenceLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Utf8SequenceLength : int" Usage="System.Text.Rune.Utf8SequenceLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01189-473">获取表示此标量值所需的 UTF-8 序列的代码单元中的长度。</span><span class="sxs-lookup"><span data-stu-id="01189-473">Gets the length in code units of the UTF-8 sequence required to represent this scalar value.</span></span></summary>
        <value><span data-ttu-id="01189-474">表示此标量值所需的 UTF-8 序列的长度（以代码单位表示）。</span><span class="sxs-lookup"><span data-stu-id="01189-474">The length in code units of the UTF-8 sequence required to represent this scalar value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="01189-475">返回值为1到4（含）。</span><span class="sxs-lookup"><span data-stu-id="01189-475">The return value will be 1 through 4, inclusive.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public int Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Value" />
      <MemberSignature Language="DocId" Value="P:System.Text.Rune.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Value { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : int" Usage="System.Text.Rune.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01189-476">获取整数形式的 Unicode 标量值。</span><span class="sxs-lookup"><span data-stu-id="01189-476">Gets the Unicode scalar value as an integer.</span></span></summary>
        <value><span data-ttu-id="01189-477">整数形式的 Unicode 标量值。</span><span class="sxs-lookup"><span data-stu-id="01189-477">The Unicode scalar value as an integer.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
