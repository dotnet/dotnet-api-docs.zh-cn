<Type Name="EncodingProvider" FullName="System.Text.EncodingProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8b64830272ed09991efd835702b3ce4342944ecc" /><Meta Name="ms.sourcegitcommit" Value="9506e50ec7beb4fa30206b9840dc546b035a6600" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/23/2020" /><Meta Name="ms.locfileid" Value="86982808" /></Metadata><TypeSignature Language="C#" Value="public abstract class EncodingProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EncodingProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncodingProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EncodingProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncodingProvider abstract" />
  <TypeSignature Language="F#" Value="type EncodingProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Text.Encoding" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Text.Encoding" FromVersion="4.1.0.0" To="System.Runtime" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.Text.Encoding" FromVersion="4.1.1.0" To="System.Runtime" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Text.Encoding" FromVersion="4.1.2.0" To="System.Runtime" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2b20e-101">提供编码提供程序的基类，后者提供在特定平台上不可用的编码。</span><span class="sxs-lookup"><span data-stu-id="2b20e-101">Provides the base class for an encoding provider, which supplies encodings that are unavailable on a particular platform.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b20e-102">编码提供程序提供特定目标平台上不可用的其他编码。</span><span class="sxs-lookup"><span data-stu-id="2b20e-102">An encoding provider supplies encodings that are not otherwise available on a particular target platform.</span></span>  
  
 <span data-ttu-id="2b20e-103">Windows 桌面上的 .NET Framework 支持大量字符编码和代码页。</span><span class="sxs-lookup"><span data-stu-id="2b20e-103">The .NET Framework on the Windows desktop supports a large number of character encodings and code pages.</span></span> <span data-ttu-id="2b20e-104">通过调用方法，可以获取 Windows 桌面上 .NET Framework 的完整编码列表 <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="2b20e-104">You can get a complete list of encodings available in the .NET Framework on the Windows desktop by calling the <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="2b20e-105">另一方面，.NET Core 默认仅支持以下编码：</span><span class="sxs-lookup"><span data-stu-id="2b20e-105">.NET Core, on the other hand, by default supports only the following encodings:</span></span>  
  
-   <span data-ttu-id="2b20e-106">ASCII (代码页 20127) ，由 <xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType> 属性返回。</span><span class="sxs-lookup"><span data-stu-id="2b20e-106">ASCII (code page 20127), which is returned by the <xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="2b20e-107">ISO-8859-1 (代码页 28591) 。</span><span class="sxs-lookup"><span data-stu-id="2b20e-107">ISO-8859-1 (code page 28591).</span></span>  
  
-   <span data-ttu-id="2b20e-108">UTF-7 (代码页 65000) ，由 <xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType> 属性返回。</span><span class="sxs-lookup"><span data-stu-id="2b20e-108">UTF-7 (code page 65000), which is returned by the <xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="2b20e-109">UTF-8 (代码页 65001) ，由 <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> 属性返回。</span><span class="sxs-lookup"><span data-stu-id="2b20e-109">UTF-8 (code page 65001), which is returned by the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="2b20e-110">UTF-16 和 UTF-16LE (代码页 1200) ，由 <xref:System.Text.Encoding.Unicode%2A> 属性返回。</span><span class="sxs-lookup"><span data-stu-id="2b20e-110">UTF-16 and UTF-16LE (code page 1200), which is returned by the <xref:System.Text.Encoding.Unicode%2A> property.</span></span>  
  
-   <span data-ttu-id="2b20e-111">UTF-16BE (代码页 1201) ，它是通过调用 <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> 值为的或构造函数进行实例化的 `bigEndian` `true` 。</span><span class="sxs-lookup"><span data-stu-id="2b20e-111">UTF-16BE (code page 1201), which is instantiated by calling the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> or <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> constructor with a `bigEndian` value of `true`.</span></span>  
  
-   <span data-ttu-id="2b20e-112">32和 32LE (代码页 12000) ，由 <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> 属性返回。</span><span class="sxs-lookup"><span data-stu-id="2b20e-112">UTF-32 and UTF-32LE (code page 12000), which is returned by the <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="2b20e-113">32BE (代码页 12001) ，它是通过调用 <xref:System.Text.UTF32Encoding> 具有参数的构造函数 `bigEndian` 并 `true` 在方法调用中提供的值来进行实例化的。</span><span class="sxs-lookup"><span data-stu-id="2b20e-113">UTF-32BE (code page 12001), which is instantiated by calling an <xref:System.Text.UTF32Encoding> constructor that has a `bigEndian` parameter and providing a value of `true` in the method call.</span></span>  
  
 <span data-ttu-id="2b20e-114">从 .NET Framework 4.6 开始， <xref:System.Text.EncodingProvider> 是使 .NET Framework 可以使用其他不可用编码的基类。</span><span class="sxs-lookup"><span data-stu-id="2b20e-114">Starting with the .NET Framework 4.6, <xref:System.Text.EncodingProvider> is the base class that makes otherwise unavailable encodings available to the .NET Framework.</span></span> <span data-ttu-id="2b20e-115">这包括以下步骤：</span><span class="sxs-lookup"><span data-stu-id="2b20e-115">This involves the following steps:</span></span>  
  
1.  <span data-ttu-id="2b20e-116">定义的子类， <xref:System.Text.EncodingProvider> 该子类重写两个抽象 <xref:System.Text.EncodingProvider.GetEncoding%2A> 重载： <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29> 和 <xref:System.Text.EncodingProvider.GetEncoding%28System.String%29> 。</span><span class="sxs-lookup"><span data-stu-id="2b20e-116">Define a subclass of <xref:System.Text.EncodingProvider> that overrides the two abstract <xref:System.Text.EncodingProvider.GetEncoding%2A> overloads, <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29> and <xref:System.Text.EncodingProvider.GetEncoding%28System.String%29>.</span></span> <span data-ttu-id="2b20e-117">这些重载按代码页标识符和名称返回其他不受支持的编码。</span><span class="sxs-lookup"><span data-stu-id="2b20e-117">These overloads return the otherwise unsupported encoding by code page identifier and by name.</span></span> <span data-ttu-id="2b20e-118">请注意，如果 <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29> 使用参数0调用方法，还可以选择返回默认编码。</span><span class="sxs-lookup"><span data-stu-id="2b20e-118">Note that you can also choose to return a default encoding if the <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29> method is called with an argument of 0.</span></span>  
  
2.  <span data-ttu-id="2b20e-119">您也可以选择重写虚拟 <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> 和 <xref:System.Text.EncodingProvider.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="2b20e-119">Optionally, you can override the virtual <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> and <xref:System.Text.EncodingProvider.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> methods.</span></span> <span data-ttu-id="2b20e-120">在大多数情况下，这并不是必需的，因为基类提供了默认实现。</span><span class="sxs-lookup"><span data-stu-id="2b20e-120">In most cases, this is not necessary, since the base class provides a default implementation.</span></span>  
  
3.  <span data-ttu-id="2b20e-121">将该 <xref:System.Text.EncodingProvider> 实例传递给 <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> 方法，以使该对象提供的编码 <xref:System.Text.EncodingProvider> 可供公共语言运行时使用。</span><span class="sxs-lookup"><span data-stu-id="2b20e-121">Pass the <xref:System.Text.EncodingProvider> instance to the <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> method to make the encodings supplied by the <xref:System.Text.EncodingProvider> object available to the common language runtime.</span></span>  
  
4.  <span data-ttu-id="2b20e-122">调用 <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> 重载以检索编码。</span><span class="sxs-lookup"><span data-stu-id="2b20e-122">Call an <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> overload to retrieve the encoding.</span></span> <span data-ttu-id="2b20e-123"><xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType>方法将调用相应的 <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> 来确定它是否可以提供请求的编码。</span><span class="sxs-lookup"><span data-stu-id="2b20e-123">The <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> method will call the corresponding <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> to determine whether it can supply the requested encoding.</span></span>  
  
 <span data-ttu-id="2b20e-124">.NET Framework 类库提供一个静态属性，该属性 <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType> 返回一个 <xref:System.Text.EncodingProvider> 对象，该对象可在桌面 .NET Framework 类库可用的应用程序中使用完整的一组编码 [!INCLUDE[net_core](~/includes/net-core-md.md)] 。</span><span class="sxs-lookup"><span data-stu-id="2b20e-124">The .NET Framework Class Library provides one static property, <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType>, that returns an <xref:System.Text.EncodingProvider> object that makes the full set of encodings available on the desktop .NET Framework Class Library available to [!INCLUDE[net_core](~/includes/net-core-md.md)] applications.</span></span> <span data-ttu-id="2b20e-125">此外，你可以从类派生， <xref:System.Text.EncodingProvider> 以使自己的编码可用。</span><span class="sxs-lookup"><span data-stu-id="2b20e-125">In addition, you can derive from the <xref:System.Text.EncodingProvider> class to make your own encodings available.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Text.Encoding.GetEncoding(System.String)" />
    <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/system.text.codepagesencodingprovider.instance(v=vs.110).aspx"><span data-ttu-id="2b20e-126">System.text.codepagesencodingprovider 属性</span><span class="sxs-lookup"><span data-stu-id="2b20e-126">CodePagesEncodingProvider.Instance Property</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncodingProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncodingProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b20e-127">初始化 <see cref="T:System.Text.EncodingProvider" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2b20e-127">Initializes a new instance of the <see cref="T:System.Text.EncodingProvider" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEncoding">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2b20e-128">返回一个编码。</span><span class="sxs-lookup"><span data-stu-id="2b20e-128">Returns an encoding.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public abstract System.Text.Encoding GetEncoding (int codepage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoding GetEncoding(int32 codepage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEncoding (codepage As Integer) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Text::Encoding ^ GetEncoding(int codepage);" />
      <MemberSignature Language="F#" Value="abstract member GetEncoding : int -&gt; System.Text.Encoding" Usage="encodingProvider.GetEncoding codepage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codepage"><span data-ttu-id="2b20e-129">所请求编码的代码页标识符。</span><span class="sxs-lookup"><span data-stu-id="2b20e-129">The code page identifier of the requested encoding.</span></span></param>
        <summary><span data-ttu-id="2b20e-130">返回与指定代码页标识符关联的编码。</span><span class="sxs-lookup"><span data-stu-id="2b20e-130">Returns the encoding associated with the specified code page identifier.</span></span></summary>
        <returns><span data-ttu-id="2b20e-131">与指定代码页关联的编码，如果此 <see cref="T:System.Text.EncodingProvider" /> 无法返回对应于 <paramref name="codepage" /> 的有效编码，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2b20e-131">The encoding that is associated with the specified code page, or <see langword="null" /> if this <see cref="T:System.Text.EncodingProvider" /> cannot return a valid encoding that corresponds to <paramref name="codepage" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[ 

## Remarks

### <a name="notes-to-inheritors"></a><span data-ttu-id="2b20e-132">对继承者的说明</span><span class="sxs-lookup"><span data-stu-id="2b20e-132">Notes to inheritors</span></span>

<span data-ttu-id="2b20e-133">重写 [encoding.getencoding (Int32) ](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>) 方法以返回子类支持的编码或编码 <xref:System.Text.EncodingProvider> 。</span><span class="sxs-lookup"><span data-stu-id="2b20e-133">You override the [GetEncoding(Int32)](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>) method to return the encoding or encodings supported by your <xref:System.Text.EncodingProvider> subclass.</span></span> <span data-ttu-id="2b20e-134">当用户代码尝试通过调用 [encoding.getencoding (Int32) ](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>) 方法来检索编码时，该方法会将 `codepage` 标识符传递给每个注册的编码提供程序，直到一个返回有效编码。</span><span class="sxs-lookup"><span data-stu-id="2b20e-134">When user code attempts to retrieve an encoding by calling the [GetEncoding(Int32)](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>) method, the method passes the `codepage` identifier to every registered encoding provider until one returns a valid encoding.</span></span> <span data-ttu-id="2b20e-135">如果 none 返回有效编码，则 [encoding.getencoding (Int32) ](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>) 方法尝试检索其代码页标识符为的缓存编码 `codepage` 。</span><span class="sxs-lookup"><span data-stu-id="2b20e-135">If none returns a valid encoding, the [GetEncoding(Int32)](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>) method attempts to retrieve a cached encoding whose code page identifier is `codepage`.</span></span> <span data-ttu-id="2b20e-136">因此，如果不 `codepage` 是您支持的编码的代码页标识符，则该方法应返回 `null` ; 它不应引发异常。</span><span class="sxs-lookup"><span data-stu-id="2b20e-136">Because of this, if `codepage` is not the code page identifier of an encoding that you support, the method should return `null`; it should never throw an exception.</span></span>
        
<span data-ttu-id="2b20e-137">请注意，如果参数的值为0，则还可以选择返回默认代码页 `codepage` 。</span><span class="sxs-lookup"><span data-stu-id="2b20e-137">Note that you can also choose to return a default code page if the value of the `codepage` argument is 0.</span></span>

## <a name="notes-to-callers"></a><span data-ttu-id="2b20e-138">调用方说明</span><span class="sxs-lookup"><span data-stu-id="2b20e-138">Notes to callers</span></span>
        
<span data-ttu-id="2b20e-139">此方法由 [encoding.getencoding (Int32) ](<xref:System.Text.Encoding.GetEncoding(System.Int32)>) 方法调用。</span><span class="sxs-lookup"><span data-stu-id="2b20e-139">This method is called by the [Encoding.GetEncoding(Int32)](<xref:System.Text.Encoding.GetEncoding(System.Int32)>) method.</span></span> <span data-ttu-id="2b20e-140">不应直接从用户代码中调用它。</span><span class="sxs-lookup"><span data-stu-id="2b20e-140">You should not call it directly from user code.</span></span>

        ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="2b20e-141">重写 <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /> 方法以返回子类支持的编码或编码 <see cref="T:System.Text.EncodingProvider" /> 。</span><span class="sxs-lookup"><span data-stu-id="2b20e-141">You override the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /> method to return the encoding or encodings supported by your <see cref="T:System.Text.EncodingProvider" /> subclass.</span></span> <span data-ttu-id="2b20e-142">当用户代码尝试通过调用方法来检索编码时 <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> ，方法会将标识符传递 <paramref name="codepage" /> 给每个已注册的编码提供程序，直到一个返回有效编码。</span><span class="sxs-lookup"><span data-stu-id="2b20e-142">When user code attempts to retrieve an encoding by calling the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> method, the method passes the <paramref name="codepage" /> identifier to every registered encoding provider until one returns a valid encoding.</span></span> <span data-ttu-id="2b20e-143">如果 none 返回有效编码，此 <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> 方法会尝试检索其代码页标识符为的缓存编码 <paramref name="codepage" /> 。</span><span class="sxs-lookup"><span data-stu-id="2b20e-143">If none returns a valid encoding, the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> method attempts to retrieve a cached encoding whose code page identifier is <paramref name="codepage" />.</span></span> <span data-ttu-id="2b20e-144">因此，如果不 <paramref name="codepage" /> 是您支持的编码的代码页标识符，则该方法应返回 <see langword="null" /> ; 它不应引发异常。</span><span class="sxs-lookup"><span data-stu-id="2b20e-144">Because of this, if <paramref name="codepage" /> is not the code page identifier of an encoding that you support, the method should return <see langword="null" />; it should never throw an exception.</span></span></para></block>
        <block subset="none" type="usage"><para><span data-ttu-id="2b20e-145">此方法由 <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> 方法调用。</span><span class="sxs-lookup"><span data-stu-id="2b20e-145">This method is called by the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> method.</span></span> <span data-ttu-id="2b20e-146">不应直接从用户代码中调用它。</span><span class="sxs-lookup"><span data-stu-id="2b20e-146">You should not call it directly from user code.</span></span></para></block>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public abstract System.Text.Encoding GetEncoding (string name);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoding GetEncoding(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncoding(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEncoding (name As String) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Text::Encoding ^ GetEncoding(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetEncoding : string -&gt; System.Text.Encoding" Usage="encodingProvider.GetEncoding name" />
      <MemberSignature Language="C#" Value="public abstract System.Text.Encoding? GetEncoding (string name);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2b20e-147">所请求编码的名称。</span><span class="sxs-lookup"><span data-stu-id="2b20e-147">The name of the requested encoding.</span></span></param>
        <summary><span data-ttu-id="2b20e-148">返回具有指定名称的编码。</span><span class="sxs-lookup"><span data-stu-id="2b20e-148">Returns the encoding with the specified name.</span></span></summary>
        <returns><span data-ttu-id="2b20e-149">与指定名称关联的编码，如果此 <see cref="T:System.Text.EncodingProvider" /> 无法返回对应于 <paramref name="name" /> 的有效编码，则为 <see langword="null" /> 。</span><span class="sxs-lookup"><span data-stu-id="2b20e-149">The encoding that is associated with the specified name, or <see langword="null" /> if this <see cref="T:System.Text.EncodingProvider" /> cannot return a valid encoding that corresponds to <paramref name="name" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[ 
      
## <a name="notes-to-inheritors"></a><span data-ttu-id="2b20e-150">对继承者的说明</span><span class="sxs-lookup"><span data-stu-id="2b20e-150">Notes to inheritors</span></span> 
                  
<span data-ttu-id="2b20e-151">重写 [encoding.getencoding (String) ](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>) 方法以返回子类支持的编码或编码 <xref:System.Text.EncodingProvider> 。</span><span class="sxs-lookup"><span data-stu-id="2b20e-151">You override the [GetEncoding(String)](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>) method to return the encoding or encodings supported by your <xref:System.Text.EncodingProvider> subclass.</span></span> <span data-ttu-id="2b20e-152">当用户代码尝试通过调用 [encoding.getencoding (字符串) ](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>) 方法来检索编码时，该方法会将 `name` 参数传递给每个注册的编码提供程序，直到一个返回有效编码。</span><span class="sxs-lookup"><span data-stu-id="2b20e-152">When user code attempts to retrieve an encoding by calling the [GetEncoding(String)](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>) method, the method passes the `name` argument to every registered encoding provider until one returns a valid encoding.</span></span> <span data-ttu-id="2b20e-153">如果 none 返回有效编码，则 [encoding.getencoding (字符串) ](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>) 方法尝试检索其名称为的缓存编码 `name` 。</span><span class="sxs-lookup"><span data-stu-id="2b20e-153">If none returns a valid encoding, the [GetEncoding(String)](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>) method attempts to retrieve a cached encoding whose name is `name`.</span></span> <span data-ttu-id="2b20e-154">因此，如果不 `name` 是您支持的编码的名称，则该方法应返回 `null` 。</span><span class="sxs-lookup"><span data-stu-id="2b20e-154">Because of this, if `name` is not the name of an encoding that you support, the method should return `null`.</span></span> <span data-ttu-id="2b20e-155">方法应引发异常的唯一情况是，如果 `name` 为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="2b20e-155">The only case in which the method should throw an exception is if `name` is `null`.</span></span>

## <a name="notes-to-callers"></a><span data-ttu-id="2b20e-156">调用方说明</span><span class="sxs-lookup"><span data-stu-id="2b20e-156">Notes to callers</span></span>

<span data-ttu-id="2b20e-157">此方法由 [encoding.getencoding (String) ](<xref:System.Text.Encoding.GetEncoding(System.String)>) 方法调用。</span><span class="sxs-lookup"><span data-stu-id="2b20e-157">This method is called by the [Encoding.GetEncoding(String)](<xref:System.Text.Encoding.GetEncoding(System.String)>) method.</span></span> <span data-ttu-id="2b20e-158">不应直接从用户代码中调用它。</span><span class="sxs-lookup"><span data-stu-id="2b20e-158">You should not call it directly from user code.</span></span>
        ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="2b20e-159">重写 <see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /> 方法以返回子类支持的编码或编码 <see cref="T:System.Text.EncodingProvider" /> 。</span><span class="sxs-lookup"><span data-stu-id="2b20e-159">You override the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /> method to return the encoding or encodings supported by your <see cref="T:System.Text.EncodingProvider" /> subclass.</span></span> <span data-ttu-id="2b20e-160">当用户代码尝试通过调用方法来检索编码时 <see cref="M:System.Text.Encoding.GetEncoding(System.String)" /> ，方法会将参数传递 <paramref name="name" /> 给每个已注册的编码提供程序，直到一个返回有效编码。</span><span class="sxs-lookup"><span data-stu-id="2b20e-160">When user code attempts to retrieve an encoding by calling the <see cref="M:System.Text.Encoding.GetEncoding(System.String)" /> method, the method passes the <paramref name="name" /> argument to every registered encoding provider until one returns a valid encoding.</span></span> <span data-ttu-id="2b20e-161">如果 none 返回有效编码，此 <see cref="M:System.Text.Encoding.GetEncoding(System.String)" /> 方法会尝试检索名称为的缓存编码 <paramref name="name" /> 。</span><span class="sxs-lookup"><span data-stu-id="2b20e-161">If none returns a valid encoding, the <see cref="M:System.Text.Encoding.GetEncoding(System.String)" /> method attempts to retrieve a cached encoding whose name is <paramref name="name" />.</span></span> <span data-ttu-id="2b20e-162">因此，如果不 <paramref name="name" /> 是您支持的编码的名称，则该方法应返回 <see langword="null" /> 。</span><span class="sxs-lookup"><span data-stu-id="2b20e-162">Because of this, if <paramref name="name" /> is not the name of an encoding that you support, the method should return <see langword="null" />.</span></span> <span data-ttu-id="2b20e-163">方法应引发异常的唯一情况是，如果 <paramref name="name" /> 为 <see langword="null" /> 。</span><span class="sxs-lookup"><span data-stu-id="2b20e-163">The only case in which the method should throw an exception is if <paramref name="name" /> is <see langword="null" />.</span></span></para></block>
        <block subset="none" type="usage"><para><span data-ttu-id="2b20e-164">此方法由 <see cref="M:System.Text.Encoding.GetEncoding(System.String)" /> 方法调用。</span><span class="sxs-lookup"><span data-stu-id="2b20e-164">This method is called by the <see cref="M:System.Text.Encoding.GetEncoding(System.String)" /> method.</span></span> <span data-ttu-id="2b20e-165">不应直接从用户代码中调用它。</span><span class="sxs-lookup"><span data-stu-id="2b20e-165">You should not call it directly from user code.</span></span></para></block>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public virtual System.Text.Encoding GetEncoding (int codepage, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoding GetEncoding(int32 codepage, class System.Text.EncoderFallback encoderFallback, class System.Text.DecoderFallback decoderFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEncoding (codepage As Integer, encoderFallback As EncoderFallback, decoderFallback As DecoderFallback) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::Encoding ^ GetEncoding(int codepage, System::Text::EncoderFallback ^ encoderFallback, System::Text::DecoderFallback ^ decoderFallback);" />
      <MemberSignature Language="F#" Value="abstract member GetEncoding : int * System.Text.EncoderFallback * System.Text.DecoderFallback -&gt; System.Text.Encoding&#xA;override this.GetEncoding : int * System.Text.EncoderFallback * System.Text.DecoderFallback -&gt; System.Text.Encoding" Usage="encodingProvider.GetEncoding (codepage, encoderFallback, decoderFallback)" />
      <MemberSignature Language="C#" Value="public virtual System.Text.Encoding? GetEncoding (int codepage, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepage" Type="System.Int32" />
        <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
        <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
      </Parameters>
      <Docs>
        <param name="codepage"><span data-ttu-id="2b20e-166">所请求编码的代码页标识符。</span><span class="sxs-lookup"><span data-stu-id="2b20e-166">The code page identifier of the requested encoding.</span></span></param>
        <param name="encoderFallback"><span data-ttu-id="2b20e-167">一个对象，在无法用此编码对字符进行编码时，该对象可用来提供错误处理过程。</span><span class="sxs-lookup"><span data-stu-id="2b20e-167">An object that provides an error-handling procedure when a character cannot be encoded with this encoding.</span></span></param>
        <param name="decoderFallback"><span data-ttu-id="2b20e-168">一个对象，在无法用此编码对字节序列进行解码时，该对象可用来提供错误处理过程。</span><span class="sxs-lookup"><span data-stu-id="2b20e-168">An object that provides an error-handling procedure when a byte sequence cannot be decoded with this encoding.</span></span></param>
        <summary><span data-ttu-id="2b20e-169">返回与指定代码页标识符关联的编码。</span><span class="sxs-lookup"><span data-stu-id="2b20e-169">Returns the encoding associated with the specified code page identifier.</span></span> <span data-ttu-id="2b20e-170">参数指定一个错误处理程序，用于处理无法编码的字符和无法解码的字节序列。</span><span class="sxs-lookup"><span data-stu-id="2b20e-170">Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.</span></span></summary>
        <returns><span data-ttu-id="2b20e-171">与指定代码页关联的编码，如果此 <see cref="T:System.Text.EncodingProvider" /> 无法返回对应于 <paramref name="codepage" /> 的有效编码，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2b20e-171">The encoding that is associated with the specified code page, or <see langword="null" /> if this <see cref="T:System.Text.EncodingProvider" /> cannot return a valid encoding that corresponds to <paramref name="codepage" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b20e-172">`encoderFallback`和 `decoderFallback` 参数是一些对象，这些对象定义在编码器无法将字符转换为字节序列或解码器无法将字节序列转换为字符时所使用的回退策略。</span><span class="sxs-lookup"><span data-stu-id="2b20e-172">The `encoderFallback` and `decoderFallback` parameters are objects that define the fallback strategy used in the event that an encoder cannot convert a character to a sequence of bytes or a decoder cannot convert a sequence of bytes to a character.</span></span> <span data-ttu-id="2b20e-173">.NET Framework 提供以下回退机制：</span><span class="sxs-lookup"><span data-stu-id="2b20e-173">The .NET Framework provides the following fallback mechanisms:</span></span>  
  
-   <span data-ttu-id="2b20e-174">异常回退。</span><span class="sxs-lookup"><span data-stu-id="2b20e-174">Exception fallback.</span></span> <span data-ttu-id="2b20e-175">如果 `encoderFallback` 参数是的实例 <xref:System.Text.EncoderExceptionFallback> ，或 `decoderExceptionFallback` 参数是的实例，则 <xref:System.Text.DecoderExceptionFallback> 编码方法会在无法对字符进行编码时引发异常，如果无法对字节序列进行解码，则解码方法会引发异常。</span><span class="sxs-lookup"><span data-stu-id="2b20e-175">If the `encoderFallback` argument is an instance of <xref:System.Text.EncoderExceptionFallback>, or the `decoderExceptionFallback` argument is an instance of <xref:System.Text.DecoderExceptionFallback>, the encoding method throws an exception if characters cannot be encoded, and the decoding method throws an exception if a byte sequence cannot be decoded.</span></span>  
  
-   <span data-ttu-id="2b20e-176">替换回退。</span><span class="sxs-lookup"><span data-stu-id="2b20e-176">Replacement fallback.</span></span> <span data-ttu-id="2b20e-177">如果 `encoderFallback` 参数是的实例 <xref:System.Text.EncoderReplacementFallback> ，或 `decoderExceptionFallback` 参数是的实例 <xref:System.Text.DecoderReplacementFallback> ，则编码和解码方法会将替换字符串替换为无法编码的字符，不能对字节序列进行解码。</span><span class="sxs-lookup"><span data-stu-id="2b20e-177">If the `encoderFallback` argument is an instance of <xref:System.Text.EncoderReplacementFallback>, or the `decoderExceptionFallback` argument is an instance of <xref:System.Text.DecoderReplacementFallback>, the encoding and decoding methods substitute a replacement string for characters that cannot be encoded and byte sequences cannot be decoded.</span></span> <span data-ttu-id="2b20e-178">如果通过调用无参数的构造函数来实例化替换回退对象，则替换字符为 "？"。</span><span class="sxs-lookup"><span data-stu-id="2b20e-178">If you instantiated the replacement fallback object by calling the parameterless constructor, the replacement character is a "?".</span></span> <span data-ttu-id="2b20e-179">如果调用 <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> 或 <xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> 构造函数，则可以指定替换字符串。</span><span class="sxs-lookup"><span data-stu-id="2b20e-179">If you call the <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> or <xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, you can specify the replacement string.</span></span>  
  
-   <span data-ttu-id="2b20e-180">最佳回退。</span><span class="sxs-lookup"><span data-stu-id="2b20e-180">Best-fit fallback.</span></span> <span data-ttu-id="2b20e-181">可以从 <xref:System.Text.EncoderFallback> 或 <xref:System.Text.DecoderFallback> 类派生，以实现最佳的替换机制。</span><span class="sxs-lookup"><span data-stu-id="2b20e-181">You can derive from the <xref:System.Text.EncoderFallback> or <xref:System.Text.DecoderFallback> class to implement a best-fit replacement mechanism.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="2b20e-182">由于对此方法的调用将使用您的 <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /> 方法的实现，因此您不必重写它。</span><span class="sxs-lookup"><span data-stu-id="2b20e-182">Because calls to this method use your implementation of the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /> method, you do not have to override it.</span></span> <span data-ttu-id="2b20e-183">当用户代码尝试通过调用方法来检索编码时 <see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> ，方法会将标识符传递 <paramref name="codepage" /> 给每个已注册的编码提供程序，直到一个返回有效编码。</span><span class="sxs-lookup"><span data-stu-id="2b20e-183">When user code attempts to retrieve an encoding by calling the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> method, the method passes the <paramref name="codepage" /> identifier to every registered encoding provider until one returns a valid encoding.</span></span> <span data-ttu-id="2b20e-184">如果 none 返回有效编码，此 <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> 方法会尝试检索其代码页标识符为的缓存编码 <paramref name="codepage" /> 。</span><span class="sxs-lookup"><span data-stu-id="2b20e-184">If none returns a valid encoding, the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> method attempts to retrieve a cached encoding whose code page identifier is <paramref name="codepage" />.</span></span> <span data-ttu-id="2b20e-185">因此，如果您选择重写 <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> 方法，则当不是您支持的编码的代码页标识符时，重写应返回 <see langword="null" /> <paramref name="codepage" /> ; 它绝不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="2b20e-185">Because of this, if you do choose to override the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> method, your override should return <see langword="null" /> if <paramref name="codepage" /> is not the code page identifier of an encoding that you support; it should never throw an exception.</span></span></para></block>
        <block subset="none" type="usage"><para><span data-ttu-id="2b20e-186">此方法由 <see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> 方法调用。</span><span class="sxs-lookup"><span data-stu-id="2b20e-186">This method is called by the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> method.</span></span> <span data-ttu-id="2b20e-187">不应直接从用户代码中调用它。</span><span class="sxs-lookup"><span data-stu-id="2b20e-187">You should not call it directly from user code.</span></span></para></block>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public virtual System.Text.Encoding GetEncoding (string name, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoding GetEncoding(string name, class System.Text.EncoderFallback encoderFallback, class System.Text.DecoderFallback decoderFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEncoding (name As String, encoderFallback As EncoderFallback, decoderFallback As DecoderFallback) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::Encoding ^ GetEncoding(System::String ^ name, System::Text::EncoderFallback ^ encoderFallback, System::Text::DecoderFallback ^ decoderFallback);" />
      <MemberSignature Language="F#" Value="abstract member GetEncoding : string * System.Text.EncoderFallback * System.Text.DecoderFallback -&gt; System.Text.Encoding&#xA;override this.GetEncoding : string * System.Text.EncoderFallback * System.Text.DecoderFallback -&gt; System.Text.Encoding" Usage="encodingProvider.GetEncoding (name, encoderFallback, decoderFallback)" />
      <MemberSignature Language="C#" Value="public virtual System.Text.Encoding? GetEncoding (string name, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
        <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2b20e-188">首选编码的名称。</span><span class="sxs-lookup"><span data-stu-id="2b20e-188">The name of the preferred encoding.</span></span></param>
        <param name="encoderFallback"><span data-ttu-id="2b20e-189">一个对象，在无法用此编码对字符进行编码时，该对象可用来提供错误处理过程。</span><span class="sxs-lookup"><span data-stu-id="2b20e-189">An object that provides an error-handling procedure when a character cannot be encoded with this encoding.</span></span></param>
        <param name="decoderFallback"><span data-ttu-id="2b20e-190">一个对象，在无法用当前编码对字节序列进行解码时，该对象可用来提供错误处理过程。</span><span class="sxs-lookup"><span data-stu-id="2b20e-190">An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding.</span></span></param>
        <summary><span data-ttu-id="2b20e-191">返回与指定名称关联的编码。</span><span class="sxs-lookup"><span data-stu-id="2b20e-191">Returns the encoding associated with the specified name.</span></span> <span data-ttu-id="2b20e-192">参数指定一个错误处理程序，用于处理无法编码的字符和无法解码的字节序列。</span><span class="sxs-lookup"><span data-stu-id="2b20e-192">Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.</span></span></summary>
        <returns><span data-ttu-id="2b20e-193">与指定名称关联的编码，如果此 <see cref="T:System.Text.EncodingProvider" /> 无法返回对应于 <paramref name="name" /> 的有效编码，则为 <see langword="null" /> 。</span><span class="sxs-lookup"><span data-stu-id="2b20e-193">The encoding that is associated with the specified name, or <see langword="null" /> if this <see cref="T:System.Text.EncodingProvider" /> cannot return a valid encoding that corresponds to <paramref name="name" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b20e-194">`encoderFallback`和 `decoderFallback` 参数是一些对象，这些对象定义在编码器无法将字符转换为字节序列或解码器无法将字节序列转换为字符时所使用的回退策略。</span><span class="sxs-lookup"><span data-stu-id="2b20e-194">The `encoderFallback` and `decoderFallback` parameters are objects that define the fallback strategy used in the event that an encoder cannot convert a character to a sequence of bytes or a decoder cannot convert a sequence of bytes to a character.</span></span> <span data-ttu-id="2b20e-195">.NET Framework 提供以下回退机制：</span><span class="sxs-lookup"><span data-stu-id="2b20e-195">The .NET Framework provides the following fallback mechanisms:</span></span>  
  
-   <span data-ttu-id="2b20e-196">异常回退。</span><span class="sxs-lookup"><span data-stu-id="2b20e-196">Exception fallback.</span></span> <span data-ttu-id="2b20e-197">如果 `encoderFallback` 参数是的实例 <xref:System.Text.EncoderExceptionFallback> ，或 `decoderExceptionFallback` 参数是的实例，则 <xref:System.Text.DecoderExceptionFallback> 编码方法会在无法对字符进行编码时引发异常，如果无法对字节序列进行解码，则解码方法会引发异常。</span><span class="sxs-lookup"><span data-stu-id="2b20e-197">If the `encoderFallback` argument is an instance of <xref:System.Text.EncoderExceptionFallback>, or the `decoderExceptionFallback` argument is an instance of <xref:System.Text.DecoderExceptionFallback>, the encoding method throws an exception if characters cannot be encoded, and the decoding method throws an exception if a byte sequence cannot be decoded.</span></span>  
  
-   <span data-ttu-id="2b20e-198">替换回退。</span><span class="sxs-lookup"><span data-stu-id="2b20e-198">Replacement fallback.</span></span> <span data-ttu-id="2b20e-199">如果 `encoderFallback` 参数是的实例 <xref:System.Text.EncoderReplacementFallback> ，或 `decoderExceptionFallback` 参数是的实例 <xref:System.Text.DecoderReplacementFallback> ，则编码和解码方法会将替换字符串替换为无法编码的字符，不能对字节序列进行解码。</span><span class="sxs-lookup"><span data-stu-id="2b20e-199">If the `encoderFallback` argument is an instance of <xref:System.Text.EncoderReplacementFallback>, or the `decoderExceptionFallback` argument is an instance of <xref:System.Text.DecoderReplacementFallback>, the encoding and decoding methods substitute a replacement string for characters that cannot be encoded and byte sequences cannot be decoded.</span></span> <span data-ttu-id="2b20e-200">如果通过调用无参数的构造函数来实例化替换回退对象，则替换字符为 "？"。</span><span class="sxs-lookup"><span data-stu-id="2b20e-200">If you instantiated the replacement fallback object by calling the parameterless constructor, the replacement character is a "?".</span></span> <span data-ttu-id="2b20e-201">如果调用 <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> 或 <xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> 构造函数，则可以指定替换字符串。</span><span class="sxs-lookup"><span data-stu-id="2b20e-201">If you call the <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> or <xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, you can specify the replacement string.</span></span>  
  
-   <span data-ttu-id="2b20e-202">最佳回退。</span><span class="sxs-lookup"><span data-stu-id="2b20e-202">Best-fit fallback.</span></span> <span data-ttu-id="2b20e-203">可以从 <xref:System.Text.EncoderFallback> 或 <xref:System.Text.DecoderFallback> 类派生，以实现最佳的替换机制。</span><span class="sxs-lookup"><span data-stu-id="2b20e-203">You can derive from the <xref:System.Text.EncoderFallback> or <xref:System.Text.DecoderFallback> class to implement a best-fit replacement mechanism.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="2b20e-204">由于对此方法的调用将使用您的 <see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /> 方法的实现，因此您不必重写它。</span><span class="sxs-lookup"><span data-stu-id="2b20e-204">Because calls to this method use your implementation of the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /> method, you do not have to override it.</span></span> <span data-ttu-id="2b20e-205">当用户代码尝试通过调用方法来检索编码时 <see cref="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> ，方法会将标识符传递 <paramref name="codepage" /> 给每个已注册的编码提供程序，直到一个返回有效编码。</span><span class="sxs-lookup"><span data-stu-id="2b20e-205">When user code attempts to retrieve an encoding by calling the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> method, the method passes the <paramref name="codepage" /> identifier to every registered encoding provider until one returns a valid encoding.</span></span> <span data-ttu-id="2b20e-206">如果 none 返回有效编码，此 <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> 方法会尝试检索其代码页标识符为的缓存编码 <paramref name="codepage" /> 。</span><span class="sxs-lookup"><span data-stu-id="2b20e-206">If none returns a valid encoding, the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> method attempts to retrieve a cached encoding whose code page identifier is <paramref name="codepage" />.</span></span> <span data-ttu-id="2b20e-207">因此，如果您选择重写 <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> 方法，则当不是您支持的编码的代码页标识符时，重写应返回 <see langword="null" /> <paramref name="codepage" /> ; 它绝不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="2b20e-207">Because of this, if you do choose to override the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> method, your override should return <see langword="null" /> if <paramref name="codepage" /> is not the code page identifier of an encoding that you support; it should never throw an exception.</span></span></para></block>
        <block subset="none" type="usage"><para><span data-ttu-id="2b20e-208">此方法由 <see cref="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> 方法调用。</span><span class="sxs-lookup"><span data-stu-id="2b20e-208">This method is called by the <see cref="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> method.</span></span> <span data-ttu-id="2b20e-209">不应直接从用户代码中调用它。</span><span class="sxs-lookup"><span data-stu-id="2b20e-209">You should not call it directly from user code.</span></span></para></block>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      </Docs>
    </Member>
    <Member MemberName="GetEncodings">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Text.EncodingInfo&gt; GetEncodings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Text.EncodingInfo&gt; GetEncodings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncodings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEncodings () As IEnumerable(Of EncodingInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Text::EncodingInfo ^&gt; ^ GetEncodings();" />
      <MemberSignature Language="F#" Value="abstract member GetEncodings : unit -&gt; seq&lt;System.Text.EncodingInfo&gt;&#xA;override this.GetEncodings : unit -&gt; seq&lt;System.Text.EncodingInfo&gt;" Usage="encodingProvider.GetEncodings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Text.EncodingInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
