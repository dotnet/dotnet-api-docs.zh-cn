<Type Name="ASCIIEncoding" FullName="System.Text.ASCIIEncoding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bc5e7cffd55cfaefffaacc04f90adedeac5b7053" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83958329" /></Metadata><TypeSignature Language="C#" Value="public class ASCIIEncoding : System.Text.Encoding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ASCIIEncoding extends System.Text.Encoding" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Text.ASCIIEncoding" />
  <TypeSignature Language="VB.NET" Value="Public Class ASCIIEncoding&#xA;Inherits Encoding" />
  <TypeSignature Language="C++ CLI" Value="public ref class ASCIIEncoding : System::Text::Encoding" />
  <TypeSignature Language="F#" Value="type ASCIIEncoding = class&#xA;    inherit Encoding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ASCIIEncoding extends System.Text.Encoding" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Text.Encoding.Extensions" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Text.Encoding</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c4b2c-101">表示 Unicode 字符的 ASCII 字符编码。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-101">Represents an ASCII character encoding of Unicode characters.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4b2c-102">编码是将一组 Unicode 字符转换为一个字节序列的过程。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-102">Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</span></span> <span data-ttu-id="c4b2c-103">解码是将编码字节序列转换为一组 Unicode 字符的过程。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-103">Decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</span></span>  
  
 <span data-ttu-id="c4b2c-104"><xref:System.Text.ASCIIEncoding> 对应于 Windows 代码页20127。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-104"><xref:System.Text.ASCIIEncoding> corresponds to the Windows code page 20127.</span></span> <span data-ttu-id="c4b2c-105">因为 ASCII 是一种7位编码，所以 ASCII 字符限制为从 U + 0000 到 U + 007F 的最低 128 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-105">Because ASCII is a 7-bit encoding, ASCII characters are limited to the lowest 128 Unicode characters, from U+0000 to U+007F.</span></span> <span data-ttu-id="c4b2c-106">如果使用 <xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType> 属性或 <xref:System.Text.ASCIIEncoding.%23ctor%2A> 构造函数返回的默认编码器，则在执行编码操作之前，该范围外的字符将替换为问号（？）。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-106">If you use the default encoder returned by the <xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType> property or the <xref:System.Text.ASCIIEncoding.%23ctor%2A> constructor, characters outside that range are replaced with a question mark (?) before the encoding operation is performed.</span></span>  <span data-ttu-id="c4b2c-107">由于 <xref:System.Text.ASCIIEncoding> 类仅支持有限字符集，因此 <xref:System.Text.UTF8Encoding>、<xref:System.Text.UnicodeEncoding>和 <xref:System.Text.UTF32Encoding> 类更适用于全球化应用程序。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-107">Because the <xref:System.Text.ASCIIEncoding> class supports only a limited character set, the <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, and <xref:System.Text.UTF32Encoding> classes are better suited for globalized applications.</span></span> <span data-ttu-id="c4b2c-108">以下注意事项可帮助您决定是否使用 <xref:System.Text.ASCIIEncoding>：</span><span class="sxs-lookup"><span data-stu-id="c4b2c-108">The following considerations can help you to decide whether to use <xref:System.Text.ASCIIEncoding>:</span></span>  
  
-   <span data-ttu-id="c4b2c-109">某些协议需要 ASCII 或 ASCII 的子集。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-109">Some protocols require ASCII or a subset of ASCII.</span></span> <span data-ttu-id="c4b2c-110">在这些情况下，ASCII 编码非常合适。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-110">In these cases ASCII encoding is appropriate.</span></span>  
  
-   <span data-ttu-id="c4b2c-111">如果需要8位编码，则 ASCII 可能不是正确的选择。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-111">If an 8-bit encoding is expected, then ASCII probably isn't the correct choice.</span></span> <span data-ttu-id="c4b2c-112">请考虑使用 UTF8 而不是 ASCII。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-112">Instead, consider using UTF8 instead of ASCII.</span></span> <span data-ttu-id="c4b2c-113">对于 U + 0000 到 U + 007F 的字符，结果是相同的，但所有 Unicode 字符都以 UTF-8 表示，这可避免数据丢失。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-113">For the characters U+0000 through U+007F, the results are identical, but all Unicode characters are representable in UTF-8, which avoids data loss.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="c4b2c-114"><xref:System.Text.ASCIIEncoding> 不提供错误检测。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-114"><xref:System.Text.ASCIIEncoding> does not provide error detection.</span></span> <span data-ttu-id="c4b2c-115">出于安全原因，应使用 <xref:System.Text.UTF8Encoding>、<xref:System.Text.UnicodeEncoding>或 <xref:System.Text.UTF32Encoding> 并启用错误检测。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-115">For security reasons, you should use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
 <span data-ttu-id="c4b2c-116"><xref:System.Text.ASCIIEncoding.GetByteCount%2A> 方法确定导致对一组 Unicode 字符进行编码的字节数，并且 <xref:System.Text.ASCIIEncoding.GetBytes%2A> 方法执行实际编码。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-116">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.ASCIIEncoding.GetBytes%2A> method performs the actual encoding.</span></span>  
  
 <span data-ttu-id="c4b2c-117">同样，<xref:System.Text.ASCIIEncoding.GetCharCount%2A> 方法决定了多少个字符会导致对一个字节序列进行解码，而 <xref:System.Text.ASCIIEncoding.GetChars%2A> 和 <xref:System.Text.ASCIIEncoding.GetString%2A> 方法执行实际解码。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-117">Likewise, the <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.ASCIIEncoding.GetChars%2A> and <xref:System.Text.ASCIIEncoding.GetString%2A> methods perform the actual decoding.</span></span>  
  
 <span data-ttu-id="c4b2c-118">请注意，默认的 <xref:System.Text.ASCIIEncoding> 构造函数可能不会为应用程序提供适当的行为。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-118">Note that the default <xref:System.Text.ASCIIEncoding> constructor by itself might not have the appropriate behavior for your application.</span></span> <span data-ttu-id="c4b2c-119">你可能需要考虑将 <xref:System.Text.Encoding.EncoderFallback%2A> 或 <xref:System.Text.Encoding.DecoderFallback%2A> 属性设置为 <xref:System.Text.EncoderExceptionFallback> 或 <xref:System.Text.DecoderExceptionFallback>，以防止设置第8位的序列。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-119">You might want to consider setting the <xref:System.Text.Encoding.EncoderFallback%2A> or <xref:System.Text.Encoding.DecoderFallback%2A> property to <xref:System.Text.EncoderExceptionFallback> or <xref:System.Text.DecoderExceptionFallback> to prevent sequences with the 8th bit set.</span></span> <span data-ttu-id="c4b2c-120">自定义行为也可能适用于这种情况。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-120">Custom behavior might also be appropriate for these cases.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4b2c-121">下面的示例演示如何将 Unicode 字符编码为 ASCII。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-121">The following example demonstrates how to encode Unicode characters into ASCII.</span></span> <span data-ttu-id="c4b2c-122">请注意，当应用程序使用 <xref:System.Text.ASCIIEncoding> 对 ASCII 范围外的 Unicode 字符进行编码时，会丢失数据。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-122">Notice the loss of data that occurs when your application uses <xref:System.Text.ASCIIEncoding> to encode Unicode characters outside of the ASCII range.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding Example/CPP/snippet.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding Example/CS/snippet.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding Example/VB/snippet.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.Decoder" />
    <altmember cref="T:System.Text.Encoder" />
    <related type="Article" href="/dotnet/standard/base-types/character-encoding"><span data-ttu-id="c4b2c-123">了解编码</span><span class="sxs-lookup"><span data-stu-id="c4b2c-123">Understanding Encodings</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ASCIIEncoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ASCIIEncoding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4b2c-124">初始化 <see cref="T:System.Text.ASCIIEncoding" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-124">Initializes a new instance of the <see cref="T:System.Text.ASCIIEncoding" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="c4b2c-125"><xref:System.Text.ASCIIEncoding> 类不提供错误检测。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-125">The <xref:System.Text.ASCIIEncoding> class does not provide error detection.</span></span> <span data-ttu-id="c4b2c-126">出于安全原因，应使用 <xref:System.Text.UTF8Encoding>、<xref:System.Text.UnicodeEncoding>或 <xref:System.Text.UTF32Encoding> 类并启用错误检测。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-126">For security reasons, you should use the <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> class and enable error detection.</span></span>  
  
 <span data-ttu-id="c4b2c-127">如果选择使用 ASCII 编码，此构造函数可能不会为你的应用程序提供适当的回退行为。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-127">If you choose to use ASCII encoding, this constructor may not provide the appropriate fallback behavior for your application.</span></span> <span data-ttu-id="c4b2c-128">它使用 <xref:System.Text.EncoderReplacementFallback> 和 <xref:System.Text.DecoderReplacementFallback> 类将 U + 0000 到 U + 007F 范围之外的每个字符替换为问号（？）。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-128">It uses the <xref:System.Text.EncoderReplacementFallback> and <xref:System.Text.DecoderReplacementFallback> classes to replace every character outside the range of U+0000 through U+007F with a question mark (?).</span></span> <span data-ttu-id="c4b2c-129">相反，你可以调用 <xref:System.Text.Encoding.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType> 或 <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType> 方法并向其传递 <xref:System.Text.EncoderExceptionFallback> 和 <xref:System.Text.DecoderExceptionFallback> 对象，以使用异常回退。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-129">Instead, you can call the <xref:System.Text.Encoding.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType> or <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType> method and pass it <xref:System.Text.EncoderExceptionFallback> and <xref:System.Text.DecoderExceptionFallback> objects to use exception fallback.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4b2c-130"><xref:System.Text.ASCIIEncoding> 仅支持 U + 0000 和 U + 007F 之间的 Unicode 字符值。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-130"><xref:System.Text.ASCIIEncoding> supports only the Unicode character values between U+0000 and U+007F.</span></span> <span data-ttu-id="c4b2c-131">因此，<xref:System.Text.UTF8Encoding>、<xref:System.Text.UnicodeEncoding>和 <xref:System.Text.UTF32Encoding> 更适用于全球化应用程序。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-131">Therefore, <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, and <xref:System.Text.UTF32Encoding> are better suited for globalized applications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4b2c-132">下面的示例演示如何创建新的 <xref:System.Text.ASCIIEncoding> 实例并显示编码的名称。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-132">The following example demonstrates how to create a new <xref:System.Text.ASCIIEncoding> instance and display the name of the encoding.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.ctor Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.ctor Example/CPP/ctor.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.ctor Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.ctor Example/CS/ctor.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.ctor Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.ctor Example/VB/ctor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c4b2c-133">计算对一组字符进行编码时产生的字节数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-133">Calculates the number of bytes produced by encoding a set of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (ReadOnlySpan&lt;char&gt; chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(valuetype System.ReadOnlySpan`1&lt;char&gt; chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetByteCount(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As ReadOnlySpan(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(ReadOnlySpan&lt;char&gt; chars);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : ReadOnlySpan&lt;char&gt; -&gt; int" Usage="aSCIIEncoding.GetByteCount chars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="c4b2c-134">包含要编码的字符集的范围。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-134">The span that contains the set of characters to encode.</span></span></param>
        <summary><span data-ttu-id="c4b2c-135">计算对指定字符范围进行编码所产生的字节数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-135">Calculates the number of bytes produced by encoding the specified character span.</span></span></summary>
        <returns><span data-ttu-id="c4b2c-136">对指定字符范围进行编码所产生的字节数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-136">The number of bytes produced by encoding the specified character span.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4b2c-137">若要计算 <xref:System.Text.ASCIIEncoding.GetBytes%2A> 存储生成的字节所需的准确大小，请使用 <xref:System.Text.ASCIIEncoding.GetByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-137">To calculate the exact size required by <xref:System.Text.ASCIIEncoding.GetBytes%2A> to store the resulting bytes, use <xref:System.Text.ASCIIEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="c4b2c-138">若要计算最大大小，请使用 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-138">To calculate the maximum size, use <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="c4b2c-139"><xref:System.Text.ASCIIEncoding.GetByteCount%2A> 方法通常允许分配较少的内存，而 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> 方法的执行速度通常更快。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-139">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>    
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (string chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(string chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetByteCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(System::String ^ chars);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : string -&gt; int" Usage="aSCIIEncoding.GetByteCount chars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="c4b2c-140">包含要编码的字符集的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-140">The <see cref="T:System.String" /> containing the set of characters to encode.</span></span></param>
        <summary><span data-ttu-id="c4b2c-141">计算对指定 <see cref="T:System.String" /> 中的字符进行编码时所产生的字节数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-141">Calculates the number of bytes produced by encoding the characters in the specified <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="c4b2c-142">对指定字符进行编码后生成的字节数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-142">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4b2c-143">若要计算 <xref:System.Text.ASCIIEncoding.GetBytes%2A> 存储生成的字节所需的确切数组大小，应用程序需使用 <xref:System.Text.ASCIIEncoding.GetByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-143">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.ASCIIEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="c4b2c-144">若要计算最大数组大小，应用程序应使用 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-144">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="c4b2c-145"><xref:System.Text.ASCIIEncoding.GetByteCount%2A> 方法通常允许分配较少的内存，而 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> 方法的执行速度通常更快。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-145">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4b2c-146">下面的示例演示如何使用 <xref:System.Text.ASCIIEncoding.GetByteCount%2A> 方法返回使用 <xref:System.Text.ASCIIEncoding>对字符串进行编码所需的字节数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-146">The following example demonstrates how to use the <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method to return the number of bytes required to encode a string using <xref:System.Text.ASCIIEncoding>.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetByteCount2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetByteCount2 Example/CPP/getbytecount-string.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetByteCount2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetByteCount2 Example/CS/getbytecount-string.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetByteCount2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetByteCount2 Example/VB/getbytecount-string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4b2c-147"><paramref name="chars" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-147"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c4b2c-148">得到的字节数大于可作为整数返回的最大数量。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-148">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="c4b2c-149">发生回退（有关详细信息，请参阅<see href="/dotnet/standard/base-types/character-encoding">采用 .NET 的字符编码</see>）</span><span class="sxs-lookup"><span data-stu-id="c4b2c-149">A fallback occurred (for more information, see <see href="/dotnet/standard/base-types/character-encoding">Character Encoding in .NET</see>)</span></span> 
<span data-ttu-id="c4b2c-150">和</span><span class="sxs-lookup"><span data-stu-id="c4b2c-150">-and-</span></span> 
 <span data-ttu-id="c4b2c-151"><see cref="P:System.Text.Encoding.EncoderFallback" /> 设置为 <see cref="T:System.Text.EncoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-151"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetEncoder" />
        <related type="Article" href="/dotnet/standard/base-types/character-encoding"><span data-ttu-id="c4b2c-152">了解编码</span><span class="sxs-lookup"><span data-stu-id="c4b2c-152">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char* chars, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char* chars, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(char* chars, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : nativeptr&lt;char&gt; * int -&gt; int" Usage="aSCIIEncoding.GetByteCount (chars, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="c4b2c-153">指向第一个要编码的字符的指针。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-153">A pointer to the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="c4b2c-154">要编码的字符的数目。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-154">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="c4b2c-155">计算对从指定的字符指针开始的一组字符进行编码时产生的字节数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-155">Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span></span></summary>
        <returns><span data-ttu-id="c4b2c-156">对指定字符进行编码后生成的字节数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-156">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4b2c-157">若要计算 <xref:System.Text.ASCIIEncoding.GetBytes%2A> 存储生成的字节所需的确切数组大小，应用程序需使用 <xref:System.Text.ASCIIEncoding.GetByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-157">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.ASCIIEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="c4b2c-158">若要计算最大数组大小，应用程序应使用 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-158">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="c4b2c-159"><xref:System.Text.ASCIIEncoding.GetByteCount%2A> 方法通常允许分配较少的内存，而 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> 方法的执行速度通常更快。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-159">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4b2c-160"><paramref name="chars" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-160"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c4b2c-161"><paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-161"><paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="c4b2c-162">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c4b2c-162">-or-</span></span> 
<span data-ttu-id="c4b2c-163">得到的字节数大于可作为整数返回的最大数量。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-163">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="c4b2c-164">发生回退（有关详细信息，请参阅<see href="/dotnet/standard/base-types/character-encoding">采用 .NET 的字符编码</see>）</span><span class="sxs-lookup"><span data-stu-id="c4b2c-164">A fallback occurred (for more information, see <see href="/dotnet/standard/base-types/character-encoding">Character Encoding in .NET</see>)</span></span> 
<span data-ttu-id="c4b2c-165">和</span><span class="sxs-lookup"><span data-stu-id="c4b2c-165">-and-</span></span> 
 <span data-ttu-id="c4b2c-166"><see cref="P:System.Text.Encoding.EncoderFallback" /> 设置为 <see cref="T:System.Text.EncoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-166"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : char[] * int * int -&gt; int" Usage="aSCIIEncoding.GetByteCount (chars, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="c4b2c-167">包含要编码的字符集的字符数组。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-167">The character array containing the set of characters to encode.</span></span></param>
        <param name="index"><span data-ttu-id="c4b2c-168">第一个要编码的字符的索引。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-168">The index of the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="c4b2c-169">要编码的字符的数目。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-169">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="c4b2c-170">计算对指定字符数组中的一组字符进行编码时产生的字节数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-170">Calculates the number of bytes produced by encoding a set of characters from the specified character array.</span></span></summary>
        <returns><span data-ttu-id="c4b2c-171">对指定字符进行编码后生成的字节数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-171">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4b2c-172">若要计算 <xref:System.Text.ASCIIEncoding.GetBytes%2A> 存储生成的字节所需的确切数组大小，应用程序需使用 <xref:System.Text.ASCIIEncoding.GetByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-172">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.ASCIIEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="c4b2c-173">若要计算最大数组大小，应用程序应使用 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-173">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="c4b2c-174"><xref:System.Text.ASCIIEncoding.GetByteCount%2A> 方法通常允许分配较少的内存，而 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> 方法的执行速度通常更快。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-174">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4b2c-175">下面的示例演示如何使用 <xref:System.Text.ASCIIEncoding.GetByteCount%2A> 方法返回使用 <xref:System.Text.ASCIIEncoding>对 Unicode 字符数组进行编码所需的字节数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-175">The following example demonstrates how to use the <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method to return the number of bytes required to encode an array of Unicode characters using <xref:System.Text.ASCIIEncoding>.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetByteCount1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetByteCount1 Example/CPP/getbytecount-char[]-int32-int32.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetByteCount1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetByteCount1 Example/CS/getbytecount-char[]-int32-int32.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetByteCount1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetByteCount1 Example/VB/getbytecount-char[]-int32-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4b2c-176"><paramref name="chars" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-176"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c4b2c-177"><paramref name="index" /> 或 <paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-177"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="c4b2c-178">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c4b2c-178">-or-</span></span> 
 <span data-ttu-id="c4b2c-179"><paramref name="index" /> 和 <paramref name="count" /> 不表示 <paramref name="chars" /> 中的有效范围。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-179"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
<span data-ttu-id="c4b2c-180">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c4b2c-180">-or-</span></span> 
<span data-ttu-id="c4b2c-181">得到的字节数大于可作为整数返回的最大数量。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-181">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="c4b2c-182">发生回退（有关详细信息，请参阅<see href="/dotnet/standard/base-types/character-encoding">采用 .NET 的字符编码</see>）</span><span class="sxs-lookup"><span data-stu-id="c4b2c-182">A fallback occurred (for more information, see <see href="/dotnet/standard/base-types/character-encoding">Character Encoding in .NET</see>)</span></span> 
<span data-ttu-id="c4b2c-183">和</span><span class="sxs-lookup"><span data-stu-id="c4b2c-183">-and-</span></span> 
 <span data-ttu-id="c4b2c-184"><see cref="P:System.Text.Encoding.EncoderFallback" /> 设置为 <see cref="T:System.Text.EncoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-184"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetEncoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c4b2c-185">将一组字符编码为一个字节序列。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-185">Encodes a set of characters into a sequence of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (ReadOnlySpan&lt;char&gt; chars, Span&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(valuetype System.ReadOnlySpan`1&lt;char&gt; chars, valuetype System.Span`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetBytes(System.ReadOnlySpan{System.Char},System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (chars As ReadOnlySpan(Of Char), bytes As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(ReadOnlySpan&lt;char&gt; chars, Span&lt;System::Byte&gt; bytes);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : ReadOnlySpan&lt;char&gt; * Span&lt;byte&gt; -&gt; int" Usage="aSCIIEncoding.GetBytes (chars, bytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="bytes" Type="System.Span&lt;System.Byte&gt;" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="c4b2c-186">要编码的字符范围。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-186">The character span to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="c4b2c-187">要包含生成的字节集的范围。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-187">The span to contain the resulting set of bytes.</span></span></param>
        <summary><span data-ttu-id="c4b2c-188">将指定的字符范围编码为指定的字节范围。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-188">Encodes the specified character span into the specified byte span.</span></span></summary>
        <returns><span data-ttu-id="c4b2c-189">写入 <paramref name="bytes" /> 的实际字节数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-189">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4b2c-190">若要计算 <xref:System.Text.ASCIIEncoding.GetBytes%2A> 存储生成的字节所需的准确大小，请使用 <xref:System.Text.ASCIIEncoding.GetByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-190">To calculate the exact size required by <xref:System.Text.ASCIIEncoding.GetBytes%2A> to store the resulting bytes, use <xref:System.Text.ASCIIEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="c4b2c-191">若要计算最大大小，请使用 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-191">To calculate the maximum size, use <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="c4b2c-192"><xref:System.Text.ASCIIEncoding.GetByteCount%2A> 方法通常允许分配较少的内存，而 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> 方法的执行速度通常更快。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-192">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="c4b2c-193">要转换的数据（如从流中读取的数据）只能在顺序块中使用。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-193">Data to be converted, such as data read from a stream, can be available only in sequential blocks.</span></span> <span data-ttu-id="c4b2c-194">在这种情况下，或者如果数据量很大以致需要分为较小块，请分别使用 <xref:System.Text.ASCIIEncoding.GetDecoder%2A> 方法或 <xref:System.Text.ASCIIEncoding.GetEncoder%2A> 方法提供的 <xref:System.Text.Decoder> 或 <xref:System.Text.Encoder>。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-194">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.ASCIIEncoding.GetDecoder%2A> method or the <xref:System.Text.ASCIIEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="c4b2c-195"><xref:System.Text.ASCIIEncoding> 不提供错误检测。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-195"><xref:System.Text.ASCIIEncoding> does not provide error detection.</span></span> <span data-ttu-id="c4b2c-196">大于 `U+007F` 的任何 Unicode 字符都编码为 ASCII 问号（"？"）。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-196">Any Unicode character greater than `U+007F` is encoded as the ASCII question mark ("?").</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="c4b2c-197">出于安全原因，应使用 <xref:System.Text.UTF8Encoding>、<xref:System.Text.UnicodeEncoding>或 <xref:System.Text.UTF32Encoding> 并启用错误检测。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-197">For security reasons, you should use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char* chars, int charCount, byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(char* chars, int charCount, System::Byte* bytes, int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : nativeptr&lt;char&gt; * int * nativeptr&lt;byte&gt; * int -&gt; int" Usage="aSCIIEncoding.GetBytes (chars, charCount, bytes, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="charCount" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bytes" Type="System.Byte*" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="byteCount" Type="System.Int32" Index="3" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="c4b2c-198">指向第一个要编码的字符的指针。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-198">A pointer to the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="c4b2c-199">要编码的字符的数目。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-199">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="c4b2c-200">一个指针，指向开始写入所产生的字节序列的位置。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-200">A pointer to the location at which to start writing the resulting sequence of bytes.</span></span></param>
        <param name="byteCount"><span data-ttu-id="c4b2c-201">要写入的最大字节数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-201">The maximum number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="c4b2c-202">将从指定的字符指针开始的一组字符编码为一个字节序列，并从指定的字节指针开始存储该字节序列。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-202">Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span></span></summary>
        <returns><span data-ttu-id="c4b2c-203">在由 <paramref name="bytes" /> 指示的位置处写入的实际字节数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-203">The actual number of bytes written at the location indicated by <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4b2c-204">若要计算 <xref:System.Text.ASCIIEncoding.GetBytes%2A> 存储生成的字节所需的确切数组大小，应用程序需使用 <xref:System.Text.ASCIIEncoding.GetByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-204">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.ASCIIEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="c4b2c-205">若要计算最大数组大小，应用程序应使用 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-205">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="c4b2c-206"><xref:System.Text.ASCIIEncoding.GetByteCount%2A> 方法通常允许分配较少的内存，而 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> 方法的执行速度通常更快。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-206">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="c4b2c-207">要转换的数据（如从流中读取的数据）只能在顺序块中使用。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-207">Data to be converted, such as data read from a stream, can be available only in sequential blocks.</span></span> <span data-ttu-id="c4b2c-208">在这种情况下，或者如果数据量很大以致需要分为较小的块，则应用程序应分别使用 <xref:System.Text.ASCIIEncoding.GetDecoder%2A> 方法或 <xref:System.Text.ASCIIEncoding.GetEncoder%2A> 方法提供的 <xref:System.Text.Decoder> 或 <xref:System.Text.Encoder>。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-208">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.ASCIIEncoding.GetDecoder%2A> method or the <xref:System.Text.ASCIIEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="c4b2c-209"><xref:System.Text.ASCIIEncoding> 不提供错误检测。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-209"><xref:System.Text.ASCIIEncoding> does not provide error detection.</span></span> <span data-ttu-id="c4b2c-210">大于 U + 007F 的任何 Unicode 字符都将转换为 ASCII 问号（"？"）。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-210">Any Unicode character greater than U+007F is translated to an ASCII question mark ("?").</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="c4b2c-211">出于安全原因，建议应用程序使用 <xref:System.Text.UTF8Encoding>、<xref:System.Text.UnicodeEncoding>或 <xref:System.Text.UTF32Encoding> 并启用错误检测。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-211">For security reasons, your application is recommended to use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4b2c-212"><paramref name="chars" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-212"><paramref name="chars" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="c4b2c-213">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c4b2c-213">-or-</span></span> 
 <span data-ttu-id="c4b2c-214"><paramref name="bytes" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-214"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c4b2c-215"><paramref name="charCount" /> 或 <paramref name="byteCount" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-215"><paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c4b2c-216"><paramref name="byteCount" /> 少于所产生的字节数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-216"><paramref name="byteCount" /> is less than the resulting number of bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="c4b2c-217">发生回退（有关详细信息，请参阅<see href="/dotnet/standard/base-types/character-encoding">采用 .NET 的字符编码</see>）</span><span class="sxs-lookup"><span data-stu-id="c4b2c-217">A fallback occurred (for more information, see <see href="/dotnet/standard/base-types/character-encoding">Character Encoding in .NET</see>)</span></span> 
<span data-ttu-id="c4b2c-218">和</span><span class="sxs-lookup"><span data-stu-id="c4b2c-218">-and-</span></span> 
 <span data-ttu-id="c4b2c-219"><see cref="P:System.Text.Encoding.EncoderFallback" /> 设置为 <see cref="T:System.Text.EncoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-219"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetEncoder" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : char[] * int * int * byte[] * int -&gt; int" Usage="aSCIIEncoding.GetBytes (chars, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="c4b2c-220">包含要编码的字符集的字符数组。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-220">The character array containing the set of characters to encode.</span></span></param>
        <param name="charIndex"><span data-ttu-id="c4b2c-221">第一个要编码的字符的索引。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-221">The index of the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="c4b2c-222">要编码的字符的数目。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-222">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="c4b2c-223">要包含所产生的字节序列的字节数组。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-223">The byte array to contain the resulting sequence of bytes.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="c4b2c-224">要开始写入所产生的字节序列的索引位置。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-224">The index at which to start writing the resulting sequence of bytes.</span></span></param>
        <summary><span data-ttu-id="c4b2c-225">将指定字符数组中的一组字符编码到指定的字节数组中。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-225">Encodes a set of characters from the specified character array into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="c4b2c-226">写入 <paramref name="bytes" /> 的实际字节数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-226">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4b2c-227">若要计算 <xref:System.Text.ASCIIEncoding.GetBytes%2A> 存储生成的字节所需的确切数组大小，应用程序需使用 <xref:System.Text.ASCIIEncoding.GetByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-227">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.ASCIIEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="c4b2c-228">若要计算最大数组大小，应用程序应使用 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-228">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="c4b2c-229"><xref:System.Text.ASCIIEncoding.GetByteCount%2A> 方法通常允许分配较少的内存，而 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> 方法的执行速度通常更快。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-229">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="c4b2c-230">要转换的数据（如从流中读取的数据）只能在顺序块中使用。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-230">Data to be converted, such as data read from a stream, can be available only in sequential blocks.</span></span> <span data-ttu-id="c4b2c-231">在这种情况下，或者如果数据量很大以致需要分为较小的块，则应用程序应分别使用 <xref:System.Text.ASCIIEncoding.GetDecoder%2A> 方法或 <xref:System.Text.ASCIIEncoding.GetEncoder%2A> 方法提供的 <xref:System.Text.Decoder> 或 <xref:System.Text.Encoder>。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-231">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.ASCIIEncoding.GetDecoder%2A> method or the <xref:System.Text.ASCIIEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="c4b2c-232"><xref:System.Text.ASCIIEncoding> 不提供错误检测。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-232"><xref:System.Text.ASCIIEncoding> does not provide error detection.</span></span> <span data-ttu-id="c4b2c-233">大于 U + 007F 的任何 Unicode 字符都编码为 ASCII 问号（"？"）。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-233">Any Unicode character greater than U+007F is encoded as the ASCII question mark ("?").</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="c4b2c-234">出于安全原因，建议应用程序使用 <xref:System.Text.UTF8Encoding>、<xref:System.Text.UnicodeEncoding>或 <xref:System.Text.UTF32Encoding> 并启用错误检测。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-234">For security reasons, your application is recommended to use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4b2c-235">下面的示例演示如何使用 <xref:System.Text.ASCIIEncoding.GetBytes%2A> 方法对字符串中的某个范围的字符进行编码，并将编码字符存储在字节数组中的一系列元素中。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-235">The following example demonstrates how to use the <xref:System.Text.ASCIIEncoding.GetBytes%2A> method to encode a range of characters from a string and store the encoded characters in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetBytes1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetBytes1 Example/CPP/getbytes-string-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetBytes1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetBytes1 Example/CS/getbytes-string-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetBytes1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetBytes1 Example/VB/getbytes-string-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4b2c-236"><paramref name="chars" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-236"><paramref name="chars" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="c4b2c-237">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c4b2c-237">-or-</span></span> 
 <span data-ttu-id="c4b2c-238"><paramref name="bytes" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-238"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c4b2c-239"><paramref name="charIndex" />、<paramref name="charCount" /> 或 <paramref name="byteIndex" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-239"><paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="c4b2c-240">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c4b2c-240">-or-</span></span> 
 <span data-ttu-id="c4b2c-241"><paramref name="charIndex" /> 和 <paramref name="charCount" /> 不表示 <paramref name="chars" /> 中的有效范围。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-241"><paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
<span data-ttu-id="c4b2c-242">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c4b2c-242">-or-</span></span> 
 <span data-ttu-id="c4b2c-243"><paramref name="byteIndex" /> 不是 <paramref name="bytes" /> 中的有效索引。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-243"><paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c4b2c-244"><paramref name="bytes" /> 中从 <paramref name="byteIndex" /> 到数组结尾没有足够的容量来容纳所产生的字节。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-244"><paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="c4b2c-245">发生回退（有关详细信息，请参阅<see href="/dotnet/standard/base-types/character-encoding">采用 .NET 的字符编码</see>）</span><span class="sxs-lookup"><span data-stu-id="c4b2c-245">A fallback occurred (for more information, see <see href="/dotnet/standard/base-types/character-encoding">Character Encoding in .NET</see>)</span></span> 
<span data-ttu-id="c4b2c-246">和</span><span class="sxs-lookup"><span data-stu-id="c4b2c-246">-and-</span></span> 
 <span data-ttu-id="c4b2c-247"><see cref="P:System.Text.Encoding.EncoderFallback" /> 设置为 <see cref="T:System.Text.EncoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-247"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetEncoder" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (string chars, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(string chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (chars As String, charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(System::String ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : string * int * int * byte[] * int -&gt; int" Usage="aSCIIEncoding.GetBytes (chars, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.String" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="c4b2c-248">包含要编码的字符集的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-248">The <see cref="T:System.String" /> containing the set of characters to encode.</span></span></param>
        <param name="charIndex"><span data-ttu-id="c4b2c-249">第一个要编码的字符的索引。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-249">The index of the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="c4b2c-250">要编码的字符的数目。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-250">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="c4b2c-251">要包含所产生的字节序列的字节数组。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-251">The byte array to contain the resulting sequence of bytes.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="c4b2c-252">要开始写入所产生的字节序列的索引位置。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-252">The index at which to start writing the resulting sequence of bytes.</span></span></param>
        <summary><span data-ttu-id="c4b2c-253">将指定 <see cref="T:System.String" /> 中的一组字符编码到指定的字节数组中。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-253">Encodes a set of characters from the specified <see cref="T:System.String" /> into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="c4b2c-254">写入 <paramref name="bytes" /> 的实际字节数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-254">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4b2c-255">若要计算 <xref:System.Text.ASCIIEncoding.GetBytes%2A> 存储生成的字节所需的确切数组大小，应用程序需使用 <xref:System.Text.ASCIIEncoding.GetByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-255">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.ASCIIEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="c4b2c-256">若要计算最大数组大小，应用程序应使用 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-256">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="c4b2c-257"><xref:System.Text.ASCIIEncoding.GetByteCount%2A> 方法通常允许分配较少的内存，而 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> 方法的执行速度通常更快。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-257">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="c4b2c-258">要转换的数据（如从流中读取的数据）只能在顺序块中使用。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-258">Data to be converted, such as data read from a stream, can be available only in sequential blocks.</span></span> <span data-ttu-id="c4b2c-259">在这种情况下，或者如果数据量很大以致需要分为较小的块，则应用程序应分别使用 <xref:System.Text.ASCIIEncoding.GetDecoder%2A> 方法或 <xref:System.Text.ASCIIEncoding.GetEncoder%2A> 方法提供的 <xref:System.Text.Decoder> 或 <xref:System.Text.Encoder>。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-259">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.ASCIIEncoding.GetDecoder%2A> method or the <xref:System.Text.ASCIIEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="c4b2c-260"><xref:System.Text.ASCIIEncoding> 不提供错误检测。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-260"><xref:System.Text.ASCIIEncoding> does not provide error detection.</span></span> <span data-ttu-id="c4b2c-261">大于 U + 007F 的任何 Unicode 字符都编码为 ASCII 问号（"？"）。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-261">Any Unicode character greater than U+007F is encoded as the ASCII question mark ("?").</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="c4b2c-262">出于安全原因，建议应用程序使用 <xref:System.Text.UTF8Encoding>、<xref:System.Text.UnicodeEncoding>或 <xref:System.Text.UTF32Encoding> 并启用错误检测。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-262">For security reasons, your application is recommended to use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4b2c-263">下面的示例演示如何使用 <xref:System.Text.ASCIIEncoding.GetBytes%2A> 方法对 Unicode 字符数组中的一系列元素进行编码，并将已编码的字节存储在字节数组中的一系列元素中。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-263">The following example demonstrates how to use the <xref:System.Text.ASCIIEncoding.GetBytes%2A> method to encode a range of elements from a Unicode character array and store the encoded bytes in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetBytes2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetBytes2/CPP/getbytes-char[]-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetBytes2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetBytes2/CS/getbytes-char[]-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetBytes2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetBytes2/VB/getbytes-char[]-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4b2c-264"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-264"><paramref name="s" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="c4b2c-265">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c4b2c-265">-or-</span></span> 
 <span data-ttu-id="c4b2c-266"><paramref name="bytes" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-266"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c4b2c-267"><paramref name="charIndex" />、<paramref name="charCount" /> 或 <paramref name="byteIndex" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-267"><paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="c4b2c-268">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c4b2c-268">-or-</span></span> 
 <span data-ttu-id="c4b2c-269"><paramref name="charIndex" /> 和 <paramref name="charCount" /> 不表示 <paramref name="chars" /> 中的有效范围。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-269"><paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
<span data-ttu-id="c4b2c-270">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c4b2c-270">-or-</span></span> 
 <span data-ttu-id="c4b2c-271"><paramref name="byteIndex" /> 不是 <paramref name="bytes" /> 中的有效索引。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-271"><paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c4b2c-272"><paramref name="bytes" /> 中从 <paramref name="byteIndex" /> 到数组结尾没有足够的容量来容纳所产生的字节。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-272"><paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="c4b2c-273">发生回退（有关详细信息，请参阅<see href="/dotnet/standard/base-types/character-encoding">采用 .NET 的字符编码</see>）</span><span class="sxs-lookup"><span data-stu-id="c4b2c-273">A fallback occurred (for more information, see <see href="/dotnet/standard/base-types/character-encoding">Character Encoding in .NET</see>)</span></span> 
<span data-ttu-id="c4b2c-274">和</span><span class="sxs-lookup"><span data-stu-id="c4b2c-274">-and-</span></span> 
 <span data-ttu-id="c4b2c-275"><see cref="P:System.Text.Encoding.EncoderFallback" /> 设置为 <see cref="T:System.Text.EncoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-275"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetEncoder" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCharCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c4b2c-276">计算对一个字节序列进行解码所产生的字符数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-276">Calculates the number of characters produced by decoding a sequence of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (ReadOnlySpan&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetCharCount(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharCount (bytes As ReadOnlySpan(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(ReadOnlySpan&lt;System::Byte&gt; bytes);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : ReadOnlySpan&lt;byte&gt; -&gt; int" Usage="aSCIIEncoding.GetCharCount bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="c4b2c-277">包含要解码的字节集的范围。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-277">The span containing the set of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="c4b2c-278">计算对指定字节范围进行解码所产生的字符数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-278">Calculates the number of characters produced by decoding the specified byte span.</span></span></summary>
        <returns><span data-ttu-id="c4b2c-279">对指定字节范围进行解码所产生的字符数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-279">The number of characters produced by decoding the specified byte span.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4b2c-280">若要计算 <xref:System.Text.ASCIIEncoding.GetChars%2A> 存储所生成的字符所需的准确大小，请使用 <xref:System.Text.ASCIIEncoding.GetCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-280">To calculate the exact size required by <xref:System.Text.ASCIIEncoding.GetChars%2A> to store the resulting characters, use <xref:System.Text.ASCIIEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="c4b2c-281">若要计算最大大小，请使用 <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-281">To calculate the maximum size, use <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="c4b2c-282"><xref:System.Text.ASCIIEncoding.GetCharCount%2A> 方法通常允许分配较少的内存，而 <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> 方法的执行速度通常更快。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-282">The <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte* bytes, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8* bytes, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(System::Byte* bytes, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : nativeptr&lt;byte&gt; * int -&gt; int" Usage="aSCIIEncoding.GetCharCount (bytes, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="c4b2c-283">指向第一个要解码的字节的指针。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-283">A pointer to the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="c4b2c-284">要解码的字节数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-284">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="c4b2c-285">计算对一个字节序列（从指定的字节指针开始）进行解码所产生的字符数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-285">Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span></span></summary>
        <returns><span data-ttu-id="c4b2c-286">对指定字节序列进行解码所产生的字符数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-286">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4b2c-287">若要计算 <xref:System.Text.ASCIIEncoding.GetChars%2A> 存储所生成的字符所需的确切数组大小，应用程序需使用 <xref:System.Text.ASCIIEncoding.GetCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-287">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.ASCIIEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="c4b2c-288">若要计算最大数组大小，应用程序应使用 <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-288">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="c4b2c-289"><xref:System.Text.ASCIIEncoding.GetCharCount%2A> 方法通常允许分配较少的内存，而 <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> 方法的执行速度通常更快。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-289">The <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4b2c-290"><paramref name="bytes" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-290"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c4b2c-291"><paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-291"><paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="c4b2c-292">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c4b2c-292">-or-</span></span> 
<span data-ttu-id="c4b2c-293">得到的字节数大于可作为整数返回的最大数量。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-293">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="c4b2c-294">发生回退（有关详细信息，请参阅<see href="/dotnet/standard/base-types/character-encoding">采用 .NET 的字符编码</see>）</span><span class="sxs-lookup"><span data-stu-id="c4b2c-294">A fallback occurred (for more information, see <see href="/dotnet/standard/base-types/character-encoding">Character Encoding in .NET</see>)</span></span> 
<span data-ttu-id="c4b2c-295">和</span><span class="sxs-lookup"><span data-stu-id="c4b2c-295">-and-</span></span> 
 <span data-ttu-id="c4b2c-296"><see cref="P:System.Text.Encoding.DecoderFallback" /> 设置为 <see cref="T:System.Text.DecoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-296"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="Overload:System.Text.ASCIIEncoding.GetChars" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharCount (bytes As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : byte[] * int * int -&gt; int" Usage="aSCIIEncoding.GetCharCount (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="c4b2c-297">包含要解码的字节序列的字节数组。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-297">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="c4b2c-298">第一个要解码的字节的索引。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-298">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="c4b2c-299">要解码的字节数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-299">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="c4b2c-300">计算对指定字节数组中的一个字节序列进行解码所产生的字符数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-300">Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="c4b2c-301">对指定字节序列进行解码所产生的字符数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-301">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4b2c-302">若要计算 <xref:System.Text.ASCIIEncoding.GetChars%2A> 存储所生成的字符所需的确切数组大小，应用程序需使用 <xref:System.Text.ASCIIEncoding.GetCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-302">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.ASCIIEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="c4b2c-303">若要计算最大数组大小，应用程序应使用 <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-303">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="c4b2c-304"><xref:System.Text.ASCIIEncoding.GetCharCount%2A> 方法通常允许分配较少的内存，而 <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> 方法的执行速度通常更快。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-304">The <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4b2c-305">下面的示例演示如何使用 <xref:System.Text.ASCIIEncoding.GetCharCount%2A> 方法返回对字节数组中的一系列元素进行解码所产生的字符数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-305">The following example demonstrates how to use the <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method to return the number of characters produced by decoding a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetCharCount Example/CPP/getcharcount-byte[]-int32-int32.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetCharCount Example/CS/getcharcount-byte[]-int32-int32.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetCharCount Example/VB/getcharcount-byte[]-int32-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4b2c-306"><paramref name="bytes" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-306"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c4b2c-307"><paramref name="index" /> 或 <paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-307"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="c4b2c-308">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c4b2c-308">-or-</span></span> 
 <span data-ttu-id="c4b2c-309"><paramref name="index" /> 和 <paramref name="count" /> 不表示 <paramref name="bytes" /> 中的有效范围。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-309"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span>  
  
<span data-ttu-id="c4b2c-310">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c4b2c-310">-or-</span></span> 
<span data-ttu-id="c4b2c-311">得到的字节数大于可作为整数返回的最大数量。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-311">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="c4b2c-312">发生回退（有关详细信息，请参阅<see href="/dotnet/standard/base-types/character-encoding">采用 .NET 的字符编码</see>）</span><span class="sxs-lookup"><span data-stu-id="c4b2c-312">A fallback occurred (for more information, see <see href="/dotnet/standard/base-types/character-encoding">Character Encoding in .NET</see>)</span></span> 
<span data-ttu-id="c4b2c-313">和</span><span class="sxs-lookup"><span data-stu-id="c4b2c-313">-and-</span></span> 
 <span data-ttu-id="c4b2c-314"><see cref="P:System.Text.Encoding.DecoderFallback" /> 设置为 <see cref="T:System.Text.DecoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-314"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="Overload:System.Text.ASCIIEncoding.GetChars" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetDecoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChars">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c4b2c-315">将一个字节序列解码为一组字符。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-315">Decodes a sequence of bytes into a set of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (ReadOnlySpan&lt;byte&gt; bytes, Span&lt;char&gt; chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, valuetype System.Span`1&lt;char&gt; chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetChars(System.ReadOnlySpan{System.Byte},System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (bytes As ReadOnlySpan(Of Byte), chars As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(ReadOnlySpan&lt;System::Byte&gt; bytes, Span&lt;char&gt; chars);" />
      <MemberSignature Language="F#" Value="override this.GetChars : ReadOnlySpan&lt;byte&gt; * Span&lt;char&gt; -&gt; int" Usage="aSCIIEncoding.GetChars (bytes, chars)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="chars" Type="System.Span&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="c4b2c-316">包含要解码的字节的范围。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-316">The span containing the bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="c4b2c-317">要包含生成的字符集的范围。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-317">The span to contain the resulting set of characters.</span></span></param>
        <summary><span data-ttu-id="c4b2c-318">将指定的字节范围解码为指定的字符范围。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-318">Decodes the specified byte span into the specified character span.</span></span></summary>
        <returns><span data-ttu-id="c4b2c-319">写入 <paramref name="chars" /> 的实际字符数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-319">The actual number of characters written into <paramref name="chars" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4b2c-320">若要计算 <xref:System.Text.ASCIIEncoding.GetChars%2A> 存储所生成的字符所需的准确大小，请使用 <xref:System.Text.ASCIIEncoding.GetCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-320">To calculate the exact size required by <xref:System.Text.ASCIIEncoding.GetChars%2A> to store the resulting characters, use <xref:System.Text.ASCIIEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="c4b2c-321">若要计算最大大小，请使用 <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-321">To calculate the maximum size, use <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="c4b2c-322"><xref:System.Text.ASCIIEncoding.GetCharCount%2A> 方法通常允许分配较少的内存，而 <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> 方法的执行速度通常更快。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-322">The <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="c4b2c-323">要转换的数据（如从流中读取的数据）只能在顺序块中使用。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-323">Data to be converted, such as data read from a stream, can be available only in sequential blocks.</span></span> <span data-ttu-id="c4b2c-324">在这种情况下，或者如果数据量很大以致需要分为较小的块，则应分别使用 <xref:System.Text.ASCIIEncoding.GetDecoder%2A> 方法或 <xref:System.Text.ASCIIEncoding.GetEncoder%2A> 方法提供的 <xref:System.Text.Decoder> 或 <xref:System.Text.Encoder>。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-324">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.ASCIIEncoding.GetDecoder%2A> method or the <xref:System.Text.ASCIIEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="c4b2c-325"><xref:System.Text.ASCIIEncoding> 不提供错误检测。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-325"><xref:System.Text.ASCIIEncoding> does not provide error detection.</span></span> <span data-ttu-id="c4b2c-326">任何大于十六进制 `0x7F` 的字节都将解码为 Unicode 问号（"？"）。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-326">Any byte greater than hexadecimal `0x7F` is decoded as the Unicode question mark ("?").</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="c4b2c-327">出于安全原因，应使用 <xref:System.Text.UTF8Encoding>、<xref:System.Text.UnicodeEncoding>或 <xref:System.Text.UTF32Encoding> 并启用错误检测。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-327">For security reasons, you should use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(System::Byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetChars : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int -&gt; int" Usage="aSCIIEncoding.GetChars (bytes, byteCount, chars, charCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="byteCount" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="chars" Type="System.Char*" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="charCount" Type="System.Int32" Index="3" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="c4b2c-328">指向第一个要解码的字节的指针。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-328">A pointer to the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="c4b2c-329">要解码的字节数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-329">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="c4b2c-330">一个指针，指向开始写入所产生的字符集的位置。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-330">A pointer to the location at which to start writing the resulting set of characters.</span></span></param>
        <param name="charCount"><span data-ttu-id="c4b2c-331">要写入的最大字符数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-331">The maximum number of characters to write.</span></span></param>
        <summary><span data-ttu-id="c4b2c-332">将从指定的字节指针开始的一个字节序列解码为一组字符，并从指定的字符指针开始存储这组字符。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-332">Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span></span></summary>
        <returns><span data-ttu-id="c4b2c-333">在由 <paramref name="chars" /> 指示的位置处写入的实际字符数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-333">The actual number of characters written at the location indicated by <paramref name="chars" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4b2c-334">若要计算 <xref:System.Text.ASCIIEncoding.GetChars%2A> 存储所生成的字符所需的确切数组大小，应用程序需使用 <xref:System.Text.ASCIIEncoding.GetCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-334">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.ASCIIEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="c4b2c-335">若要计算最大数组大小，应用程序应使用 <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-335">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="c4b2c-336"><xref:System.Text.ASCIIEncoding.GetCharCount%2A> 方法通常允许分配较少的内存，而 <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> 方法的执行速度通常更快。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-336">The <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="c4b2c-337">要转换的数据（如从流中读取的数据）只能在顺序块中使用。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-337">Data to be converted, such as data read from a stream, can be available only in sequential blocks.</span></span> <span data-ttu-id="c4b2c-338">在这种情况下，或者如果数据量很大以致需要分为较小的块，则应用程序应分别使用 <xref:System.Text.ASCIIEncoding.GetDecoder%2A> 方法或 <xref:System.Text.ASCIIEncoding.GetEncoder%2A> 方法提供的 <xref:System.Text.Decoder> 或 <xref:System.Text.Encoder>。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-338">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.ASCIIEncoding.GetDecoder%2A> method or the <xref:System.Text.ASCIIEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="c4b2c-339"><xref:System.Text.ASCIIEncoding> 不提供错误检测。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-339"><xref:System.Text.ASCIIEncoding> does not provide error detection.</span></span> <span data-ttu-id="c4b2c-340">任何大于十六进制0x7F 的字节都将解码为 Unicode 问号（"？"）。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-340">Any byte greater than hexadecimal 0x7F is decoded as the Unicode question mark ("?").</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="c4b2c-341">出于安全原因，建议应用程序使用 <xref:System.Text.UTF8Encoding>、<xref:System.Text.UnicodeEncoding>或 <xref:System.Text.UTF32Encoding> 并启用错误检测。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-341">For security reasons, your application is recommended to use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4b2c-342"><paramref name="bytes" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-342"><paramref name="bytes" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="c4b2c-343">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c4b2c-343">-or-</span></span> 
 <span data-ttu-id="c4b2c-344"><paramref name="chars" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-344"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c4b2c-345"><paramref name="byteCount" /> 或 <paramref name="charCount" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-345"><paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c4b2c-346"><paramref name="charCount" /> 少于所产生的字符数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-346"><paramref name="charCount" /> is less than the resulting number of characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="c4b2c-347">发生回退（有关详细信息，请参阅<see href="/dotnet/standard/base-types/character-encoding">采用 .NET 的字符编码</see>）</span><span class="sxs-lookup"><span data-stu-id="c4b2c-347">A fallback occurred (for more information, see <see href="/dotnet/standard/base-types/character-encoding">Character Encoding in .NET</see>)</span></span> 
<span data-ttu-id="c4b2c-348">和</span><span class="sxs-lookup"><span data-stu-id="c4b2c-348">-and-</span></span> 
 <span data-ttu-id="c4b2c-349"><see cref="P:System.Text.Encoding.DecoderFallback" /> 设置为 <see cref="T:System.Text.DecoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-349"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetDecoder" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex);" />
      <MemberSignature Language="F#" Value="override this.GetChars : byte[] * int * int * char[] * int -&gt; int" Usage="aSCIIEncoding.GetChars (bytes, byteIndex, byteCount, chars, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="c4b2c-350">包含要解码的字节序列的字节数组。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-350">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="c4b2c-351">第一个要解码的字节的索引。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-351">The index of the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="c4b2c-352">要解码的字节数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-352">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="c4b2c-353">要用于包含所产生的字符集的字符数组。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-353">The character array to contain the resulting set of characters.</span></span></param>
        <param name="charIndex"><span data-ttu-id="c4b2c-354">开始写入所产生的字符集的索引位置。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-354">The index at which to start writing the resulting set of characters.</span></span></param>
        <summary><span data-ttu-id="c4b2c-355">将指定字节数组中的一个字节序列解码为指定的字符数组。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-355">Decodes a sequence of bytes from the specified byte array into the specified character array.</span></span></summary>
        <returns><span data-ttu-id="c4b2c-356">写入 <paramref name="chars" /> 的实际字符数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-356">The actual number of characters written into <paramref name="chars" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4b2c-357">若要计算 <xref:System.Text.ASCIIEncoding.GetChars%2A> 存储所生成的字符所需的确切数组大小，应用程序需使用 <xref:System.Text.ASCIIEncoding.GetCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-357">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.ASCIIEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="c4b2c-358">若要计算最大数组大小，应用程序应使用 <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-358">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="c4b2c-359"><xref:System.Text.ASCIIEncoding.GetCharCount%2A> 方法通常允许分配较少的内存，而 <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> 方法的执行速度通常更快。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-359">The <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="c4b2c-360">要转换的数据（如从流中读取的数据）只能在顺序块中使用。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-360">Data to be converted, such as data read from a stream, can be available only in sequential blocks.</span></span> <span data-ttu-id="c4b2c-361">在这种情况下，或者如果数据量很大以致需要分为较小的块，则应用程序应分别使用 <xref:System.Text.ASCIIEncoding.GetDecoder%2A> 方法或 <xref:System.Text.ASCIIEncoding.GetEncoder%2A> 方法提供的 <xref:System.Text.Decoder> 或 <xref:System.Text.Encoder>。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-361">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.ASCIIEncoding.GetDecoder%2A> method or the <xref:System.Text.ASCIIEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="c4b2c-362"><xref:System.Text.ASCIIEncoding> 不提供错误检测。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-362"><xref:System.Text.ASCIIEncoding> does not provide error detection.</span></span> <span data-ttu-id="c4b2c-363">任何大于十六进制0x7F 的字节都将解码为 Unicode 问号（"？"）。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-363">Any byte greater than hexadecimal 0x7F is decoded as the Unicode question mark ("?").</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="c4b2c-364">出于安全原因，建议应用程序使用 <xref:System.Text.UTF8Encoding>、<xref:System.Text.UnicodeEncoding>或 <xref:System.Text.UTF32Encoding> 并启用错误检测。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-364">For security reasons, your application is recommended to use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4b2c-365">下面的示例演示如何对字节数组中的一系列元素进行解码，并将结果存储在 Unicode 字符数组中的一组元素中。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-365">The following example demonstrates how to decode a range of elements from a byte array and store the result in a set of elements in a Unicode character array.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetChars Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetChars Example/CPP/getchars-byte[]-int32-int32-char[]-int32.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetChars Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetChars Example/CS/getchars-byte[]-int32-int32-char[]-int32.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetChars Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetChars Example/VB/getchars-byte[]-int32-int32-char[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4b2c-366"><paramref name="bytes" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-366"><paramref name="bytes" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="c4b2c-367">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c4b2c-367">-or-</span></span> 
 <span data-ttu-id="c4b2c-368"><paramref name="chars" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-368"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c4b2c-369"><paramref name="byteIndex" />、<paramref name="byteCount" /> 或 <paramref name="charIndex" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-369"><paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="c4b2c-370">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c4b2c-370">-or-</span></span> 
 <span data-ttu-id="c4b2c-371"><paramref name="byteindex" /> 和 <paramref name="byteCount" /> 不表示 <paramref name="bytes" /> 中的有效范围。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-371"><paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span></span>  
  
<span data-ttu-id="c4b2c-372">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c4b2c-372">-or-</span></span> 
 <span data-ttu-id="c4b2c-373"><paramref name="charIndex" /> 不是 <paramref name="chars" /> 中的有效索引。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-373"><paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c4b2c-374"><paramref name="chars" /> 中从 <paramref name="charIndex" /> 到数组结尾没有足够容量来容纳所产生的字符。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-374"><paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="c4b2c-375">发生回退（有关详细信息，请参阅<see href="/dotnet/standard/base-types/character-encoding">采用 .NET 的字符编码</see>）</span><span class="sxs-lookup"><span data-stu-id="c4b2c-375">A fallback occurred (for more information, see <see href="/dotnet/standard/base-types/character-encoding">Character Encoding in .NET</see>)</span></span> 
<span data-ttu-id="c4b2c-376">和</span><span class="sxs-lookup"><span data-stu-id="c4b2c-376">-and-</span></span> 
 <span data-ttu-id="c4b2c-377"><see cref="P:System.Text.Encoding.DecoderFallback" /> 设置为 <see cref="T:System.Text.DecoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-377"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetDecoder" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDecoder">
      <MemberSignature Language="C#" Value="public override System.Text.Decoder GetDecoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Decoder GetDecoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetDecoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecoder () As Decoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Decoder ^ GetDecoder();" />
      <MemberSignature Language="F#" Value="override this.GetDecoder : unit -&gt; System.Text.Decoder" Usage="aSCIIEncoding.GetDecoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Decoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4b2c-378">获取可以将 ASCII 编码的字节序列转换为 Unicode 字符序列的解码器。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-378">Obtains a decoder that converts an ASCII encoded sequence of bytes into a sequence of Unicode characters.</span></span></summary>
        <returns><span data-ttu-id="c4b2c-379"><see cref="T:System.Text.Decoder" /> 用于将 ASCII 编码的字节序列转换为 Unicode 字符序列。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-379">A <see cref="T:System.Text.Decoder" /> that converts an ASCII encoded sequence of bytes into a sequence of Unicode characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4b2c-380"><xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> 方法以类似于此类的 <xref:System.Text.ASCIIEncoding.GetChars%2A> 方法的方式将连续字节块转换为连续的字符块。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-380">The <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <xref:System.Text.ASCIIEncoding.GetChars%2A> method of this class.</span></span> <span data-ttu-id="c4b2c-381">但 <xref:System.Text.Decoder> 会在调用之间维护状态信息，因此它可以正确地对跨块的字节序列进行解码。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-381">However, a <xref:System.Text.Decoder> maintains state information between calls so it can correctly decode byte sequences that span blocks.</span></span> <span data-ttu-id="c4b2c-382"><xref:System.Text.Decoder> 还将保留数据块末尾的尾随字节，并在下一个解码操作中使用尾随字节。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-382">The <xref:System.Text.Decoder> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</span></span> <span data-ttu-id="c4b2c-383">因此，<xref:System.Text.ASCIIEncoding.GetDecoder%2A> 和 <xref:System.Text.ASCIIEncoding.GetEncoder%2A> 对于网络传输和文件操作非常有用，因为这些操作经常处理数据块，而不是完整的数据流。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-383">Therefore, <xref:System.Text.ASCIIEncoding.GetDecoder%2A> and <xref:System.Text.ASCIIEncoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Decoder" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetEncoder" />
        <related type="Article" href="/dotnet/standard/base-types/character-encoding"><span data-ttu-id="c4b2c-384">了解编码</span><span class="sxs-lookup"><span data-stu-id="c4b2c-384">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEncoder">
      <MemberSignature Language="C#" Value="public override System.Text.Encoder GetEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoder GetEncoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoder () As Encoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoder ^ GetEncoder();" />
      <MemberSignature Language="F#" Value="override this.GetEncoder : unit -&gt; System.Text.Encoder" Usage="aSCIIEncoding.GetEncoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4b2c-385">获取可将 Unicode 字符序列转换为 ASCII 编码的字节序列的编码器。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-385">Obtains an encoder that converts a sequence of Unicode characters into an ASCII encoded sequence of bytes.</span></span></summary>
        <returns><span data-ttu-id="c4b2c-386">一个 <see cref="T:System.Text.Encoder" />，它将一个 Unicode 字符序列转换为一个 ASCII 编码的字节序列。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-386">An <see cref="T:System.Text.Encoder" /> that converts a sequence of Unicode characters into an ASCII encoded sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4b2c-387"><xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> 方法以类似于此类的 <xref:System.Text.ASCIIEncoding.GetBytes%2A> 方法的方式将顺序块字符转换为按顺序排列的字节块。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-387">The <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method converts sequential blocks of characters into sequential blocks of bytes, in a manner similar to the <xref:System.Text.ASCIIEncoding.GetBytes%2A> method of this class.</span></span> <span data-ttu-id="c4b2c-388">但 <xref:System.Text.Encoder> 会在调用之间维护状态信息，因此它可以正确地对跨块的字符序列进行编码。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-388">However, an <xref:System.Text.Encoder> maintains state information between calls so it can correctly encode character sequences that span blocks.</span></span> <span data-ttu-id="c4b2c-389"><xref:System.Text.Encoder> 还在数据块的末尾保留尾部字符，并在下一编码操作中使用尾随字符。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-389">The <xref:System.Text.Encoder> also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</span></span> <span data-ttu-id="c4b2c-390">例如，数据块可能以不匹配的高代理项结束，并且匹配的低代理项可能位于下一个数据块中。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-390">For example, a data block might end with an unmatched high surrogate, and the matching low surrogate might be in the next data block.</span></span> <span data-ttu-id="c4b2c-391">因此，<xref:System.Text.ASCIIEncoding.GetDecoder%2A> 和 <xref:System.Text.ASCIIEncoding.GetEncoder%2A> 对于网络传输和文件操作非常有用，因为这些操作经常处理数据块，而不是完整的数据流。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-391">Therefore, <xref:System.Text.ASCIIEncoding.GetDecoder%2A> and <xref:System.Text.ASCIIEncoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoder" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetDecoder" />
        <related type="Article" href="/dotnet/standard/base-types/character-encoding"><span data-ttu-id="c4b2c-392">了解编码</span><span class="sxs-lookup"><span data-stu-id="c4b2c-392">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetMaxByteCount">
      <MemberSignature Language="C#" Value="public override int GetMaxByteCount (int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxByteCount(int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxByteCount (charCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxByteCount(int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxByteCount : int -&gt; int" Usage="aSCIIEncoding.GetMaxByteCount charCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charCount"><span data-ttu-id="c4b2c-393">要编码的字符的数目。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-393">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="c4b2c-394">计算对指定数目的字符进行编码时产生的最大字节数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-394">Calculates the maximum number of bytes produced by encoding the specified number of characters.</span></span></summary>
        <returns><span data-ttu-id="c4b2c-395">对指定数目的字符进行编码所产生的最大字节数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-395">The maximum number of bytes produced by encoding the specified number of characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4b2c-396"><xref:System.Text.ASCIIEncoding.GetByteCount%2A> 方法计算 <xref:System.Text.ASCIIEncoding.GetBytes%2A> 方法存储生成的字节所需的精确数组大小，而 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> 方法则计算最大数组大小。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-396">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method calculates the exact array size required by the <xref:System.Text.ASCIIEncoding.GetBytes%2A> method to store the resulting bytes, whereas the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method calculates the maximum array size.</span></span> <span data-ttu-id="c4b2c-397"><xref:System.Text.ASCIIEncoding.GetByteCount%2A> 方法通常分配较少的内存，但 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> 方法的执行速度通常更快。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-397">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method generally allocates less memory, but the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="c4b2c-398"><xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> 是最差的事例数，包括当前所选 <xref:System.Text.EncoderFallback>的最坏情况。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-398"><xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> is a worst-case number, including the worst case for the currently selected <xref:System.Text.EncoderFallback>.</span></span>  <span data-ttu-id="c4b2c-399">如果你选择的替换回退具有可能大的字符串，则 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> 可以返回大值。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-399">If you choose a replacement fallback with a potentially large string, <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="c4b2c-400"><xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> 方法会考虑先前编码操作中的潜在遗留代理项。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-400">The <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method considers potential leftover surrogates from a previous encoding operation.</span></span> <span data-ttu-id="c4b2c-401">因此，如果 <xref:System.Text.ASCIIEncoding> 对象使用默认的替换回退，或者如果使用单个可能的回退字符定义了自定义的替换回退，则该方法将返回 `charCount` + 1。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-401">As a result, if the <xref:System.Text.ASCIIEncoding> object uses the default replacement fallback, or if a custom replacement fallback has been defined with a single possible fallback character, the method returns `charCount` + 1.</span></span> <span data-ttu-id="c4b2c-402">如果 <xref:System.Text.ASCIIEncoding> 对象使用具有多个可能的回退字符的替换回退，则该方法将返回*n* \* （`charCount` + 1），其中*n*是最大回退字符数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-402">If the <xref:System.Text.ASCIIEncoding> object uses a replacement fallback with more than one possible fallback character, the method returns *n* \* (`charCount` + 1), where *n* is the maximum number of fallback characters.</span></span>  
  
 <span data-ttu-id="c4b2c-403"><xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> 与 <xref:System.Text.ASCIIEncoding.GetChars%2A>无关。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-403"><xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> has no relation to <xref:System.Text.ASCIIEncoding.GetChars%2A>.</span></span> <span data-ttu-id="c4b2c-404">如果你的应用程序需要类似的函数来与 <xref:System.Text.ASCIIEncoding.GetChars%2A>一起使用，则它应使用 <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-404">If your application needs a similar function to use with <xref:System.Text.ASCIIEncoding.GetChars%2A>, it should use <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4b2c-405">`GetMaxByteCount(N)` 不一定与 `N* GetMaxByteCount(1)`相同。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-405">`GetMaxByteCount(N)` is not necessarily the same value as `N* GetMaxByteCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4b2c-406">下面的示例演示如何使用 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> 方法来计算对指定数目的字符进行编码所需的字节数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-406">The following example demonstrates how to use the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method to calculate the bytes required to encode a specified number of characters.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetMaxByteCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetMaxByteCount Example/CPP/getmaxbytecount-int32.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetMaxByteCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetMaxByteCount Example/CS/getmaxbytecount-int32.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetMaxByteCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetMaxByteCount Example/VB/getmaxbytecount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c4b2c-407"><paramref name="charCount" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-407"><paramref name="charCount" /> is less than zero.</span></span>  
  
<span data-ttu-id="c4b2c-408">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c4b2c-408">-or-</span></span> 
<span data-ttu-id="c4b2c-409">得到的字节数大于可作为整数返回的最大数量。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-409">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxCharCount">
      <MemberSignature Language="C#" Value="public override int GetMaxCharCount (int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxCharCount(int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxCharCount (byteCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxCharCount(int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxCharCount : int -&gt; int" Usage="aSCIIEncoding.GetMaxCharCount byteCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="byteCount"><span data-ttu-id="c4b2c-410">要解码的字节数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-410">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="c4b2c-411">计算对指定数目的字节进行解码时产生的最大字符数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-411">Calculates the maximum number of characters produced by decoding the specified number of bytes.</span></span></summary>
        <returns><span data-ttu-id="c4b2c-412">对指定数目的字节进行解码时所产生的最大字符数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-412">The maximum number of characters produced by decoding the specified number of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4b2c-413"><xref:System.Text.ASCIIEncoding.GetCharCount%2A> 方法计算 <xref:System.Text.ASCIIEncoding.GetChars%2A> 方法存储所生成的字符所需的精确数组大小，而 <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> 方法则计算最大数组大小。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-413">The <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method calculates the exact array size required by the <xref:System.Text.ASCIIEncoding.GetChars%2A> method to store the resulting characters, whereas  the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method calculates the maximum array size.</span></span> <span data-ttu-id="c4b2c-414"><xref:System.Text.ASCIIEncoding.GetCharCount%2A> 方法通常分配较少的内存，而 <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> 方法的执行速度通常更快。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-414">The <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="c4b2c-415"><xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> 检索最差的事例数，包括当前所选 <xref:System.Text.DecoderFallback>的最坏情况。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-415"><xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> retrieves a worst-case number, including the worst case for the currently selected <xref:System.Text.DecoderFallback>.</span></span> <span data-ttu-id="c4b2c-416">如果存在最大回退长度为*n*的解码器回退，则 <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> 方法返回*n* \* `byteCount`。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-416">If a decoder fallback is present that has a maximum fallback length of *n*, the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method returns *n* \* `byteCount`.</span></span>  
  
 <span data-ttu-id="c4b2c-417"><xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> 与 <xref:System.Text.ASCIIEncoding.GetBytes%2A>无关。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-417"><xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> has no relation to <xref:System.Text.ASCIIEncoding.GetBytes%2A>.</span></span> <span data-ttu-id="c4b2c-418">如果你的应用程序需要类似的函数来与 <xref:System.Text.ASCIIEncoding.GetBytes%2A>一起使用，则它应使用 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-418">If your application needs a similar function to use with <xref:System.Text.ASCIIEncoding.GetBytes%2A>, it should use <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4b2c-419">`GetMaxCharCount(N)` 不一定与 `N* GetMaxCharCount(1)`相同。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-419">`GetMaxCharCount(N)` is not necessarily the same value as `N* GetMaxCharCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4b2c-420">下面的示例演示如何使用 <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> 方法来计算对指定字节数进行解码所需的最大字符数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-420">The following example demonstrates how to use the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method to calculate the maximum number of characters needed to decode a specified number of bytes.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetMaxCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetMaxCharCount Example/CPP/getmaxcharcount-int32.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetMaxCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetMaxCharCount Example/CS/getmaxcharcount-int32.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetMaxCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetMaxCharCount Example/VB/getmaxcharcount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c4b2c-421"><paramref name="byteCount" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-421"><paramref name="byteCount" /> is less than zero.</span></span>  
  
<span data-ttu-id="c4b2c-422">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c4b2c-422">-or-</span></span> 
<span data-ttu-id="c4b2c-423">得到的字节数大于可作为整数返回的最大数量。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-423">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetString(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (bytes As Byte()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberSignature Language="F#" Value="override this.GetString : byte[] -&gt; string" Usage="aSCIIEncoding.GetString bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (byte[] bytes, int byteIndex, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(unsigned int8[] bytes, int32 byteIndex, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (bytes As Byte(), byteIndex As Integer, byteCount As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetString : byte[] * int * int -&gt; string" Usage="aSCIIEncoding.GetString (bytes, byteIndex, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="c4b2c-424">包含要解码的字节序列的字节数组。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-424">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="c4b2c-425">第一个要解码的字节的索引。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-425">The index of the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="c4b2c-426">要解码的字节数。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-426">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="c4b2c-427">将字节数组中某个范围的字节解码为一个字符串。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-427">Decodes a range of bytes from a byte array into a string.</span></span></summary>
        <returns><span data-ttu-id="c4b2c-428">包含指定字节序列解码结果的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-428">A <see cref="T:System.String" /> containing the results of decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4b2c-429">要转换的数据（如从流中读取的数据）只能在顺序块中使用。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-429">Data to be converted, such as data read from a stream, can be available only in sequential blocks.</span></span> <span data-ttu-id="c4b2c-430">在这种情况下，或者如果数据量很大以致需要分为较小的块，则应用程序应分别使用 <xref:System.Text.ASCIIEncoding.GetDecoder%2A> 方法或 <xref:System.Text.ASCIIEncoding.GetEncoder%2A> 方法提供的 <xref:System.Text.Decoder> 或 <xref:System.Text.Encoder>。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-430">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.ASCIIEncoding.GetDecoder%2A> method or the <xref:System.Text.ASCIIEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="c4b2c-431"><xref:System.Text.ASCIIEncoding> 不提供错误检测。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-431"><xref:System.Text.ASCIIEncoding> does not provide error detection.</span></span> <span data-ttu-id="c4b2c-432">任何大于十六进制0x7F 的字节都将解码为 Unicode 问号（"？"）。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-432">Any byte greater than hexadecimal 0x7F is decoded as the Unicode question mark ("?").</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="c4b2c-433">出于安全原因，应使用 <xref:System.Text.UTF8Encoding>、<xref:System.Text.UnicodeEncoding>或 <xref:System.Text.UTF32Encoding> 类，并启用错误检测，而不是使用 <xref:System.Text.ASCIIEncoding> 类。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-433">For security reasons, you should use the <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> classes and enable error detection instead of using the <xref:System.Text.ASCIIEncoding> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4b2c-434">下面的示例演示如何使用 <xref:System.Text.ASCIIEncoding.GetString%2A> 方法将字节数组转换为 <xref:System.String>。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-434">The following example demonstrates how to use the <xref:System.Text.ASCIIEncoding.GetString%2A> method to convert a byte array into a <xref:System.String>.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetString1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetString1 Example/CPP/getstring-byte[].cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetString1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetString1 Example/CS/getstring-byte[].cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetString1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetString1 Example/VB/getstring-byte[].vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4b2c-435"><paramref name="bytes" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-435"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c4b2c-436"><paramref name="index" /> 或 <paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-436"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="c4b2c-437">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c4b2c-437">-or-</span></span> 
 <span data-ttu-id="c4b2c-438"><paramref name="index" /> 和 <paramref name="count" /> 不表示 <paramref name="bytes" /> 中的有效范围。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-438"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="c4b2c-439">发生回退（有关详细信息，请参阅<see href="/dotnet/standard/base-types/character-encoding">采用 .NET 的字符编码</see>）</span><span class="sxs-lookup"><span data-stu-id="c4b2c-439">A fallback occurred (for more information, see <see href="/dotnet/standard/base-types/character-encoding">Character Encoding in .NET</see>)</span></span> 
<span data-ttu-id="c4b2c-440">和</span><span class="sxs-lookup"><span data-stu-id="c4b2c-440">-and-</span></span> 
 <span data-ttu-id="c4b2c-441"><see cref="P:System.Text.Encoding.DecoderFallback" /> 设置为 <see cref="T:System.Text.DecoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-441"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetDecoder" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsSingleByte">
      <MemberSignature Language="C#" Value="public override bool IsSingleByte { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSingleByte" />
      <MemberSignature Language="DocId" Value="P:System.Text.ASCIIEncoding.IsSingleByte" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSingleByte As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSingleByte { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSingleByte : bool" Usage="System.Text.ASCIIEncoding.IsSingleByte" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4b2c-442">获取一个可以指示当前编码是否使用单字节码位的值。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-442">Gets a value indicating whether the current encoding uses single-byte code points.</span></span></summary>
        <value><span data-ttu-id="c4b2c-443">此属性始终为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-443">This property is always <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4b2c-444">不要使用 <xref:System.Text.ASCIIEncoding.IsSingleByte%2A> 属性来确定用于编码操作的字节数组的大小以及用于解码操作的字符数组大小（例如，使字节数组的大小 <xref:System.Text.ASCIIEncoding.IsSingleByte%2A> \* 要编码的字符数），应为编码操作调用 <xref:System.Text.ASCIIEncoding.GetByteCount%2A> 或 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> 方法，并为解码操作调用 <xref:System.Text.ASCIIEncoding.GetCharCount%2A> 或 <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-444">Instead of using the <xref:System.Text.ASCIIEncoding.IsSingleByte%2A> property to determine the size of a byte array for encoding operations  and the size of a character array for decoding operations (for example, so that the size of the byte array is <xref:System.Text.ASCIIEncoding.IsSingleByte%2A> \* the number of characters to be encoded), you should call the <xref:System.Text.ASCIIEncoding.GetByteCount%2A> or <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method for encoding operations and the <xref:System.Text.ASCIIEncoding.GetCharCount%2A> or <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method for decoding operations.</span></span> <span data-ttu-id="c4b2c-445">在计算所需的数组大小时，这些方法会考虑 <xref:System.Text.ASCIIEncoding> 对象的替换回退策略。</span><span class="sxs-lookup"><span data-stu-id="c4b2c-445">These methods takes the <xref:System.Text.ASCIIEncoding> object's replacement fallback strategy into account when calculating the required array size.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>
