<Type Name="MetaType" FullName="System.Data.Linq.Mapping.MetaType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="335cf1f085551d8ca7ebc2a7a4335e1e9ac9b353" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89714133" /></Metadata><TypeSignature Language="C#" Value="public abstract class MetaType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MetaType extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Mapping.MetaType" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MetaType" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaType abstract" />
  <TypeSignature Language="F#" Value="type MetaType = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="eeb8c-101">表示域对象类型到数据库表列的映射。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-101">Represents the mapping of a domain object type to the columns of a database table.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MetaType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MetaType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eeb8c-102">初始化 <see cref="T:System.Data.Linq.Mapping.MetaType" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-102">Initializes a new instance of the <see cref="T:System.Data.Linq.Mapping.MetaType" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Associations">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaAssociation&gt; Associations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Linq.Mapping.MetaAssociation&gt; Associations" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.Associations" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Associations As ReadOnlyCollection(Of MetaAssociation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Linq::Mapping::MetaAssociation ^&gt; ^ Associations { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Linq::Mapping::MetaAssociation ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Associations : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaAssociation&gt;" Usage="System.Data.Linq.Mapping.MetaType.Associations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaAssociation&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eeb8c-103">在派生类中重写时，获取所有关联的枚举。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-103">When overridden in a derived class, gets an enumeration of all the associations.</span></span></summary>
        <value><span data-ttu-id="eeb8c-104">关联的集合。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-104">A collection of associations.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInstantiate">
      <MemberSignature Language="C#" Value="public abstract bool CanInstantiate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInstantiate" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.CanInstantiate" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanInstantiate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanInstantiate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanInstantiate : bool" Usage="System.Data.Linq.Mapping.MetaType.CanInstantiate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eeb8c-105">在派生类中重写时，获取是否可以将基础类型实例化为查询的结果。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-105">When overridden in a derived class, gets whether the underlying type can be instantiated as the result of a query.</span></span></summary>
        <value><span data-ttu-id="eeb8c-106">如果基础类型可以实例化为查询结果，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-106"><see langword="true" /> if the underlying type can be instantiated as the result of a query; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataMembers">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaDataMember&gt; DataMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Linq.Mapping.MetaDataMember&gt; DataMembers" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.DataMembers" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DataMembers As ReadOnlyCollection(Of MetaDataMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Linq::Mapping::MetaDataMember ^&gt; ^ DataMembers { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Linq::Mapping::MetaDataMember ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataMembers : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaDataMember&gt;" Usage="System.Data.Linq.Mapping.MetaType.DataMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaDataMember&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eeb8c-107">在派生类中重写时，获取所有数据成员（字段和属性）的枚举。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-107">When overridden in a derived class, gets an enumeration of all the data members (fields and properties).</span></span></summary>
        <value><span data-ttu-id="eeb8c-108">数据成员的集合。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-108">A collection of the data members.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DBGeneratedIdentityMember">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaDataMember DBGeneratedIdentityMember { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaDataMember DBGeneratedIdentityMember" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.DBGeneratedIdentityMember" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DBGeneratedIdentityMember As MetaDataMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaDataMember ^ DBGeneratedIdentityMember { System::Data::Linq::Mapping::MetaDataMember ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DBGeneratedIdentityMember : System.Data.Linq.Mapping.MetaDataMember" Usage="System.Data.Linq.Mapping.MetaType.DBGeneratedIdentityMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaDataMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eeb8c-109">在派生类中重写时，获取表示自动生成的标识列的成员。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-109">When overridden in a derived class, gets the member that represents the auto-generated identity column.</span></span></summary>
        <value><span data-ttu-id="eeb8c-110">表示自动生成的标识列的成员；如果没有自动生成的标识列，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-110">The member that represents the auto-generated identity column, or <see langword="null" /> if there is no auto-generated identity column.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DerivedTypes">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaType&gt; DerivedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Linq.Mapping.MetaType&gt; DerivedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.DerivedTypes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DerivedTypes As ReadOnlyCollection(Of MetaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Linq::Mapping::MetaType ^&gt; ^ DerivedTypes { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Linq::Mapping::MetaType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DerivedTypes : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaType&gt;" Usage="System.Data.Linq.Mapping.MetaType.DerivedTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eeb8c-111">在派生类中重写时，获取继承层次结构中直接派生类型的枚举。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-111">When overridden in a derived class, gets an enumeration of the immediate derived types in an inheritance hierarchy.</span></span></summary>
        <value><span data-ttu-id="eeb8c-112">元类型的枚举。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-112">An enumeration of meta-types.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Discriminator">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaDataMember Discriminator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaDataMember Discriminator" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.Discriminator" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Discriminator As MetaDataMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaDataMember ^ Discriminator { System::Data::Linq::Mapping::MetaDataMember ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Discriminator : System.Data.Linq.Mapping.MetaDataMember" Usage="System.Data.Linq.Mapping.MetaType.Discriminator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaDataMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eeb8c-113">在派生类中重写时，获取表示继承鉴别器列的成员。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-113">When overridden in a derived class, gets the member that represents the inheritance discriminator column.</span></span></summary>
        <value><span data-ttu-id="eeb8c-114">表示继承鉴别器列的成员；如果不存在继承鉴别器列，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-114">The member that represents the inheritance discriminator column, or <see langword="null" /> if there is none.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataMember">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaDataMember GetDataMember (System.Reflection.MemberInfo member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Linq.Mapping.MetaDataMember GetDataMember(class System.Reflection.MemberInfo member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaType.GetDataMember(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDataMember (member As MemberInfo) As MetaDataMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Data::Linq::Mapping::MetaDataMember ^ GetDataMember(System::Reflection::MemberInfo ^ member);" />
      <MemberSignature Language="F#" Value="abstract member GetDataMember : System.Reflection.MemberInfo -&gt; System.Data.Linq.Mapping.MetaDataMember" Usage="metaType.GetDataMember member" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaDataMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="member"><span data-ttu-id="eeb8c-115">为其查找关联的 <see cref="T:System.Data.Linq.Mapping.MetaDataMember" /> 的成员。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-115">The member for which the associated <see cref="T:System.Data.Linq.Mapping.MetaDataMember" /> is sought.</span></span></param>
        <summary><span data-ttu-id="eeb8c-116">在派生类中重写时，获取与指定成员关联的 <see cref="T:System.Data.Linq.Mapping.MetaDataMember" />。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-116">When overridden in a derived class, gets the <see cref="T:System.Data.Linq.Mapping.MetaDataMember" /> associated with the specified member.</span></span></summary>
        <returns><span data-ttu-id="eeb8c-117">如果存在与指定的成员关联的 <see cref="T:System.Data.Linq.Mapping.MetaDataMember" />，则为该 System.Data.Linq.Mapping.MetaDataMember；否则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-117">The <see cref="T:System.Data.Linq.Mapping.MetaDataMember" /> if one is associated with the specified member; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInheritanceType">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaType GetInheritanceType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Linq.Mapping.MetaType GetInheritanceType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaType.GetInheritanceType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInheritanceType (type As Type) As MetaType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Data::Linq::Mapping::MetaType ^ GetInheritanceType(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member GetInheritanceType : Type -&gt; System.Data.Linq.Mapping.MetaType" Usage="metaType.GetInheritanceType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="eeb8c-118">子类型。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-118">The subtype.</span></span></param>
        <summary><span data-ttu-id="eeb8c-119">在派生类中重写时，获取继承子类型的 <see cref="T:System.Data.Linq.Mapping.MetaType" />。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-119">When overridden in a derived class, gets the <see cref="T:System.Data.Linq.Mapping.MetaType" /> for an inheritance subtype.</span></span></summary>
        <returns><span data-ttu-id="eeb8c-120">继承子类型的 <see cref="T:System.Data.Linq.Mapping.MetaType" />。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-120">The <see cref="T:System.Data.Linq.Mapping.MetaType" /> for an inheritance subtype.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeForInheritanceCode">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaType GetTypeForInheritanceCode (object code);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Linq.Mapping.MetaType GetTypeForInheritanceCode(object code) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaType.GetTypeForInheritanceCode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTypeForInheritanceCode (code As Object) As MetaType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Data::Linq::Mapping::MetaType ^ GetTypeForInheritanceCode(System::Object ^ code);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeForInheritanceCode : obj -&gt; System.Data.Linq.Mapping.MetaType" Usage="metaType.GetTypeForInheritanceCode code" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="code"><span data-ttu-id="eeb8c-121">继承代码。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-121">The inheritance code.</span></span></param>
        <summary><span data-ttu-id="eeb8c-122">在派生类中重写时，获取与指定的继承代码关联的元类型。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-122">When overridden in a derived class, gets the meta-type associated with the specified inheritance code.</span></span></summary>
        <returns><span data-ttu-id="eeb8c-123">与指定的继承代码关联的元类型。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-123">The meta-type associated with the specified inheritance code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAnyLoadMethod">
      <MemberSignature Language="C#" Value="public abstract bool HasAnyLoadMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAnyLoadMethod" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.HasAnyLoadMethod" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property HasAnyLoadMethod As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool HasAnyLoadMethod { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAnyLoadMethod : bool" Usage="System.Data.Linq.Mapping.MetaType.HasAnyLoadMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eeb8c-124">在派生类中重写时，获取一个值，该值指示当前 <see cref="T:System.Data.Linq.Mapping.MetaType" /> 或其任何基类型是否具有 <c>OnLoaded</c> 方法。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-124">When overridden in a derived class, gets a value that indicates whether the current <see cref="T:System.Data.Linq.Mapping.MetaType" /> or any of its bases types has an <c>OnLoaded</c> method.</span></span></summary>
        <value><span data-ttu-id="eeb8c-125"><see langword="true" /> 如果元类型或任何基类型具有 <c>OnLoaded</c> 方法，则为; 否则为。否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-125"><see langword="true" /> if the meta-type or any base meta-type has an <c>OnLoaded</c> method; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAnyValidateMethod">
      <MemberSignature Language="C#" Value="public abstract bool HasAnyValidateMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAnyValidateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.HasAnyValidateMethod" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property HasAnyValidateMethod As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool HasAnyValidateMethod { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAnyValidateMethod : bool" Usage="System.Data.Linq.Mapping.MetaType.HasAnyValidateMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eeb8c-126">在派生类中重写时，获取一个值，该值指示 <see cref="T:System.Data.Linq.Mapping.MetaType" /> 或其任何基类型是否具有 <c>OnValidate</c> 方法。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-126">When overridden in a derived class, gets a value that indicates whether the <see cref="T:System.Data.Linq.Mapping.MetaType" /> or any of its bases types has an <c>OnValidate</c> method.</span></span></summary>
        <value><span data-ttu-id="eeb8c-127"><see langword="true" /> 如果元类型或任何基类型具有 <c>OnValidate</c> 方法，则为; 否则为。否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-127"><see langword="true" /> if the meta-type or any base meta-type has an <c>OnValidate</c> method; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasInheritance">
      <MemberSignature Language="C#" Value="public abstract bool HasInheritance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasInheritance" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.HasInheritance" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property HasInheritance As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool HasInheritance { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasInheritance : bool" Usage="System.Data.Linq.Mapping.MetaType.HasInheritance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eeb8c-128">在派生类中重写时，获取一个值，该值指示该类型是否是已映射继承层次结构的一部分。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-128">When overridden in a derived class, gets a value indicating whether the type is part of a mapped inheritance hierarchy.</span></span></summary>
        <value><span data-ttu-id="eeb8c-129">如果该类型是已映射继承层次结构的一部分，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-129"><see langword="true" /> if the type is part of a mapped inheritance hierarchy; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasInheritanceCode">
      <MemberSignature Language="C#" Value="public abstract bool HasInheritanceCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasInheritanceCode" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.HasInheritanceCode" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property HasInheritanceCode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool HasInheritanceCode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasInheritanceCode : bool" Usage="System.Data.Linq.Mapping.MetaType.HasInheritanceCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eeb8c-130">在派生类中重写时，获取一个值，该值指示此类型是否定义继承代码。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-130">When overridden in a derived class, gets a value indicating whether this type defines an inheritance code.</span></span></summary>
        <value><span data-ttu-id="eeb8c-131">如果此类型定义继承代码，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-131"><see langword="true" /> if this type defines an inheritance code; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasUpdateCheck">
      <MemberSignature Language="C#" Value="public abstract bool HasUpdateCheck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasUpdateCheck" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.HasUpdateCheck" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property HasUpdateCheck As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool HasUpdateCheck { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasUpdateCheck : bool" Usage="System.Data.Linq.Mapping.MetaType.HasUpdateCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eeb8c-132">在派生类中重写时，获取一个值，该值指示该类型是否具有任何可能需要进行开放式并发冲突测试的持久性成员。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-132">When overridden in a derived class, gets a value indicating whether the type has any persistent member that may require a test for optimistic concurrency conflicts.</span></span></summary>
        <value><span data-ttu-id="eeb8c-133">如果该类型包含具有 <see cref="T:System.Data.Linq.Mapping.UpdateCheck" /> 以外的 <see cref="F:System.Data.Linq.Mapping.UpdateCheck.Never" /> 策略的任何持久性成员，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-133"><see langword="true" /> if the type has any persistent member with an <see cref="T:System.Data.Linq.Mapping.UpdateCheck" /> policy other than <see cref="F:System.Data.Linq.Mapping.UpdateCheck.Never" />; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IdentityMembers">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaDataMember&gt; IdentityMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Linq.Mapping.MetaDataMember&gt; IdentityMembers" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.IdentityMembers" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IdentityMembers As ReadOnlyCollection(Of MetaDataMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Linq::Mapping::MetaDataMember ^&gt; ^ IdentityMembers { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Linq::Mapping::MetaDataMember ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IdentityMembers : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaDataMember&gt;" Usage="System.Data.Linq.Mapping.MetaType.IdentityMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaDataMember&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eeb8c-134">在派生类中重写时，获取所有数据成员（定义该类型的唯一标识）的枚举。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-134">When overridden in a derived class, gets an enumeration of all the data members that define the unique identity of the type.</span></span></summary>
        <value><span data-ttu-id="eeb8c-135">成员的枚举，这些成员定义类型的唯一标识。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-135">An enumeration of members that define the unique identity of the type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InheritanceBase">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaType InheritanceBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaType InheritanceBase" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.InheritanceBase" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property InheritanceBase As MetaType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaType ^ InheritanceBase { System::Data::Linq::Mapping::MetaType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InheritanceBase : System.Data.Linq.Mapping.MetaType" Usage="System.Data.Linq.Mapping.MetaType.InheritanceBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eeb8c-136">在派生类中重写时，获取继承层次结构中的基元类型。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-136">When overridden in a derived class, gets the base meta-type in the inheritance hierarchy.</span></span></summary>
        <value><span data-ttu-id="eeb8c-137">当前继承层次结构的基元类型。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-137">The base meta-type for the current inheritance hierarchy.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InheritanceCode">
      <MemberSignature Language="C#" Value="public abstract object InheritanceCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object InheritanceCode" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.InheritanceCode" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property InheritanceCode As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ InheritanceCode { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InheritanceCode : obj" Usage="System.Data.Linq.Mapping.MetaType.InheritanceCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eeb8c-138">在派生类中重写时，获取一个值，该值指示此类型是否定义继承代码。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-138">When overridden in a derived class, gets a value indicating whether this type defines an inheritance code.</span></span></summary>
        <value><span data-ttu-id="eeb8c-139">如果此类型定义继承代码，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-139"><see langword="true" /> if this type defines an inheritance code; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InheritanceDefault">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaType InheritanceDefault { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaType InheritanceDefault" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.InheritanceDefault" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property InheritanceDefault As MetaType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaType ^ InheritanceDefault { System::Data::Linq::Mapping::MetaType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InheritanceDefault : System.Data.Linq.Mapping.MetaType" Usage="System.Data.Linq.Mapping.MetaType.InheritanceDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eeb8c-140">在派生类中重写时，获取一个值，该值指示此类型是否用作继承层次结构的默认值。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-140">When overridden in a derived class, gets a value indicating whether this type is used as the default of an inheritance hierarchy.</span></span></summary>
        <value><span data-ttu-id="eeb8c-141">继承映射中默认类型的元数据。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-141">The metadata for the default type in the inheritance mapping.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InheritanceRoot">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaType InheritanceRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaType InheritanceRoot" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.InheritanceRoot" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property InheritanceRoot As MetaType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaType ^ InheritanceRoot { System::Data::Linq::Mapping::MetaType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InheritanceRoot : System.Data.Linq.Mapping.MetaType" Usage="System.Data.Linq.Mapping.MetaType.InheritanceRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eeb8c-142">在派生类中重写时，获取继承层次结构的根类型。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-142">When overridden in a derived class, gets the root type of the inheritance hierarchy.</span></span></summary>
        <value><span data-ttu-id="eeb8c-143">根类型。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-143">The root type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InheritanceTypes">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaType&gt; InheritanceTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Linq.Mapping.MetaType&gt; InheritanceTypes" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.InheritanceTypes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property InheritanceTypes As ReadOnlyCollection(Of MetaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Linq::Mapping::MetaType ^&gt; ^ InheritanceTypes { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Linq::Mapping::MetaType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InheritanceTypes : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaType&gt;" Usage="System.Data.Linq.Mapping.MetaType.InheritanceTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eeb8c-144">在派生类中重写时，获取由继承层次结构定义的所有类型的集合。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-144">When overridden in a derived class, gets a collection of all types that are defined by an inheritance hierarchy.</span></span></summary>
        <value><span data-ttu-id="eeb8c-145">当前继承层次结构中元类型的集合。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-145">A collection of meta-types in the current inheritance hierarchy.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEntity">
      <MemberSignature Language="C#" Value="public abstract bool IsEntity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEntity" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.IsEntity" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsEntity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsEntity { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEntity : bool" Usage="System.Data.Linq.Mapping.MetaType.IsEntity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eeb8c-146">在派生类中重写时，获取一个值，该值指示 <see cref="T:System.Data.Linq.Mapping.MetaType" /> 是否为实体类型。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-146">When overridden in a derived class, gets a value indicating whether the <see cref="T:System.Data.Linq.Mapping.MetaType" /> is an entity type.</span></span></summary>
        <value><span data-ttu-id="eeb8c-147">如果 <see cref="T:System.Data.Linq.Mapping.MetaType" /> 是实体类型，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-147"><see langword="true" /> if the <see cref="T:System.Data.Linq.Mapping.MetaType" /> is an entity type; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInheritanceDefault">
      <MemberSignature Language="C#" Value="public abstract bool IsInheritanceDefault { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInheritanceDefault" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.IsInheritanceDefault" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsInheritanceDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsInheritanceDefault { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInheritanceDefault : bool" Usage="System.Data.Linq.Mapping.MetaType.IsInheritanceDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eeb8c-148">在派生类中重写时，获取一个值，该值指示此类型是否用作继承层次结构的默认值。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-148">When overridden in a derived class, gets a value indicating whether this type is used as the default of an inheritance hierarchy.</span></span></summary>
        <value><span data-ttu-id="eeb8c-149">如果将此类型用作继承层次结构的默认值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-149"><see langword="true" /> if this type is used as the default of an inheritance hierarchy; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaModel Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaModel Model" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.Model" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Model As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaModel ^ Model { System::Data::Linq::Mapping::MetaModel ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Model : System.Data.Linq.Mapping.MetaModel" Usage="System.Data.Linq.Mapping.MetaType.Model" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eeb8c-150">在派生类中重写时，获取包含此 <see cref="T:System.Data.Linq.Mapping.MetaType" /> 的 <see cref="T:System.Data.Linq.Mapping.MetaModel" />。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-150">When overridden in a derived class, gets the <see cref="T:System.Data.Linq.Mapping.MetaModel" /> that contains this <see cref="T:System.Data.Linq.Mapping.MetaType" />.</span></span></summary>
        <value><span data-ttu-id="eeb8c-151">包含元模型。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-151">The containing meta-model.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Data.Linq.Mapping.MetaType.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eeb8c-152">在派生类中重写时，获取 <see cref="T:System.Data.Linq.Mapping.MetaType" /> 的名称。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-152">When overridden in a derived class, gets the name of the <see cref="T:System.Data.Linq.Mapping.MetaType" />.</span></span></summary>
        <value><span data-ttu-id="eeb8c-153">当前元类型的名称。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-153">The name of the current meta-type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb8c-154">此名称与 (CLR) 类型的公共语言运行时的名称相同。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-154">This name is the same as the name of the common language runtime (CLR) type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLoadedMethod">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MethodInfo OnLoadedMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo OnLoadedMethod" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.OnLoadedMethod" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property OnLoadedMethod As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Reflection::MethodInfo ^ OnLoadedMethod { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OnLoadedMethod : System.Reflection.MethodInfo" Usage="System.Data.Linq.Mapping.MetaType.OnLoadedMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eeb8c-155">在派生类中重写时，获取有关此元类型包含的 <c>OnLoaded</c> 方法的信息。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-155">When overridden in a derived class, gets information about the <c>OnLoaded</c> method contained by this meta-type.</span></span></summary>
        <value><span data-ttu-id="eeb8c-156">此元类型的 <c>OnLoaded</c> 方法说明。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-156">A description of the <c>OnLoaded</c> method for this meta-type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnValidateMethod">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MethodInfo OnValidateMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo OnValidateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.OnValidateMethod" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property OnValidateMethod As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Reflection::MethodInfo ^ OnValidateMethod { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OnValidateMethod : System.Reflection.MethodInfo" Usage="System.Data.Linq.Mapping.MetaType.OnValidateMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eeb8c-157">在派生类中重写时，获取有关此元类型包含的 <c>OnValidate</c> 方法的信息。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-157">When overridden in a derived class, gets information about the <c>OnValidate</c> method contained by this meta-type.</span></span></summary>
        <value><span data-ttu-id="eeb8c-158">此元类型的 <c>OnValidate</c> 方法说明。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-158">A description of the <c>OnValidate</c> method for this meta-type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistentDataMembers">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaDataMember&gt; PersistentDataMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Linq.Mapping.MetaDataMember&gt; PersistentDataMembers" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.PersistentDataMembers" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PersistentDataMembers As ReadOnlyCollection(Of MetaDataMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Linq::Mapping::MetaDataMember ^&gt; ^ PersistentDataMembers { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Linq::Mapping::MetaDataMember ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PersistentDataMembers : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaDataMember&gt;" Usage="System.Data.Linq.Mapping.MetaType.PersistentDataMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaDataMember&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eeb8c-159">在派生类中重写时，获取所有持久数据成员的集合。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-159">When overridden in a derived class, gets a collection of all the persistent data members.</span></span></summary>
        <value><span data-ttu-id="eeb8c-160">当前类型中所有元数据成员的集合。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-160">A collection of all the meta-data members in the current type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeb8c-161">持久性数据成员是指映射到数据库列的字段和属性。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-161">Persistent data members are those fields and properties that are mapped to database columns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaTable Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaTable Table" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.Table" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Table As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaTable ^ Table { System::Data::Linq::Mapping::MetaTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Table : System.Data.Linq.Mapping.MetaTable" Usage="System.Data.Linq.Mapping.MetaType.Table" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eeb8c-162">在派生类中重写时，获取使用此 <see cref="T:System.Data.Linq.Mapping.MetaType" /> 进行行定义的 <see cref="T:System.Data.Linq.Mapping.MetaTable" />。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-162">When overridden in a derived class, gets the <see cref="T:System.Data.Linq.Mapping.MetaTable" /> that uses this <see cref="T:System.Data.Linq.Mapping.MetaType" /> for row definition.</span></span></summary>
        <value><span data-ttu-id="eeb8c-163">一个使用当前元类型定义行的元表。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-163">A meta-table that uses the current meta-type for its row definition.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public abstract Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.Type" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ Type { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type" Usage="System.Data.Linq.Mapping.MetaType.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eeb8c-164">在派生类中重写时，获取基础公共语言运行时 (CLR) 类型。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-164">When overridden in a derived class, gets the underlying common language runtime (CLR) type.</span></span></summary>
        <value><span data-ttu-id="eeb8c-165">关联的 CLR 类型。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-165">The associated CLR type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VersionMember">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaDataMember VersionMember { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaDataMember VersionMember" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaType.VersionMember" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property VersionMember As MetaDataMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaDataMember ^ VersionMember { System::Data::Linq::Mapping::MetaDataMember ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VersionMember : System.Data.Linq.Mapping.MetaDataMember" Usage="System.Data.Linq.Mapping.MetaType.VersionMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaDataMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eeb8c-166">在派生类中重写时，获取此 <see cref="T:System.Data.Linq.Mapping.MetaType" /> 的行版本或时间戳列。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-166">When overridden in a derived class, gets a row-version or timestamp column for this <see cref="T:System.Data.Linq.Mapping.MetaType" />.</span></span></summary>
        <value><span data-ttu-id="eeb8c-167">表示此元类型的行版本或时间戳列的元数据成员；如果不存在这样的元数据成员，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eeb8c-167">The meta-data member that represents the row-version or timestamp column for this meta-type, or <see langword="null" /> if there is none.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
