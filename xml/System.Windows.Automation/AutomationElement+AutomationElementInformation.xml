<Type Name="AutomationElement+AutomationElementInformation" FullName="System.Windows.Automation.AutomationElement+AutomationElementInformation">
  <Metadata><Meta Name="ms.openlocfilehash" Value="430602ee38b54c1467526968da654ee7efbf2d8d" /><Meta Name="ms.sourcegitcommit" Value="33529b5cc32683b91d3422992fb4dc422f85782b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/17/2020" /><Meta Name="ms.locfileid" Value="88266263" /></Metadata><TypeSignature Language="C#" Value="public struct AutomationElement.AutomationElementInformation" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit AutomationElement/AutomationElementInformation extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.AutomationElement.AutomationElementInformation" />
  <TypeSignature Language="VB.NET" Value="Public Structure AutomationElement.AutomationElementInformation" />
  <TypeSignature Language="C++ CLI" Value="public: value class AutomationElement::AutomationElementInformation" />
  <TypeSignature Language="F#" Value="type AutomationElement.AutomationElementInformation = struct" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>包含由 <see cref="P:System.Windows.Automation.AutomationElement.Cached" /> 或 <see cref="P:System.Windows.Automation.AutomationElement.Current" /> 属性使用的属性访问器。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以直接从和访问属性 <xref:System.Windows.Automation.AutomationElement.Cached%2A> ; 无 <xref:System.Windows.Automation.AutomationElement.Current%2A> 需检索 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation> 结构本身。  
  
 此结构中的属性也可以使用 <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A> 和 <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A> （使用中的相应标识符）来检索 <xref:System.Windows.Automation.AutomationElement> 。 例如，属性由 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AcceleratorKey%2A?displayProperty=nameWithType> <xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty?displayProperty=nameWithType> 字段标识。 有关各个属性的详细信息可在这些标识符的参考页上找到;请参阅每个参考主题的 "备注" 部分中的链接。  
  
   
  
## Examples  
 下面的示例演示如何 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name%2A> 从此结构中检索属性。  
  
 [!code-csharp[UIAClient_snip#106](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#106)]
 [!code-vb[UIAClient_snip#106](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#106)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-overview">UI 自动化属性概述</related>
    <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-properties-for-clients">客户端的 UI 自动化属性</related>
    <related type="Article" href="/dotnet/framework/ui-automation/get-ui-automation-element-properties">获取 UI 自动化元素的属性</related>
  </Docs>
  <Members>
    <Member MemberName="AcceleratorKey">
      <MemberSignature Language="C#" Value="public string AcceleratorKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AcceleratorKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AcceleratorKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcceleratorKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AcceleratorKey { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AcceleratorKey : string" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.AcceleratorKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个包含元素快捷键组合的字符串。</summary>
        <value>用于调用与元素关联的操作的键组合序列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 加速键组合调用操作。 例如，CTRL + O 通常用于调用 " **文件打开** " 对话框。 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 具有快捷键属性集的元素始终实现 <xref:System.Windows.Automation.InvokePattern> 类。  
  
 有关详细信息，请参阅 <xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessKey">
      <MemberSignature Language="C#" Value="public string AccessKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AccessKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AccessKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AccessKey { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessKey : string" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.AccessKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个包含元素的访问键字符的字符串。</summary>
        <value>与一个元素关联的、用于激活该元素的字符。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 访问键是控件、菜单项或控件的标签（如激活附加菜单功能的按钮）的文本中的字符。 例如，字母 "O" 通常用于调用 "**文件**" 菜单中的 "**打开**文件" 通用对话框。  [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 设置了访问键属性的元素始终实现 <xref:System.Windows.Automation.InvokePattern> 类。  
  
 有关详细信息，请参阅 <xref:System.Windows.Automation.AutomationElement.AccessKeyProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomationId">
      <MemberSignature Language="C#" Value="public string AutomationId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AutomationId" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AutomationId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AutomationId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AutomationId : string" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个字符串，其中包含元素的 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)]。</summary>
        <value>元素的 ID，该元素在其容器内的同级中是唯一的。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当它可用时， <xref:System.Windows.Automation.AutomationElement.AutomationIdProperty> 元素的在应用程序的任何实例中都应始终相同，而不考虑本地语言。 此值在同级元素中应该是唯一的，但在整个桌面中不必是唯一的。 例如，一个应用程序的多个实例或 Microsoft Windows 资源管理器中的多个文件夹视图可能包含具有相同的元素 <xref:System.Windows.Automation.AutomationElement.AutomationIdProperty> ，例如 "SystemMenuBar"。  
  
 虽然 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> 对于更好的可测试性，始终建议使用，此属性不是必需的。 在支持它的情况下，可 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> 用于创建运行的测试自动化脚本，而不考虑 UI 语言。 客户端不应与 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> 其他应用程序公开的有关的假设。 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>不一定一定要跨不同版本的应用程序或不同版本的应用程序进行稳定。  
  
 有关详细信息，请参阅 <xref:System.Windows.Automation.AutomationElement.AutomationIdProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BoundingRectangle">
      <MemberSignature Language="C#" Value="public System.Windows.Rect BoundingRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Rect BoundingRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.BoundingRectangle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BoundingRectangle As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Rect BoundingRectangle { System::Windows::Rect get(); };" />
      <MemberSignature Language="F#" Value="member this.BoundingRectangle : System.Windows.Rect" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.BoundingRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取完全包围元素的矩形的坐标。</summary>
        <value>包围矩形的点坐标。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返回的矩形可以包含不可单击的点。 当 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 项具有不规则的形状或可单击的区域时，或者被其他元素遮盖时，可能发生此情况的实例 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.AutomationElement.BoundingRectangleProperty" />
      </Docs>
    </Member>
    <Member MemberName="ClassName">
      <MemberSignature Language="C#" Value="public string ClassName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClassName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ClassName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClassName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClassName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClassName : string" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.ClassName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个字符串，其中包含由控件开发人员分配的元素的类名称。</summary>
        <value>由控件开发人员分配的类名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性的值是依赖实现的。 属性在测试环境中很有用。  
  
 有关详细信息，请参阅 <xref:System.Windows.Automation.AutomationElement.ClassNameProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlType">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.ControlType ControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.ControlType ControlType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlType As ControlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::ControlType ^ ControlType { System::Windows::Automation::ControlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ControlType : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.ControlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取元素的 <see cref="T:System.Windows.Automation.ControlType" />。</summary>
        <value>此元素的交互模型。 默认值为 <see cref="F:System.Windows.Automation.ControlType.Custom" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 控件类型描述任意元素的已知交互模型， [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 而无需依赖于本地化的控件类型或复杂逻辑规则的组合。  
  
 此属性在运行时可以更改的唯一情况是用于支持的控件 <xref:System.Windows.Automation.MultipleViewPattern> 。 例如 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] ，ListView 控件（可以从更改 <xref:System.Windows.Automation.ControlType.DataGrid> 为 <xref:System.Windows.Automation.ControlType.List> ），具体取决于当前视图。  
  
 有关详细信息，请参阅 <xref:System.Windows.Automation.AutomationElement.ControlTypeProperty>。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-control-types">UI 自动化控件类型</related>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-control-types-overview">UI 自动化控件类型概述</related>
      </Docs>
    </Member>
    <Member MemberName="FrameworkId">
      <MemberSignature Language="C#" Value="public string FrameworkId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FrameworkId" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.FrameworkId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FrameworkId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FrameworkId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FrameworkId : string" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.FrameworkId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取基础 UI 框架的名称。</summary>
        <value>UI 框架的名称，例如“Win32”、“WinForm”或“DirectUI”。 默认值为空字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 属性的返回值的类型为 <xref:System.String> 。 默认值为空字符串。  
  
 此属性使应用程序能够将特殊案例应用于整个 UI 框架。  
  
 有关详细信息，请参阅 <xref:System.Windows.Automation.AutomationElement.FrameworkIdProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasKeyboardFocus">
      <MemberSignature Language="C#" Value="public bool HasKeyboardFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasKeyboardFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.HasKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasKeyboardFocus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasKeyboardFocus { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasKeyboardFocus : bool" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.HasKeyboardFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示此元素是否具有键盘焦点。</summary>
        <value>如果此元素具有键盘焦点，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果容器中的某个元素具有焦点， <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HasKeyboardFocus%2A> 则对于容器元素也是如此。  
  
 有关详细信息，请参阅 <xref:System.Windows.Automation.AutomationElement.HasKeyboardFocusProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpText">
      <MemberSignature Language="C#" Value="public string HelpText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HelpText { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HelpText : string" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与元素关联的帮助文本。</summary>
        <value>元素的工具提示帮助文本。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关详细信息，请参阅 <xref:System.Windows.Automation.AutomationElement.HelpTextProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsContentElement">
      <MemberSignature Language="C#" Value="public bool IsContentElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsContentElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsContentElement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsContentElement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsContentElement { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsContentElement : bool" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.IsContentElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指定元素是否为内容元素。</summary>
        <value>如果元素为内容元素，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Content 元素包含向用户显示的数据。 内容元素的示例包括列表框中的项或对话框上的按钮。 非内容元素（也称为外围元素）通常用于操作复合控件中的内容;例如，下拉控件上的按钮。  
  
 有关详细信息，请参阅 <xref:System.Windows.Automation.AutomationElement.IsContentElementProperty>。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-tree-overview">UI 自动化树概述</related>
      </Docs>
    </Member>
    <Member MemberName="IsControlElement">
      <MemberSignature Language="C#" Value="public bool IsControlElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsControlElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsControlElement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsControlElement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsControlElement { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsControlElement : bool" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.IsControlElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示元素是否以控件的形式查看。</summary>
        <value>如果元素以控件的形式查看，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关详细信息，请参阅 <xref:System.Windows.Automation.AutomationElement.IsControlElementProperty>。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-tree-overview">UI 自动化树概述</related>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示是否已启用由 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]元素引用的 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 项。</summary>
        <value>如果已启用控件，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled%2A>由于交互，属性的值可能会更改 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 。 <xref:System.Windows.Automation.AutomationElement.GetUpdatedCache%2A>如果在 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled%2A> 发出缓存请求后属性的值可能已发生更改，则应通过调用来获取更新的缓存。  
  
 有关详细信息，请参阅 <xref:System.Windows.Automation.AutomationElement.IsEnabledProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusable">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocusable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocusable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsKeyboardFocusable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocusable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusable : bool" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.IsKeyboardFocusable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]元素是否可接受键盘焦点。</summary>
        <value>如果元素可接收键盘焦点，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关详细信息，请参阅 <xref:System.Windows.Automation.AutomationElement.IsKeyboardFocusableProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOffscreen">
      <MemberSignature Language="C#" Value="public bool IsOffscreen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOffscreen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOffscreen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOffscreen { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOffscreen : bool" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]元素在屏幕上是否可见。</summary>
        <value>如果控件不可见，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一个布尔值，该值指示元素是否完全滚动 (例如，列表框中的项在容器对象的视口之外) 或折叠 (例如，树视图中的项、菜单或最小化窗口) 超出视图状态。  
  
 如果元素具有可使其成为焦点的可单击点，则即使元素的某个部分处于关闭屏幕，也被视为在屏幕上。  
  
 属性的值不受其他窗口的封闭或元素在特定监视器上是否可见的影响。  
  
 如果 IsOffscreen 是 `true,` 从视图中滚动或折叠的元素，但仍是 UI 的最终用户感觉的一部分，则可以通过简单的操作（如滚动或单击下拉控件）返回到视图中。  
  
 如果该元素是最终用户根本不感知或被称为 "以编程方式隐藏" 的元素 (例如，已消除但应用程序) 缓存下划线对象的对话框，则应将其从元素树中删除，而不是将 IsOffscreen 的值设置为 `true` 。  
  
 如果容器的值为 `true` ，则它也 `true` 适用于容器元素的后代。  
  
 有关详细信息，请参阅 <xref:System.Windows.Automation.AutomationElement.IsOffscreenProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPassword">
      <MemberSignature Language="C#" Value="public bool IsPassword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPassword" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsPassword" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPassword As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPassword { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPassword : bool" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.IsPassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]元素是否包含受保护的内容。</summary>
        <value>如果元素包含受保护的内容，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性使应用程序（如屏幕阅读器）能够确定是否应大声朗读控件的文本内容。  
  
 有关详细信息，请参阅 <xref:System.Windows.Automation.AutomationElement.IsPasswordProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRequiredForForm">
      <MemberSignature Language="C#" Value="public bool IsRequiredForForm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRequiredForForm" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsRequiredForForm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRequiredForForm As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRequiredForForm { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRequiredForForm : bool" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.IsRequiredForForm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示是否需要在窗体上填充 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]元素。</summary>
        <value>如果需要填充元素，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关详细信息，请参阅 <xref:System.Windows.Automation.AutomationElement.IsRequiredForFormProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemStatus">
      <MemberSignature Language="C#" Value="public string ItemStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemStatus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemStatus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemStatus As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ItemStatus { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemStatus : string" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取元素内某一项的状态说明。</summary>
        <value>状态的说明。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性使客户端能够确定某个元素是否传达有关项的状态。 例如，与邮件应用程序中的联系人关联的项目可能是 "忙" 或 "已连接"。  
  
 有关详细信息，请参阅 <xref:System.Windows.Automation.AutomationElement.ItemStatusProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public string ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ItemType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemType : string" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个项的类型说明。</summary>
        <value>一个描述项的本地化字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性用于获取有关列表、树视图或数据网格中的项的信息。 例如，文件目录视图中的项可以是 "文档文件" 或 "文件夹"。  
  
 有关详细信息，请参阅 <xref:System.Windows.Automation.AutomationElement.ItemTypeProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LabeledBy">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement LabeledBy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.AutomationElement LabeledBy" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.LabeledBy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LabeledBy As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationElement ^ LabeledBy { System::Windows::Automation::AutomationElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LabeledBy : System.Windows.Automation.AutomationElement" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.LabeledBy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取包含此元素的文本标签的元素。</summary>
        <value>作为此元素的标签的元素。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性可用于检索组合框的静态文本标签（例如）。  
  
 有关详细信息，请参阅 <xref:System.Windows.Automation.AutomationElement.LabeledByProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalizedControlType">
      <MemberSignature Language="C#" Value="public string LocalizedControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalizedControlType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.LocalizedControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalizedControlType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LocalizedControlType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalizedControlType : string" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.LocalizedControlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取控件类型的说明。</summary>
        <value>控件类型（如“button”）的本地化说明。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关详细信息，请参阅 <xref:System.Windows.Automation.AutomationElement.LocalizedControlTypeProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取元素的名称。</summary>
        <value>[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]元素的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]当 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> 元素上不支持属性时，可使用元素名称在元素树中查找元素。  
  
 有关详细信息，请参阅 <xref:System.Windows.Automation.AutomationElement.NameProperty>。  
  
   
  
## Examples  
 下面的示例演示如何 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name%2A> 检索属性。  
  
 [!code-csharp[UIAClient_snip#106](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#106)]
 [!code-vb[UIAClient_snip#106](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#106)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NativeWindowHandle">
      <MemberSignature Language="C#" Value="public int NativeWindowHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NativeWindowHandle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.NativeWindowHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NativeWindowHandle As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NativeWindowHandle { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NativeWindowHandle : int" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.NativeWindowHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取元素窗口的句柄。</summary>
        <value>窗口的句柄（如果存在）；否则为 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关详细信息，请参阅 <xref:System.Windows.Automation.AutomationElement.NativeWindowHandleProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.OrientationType Orientation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.OrientationType Orientation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Orientation As OrientationType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::OrientationType Orientation { System::Windows::Automation::OrientationType get(); };" />
      <MemberSignature Language="F#" Value="member this.Orientation : System.Windows.Automation.OrientationType" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.Orientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.OrientationType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取控件的方向。</summary>
        <value>方向。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 控件（如滚动条和滑块）支持此属性，这些控件可以具有垂直或水平方向。  
  
 有关详细信息，请参阅 <xref:System.Windows.Automation.AutomationElement.OrientationProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessId">
      <MemberSignature Language="C#" Value="public int ProcessId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProcessId" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ProcessId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProcessId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProcessId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ProcessId : int" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.ProcessId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此元素的进程 [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)]。</summary>
        <value>承载元素的进程的 ID。 此属性的默认值为 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此过程 [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)] 由操作系统分配。 可在任务管理器的 "**进程**" 选项卡的 " **PID** " 列中查看。  
  
 有关详细信息，请参阅 <xref:System.Windows.Automation.AutomationElement.ProcessIdProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
