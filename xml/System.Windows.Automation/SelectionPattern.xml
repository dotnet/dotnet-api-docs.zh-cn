<Type Name="SelectionPattern" FullName="System.Windows.Automation.SelectionPattern">
  <Metadata><Meta Name="ms.openlocfilehash" Value="45b48ee4b4689fb12a548618ce3d5df502c32acf" /><Meta Name="ms.sourcegitcommit" Value="80274aaa1f2e220209486886b5cd74a54203d795" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/03/2020" /><Meta Name="ms.locfileid" Value="89415678" /></Metadata><TypeSignature Language="C#" Value="public class SelectionPattern : System.Windows.Automation.BasePattern" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SelectionPattern extends System.Windows.Automation.BasePattern" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.SelectionPattern" />
  <TypeSignature Language="VB.NET" Value="Public Class SelectionPattern&#xA;Inherits BasePattern" />
  <TypeSignature Language="C++ CLI" Value="public ref class SelectionPattern : System::Windows::Automation::BasePattern" />
  <TypeSignature Language="F#" Value="type SelectionPattern = class&#xA;    inherit BasePattern" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Automation.BasePattern</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示一个控件，该控件充当可选子项集合的容器。 此元素的子级支持 <see cref="T:System.Windows.Automation.SelectionItemPattern" />。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关可以实现此控件模式的控件的示例，请参阅 [UI 自动化客户端的控件模式映射](/dotnet/framework/ui-automation/control-pattern-mapping-for-ui-automation-clients) 。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.Provider.ISelectionProvider" />
    <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-control-patterns-overview">UI 自动化控件模式概述</related>
    <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-control-patterns-for-clients">客户端的 UI 自动化控件模式</related>
    <related type="Article" href="/dotnet/framework/ui-automation/implementing-the-ui-automation-selection-control-pattern">实现 UI 自动化 Selection 控件模式</related>
  </Docs>
  <Members>
    <Member MemberName="Cached">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.SelectionPattern.SelectionPatternInformation Cached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.SelectionPattern/SelectionPatternInformation Cached" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.SelectionPattern.Cached" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cached As SelectionPattern.SelectionPatternInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::SelectionPattern::SelectionPatternInformation Cached { System::Windows::Automation::SelectionPattern::SelectionPatternInformation get(); };" />
      <MemberSignature Language="F#" Value="member this.Cached : System.Windows.Automation.SelectionPattern.SelectionPatternInformation" Usage="System.Windows.Automation.SelectionPattern.Cached" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.SelectionPattern+SelectionPatternInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此 <see cref="T:System.Windows.Automation.SelectionPattern" /> 中已缓存的 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 属性值。</summary>
        <value>一个结构，它包含控件模式中已缓存的 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 属性值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 已缓存的属性值之前必须使用来请求 <xref:System.Windows.Automation.CacheRequest> 。 使用 <xref:System.Windows.Automation.SelectionPattern.Current%2A> 获取属性的当前值。  
  
 有关可用属性及其用法的信息，请参阅 <xref:System.Windows.Automation.SelectionPattern.SelectionPatternInformation> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">请求的属性不在缓存中。</exception>
      </Docs>
    </Member>
    <Member MemberName="CanSelectMultipleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty CanSelectMultipleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty CanSelectMultipleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.SelectionPattern.CanSelectMultipleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CanSelectMultipleProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ CanSelectMultipleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CanSelectMultipleProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.SelectionPattern.CanSelectMultipleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Automation.SelectionPattern.SelectionPatternInformation.CanSelectMultiple" /> 属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此标识符由 UI 自动化客户端应用程序使用。 UI 自动化提供程序应在中使用等效字段 <xref:System.Windows.Automation.SelectionPatternIdentifiers> 。  
  
   
  
## Examples  
 在下面的示例中，将一个根元素传递到一个函数，该函数返回元素的集合， [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 这些元素是根的后代并且满足一组属性条件。  
  
 [!code-csharp[UIASelectionPattern_snip#100](~/samples/snippets/csharp/VS_Snippets_Wpf/UIASelectionPattern_snip/CSharp/UIASelectionPattern_snippets.cs#100)]
 [!code-vb[UIASelectionPattern_snip#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIASelectionPattern_snip/VisualBasic/UIASelectionPattern_snippets.vb#100)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.SelectionPattern.SelectionPatternInformation Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.SelectionPattern/SelectionPatternInformation Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.SelectionPattern.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As SelectionPattern.SelectionPatternInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::SelectionPattern::SelectionPatternInformation Current { System::Windows::Automation::SelectionPattern::SelectionPatternInformation get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Windows.Automation.SelectionPattern.SelectionPatternInformation" Usage="System.Windows.Automation.SelectionPattern.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.SelectionPattern+SelectionPatternInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 的当前 <see cref="T:System.Windows.Automation.SelectionPattern" />属性值。</summary>
        <value>一个结构，它包含此控件模式的当前 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 属性值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此模式必须来自 <xref:System.Windows.Automation.AutomationElement> 具有引用的， <xref:System.Windows.Automation.AutomationElementMode.Full> 才能获取当前值。 如果 <xref:System.Windows.Automation.AutomationElement> 是使用获取的 <xref:System.Windows.Automation.AutomationElementMode.None> ，则它只包含缓存的数据，并且尝试获取任何属性的当前值会引发异常。 使用 <xref:System.Windows.Automation.SelectionPattern.Cached%2A> 获取以前使用指定的属性的已缓存值 <xref:System.Windows.Automation.CacheRequest> 。  
  
 有关可用属性及其用法的信息，请参阅 <xref:System.Windows.Automation.SelectionPattern.SelectionPatternInformation> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidatedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent InvalidatedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent InvalidatedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.SelectionPattern.InvalidatedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InvalidatedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ InvalidatedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable InvalidatedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.SelectionPattern.InvalidatedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识在容器中的选项发生重大更改并需要发送多于 <see cref="F:System.Windows.Automation.Provider.AutomationInteropProvider.InvalidateLimit" /> 常量所允许的添加和删除事件时引发的事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果容器中的选择发生了重大更改，并需要发送更多的添加和移除事件而不是常量所允许的事件，则会引发无效事件 <xref:System.Windows.Automation.Provider.AutomationInteropProvider.InvalidateLimit> 。  
  
 此标识符由 UI 自动化客户端应用程序使用。 UI 自动化提供程序应在中使用等效字段 <xref:System.Windows.Automation.SelectionPatternIdentifiers> 。  
  
   
  
## Examples  
 在下面的示例中，为声明了事件侦听器 <xref:System.Windows.Automation.SelectionPattern.InvalidatedEvent> 。  
  
 [!code-csharp[UIASelectionPattern_snip#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIASelectionPattern_snip/CSharp/UIASelectionPattern_snippets.cs#103)]
 [!code-vb[UIASelectionPattern_snip#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIASelectionPattern_snip/VisualBasic/UIASelectionPattern_snippets.vb#103)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionRequiredProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsSelectionRequiredProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsSelectionRequiredProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.SelectionPattern.IsSelectionRequiredProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSelectionRequiredProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsSelectionRequiredProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsSelectionRequiredProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.SelectionPattern.IsSelectionRequiredProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Automation.SelectionPattern.SelectionPatternInformation.IsSelectionRequired" /> 属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此标识符由 UI 自动化客户端应用程序使用。 UI 自动化提供程序应在中使用等效字段 <xref:System.Windows.Automation.SelectionPatternIdentifiers> 。  
  
   
  
## Examples  
 在下面的示例中，将一个根元素传递到一个函数，该函数返回元素的集合， [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 这些元素是根的后代并且满足一组属性条件。  
  
 [!code-csharp[UIASelectionPattern_snip#100](~/samples/snippets/csharp/VS_Snippets_Wpf/UIASelectionPattern_snip/CSharp/UIASelectionPattern_snippets.cs#100)]
 [!code-vb[UIASelectionPattern_snip#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIASelectionPattern_snip/VisualBasic/UIASelectionPattern_snippets.vb#100)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pattern">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationPattern Pattern;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationPattern Pattern" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.SelectionPattern.Pattern" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Pattern As AutomationPattern " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationPattern ^ Pattern;" />
      <MemberSignature Language="F#" Value=" staticval mutable Pattern : System.Windows.Automation.AutomationPattern" Usage="System.Windows.Automation.SelectionPattern.Pattern" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationPattern</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="T:System.Windows.Automation.SelectionPattern" /> 控件模式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此标识符由 UI 自动化客户端应用程序使用。 UI 自动化提供程序应在中使用等效字段 <xref:System.Windows.Automation.SelectionPatternIdentifiers> 。  
  
 将模式标识符传递给方法（如）， <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> 以从指定的中检索相关的控件模式 <xref:System.Windows.Automation.AutomationElement> 。  
  
   
  
## Examples  
 在下面的示例中， <xref:System.Windows.Automation.SelectionPattern> 从获取控件模式 <xref:System.Windows.Automation.AutomationElement> 。  
  
 [!code-csharp[UIASelectionPattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIASelectionPattern_snip/CSharp/UIASelectionPattern_snippets.cs#101)]
 [!code-vb[UIASelectionPattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIASelectionPattern_snip/VisualBasic/UIASelectionPattern_snippets.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty SelectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty SelectionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.SelectionPattern.SelectionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ SelectionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectionProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.SelectionPattern.SelectionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识用于获取容器中的选定项的属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此标识符由 UI 自动化客户端应用程序使用。 UI 自动化提供程序应在中使用等效字段 <xref:System.Windows.Automation.SelectionPatternIdentifiers> 。  
  
 此属性不存在于中 <xref:System.Windows.Automation.SelectionPattern.SelectionPatternInformation> ，并且必须使用或进行 <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A> 检索 <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A> 。  
  
   
  
## Examples  
 在下面的示例中，将 <xref:System.Windows.Automation.AutomationElement> 获取表示选择容器中的选定项的的集合。  
  
 [!code-csharp[UIASelectionPattern_snip#102](~/samples/snippets/csharp/VS_Snippets_Wpf/UIASelectionPattern_snip/CSharp/UIASelectionPattern_snippets.cs#102)]
 [!code-vb[UIASelectionPattern_snip#102](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIASelectionPattern_snip/VisualBasic/UIASelectionPattern_snippets.vb#102)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
