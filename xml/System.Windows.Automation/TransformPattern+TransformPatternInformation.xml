<Type Name="TransformPattern+TransformPatternInformation" FullName="System.Windows.Automation.TransformPattern+TransformPatternInformation">
  <Metadata><Meta Name="ms.openlocfilehash" Value="44ee98ae6e41fd7af5add37430578146c43ab473" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89697827" /></Metadata><TypeSignature Language="C#" Value="public struct TransformPattern.TransformPatternInformation" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit TransformPattern/TransformPatternInformation extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.TransformPattern.TransformPatternInformation" />
  <TypeSignature Language="VB.NET" Value="Public Structure TransformPattern.TransformPatternInformation" />
  <TypeSignature Language="C++ CLI" Value="public: value class TransformPattern::TransformPatternInformation" />
  <TypeSignature Language="F#" Value="type TransformPattern.TransformPatternInformation = struct" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="70c93-101">支持使用 <see cref="T:System.Windows.Automation.TransformPattern" /> 对象的 <see cref="P:System.Windows.Automation.TransformPattern.Current" /> 或 <see cref="P:System.Windows.Automation.TransformPattern.Cached" /> 访问器访问该对象的属性值。</span><span class="sxs-lookup"><span data-stu-id="70c93-101">Provides access to the property values of a <see cref="T:System.Windows.Automation.TransformPattern" /> object using its <see cref="P:System.Windows.Automation.TransformPattern.Current" /> or <see cref="P:System.Windows.Automation.TransformPattern.Cached" /> accessors.</span></span></summary>
    <remarks>To be added.</remarks>
    <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-control-patterns-overview"><span data-ttu-id="70c93-102">UI 自动化控件模式概述</span><span class="sxs-lookup"><span data-stu-id="70c93-102">UI Automation Control Patterns Overview</span></span></related>
    <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-control-patterns-for-clients"><span data-ttu-id="70c93-103">客户端的 UI 自动化控件模式</span><span class="sxs-lookup"><span data-stu-id="70c93-103">UI Automation Control Patterns for Clients</span></span></related>
    <related type="Article" href="/dotnet/framework/ui-automation/use-caching-in-ui-automation"><span data-ttu-id="70c93-104">在 UI 自动化中使用缓存</span><span class="sxs-lookup"><span data-stu-id="70c93-104">Use Caching in UI Automation</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="CanMove">
      <MemberSignature Language="C#" Value="public bool CanMove { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanMove" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanMove" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanMove As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanMove { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanMove : bool" Usage="System.Windows.Automation.TransformPattern.TransformPatternInformation.CanMove" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="70c93-105">获取一个值，该值指定是否可以移动 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 元素。</span><span class="sxs-lookup"><span data-stu-id="70c93-105">Gets a value that specifies whether the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element can be moved.</span></span></summary>
        <value><span data-ttu-id="70c93-106">如果可以移动该元素，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="70c93-106"><see langword="true" /> if the element can be moved; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70c93-107">对象不能移动、调整大小或旋转，使其生成的屏幕位置完全在其容器的坐标之外并且无法访问键盘或鼠标。</span><span class="sxs-lookup"><span data-stu-id="70c93-107">An object cannot be moved, resized or rotated such that its resulting screen location would be completely outside the coordinates of its container and inaccessible to keyboard or mouse.</span></span> <span data-ttu-id="70c93-108">例如，当顶级窗口完全移离屏幕或子对象移动到容器的视区边界之外时。</span><span class="sxs-lookup"><span data-stu-id="70c93-108">For example, when a top-level window is moved completely off-screen or a child object is moved outside the boundaries of the container's viewport.</span></span> <span data-ttu-id="70c93-109">在这种情况下，将对象放置在尽可能靠近所请求的屏幕坐标的位置，并将其重写为位于容器边界内。</span><span class="sxs-lookup"><span data-stu-id="70c93-109">In these cases the object is placed as close to the requested screen coordinates as possible with the top or left coordinates overridden to be within the container boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70c93-110">在下面的示例中，将 <xref:System.Windows.Automation.TransformPattern> 从获取一个控件模式， <xref:System.Windows.Automation.AutomationElement> 并随后用于移动 <xref:System.Windows.Automation.AutomationElement> 。</span><span class="sxs-lookup"><span data-stu-id="70c93-110">In the following example, a <xref:System.Windows.Automation.TransformPattern> control pattern is obtained from an <xref:System.Windows.Automation.AutomationElement> and subsequently used to move the <xref:System.Windows.Automation.AutomationElement>.</span></span>  
  
 [!code-csharp[UIATransformPattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATransformPattern_snip/CSharp/UIATransformPattern_snippets.cs#101)]
 [!code-vb[UIATransformPattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATransformPattern_snip/VisualBasic/UIATransformPattern_snippets.vb#101)]  
[!code-csharp[UIATransformPattern_snip#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATransformPattern_snip/CSharp/UIATransformPattern_snippets.cs#103)]
[!code-vb[UIATransformPattern_snip#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATransformPattern_snip/VisualBasic/UIATransformPattern_snippets.vb#103)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanResize">
      <MemberSignature Language="C#" Value="public bool CanResize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanResize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanResize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanResize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanResize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanResize : bool" Usage="System.Windows.Automation.TransformPattern.TransformPatternInformation.CanResize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="70c93-111">获取一个值，该值指示 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]元素是否可以调整大小。</span><span class="sxs-lookup"><span data-stu-id="70c93-111">Gets a value that specifies whether the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element can be resized.</span></span></summary>
        <value><span data-ttu-id="70c93-112">如果元素可以调整大小，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="70c93-112"><see langword="true" /> if the element can be resized; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70c93-113">不能移动、调整大小或旋转对象，使其生成的屏幕位置完全在其容器的坐标之外并且无法通过键盘或鼠标访问。</span><span class="sxs-lookup"><span data-stu-id="70c93-113">An object cannot be moved, resized, or rotated such that its resulting screen location would be completely outside the coordinates of its container and inaccessible to keyboard or mouse.</span></span> <span data-ttu-id="70c93-114">例如，当顶级窗口完全移离屏幕或子对象移动到容器的视区边界之外时。</span><span class="sxs-lookup"><span data-stu-id="70c93-114">For example, when a top-level window is moved completely off-screen or a child object is moved outside the boundaries of the container's viewport.</span></span> <span data-ttu-id="70c93-115">在这种情况下，将对象放置在尽可能靠近所请求的屏幕坐标的位置，并将其重写为位于容器边界内。</span><span class="sxs-lookup"><span data-stu-id="70c93-115">In these cases the object is placed as close to the requested screen coordinates as possible with the top or left coordinates overridden to be within the container boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70c93-116">在下面的示例中，将 <xref:System.Windows.Automation.TransformPattern> 从获取一个控件模式， <xref:System.Windows.Automation.AutomationElement> 并随后用于调整 <xref:System.Windows.Automation.AutomationElement> 。</span><span class="sxs-lookup"><span data-stu-id="70c93-116">In the following example, a <xref:System.Windows.Automation.TransformPattern> control pattern is obtained from an <xref:System.Windows.Automation.AutomationElement> and subsequently used to resize the <xref:System.Windows.Automation.AutomationElement>.</span></span>  
  
 [!code-csharp[UIATransformPattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATransformPattern_snip/CSharp/UIATransformPattern_snippets.cs#101)]
 [!code-vb[UIATransformPattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATransformPattern_snip/VisualBasic/UIATransformPattern_snippets.vb#101)]  
[!code-csharp[UIATransformPattern_snip#104](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATransformPattern_snip/CSharp/UIATransformPattern_snippets.cs#104)]
[!code-vb[UIATransformPattern_snip#104](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATransformPattern_snip/VisualBasic/UIATransformPattern_snippets.vb#104)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRotate">
      <MemberSignature Language="C#" Value="public bool CanRotate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRotate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanRotate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRotate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRotate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRotate : bool" Usage="System.Windows.Automation.TransformPattern.TransformPatternInformation.CanRotate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="70c93-117">获取一个值，该值指示 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 元素可否旋转。</span><span class="sxs-lookup"><span data-stu-id="70c93-117">Gets a value that specifies whether the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element can be rotated.</span></span></summary>
        <value><span data-ttu-id="70c93-118">如果元素可旋转，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="70c93-118"><see langword="true" /> if the element can be rotated; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70c93-119">不能移动、调整大小或旋转对象，使其生成的屏幕位置完全在其容器的坐标之外并且无法通过键盘或鼠标访问。</span><span class="sxs-lookup"><span data-stu-id="70c93-119">An object cannot be moved, resized, or rotated such that its resulting screen location would be completely outside the coordinates of its container and inaccessible to keyboard or mouse.</span></span> <span data-ttu-id="70c93-120">例如，当顶级窗口完全移离屏幕或子对象移动到容器的视区边界之外时。</span><span class="sxs-lookup"><span data-stu-id="70c93-120">For example, when a top-level window is moved completely off-screen or a child object is moved outside the boundaries of the container's viewport.</span></span> <span data-ttu-id="70c93-121">在这种情况下，将对象放置在尽可能靠近所请求的屏幕坐标的位置，并将其重写为位于容器边界内。</span><span class="sxs-lookup"><span data-stu-id="70c93-121">In these cases the object is placed as close to the requested screen coordinates as possible with the top or left coordinates overridden to be within the container boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70c93-122">在下面的示例中，将 <xref:System.Windows.Automation.TransformPattern> 从获取一个控件模式， <xref:System.Windows.Automation.AutomationElement> 并随后用于旋转 <xref:System.Windows.Automation.AutomationElement> 。</span><span class="sxs-lookup"><span data-stu-id="70c93-122">In the following example, a <xref:System.Windows.Automation.TransformPattern> control pattern is obtained from an <xref:System.Windows.Automation.AutomationElement> and subsequently used to rotate the <xref:System.Windows.Automation.AutomationElement>.</span></span>  
  
 [!code-csharp[UIATransformPattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATransformPattern_snip/CSharp/UIATransformPattern_snippets.cs#101)]
 [!code-vb[UIATransformPattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATransformPattern_snip/VisualBasic/UIATransformPattern_snippets.vb#101)]  
[!code-csharp[UIATransformPattern_snip#102](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATransformPattern_snip/CSharp/UIATransformPattern_snippets.cs#102)]
[!code-vb[UIATransformPattern_snip#102](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATransformPattern_snip/VisualBasic/UIATransformPattern_snippets.vb#102)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
