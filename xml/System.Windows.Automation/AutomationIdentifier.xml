<Type Name="AutomationIdentifier" FullName="System.Windows.Automation.AutomationIdentifier">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b102dc52f63cce8e90f8e5eed0b863943523e38f" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89952375" /></Metadata><TypeSignature Language="C#" Value="public class AutomationIdentifier : IComparable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AutomationIdentifier extends System.Object implements class System.IComparable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.AutomationIdentifier" />
  <TypeSignature Language="VB.NET" Value="Public Class AutomationIdentifier&#xA;Implements IComparable" />
  <TypeSignature Language="C++ CLI" Value="public ref class AutomationIdentifier : IComparable" />
  <TypeSignature Language="F#" Value="type AutomationIdentifier = class&#xA;    interface IComparable" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationTypes</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="34bd0-101">用于标识 UI 自动化中的控件类型、事件、模式、属性和文本特性的类型的基类。</span><span class="sxs-lookup"><span data-stu-id="34bd0-101">Base class for types that identify control types, events, patterns, properties, and text attributes in UI Automation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34bd0-102"><xref:System.Windows.Automation.AutomationIdentifier>类实际上是抽象类，因为它没有构造函数，并且不能由应用程序实例化。</span><span class="sxs-lookup"><span data-stu-id="34bd0-102">The <xref:System.Windows.Automation.AutomationIdentifier> class is effectively abstract, as it has no constructor and cannot be instantiated by applications.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationIdentifier.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="automationIdentifier.CompareTo obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="34bd0-103">与此对象相比较的对象。</span><span class="sxs-lookup"><span data-stu-id="34bd0-103">The object to compare this one with.</span></span></param>
        <summary><span data-ttu-id="34bd0-104">将此 <see cref="T:System.Windows.Automation.AutomationIdentifier" /> 与其他 <see cref="T:System.Windows.Automation.AutomationIdentifier" /> 相比较。</span><span class="sxs-lookup"><span data-stu-id="34bd0-104">Compares this <see cref="T:System.Windows.Automation.AutomationIdentifier" /> with another <see cref="T:System.Windows.Automation.AutomationIdentifier" />.</span></span></summary>
        <returns><span data-ttu-id="34bd0-105">此对象的哈希代码减去 <paramref name="obj" /> 的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="34bd0-105">The hash code of this object minus the hash code of <paramref name="obj" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="34bd0-106"><paramref name="obj" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="34bd0-106"><paramref name="obj" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationIdentifier.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="automationIdentifier.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="34bd0-107">与此标识符相比较的 <see cref="T:System.Windows.Automation.AutomationIdentifier" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="34bd0-107">An <see cref="T:System.Windows.Automation.AutomationIdentifier" /> object to compare with this identifier.</span></span></param>
        <summary><span data-ttu-id="34bd0-108">返回一个值，该值指示提供的 <see cref="T:System.Windows.Automation.AutomationIdentifier" /> 是否等效于此 <see cref="T:System.Windows.Automation.AutomationIdentifier" />。</span><span class="sxs-lookup"><span data-stu-id="34bd0-108">Returns a value indicating whether the supplied <see cref="T:System.Windows.Automation.AutomationIdentifier" /> is equivalent to this <see cref="T:System.Windows.Automation.AutomationIdentifier" />.</span></span></summary>
        <returns><span data-ttu-id="34bd0-109">如果两个对象相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="34bd0-109"><see langword="true" /> if the objects are equivalent; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationIdentifier.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="automationIdentifier.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="34bd0-110">返回此 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]标识符的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="34bd0-110">Returns the hash code for this [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] identifier.</span></span></summary>
        <returns><span data-ttu-id="34bd0-111">32 位有符号整数哈希代码。</span><span class="sxs-lookup"><span data-stu-id="34bd0-111">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34bd0-112">此方法将重写 <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="34bd0-112">This method overrides the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public int Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Id" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationIdentifier.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Id { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : int" Usage="System.Windows.Automation.AutomationIdentifier.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="34bd0-113">获取基础数值标识符。</span><span class="sxs-lookup"><span data-stu-id="34bd0-113">Gets the underlying numerical identifier.</span></span></summary>
        <value><span data-ttu-id="34bd0-114">基础标识符。</span><span class="sxs-lookup"><span data-stu-id="34bd0-114">The underlying identifier.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Automation.AutomationEvent.LookupById(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ProgrammaticName">
      <MemberSignature Language="C#" Value="public string ProgrammaticName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProgrammaticName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationIdentifier.ProgrammaticName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProgrammaticName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProgrammaticName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProgrammaticName : string" Usage="System.Windows.Automation.AutomationIdentifier.ProgrammaticName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="34bd0-115">获取注册的编程名称。</span><span class="sxs-lookup"><span data-stu-id="34bd0-115">Gets the registered programmatic name.</span></span></summary>
        <value><span data-ttu-id="34bd0-116">编程名称。</span><span class="sxs-lookup"><span data-stu-id="34bd0-116">The programmatic name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34bd0-117"><xref:System.Windows.Automation.AutomationIdentifier.ProgrammaticName%2A> 仅用于调试和诊断目的。</span><span class="sxs-lookup"><span data-stu-id="34bd0-117"><xref:System.Windows.Automation.AutomationIdentifier.ProgrammaticName%2A> is intended for debugging and diagnostic purposes only.</span></span> <span data-ttu-id="34bd0-118">字符串未本地化。</span><span class="sxs-lookup"><span data-stu-id="34bd0-118">The string is not localized.</span></span>  
  
 <span data-ttu-id="34bd0-119">不应在字符串比较中使用此属性。</span><span class="sxs-lookup"><span data-stu-id="34bd0-119">This property should not be used in string comparisons.</span></span> <span data-ttu-id="34bd0-120">若要确定两个属性是否相同，请直接比较属性标识符。</span><span class="sxs-lookup"><span data-stu-id="34bd0-120">To determine if two properties are the same, compare the property identifiers directly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="34bd0-121">下面的示例显示了支持的每个属性的编程名称 <xref:System.Windows.Automation.AutomationElement> 。</span><span class="sxs-lookup"><span data-stu-id="34bd0-121">The following example displays the programmatic name of each property supported by an <xref:System.Windows.Automation.AutomationElement>.</span></span>  
  
 [!code-csharp[UIAClient_snip#115](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#115)]
 [!code-vb[UIAClient_snip#115](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#115)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
