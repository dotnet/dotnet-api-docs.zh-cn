<Type Name="CacheRequest" FullName="System.Windows.Automation.CacheRequest">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dcd375865daf3345e8862118f26401bd84d5d596" /><Meta Name="ms.sourcegitcommit" Value="80274aaa1f2e220209486886b5cd74a54203d795" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/03/2020" /><Meta Name="ms.locfileid" Value="89415717" /></Metadata><TypeSignature Language="C#" Value="public sealed class CacheRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CacheRequest extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.CacheRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CacheRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class CacheRequest sealed" />
  <TypeSignature Language="F#" Value="type CacheRequest = class" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a3e4e-101">指定在获得 <see cref="T:System.Windows.Automation.AutomationElement" /> 时，UI 自动化框架缓存的属性和模式。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-101">Specifies properties and patterns that the UI Automation framework caches when an <see cref="T:System.Windows.Automation.AutomationElement" /> is obtained.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3e4e-102">通过检索属性和模式 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 需要跨进程调用，从而降低性能。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-102">Retrieving properties and patterns through [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] requires cross-process calls that can slow down performance.</span></span> <span data-ttu-id="a3e4e-103">通过在批处理操作中缓存 microsoft.support 和模式的值，你可以提高应用程序的性能。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-103">By caching values of proprieties and patterns in a batch operation, you can enhance the performance of your application.</span></span>  
  
 <span data-ttu-id="a3e4e-104">通过调用类构造函数来创建新的缓存请求。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-104">Create a new cache request by calling the class constructor.</span></span> <span data-ttu-id="a3e4e-105">该请求通过对方法的重复调用来填充 <xref:System.Windows.Automation.CacheRequest.Add%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-105">The request is populated by repeated calls to the <xref:System.Windows.Automation.CacheRequest.Add%2A> method.</span></span>  
  
 <span data-ttu-id="a3e4e-106">只有一个 <xref:System.Windows.Automation.CacheRequest> 可以处于活动状态。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-106">Only a single <xref:System.Windows.Automation.CacheRequest> can be active.</span></span> <span data-ttu-id="a3e4e-107">可以通过两种方式激活请求：</span><span class="sxs-lookup"><span data-stu-id="a3e4e-107">There are two ways to activate a request:</span></span>  
  
-   <span data-ttu-id="a3e4e-108"><xref:System.Windows.Automation.CacheRequest.Activate%2A>请求上调用。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-108">Call <xref:System.Windows.Automation.CacheRequest.Activate%2A> on the request.</span></span> <span data-ttu-id="a3e4e-109">这会将请求推送到堆栈上，并在释放对象时弹出请求。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-109">This pushes the request onto the stack, and the request is popped when the object is disposed.</span></span> <span data-ttu-id="a3e4e-110">若要确保即使引发异常也能进行处理，请使用 <xref:System.Windows.Automation.CacheRequest.Activate%2A> `using` Visual Basic) 中 (块内的返回值 `Using` 。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-110">To ensure disposal even if an exception is raised, use the return value from <xref:System.Windows.Automation.CacheRequest.Activate%2A> within a `using` block (`Using` in Visual Basic).</span></span>  
  
-   <span data-ttu-id="a3e4e-111">通过调用将请求放到内部堆栈上 <xref:System.Windows.Automation.CacheRequest.Push%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-111">Put the request onto the internal stack by calling <xref:System.Windows.Automation.CacheRequest.Push%2A>.</span></span> <span data-ttu-id="a3e4e-112">堆栈上只有最顶层的请求处于活动状态，并且必须是从堆栈中移除的下一个请求 <xref:System.Windows.Automation.CacheRequest.Pop%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-112">Only the topmost request on the stack is active, and it must be the next one removed from the stack by <xref:System.Windows.Automation.CacheRequest.Pop%2A>.</span></span> <span data-ttu-id="a3e4e-113">弹出请求会将其停用。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-113">Popping the request deactivates it.</span></span>  
  
 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] <span data-ttu-id="a3e4e-114">请求处于活动状态时获得的元素将为指定的属性和模式使用缓存值。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-114">elements obtained while the request is active will have cached values for the properties and patterns specified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3e4e-115">下面的示例演示如何使用 <xref:System.Windows.Automation.CacheRequest.Activate%2A> 缓存模式和属性。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-115">The following example shows how to use <xref:System.Windows.Automation.CacheRequest.Activate%2A> to cache patterns and properties.</span></span>  
  
 [!code-csharp[UIAClient_snip#107](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#107)]
 [!code-vb[UIAClient_snip#107](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#107)]  
  
 <span data-ttu-id="a3e4e-116">下面的示例演示如何使用 <xref:System.Windows.Automation.CacheRequest.Push%2A> 和 <xref:System.Windows.Automation.CacheRequest.Pop%2A> 来缓存模式和属性。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-116">The following example shows how to use <xref:System.Windows.Automation.CacheRequest.Push%2A> and <xref:System.Windows.Automation.CacheRequest.Pop%2A> to cache patterns and properties.</span></span>  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/framework/ui-automation/caching-in-ui-automation-clients"><span data-ttu-id="a3e4e-117">在 UI 自动化客户端中缓存</span><span class="sxs-lookup"><span data-stu-id="a3e4e-117">Caching in UI Automation Clients</span></span></related>
    <related type="Article" href="/dotnet/framework/ui-automation/use-caching-in-ui-automation"><span data-ttu-id="a3e4e-118">在 UI 自动化中使用缓存</span><span class="sxs-lookup"><span data-stu-id="a3e4e-118">Use Caching in UI Automation</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms771456(v=vs.90)"><span data-ttu-id="a3e4e-119">FetchTimer 示例</span><span class="sxs-lookup"><span data-stu-id="a3e4e-119">FetchTimer Sample</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheRequest();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3e4e-120">初始化 <see cref="T:System.Windows.Automation.CacheRequest" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-120">Initializes a new instance of the <see cref="T:System.Windows.Automation.CacheRequest" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3e4e-121">创建时 <xref:System.Windows.Automation.CacheRequest> ，会将 <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> 标识符作为默认属性添加到缓存中。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-121">When a <xref:System.Windows.Automation.CacheRequest> is created, the <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> identifier is added as a default property to cache.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/caching-in-ui-automation-clients"><span data-ttu-id="a3e4e-122">在 UI 自动化客户端中缓存</span><span class="sxs-lookup"><span data-stu-id="a3e4e-122">Caching in UI Automation Clients</span></span></related>
        <related type="Article" href="/dotnet/framework/ui-automation/use-caching-in-ui-automation"><span data-ttu-id="a3e4e-123">在 UI 自动化中使用缓存</span><span class="sxs-lookup"><span data-stu-id="a3e4e-123">Use Caching in UI Automation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public IDisposable Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ Activate();" />
      <MemberSignature Language="F#" Value="member this.Activate : unit -&gt; IDisposable" Usage="cacheRequest.Activate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3e4e-124">将此 <see cref="T:System.Windows.Automation.CacheRequest" /> 设置为在同一线程中请求 <see cref="T:System.Windows.Automation.AutomationElement" /> 时返回的项的活动规范。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-124">Sets this <see cref="T:System.Windows.Automation.CacheRequest" /> as the active specification for the items that are returned when an <see cref="T:System.Windows.Automation.AutomationElement" /> is requested on the same thread.</span></span></summary>
        <returns><span data-ttu-id="a3e4e-125">可用于释放 <see cref="T:System.Windows.Automation.CacheRequest" /> 的对象。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-125">The object that can be used to dispose the <see cref="T:System.Windows.Automation.CacheRequest" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3e4e-126">通常，使用此方法比使用 <xref:System.Windows.Automation.CacheRequest.Push%2A> 和 <xref:System.Windows.Automation.CacheRequest.Pop%2A> 作为激活的一种方法 <xref:System.Windows.Automation.CacheRequest> 。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-126">Using this method is usually preferable to using <xref:System.Windows.Automation.CacheRequest.Push%2A> and <xref:System.Windows.Automation.CacheRequest.Pop%2A> as a means of activating the <xref:System.Windows.Automation.CacheRequest>.</span></span> <span data-ttu-id="a3e4e-127">对象在调用时被推送到堆栈上 <xref:System.Windows.Automation.CacheRequest.Activate%2A> ，然后在被释放时弹出。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-127">The object is pushed onto the stack when <xref:System.Windows.Automation.CacheRequest.Activate%2A> is called, and then popped off when it is disposed.</span></span> <span data-ttu-id="a3e4e-128">若要确保处置，请将返回值放在 `using` 块 (`Using` Visual Basic) 中。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-128">To ensure disposal, place the return value within a `using` block (`Using` in Visual Basic).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3e4e-129">下面的示例演示如何使用 <xref:System.Windows.Automation.CacheRequest.Activate%2A> 缓存模式和属性。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-129">The following example shows how to use <xref:System.Windows.Automation.CacheRequest.Activate%2A> to cache patterns and properties.</span></span>  
  
 [!code-csharp[UIAClient_snip#107](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#107)]
 [!code-vb[UIAClient_snip#107](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#107)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.CacheRequest.Push" />
        <altmember cref="M:System.Windows.Automation.CacheRequest.Pop" />
        <related type="Article" href="/dotnet/framework/ui-automation/caching-in-ui-automation-clients"><span data-ttu-id="a3e4e-130">在 UI 自动化客户端中缓存</span><span class="sxs-lookup"><span data-stu-id="a3e4e-130">Caching in UI Automation Clients</span></span></related>
        <related type="Article" href="/dotnet/framework/ui-automation/use-caching-in-ui-automation"><span data-ttu-id="a3e4e-131">在 UI 自动化中使用缓存</span><span class="sxs-lookup"><span data-stu-id="a3e4e-131">Use Caching in UI Automation</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3e4e-132">将一个属性或模式标识符添加到 <see cref="T:System.Windows.Automation.CacheRequest" />。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-132">Adds a property or pattern identifier to a <see cref="T:System.Windows.Automation.CacheRequest" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3e4e-133"><xref:System.Windows.Automation.CacheRequest>创建对象时， <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> 会将标识符作为默认属性添加到缓存中。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-133">When a <xref:System.Windows.Automation.CacheRequest> object is created, the <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> identifier is added as a default property to cache.</span></span>  
  
 <span data-ttu-id="a3e4e-134">添加已在缓存请求中的对象不起作用。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-134">Adding an object that is already in the cache request has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Windows.Automation.AutomationPattern pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Windows.Automation.AutomationPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (pattern As AutomationPattern)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Windows::Automation::AutomationPattern ^ pattern);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Windows.Automation.AutomationPattern -&gt; unit" Usage="cacheRequest.Add pattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Windows.Automation.AutomationPattern" />
      </Parameters>
      <Docs>
        <param name="pattern"><span data-ttu-id="a3e4e-135">一个标识符，指定要缓存的模式。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-135">An identifier specifying a pattern to cache.</span></span></param>
        <summary><span data-ttu-id="a3e4e-136">将指定的 <see cref="T:System.Windows.Automation.AutomationPattern" /> 标识符添加到此 <see cref="T:System.Windows.Automation.CacheRequest" />。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-136">Adds the specified <see cref="T:System.Windows.Automation.AutomationPattern" /> identifier to this <see cref="T:System.Windows.Automation.CacheRequest" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3e4e-137">添加已在缓存请求中的模式不起作用。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-137">Adding a pattern that is already in the cache request has no effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3e4e-138">下面的示例演示如何构造 <xref:System.Windows.Automation.CacheRequest> 并添加要缓存的模式。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-138">The following example shows how to construct a <xref:System.Windows.Automation.CacheRequest> and add a pattern to be cached.</span></span>  
  
 [!code-csharp[UIAClient_snip#202](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#202)]
 [!code-vb[UIAClient_snip#202](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#202)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a3e4e-139"><see cref="T:System.Windows.Automation.CacheRequest" /> 处于活动状态。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-139">The <see cref="T:System.Windows.Automation.CacheRequest" /> is active.</span></span></exception>
        <related type="Article" href="/dotnet/framework/ui-automation/caching-in-ui-automation-clients"><span data-ttu-id="a3e4e-140">在 UI 自动化客户端中缓存</span><span class="sxs-lookup"><span data-stu-id="a3e4e-140">Caching in UI Automation Clients</span></span></related>
        <related type="Article" href="/dotnet/framework/ui-automation/use-caching-in-ui-automation"><span data-ttu-id="a3e4e-141">在 UI 自动化中使用缓存</span><span class="sxs-lookup"><span data-stu-id="a3e4e-141">Use Caching in UI Automation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Windows.Automation.AutomationProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Windows.Automation.AutomationProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (property As AutomationProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Windows::Automation::AutomationProperty ^ property);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Windows.Automation.AutomationProperty -&gt; unit" Usage="cacheRequest.Add property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.Automation.AutomationProperty" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="a3e4e-142">一个标识符，指定要缓存的属性值。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-142">An identifier specifying a property value to cache.</span></span></param>
        <summary><span data-ttu-id="a3e4e-143">将指定的 <see cref="T:System.Windows.Automation.AutomationProperty" /> 标识符添加到此 <see cref="T:System.Windows.Automation.CacheRequest" />。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-143">Adds the specified <see cref="T:System.Windows.Automation.AutomationProperty" /> identifier to this <see cref="T:System.Windows.Automation.CacheRequest" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3e4e-144">创建时 <xref:System.Windows.Automation.CacheRequest> ，会将 <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> 标识符作为默认属性添加到缓存中。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-144">When a <xref:System.Windows.Automation.CacheRequest> is created, the <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> identifier is added as a default property to cache.</span></span>  
  
 <span data-ttu-id="a3e4e-145">添加已在缓存请求中的属性不起作用。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-145">Adding a property that is already in the cache request has no effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3e4e-146">下面的示例演示如何构造 <xref:System.Windows.Automation.CacheRequest> 并添加要缓存的属性。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-146">The following example shows how to construct a <xref:System.Windows.Automation.CacheRequest> and add a property to be cached.</span></span>  
  
 [!code-csharp[UIAClient_snip#202](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#202)]
 [!code-vb[UIAClient_snip#202](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#202)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a3e4e-147"><see cref="T:System.Windows.Automation.CacheRequest" /> 处于活动状态。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-147">The <see cref="T:System.Windows.Automation.CacheRequest" /> is active.</span></span></exception>
        <related type="Article" href="/dotnet/framework/ui-automation/caching-in-ui-automation-clients"><span data-ttu-id="a3e4e-148">在 UI 自动化客户端中缓存</span><span class="sxs-lookup"><span data-stu-id="a3e4e-148">Caching in UI Automation Clients</span></span></related>
        <related type="Article" href="/dotnet/framework/ui-automation/use-caching-in-ui-automation"><span data-ttu-id="a3e4e-149">在 UI 自动化中使用缓存</span><span class="sxs-lookup"><span data-stu-id="a3e4e-149">Use Caching in UI Automation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AutomationElementMode">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElementMode AutomationElementMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.AutomationElementMode AutomationElementMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.CacheRequest.AutomationElementMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutomationElementMode As AutomationElementMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationElementMode AutomationElementMode { System::Windows::Automation::AutomationElementMode get(); void set(System::Windows::Automation::AutomationElementMode value); };" />
      <MemberSignature Language="F#" Value="member this.AutomationElementMode : System.Windows.Automation.AutomationElementMode with get, set" Usage="System.Windows.Automation.CacheRequest.AutomationElementMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElementMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3e4e-150">获取或设置一个值，该值指定返回的元素是应包含对基础 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 的完整引用，还是仅包含缓存的信息。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-150">Gets or sets a value that specifies whether returned elements should contain full references to the underlying [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)], or only cached information.</span></span></summary>
        <value><span data-ttu-id="a3e4e-151">如果返回的元素包含对基础 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 的完整引用，则为 <see cref="F:System.Windows.Automation.AutomationElementMode.Full" />；否则为 <see cref="F:System.Windows.Automation.AutomationElementMode.None" />。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-151"><see cref="F:System.Windows.Automation.AutomationElementMode.Full" /> if the returned elements have a full reference to the underlying [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]; otherwise <see cref="F:System.Windows.Automation.AutomationElementMode.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3e4e-152"><xref:System.Windows.Automation.AutomationElementMode.Full> 为默认值，并指定返回的元素包含对基础的完整引用 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-152"><xref:System.Windows.Automation.AutomationElementMode.Full> is the default value, and specifies that returned elements contain a full reference to the underlying [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span> <span data-ttu-id="a3e4e-153"><xref:System.Windows.Automation.AutomationElementMode.None> 指定返回的元素没有引用基础元素 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] ，只包含缓存的信息。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-153"><xref:System.Windows.Automation.AutomationElementMode.None> specifies that the returned elements have no reference to the underlying [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)], and contain only cached information.</span></span>  
  
 <span data-ttu-id="a3e4e-154">对元素执行的某些操作（包括 <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A> 、 <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> 和 <xref:System.Windows.Automation.AutomationElement.SetFocus%2A> ）需要完整引用; 尝试对中的无结果的元素执行这些操作 <xref:System.InvalidOperationException> 。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-154">Certain operations on elements, including <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>, <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>, and <xref:System.Windows.Automation.AutomationElement.SetFocus%2A>, require a full reference; attempting to perform these on an element that has none results in an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="a3e4e-155"><xref:System.Windows.Automation.AutomationElementMode.None>当只需要属性时，使用可能更高效，因为这样可以避免设置完整引用所涉及的系统开销。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-155">Using <xref:System.Windows.Automation.AutomationElementMode.None> can be more efficient when only properties are needed, as it avoids the overhead involved in setting up full references.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3e4e-156">在下面的示例中，将 <xref:System.Windows.Automation.CacheRequest.AutomationElementMode%2A> 设置为 <xref:System.Windows.Automation.AutomationElementMode.None> ，并且只有缓存的属性和模式可用于检索到的对象。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-156">In the following example, <xref:System.Windows.Automation.CacheRequest.AutomationElementMode%2A> is set to <xref:System.Windows.Automation.AutomationElementMode.None>, with the result that only cached properties and patterns are available for the retrieved object.</span></span>  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/caching-in-ui-automation-clients"><span data-ttu-id="a3e4e-157">在 UI 自动化客户端中缓存</span><span class="sxs-lookup"><span data-stu-id="a3e4e-157">Caching in UI Automation Clients</span></span></related>
        <related type="Article" href="/dotnet/framework/ui-automation/use-caching-in-ui-automation"><span data-ttu-id="a3e4e-158">在 UI 自动化中使用缓存</span><span class="sxs-lookup"><span data-stu-id="a3e4e-158">Use Caching in UI Automation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.CacheRequest Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.CacheRequest Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As CacheRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::CacheRequest ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Windows.Automation.CacheRequest" Usage="cacheRequest.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.CacheRequest</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3e4e-159">创建此 <see cref="T:System.Windows.Automation.CacheRequest" /> 的副本。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-159">Creates a copy of this <see cref="T:System.Windows.Automation.CacheRequest" />.</span></span></summary>
        <returns><span data-ttu-id="a3e4e-160">当前对象的可修改副本。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-160">A modifiable copy of the current object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.CacheRequest Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Automation.CacheRequest Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.CacheRequest.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Current As CacheRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Automation::CacheRequest ^ Current { System::Windows::Automation::CacheRequest ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Windows.Automation.CacheRequest" Usage="System.Windows.Automation.CacheRequest.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.CacheRequest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3e4e-161">获取当前线程中处于活动状态的 <see cref="T:System.Windows.Automation.CacheRequest" />。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-161">Gets the <see cref="T:System.Windows.Automation.CacheRequest" /> that is active on the current thread.</span></span></summary>
        <value><span data-ttu-id="a3e4e-162">活动的 <see cref="T:System.Windows.Automation.CacheRequest" />。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-162">The active <see cref="T:System.Windows.Automation.CacheRequest" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pop">
      <MemberSignature Language="C#" Value="public void Pop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Pop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pop();" />
      <MemberSignature Language="F#" Value="member this.Pop : unit -&gt; unit" Usage="cacheRequest.Pop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3e4e-163">从当前线程的内部堆栈中移除活动的 <see cref="T:System.Windows.Automation.CacheRequest" />。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-163">Removes the active <see cref="T:System.Windows.Automation.CacheRequest" /> from the internal stack for the current thread.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3e4e-164">使用方法只能删除当前活动的请求 <xref:System.Windows.Automation.CacheRequest.Pop%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-164">Only the currently active request can be removed using the <xref:System.Windows.Automation.CacheRequest.Pop%2A> method.</span></span> <span data-ttu-id="a3e4e-165">如果尝试删除不是当前请求的请求，将导致异常。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-165">Attempting to remove a request that is not the current one results in an exception.</span></span>  
  
 <span data-ttu-id="a3e4e-166">除非要嵌套缓存请求，否则最好使用 <xref:System.Windows.Automation.CacheRequest.Activate%2A> 将请求放在堆栈上。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-166">Unless you are nesting cache requests, it is preferable to use <xref:System.Windows.Automation.CacheRequest.Activate%2A> to place the request on the stack.</span></span> <span data-ttu-id="a3e4e-167">原因在于，你可以在 <xref:System.Windows.Automation.CacheRequest.Activate%2A> `using` Visual Basic) 的块 (中使用 `Using` ，从而确保即使引发了异常，也可以从堆栈中弹出请求。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-167">The reason is that you can use <xref:System.Windows.Automation.CacheRequest.Activate%2A> within a `using` block (`Using` in Visual Basic), ensuring that the request is popped off the stack even if an exception is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3e4e-168">下面的示例演示如何使用停用 <xref:System.Windows.Automation.CacheRequest> <xref:System.Windows.Automation.CacheRequest.Pop%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-168">The following example shows how to deactivate a <xref:System.Windows.Automation.CacheRequest> by using <xref:System.Windows.Automation.CacheRequest.Pop%2A>.</span></span>  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a3e4e-169">尝试移除的缓存请求不是最后压入堆栈的堆栈请求。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-169">An attempt was made to remove a cache request that was not the last one pushed onto the stack.</span></span></exception>
        <altmember cref="M:System.Windows.Automation.CacheRequest.Push" />
        <related type="Article" href="/dotnet/framework/ui-automation/caching-in-ui-automation-clients"><span data-ttu-id="a3e4e-170">在 UI 自动化客户端中缓存</span><span class="sxs-lookup"><span data-stu-id="a3e4e-170">Caching in UI Automation Clients</span></span></related>
        <related type="Article" href="/dotnet/framework/ui-automation/use-caching-in-ui-automation"><span data-ttu-id="a3e4e-171">在 UI 自动化中使用缓存</span><span class="sxs-lookup"><span data-stu-id="a3e4e-171">Use Caching in UI Automation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Push">
      <MemberSignature Language="C#" Value="public void Push ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Push() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Push" />
      <MemberSignature Language="VB.NET" Value="Public Sub Push ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Push();" />
      <MemberSignature Language="F#" Value="member this.Push : unit -&gt; unit" Usage="cacheRequest.Push " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3e4e-172">将 <see cref="T:System.Windows.Automation.CacheRequest" /> 压入内部状态堆栈，并使它成为当前线程中的活动请求。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-172">Places the <see cref="T:System.Windows.Automation.CacheRequest" /> on the internal state stack, making it the active request on the current thread.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3e4e-173"><xref:System.Windows.Automation.CacheRequest>可以将多个对象置于状态堆栈上。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-173">Multiple <xref:System.Windows.Automation.CacheRequest> objects can be placed onto the state stack.</span></span> <span data-ttu-id="a3e4e-174">必须按推送缓存请求的顺序将其从堆栈中移除;否则， <xref:System.InvalidOperationException> 将引发异常。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-174">Cache requests must be removed from the stack in the order they were pushed on; otherwise, an <xref:System.InvalidOperationException> exception is raised.</span></span>  
  
 <span data-ttu-id="a3e4e-175">除非要嵌套缓存请求，否则最好使用 <xref:System.Windows.Automation.CacheRequest.Activate%2A> 将请求放在堆栈上。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-175">Unless you are nesting cache requests, it is preferable to use <xref:System.Windows.Automation.CacheRequest.Activate%2A> to place the request on the stack.</span></span> <span data-ttu-id="a3e4e-176">原因在于，你可以在 <xref:System.Windows.Automation.CacheRequest.Activate%2A> `using` Visual Basic) 的块 (中使用 `Using` ，从而确保即使引发了异常，也可以从堆栈中弹出请求。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-176">The reason is that you can use <xref:System.Windows.Automation.CacheRequest.Activate%2A> within a `using` block (`Using` in Visual Basic), ensuring that the request is popped off the stack even if an exception is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3e4e-177">下面的示例演示如何 <xref:System.Windows.Automation.CacheRequest> 使用激活 <xref:System.Windows.Automation.CacheRequest.Push%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-177">The following example shows how to activate a <xref:System.Windows.Automation.CacheRequest> by using <xref:System.Windows.Automation.CacheRequest.Push%2A>.</span></span>  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.CacheRequest.Pop" />
        <related type="Article" href="/dotnet/framework/ui-automation/caching-in-ui-automation-clients"><span data-ttu-id="a3e4e-178">在 UI 自动化客户端中缓存</span><span class="sxs-lookup"><span data-stu-id="a3e4e-178">Caching in UI Automation Clients</span></span></related>
        <related type="Article" href="/dotnet/framework/ui-automation/use-caching-in-ui-automation"><span data-ttu-id="a3e4e-179">在 UI 自动化中使用缓存</span><span class="sxs-lookup"><span data-stu-id="a3e4e-179">Use Caching in UI Automation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TreeFilter">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Condition TreeFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.Condition TreeFilter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.CacheRequest.TreeFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property TreeFilter As Condition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::Condition ^ TreeFilter { System::Windows::Automation::Condition ^ get(); void set(System::Windows::Automation::Condition ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TreeFilter : System.Windows.Automation.Condition with get, set" Usage="System.Windows.Automation.CacheRequest.TreeFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Condition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3e4e-180">获取或设置一个值，该值指定缓存时要使用的 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 元素树的视图。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-180">Gets or sets a value specifying the view of the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element tree to use when caching.</span></span></summary>
        <value><span data-ttu-id="a3e4e-181">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 元素树的视图。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-181">The view of the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element tree.</span></span> <span data-ttu-id="a3e4e-182">默认视图为 <see cref="F:System.Windows.Automation.Automation.ControlViewCondition" />。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-182">The default view is <see cref="F:System.Windows.Automation.Automation.ControlViewCondition" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3e4e-183">有关元素树的视图的其他信息 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] ，请参阅 [UI 自动化树概述](/dotnet/framework/ui-automation/ui-automation-tree-overview)。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-183">For additional information on views of the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element tree, see [UI Automation Tree Overview](/dotnet/framework/ui-automation/ui-automation-tree-overview).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3e4e-184">在下面的示例中，将 <xref:System.Windows.Automation.CacheRequest.TreeFilter%2A> 设置为， <xref:System.Windows.Automation.Automation.RawViewCondition> 以便对所有元素执行缓存，而不管它们是内容视图还是控件视图的一部分。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-184">In the following example, <xref:System.Windows.Automation.CacheRequest.TreeFilter%2A> is set to <xref:System.Windows.Automation.Automation.RawViewCondition> so that caching is done for all elements, regardless of whether they are part of the content view or the control view.</span></span>  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.Automation.ContentViewCondition" />
        <related type="Article" href="/dotnet/framework/ui-automation/caching-in-ui-automation-clients"><span data-ttu-id="a3e4e-185">在 UI 自动化客户端中缓存</span><span class="sxs-lookup"><span data-stu-id="a3e4e-185">Caching in UI Automation Clients</span></span></related>
        <related type="Article" href="/dotnet/framework/ui-automation/use-caching-in-ui-automation"><span data-ttu-id="a3e4e-186">在 UI 自动化中使用缓存</span><span class="sxs-lookup"><span data-stu-id="a3e4e-186">Use Caching in UI Automation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TreeScope">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.TreeScope TreeScope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.TreeScope TreeScope" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.CacheRequest.TreeScope" />
      <MemberSignature Language="VB.NET" Value="Public Property TreeScope As TreeScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::TreeScope TreeScope { System::Windows::Automation::TreeScope get(); void set(System::Windows::Automation::TreeScope value); };" />
      <MemberSignature Language="F#" Value="member this.TreeScope : System.Windows.Automation.TreeScope with get, set" Usage="System.Windows.Automation.CacheRequest.TreeScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.TreeScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3e4e-187">获取或设置一个值，该值指定是仅对子树的根进行缓存，还是也对其子级或子代进行缓存。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-187">Gets or sets a value that specifies whether caching is done only for the root of the subtree, or also for its children or descendants.</span></span></summary>
        <value><span data-ttu-id="a3e4e-188">一个或多个 <see cref="F:System.Windows.Automation.TreeScope.Element" />、<see cref="F:System.Windows.Automation.TreeScope.Children" />、<see cref="F:System.Windows.Automation.TreeScope.Descendants" /> 或 <see cref="F:System.Windows.Automation.TreeScope.Subtree" />。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-188">One or more of <see cref="F:System.Windows.Automation.TreeScope.Element" />, <see cref="F:System.Windows.Automation.TreeScope.Children" />, <see cref="F:System.Windows.Automation.TreeScope.Descendants" />, or <see cref="F:System.Windows.Automation.TreeScope.Subtree" />.</span></span> <span data-ttu-id="a3e4e-189">默认值为 <see cref="F:System.Windows.Automation.TreeScope.Element" />。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-189">The default value is <see cref="F:System.Windows.Automation.TreeScope.Element" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3e4e-190">缓存的作用域与要提取的对象或对象相关，而不是与在其上调用或的对象相关 <xref:System.Windows.Automation.AutomationElement.FindFirst%2A> <xref:System.Windows.Automation.AutomationElement.FindAll%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-190">The scope of caching is in relation to the object or objects being fetched, not in relation to the object on which <xref:System.Windows.Automation.AutomationElement.FindFirst%2A> or <xref:System.Windows.Automation.AutomationElement.FindAll%2A> is called.</span></span> <span data-ttu-id="a3e4e-191">请参阅示例。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-191">See the example.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3e4e-192">在下面的示例中，当 <xref:System.Windows.Automation.CacheRequest> 处于活动状态且为时，从父窗口元素获取一个列表框元素 <xref:System.Windows.Automation.CacheRequest.TreeScope%2A> <xref:System.Windows.Automation.TreeScope.Children> 。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-192">In the following example, a list box element is obtained from the parent window element while a <xref:System.Windows.Automation.CacheRequest> is active and <xref:System.Windows.Automation.CacheRequest.TreeScope%2A> is <xref:System.Windows.Automation.TreeScope.Children>.</span></span> <span data-ttu-id="a3e4e-193">子元素的指定属性 (即，) 的列表项存储在缓存中，可以从列表框的中进行检索 <xref:System.Windows.Automation.AutomationElement.CachedChildren%2A> 。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-193">The specified properties of the child elements (that is, the list items) are stored in the cache and can be retrieved from the <xref:System.Windows.Automation.AutomationElement.CachedChildren%2A> of the list box.</span></span>  
  
 [!code-csharp[UIAClient_snip#119](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#119)]
 [!code-vb[UIAClient_snip#119](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#119)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a3e4e-194">尝试将该属性设置为 <see cref="F:System.Windows.Automation.TreeScope.Parent" /> 或 <see cref="F:System.Windows.Automation.TreeScope.Ancestors" />。</span><span class="sxs-lookup"><span data-stu-id="a3e4e-194">An attempt was made to set the property to <see cref="F:System.Windows.Automation.TreeScope.Parent" /> or <see cref="F:System.Windows.Automation.TreeScope.Ancestors" />.</span></span></exception>
        <related type="Article" href="/dotnet/framework/ui-automation/caching-in-ui-automation-clients"><span data-ttu-id="a3e4e-195">在 UI 自动化客户端中缓存</span><span class="sxs-lookup"><span data-stu-id="a3e4e-195">Caching in UI Automation Clients</span></span></related>
        <related type="Article" href="/dotnet/framework/ui-automation/use-caching-in-ui-automation"><span data-ttu-id="a3e4e-196">在 UI 自动化中使用缓存</span><span class="sxs-lookup"><span data-stu-id="a3e4e-196">Use Caching in UI Automation</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
