<Type Name="TransformPatternIdentifiers" FullName="System.Windows.Automation.TransformPatternIdentifiers">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0ce379d6bdf5cd4c86df2b309e754a65d240f2d2" /><Meta Name="ms.sourcegitcommit" Value="9f423345753728e8cad38d4a22663a109e69ea91" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/04/2021" /><Meta Name="ms.locfileid" Value="102094187" /></Metadata><TypeSignature Language="C#" Value="public static class TransformPatternIdentifiers" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit TransformPatternIdentifiers extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.TransformPatternIdentifiers" />
  <TypeSignature Language="VB.NET" Value="Public Class TransformPatternIdentifiers" />
  <TypeSignature Language="C++ CLI" Value="public ref class TransformPatternIdentifiers abstract sealed" />
  <TypeSignature Language="F#" Value="type TransformPatternIdentifiers = class" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationTypes</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>包含用作 <see cref="T:System.Windows.Automation.Provider.ITransformProvider" /> 的标识符的值。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 这些值由 UI 自动化提供程序使用。 UI 自动化客户端应用程序应在中使用等效字段 <xref:System.Windows.Automation.TransformPattern> 。  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-control-patterns-overview">UI 自动化控件模式概述</related>
    <related type="Article" href="/dotnet/framework/ui-automation/ui-automation-providers-overview">UI 自动化提供程序概述</related>
    <related type="Article" href="/dotnet/framework/ui-automation/support-control-patterns-in-a-ui-automation-provider">在 UI 自动化提供程序中支持控件模式</related>
    <related type="Article" href="/dotnet/framework/ui-automation/implementing-the-ui-automation-transform-control-pattern">实现 UI 自动化 Transform 控件模式</related>
  </Docs>
  <Members>
    <Member MemberName="CanMoveProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty CanMoveProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty CanMoveProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.TransformPatternIdentifiers.CanMoveProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CanMoveProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ CanMoveProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CanMoveProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.TransformPatternIdentifiers.CanMoveProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanMove" /> 属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此值由 UI 自动化提供程序使用。 UI 自动化客户端应用程序应在中使用等效字段 <xref:System.Windows.Automation.TransformPattern> 。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/implementing-the-ui-automation-transform-control-pattern">实现 UI 自动化 Transform 控件模式</related>
      </Docs>
    </Member>
    <Member MemberName="CanResizeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty CanResizeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty CanResizeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.TransformPatternIdentifiers.CanResizeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CanResizeProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ CanResizeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CanResizeProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.TransformPatternIdentifiers.CanResizeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanResize" /> 属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此值由 UI 自动化提供程序使用。 UI 自动化客户端应用程序应在中使用等效字段 <xref:System.Windows.Automation.TransformPattern> 。  
  
 在支持拆分窗格的控件上调用此方法时，此方法可能会影响调整其他连续窗格的副作用。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/implementing-the-ui-automation-transform-control-pattern">实现 UI 自动化 Transform 控件模式</related>
      </Docs>
    </Member>
    <Member MemberName="CanRotateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty CanRotateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty CanRotateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.TransformPatternIdentifiers.CanRotateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CanRotateProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ CanRotateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CanRotateProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.TransformPatternIdentifiers.CanRotateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanRotate" /> 属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此值由 UI 自动化提供程序使用。 UI 自动化客户端应用程序应在中使用等效字段 <xref:System.Windows.Automation.TransformPattern> 。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/implementing-the-ui-automation-transform-control-pattern">实现 UI 自动化 Transform 控件模式</related>
      </Docs>
    </Member>
    <Member MemberName="Pattern">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationPattern Pattern;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationPattern Pattern" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.TransformPatternIdentifiers.Pattern" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Pattern As AutomationPattern " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationPattern ^ Pattern;" />
      <MemberSignature Language="F#" Value=" staticval mutable Pattern : System.Windows.Automation.AutomationPattern" Usage="System.Windows.Automation.TransformPatternIdentifiers.Pattern" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationPattern</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="T:System.Windows.Automation.TransformPattern" /> 控件模式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此值由 UI 自动化提供程序使用。 UI 自动化客户端应用程序应在中使用等效字段 <xref:System.Windows.Automation.TransformPattern> 。  
  
  (ID) 的模式标识符传递给方法，如 <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> ，用于从指定的 UI 自动化元素检索相关的控件模式。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/ui-automation/implementing-the-ui-automation-transform-control-pattern">实现 UI 自动化 Transform 控件模式</related>
      </Docs>
    </Member>
  </Members>
</Type>
