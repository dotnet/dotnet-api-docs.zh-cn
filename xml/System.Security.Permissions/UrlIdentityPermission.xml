<Type Name="UrlIdentityPermission" FullName="System.Security.Permissions.UrlIdentityPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ec68b235e3e56479a4953318991629d5acd7e135" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86750345" /></Metadata><TypeSignature Language="C#" Value="public sealed class UrlIdentityPermission : System.Security.CodeAccessPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit UrlIdentityPermission extends System.Security.CodeAccessPermission" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.UrlIdentityPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UrlIdentityPermission&#xA;Inherits CodeAccessPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class UrlIdentityPermission sealed : System::Security::CodeAccessPermission" />
  <TypeSignature Language="F#" Value="type UrlIdentityPermission = class&#xA;    inherit CodeAccessPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit UrlIdentityPermission extends System.Security.CodeAccessPermission" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>为代码的来源 URL 定义标识权限。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将考虑完整的 URL，包括 (HTTP、HTTPS、FTP) 和文件的协议。 例如， `http://www.fourthcoffee.com/process/grind.htm` 是一个完整的 URL。  
  
 Url 可以完全与最终位置中的通配符匹配，例如： `http://www.fourthcoffee.com/process/*` 。 Url 还可以 \* 在点分隔符上包含通配符 ( "" ) 前缀。 例如，URL 名称字符串 `http://www.fourthcoffee.com/process/grind.htm/` 是和的子集 `http://*.fourthcoffee.com/process/grind.htm/` `http://*.com/process/grind.htm/` 。  
  
> [!IMPORTANT]
>  从开始 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] ，不使用标识权限。  
>   
>  在 .NET Framework 版本1.0 和1.1 中，即使调用程序集是完全受信任的，对标识权限的要求仍有效。 也就是说，尽管调用程序集具有完全信任，但如果程序集不满足要求的条件，则标识权限的请求会失败。 从 .NET Framework 版本2.0 开始，如果调用程序集具有完全信任，则标识权限要求将无效。 也就是说，如果程序集已被授予完全信任，则标识的请求始终会成功，无论程序集的标识如何都是如此。 这将确保所有权限的一致性，从而不会将标识权限视为一种特殊情况。  
  
> [!NOTE]
>  在之前 .NET Framework 版本中 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] ，你可以使用 <xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=nameWithType> 方法来防止无意中通过受信任代码访问系统资源。 <xref:System.Security.CodeAccessPermission.Deny%2A> 现已过时，并且现在仅由为程序集授予的权限集确定对资源的访问权限。 若要限制对文件的访问，必须在沙盒中运行部分受信任的代码，并仅向该代码允许访问的资源分配权限。 有关在沙盒中运行应用程序的信息，请参阅 [如何：在沙盒中运行部分受信任的代码](/dotnet/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox)。  
  
> [!NOTE]
>  在 .NET Framework 版本1.0 和1.1 中，标识权限不能具有 <xref:System.Security.Permissions.PermissionState.Unrestricted> 权限状态值。 从 .NET Framework 版本2.0 开始，标识权限可以具有任何权限状态值。 这意味着在2.0 及更高版本中，标识权限与实现该接口的权限具有相同的行为 <xref:System.Security.Permissions.IUnrestrictedPermission> 。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.UrlIdentityPermissionAttribute" />
    <altmember cref="T:System.Security.Policy.Url" />
    <altmember cref="T:System.Security.Policy.UrlMembershipCondition" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UrlIdentityPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UrlIdentityPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UrlIdentityPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.UrlIdentityPermission : System.Security.Permissions.PermissionState -&gt; System.Security.Permissions.UrlIdentityPermission" Usage="new System.Security.Permissions.UrlIdentityPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state"><see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</param>
        <summary>使用指定的 <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> 初始化 <see cref="T:System.Security.Permissions.PermissionState" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 创建完全受限制的 (`None`) 或 `Unrestricted` 权限。  
  
> [!NOTE]
>  在 .NET Framework 版本1.0 和1.1 中，标识权限不能具有 <xref:System.Security.Permissions.PermissionState.Unrestricted> 权限状态值。 从 .NET Framework 版本2.0 开始，标识权限可以具有任何权限状态值。 这意味着在2.0 及更高版本中，标识权限与实现该接口的权限具有相同的行为 <xref:System.Security.Permissions.IUnrestrictedPermission> 。 也就是说，如果程序集已被授予完全信任，则标识的请求始终会成功，无论程序集的标识如何都是如此。  
  
 在 .NET Framework 版本1.0 和1.1 中，对标识权限的要求有效，即使调用程序集是完全受信任的。 也就是说，尽管调用程序集具有完全信任，但如果程序集不满足要求的条件，则标识权限的请求会失败。 从 .NET Framework 版本2.0 开始，如果调用程序集具有完全信任，则标识权限要求将无效。 这将确保所有权限的一致性，从而不会将标识权限视为一种特殊情况。  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Security.Permissions.UrlIdentityPermission.%23ctor%28System.Security.Permissions.PermissionState%29?displayProperty=nameWithType> 构造函数。  
  
 [!code-cpp[System.Security.Permissions.UrlIdentityPermission#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UrlIdentityPermission/CPP/urlidentity.cpp#7)]
 [!code-csharp[System.Security.Permissions.UrlIdentityPermission#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UrlIdentityPermission/CS/urlidentity.cs#7)]
 [!code-vb[System.Security.Permissions.UrlIdentityPermission#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UrlIdentityPermission/VB/urlidentity.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="state" /> 参数不是 <see cref="T:System.Security.Permissions.PermissionState" /> 的有效值。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UrlIdentityPermission (string site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UrlIdentityPermission.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (site As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UrlIdentityPermission(System::String ^ site);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.UrlIdentityPermission : string -&gt; System.Security.Permissions.UrlIdentityPermission" Usage="new System.Security.Permissions.UrlIdentityPermission site" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="site" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="site">URL 或通配符表达式。</param>
        <summary>初始化 <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> 类的新实例，以表示 <paramref name="site" /> 所描述的 URL 标识。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将考虑完整的 URL，包括 (HTTP、HTTPS、FTP) 和文件的协议，例如： `http://www.fourthcoffee.com/process/grind.htm/` 。  
  
 Url 可以完全与最终位置中的通配符匹配，例如： `http://www.fourthcoffee.com/process/*` 。 Url 还可以 \* 在点分隔符上包含通配符 ( "" ) 前缀。 例如，URL 名称字符串 `http://www.fourthcoffee.com/process/grind.htm/` 是和的子集 `http://*.fourthcoffee.com/process/grind.htm/` `http://*.com/process/grind.htm/` 。  
  
> [!NOTE]
>  从 .NET Framework 版本2.0 开始，出于性能方面的考虑，在创建新类实例时，无效的 URL 不会导致自变量异常。  当执行 (Union、Intersect 或 IsSubsetOf) 中的一个集操作时，将发生参数异常。  权限的需求将导致 <xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A> 安全基础结构调用。 由于参数异常，该请求将失败，从而导致 <xref:System.Security.SecurityException> 引发。 在这种情况下， <xref:System.ArgumentException> 将不会显示原始异常。  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Security.Permissions.UrlIdentityPermission.%23ctor%28System.String%29?displayProperty=nameWithType> 构造函数。  
  
 [!code-cpp[System.Security.Permissions.UrlIdentityPermission#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UrlIdentityPermission/CPP/urlidentity.cpp#8)]
 [!code-csharp[System.Security.Permissions.UrlIdentityPermission#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UrlIdentityPermission/CS/urlidentity.cs#8)]
 [!code-vb[System.Security.Permissions.UrlIdentityPermission#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UrlIdentityPermission/VB/urlidentity.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="site" /> 参数为 <see langword="null" />。</exception>
        <exception cref="T:System.FormatException"><paramref name="site" /> 参数的长度为零。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="site" /> 参数的 URL、目录或的站点部分无效。</exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UrlIdentityPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Security.IPermission" Usage="urlIdentityPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建并返回当前权限的相同副本。</summary>
        <returns>当前权限的副本。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 权限的副本表示对资源的相同访问权限。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement esd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement esd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UrlIdentityPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (esd As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ esd);" />
      <MemberSignature Language="F#" Value="override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="urlIdentityPermission.FromXml esd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="esd" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="esd">用于重新构造权限的 XML 编码。</param>
        <summary>从 XML 编码重新构造具有指定状态的权限。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="esd" /> 参数为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="esd" /> 参数不是有效的权限元素。  
  
- 或 - 
<paramref name="esd" /> 参数的版本号无效。</exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UrlIdentityPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="urlIdentityPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">要与当前权限相交的权限。 它必须与当前权限属于同一类型。</param>
        <summary>创建并返回一个权限，该权限是当前权限与指定权限的交集。</summary>
        <returns>表示当前权限和指定权限的交集的一个新权限。 如果交集为空，则此新权限为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 两个权限的交集是描述对它们共同描述的 Url 的访问权限的权限。 只有同时传递两个原始权限的请求才会传递交集。 例如，表示访问权限的权限的交集 `http://www.fourthcoffee.com/process/grind.htm` 以及表示访问权限的权限 `http://www.fourthcoffee.com/*` 是表示对的访问权限的权限 `http://www.fourthcoffee.com/process/grind.htm` 。  
  
 <xref:System.Security.Permissions.UrlIdentityPermission><xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A> <xref:System.Security.Permissions.UrlIdentityPermission.Intersect%2A> <xref:System.Security.Permissions.UrlIdentityPermission.Union%2A> 仅当当前权限与指定权限对象相等时，或者当其中一个权限使用通配符运算符 ( "" ) 时，才支持 (、和) 设置操作 \* 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。  
  
- 或 - 
此 Url 属性不是有效的 URL。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="urlIdentityPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">将要测试子集关系的权限。 此权限必须与当前权限属于同一类型。</param>
        <summary>确定当前权限是否为指定权限的子集。</summary>
        <returns>如果当前权限是指定权限的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果当前权限标识对完全包含在指定权限中的 URL 的访问，则当前权限是指定权限的子集。 例如，表示对的访问权限是表示对的访问权限的 `http://www.fourthcoffee.com/process/grind.htm` 权限的子集 `http://www.fourthcoffee.com/*` 。 如果此方法返回 `true` ，则当前权限表示对受保护资源的访问权限比指定权限更多。  
  
 <xref:System.Security.Permissions.UrlIdentityPermission><xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A> <xref:System.Security.Permissions.UrlIdentityPermission.Intersect%2A> <xref:System.Security.Permissions.UrlIdentityPermission.Union%2A> 仅当当前权限等于指定权限时，或者当其中一个权限使用通配符运算符 ( "" ) 时，才支持 (、和) 设置操作 \* 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。  
  
- 或 - 
此 Url 属性不是有效的 URL。</exception>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UrlIdentityPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="urlIdentityPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建权限及其当前状态的 XML 编码。</summary>
        <returns>权限的 XML 编码，包括任何状态信息。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UrlIdentityPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="urlIdentityPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">与当前权限合并的权限。 它必须与当前权限属于同一类型。</param>
        <summary>创建一个权限，该权限是当前权限与指定权限的并集。</summary>
        <returns>表示同时兼具当前权限和指定权限的新权限。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用方法的结果 <xref:System.Security.Permissions.UrlIdentityPermission.Union%2A> 是一个权限，它表示由当前权限表示的对 url 的访问权限，以及对由指定权限表示的 url 的访问权限。  
  
 <xref:System.Security.Permissions.UrlIdentityPermission> <xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A> <xref:System.Security.Permissions.UrlIdentityPermission.Intersect%2A> <xref:System.Security.Permissions.UrlIdentityPermission.Union%2A> 仅当当前权限等于指定权限时，或者当其中一个权限使用通配符运算符 ( ") " 时，或者 \* 其中一个是另一个的子集时，类才支持 set 操作、和) 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。  
  
- 或 - 
<see cref="P:System.Security.Permissions.UrlIdentityPermission.Url" /> 属性不是有效的 URL。  
  
- 或 - 
两个权限不相等，而且其中一个不是另一个的子集。</exception>
        <exception cref="T:System.NotSupportedException">操作不明确，因为权限表示多个标识。</exception>
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public string Url { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Url" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.UrlIdentityPermission.Url" />
      <MemberSignature Language="VB.NET" Value="Public Property Url As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Url { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Url : string with get, set" Usage="System.Security.Permissions.UrlIdentityPermission.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置表示 Internet 代码的标识的 URL。</summary>
        <value>表示 Internet 代码的标识的 URL。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将考虑完整的 URL，包括 (HTTP、HTTPS、FTP) 和文件的协议，例如： `http://www.fourthcoffee.com/process/grind.htm/` 。  
  
 Url 可以完全与最终位置中的通配符匹配，例如： `http://www.fourthcoffee.com/process/*` 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">无法检索 URL，因为它的标识不明确。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
