<Type Name="ReflectionPermission" FullName="System.Security.Permissions.ReflectionPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="df49a42c35a857f6f33f25b7cc0eee60873f99e9" /><Meta Name="ms.sourcegitcommit" Value="5484acfd78fc29edb48fc1ca6925046c4672954a" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/16/2020" /><Meta Name="ms.locfileid" Value="90701355" /></Metadata><TypeSignature Language="C#" Value="public sealed class ReflectionPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ReflectionPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.ReflectionPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ReflectionPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReflectionPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type ReflectionPermission = class&#xA;    inherit CodeAccessPermission&#xA;    interface IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ReflectionPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0">
      <AttributeName Language="C#">[System.Obsolete("Code Access Security is not supported or honored by the runtime.", DiagnosticId="SYSLIB0003", UrlFormat="https://aka.ms/dotnet-warnings/{0}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("Code Access Security is not supported or honored by the runtime.", DiagnosticId="SYSLIB0003", UrlFormat="https://aka.ms/dotnet-warnings/{0}")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d3960-101">通过 <see cref="N:System.Reflection" /> API，控制对非公共类型和成员的访问。</span><span class="sxs-lookup"><span data-stu-id="d3960-101">Controls access to non-public types and members through the <see cref="N:System.Reflection" /> APIs.</span></span> <span data-ttu-id="d3960-102">控制 <see cref="N:System.Reflection.Emit" /> API 的一些功能。</span><span class="sxs-lookup"><span data-stu-id="d3960-102">Controls some features of the <see cref="N:System.Reflection.Emit" /> APIs.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3960-103">如果没有 <xref:System.Security.Permissions.ReflectionPermission> ，代码可以使用反射来仅访问对象的公共成员。</span><span class="sxs-lookup"><span data-stu-id="d3960-103">Without <xref:System.Security.Permissions.ReflectionPermission>, code can use reflection to access only the public members of objects.</span></span> <span data-ttu-id="d3960-104">带有 <xref:System.Security.Permissions.ReflectionPermission> 和适当标志的代码 <xref:System.Security.Permissions.ReflectionPermissionFlag> 可以访问 `protected` 对象的和 `private` 成员。</span><span class="sxs-lookup"><span data-stu-id="d3960-104">Code with <xref:System.Security.Permissions.ReflectionPermission> and the appropriate <xref:System.Security.Permissions.ReflectionPermissionFlag> flags can access the `protected` and `private` members of objects.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d3960-105">由于 <xref:System.Security.Permissions.ReflectionPermission> 可以提供对非公共类型和成员的访问权限，因此，我们建议你不要授予 <xref:System.Security.Permissions.ReflectionPermission> Internet 代码， <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 标志除外。</span><span class="sxs-lookup"><span data-stu-id="d3960-105">Because <xref:System.Security.Permissions.ReflectionPermission> can provide access to non-public types and members, we recommend that you do not grant <xref:System.Security.Permissions.ReflectionPermission> to Internet code, except with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="d3960-106"><xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess> 允许访问非公共成员，限制为非公共成员的授予集必须等于或为访问非公共成员的代码的授予集的授予集，或其子集。</span><span class="sxs-lookup"><span data-stu-id="d3960-106"><xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess> allows access to non-public members, with the restriction that the grant set of the non-public members must be equal to, or a subset of, the grant set of the code that accesses the non-public members.</span></span>  
  
 <span data-ttu-id="d3960-107">反射发出的某些功能（如发出调试符号）需要 <xref:System.Security.Permissions.ReflectionPermission> 带有标志的 <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="d3960-107">Certain features of reflection emit, such as emitting debug symbols, require <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="d3960-108">有关详细信息，请参见 <xref:System.Security.Permissions.ReflectionPermissionFlag> 枚举。</span><span class="sxs-lookup"><span data-stu-id="d3960-108">For more information, see the <xref:System.Security.Permissions.ReflectionPermissionFlag> enumeration.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.ReflectionPermissionFlag" />
    <altmember cref="T:System.Security.Permissions.ReflectionPermissionAttribute" />
    <related type="Article" href="/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection"><span data-ttu-id="d3960-109">反射的安全注意事项</span><span class="sxs-lookup"><span data-stu-id="d3960-109">Security Considerations for Reflection</span></span></related>
    <related type="Article" href="/dotnet/framework/reflection-and-codedom/security-issues-in-reflection-emit"><span data-ttu-id="d3960-110">反射发出中的安全问题</span><span class="sxs-lookup"><span data-stu-id="d3960-110">Security Issues in Reflection Emit</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d3960-111">初始化 <see cref="T:System.Security.Permissions.ReflectionPermission" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="d3960-111">Initializes a new instance of the <see cref="T:System.Security.Permissions.ReflectionPermission" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReflectionPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReflectionPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.ReflectionPermission : System.Security.Permissions.PermissionState -&gt; System.Security.Permissions.ReflectionPermission" Usage="new System.Security.Permissions.ReflectionPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="d3960-112"><see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="d3960-112">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</span></span></param>
        <summary><span data-ttu-id="d3960-113">根据指定，使用完全受限制或不受限制的权限初始化 <see cref="T:System.Security.Permissions.ReflectionPermission" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="d3960-113">Initializes a new instance of the <see cref="T:System.Security.Permissions.ReflectionPermission" /> class with either fully restricted or unrestricted permission as specified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3960-114">创建完全受限制的 (`None`) 或 `Unrestricted` 对元数据的访问。</span><span class="sxs-lookup"><span data-stu-id="d3960-114">Creates either fully restricted (`None`) or `Unrestricted` access to metadata.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3960-115">下面的代码示例演示如何使用 <xref:System.Security.Permissions.ReflectionPermission.%23ctor%28System.Security.Permissions.PermissionState%29?displayProperty=nameWithType> 构造函数。</span><span class="sxs-lookup"><span data-stu-id="d3960-115">The following code example shows the use of the <xref:System.Security.Permissions.ReflectionPermission.%23ctor%28System.Security.Permissions.PermissionState%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="d3960-116">此示例是为类提供的更大示例的一部分 <xref:System.Security.Permissions.ReflectionPermission> 。</span><span class="sxs-lookup"><span data-stu-id="d3960-116">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#7)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d3960-117"><paramref name="state" /> 参数不是 <see cref="T:System.Security.Permissions.PermissionState" /> 的有效值。</span><span class="sxs-lookup"><span data-stu-id="d3960-117">The <paramref name="state" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.PermissionState" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReflectionPermission (System.Security.Permissions.ReflectionPermissionFlag flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.ReflectionPermissionFlag flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.#ctor(System.Security.Permissions.ReflectionPermissionFlag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (flag As ReflectionPermissionFlag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReflectionPermission(System::Security::Permissions::ReflectionPermissionFlag flag);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.ReflectionPermission : System.Security.Permissions.ReflectionPermissionFlag -&gt; System.Security.Permissions.ReflectionPermission" Usage="new System.Security.Permissions.ReflectionPermission flag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="flag" Type="System.Security.Permissions.ReflectionPermissionFlag" />
      </Parameters>
      <Docs>
        <param name="flag"><span data-ttu-id="d3960-118"><see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="d3960-118">One of the <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> values.</span></span></param>
        <summary><span data-ttu-id="d3960-119">使用指定的访问权限初始化 <see cref="T:System.Security.Permissions.ReflectionPermission" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="d3960-119">Initializes a new instance of the <see cref="T:System.Security.Permissions.ReflectionPermission" /> class with the specified access.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d3960-120">下面的代码示例演示如何使用 <xref:System.Security.Permissions.ReflectionPermission.%23ctor%28System.Security.Permissions.ReflectionPermissionFlag%29?displayProperty=nameWithType> 构造函数。</span><span class="sxs-lookup"><span data-stu-id="d3960-120">The following code example shows the use of the <xref:System.Security.Permissions.ReflectionPermission.%23ctor%28System.Security.Permissions.ReflectionPermissionFlag%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="d3960-121">此示例是为类提供的更大示例的一部分 <xref:System.Security.Permissions.ReflectionPermission> 。</span><span class="sxs-lookup"><span data-stu-id="d3960-121">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#8)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d3960-122"><paramref name="flag" /> 参数不是 <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> 的有效值。</span><span class="sxs-lookup"><span data-stu-id="d3960-122">The <paramref name="flag" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Security.IPermission" Usage="reflectionPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d3960-123">创建并返回当前权限的相同副本。</span><span class="sxs-lookup"><span data-stu-id="d3960-123">Creates and returns an identical copy of the current permission.</span></span></summary>
        <returns><span data-ttu-id="d3960-124">当前权限的副本。</span><span class="sxs-lookup"><span data-stu-id="d3960-124">A copy of the current permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3960-125">权限的副本表示对资源的相同访问权限。</span><span class="sxs-lookup"><span data-stu-id="d3960-125">A copy of a permission represents the same access to resources as the original permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3960-126">下面的代码示例演示方法的行为 <xref:System.Security.Permissions.ReflectionPermission.Copy%2A> 。</span><span class="sxs-lookup"><span data-stu-id="d3960-126">The following code example shows the behavior of the <xref:System.Security.Permissions.ReflectionPermission.Copy%2A> method.</span></span> <span data-ttu-id="d3960-127">此示例是为类提供的更大示例的一部分 <xref:System.Security.Permissions.ReflectionPermission> 。</span><span class="sxs-lookup"><span data-stu-id="d3960-127">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d3960-128">此代码示例旨在显示方法的行为，而不是演示方法的用法。</span><span class="sxs-lookup"><span data-stu-id="d3960-128">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="d3960-129">通常，权限类的方法由安全基础结构使用;它们通常不在应用程序中使用。</span><span class="sxs-lookup"><span data-stu-id="d3960-129">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#5)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public System.Security.Permissions.ReflectionPermissionFlag Flags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Permissions.ReflectionPermissionFlag Flags" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.ReflectionPermission.Flags" />
      <MemberSignature Language="VB.NET" Value="Public Property Flags As ReflectionPermissionFlag" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Permissions::ReflectionPermissionFlag Flags { System::Security::Permissions::ReflectionPermissionFlag get(); void set(System::Security::Permissions::ReflectionPermissionFlag value); };" />
      <MemberSignature Language="F#" Value="member this.Flags : System.Security.Permissions.ReflectionPermissionFlag with get, set" Usage="System.Security.Permissions.ReflectionPermission.Flags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.ReflectionPermissionFlag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3960-130">获取或设置允许用于当前权限的反射类型。</span><span class="sxs-lookup"><span data-stu-id="d3960-130">Gets or sets the type of reflection allowed for the current permission.</span></span></summary>
        <value><span data-ttu-id="d3960-131">当前权限的设置标志。</span><span class="sxs-lookup"><span data-stu-id="d3960-131">The set flags for the current permission.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d3960-132">下面的代码示例演示属性的用法 <xref:System.Security.Permissions.ReflectionPermission.Flags%2A> 。</span><span class="sxs-lookup"><span data-stu-id="d3960-132">The following code example shows the use of the <xref:System.Security.Permissions.ReflectionPermission.Flags%2A> property.</span></span> <span data-ttu-id="d3960-133">此示例是为类提供的更大示例的一部分 <xref:System.Security.Permissions.ReflectionPermission> 。</span><span class="sxs-lookup"><span data-stu-id="d3960-133">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#2)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d3960-134">尝试将此属性设置为无效值。</span><span class="sxs-lookup"><span data-stu-id="d3960-134">An attempt is made to set this property to an invalid value.</span></span> <span data-ttu-id="d3960-135">有关有效值，请参阅 <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" />。</span><span class="sxs-lookup"><span data-stu-id="d3960-135">See <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> for the valid values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement esd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement esd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (esd As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ esd);" />
      <MemberSignature Language="F#" Value="override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="reflectionPermission.FromXml esd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="esd" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="esd"><span data-ttu-id="d3960-136">用于重新构造权限的 XML 编码。</span><span class="sxs-lookup"><span data-stu-id="d3960-136">The XML encoding to use to reconstruct the permission.</span></span></param>
        <summary><span data-ttu-id="d3960-137">从 XML 编码重新构造具有指定状态的权限。</span><span class="sxs-lookup"><span data-stu-id="d3960-137">Reconstructs a permission with a specified state from an XML encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d3960-138">下面的代码示例演示方法的行为 <xref:System.Security.Permissions.ReflectionPermission.FromXml%2A> 。</span><span class="sxs-lookup"><span data-stu-id="d3960-138">The following code example shows the behavior of the <xref:System.Security.Permissions.ReflectionPermission.FromXml%2A> method.</span></span> <span data-ttu-id="d3960-139">此示例是为类提供的更大示例的一部分 <xref:System.Security.Permissions.ReflectionPermission> 。</span><span class="sxs-lookup"><span data-stu-id="d3960-139">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d3960-140">此代码示例旨在显示方法的行为，而不是演示方法的用法。</span><span class="sxs-lookup"><span data-stu-id="d3960-140">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="d3960-141">通常，权限类的方法由安全基础结构使用;它们通常不在应用程序中使用。</span><span class="sxs-lookup"><span data-stu-id="d3960-141">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#6)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d3960-142"><paramref name="esd" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d3960-142">The <paramref name="esd" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d3960-143"><paramref name="esd" /> 参数不是有效的权限元素。</span><span class="sxs-lookup"><span data-stu-id="d3960-143">The <paramref name="esd" /> parameter is not a valid permission element.</span></span>  
  
<span data-ttu-id="d3960-144">- 或 -</span><span class="sxs-lookup"><span data-stu-id="d3960-144">-or-</span></span> 
<span data-ttu-id="d3960-145"><paramref name="esd" /> 参数的版本号无效。</span><span class="sxs-lookup"><span data-stu-id="d3960-145">The <paramref name="esd" /> parameter's version number is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="reflectionPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="d3960-146">要与当前权限相交的权限。</span><span class="sxs-lookup"><span data-stu-id="d3960-146">A permission to intersect with the current permission.</span></span> <span data-ttu-id="d3960-147">它必须与当前权限属于同一类型。</span><span class="sxs-lookup"><span data-stu-id="d3960-147">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="d3960-148">创建并返回一个权限，该权限是当前权限与指定权限的交集。</span><span class="sxs-lookup"><span data-stu-id="d3960-148">Creates and returns a permission that is the intersection of the current permission and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="d3960-149">表示当前权限和指定权限的交集的一个新权限。</span><span class="sxs-lookup"><span data-stu-id="d3960-149">A new permission that represents the intersection of the current permission and the specified permission.</span></span> <span data-ttu-id="d3960-150">如果交集为空，则此新权限为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d3960-150">This new permission is <see langword="null" /> if the intersection is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3960-151">两个权限的交集是描述它们共同描述的一组操作的权限。</span><span class="sxs-lookup"><span data-stu-id="d3960-151">The intersection of two permissions is a permission that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="d3960-152">只有同时传递两个原始权限的请求才会传递交集。</span><span class="sxs-lookup"><span data-stu-id="d3960-152">Only a demand that passes both original permissions will pass the intersection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3960-153">下面的代码示例演示方法的行为 <xref:System.Security.Permissions.ReflectionPermission.Intersect%2A> 。</span><span class="sxs-lookup"><span data-stu-id="d3960-153">The following code example shows the behavior of the <xref:System.Security.Permissions.ReflectionPermission.Intersect%2A> method.</span></span> <span data-ttu-id="d3960-154">此示例是为类提供的更大示例的一部分 <xref:System.Security.Permissions.ReflectionPermission> 。</span><span class="sxs-lookup"><span data-stu-id="d3960-154">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d3960-155">此代码示例旨在显示方法的行为，而不是演示方法的用法。</span><span class="sxs-lookup"><span data-stu-id="d3960-155">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="d3960-156">通常，权限类的方法由安全基础结构使用;它们通常不在应用程序中使用。</span><span class="sxs-lookup"><span data-stu-id="d3960-156">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#4)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d3960-157"><paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</span><span class="sxs-lookup"><span data-stu-id="d3960-157">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="reflectionPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="d3960-158">将要测试子集关系的权限。</span><span class="sxs-lookup"><span data-stu-id="d3960-158">A permission that is to be tested for the subset relationship.</span></span> <span data-ttu-id="d3960-159">此权限必须与当前权限属于同一类型。</span><span class="sxs-lookup"><span data-stu-id="d3960-159">This permission must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="d3960-160">确定当前权限是否为指定权限的子集。</span><span class="sxs-lookup"><span data-stu-id="d3960-160">Determines whether the current permission is a subset of the specified permission.</span></span></summary>
        <returns><span data-ttu-id="d3960-161">如果当前权限是指定权限的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d3960-161"><see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3960-162">如果当前权限指定的一组操作完全包含在指定权限中，则当前权限是指定权限的子集。</span><span class="sxs-lookup"><span data-stu-id="d3960-162">The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</span></span> <span data-ttu-id="d3960-163">例如，表示对 C:\example.txt 的访问权限的权限是表示 C：访问权限的权限的子集 \\ 。</span><span class="sxs-lookup"><span data-stu-id="d3960-163">For example, a permission that represents access to C:\example.txt is a subset of a permission that represents access to C:\\.</span></span> <span data-ttu-id="d3960-164">如果此方法返回 `true` ，则当前权限表示对受保护资源的访问权限比指定权限更多。</span><span class="sxs-lookup"><span data-stu-id="d3960-164">If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3960-165">下面的代码示例演示方法的行为 <xref:System.Security.Permissions.ReflectionPermission.IsSubsetOf%2A> 。</span><span class="sxs-lookup"><span data-stu-id="d3960-165">The following code example shows the behavior of the <xref:System.Security.Permissions.ReflectionPermission.IsSubsetOf%2A> method.</span></span> <span data-ttu-id="d3960-166">此示例是为类提供的更大示例的一部分 <xref:System.Security.Permissions.ReflectionPermission> 。</span><span class="sxs-lookup"><span data-stu-id="d3960-166">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d3960-167">此代码示例旨在显示方法的行为，而不是演示方法的用法。</span><span class="sxs-lookup"><span data-stu-id="d3960-167">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="d3960-168">通常，权限类的方法由安全基础结构使用;它们通常不在应用程序中使用。</span><span class="sxs-lookup"><span data-stu-id="d3960-168">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#2)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d3960-169"><paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</span><span class="sxs-lookup"><span data-stu-id="d3960-169">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="abstract member IsUnrestricted : unit -&gt; bool&#xA;override this.IsUnrestricted : unit -&gt; bool" Usage="reflectionPermission.IsUnrestricted " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="override this.IsUnrestricted : unit -&gt; bool" Usage="reflectionPermission.IsUnrestricted " FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d3960-170">返回一个值，该值指示当前权限是否不受限制。</span><span class="sxs-lookup"><span data-stu-id="d3960-170">Returns a value indicating whether the current permission is unrestricted.</span></span></summary>
        <returns><span data-ttu-id="d3960-171">如果当前权限不受限制，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d3960-171"><see langword="true" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3960-172">无限制的权限表示对受权限保护的任何资源和所有资源的访问权限。</span><span class="sxs-lookup"><span data-stu-id="d3960-172">An unrestricted permission represents access to any and all resources protected by the permission.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="reflectionPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d3960-173">创建权限及其当前状态的 XML 编码。</span><span class="sxs-lookup"><span data-stu-id="d3960-173">Creates an XML encoding of the permission and its current state.</span></span></summary>
        <returns><span data-ttu-id="d3960-174">权限的 XML 编码，包括任何状态信息。</span><span class="sxs-lookup"><span data-stu-id="d3960-174">An XML encoding of the permission, including any state information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d3960-175">下面的代码示例演示方法的行为 <xref:System.Security.Permissions.ReflectionPermission.ToXml%2A> 。</span><span class="sxs-lookup"><span data-stu-id="d3960-175">The following code example shows the behavior of the <xref:System.Security.Permissions.ReflectionPermission.ToXml%2A> method.</span></span> <span data-ttu-id="d3960-176">此示例是为类提供的更大示例的一部分 <xref:System.Security.Permissions.ReflectionPermission> 。</span><span class="sxs-lookup"><span data-stu-id="d3960-176">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d3960-177">此代码示例旨在显示方法的行为，而不是演示方法的用法。</span><span class="sxs-lookup"><span data-stu-id="d3960-177">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="d3960-178">通常，权限类的方法由安全基础结构使用;它们通常不在应用程序中使用。</span><span class="sxs-lookup"><span data-stu-id="d3960-178">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#6)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (other As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ other);" />
      <MemberSignature Language="F#" Value="override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="reflectionPermission.Union other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="d3960-179">与当前权限合并的权限。</span><span class="sxs-lookup"><span data-stu-id="d3960-179">A permission to combine with the current permission.</span></span> <span data-ttu-id="d3960-180">它必须与当前权限属于同一类型。</span><span class="sxs-lookup"><span data-stu-id="d3960-180">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="d3960-181">创建一个权限，该权限是当前权限与指定权限的并集。</span><span class="sxs-lookup"><span data-stu-id="d3960-181">Creates a permission that is the union of the current permission and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="d3960-182">表示同时兼具当前权限和指定权限的新权限。</span><span class="sxs-lookup"><span data-stu-id="d3960-182">A new permission that represents the union of the current permission and the specified permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3960-183">调用的结果 <xref:System.Security.Permissions.ReflectionPermission.Union%2A> 是一个权限，它表示当前权限和指定权限所表示的所有操作。</span><span class="sxs-lookup"><span data-stu-id="d3960-183">The result of a call to <xref:System.Security.Permissions.ReflectionPermission.Union%2A> is a permission that represents all the operations represented by both the current permission and the specified permission.</span></span> <span data-ttu-id="d3960-184">任何传递任意权限的需求都将传递其联合。</span><span class="sxs-lookup"><span data-stu-id="d3960-184">Any demand that passes either permission passes their union.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3960-185">下面的代码示例演示方法的行为 <xref:System.Security.Permissions.ReflectionPermission.Union%2A> 。</span><span class="sxs-lookup"><span data-stu-id="d3960-185">The following code example shows the behavior of the <xref:System.Security.Permissions.ReflectionPermission.Union%2A> method.</span></span> <span data-ttu-id="d3960-186">此示例是为类提供的更大示例的一部分 <xref:System.Security.Permissions.ReflectionPermission> 。</span><span class="sxs-lookup"><span data-stu-id="d3960-186">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d3960-187">此代码示例旨在显示方法的行为，而不是演示方法的用法。</span><span class="sxs-lookup"><span data-stu-id="d3960-187">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="d3960-188">通常，权限类的方法由安全基础结构使用;它们通常不在应用程序中使用。</span><span class="sxs-lookup"><span data-stu-id="d3960-188">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#3)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d3960-189"><paramref name="other" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</span><span class="sxs-lookup"><span data-stu-id="d3960-189">The <paramref name="other" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
