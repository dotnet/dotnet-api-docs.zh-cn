<Type Name="StrongNameIdentityPermission" FullName="System.Security.Permissions.StrongNameIdentityPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="30d48ef2821f8ce9e4401aef4056a1160fb06237" /><Meta Name="ms.sourcegitcommit" Value="5484acfd78fc29edb48fc1ca6925046c4672954a" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/16/2020" /><Meta Name="ms.locfileid" Value="90693984" /></Metadata><TypeSignature Language="C#" Value="public sealed class StrongNameIdentityPermission : System.Security.CodeAccessPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit StrongNameIdentityPermission extends System.Security.CodeAccessPermission" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.StrongNameIdentityPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class StrongNameIdentityPermission&#xA;Inherits CodeAccessPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class StrongNameIdentityPermission sealed : System::Security::CodeAccessPermission" />
  <TypeSignature Language="F#" Value="type StrongNameIdentityPermission = class&#xA;    inherit CodeAccessPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit StrongNameIdentityPermission extends System.Security.CodeAccessPermission" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0">
      <AttributeName Language="C#">[System.Obsolete("Code Access Security is not supported or honored by the runtime.", DiagnosticId="SYSLIB0003", UrlFormat="https://aka.ms/dotnet-warnings/{0}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("Code Access Security is not supported or honored by the runtime.", DiagnosticId="SYSLIB0003", UrlFormat="https://aka.ms/dotnet-warnings/{0}")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2b36c-101">定义强名称的标识权限。</span><span class="sxs-lookup"><span data-stu-id="2b36c-101">Defines the identity permission for strong names.</span></span> <span data-ttu-id="2b36c-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="2b36c-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="2b36c-103">从开始 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] ，不使用标识权限。</span><span class="sxs-lookup"><span data-stu-id="2b36c-103">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], identity permissions are not used.</span></span>  
>   
>  <span data-ttu-id="2b36c-104">在 .NET Framework 版本1.0 和1.1 中，标识权限不能具有 <xref:System.Security.Permissions.PermissionState.Unrestricted> 权限状态值。</span><span class="sxs-lookup"><span data-stu-id="2b36c-104">In the .NET Framework versions 1.0 and 1.1, identity permissions cannot have an <xref:System.Security.Permissions.PermissionState.Unrestricted> permission state value.</span></span> <span data-ttu-id="2b36c-105">在 .NET Framework 版本2.0 及更高版本中，标识权限可以具有任何权限状态值。</span><span class="sxs-lookup"><span data-stu-id="2b36c-105">In the .NET Framework version 2.0 and later, identity permissions can have any permission state value.</span></span>  <span data-ttu-id="2b36c-106">这意味着在版本2.0 及更高版本中，标识权限与实现接口的权限具有相同的行为 <xref:System.Security.Permissions.IUnrestrictedPermission> 。</span><span class="sxs-lookup"><span data-stu-id="2b36c-106">This means that in version 2.0 and later versions, identity permissions have the same behavior as permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface.</span></span> <span data-ttu-id="2b36c-107">也就是说，如果程序集已被授予完全信任，则标识的请求始终会成功，无论程序集的标识如何都是如此。</span><span class="sxs-lookup"><span data-stu-id="2b36c-107">That is, a demand for an identity always succeeds, regardless of the identity of the assembly, if the assembly has been granted full trust.</span></span>  
  
 <span data-ttu-id="2b36c-108">使用 <xref:System.Security.Permissions.StrongNameIdentityPermission> 确认调用代码位于特定的强名称代码程序集中。</span><span class="sxs-lookup"><span data-stu-id="2b36c-108">Use <xref:System.Security.Permissions.StrongNameIdentityPermission> to confirm that the calling code is in a particular strong-named code assembly.</span></span> <span data-ttu-id="2b36c-109"><xref:System.Security.Permissions.StrongNameIdentityPermission>仅当堆栈中的所有程序集都具有可满足需求的正确证据时，完全要求才能成功。</span><span class="sxs-lookup"><span data-stu-id="2b36c-109">Full demands for <xref:System.Security.Permissions.StrongNameIdentityPermission> succeed only if all the assemblies in the stack have the correct evidence to satisfy the demand.</span></span> <span data-ttu-id="2b36c-110"><xref:System.Security.Permissions.StrongNameIdentityPermissionAttribute>仅当直接调用方具有正确的证据时，使用特性的链接要求才会成功。</span><span class="sxs-lookup"><span data-stu-id="2b36c-110">Link demands that use the <xref:System.Security.Permissions.StrongNameIdentityPermissionAttribute> attribute succeed only if the immediate caller has the correct evidence.</span></span>  
  
 <span data-ttu-id="2b36c-111">强名称标识基于名为二进制大型对象 (BLOB) 的加密公钥，可以选择将其与特定程序集的名称和版本结合使用。</span><span class="sxs-lookup"><span data-stu-id="2b36c-111">A strong name identity is based on a cryptographic public key called a binary large object (BLOB),  which is optionally combined with the name and version of a specific assembly.</span></span> <span data-ttu-id="2b36c-112">该键定义唯一命名空间，并提供强验证，因为名称的定义必须在由相应私钥签名的程序集中。</span><span class="sxs-lookup"><span data-stu-id="2b36c-112">The key defines a unique namespace and provides strong verification that the name is genuine, because the definition of the name must be in an assembly that is signed by the corresponding private key.</span></span>  
  
 <span data-ttu-id="2b36c-113">请注意，强名称密钥的有效性不依赖于信任关系，也不依赖于任何为密钥颁发的证书。</span><span class="sxs-lookup"><span data-stu-id="2b36c-113">Note that the validity of the strong name key is not dependent on a trust relationship or on any certificate necessarily being issued for the key.</span></span>  
  
 <span data-ttu-id="2b36c-114">在 .NET Framework 版本1.0 和1.1 中，即使调用程序集是完全受信任的，对标识权限的要求仍有效。</span><span class="sxs-lookup"><span data-stu-id="2b36c-114">In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective even when the calling assembly is fully trusted.</span></span> <span data-ttu-id="2b36c-115">也就是说，即使调用程序集具有完全信任，如果程序集不满足要求的条件，也会失败。</span><span class="sxs-lookup"><span data-stu-id="2b36c-115">That is, even if the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria.</span></span> <span data-ttu-id="2b36c-116">在 .NET Framework 版本2.0 及更高版本中，如果调用程序集具有完全信任，则标识权限要求将无效。</span><span class="sxs-lookup"><span data-stu-id="2b36c-116">In the .NET Framework version 2.0 and later, demands for identity permissions are ineffective if the calling assembly has full trust.</span></span> <span data-ttu-id="2b36c-117">这可确保所有权限的一致性，并避免将标识权限视为一种特殊情况。</span><span class="sxs-lookup"><span data-stu-id="2b36c-117">This ensures consistency for all permissions and eliminates the treatment of identity permissions as a special case.</span></span>  
  
 <span data-ttu-id="2b36c-118">有关强名称的完整说明，请参阅 <xref:System.Security.Policy.StrongName> 引用页。</span><span class="sxs-lookup"><span data-stu-id="2b36c-118">For a complete description of strong names, see the <xref:System.Security.Policy.StrongName> reference page.</span></span> <span data-ttu-id="2b36c-119">有关强名称程序集的详细信息，请参阅 [具有强名称的程序集](/dotnet/standard/assembly/strong-named)。</span><span class="sxs-lookup"><span data-stu-id="2b36c-119">For more information about strong-named assemblies, see [Strong-named assemblies](/dotnet/standard/assembly/strong-named).</span></span>  
  
 <span data-ttu-id="2b36c-120"><xref:System.Security.Permissions.StrongNameIdentityPermission>类用于定义用于访问类型的公共成员的强名称要求。</span><span class="sxs-lookup"><span data-stu-id="2b36c-120">The <xref:System.Security.Permissions.StrongNameIdentityPermission> class is used to define strong-name requirements for accessing the public members of a type.</span></span> <span data-ttu-id="2b36c-121"><xref:System.Security.Permissions.StrongNameIdentityPermissionAttribute>特性可用于在程序集级别定义强名称要求。</span><span class="sxs-lookup"><span data-stu-id="2b36c-121">The <xref:System.Security.Permissions.StrongNameIdentityPermissionAttribute> attribute can be used to define strong-name requirements at the assembly level.</span></span> <span data-ttu-id="2b36c-122">在 .NET Framework 版本2.0 及更高版本中，还可以使用 <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> 属性指定该程序集中的所有非公共类型对另一个程序集可见。</span><span class="sxs-lookup"><span data-stu-id="2b36c-122">In the .NET Framework version 2.0 and later, you can also use the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute to specify that all nonpublic types in that assembly are visible to another assembly.</span></span> <span data-ttu-id="2b36c-123">有关详细信息，请参阅 [友元程序集](/dotnet/standard/assembly/friend)。</span><span class="sxs-lookup"><span data-stu-id="2b36c-123">For more information, see [Friend assemblies](/dotnet/standard/assembly/friend).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.StrongNameIdentityPermission" />
    <altmember cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" />
    <altmember cref="T:System.Security.Policy.StrongName" />
    <altmember cref="T:System.Security.Policy.StrongNameMembershipCondition" />
    <related type="Article" href="/dotnet/standard/assembly/strong-named"><span data-ttu-id="2b36c-124">具有强名称的程序集</span><span class="sxs-lookup"><span data-stu-id="2b36c-124">Strong-named assemblies</span></span></related>
    <related type="Article" href="/cpp/dotnet/friend-assemblies-cpp"><span data-ttu-id="2b36c-125">友元程序集</span><span class="sxs-lookup"><span data-stu-id="2b36c-125">Friend Assemblies</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2b36c-126">初始化 <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2b36c-126">Initializes a new instance of the <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StrongNameIdentityPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StrongNameIdentityPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.StrongNameIdentityPermission : System.Security.Permissions.PermissionState -&gt; System.Security.Permissions.StrongNameIdentityPermission" Usage="new System.Security.Permissions.StrongNameIdentityPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="2b36c-127"><see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="2b36c-127">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</span></span></param>
        <summary><span data-ttu-id="2b36c-128">使用指定的 <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> 初始化 <see cref="T:System.Security.Permissions.PermissionState" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2b36c-128">Initializes a new instance of the <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> class with the specified <see cref="T:System.Security.Permissions.PermissionState" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b36c-129">创建完全受限制的 (`None`) 或 `Unrestricted` 权限。</span><span class="sxs-lookup"><span data-stu-id="2b36c-129">Creates either a fully restricted (`None`) or `Unrestricted` permission.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b36c-130">在 .NET Framework 版本1.0 和1.1 中，标识权限不能具有 <xref:System.Security.Permissions.PermissionState.Unrestricted> 权限状态值。</span><span class="sxs-lookup"><span data-stu-id="2b36c-130">In the .NET Framework versions 1.0 and 1.1, identity permissions cannot have an <xref:System.Security.Permissions.PermissionState.Unrestricted> permission state value.</span></span> <span data-ttu-id="2b36c-131">在 .NET Framework 版本2.0 及更高版本中，标识权限可以具有任何权限状态值。</span><span class="sxs-lookup"><span data-stu-id="2b36c-131">In the .NET Framework version 2.0 and later, identity permissions can have any permission state value.</span></span>  <span data-ttu-id="2b36c-132">这意味着在版本2.0 及更高版本中，标识权限与实现接口的权限具有相同的行为 <xref:System.Security.Permissions.IUnrestrictedPermission> 。</span><span class="sxs-lookup"><span data-stu-id="2b36c-132">This means that in version 2.0 and later versions, identity permissions have the same behavior as permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface.</span></span> <span data-ttu-id="2b36c-133">也就是说，如果程序集已被授予完全信任，则标识的请求始终会成功，无论程序集的标识如何都是如此。</span><span class="sxs-lookup"><span data-stu-id="2b36c-133">That is, a demand for an identity always succeeds, regardless of the identity of the assembly, if the assembly has been granted full trust.</span></span>  
  
 <span data-ttu-id="2b36c-134">在 .NET Framework 版本1.0 和1.1 中，对标识权限的要求有效，即使调用程序集是完全受信任的。</span><span class="sxs-lookup"><span data-stu-id="2b36c-134">In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective, even when the calling assembly is fully trusted.</span></span> <span data-ttu-id="2b36c-135">也就是说，尽管调用程序集具有完全信任，但如果程序集不满足要求的条件，则标识权限的请求会失败。</span><span class="sxs-lookup"><span data-stu-id="2b36c-135">That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria.</span></span> <span data-ttu-id="2b36c-136">在 .NET Framework 版本2.0 及更高版本中，如果调用程序集具有完全信任，则标识权限要求将无效。</span><span class="sxs-lookup"><span data-stu-id="2b36c-136">In the .NET Framework version 2.0 and later, demands for identity permissions are ineffective if the calling assembly has full trust.</span></span> <span data-ttu-id="2b36c-137">这将确保所有权限的一致性，从而不会将标识权限视为一种特殊情况。</span><span class="sxs-lookup"><span data-stu-id="2b36c-137">This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.</span></span>  
  
 <span data-ttu-id="2b36c-138">使用权限状态值为的此构造函数 <xref:System.Security.Permissions.PermissionState.None> 来创建不匹配强名称的标识权限。</span><span class="sxs-lookup"><span data-stu-id="2b36c-138">Use this constructor with a permission state value of <xref:System.Security.Permissions.PermissionState.None> to create an identity permission that matches no strong names.</span></span> <span data-ttu-id="2b36c-139">如果您随后设置了 <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> 和 <xref:System.Security.Permissions.StrongNameIdentityPermission.Version%2A> 属性，则可以使用该权限表示特定强名称标识。</span><span class="sxs-lookup"><span data-stu-id="2b36c-139">If you subsequently set the <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> and <xref:System.Security.Permissions.StrongNameIdentityPermission.Version%2A> properties, a specific strong name identity can be represented by the permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b36c-140">下面的代码示例演示如何使用 <xref:System.Security.Permissions.StrongNameIdentityPermission.%23ctor%2A> 构造函数。</span><span class="sxs-lookup"><span data-stu-id="2b36c-140">The following code example shows the use of the <xref:System.Security.Permissions.StrongNameIdentityPermission.%23ctor%2A> constructor.</span></span>  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#7)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#7)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2b36c-141"><paramref name="state" /> 参数不是 <see cref="T:System.Security.Permissions.PermissionState" /> 的有效值。</span><span class="sxs-lookup"><span data-stu-id="2b36c-141">The <paramref name="state" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.PermissionState" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StrongNameIdentityPermission (System.Security.Permissions.StrongNamePublicKeyBlob blob, string name, Version version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Permissions.StrongNamePublicKeyBlob blob, string name, class System.Version version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (blob As StrongNamePublicKeyBlob, name As String, version As Version)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StrongNameIdentityPermission(System::Security::Permissions::StrongNamePublicKeyBlob ^ blob, System::String ^ name, Version ^ version);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.StrongNameIdentityPermission : System.Security.Permissions.StrongNamePublicKeyBlob * string * Version -&gt; System.Security.Permissions.StrongNameIdentityPermission" Usage="new System.Security.Permissions.StrongNameIdentityPermission (blob, name, version)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blob" Type="System.Security.Permissions.StrongNamePublicKeyBlob" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="blob"><span data-ttu-id="2b36c-142">定义强名称标识命名空间的公共密钥。</span><span class="sxs-lookup"><span data-stu-id="2b36c-142">The public key defining the strong name identity namespace.</span></span></param>
        <param name="name"><span data-ttu-id="2b36c-143">强名称标识的简单名称部分。</span><span class="sxs-lookup"><span data-stu-id="2b36c-143">The simple name part of the strong name identity.</span></span> <span data-ttu-id="2b36c-144">这对应于程序集的名称。</span><span class="sxs-lookup"><span data-stu-id="2b36c-144">This corresponds to the name of the assembly.</span></span></param>
        <param name="version"><span data-ttu-id="2b36c-145">标识的版本号。</span><span class="sxs-lookup"><span data-stu-id="2b36c-145">The version number of the identity.</span></span></param>
        <summary><span data-ttu-id="2b36c-146">为指定的强名称标识初始化 <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2b36c-146">Initializes a new instance of the <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> class for the specified strong name identity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b36c-147">`name`和 `version` 参数只能 `null` 在使用公钥标识程序集时使用。</span><span class="sxs-lookup"><span data-stu-id="2b36c-147">The `name` and `version` parameters can be `null` only when the public key is used to identify the assembly.</span></span> <span data-ttu-id="2b36c-148">空字符串 ( "" ) 不应用于代替 `null` 。</span><span class="sxs-lookup"><span data-stu-id="2b36c-148">An empty string ("") should not be used in place of `null`.</span></span> <span data-ttu-id="2b36c-149">如果 `name` 为空字符串， <xref:System.ArgumentException> 则会引发。</span><span class="sxs-lookup"><span data-stu-id="2b36c-149">If `name` is an empty string, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="2b36c-150">有关程序集的名称和版本号的详细信息，请参阅 [具有强名称的程序集](/dotnet/standard/assembly/strong-named)。</span><span class="sxs-lookup"><span data-stu-id="2b36c-150">For more information on names and version numbers of assemblies, see [Strong-named assemblies](/dotnet/standard/assembly/strong-named).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b36c-151">下面的代码示例演示如何使用 <xref:System.Security.Permissions.StrongNameIdentityPermission.%23ctor%2A> 构造函数。</span><span class="sxs-lookup"><span data-stu-id="2b36c-151">The following code example shows the use of the <xref:System.Security.Permissions.StrongNameIdentityPermission.%23ctor%2A> constructor.</span></span>  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#8)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#8)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b36c-152"><paramref name="blob" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2b36c-152">The <paramref name="blob" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2b36c-153"><paramref name="name" /> 参数为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="2b36c-153">The <paramref name="name" /> parameter is an empty string ("").</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Security.IPermission" Usage="strongNameIdentityPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b36c-154">创建并返回当前权限的相同副本。</span><span class="sxs-lookup"><span data-stu-id="2b36c-154">Creates and returns an identical copy of the current permission.</span></span></summary>
        <returns><span data-ttu-id="2b36c-155">当前权限的副本。</span><span class="sxs-lookup"><span data-stu-id="2b36c-155">A copy of the current permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b36c-156">权限的副本表示对资源的相同访问权限。</span><span class="sxs-lookup"><span data-stu-id="2b36c-156">A copy of a permission represents the same access to resources as the original permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b36c-157">下面的代码示例演示方法的行为 <xref:System.Security.Permissions.StrongNameIdentityPermission.Copy%2A> 。</span><span class="sxs-lookup"><span data-stu-id="2b36c-157">The following code example shows the behavior of the <xref:System.Security.Permissions.StrongNameIdentityPermission.Copy%2A> method.</span></span> <span data-ttu-id="2b36c-158">此示例是为类提供的更大示例的一部分 <xref:System.Security.Permissions.StrongNameIdentityPermission> 。</span><span class="sxs-lookup"><span data-stu-id="2b36c-158">This example is part of a larger example provided for the <xref:System.Security.Permissions.StrongNameIdentityPermission> class.</span></span> <span data-ttu-id="2b36c-159">此示例的最佳用途是生成和执行整个示例，并查看其输出。</span><span class="sxs-lookup"><span data-stu-id="2b36c-159">The best use for this example is to build and execute the entire example, and view its output.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b36c-160">此代码示例旨在显示方法的行为，而不是演示方法的用法。</span><span class="sxs-lookup"><span data-stu-id="2b36c-160">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="2b36c-161">通常，权限类的方法由安全基础结构使用;它们通常不在应用程序中使用。</span><span class="sxs-lookup"><span data-stu-id="2b36c-161">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#5)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#5)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (e As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ e);" />
      <MemberSignature Language="F#" Value="override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="strongNameIdentityPermission.FromXml e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="2b36c-162">用于重新构造权限的 XML 编码。</span><span class="sxs-lookup"><span data-stu-id="2b36c-162">The XML encoding to use to reconstruct the permission.</span></span></param>
        <summary><span data-ttu-id="2b36c-163">从 XML 编码重新构造具有指定状态的权限。</span><span class="sxs-lookup"><span data-stu-id="2b36c-163">Reconstructs a permission with a specified state from an XML encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b36c-164">应用程序代码不使用此方法。</span><span class="sxs-lookup"><span data-stu-id="2b36c-164">This method is not used by application code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b36c-165">下面的代码示例演示方法的行为 <xref:System.Security.Permissions.StrongNameIdentityPermission.FromXml%2A> 。</span><span class="sxs-lookup"><span data-stu-id="2b36c-165">The following code example shows the behavior of the <xref:System.Security.Permissions.StrongNameIdentityPermission.FromXml%2A> method.</span></span> <span data-ttu-id="2b36c-166">此示例是为类提供的更大示例的一部分 <xref:System.Security.Permissions.StrongNameIdentityPermission> 。</span><span class="sxs-lookup"><span data-stu-id="2b36c-166">This example is part of a larger example provided for the <xref:System.Security.Permissions.StrongNameIdentityPermission> class.</span></span> <span data-ttu-id="2b36c-167">此示例的最佳用途是生成和执行整个示例，并查看其输出。</span><span class="sxs-lookup"><span data-stu-id="2b36c-167">The best use for this example is to build and execute the entire example, and view its output.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b36c-168">此代码示例旨在显示方法的行为，而不是演示方法的用法。</span><span class="sxs-lookup"><span data-stu-id="2b36c-168">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="2b36c-169">通常，权限类的方法由安全基础结构使用;它们通常不在应用程序中使用。</span><span class="sxs-lookup"><span data-stu-id="2b36c-169">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#6)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#6)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b36c-170"><paramref name="e" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2b36c-170">The <paramref name="e" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2b36c-171"><paramref name="e" /> 参数不是有效的权限元素。</span><span class="sxs-lookup"><span data-stu-id="2b36c-171">The <paramref name="e" /> parameter is not a valid permission element.</span></span>  
  
<span data-ttu-id="2b36c-172">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2b36c-172">-or-</span></span> 
<span data-ttu-id="2b36c-173"><paramref name="e" /> 参数的版本号无效。</span><span class="sxs-lookup"><span data-stu-id="2b36c-173">The <paramref name="e" /> parameter's version number is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="strongNameIdentityPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="2b36c-174">要与当前权限相交的权限。</span><span class="sxs-lookup"><span data-stu-id="2b36c-174">A permission to intersect with the current permission.</span></span> <span data-ttu-id="2b36c-175">它必须与当前权限属于同一类型。</span><span class="sxs-lookup"><span data-stu-id="2b36c-175">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="2b36c-176">创建并返回一个权限，该权限是当前权限与指定权限的交集。</span><span class="sxs-lookup"><span data-stu-id="2b36c-176">Creates and returns a permission that is the intersection of the current permission and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="2b36c-177">一个新权限，表示当前权限与指定权限的交集，或者若果交集为空，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2b36c-177">A new permission that represents the intersection of the current permission and the specified permission, or <see langword="null" /> if the intersection is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b36c-178">两个权限的交集是描述它们共同描述的一组操作的权限。</span><span class="sxs-lookup"><span data-stu-id="2b36c-178">The intersection of two permissions is a permission that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="2b36c-179">只有同时传递两个原始权限的请求才会传递交集。</span><span class="sxs-lookup"><span data-stu-id="2b36c-179">Only a demand that passes both original permissions will pass the intersection.</span></span>  
  
 <span data-ttu-id="2b36c-180">两个相同强名称标识权限的交集是相同的权限。</span><span class="sxs-lookup"><span data-stu-id="2b36c-180">The intersection of two identical strong name identity permissions is the same permission.</span></span> <span data-ttu-id="2b36c-181">两个不同的 (不是通配符) 表达式的交集是空的权限。</span><span class="sxs-lookup"><span data-stu-id="2b36c-181">The intersection of two different (not wildcard) expressions is an empty permission.</span></span> <span data-ttu-id="2b36c-182">通配符表达式和匹配强名称的交集是强名称。</span><span class="sxs-lookup"><span data-stu-id="2b36c-182">The intersection of a wildcard expression and a matching strong name is the strong name.</span></span> <span data-ttu-id="2b36c-183">两个匹配的通配符表达式的交集是两个表达式中更长、更具体的。</span><span class="sxs-lookup"><span data-stu-id="2b36c-183">The intersection of two wildcard expressions that match is the longer, more specific of the two expressions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b36c-184">下面的代码示例演示 <xref:System.Security.Permissions.StrongNameIdentityPermission.Intersect%2A> 如何使用方法，而不是使用方法。</span><span class="sxs-lookup"><span data-stu-id="2b36c-184">The following code example shows the results of the use of the <xref:System.Security.Permissions.StrongNameIdentityPermission.Intersect%2A> method, not how to use the method.</span></span> <span data-ttu-id="2b36c-185">此示例是为类提供的更大示例的一部分 <xref:System.Security.Permissions.StrongNameIdentityPermission> 。</span><span class="sxs-lookup"><span data-stu-id="2b36c-185">This example is part of a larger example provided for the <xref:System.Security.Permissions.StrongNameIdentityPermission> class.</span></span> <span data-ttu-id="2b36c-186">此示例的最佳用途是生成和执行整个示例，并查看其输出。</span><span class="sxs-lookup"><span data-stu-id="2b36c-186">The best use for this example is to build and execute the entire example, and view its output.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b36c-187">此代码示例旨在显示方法的行为，而不是演示方法的用法。</span><span class="sxs-lookup"><span data-stu-id="2b36c-187">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="2b36c-188">通常，权限类的方法由安全基础结构使用;它们通常不在应用程序中使用。</span><span class="sxs-lookup"><span data-stu-id="2b36c-188">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#4)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#4)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2b36c-189"><paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</span><span class="sxs-lookup"><span data-stu-id="2b36c-189">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="strongNameIdentityPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="2b36c-190">将要测试子集关系的权限。</span><span class="sxs-lookup"><span data-stu-id="2b36c-190">A permission that is to be tested for the subset relationship.</span></span> <span data-ttu-id="2b36c-191">此权限必须与当前权限属于同一类型。</span><span class="sxs-lookup"><span data-stu-id="2b36c-191">This permission must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="2b36c-192">确定当前权限是否为指定权限的子集。</span><span class="sxs-lookup"><span data-stu-id="2b36c-192">Determines whether the current permission is a subset of the specified permission.</span></span></summary>
        <returns><span data-ttu-id="2b36c-193">如果当前权限是指定权限的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2b36c-193"><see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b36c-194">如果当前权限指定的一组操作完全包含在指定权限中，则当前权限是指定权限的子集。</span><span class="sxs-lookup"><span data-stu-id="2b36c-194">The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</span></span> <span data-ttu-id="2b36c-195">例如，其他属性相等，具有 <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> 属性（包含通配符表达式 MyCompany. \*）的标识将被标识为具有 MyDepartment 属性的标识子集。 <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A></span><span class="sxs-lookup"><span data-stu-id="2b36c-195">For example, the other properties being equal, an identity with the <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> property containing the wildcard expression MyCompany.MyDepartment.\* is identified as a subset of an identity with the <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> property MyCompany.MyDepartment.MyFile.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b36c-196">下面的代码示例演示 <xref:System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf%2A> 如何使用方法，而不是使用方法。</span><span class="sxs-lookup"><span data-stu-id="2b36c-196">The following code example shows the results of the use of the <xref:System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf%2A> method, not how to use the method.</span></span> <span data-ttu-id="2b36c-197">此示例是为类提供的更大示例的一部分 <xref:System.Security.Permissions.StrongNameIdentityPermission> 。</span><span class="sxs-lookup"><span data-stu-id="2b36c-197">This example is part of a larger example provided for the <xref:System.Security.Permissions.StrongNameIdentityPermission> class.</span></span> <span data-ttu-id="2b36c-198">此示例的最佳用途是生成和执行整个示例，并查看其输出。</span><span class="sxs-lookup"><span data-stu-id="2b36c-198">The best use for this example is to build and execute the entire example, and view its output.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b36c-199">此代码示例旨在显示方法的行为，而不是演示方法的用法。</span><span class="sxs-lookup"><span data-stu-id="2b36c-199">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="2b36c-200">通常，权限类的方法由安全基础结构使用;它们通常不在应用程序中使用。</span><span class="sxs-lookup"><span data-stu-id="2b36c-200">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#2)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#2)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2b36c-201"><paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</span><span class="sxs-lookup"><span data-stu-id="2b36c-201">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.StrongNameIdentityPermission.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Security.Permissions.StrongNameIdentityPermission.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b36c-202">获取或设置强名称标识的简单名称部分。</span><span class="sxs-lookup"><span data-stu-id="2b36c-202">Gets or sets the simple name portion of the strong name identity.</span></span></summary>
        <value><span data-ttu-id="2b36c-203">标识的简单名称。</span><span class="sxs-lookup"><span data-stu-id="2b36c-203">The simple name of the identity.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b36c-204">属性的值 <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> 可以是精确的名称，也可以由最终位置中的通配符修改; 例如，MyCompany. MyDepartment. myfile.txt 和 MyCompany 都是有效的名称。</span><span class="sxs-lookup"><span data-stu-id="2b36c-204">The value of the <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> property can be an exact name or can be modified by a wildcard character in the final position; for example, both MyCompany.MyDepartment.MyFile and MyCompany.MyDepartment.\* are valid names.</span></span> <span data-ttu-id="2b36c-205">如果尝试将 <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> 属性设置为空字符串 ( "" ) ， <xref:System.ArgumentException> 则会引发。</span><span class="sxs-lookup"><span data-stu-id="2b36c-205">If you attempt to set the <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> property to an empty string (""), an <xref:System.ArgumentException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2b36c-206">值为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="2b36c-206">The value is an empty string ("").</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2b36c-207">无法检索此属性值，因为它包含的标识不明确。</span><span class="sxs-lookup"><span data-stu-id="2b36c-207">The property value cannot be retrieved because it contains an ambiguous identity.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PublicKey">
      <MemberSignature Language="C#" Value="public System.Security.Permissions.StrongNamePublicKeyBlob PublicKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Permissions.StrongNamePublicKeyBlob PublicKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.StrongNameIdentityPermission.PublicKey" />
      <MemberSignature Language="VB.NET" Value="Public Property PublicKey As StrongNamePublicKeyBlob" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Permissions::StrongNamePublicKeyBlob ^ PublicKey { System::Security::Permissions::StrongNamePublicKeyBlob ^ get(); void set(System::Security::Permissions::StrongNamePublicKeyBlob ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PublicKey : System.Security.Permissions.StrongNamePublicKeyBlob with get, set" Usage="System.Security.Permissions.StrongNameIdentityPermission.PublicKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.StrongNamePublicKeyBlob</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b36c-208">获取或设置定义强名称标识命名空间的公钥 blob。</span><span class="sxs-lookup"><span data-stu-id="2b36c-208">Gets or sets the public key blob that defines the strong name identity namespace.</span></span></summary>
        <value><span data-ttu-id="2b36c-209">为包含标识的公钥的 <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" />，或者，如果没有任何密钥，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2b36c-209">A <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> that contains the public key of the identity, or <see langword="null" /> if there is no key.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b36c-210">将属性值设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2b36c-210">The property value is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2b36c-211">无法检索此属性值，因为它包含的标识不明确。</span><span class="sxs-lookup"><span data-stu-id="2b36c-211">The property value cannot be retrieved because it contains an ambiguous identity.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="strongNameIdentityPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b36c-212">创建权限及其当前状态的 XML 编码。</span><span class="sxs-lookup"><span data-stu-id="2b36c-212">Creates an XML encoding of the permission and its current state.</span></span></summary>
        <returns><span data-ttu-id="2b36c-213">权限的 XML 编码，包括任何状态信息。</span><span class="sxs-lookup"><span data-stu-id="2b36c-213">An XML encoding of the permission, including any state information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b36c-214">此方法通常不由应用程序代码使用。</span><span class="sxs-lookup"><span data-stu-id="2b36c-214">This method is not typically used by application code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b36c-215">下面的代码示例演示方法的行为 <xref:System.Security.Permissions.StrongNameIdentityPermission.ToXml%2A> 。</span><span class="sxs-lookup"><span data-stu-id="2b36c-215">The following code example shows the behavior of the <xref:System.Security.Permissions.StrongNameIdentityPermission.ToXml%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b36c-216">此代码示例旨在显示方法的行为，而不是演示方法的用法。</span><span class="sxs-lookup"><span data-stu-id="2b36c-216">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="2b36c-217">通常，权限类的方法由安全基础结构使用;它们通常不在应用程序中使用。</span><span class="sxs-lookup"><span data-stu-id="2b36c-217">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#6)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#6)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="strongNameIdentityPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="2b36c-218">与当前权限合并的权限。</span><span class="sxs-lookup"><span data-stu-id="2b36c-218">A permission to combine with the current permission.</span></span> <span data-ttu-id="2b36c-219">它必须与当前权限属于同一类型。</span><span class="sxs-lookup"><span data-stu-id="2b36c-219">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="2b36c-220">创建一个权限，该权限是当前权限与指定权限的并集。</span><span class="sxs-lookup"><span data-stu-id="2b36c-220">Creates a permission that is the union of the current permission and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="2b36c-221">表示同时兼具当前权限和指定权限的新权限。</span><span class="sxs-lookup"><span data-stu-id="2b36c-221">A new permission that represents the union of the current permission and the specified permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b36c-222">调用的结果 <xref:System.Security.Permissions.StrongNameIdentityPermission.Union%2A> 是一个权限，它表示当前权限和指定权限所表示的所有操作。</span><span class="sxs-lookup"><span data-stu-id="2b36c-222">The result of a call to <xref:System.Security.Permissions.StrongNameIdentityPermission.Union%2A> is a permission that represents all the operations represented by both the current permission and the specified permission.</span></span> <span data-ttu-id="2b36c-223">任何传递任意权限的需求都将传递其联合。</span><span class="sxs-lookup"><span data-stu-id="2b36c-223">Any demand that passes either permission passes their union.</span></span>  
  
 <span data-ttu-id="2b36c-224">权限的并集 `null` 是不是的权限 `null` 。</span><span class="sxs-lookup"><span data-stu-id="2b36c-224">The union of a permission and `null` is the permission that is not `null`.</span></span> <span data-ttu-id="2b36c-225">权限的联合和该权限的子集是包含其他权限的权限。</span><span class="sxs-lookup"><span data-stu-id="2b36c-225">The union of a permission and a subset of that permission is the permission that contains the other.</span></span> <span data-ttu-id="2b36c-226">任何其他组合会导致 <xref:System.ArgumentException> 引发异常。</span><span class="sxs-lookup"><span data-stu-id="2b36c-226">Any other combination results in an <xref:System.ArgumentException> exception being thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b36c-227">下面的代码示例演示 <xref:System.Security.Permissions.StrongNameIdentityPermission.Union%2A> 如何使用方法，而不是使用方法。</span><span class="sxs-lookup"><span data-stu-id="2b36c-227">The following code example shows the results of the use of the <xref:System.Security.Permissions.StrongNameIdentityPermission.Union%2A> method, not how to use the method.</span></span> <span data-ttu-id="2b36c-228">此示例是为类提供的更大示例的一部分 <xref:System.Security.Permissions.StrongNameIdentityPermission> 。</span><span class="sxs-lookup"><span data-stu-id="2b36c-228">This example is part of a larger example provided for the <xref:System.Security.Permissions.StrongNameIdentityPermission> class.</span></span> <span data-ttu-id="2b36c-229">此示例的最佳用途是生成和执行整个示例，并查看其输出。</span><span class="sxs-lookup"><span data-stu-id="2b36c-229">The best use for this example is to build and execute the entire example, and view its output.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b36c-230">此代码示例旨在显示方法的行为，而不是演示方法的用法。</span><span class="sxs-lookup"><span data-stu-id="2b36c-230">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="2b36c-231">通常，权限类的方法由安全基础结构使用;它们通常不在应用程序中使用。</span><span class="sxs-lookup"><span data-stu-id="2b36c-231">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#3)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#3)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2b36c-232"><paramref name="target" /> 参数不为 <see langword="null" />，并且与当前权限不属于同一类型。</span><span class="sxs-lookup"><span data-stu-id="2b36c-232">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span></span>  
  
<span data-ttu-id="2b36c-233">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2b36c-233">-or-</span></span> 
<span data-ttu-id="2b36c-234">这两个权限不相等，而且其中一个是另一个的子集。</span><span class="sxs-lookup"><span data-stu-id="2b36c-234">The two permissions are not equal and one is a subset of the other.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public Version Version { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version Version" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.StrongNameIdentityPermission.Version" />
      <MemberSignature Language="VB.NET" Value="Public Property Version As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ Version { Version ^ get(); void set(Version ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Version : Version with get, set" Usage="System.Security.Permissions.StrongNameIdentityPermission.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b36c-235">获取或设置标识的版本号。</span><span class="sxs-lookup"><span data-stu-id="2b36c-235">Gets or sets the version number of the identity.</span></span></summary>
        <value><span data-ttu-id="2b36c-236">标识的版本。</span><span class="sxs-lookup"><span data-stu-id="2b36c-236">The version of the identity.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2b36c-237">无法检索此属性值，因为它包含的标识不明确。</span><span class="sxs-lookup"><span data-stu-id="2b36c-237">The property value cannot be retrieved because it contains an ambiguous identity.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
