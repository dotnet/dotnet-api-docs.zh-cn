<Type Name="PrincipalPermissionAttribute" FullName="System.Security.Permissions.PrincipalPermissionAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0398e61499a60a6ab3fa13f95e8b7b59591ed8c0" /><Meta Name="ms.sourcegitcommit" Value="13a6cb6fba7e05947f15d8d6cc802703ae9c21d5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/18/2020" /><Meta Name="ms.locfileid" Value="90793099" /></Metadata><TypeSignature Language="C#" Value="public sealed class PrincipalPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PrincipalPermissionAttribute extends System.Security.Permissions.CodeAccessSecurityAttribute" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.PrincipalPermissionAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PrincipalPermissionAttribute&#xA;Inherits CodeAccessSecurityAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrincipalPermissionAttribute sealed : System::Security::Permissions::CodeAccessSecurityAttribute" />
  <TypeSignature Language="F#" Value="type PrincipalPermissionAttribute = class&#xA;    inherit CodeAccessSecurityAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit PrincipalPermissionAttribute extends System.Security.Permissions.CodeAccessSecurityAttribute" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Permissions.CodeAccessSecurityAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0">
      <AttributeName Language="C#">[System.Obsolete("Code Access Security is not supported or honored by the runtime.", DiagnosticId="SYSLIB0003", UrlFormat="https://aka.ms/dotnet-warnings/{0}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("Code Access Security is not supported or honored by the runtime.", DiagnosticId="SYSLIB0003", UrlFormat="https://aka.ms/dotnet-warnings/{0}")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="67b73-101">允许对要使用声明性安全应用到代码中的 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 执行安全操作。</span><span class="sxs-lookup"><span data-stu-id="67b73-101">Allows security actions for <see cref="T:System.Security.Permissions.PrincipalPermission" /> to be applied to code using declarative security.</span></span> <span data-ttu-id="67b73-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="67b73-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
> [!IMPORTANT]
> <span data-ttu-id="67b73-103">不再支持部分受信任的代码。</span><span class="sxs-lookup"><span data-stu-id="67b73-103">Partially trusted code is no longer supported.</span></span> <span data-ttu-id="67b73-104">此属性在 .NET Core 中不起作用。</span><span class="sxs-lookup"><span data-stu-id="67b73-104">This attribute has no effect in .NET Core.</span></span>

 <span data-ttu-id="67b73-105"><xref:System.Security.Permissions.PrincipalPermissionAttribute> 可用于以声明方式要求运行你的代码的用户属于指定的角色或已经过身份验证。</span><span class="sxs-lookup"><span data-stu-id="67b73-105"><xref:System.Security.Permissions.PrincipalPermissionAttribute> can be used to declaratively demand that users running your code belong to a specified role or have been authenticated.</span></span> <span data-ttu-id="67b73-106">使用 <xref:System.Security.Permissions.PermissionState.Unrestricted> 将创建一个，并 <xref:System.Security.Permissions.PrincipalPermission> <xref:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated%2A> 将设置为 `true` 和 <xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> 并 <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A> 将设置为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="67b73-106">Use of <xref:System.Security.Permissions.PermissionState.Unrestricted> creates a <xref:System.Security.Permissions.PrincipalPermission> with <xref:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated%2A> set to `true` and <xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> and <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A> set to `null`.</span></span>  
  
 <span data-ttu-id="67b73-107">允许的声明的范围取决于所 <xref:System.Security.Permissions.SecurityAction> 使用的。</span><span class="sxs-lookup"><span data-stu-id="67b73-107">The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> that is used.</span></span> <span data-ttu-id="67b73-108"><xref:System.Security.Permissions.PrincipalPermissionAttribute> 不能应用于程序集级别。</span><span class="sxs-lookup"><span data-stu-id="67b73-108"><xref:System.Security.Permissions.PrincipalPermissionAttribute> cannot be applied at the assembly level.</span></span>  
  
 <span data-ttu-id="67b73-109">安全特性声明的安全信息存储在属性目标的元数据中，由系统在运行时进行访问。</span><span class="sxs-lookup"><span data-stu-id="67b73-109">The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time.</span></span> <span data-ttu-id="67b73-110">安全特性仅用于声明性安全。</span><span class="sxs-lookup"><span data-stu-id="67b73-110">Security attributes are used only for declarative security.</span></span> <span data-ttu-id="67b73-111">对于命令性安全，请使用相应的权限类。</span><span class="sxs-lookup"><span data-stu-id="67b73-111">For imperative security, use the corresponding permission class.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="67b73-112">使用此类来要求主体权限之前，必须将当前应用程序域的主体策略设置为枚举值 <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal> 。</span><span class="sxs-lookup"><span data-stu-id="67b73-112">Before you use this class to demand principal permission, you must set the current application domain's principal policy to the enumeration value <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>.</span></span> <span data-ttu-id="67b73-113">默认情况下，主体策略设置为 <xref:System.Security.Principal.PrincipalPolicy.UnauthenticatedPrincipal> 。</span><span class="sxs-lookup"><span data-stu-id="67b73-113">By default, the principal policy is set to <xref:System.Security.Principal.PrincipalPolicy.UnauthenticatedPrincipal>.</span></span> <span data-ttu-id="67b73-114">如果不将主体策略设置为，则对 <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal> 主体权限的要求会失败。</span><span class="sxs-lookup"><span data-stu-id="67b73-114">If you do not set the principal policy to <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>, a demand for principal permission will fail.</span></span> <span data-ttu-id="67b73-115">在要求主体权限之前，应执行以下代码： `AppDomain.CurrentDomain.SetPrincipalPolicy(PrincipalPolicy.WindowsPrincipal).`</span><span class="sxs-lookup"><span data-stu-id="67b73-115">The following code should be executed before the principal permission is demanded: `AppDomain.CurrentDomain.SetPrincipalPolicy(PrincipalPolicy.WindowsPrincipal).`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67b73-116">下面的示例演示如何 <xref:System.Security.Permissions.PrincipalPermissionAttribute> 以声明方式使用类以要求当前用户是管理员。</span><span class="sxs-lookup"><span data-stu-id="67b73-116">The following example demonstrates how the <xref:System.Security.Permissions.PrincipalPermissionAttribute> class is used declaratively to demand that the current user be an administrator.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="67b73-117">在 Windows Vista 中，用户帐户控制 (UAC) 决定用户的特权。</span><span class="sxs-lookup"><span data-stu-id="67b73-117">In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="67b73-118">如果您是内置的 Administrators 组的成员，将为您分配两个运行时访问令牌：一个标准用户访问令牌和一个管理员访问令牌。</span><span class="sxs-lookup"><span data-stu-id="67b73-118">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="67b73-119">默认情况下，您拥有标准用户角色。</span><span class="sxs-lookup"><span data-stu-id="67b73-119">By default, you are in the standard user role.</span></span> <span data-ttu-id="67b73-120">要执行需要管理员身份的代码，必须首先将你的特权从标准用户提升至管理员。</span><span class="sxs-lookup"><span data-stu-id="67b73-120">To execute the code that requires you to be an administrator, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="67b73-121">你可以通过以下方式执行此操作：右键单击应用程序图标并指示需以管理员身份运行。</span><span class="sxs-lookup"><span data-stu-id="67b73-121">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 [!code-cpp[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.PrincipalPermission" />
    <related type="Article" href="/dotnet/standard/attributes/"><span data-ttu-id="67b73-122">利用特性扩展元数据</span><span class="sxs-lookup"><span data-stu-id="67b73-122">Extending Metadata Using Attributes</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalPermissionAttribute (System.Security.Permissions.SecurityAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.SecurityAction action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As SecurityAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalPermissionAttribute(System::Security::Permissions::SecurityAction action);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.PrincipalPermissionAttribute : System.Security.Permissions.SecurityAction -&gt; System.Security.Permissions.PrincipalPermissionAttribute" Usage="new System.Security.Permissions.PrincipalPermissionAttribute action" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0">
          <AttributeName Language="C#">[System.Obsolete("PrincipalPermissionAttribute is not honored by the runtime and must not be used.", true, DiagnosticId="SYSLIB0002", UrlFormat="https://aka.ms/dotnet-warnings/{0}")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("PrincipalPermissionAttribute is not honored by the runtime and must not be used.", true, DiagnosticId="SYSLIB0002", UrlFormat="https://aka.ms/dotnet-warnings/{0}")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="action" Type="System.Security.Permissions.SecurityAction" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="67b73-123"><see cref="T:System.Security.Permissions.SecurityAction" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="67b73-123">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</span></span></param>
        <summary><span data-ttu-id="67b73-124">使用指定的 <see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="67b73-124">Initializes a new instance of the <see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67b73-125">`Demand`、 `InheritanceDemand` 和 `LinkDemand` 是的唯一值 <xref:System.Security.Permissions.SecurityAction> 对于此特性是有意义的。</span><span class="sxs-lookup"><span data-stu-id="67b73-125">`Demand`, `InheritanceDemand`, and `LinkDemand` are the only values of <xref:System.Security.Permissions.SecurityAction> that have meaning for this attribute.</span></span> <span data-ttu-id="67b73-126">其他操作不适用于不是代码访问权限的权限。</span><span class="sxs-lookup"><span data-stu-id="67b73-126">Other actions do not apply to permissions that are not code access permissions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67b73-127">下面的示例演示如何使用 <xref:System.Security.Permissions.PrincipalPermissionAttribute.%23ctor%2A> 构造函数要求当前用户是管理员。</span><span class="sxs-lookup"><span data-stu-id="67b73-127">The following example demonstrates how to use the <xref:System.Security.Permissions.PrincipalPermissionAttribute.%23ctor%2A> constructor to demand that the current user be an administrator.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="67b73-128">在 Windows Vista 中，用户帐户控制 (UAC) 决定用户的特权。</span><span class="sxs-lookup"><span data-stu-id="67b73-128">In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="67b73-129">如果您是内置的 Administrators 组的成员，将为您分配两个运行时访问令牌：一个标准用户访问令牌和一个管理员访问令牌。</span><span class="sxs-lookup"><span data-stu-id="67b73-129">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="67b73-130">默认情况下，您拥有标准用户角色。</span><span class="sxs-lookup"><span data-stu-id="67b73-130">By default, you are in the standard user role.</span></span> <span data-ttu-id="67b73-131">要执行需要管理员身份的代码，必须首先将你的特权从标准用户提升至管理员。</span><span class="sxs-lookup"><span data-stu-id="67b73-131">To execute the code that requires you to be an administrator, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="67b73-132">你可以通过以下方式执行此操作：右键单击应用程序图标并指示需以管理员身份运行。</span><span class="sxs-lookup"><span data-stu-id="67b73-132">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 [!code-cpp[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticated">
      <MemberSignature Language="C#" Value="public bool Authenticated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Authenticated" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated" />
      <MemberSignature Language="VB.NET" Value="Public Property Authenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Authenticated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Authenticated : bool with get, set" Usage="System.Security.Permissions.PrincipalPermissionAttribute.Authenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67b73-133">获取或设置一个值，该值指示是否通过基于角色的基础安全提供程序已对当前主体执行身份验证。</span><span class="sxs-lookup"><span data-stu-id="67b73-133">Gets or sets a value indicating whether the current principal has been authenticated by the underlying role-based security provider.</span></span></summary>
        <value><span data-ttu-id="67b73-134">如果已对当前主体执行身份验证，则为<see langword="true" /> ；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="67b73-134"><see langword="true" /> if the current principal has been authenticated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePermission">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission CreatePermission ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission CreatePermission() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermissionAttribute.CreatePermission" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreatePermission () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ CreatePermission();" />
      <MemberSignature Language="F#" Value="override this.CreatePermission : unit -&gt; System.Security.IPermission" Usage="principalPermissionAttribute.CreatePermission " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="67b73-135">创建并返回一个新的 <see cref="T:System.Security.Permissions.PrincipalPermission" />。</span><span class="sxs-lookup"><span data-stu-id="67b73-135">Creates and returns a new <see cref="T:System.Security.Permissions.PrincipalPermission" />.</span></span></summary>
        <returns><span data-ttu-id="67b73-136">与此属性对应的 <see cref="T:System.Security.Permissions.PrincipalPermission" />。</span><span class="sxs-lookup"><span data-stu-id="67b73-136">A <see cref="T:System.Security.Permissions.PrincipalPermission" /> that corresponds to this attribute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67b73-137">此方法应仅由安全系统调用，而不是由应用程序代码调用。</span><span class="sxs-lookup"><span data-stu-id="67b73-137">This method should only be called by the security system, never by application code.</span></span>  
  
 <span data-ttu-id="67b73-138">在编译时，特性将安全声明转换为元数据中的序列化格式。</span><span class="sxs-lookup"><span data-stu-id="67b73-138">At compile time, attributes convert security declarations to a serialized form in metadata.</span></span> <span data-ttu-id="67b73-139">元数据中的声明性安全数据是根据此方法返回的与此属性对应的权限创建的。</span><span class="sxs-lookup"><span data-stu-id="67b73-139">Declarative security data in metadata is created from the permission that this method returns that corresponds to this attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.PrincipalPermissionAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Security.Permissions.PrincipalPermissionAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67b73-140">获取或设置与当前主体相关联的标识名称。</span><span class="sxs-lookup"><span data-stu-id="67b73-140">Gets or sets the name of the identity associated with the current principal.</span></span></summary>
        <value><span data-ttu-id="67b73-141">要与基于角色的基础安全提供程序提供的名称相匹配的名称。</span><span class="sxs-lookup"><span data-stu-id="67b73-141">A name to match against that provided by the underlying role-based security provider.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67b73-142">如果身份验证提供程序是 Windows NT， <xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> 则与用户的 WINDOWS nt 登录名相同， (格式为 "DomainName\UserName" ) 。</span><span class="sxs-lookup"><span data-stu-id="67b73-142">If the authentication provider is Windows NT, <xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> is the same as the user's Windows NT login name (in the form "DomainName\UserName").</span></span> <span data-ttu-id="67b73-143">检查主机的文档，以确定其使用的身份验证提供程序以及它如何确定当前主体的标识。</span><span class="sxs-lookup"><span data-stu-id="67b73-143">Check the documentation of your host to determine which authentication provider it uses and how it determines the identity of the current principal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Role">
      <MemberSignature Language="C#" Value="public string Role { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Role" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.PrincipalPermissionAttribute.Role" />
      <MemberSignature Language="VB.NET" Value="Public Property Role As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Role { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Role : string with get, set" Usage="System.Security.Permissions.PrincipalPermissionAttribute.Role" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67b73-144">获取或设置指定安全角色的成员条件。</span><span class="sxs-lookup"><span data-stu-id="67b73-144">Gets or sets membership in a specified security role.</span></span></summary>
        <value><span data-ttu-id="67b73-145">基于角色的基础安全提供程序中的角色名称。</span><span class="sxs-lookup"><span data-stu-id="67b73-145">The name of a role from the underlying role-based security provider.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67b73-146">可用角色因主机使用的身份验证提供程序而异。</span><span class="sxs-lookup"><span data-stu-id="67b73-146">The available roles will differ based on the authentication provider in use by the host.</span></span> <span data-ttu-id="67b73-147">如果身份验证提供程序是 Windows NT，则角色是 Windows NT 用户组， (格式为 "DomainName\GroupName" ) 。</span><span class="sxs-lookup"><span data-stu-id="67b73-147">If the authentication provider is Windows NT, roles are Windows NT user groups (in the form "DomainName\GroupName").</span></span> <span data-ttu-id="67b73-148">检查主机的文档，以确定其使用的身份验证提供程序以及用户可属于的角色。</span><span class="sxs-lookup"><span data-stu-id="67b73-148">Check the documentation of your host to determine which authentication provider it uses and what roles users can belong to.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
