<Type Name="FileIOPermissionAttribute" FullName="System.Security.Permissions.FileIOPermissionAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8da6ccbd21b1a3b53a7e97f353e821ecb950cf4d" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86579455" /></Metadata><TypeSignature Language="C#" Value="public sealed class FileIOPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FileIOPermissionAttribute extends System.Security.Permissions.CodeAccessSecurityAttribute" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.FileIOPermissionAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FileIOPermissionAttribute&#xA;Inherits CodeAccessSecurityAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileIOPermissionAttribute sealed : System::Security::Permissions::CodeAccessSecurityAttribute" />
  <TypeSignature Language="F#" Value="type FileIOPermissionAttribute = class&#xA;    inherit CodeAccessSecurityAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit FileIOPermissionAttribute extends System.Security.Permissions.CodeAccessSecurityAttribute" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Permissions.CodeAccessSecurityAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Constructor | System.AttributeTargets.Method | System.AttributeTargets.Struct, AllowMultiple=true, Inherited=false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Constructor | System.AttributeTargets.Method | System.AttributeTargets.Struct, AllowMultiple=true, Inherited=false)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0f201-101">允许对要使用声明性安全应用到代码中的 <see cref="T:System.Security.Permissions.FileIOPermission" /> 执行安全操作。</span><span class="sxs-lookup"><span data-stu-id="0f201-101">Allows security actions for <see cref="T:System.Security.Permissions.FileIOPermission" /> to be applied to code using declarative security.</span></span> <span data-ttu-id="0f201-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="0f201-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
> [!IMPORTANT]
> <span data-ttu-id="0f201-103">不再支持部分受信任的代码。</span><span class="sxs-lookup"><span data-stu-id="0f201-103">Partially trusted code is no longer supported.</span></span> <span data-ttu-id="0f201-104">此属性在 .NET Core 中不起作用。</span><span class="sxs-lookup"><span data-stu-id="0f201-104">This attribute has no effect in .NET Core.</span></span>

 <span data-ttu-id="0f201-105">使用绝对路径指定文件和目录。</span><span class="sxs-lookup"><span data-stu-id="0f201-105">Files and directories are specified using absolute paths.</span></span> <span data-ttu-id="0f201-106">在访问文件时，会在创建或打开文件时执行安全检查。</span><span class="sxs-lookup"><span data-stu-id="0f201-106">When accessing files, a security check is performed when the file is created or opened.</span></span> <span data-ttu-id="0f201-107">除非关闭并重新打开该文件，否则不会再次执行安全检查。</span><span class="sxs-lookup"><span data-stu-id="0f201-107">The security check is not done again unless the file is closed and reopened.</span></span> <span data-ttu-id="0f201-108">第一次访问文件时检查权限会将安全检查对应用程序性能的影响降到最低，因为打开文件只发生一次，而读取和写入可以发生多次。</span><span class="sxs-lookup"><span data-stu-id="0f201-108">Checking permissions when the file is first accessed minimizes the impact of the security check on application performance because opening a file happens only once, while reading and writing can happen multiple times.</span></span>  
  
 <span data-ttu-id="0f201-109">允许的声明的范围取决于所 <xref:System.Security.Permissions.SecurityAction> 使用的。</span><span class="sxs-lookup"><span data-stu-id="0f201-109">The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> that is used.</span></span>  
  
 <span data-ttu-id="0f201-110">安全特性声明的安全信息存储在属性目标的元数据中，由系统在运行时进行访问。</span><span class="sxs-lookup"><span data-stu-id="0f201-110">The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time.</span></span> <span data-ttu-id="0f201-111">安全特性仅用于声明性安全。</span><span class="sxs-lookup"><span data-stu-id="0f201-111">Security attributes are used only for declarative security.</span></span> <span data-ttu-id="0f201-112">对于命令性安全，请使用相应的权限类。</span><span class="sxs-lookup"><span data-stu-id="0f201-112">For imperative security, use the corresponding permission class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="0f201-113">`Unrestricted`<xref:System.Security.Permissions.FileIOPermission>授予对文件系统中所有路径的权限，包括可用于访问单个给定文件的多个路径名。</span><span class="sxs-lookup"><span data-stu-id="0f201-113">`Unrestricted` <xref:System.Security.Permissions.FileIOPermission> grants permission for all paths within a file system, including multiple pathnames that can be used to access a single given file.</span></span> <span data-ttu-id="0f201-114">若要 <xref:System.Security.CodeAccessPermission.Deny%2A> 访问文件，则必须具有 `Deny` 文件的所有可能路径。</span><span class="sxs-lookup"><span data-stu-id="0f201-114">To <xref:System.Security.CodeAccessPermission.Deny%2A> access to a file, you must `Deny` all possible paths to the file.</span></span> <span data-ttu-id="0f201-115">例如，如果 \\ \server\share 映射到网络驱动器 X，若要 `Deny` 访问 \\ \server\share\file，则必须 `Deny` \\ \server\share\file、X:\file 和可用于访问该文件的任何其他路径。</span><span class="sxs-lookup"><span data-stu-id="0f201-115">For example, if \\\server\share is mapped to the network drive X, to `Deny` access to \\\server\share\file, you must `Deny` \\\server\share\file, X:\file and any other path that you can use to access the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f201-116">下面的代码示例演示如何 <xref:System.Security.Permissions.FileIOPermission> 使用 <xref:System.Security.Permissions.FileIOPermissionAttribute> 类请求，指示要授予代码的唯一权限。</span><span class="sxs-lookup"><span data-stu-id="0f201-116">The following code example demonstrates how to request <xref:System.Security.Permissions.FileIOPermission> by using the <xref:System.Security.Permissions.FileIOPermissionAttribute> class, indicating the only permission that is to be granted to the code.</span></span>  
  
 [!code-cpp[Classic FileIOPermissionAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileIOPermissionAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileIOPermissionAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileIOPermissionAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic FileIOPermissionAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileIOPermissionAttribute Example/VB/source.vb#1)]  
  
 <span data-ttu-id="0f201-117">下面的示例演示如何要求调用代码具有不受限制的 <xref:System.Security.Permissions.FileIOPermission> 。</span><span class="sxs-lookup"><span data-stu-id="0f201-117">The following example shows how to demand that the calling code has unrestricted <xref:System.Security.Permissions.FileIOPermission>.</span></span> <span data-ttu-id="0f201-118">通常会在托管库中执行 (Dll) 的要求，以帮助保护方法或类免受潜在的有害代码的影响。</span><span class="sxs-lookup"><span data-stu-id="0f201-118">You typically make demands in managed libraries (DLLs) to help protect methods or classes from potentially harmful code.</span></span>  
  
 [!code-cpp[Classic FileIOPermissionAttribute Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileIOPermissionAttribute Example/CPP/source.cpp#2)]
 [!code-csharp[Classic FileIOPermissionAttribute Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileIOPermissionAttribute Example/CS/source.cs#2)]
 [!code-vb[Classic FileIOPermissionAttribute Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileIOPermissionAttribute Example/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.FileIOPermission" />
    <altmember cref="T:System.Security.Permissions.FileIOPermissionAccess" />
    <related type="Article" href="/dotnet/standard/attributes/"><span data-ttu-id="0f201-119">利用特性扩展元数据</span><span class="sxs-lookup"><span data-stu-id="0f201-119">Extending Metadata Using Attributes</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileIOPermissionAttribute (System.Security.Permissions.SecurityAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.SecurityAction action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.FileIOPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As SecurityAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileIOPermissionAttribute(System::Security::Permissions::SecurityAction action);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.FileIOPermissionAttribute : System.Security.Permissions.SecurityAction -&gt; System.Security.Permissions.FileIOPermissionAttribute" Usage="new System.Security.Permissions.FileIOPermissionAttribute action" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Security.Permissions.SecurityAction" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="0f201-120"><see cref="T:System.Security.Permissions.SecurityAction" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="0f201-120">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</span></span></param>
        <summary><span data-ttu-id="0f201-121">使用指定的 <see cref="T:System.Security.Permissions.FileIOPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0f201-121">Initializes a new instance of the <see cref="T:System.Security.Permissions.FileIOPermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0f201-122">下面的代码示例创建类的多个实例 <xref:System.Security.Permissions.FileIOPermissionAttribute> ，以设置不同级别的文件 i/o 权限。</span><span class="sxs-lookup"><span data-stu-id="0f201-122">The following code example creates several instances of the <xref:System.Security.Permissions.FileIOPermissionAttribute> class to set varying levels of file I/O permissions.</span></span>  
  
 [!code-cpp[System.Security.Permissions.FileIOPermissionAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/CPP/fileiopermissionattribute.cpp#1)]
 [!code-csharp[System.Security.Permissions.FileIOPermissionAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/CS/fileiopermissionattribute.cs#1)]
 [!code-vb[System.Security.Permissions.FileIOPermissionAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/VB/fileiopermissionattribute.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0f201-123"><paramref name="action" /> 参数不是有效的 <see cref="T:System.Security.Permissions.SecurityAction" />。</span><span class="sxs-lookup"><span data-stu-id="0f201-123">The <paramref name="action" /> parameter is not a valid <see cref="T:System.Security.Permissions.SecurityAction" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="public string All { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string All" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.FileIOPermissionAttribute.All" />
      <MemberSignature Language="VB.NET" Value="Public Property All As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ All { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.All : string with get, set" Usage="System.Security.Permissions.FileIOPermissionAttribute.All" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Obsolete("Please use the ViewAndModify property instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Please use the ViewAndModify property instead.")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Obsolete("use newer properties")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("use newer properties")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f201-124">获取或设置对字符串值所指定的文件或目录的完全访问权限。</span><span class="sxs-lookup"><span data-stu-id="0f201-124">Gets or sets full access for the file or directory that is specified by the string value.</span></span></summary>
        <value><span data-ttu-id="0f201-125">用于完全访问的文件或目录的绝对路径。</span><span class="sxs-lookup"><span data-stu-id="0f201-125">The absolute path of the file or directory for full access.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f201-126">此属性设置单个文件或目录的访问权限。</span><span class="sxs-lookup"><span data-stu-id="0f201-126">This property sets access for a single file or directory.</span></span> <span data-ttu-id="0f201-127">使用其他属性来指定其他文件和目录。</span><span class="sxs-lookup"><span data-stu-id="0f201-127">Use additional attributes to specify additional files and directories.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f201-128">下面的代码示例将 <xref:System.Security.Permissions.FileIOPermissionAttribute.All%2A> 属性设置为授予对指定目录的完全访问权限。</span><span class="sxs-lookup"><span data-stu-id="0f201-128">The following code example sets the <xref:System.Security.Permissions.FileIOPermissionAttribute.All%2A> property to grant full access to the specified directory.</span></span>  
  
 [!code-cpp[System.Security.Permissions.FileIOPermissionAttribute#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/CPP/fileiopermissionattribute.cpp#6)]
 [!code-csharp[System.Security.Permissions.FileIOPermissionAttribute#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/CS/fileiopermissionattribute.cs#6)]
 [!code-vb[System.Security.Permissions.FileIOPermissionAttribute#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/VB/fileiopermissionattribute.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0f201-129">此属性不支持 get 方法。</span><span class="sxs-lookup"><span data-stu-id="0f201-129">The get method is not supported for this property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AllFiles">
      <MemberSignature Language="C#" Value="public System.Security.Permissions.FileIOPermissionAccess AllFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Permissions.FileIOPermissionAccess AllFiles" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.FileIOPermissionAttribute.AllFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property AllFiles As FileIOPermissionAccess" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Permissions::FileIOPermissionAccess AllFiles { System::Security::Permissions::FileIOPermissionAccess get(); void set(System::Security::Permissions::FileIOPermissionAccess value); };" />
      <MemberSignature Language="F#" Value="member this.AllFiles : System.Security.Permissions.FileIOPermissionAccess with get, set" Usage="System.Security.Permissions.FileIOPermissionAttribute.AllFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.FileIOPermissionAccess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f201-130">获取或设置对所有文件的允许访问权限。</span><span class="sxs-lookup"><span data-stu-id="0f201-130">Gets or sets the permitted access to all files.</span></span></summary>
        <value><span data-ttu-id="0f201-131"><see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 值的按位组合，表示所有文件的权限。</span><span class="sxs-lookup"><span data-stu-id="0f201-131">A bitwise combination of the <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> values that represents the permissions for all files.</span></span> <span data-ttu-id="0f201-132">默认为 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />。</span><span class="sxs-lookup"><span data-stu-id="0f201-132">The default is <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f201-133">此属性获取或设置对本地计算机和网络驱动器上的所有文件的允许访问权限。</span><span class="sxs-lookup"><span data-stu-id="0f201-133">This property gets or sets the permitted access to all files on the local computer and network drives.</span></span>  
  
 <span data-ttu-id="0f201-134"><xref:System.Security.Permissions.FileIOPermissionAccess>可以使用按位运算来确定单个值 `AND` 。</span><span class="sxs-lookup"><span data-stu-id="0f201-134">An individual <xref:System.Security.Permissions.FileIOPermissionAccess> value can be determined by using a bitwise `AND` operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllLocalFiles">
      <MemberSignature Language="C#" Value="public System.Security.Permissions.FileIOPermissionAccess AllLocalFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Permissions.FileIOPermissionAccess AllLocalFiles" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.FileIOPermissionAttribute.AllLocalFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property AllLocalFiles As FileIOPermissionAccess" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Permissions::FileIOPermissionAccess AllLocalFiles { System::Security::Permissions::FileIOPermissionAccess get(); void set(System::Security::Permissions::FileIOPermissionAccess value); };" />
      <MemberSignature Language="F#" Value="member this.AllLocalFiles : System.Security.Permissions.FileIOPermissionAccess with get, set" Usage="System.Security.Permissions.FileIOPermissionAttribute.AllLocalFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.FileIOPermissionAccess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f201-135">获取或设置对所有本地文件的允许访问权限。</span><span class="sxs-lookup"><span data-stu-id="0f201-135">Gets or sets the permitted access to all local files.</span></span></summary>
        <value><span data-ttu-id="0f201-136"><see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 值的按位组合，它表示所有本地文件的权限。</span><span class="sxs-lookup"><span data-stu-id="0f201-136">A bitwise combination of the <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> values that represents the permissions for all local files.</span></span> <span data-ttu-id="0f201-137">默认为 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />。</span><span class="sxs-lookup"><span data-stu-id="0f201-137">The default is <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f201-138">本地文件是包含在本地计算机上的文件。</span><span class="sxs-lookup"><span data-stu-id="0f201-138">Local files are files contained on the local computer.</span></span> <span data-ttu-id="0f201-139">不是通过网络驱动器访问的任何文件都是本地文件。</span><span class="sxs-lookup"><span data-stu-id="0f201-139">Any files that are not accessed through a network drive are local files.</span></span>  
  
 <span data-ttu-id="0f201-140"><xref:System.Security.Permissions.FileIOPermissionAccess>可以使用按位运算来确定单个值 `AND` 。</span><span class="sxs-lookup"><span data-stu-id="0f201-140">An individual <xref:System.Security.Permissions.FileIOPermissionAccess> value can be determined by using a bitwise `AND` operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public string Append { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Append" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.FileIOPermissionAttribute.Append" />
      <MemberSignature Language="VB.NET" Value="Public Property Append As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Append { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Append : string with get, set" Usage="System.Security.Permissions.FileIOPermissionAttribute.Append" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f201-141">获取或设置对字符串值所指定的文件或目录的追加访问权限。</span><span class="sxs-lookup"><span data-stu-id="0f201-141">Gets or sets append access for the file or directory that is specified by the string value.</span></span></summary>
        <value><span data-ttu-id="0f201-142">用于追加访问的文件或目录的绝对路径。</span><span class="sxs-lookup"><span data-stu-id="0f201-142">The absolute path of the file or directory for append access.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f201-143">此属性设置单个文件或目录的访问权限。</span><span class="sxs-lookup"><span data-stu-id="0f201-143">This property sets access for a single file or directory.</span></span> <span data-ttu-id="0f201-144">使用其他属性来指定其他文件和目录。</span><span class="sxs-lookup"><span data-stu-id="0f201-144">Use additional attributes to specify additional files and directories.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f201-145">下面的代码示例将 <xref:System.Security.Permissions.FileIOPermissionAttribute.Append%2A> 属性设置为授予对 <xref:System.Security.Permissions.FileIOPermissionAccess.Append> 指定目录中文件的访问权限。</span><span class="sxs-lookup"><span data-stu-id="0f201-145">The following code example sets the <xref:System.Security.Permissions.FileIOPermissionAttribute.Append%2A> property to grant <xref:System.Security.Permissions.FileIOPermissionAccess.Append> access to files in the specified directory.</span></span>  
  
 [!code-cpp[System.Security.Permissions.FileIOPermissionAttribute#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/CPP/fileiopermissionattribute.cpp#4)]
 [!code-csharp[System.Security.Permissions.FileIOPermissionAttribute#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/CS/fileiopermissionattribute.cs#4)]
 [!code-vb[System.Security.Permissions.FileIOPermissionAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/VB/fileiopermissionattribute.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeAccessControl">
      <MemberSignature Language="C#" Value="public string ChangeAccessControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChangeAccessControl" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.FileIOPermissionAttribute.ChangeAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Property ChangeAccessControl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ChangeAccessControl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ChangeAccessControl : string with get, set" Usage="System.Security.Permissions.FileIOPermissionAttribute.ChangeAccessControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f201-146">获取或设置可在其中更改访问控制信息的文件或目录。</span><span class="sxs-lookup"><span data-stu-id="0f201-146">Gets or sets the file or directory in which access control information can be changed.</span></span></summary>
        <value><span data-ttu-id="0f201-147">可在其中更改访问控制信息的文件或目录的绝对路径。</span><span class="sxs-lookup"><span data-stu-id="0f201-147">The absolute path of the file or directory in which access control information can be changed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f201-148">此属性获取或设置对单个文件或目录的访问权限。</span><span class="sxs-lookup"><span data-stu-id="0f201-148">This property gets or sets access for a single file or directory.</span></span> <span data-ttu-id="0f201-149">使用其他 <xref:System.Security.Permissions.FileIOPermissionAttribute> 属性来指定其他文件和目录。</span><span class="sxs-lookup"><span data-stu-id="0f201-149">Use additional <xref:System.Security.Permissions.FileIOPermissionAttribute> attributes to specify additional files and directories.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0f201-150">访问控制列表 (ACL) 介绍对给定文件及其属性具有或没有特定操作权限的个人或组。</span><span class="sxs-lookup"><span data-stu-id="0f201-150">An access control list (ACL) describes individuals or groups who have, or do not have, rights to specific actions on the given file and its properties.</span></span>  <span data-ttu-id="0f201-151">更改 ACL 的能力是一项重要的权限，应小心授予。</span><span class="sxs-lookup"><span data-stu-id="0f201-151">The ability to change an ACL is an important permission and should be granted with caution.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePermission">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission CreatePermission ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission CreatePermission() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.FileIOPermissionAttribute.CreatePermission" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreatePermission () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ CreatePermission();" />
      <MemberSignature Language="F#" Value="override this.CreatePermission : unit -&gt; System.Security.IPermission" Usage="fileIOPermissionAttribute.CreatePermission " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f201-152">创建并返回一个新的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</span><span class="sxs-lookup"><span data-stu-id="0f201-152">Creates and returns a new <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></summary>
        <returns><span data-ttu-id="0f201-153">与此属性对应的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</span><span class="sxs-lookup"><span data-stu-id="0f201-153">A <see cref="T:System.Security.Permissions.FileIOPermission" /> that corresponds to this attribute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f201-154">此方法应仅由安全系统调用，而不是由应用程序代码调用。</span><span class="sxs-lookup"><span data-stu-id="0f201-154">This method should be called only by the security system, never by application code.</span></span>  
  
 <span data-ttu-id="0f201-155">在编译时，特性将安全声明转换为元数据中的序列化格式。</span><span class="sxs-lookup"><span data-stu-id="0f201-155">At compile time, attributes convert security declarations to a serialized form in metadata.</span></span> <span data-ttu-id="0f201-156">元数据中的声明性安全数据是根据此方法返回的与此属性对应的权限创建的。</span><span class="sxs-lookup"><span data-stu-id="0f201-156">Declarative security data in metadata is created from the permission that this method returns that corresponds to this attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0f201-157">要保护访问安全的文件或目录的路径信息包含无效的字符或通配说明符。</span><span class="sxs-lookup"><span data-stu-id="0f201-157">The path information for a file or directory for which access is to be secured contains invalid characters or wildcard specifiers.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PathDiscovery">
      <MemberSignature Language="C#" Value="public string PathDiscovery { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathDiscovery" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery" />
      <MemberSignature Language="VB.NET" Value="Public Property PathDiscovery As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PathDiscovery { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PathDiscovery : string with get, set" Usage="System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f201-158">获取或设置针对其授予路径发现权限的文件或目录。</span><span class="sxs-lookup"><span data-stu-id="0f201-158">Gets or sets the file or directory to which to grant path discovery.</span></span></summary>
        <value><span data-ttu-id="0f201-159">文件或目录的绝对路径。</span><span class="sxs-lookup"><span data-stu-id="0f201-159">The absolute path of the file or directory.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f201-160">路径发现控制对路径本身中的信息的访问。</span><span class="sxs-lookup"><span data-stu-id="0f201-160">Path discovery controls access to the information in the path itself.</span></span> <span data-ttu-id="0f201-161">这可以保护路径中的敏感信息（如用户名）以及有关路径中显示的目录结构的信息。</span><span class="sxs-lookup"><span data-stu-id="0f201-161">This helps protect sensitive information in the path, such as user names, as well as information about the directory structure revealed in the path.</span></span> <span data-ttu-id="0f201-162">此值不授予对路径所指代的文件或文件夹的访问权限。</span><span class="sxs-lookup"><span data-stu-id="0f201-162">This value does not grant access to files or folders represented by the path.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0f201-163">出于性能原因， <xref:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery%2A> 应仅授予目录而非文件。</span><span class="sxs-lookup"><span data-stu-id="0f201-163">For performance reasons, <xref:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery%2A> should be granted only to directories, not to files.</span></span> <span data-ttu-id="0f201-164">例如， <xref:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery%2A> 权限应授予 C:\test 和 C:\test 等路径 \\ ，而不是对 C:\test\example.txt 的文件。</span><span class="sxs-lookup"><span data-stu-id="0f201-164">For example, <xref:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery%2A> permission should be granted to paths such as C:\test and C:\test\\, not to files such as C:\test\example.txt.</span></span>  
  
 <span data-ttu-id="0f201-165">此属性设置单个文件或目录的访问权限。</span><span class="sxs-lookup"><span data-stu-id="0f201-165">This property sets access for a single file or directory.</span></span> <span data-ttu-id="0f201-166">使用其他属性来指定其他文件和目录。</span><span class="sxs-lookup"><span data-stu-id="0f201-166">Use additional attributes to specify additional files and directories.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f201-167">下面的代码示例将 <xref:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery%2A> 属性设置为授予对 <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery> 指定目录中文件的访问权限。</span><span class="sxs-lookup"><span data-stu-id="0f201-167">The following code example sets the <xref:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery%2A> property to grant <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery> access to files in the specified directory.</span></span>  
  
 [!code-cpp[System.Security.Permissions.FileIOPermissionAttribute#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/CPP/fileiopermissionattribute.cpp#3)]
 [!code-csharp[System.Security.Permissions.FileIOPermissionAttribute#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/CS/fileiopermissionattribute.cs#3)]
 [!code-vb[System.Security.Permissions.FileIOPermissionAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/VB/fileiopermissionattribute.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public string Read { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Read" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.FileIOPermissionAttribute.Read" />
      <MemberSignature Language="VB.NET" Value="Public Property Read As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Read { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Read : string with get, set" Usage="System.Security.Permissions.FileIOPermissionAttribute.Read" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f201-168">获取或设置对字符串值所指定的文件或目录的读访问权限。</span><span class="sxs-lookup"><span data-stu-id="0f201-168">Gets or sets read access for the file or directory specified by the string value.</span></span></summary>
        <value><span data-ttu-id="0f201-169">用于读访问的文件或目录的绝对路径。</span><span class="sxs-lookup"><span data-stu-id="0f201-169">The absolute path of the file or directory for read access.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f201-170">此属性设置单个文件或目录的访问权限。</span><span class="sxs-lookup"><span data-stu-id="0f201-170">This property sets access for a single file or directory.</span></span> <span data-ttu-id="0f201-171">使用其他属性来指定其他文件和目录。</span><span class="sxs-lookup"><span data-stu-id="0f201-171">Use additional attributes to specify additional files and directories.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f201-172">下面的示例将 <xref:System.Security.Permissions.FileIOPermissionAttribute.Read%2A> 属性设置为授予对 <xref:System.Security.Permissions.FileIOPermissionAccess.Read> 指定目录中文件的访问权限。</span><span class="sxs-lookup"><span data-stu-id="0f201-172">The following example sets the <xref:System.Security.Permissions.FileIOPermissionAttribute.Read%2A> property to grant <xref:System.Security.Permissions.FileIOPermissionAccess.Read> access to files in the specified directory.</span></span>  
  
 [!code-cpp[System.Security.Permissions.FileIOPermissionAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/CPP/fileiopermissionattribute.cpp#2)]
 [!code-csharp[System.Security.Permissions.FileIOPermissionAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/CS/fileiopermissionattribute.cs#2)]
 [!code-vb[System.Security.Permissions.FileIOPermissionAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/VB/fileiopermissionattribute.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewAccessControl">
      <MemberSignature Language="C#" Value="public string ViewAccessControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ViewAccessControl" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.FileIOPermissionAttribute.ViewAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewAccessControl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ViewAccessControl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ViewAccessControl : string with get, set" Usage="System.Security.Permissions.FileIOPermissionAttribute.ViewAccessControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f201-173">获取或设置可在其中查看访问控制信息的文件或目录。</span><span class="sxs-lookup"><span data-stu-id="0f201-173">Gets or sets the file or directory in which access control information can be viewed.</span></span></summary>
        <value><span data-ttu-id="0f201-174">可在其中查看访问控制信息的文件或目录的绝对路径。</span><span class="sxs-lookup"><span data-stu-id="0f201-174">The absolute path of the file or directory in which access control information can be viewed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f201-175">此属性获取或设置对单个文件或目录的访问权限。</span><span class="sxs-lookup"><span data-stu-id="0f201-175">This property gets or sets access for a single file or directory.</span></span> <span data-ttu-id="0f201-176">使用其他 <xref:System.Security.Permissions.FileIOPermissionAttribute> 属性来指定其他文件和目录。</span><span class="sxs-lookup"><span data-stu-id="0f201-176">Use additional <xref:System.Security.Permissions.FileIOPermissionAttribute> attributes to specify additional files and directories.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0f201-177">访问控制列表 (ACL) 介绍对给定文件及其属性具有或没有特定操作权限的个人或组。</span><span class="sxs-lookup"><span data-stu-id="0f201-177">An access control list (ACL) describes individuals or groups who have, or do not have, rights to specific actions on the given file and its properties.</span></span>  <span data-ttu-id="0f201-178">查看 ACL 的功能是一个重要的权限，应小心授予。</span><span class="sxs-lookup"><span data-stu-id="0f201-178">The ability to view an ACL is an important permission and should be granted with caution.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewAndModify">
      <MemberSignature Language="C#" Value="public string ViewAndModify { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ViewAndModify" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.FileIOPermissionAttribute.ViewAndModify" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewAndModify As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ViewAndModify { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ViewAndModify : string with get, set" Usage="System.Security.Permissions.FileIOPermissionAttribute.ViewAndModify" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f201-179">获取或设置可在其中查看并修改文件数据的文件或目录。</span><span class="sxs-lookup"><span data-stu-id="0f201-179">Gets or sets the file or directory in which file data can be viewed and modified.</span></span></summary>
        <value><span data-ttu-id="0f201-180">可在其中查看并修改文件数据的文件或目录的绝对路径。</span><span class="sxs-lookup"><span data-stu-id="0f201-180">The absolute path of the file or directory in which file data can be viewed and modified.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f201-181">此属性设置 <xref:System.Security.Permissions.FileIOPermissionAttribute.Append%2A> <xref:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery%2A> <xref:System.Security.Permissions.FileIOPermissionAttribute.Read%2A> <xref:System.Security.Permissions.FileIOPermissionAttribute.Write%2A> 单个文件或目录的、、和属性。</span><span class="sxs-lookup"><span data-stu-id="0f201-181">This property sets the <xref:System.Security.Permissions.FileIOPermissionAttribute.Append%2A>, <xref:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery%2A>, <xref:System.Security.Permissions.FileIOPermissionAttribute.Read%2A>, and <xref:System.Security.Permissions.FileIOPermissionAttribute.Write%2A> properties for a single file or directory.</span></span> <span data-ttu-id="0f201-182">使用其他 <xref:System.Security.Permissions.FileIOPermissionAttribute> 属性来指定其他文件和目录。</span><span class="sxs-lookup"><span data-stu-id="0f201-182">Use additional <xref:System.Security.Permissions.FileIOPermissionAttribute> attributes to specify additional files and directories.</span></span> <span data-ttu-id="0f201-183">访问权限仅适用于文件数据;它们不包括访问控制属性 <xref:System.Security.Permissions.FileIOPermissionAttribute.ViewAccessControl%2A> 和 <xref:System.Security.Permissions.FileIOPermissionAttribute.ChangeAccessControl%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0f201-183">The access rights are for file data only; they do not include the access control properties <xref:System.Security.Permissions.FileIOPermissionAttribute.ViewAccessControl%2A> and <xref:System.Security.Permissions.FileIOPermissionAttribute.ChangeAccessControl%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0f201-184">`get`提供访问器是为了与 c # 编译器兼容。</span><span class="sxs-lookup"><span data-stu-id="0f201-184">The `get` accessor is provided for C# compiler compatibility.</span></span> <span data-ttu-id="0f201-185">C # 编译器要求特性属性是可读/写的。</span><span class="sxs-lookup"><span data-stu-id="0f201-185">The C# compiler requires attribute properties to be read/write.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0f201-186"><see langword="get" /> 访问器被调用。</span><span class="sxs-lookup"><span data-stu-id="0f201-186">The <see langword="get" /> accessor is called.</span></span> <span data-ttu-id="0f201-187">提供访问器是为了与 C# 编译器兼容。</span><span class="sxs-lookup"><span data-stu-id="0f201-187">The accessor is provided only for C# compiler compatibility.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public string Write { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Write" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.FileIOPermissionAttribute.Write" />
      <MemberSignature Language="VB.NET" Value="Public Property Write As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Write { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Write : string with get, set" Usage="System.Security.Permissions.FileIOPermissionAttribute.Write" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f201-188">获取或设置对字符串值所指定的文件或目录的写访问权限。</span><span class="sxs-lookup"><span data-stu-id="0f201-188">Gets or sets write access for the file or directory specified by the string value.</span></span></summary>
        <value><span data-ttu-id="0f201-189">用于写访问的文件或目录的绝对路径。</span><span class="sxs-lookup"><span data-stu-id="0f201-189">The absolute path of the file or directory for write access.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f201-190">此属性设置单个文件或目录的访问权限。</span><span class="sxs-lookup"><span data-stu-id="0f201-190">This property sets access for a single file or directory.</span></span> <span data-ttu-id="0f201-191">使用其他属性来指定其他文件和目录。</span><span class="sxs-lookup"><span data-stu-id="0f201-191">Use additional attributes to specify additional files and directories.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f201-192">下面的示例将 <xref:System.Security.Permissions.FileIOPermissionAttribute.Write%2A> 属性设置为授予对 <xref:System.Security.Permissions.FileIOPermissionAccess.Write> 指定目录中文件的访问权限。</span><span class="sxs-lookup"><span data-stu-id="0f201-192">The following example sets the <xref:System.Security.Permissions.FileIOPermissionAttribute.Write%2A> property to grant <xref:System.Security.Permissions.FileIOPermissionAccess.Write> access to files in the specified directory.</span></span>  
  
 [!code-cpp[System.Security.Permissions.FileIOPermissionAttribute#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/CPP/fileiopermissionattribute.cpp#5)]
 [!code-csharp[System.Security.Permissions.FileIOPermissionAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/CS/fileiopermissionattribute.cs#5)]
 [!code-vb[System.Security.Permissions.FileIOPermissionAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.FileIOPermissionAttribute/VB/fileiopermissionattribute.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
