<Type Name="FilterElement" FullName="System.ServiceModel.Routing.Configuration.FilterElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8f3f5c3988cd44f98081ee20d6422481fd293e3c" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86570399" /></Metadata><TypeSignature Language="C#" Value="public class FilterElement : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FilterElement extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Routing.Configuration.FilterElement" />
  <TypeSignature Language="VB.NET" Value="Public Class FilterElement&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class FilterElement : System::Configuration::ConfigurationElement" />
  <TypeSignature Language="F#" Value="type FilterElement = class&#xA;    inherit ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Routing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1c249-101">表示定义筛选器元素的配置元素。</span><span class="sxs-lookup"><span data-stu-id="1c249-101">Represents a configuration element that defines a filter element.</span></span> <span data-ttu-id="1c249-102">此元素用于定义筛选器的类型，以及筛选器所需的任何支持数据或参数。</span><span class="sxs-lookup"><span data-stu-id="1c249-102">This element is used to define the type of filter, as well as any supporting data or parameters required by the filter.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FilterElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Routing.Configuration.FilterElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FilterElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1c249-103">初始化 <see cref="T:System.ServiceModel.Routing.Configuration.FilterElement" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1c249-103">Initializes a new instance of the <see cref="T:System.ServiceModel.Routing.Configuration.FilterElement" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomType">
      <MemberSignature Language="C#" Value="public string CustomType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CustomType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Routing.Configuration.FilterElement.CustomType" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CustomType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomType : string with get, set" Usage="System.ServiceModel.Routing.Configuration.FilterElement.CustomType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("customType", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.None)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("customType", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.None)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1c249-104">获取或设置要用作筛选器的自定义类型的完全限定类型名称。</span><span class="sxs-lookup"><span data-stu-id="1c249-104">Gets or sets the fully-qualified type name of the custom type to be used as a filter.</span></span></summary>
        <value><span data-ttu-id="1c249-105">完全限定类型。</span><span class="sxs-lookup"><span data-stu-id="1c249-105">The fully-qualified type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c249-106">如果 <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterType%2A> 设置为 Custom，则 <xref:System.ServiceModel.Routing.Configuration.FilterElement.CustomType%2A> 为要创建的类的完全限定类型名称。</span><span class="sxs-lookup"><span data-stu-id="1c249-106">If <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterType%2A> is set to custom, <xref:System.ServiceModel.Routing.Configuration.FilterElement.CustomType%2A> is the fully-qualified type name of the class to create.</span></span> <span data-ttu-id="1c249-107"><xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A> 还可以包含在计算 <xref:System.ServiceModel.Routing.Configuration.FilterElement.CustomType%2A> 筛选器的过程中要使用的值。</span><span class="sxs-lookup"><span data-stu-id="1c249-107"><xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A> can also contain values to be used during evaluation of the <xref:System.ServiceModel.Routing.Configuration.FilterElement.CustomType%2A> filter.</span></span> <span data-ttu-id="1c249-108"><xref:System.ServiceModel.Routing.Configuration.FilterElement.CustomType%2A> 必须实现一个构造函数，该构造函数接受一个包含 <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A> 信息的字符串值。</span><span class="sxs-lookup"><span data-stu-id="1c249-108">The <xref:System.ServiceModel.Routing.Configuration.FilterElement.CustomType%2A> must implement a constructor that accepts a string value, which contains the <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A> information.</span></span>  
  
 <span data-ttu-id="1c249-109">有关详细信息，请参阅 <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>。</span><span class="sxs-lookup"><span data-stu-id="1c249-109">For more information, see <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter1">
      <MemberSignature Language="C#" Value="public string Filter1 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter1" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Routing.Configuration.FilterElement.Filter1" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter1 As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Filter1 { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Filter1 : string with get, set" Usage="System.ServiceModel.Routing.Configuration.FilterElement.Filter1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("filter1", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.None)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("filter1", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.None)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1c249-110">获取或设置此配置元素的 filter1 数据。</span><span class="sxs-lookup"><span data-stu-id="1c249-110">Gets or sets the filter1 data of this configuration element.</span></span> <span data-ttu-id="1c249-111">此值仅在 <see cref="P:System.ServiceModel.Routing.Configuration.FilterElement.FilterType" /> 设置为 And 时使用。</span><span class="sxs-lookup"><span data-stu-id="1c249-111">This value is only used when <see cref="P:System.ServiceModel.Routing.Configuration.FilterElement.FilterType" /> is set to And.</span></span></summary>
        <value><span data-ttu-id="1c249-112">此元素的 filter1 值。</span><span class="sxs-lookup"><span data-stu-id="1c249-112">The filter1 value of this element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c249-113"><xref:System.ServiceModel.Routing.Configuration.FilterElement.Filter1%2A> 的内容仅在计算 AND 筛选器的过程中使用。</span><span class="sxs-lookup"><span data-stu-id="1c249-113">The content of <xref:System.ServiceModel.Routing.Configuration.FilterElement.Filter1%2A> is only used during evaluation of the AND filter.</span></span> <span data-ttu-id="1c249-114">有关详细信息，请参阅 <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>。</span><span class="sxs-lookup"><span data-stu-id="1c249-114">For more information, see <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter2">
      <MemberSignature Language="C#" Value="public string Filter2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter2" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Routing.Configuration.FilterElement.Filter2" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter2 As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Filter2 { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Filter2 : string with get, set" Usage="System.ServiceModel.Routing.Configuration.FilterElement.Filter2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("filter2", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.None)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("filter2", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.None)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1c249-115">获取或设置此配置元素的 filter2 数据。</span><span class="sxs-lookup"><span data-stu-id="1c249-115">Gets or sets the filter2 data of this configuration element.</span></span> <span data-ttu-id="1c249-116">此值仅在 <see cref="P:System.ServiceModel.Routing.Configuration.FilterElement.FilterType" /> 设置为 AND 时使用。</span><span class="sxs-lookup"><span data-stu-id="1c249-116">This value is only used when <see cref="P:System.ServiceModel.Routing.Configuration.FilterElement.FilterType" /> is set to AND.</span></span></summary>
        <value><span data-ttu-id="1c249-117">此元素的 filter2 值。</span><span class="sxs-lookup"><span data-stu-id="1c249-117">The filter2 value of this element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c249-118"><xref:System.ServiceModel.Routing.Configuration.FilterElement.Filter2%2A> 的内容仅在计算 AND 筛选器的过程中使用。</span><span class="sxs-lookup"><span data-stu-id="1c249-118">The content of <xref:System.ServiceModel.Routing.Configuration.FilterElement.Filter2%2A> is only used during evaluation of the AND filters.</span></span> <span data-ttu-id="1c249-119">有关详细信息，请参阅 <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>。</span><span class="sxs-lookup"><span data-stu-id="1c249-119">For more information, see <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterData">
      <MemberSignature Language="C#" Value="public string FilterData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterData" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Routing.Configuration.FilterElement.FilterData" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterData As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterData { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilterData : string with get, set" Usage="System.ServiceModel.Routing.Configuration.FilterElement.FilterData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("filterData", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.None)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("filterData", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.None)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1c249-120">获取或设置此配置元素的筛选数据。</span><span class="sxs-lookup"><span data-stu-id="1c249-120">Gets or sets the filter data of this configuration element.</span></span></summary>
        <value><span data-ttu-id="1c249-121">此元素的筛选数据。</span><span class="sxs-lookup"><span data-stu-id="1c249-121">The filter data of this element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c249-122">下表描述基于 <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A> 的值的 <xref:System.ServiceModel.Routing.Configuration.FilterType> 的含义。</span><span class="sxs-lookup"><span data-stu-id="1c249-122">The following table describes the meaning of <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A> based on the value of <xref:System.ServiceModel.Routing.Configuration.FilterType>.</span></span>  
  
|<span data-ttu-id="1c249-123">筛选器类型</span><span class="sxs-lookup"><span data-stu-id="1c249-123">Filter  Type</span></span>|<span data-ttu-id="1c249-124">说明</span><span class="sxs-lookup"><span data-stu-id="1c249-124">Description</span></span>|<span data-ttu-id="1c249-125">筛选器数据含义</span><span class="sxs-lookup"><span data-stu-id="1c249-125">Filter Data Meaning</span></span>|<span data-ttu-id="1c249-126">示例筛选器</span><span class="sxs-lookup"><span data-stu-id="1c249-126">Example Filter</span></span>|  
|------------------|-----------------|-------------------------|--------------------|  
|<span data-ttu-id="1c249-127">操作</span><span class="sxs-lookup"><span data-stu-id="1c249-127">Action</span></span>|<span data-ttu-id="1c249-128">使用 WCF 附带的 ActionMessageFilter。</span><span class="sxs-lookup"><span data-stu-id="1c249-128">Uses the ActionMessageFilter that comes with WCF.</span></span>|<span data-ttu-id="1c249-129">筛选器基于的操作。</span><span class="sxs-lookup"><span data-stu-id="1c249-129">The Action to filter upon.</span></span>|`<filter name="action1" filterType="Action" filterData="http://ACTION" />`|  
|<span data-ttu-id="1c249-130">地址</span><span class="sxs-lookup"><span data-stu-id="1c249-130">Address</span></span>|<span data-ttu-id="1c249-131">使用 WCF 附带的 EndpointAddressMessageFilter，并忽略主机名。</span><span class="sxs-lookup"><span data-stu-id="1c249-131">Uses the EndpointAddressMessageFilter that comes with WCF with ignore host name == true.</span></span>|<span data-ttu-id="1c249-132">筛选器基于的地址（在 To 标头中）。</span><span class="sxs-lookup"><span data-stu-id="1c249-132">The address to filter upon (in the To header).</span></span>|`<filter name="address1" filterType="Address" filterData="http://host/vdir/s.svc/b" />`|  
|<span data-ttu-id="1c249-133">AddressPrefix</span><span class="sxs-lookup"><span data-stu-id="1c249-133">AddressPrefix</span></span>|<span data-ttu-id="1c249-134">使用 WCF 附带的 PrefixEndpointAddressMessageFilter，并忽略主机名。</span><span class="sxs-lookup"><span data-stu-id="1c249-134">Uses the PrefixEndpointAddressMessageFilter that comes with WCF with ignore host name == true.</span></span>|<span data-ttu-id="1c249-135">筛选器基于的地址（使用最长的前缀匹配项）。</span><span class="sxs-lookup"><span data-stu-id="1c249-135">The address to filter upon using longest prefix matching.</span></span>|`<filter name="prefix1" filterType="AddressPrefix" filterData="http://host" />`|  
|<span data-ttu-id="1c249-136">StrictAnd</span><span class="sxs-lookup"><span data-stu-id="1c249-136">StrictAnd</span></span>|<span data-ttu-id="1c249-137">一个自定义 AndMessageFilter，它总是在返回前同时计算两个条件。</span><span class="sxs-lookup"><span data-stu-id="1c249-137">A custom AndMessageFilter that always evaluates both conditions before returning.</span></span>|<span data-ttu-id="1c249-138">不使用 filterData，而 filter1 和 filter2 具有相应的消息筛选器的名称（也在表中），应用 AND 将它们连接起来。</span><span class="sxs-lookup"><span data-stu-id="1c249-138">filterData is not used, instead filter1 and filter2 have the names of the corresponding messages filters (also in the table), which should be ANDed together.</span></span>|`<filter name="and1" filterType="And" filter1="address1" filter2="action1" />`|  
|<span data-ttu-id="1c249-139">自定义</span><span class="sxs-lookup"><span data-stu-id="1c249-139">Custom</span></span>|<span data-ttu-id="1c249-140">一个用户定义的类型，此类型扩展 MessageFilter 并具有采用字符串的构造函数。</span><span class="sxs-lookup"><span data-stu-id="1c249-140">A user-defined type that extends MessageFilter and has a constructor taking a string.</span></span>|<span data-ttu-id="1c249-141">customType 特性是要创建的类的完全限定类型名称，filterData 是在创建筛选器时要传递给构造函数的字符串。</span><span class="sxs-lookup"><span data-stu-id="1c249-141">customType attribute is the fully-qualified type name of the class to create, filterData is the string to pass to the constructor when creating the filter.</span></span>|`<filter name="custom1" filterType="Custom" customType="CustomAssembly.CustomMsgFilter, CustomAssembly" filterData="Custom Data" />`|  
|<span data-ttu-id="1c249-142">EndpointName</span><span class="sxs-lookup"><span data-stu-id="1c249-142">EndpointName</span></span>|<span data-ttu-id="1c249-143">一个在路由服务中单独使用的自定义消息筛选器，它将基于服务终结点的名称来筛选消息。</span><span class="sxs-lookup"><span data-stu-id="1c249-143">A custom message filter for use solely in the Routing Service, which filters messages based on the name of the service endpoint.</span></span>|<span data-ttu-id="1c249-144">服务终结点的名称，例如： "serviceEndpoint1"。</span><span class="sxs-lookup"><span data-stu-id="1c249-144">The name of the service endpoint, for example: "serviceEndpoint1".</span></span>  <span data-ttu-id="1c249-145">该终结点应为在路由服务上公开的终结点之一。</span><span class="sxs-lookup"><span data-stu-id="1c249-145">This should be one of the endpoints exposed on the Routing Service.</span></span>|`<filter name="stock1" filterType="Endpoint" filterData="SvcEndpoint" />`|  
|<span data-ttu-id="1c249-146">MatchAll</span><span class="sxs-lookup"><span data-stu-id="1c249-146">MatchAll</span></span>|<span data-ttu-id="1c249-147">使用 WCF 附带的 MatchAllMessageFilter。</span><span class="sxs-lookup"><span data-stu-id="1c249-147">Uses the MatchAllMessageFilter that comes with WCF.</span></span>|<span data-ttu-id="1c249-148">不适用</span><span class="sxs-lookup"><span data-stu-id="1c249-148">N/A</span></span>|`<filter name="matchAll1" filterType="MatchAll" />`|  
|<span data-ttu-id="1c249-149">XPath</span><span class="sxs-lookup"><span data-stu-id="1c249-149">XPath</span></span>|<span data-ttu-id="1c249-150">使用 WCF 附带的 XPathMessageFilter。</span><span class="sxs-lookup"><span data-stu-id="1c249-150">Uses the XPathMessageFilter that comes with WCF.</span></span>|<span data-ttu-id="1c249-151">在匹配消息时要使用的 XPath 查询。</span><span class="sxs-lookup"><span data-stu-id="1c249-151">The XPath query to use when matching messages.</span></span>|`<filter name="XPath1" filterType="XPath" filterData="//ns:element" />`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterType">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Routing.Configuration.FilterType FilterType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Routing.Configuration.FilterType FilterType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Routing.Configuration.FilterElement.FilterType" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterType As FilterType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Routing::Configuration::FilterType FilterType { System::ServiceModel::Routing::Configuration::FilterType get(); void set(System::ServiceModel::Routing::Configuration::FilterType value); };" />
      <MemberSignature Language="F#" Value="member this.FilterType : System.ServiceModel.Routing.Configuration.FilterType with get, set" Usage="System.ServiceModel.Routing.Configuration.FilterElement.FilterType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("filterType", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.IsRequired)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("filterType", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.IsRequired)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Routing.Configuration.FilterType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1c249-152">获取或设置此配置元素的 <see cref="T:System.ServiceModel.Routing.Configuration.FilterType" />。</span><span class="sxs-lookup"><span data-stu-id="1c249-152">Gets or sets the <see cref="T:System.ServiceModel.Routing.Configuration.FilterType" /> of this configuration element.</span></span></summary>
        <value><span data-ttu-id="1c249-153">此元素的筛选器类型。</span><span class="sxs-lookup"><span data-stu-id="1c249-153">The filter type of this element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Routing.Configuration.FilterElement.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.ServiceModel.Routing.Configuration.FilterElement.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("name", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.IsKey | System.Configuration.ConfigurationPropertyOptions.IsRequired)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("name", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.IsKey | System.Configuration.ConfigurationPropertyOptions.IsRequired)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1c249-154">获取或设置此配置元素的名称。</span><span class="sxs-lookup"><span data-stu-id="1c249-154">Gets or sets the name of this configuration element.</span></span></summary>
        <value><span data-ttu-id="1c249-155">此配置元素的唯一名称。</span><span class="sxs-lookup"><span data-stu-id="1c249-155">The unique name of this configuration element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
