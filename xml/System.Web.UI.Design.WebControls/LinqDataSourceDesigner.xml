<Type Name="LinqDataSourceDesigner" FullName="System.Web.UI.Design.WebControls.LinqDataSourceDesigner">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0b8f7fae74a4aaf2e091a46653b633d1cbd155e7" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89919148" /></Metadata><TypeSignature Language="C#" Value="public class LinqDataSourceDesigner : System.Web.UI.Design.DataSourceDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinqDataSourceDesigner extends System.Web.UI.Design.DataSourceDesigner" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.WebControls.LinqDataSourceDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSourceDesigner&#xA;Inherits DataSourceDesigner" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSourceDesigner : System::Web::UI::Design::DataSourceDesigner" />
  <TypeSignature Language="F#" Value="type LinqDataSourceDesigner = class&#xA;    inherit DataSourceDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions.Design</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.DataSourceDesigner</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件提供设计时支持。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在可视化设计器中切换到设计器视图 (如 Visual Studio) 中的 " **设计** " 视图时，将 <xref:System.Web.UI.WebControls.LinqDataSource> 分析控件标记。 然后，在设计图面上创建该控件的设计时版本。 切换到 "源" 视图时，设计时控件将作为网页的标记保存。  
  
 <xref:System.Web.UI.Design.WebControls.LinqDataSourceDesigner>类 <xref:System.Web.UI.WebControls.LinqDataSource> 在可视化设计器中为控件提供设计时支持。  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>若要在设计时为 "操作列表" 菜单提供派生类中的命令，必须重写 <see cref="P:System.Web.UI.Design.ControlDesigner.ActionLists" /> 属性。 对于此属性，返回一个自定义 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 对象，该对象包含从对象派生的项 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 。  
  
有关更多信息，请参见 <see cref="T:System.Web.UI.Design.DataSourceDesigner" /> 类。</para></block>
    <altmember cref="T:System.Web.UI.Design.DataSourceDesigner" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/wxh45wzs(v=vs.100)">ASP.NET 控件设计器概述</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/12yydcke(v=vs.100)">演练：为 Web 服务器控件创建基本控件设计器</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">扩展设计时支持</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">如何：在设计模式下扩展控件的外观和行为</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceDesigner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.LinqDataSourceDesigner" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.Design.DataSourceDesigner" />
        <altmember cref="T:System.Web.UI.WebControls.LinqDataSource" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/wxh45wzs(v=vs.100)">ASP.NET 控件设计器概述</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/12yydcke(v=vs.100)">演练：为 Web 服务器控件创建基本控件设计器</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">扩展设计时支持</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">如何：在设计模式下扩展控件的外观和行为</related>
      </Docs>
    </Member>
    <Member MemberName="ActionLists">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.Design.DesignerActionListCollection ActionLists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerActionListCollection ActionLists" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.ActionLists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ActionLists As DesignerActionListCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Design::DesignerActionListCollection ^ ActionLists { System::ComponentModel::Design::DesignerActionListCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActionLists : System.ComponentModel.Design.DesignerActionListCollection" Usage="System.Web.UI.Design.WebControls.LinqDataSourceDesigner.ActionLists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerActionListCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取项的列表，其中的项用来在设计时创建操作列表菜单。</summary>
        <value>包含操作列表项的集合。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.Design.DataSourceDesigner" />
        <altmember cref="T:System.Web.UI.WebControls.LinqDataSource" />
      </Docs>
    </Member>
    <Member MemberName="CanConfigure">
      <MemberSignature Language="C#" Value="public override bool CanConfigure { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanConfigure" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.CanConfigure" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanConfigure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanConfigure { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanConfigure : bool" Usage="System.Web.UI.Design.WebControls.LinqDataSourceDesigner.CanConfigure" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 <see cref="M:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.Configure" /> 方法是否可被设计宿主调用。</summary>
        <value>如果可以调用 <see cref="M:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.Configure" /> 方法，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.Configure%2A>如果 <xref:System.Web.UI.Control.Site%2A?displayProperty=nameWithType> 关联的控件的属性 <xref:System.Web.UI.WebControls.LinqDataSource> 实现了接口，则可以调用方法 <xref:System.ComponentModel.Design.ITypeDiscoveryService?displayProperty=nameWithType> 。 在这种情况下， <xref:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.CanConfigure%2A> 属性值为 `true` 。  
  
 如果 <xref:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.CanConfigure%2A> 属性为 `true` ，则 " **配置数据源** " 菜单项将显示在可视化设计器图面上关联控件的 " **LinqDataSource 任务** " 菜单中。 选择此项时，将启动 " **配置数据源** " 向导。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.Configure" />
        <altmember cref="T:System.Web.UI.Design.DataSourceDesigner" />
        <altmember cref="T:System.Web.UI.WebControls.LinqDataSource" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">扩展设计时支持</related>
      </Docs>
    </Member>
    <Member MemberName="CanRefreshSchema">
      <MemberSignature Language="C#" Value="public override bool CanRefreshSchema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRefreshSchema" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.CanRefreshSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRefreshSchema As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRefreshSchema { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRefreshSchema : bool" Usage="System.Web.UI.Design.WebControls.LinqDataSourceDesigner.CanRefreshSchema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 <see cref="M:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.RefreshSchema(System.Boolean)" /> 方法是否可被设计宿主调用。</summary>
        <value>如果可以调用 <see cref="M:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.RefreshSchema(System.Boolean)" /> 方法，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.RefreshSchema%2A>如果满足以下所有条件，则可以调用方法：  
  
-   <xref:System.Web.UI.Control.Site%2A?displayProperty=nameWithType>关联控件的属性 <xref:System.Web.UI.WebControls.LinqDataSource> 实现 <xref:System.ComponentModel.Design.ITypeDiscoveryService?displayProperty=nameWithType> 接口。  
  
-   <xref:System.Web.UI.WebControls.LinqDataSourceView.ContextTypeName%2A>属性包含一个值。  
  
 如果这些条件为 true，则 <xref:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.CanRefreshSchema%2A> 属性值为 `true` 。  
  
 如果 <xref:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.CanRefreshSchema%2A> 为 `true` ，则 " **刷新架构** " 菜单项将显示在可视化设计器图面上关联控件的 " **LinqDataSource 任务** " 菜单中。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.DataSourceDesigner" />
        <altmember cref="T:System.Web.UI.WebControls.LinqDataSource" />
        <altmember cref="M:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.RefreshSchema(System.Boolean)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">扩展设计时支持</related>
      </Docs>
    </Member>
    <Member MemberName="Configure">
      <MemberSignature Language="C#" Value="public override void Configure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Configure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.Configure" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Configure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Configure();" />
      <MemberSignature Language="F#" Value="override this.Configure : unit -&gt; unit" Usage="linqDataSourceDesigner.Configure " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在设计宿主中启动数据源配置向导。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.Configure%2A>方法在可视化设计器图面上启动 "**配置数据源**" 向导。  
  
 <xref:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.Configure%2A>当在关联控件的 " **LinqDataSource 任务**" 菜单上选择 "**配置数据源**" 菜单项时，将调用方法 <xref:System.Web.UI.WebControls.LinqDataSource> 。 当属性为时，" **配置数据源** " 菜单项将出现在 " **LinqDataSource 任务** " 菜单上 <xref:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.CanConfigure%2A> `true` 。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">扩展设计时支持</related>
      </Docs>
    </Member>
    <Member MemberName="ContextTypeName">
      <MemberSignature Language="C#" Value="public string ContextTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContextTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.ContextTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property ContextTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContextTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextTypeName : string with get, set" Usage="System.Web.UI.Design.WebControls.LinqDataSourceDesigner.ContextTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Data")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Data")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.MergableProperty(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.MergableProperty(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Web.UI.Design.WebControls.LinqDataSourceContextTypeConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Web.UI.Design.WebControls.LinqDataSourceContextTypeConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.ResourceDescription("LinqDataSource_ContextTypeName")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.ResourceDescription("LinqDataSource_ContextTypeName")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置包含属性（其值包含要检索的数据）的类型的名称。</summary>
        <value>要从中检索数据的类的名称。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.Design.DataSourceDesigner" />
        <altmember cref="T:System.Web.UI.WebControls.LinqDataSource" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public string Delete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Delete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Property Delete As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Delete { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Delete : string with get, set" Usage="System.Web.UI.Design.WebControls.LinqDataSourceDesigner.Delete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Data")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Data")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Editor(typeof(System.Web.UI.Design.WebControls.LinqDataSourceStatementEditor), typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor(typeof(System.Web.UI.Design.WebControls.LinqDataSourceStatementEditor), typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.MergableProperty(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.MergableProperty(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Web.UI.Design.WebControls.LinqDataSourceInsertUpdateDeleteStatementConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Web.UI.Design.WebControls.LinqDataSourceInsertUpdateDeleteStatementConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.ResourceDescription("LinqDataSource_DeleteParameters")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.ResourceDescription("LinqDataSource_DeleteParameters")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置删除操作的一个值。</summary>
        <value><see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 <xref:System.Web.UI.WebControls.LinqDataSource> 实例中，设置此属性不起作用。 此属性隐藏关联控件中的属性，仅供内部使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.DataSourceDesigner" />
        <altmember cref="T:System.Web.UI.WebControls.LinqDataSource" />
      </Docs>
    </Member>
    <Member MemberName="EnableDelete">
      <MemberSignature Language="C#" Value="public bool EnableDelete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.EnableDelete" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableDelete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableDelete { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableDelete : bool with get, set" Usage="System.Web.UI.Design.WebControls.LinqDataSourceDesigner.EnableDelete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否可以在运行时从数据源中删除行。</summary>
        <value>如果为关联的 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 实例的用户启用了删除操作，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.LinqDataSource" />
      </Docs>
    </Member>
    <Member MemberName="EnableInsert">
      <MemberSignature Language="C#" Value="public bool EnableInsert { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.EnableInsert" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableInsert { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableInsert : bool with get, set" Usage="System.Web.UI.Design.WebControls.LinqDataSourceDesigner.EnableInsert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否可以在运行时向数据源中插入行。</summary>
        <value>如果为关联的 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 实例的用户启用了插入操作，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.Design.DataSourceDesigner" />
        <altmember cref="T:System.Web.UI.WebControls.LinqDataSource" />
      </Docs>
    </Member>
    <Member MemberName="EnableUpdate">
      <MemberSignature Language="C#" Value="public bool EnableUpdate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.EnableUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableUpdate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableUpdate : bool with get, set" Usage="System.Web.UI.Design.WebControls.LinqDataSourceDesigner.EnableUpdate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否可以在运行时更新数据源中的行。</summary>
        <value>如果为关联的 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 实例的用户启用了更新操作，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.Design.DataSourceDesigner" />
        <altmember cref="T:System.Web.UI.WebControls.LinqDataSource" />
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="public override System.Web.UI.Design.DesignerDataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.Design.DesignerDataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetView (viewName As String) As DesignerDataSourceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::Design::DesignerDataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="override this.GetView : string -&gt; System.Web.UI.Design.DesignerDataSourceView" Usage="linqDataSourceDesigner.GetView viewName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.DesignerDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">要返回的视图的名称。</param>
        <summary>返回具有指定名称的数据源视图。</summary>
        <returns>一个具有由 <paramref name="viewName" /> 指定的名称的对象；否则为 <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.Design.DataSourceDesigner" />
        <altmember cref="T:System.Web.UI.WebControls.LinqDataSource" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">扩展设计时支持</related>
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="public override string[] GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetViewNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="override this.GetViewNames : unit -&gt; string[]" Usage="linqDataSourceDesigner.GetViewNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取可用视图的列表。</summary>
        <returns>具有一个包含名称“DefaultView”的元素的集合。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.Design.DataSourceDesigner" />
        <altmember cref="T:System.Web.UI.WebControls.LinqDataSource" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">扩展设计时支持</related>
      </Docs>
    </Member>
    <Member MemberName="GroupBy">
      <MemberSignature Language="C#" Value="public string GroupBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GroupBy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.GroupBy" />
      <MemberSignature Language="VB.NET" Value="Public Property GroupBy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ GroupBy { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GroupBy : string with get, set" Usage="System.Web.UI.Design.WebControls.LinqDataSourceDesigner.GroupBy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Data")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Data")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Editor(typeof(System.Web.UI.Design.WebControls.LinqDataSourceStatementEditor), typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor(typeof(System.Web.UI.Design.WebControls.LinqDataSourceStatementEditor), typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.MergableProperty(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.MergableProperty(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.ResourceDescription("LinqDataSource_GroupBy")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.ResourceDescription("LinqDataSource_GroupBy")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在创建 Group By 子句时使用的值。</summary>
        <value>一个字符串，其中包含用于数据分组的属性。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.Design.DataSourceDesigner" />
        <altmember cref="T:System.Web.UI.WebControls.LinqDataSource" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.Initialize(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="override this.Initialize : System.ComponentModel.IComponent -&gt; unit" Usage="linqDataSourceDesigner.Initialize component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">要初始化的对象。</param>
        <summary>初始化控件设计器并加载指定的组件。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.Design.DataSourceDesigner" />
        <altmember cref="T:System.Web.UI.WebControls.LinqDataSource" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public string Insert { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Insert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.Insert" />
      <MemberSignature Language="VB.NET" Value="Public Property Insert As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Insert { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Insert : string with get, set" Usage="System.Web.UI.Design.WebControls.LinqDataSourceDesigner.Insert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Data")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Data")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Editor(typeof(System.Web.UI.Design.WebControls.LinqDataSourceStatementEditor), typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor(typeof(System.Web.UI.Design.WebControls.LinqDataSourceStatementEditor), typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.MergableProperty(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.MergableProperty(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Web.UI.Design.WebControls.LinqDataSourceInsertUpdateDeleteStatementConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Web.UI.Design.WebControls.LinqDataSourceInsertUpdateDeleteStatementConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.ResourceDescription("LinqDataSource_InsertParameters")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.ResourceDescription("LinqDataSource_InsertParameters")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置删除操作的一个值。</summary>
        <value><see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 <xref:System.Web.UI.WebControls.LinqDataSource> 实例中，设置此属性不起作用。 此属性隐藏关联控件中的属性，仅供内部使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.DataSourceDesigner" />
        <altmember cref="T:System.Web.UI.WebControls.LinqDataSource" />
      </Docs>
    </Member>
    <Member MemberName="OrderBy">
      <MemberSignature Language="C#" Value="public string OrderBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OrderBy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.OrderBy" />
      <MemberSignature Language="VB.NET" Value="Public Property OrderBy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OrderBy { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OrderBy : string with get, set" Usage="System.Web.UI.Design.WebControls.LinqDataSourceDesigner.OrderBy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Data")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Data")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Editor(typeof(System.Web.UI.Design.WebControls.LinqDataSourceStatementEditor), typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor(typeof(System.Web.UI.Design.WebControls.LinqDataSourceStatementEditor), typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.MergableProperty(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.MergableProperty(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.ResourceDescription("LinqDataSource_OrderBy")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.ResourceDescription("LinqDataSource_OrderBy")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在创建 Order By 子句时使用的值。</summary>
        <value>一个字符串，其中包含用于数据排序的属性。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.Design.DataSourceDesigner" />
        <altmember cref="T:System.Web.UI.WebControls.LinqDataSource" />
      </Docs>
    </Member>
    <Member MemberName="OrderGroupsBy">
      <MemberSignature Language="C#" Value="public string OrderGroupsBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OrderGroupsBy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.OrderGroupsBy" />
      <MemberSignature Language="VB.NET" Value="Public Property OrderGroupsBy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OrderGroupsBy { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OrderGroupsBy : string with get, set" Usage="System.Web.UI.Design.WebControls.LinqDataSourceDesigner.OrderGroupsBy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Data")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Data")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Editor(typeof(System.Web.UI.Design.WebControls.LinqDataSourceStatementEditor), typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor(typeof(System.Web.UI.Design.WebControls.LinqDataSourceStatementEditor), typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.MergableProperty(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.MergableProperty(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.ResourceDescription("LinqDataSource_OrderGroupsBy")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.ResourceDescription("LinqDataSource_OrderGroupsBy")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在创建 Order Groups By 子句时使用的值。</summary>
        <value>一个字符串，其中包含用于排序分组数据的属性。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.Design.DataSourceDesigner" />
        <altmember cref="T:System.Web.UI.WebControls.LinqDataSource" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="protected override void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="override this.PreFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="linqDataSourceDesigner.PreFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">要筛选的属性。</param>
        <summary>由设计器用来在属性网格中添加或移除属性。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.Design.DataSourceDesigner" />
        <altmember cref="T:System.Web.UI.WebControls.LinqDataSource" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">扩展设计时支持</related>
      </Docs>
    </Member>
    <Member MemberName="RefreshSchema">
      <MemberSignature Language="C#" Value="public override void RefreshSchema (bool preferSilent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RefreshSchema(bool preferSilent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.RefreshSchema(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RefreshSchema (preferSilent As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RefreshSchema(bool preferSilent);" />
      <MemberSignature Language="F#" Value="override this.RefreshSchema : bool -&gt; unit" Usage="linqDataSourceDesigner.RefreshSchema preferSilent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="preferSilent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="preferSilent"><see langword="true" /> 表示取消所有数据源事件，直到刷新架构为止。</param>
        <summary>从基础数据源刷新架构。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.RefreshSchema%2A>仅当为时，设计宿主才调用方法 <xref:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.CanRefreshSchema%2A> `true` 。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.DataSourceDesigner" />
        <altmember cref="T:System.Web.UI.WebControls.LinqDataSource" />
        <altmember cref="P:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.CanRefreshSchema" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">扩展设计时支持</related>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public string Select { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Select" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.Select" />
      <MemberSignature Language="VB.NET" Value="Public Property Select As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Select { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Select : string with get, set" Usage="System.Web.UI.Design.WebControls.LinqDataSourceDesigner.Select" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Data")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Data")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Editor(typeof(System.Web.UI.Design.WebControls.LinqDataSourceStatementEditor), typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor(typeof(System.Web.UI.Design.WebControls.LinqDataSourceStatementEditor), typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.MergableProperty(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.MergableProperty(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.ResourceDescription("LinqDataSource_Select")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.ResourceDescription("LinqDataSource_Select")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置包含用于选择操作的值的字符串。</summary>
        <value>一个在创建 Select 子句时使用的字符串。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.Design.DataSourceDesigner" />
        <altmember cref="T:System.Web.UI.WebControls.LinqDataSource" />
      </Docs>
    </Member>
    <Member MemberName="ServiceProvider">
      <MemberSignature Language="C#" Value="public IServiceProvider ServiceProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IServiceProvider ServiceProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.ServiceProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceProvider As IServiceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IServiceProvider ^ ServiceProvider { IServiceProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceProvider : IServiceProvider" Usage="System.Web.UI.Design.WebControls.LinqDataSourceDesigner.ServiceProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 实例关联的服务提供程序。</summary>
        <value>一个表示服务提供程序的对象。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.Design.DataSourceDesigner" />
        <altmember cref="T:System.Web.UI.WebControls.LinqDataSource" />
      </Docs>
    </Member>
    <Member MemberName="TableName">
      <MemberSignature Language="C#" Value="public string TableName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TableName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.TableName" />
      <MemberSignature Language="VB.NET" Value="Public Property TableName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TableName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TableName : string with get, set" Usage="System.Web.UI.Design.WebControls.LinqDataSourceDesigner.TableName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Data")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Data")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.MergableProperty(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.MergableProperty(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Web.UI.Design.WebControls.LinqDataSourceTableConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Web.UI.Design.WebControls.LinqDataSourceTableConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.ResourceDescription("LinqDataSource_TableName")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.ResourceDescription("LinqDataSource_TableName")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> 实例的 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 属性。</summary>
        <value>包含数据的类的名称。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.Design.DataSourceDesigner" />
        <altmember cref="T:System.Web.UI.WebControls.LinqDataSource" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public string Update { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Update" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.Update" />
      <MemberSignature Language="VB.NET" Value="Public Property Update As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Update { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Update : string with get, set" Usage="System.Web.UI.Design.WebControls.LinqDataSourceDesigner.Update" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Data")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Data")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Editor(typeof(System.Web.UI.Design.WebControls.LinqDataSourceStatementEditor), typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor(typeof(System.Web.UI.Design.WebControls.LinqDataSourceStatementEditor), typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.MergableProperty(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.MergableProperty(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Web.UI.Design.WebControls.LinqDataSourceInsertUpdateDeleteStatementConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Web.UI.Design.WebControls.LinqDataSourceInsertUpdateDeleteStatementConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.ResourceDescription("LinqDataSource_UpdateParameters")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.ResourceDescription("LinqDataSource_UpdateParameters")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取更新操作的值。</summary>
        <value><see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 <xref:System.Web.UI.WebControls.LinqDataSource> 实例中，设置此属性不起作用。 此属性隐藏关联控件中的属性，仅供内部使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.DataSourceDesigner" />
        <altmember cref="T:System.Web.UI.WebControls.LinqDataSource" />
      </Docs>
    </Member>
    <Member MemberName="Where">
      <MemberSignature Language="C#" Value="public string Where { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Where" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.Where" />
      <MemberSignature Language="VB.NET" Value="Public Property Where As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Where { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Where : string with get, set" Usage="System.Web.UI.Design.WebControls.LinqDataSourceDesigner.Where" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions.Design</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Data")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Data")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Editor(typeof(System.Web.UI.Design.WebControls.LinqDataSourceStatementEditor), typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor(typeof(System.Web.UI.Design.WebControls.LinqDataSourceStatementEditor), typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.MergableProperty(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.MergableProperty(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.ResourceDescription("LinqDataSource_Where")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.ResourceDescription("LinqDataSource_Where")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件的 <see cref="P:System.Web.UI.WebControls.LinqDataSource.Where" /> 属性。</summary>
        <value><see cref="P:System.Web.UI.WebControls.LinqDataSource.Where" /> 属性的值。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.Design.DataSourceDesigner" />
        <altmember cref="T:System.Web.UI.WebControls.LinqDataSource" />
      </Docs>
    </Member>
  </Members>
</Type>
