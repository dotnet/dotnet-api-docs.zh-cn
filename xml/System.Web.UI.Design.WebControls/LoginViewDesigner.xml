<Type Name="LoginViewDesigner" FullName="System.Web.UI.Design.WebControls.LoginViewDesigner">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1e40a8cc2738dd61d7dd685ee1fabba5df945b95" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86662088" /></Metadata><TypeSignature Language="C#" Value="public class LoginViewDesigner : System.Web.UI.Design.ControlDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LoginViewDesigner extends System.Web.UI.Design.ControlDesigner" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.WebControls.LoginViewDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Class LoginViewDesigner&#xA;Inherits ControlDesigner" />
  <TypeSignature Language="C++ CLI" Value="public ref class LoginViewDesigner : System::Web::UI::Design::ControlDesigner" />
  <TypeSignature Language="F#" Value="type LoginViewDesigner = class&#xA;    inherit ControlDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.ControlDesigner</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.LoginView" /> Web 服务器控件提供设计时支持。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LoginView>控件呈现其一个模板，该模板由用户是否登录到主机网站以及包含登录用户帐户的角色确定。  
  
 在可视化设计器中，当您从源切换到设计视图时，将分析描述控件的标记源代码， <xref:System.Web.UI.WebControls.LoginView> 并在设计图面上创建控件的设计时版本。 切换回源视图时，会将设计时控件持久保存到标记源代码，并将其编辑到网页的标记中。 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner>类为控件提供设计时支持 <xref:System.Web.UI.WebControls.LoginView> 。  
  
 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.ActionLists%2A>属性返回一个 <xref:System.ComponentModel.Design.DesignerActionListCollection> 对象，该对象通常包含一个对象，该对象是从 <xref:System.ComponentModel.Design.DesignerActionList> 设计器的继承树中的每个级别派生的。 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.TemplateGroups%2A>属性为关联的控件的模板返回模板组的集合 <xref:System.Web.UI.WebControls.LoginView> 。 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.UsePreviewControl%2A>属性始终返回 `true` ，指示设计器创建关联控件的临时副本 <xref:System.Web.UI.WebControls.LoginView> 以生成设计时标记。  
  
 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner>类方法提供了以下功能：  
  
-   <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml%2A>方法返回用于 <xref:System.Web.UI.WebControls.LoginView> 在设计时呈现关联控件的标记。 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEmptyDesignTimeHtml%2A>如果未定义当前模板，则方法将获取在设计时呈现关联控件的占位符的标记。 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetErrorDesignTimeHtml%2A>方法提供在发生错误时在设计时呈现关联控件的标记。  
  
-   <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEditableDesignerRegionContent%2A>方法返回关联控件的当前模板的序列化副本 <xref:System.Web.UI.WebControls.LoginView> 。 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.SetEditableDesignerRegionContent%2A>方法从控件模板的序列化副本设置关联控件的一个区域。  
  
-   <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.Initialize%2A>方法准备设计器，以查看、编辑和设计关联的 <xref:System.Web.UI.WebControls.LoginView> 控件。 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.OnComponentChanged%2A>当关联的控件发生更改时，将调用方法。 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.PreFilterProperties%2A>方法用于从关联控件的中移除属性、向其添加其他属性或隐藏属性。  
  
   
  
## Examples  
 下面的代码示例演示如何扩展 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner> 类，以便在设计时更改从控件派生的控件的外观和行为 <xref:System.Web.UI.WebControls.LoginView> 。  
  
 该示例从派生 `MyLoginView` 控件 <xref:System.Web.UI.WebControls.LoginView> 。 `MyLoginView`是控件的副本 <xref:System.Web.UI.WebControls.LoginView> 。 该示例还 `MyLoginViewDesigner` 从类派生类 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner> ，并 <xref:System.ComponentModel.DesignerAttribute> `MyLoginViewDesigner` 在控件上应用的特性 `MyLoginView` 。  
  
 `MyLoginViewDesigner`控件重写以下 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner> 成员：  
  
-   <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.PreFilterProperties%2A>用于使 <xref:System.Web.UI.Control.NamingContainer%2A> 属性在设计时在 "**属性**" 网格中可见的方法。  
  
-   <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml%2A>用于在控件周围绘制橙色边框以使其范围更可见的方法。  
  
-   <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetErrorDesignTimeHtml%2A>为包含错误消息的占位符生成标记的方法，该错误消息以红色粗体文本显示。  
  
-   <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEmptyDesignTimeHtml%2A>为包含为控件定义的角色组的名称的占位符生成标记的方法。  
  
-   <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.Initialize%2A> <xref:System.ArgumentException> 如果关联的控件不是对象，则为引发异常的方法 `MyLoginView` 。  
  
 [!code-csharp[System.Web.UI.Design.WebControls.LoginViewDesigner#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/CS/LoginViewDesigner.cs#1)]
 [!code-vb[System.Web.UI.Design.WebControls.LoginViewDesigner#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/VB/LoginViewDesigner.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.LoginView" />
    <altmember cref="T:System.Web.UI.Control" />
    <altmember cref="T:System.Web.UI.Design.ControlDesigner" />
    <altmember cref="T:System.Web.UI.Design.HtmlControlDesigner" />
    <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/wxh45wzs(v=vs.100)">ASP.NET 控件设计器简介</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/12yydcke(v=vs.100)">演练：为 Web 服务器控件创建基本控件设计器</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LoginViewDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LoginViewDesigner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LoginViewDesigner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.LoginViewDesigner" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner>当在 <xref:System.Web.UI.WebControls.LoginView> 设计图面上创建关联控件或该控件的副本时，.NET Framework 在内部构造该类的新实例。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.LoginView" />
        <altmember cref="T:System.Web.UI.Design.ControlDesigner" />
        <altmember cref="T:System.Web.UI.Design.HtmlControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
      </Docs>
    </Member>
    <Member MemberName="ActionLists">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.Design.DesignerActionListCollection ActionLists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerActionListCollection ActionLists" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.WebControls.LoginViewDesigner.ActionLists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ActionLists As DesignerActionListCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Design::DesignerActionListCollection ^ ActionLists { System::ComponentModel::Design::DesignerActionListCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActionLists : System.ComponentModel.Design.DesignerActionListCollection" Usage="System.Web.UI.Design.WebControls.LoginViewDesigner.ActionLists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerActionListCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此设计器的设计器操作列表集合。</summary>
        <value>与此设计器关联的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.ActionLists%2A>属性 <xref:System.ComponentModel.Design.DesignerActionList> 为类创建一个对象 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner> ，将其添加到 <xref:System.ComponentModel.Design.DesignerActionListCollection> 从基属性获取的， <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.ActionLists%2A> 然后返回 <xref:System.ComponentModel.Design.DesignerActionListCollection> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.LoginView" />
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
        <altmember cref="T:System.ComponentModel.Design.DesignerActionListCollection" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.ActionLists" />
        <altmember cref="P:System.ComponentModel.Design.ComponentDesigner.ActionLists" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDesignTimeHtml">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>获取用于在设计时呈现关联的 <see cref="T:System.Web.UI.WebControls.LoginView" /> 控件的标记。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDesignTimeHtml">
      <MemberSignature Language="C#" Value="public override string GetDesignTimeHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDesignTimeHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDesignTimeHtml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetDesignTimeHtml();" />
      <MemberSignature Language="F#" Value="override this.GetDesignTimeHtml : unit -&gt; string" Usage="loginViewDesigner.GetDesignTimeHtml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取用于在设计时呈现关联控件的标记。</summary>
        <returns>一个字符串，其中包含用于在设计时呈现 <see cref="T:System.Web.UI.WebControls.LoginView" /> 的标记。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml%2A>方法将关联控件的模板索引设置 <xref:System.Web.UI.WebControls.LoginView> 为当前设计时索引，并在必要时使关联控件重新创建和数据绑定其子控件。 接下来， <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml%2A> 调用 <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> 基方法来生成标记。  
  
   
  
## Examples  
 下面的代码示例演示如何 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml%2A> 在从类继承的类中重写方法 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner> ，以便在设计时更改从类派生的控件的外观 <xref:System.Web.UI.WebControls.LoginView> 。 该示例在控件周围绘制橙色边框，使其范围更可见。  
  
 [!code-csharp[System.Web.UI.Design.WebControls.LoginViewDesigner#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/CS/LoginViewDesigner.cs#4)]
 [!code-vb[System.Web.UI.Design.WebControls.LoginViewDesigner#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/VB/LoginViewDesigner.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>如果重写 <see cref="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml" /> 方法，请务必调用 <see cref="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" /> 基方法，因为它最终会通过多个重写级别、对控件的调用 <see cref="T:System.Web.UI.WebControls.LoginView" /> 或控件的副本来生成标记。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.LoginView" />
        <altmember cref="M:System.Web.UI.WebControls.LoginView.SetDesignModeState(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeHtml">
      <MemberSignature Language="C#" Value="public override string GetDesignTimeHtml (System.Web.UI.Design.DesignerRegionCollection regions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDesignTimeHtml(class System.Web.UI.Design.DesignerRegionCollection regions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDesignTimeHtml (regions As DesignerRegionCollection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetDesignTimeHtml(System::Web::UI::Design::DesignerRegionCollection ^ regions);" />
      <MemberSignature Language="F#" Value="override this.GetDesignTimeHtml : System.Web.UI.Design.DesignerRegionCollection -&gt; string" Usage="loginViewDesigner.GetDesignTimeHtml regions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regions" Type="System.Web.UI.Design.DesignerRegionCollection" />
      </Parameters>
      <Docs>
        <param name="regions">一个 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" />，其中将添加 <see cref="T:System.Web.UI.WebControls.LoginView" /> 的设计时视图中的可选择和可单击区域。</param>
        <summary>获取用于在设计时呈现关联控件的标记，并填充设计器区域的集合。</summary>
        <returns>一个字符串，其中包含用于在设计时呈现 <see cref="T:System.Web.UI.WebControls.LoginView" /> 的标记。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml%2A>方法 <xref:System.Web.UI.Design.EditableDesignerRegion> 为可视化设计器图面上的模板编辑区域创建一个对象，然后将其初始化为模板。 如果未定义任何模板，则会显示一个字符串，提示您单击开始编辑。 预定义的常量用于生成返回的标记。  
  
   
  
## Examples  
 下面的代码示例演示如何 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml%2A> 在从类继承的类中重写方法 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner> ，以便在设计时更改从类派生的控件的外观 <xref:System.Web.UI.WebControls.LoginView> 。 该示例在控件周围绘制橙色边框，使其范围更可见。  
  
 [!code-csharp[System.Web.UI.Design.WebControls.LoginViewDesigner#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/CS/LoginViewDesigner.cs#4)]
 [!code-vb[System.Web.UI.Design.WebControls.LoginViewDesigner#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/VB/LoginViewDesigner.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>此 <see cref="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" /> 重载不会对其基方法或控件调用 <see cref="T:System.Web.UI.WebControls.LoginView" /> 来生成标记。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.LoginView" />
        <altmember cref="T:System.Web.UI.Design.EditableDesignerRegion" />
        <altmember cref="T:System.Web.UI.Design.DesignerRegionCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetEditableDesignerRegionContent">
      <MemberSignature Language="C#" Value="public override string GetEditableDesignerRegionContent (System.Web.UI.Design.EditableDesignerRegion region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetEditableDesignerRegionContent(class System.Web.UI.Design.EditableDesignerRegion region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEditableDesignerRegionContent (region As EditableDesignerRegion) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetEditableDesignerRegionContent(System::Web::UI::Design::EditableDesignerRegion ^ region);" />
      <MemberSignature Language="F#" Value="override this.GetEditableDesignerRegionContent : System.Web.UI.Design.EditableDesignerRegion -&gt; string" Usage="loginViewDesigner.GetEditableDesignerRegionContent region" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Web.UI.Design.EditableDesignerRegion" />
      </Parameters>
      <Docs>
        <param name="region">要为其获取内容的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />。</param>
        <summary>返回用于在设计时呈现关联控件的当前模板的序列化副本。</summary>
        <returns>一个字符串，其中包含用于在设计时呈现关联 <see cref="T:System.Web.UI.WebControls.LoginView" /> 的模板的序列化副本。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 <xref:System.Web.UI.ITemplate> 可从参数中获取实现接口的模板 `region` ，则方法将 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEditableDesignerRegionContent%2A> 返回持久性模板。 否则，它会调用 <xref:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent%2A> 基方法来生成内容。  
  
 使用方法可将序列化模板还原到 <xref:System.Web.UI.WebControls.LoginView> 控件 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.SetEditableDesignerRegionContent%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.LoginView" />
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="M:System.Web.UI.Design.ControlPersister.PersistTemplate(System.Web.UI.ITemplate,System.ComponentModel.Design.IDesignerHost)" />
        <altmember cref="M:System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.Design.WebControls.LoginViewDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)" />
      </Docs>
    </Member>
    <Member MemberName="GetEmptyDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected override string GetEmptyDesignTimeHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetEmptyDesignTimeHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEmptyDesignTimeHtml" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetEmptyDesignTimeHtml () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetEmptyDesignTimeHtml();" />
      <MemberSignature Language="F#" Value="override this.GetEmptyDesignTimeHtml : unit -&gt; string" Usage="loginViewDesigner.GetEmptyDesignTimeHtml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>如果当前模板未定义，获取在设计时呈现关联控件的占位符的标记。</summary>
        <returns>一个字符串，包含在设计图面上呈现到占位符的标记文本。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEmptyDesignTimeHtml%2A>方法首先设置字符串消息的格式，该消息指定关联控件的当前模板的名称 <xref:System.Web.UI.WebControls.LoginView> ，并指定该模板为空。 然后，将 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEmptyDesignTimeHtml%2A> 生成包含该消息的占位符的标记。  
  
   
  
## Examples  
 下面的代码示例演示如何 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEmptyDesignTimeHtml%2A> 在从类继承的类中重写方法 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner> ，以便在设计时更改从类派生的控件的外观 <xref:System.Web.UI.WebControls.LoginView> 。 该示例将为包含 <xref:System.Web.UI.WebControls.RoleGroup> 为关联控件定义的所有对象的名称的占位符生成标记。  
  
 [!code-csharp[System.Web.UI.Design.WebControls.LoginViewDesigner#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/CS/LoginViewDesigner.cs#5)]
 [!code-vb[System.Web.UI.Design.WebControls.LoginViewDesigner#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/VB/LoginViewDesigner.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml(System.String)" />
        <altmember cref="T:System.Web.UI.WebControls.LoginView" />
      </Docs>
    </Member>
    <Member MemberName="GetErrorDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected override string GetErrorDesignTimeHtml (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetErrorDesignTimeHtml(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetErrorDesignTimeHtml(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetErrorDesignTimeHtml (e As Exception) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetErrorDesignTimeHtml(Exception ^ e);" />
      <MemberSignature Language="F#" Value="override this.GetErrorDesignTimeHtml : Exception -&gt; string" Usage="loginViewDesigner.GetErrorDesignTimeHtml e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">所引发的 <see cref="T:System.Exception" />。</param>
        <summary>如果发生了错误，提供在设计时呈现关联控件的标记。</summary>
        <returns>一个字符串，包含发生错误后在设计时呈现关联 <see cref="T:System.Web.UI.WebControls.LoginView" /> 的标记。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 错误设计时 <xref:System.Web.UI.WebControls.LoginView> 控件呈现为一个面板，其中包含类型名称、控件名称以及公告和描述错误的消息。  
  
   
  
## Examples  
 下面的代码示例演示如何 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetErrorDesignTimeHtml%2A> 在从类继承的类中重写方法 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner> ，以便在设计时更改从类派生的控件的外观 <xref:System.Web.UI.WebControls.LoginView> 。 该示例生成包含错误消息的占位符的标记，该错误消息以红色粗体文本显示。  
  
 [!code-csharp[System.Web.UI.Design.WebControls.LoginViewDesigner#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/CS/LoginViewDesigner.cs#2)]
 [!code-vb[System.Web.UI.Design.WebControls.LoginViewDesigner#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/VB/LoginViewDesigner.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml(System.String)" />
        <altmember cref="T:System.Web.UI.WebControls.LoginView" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LoginViewDesigner.Initialize(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="override this.Initialize : System.ComponentModel.IComponent -&gt; unit" Usage="loginViewDesigner.Initialize component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">一个 <see cref="T:System.Web.UI.WebControls.LoginView" />，它实现 <see cref="T:System.ComponentModel.IComponent" />。</param>
        <summary>准备设计器，以查看、编辑和设计关联的组件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当可视化设计器 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.Initialize%2A> 准备好使用设计器呈现控件时，将调用方法 <xref:System.Web.UI.WebControls.LoginView> 。 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.Initialize%2A>及其基方法会配置属性并设置设计器操作所需的事件。  
  
 `component`参数是 <xref:System.Web.UI.WebControls.LoginView> 与此设计器或控件的副本关联的控件 <xref:System.Web.UI.WebControls.LoginView> 。  
  
   
  
## Examples  
 下面的代码示例演示如何 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.Initialize%2A> 在从类继承的类中重写方法 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner> ，以便在设计时更改从类派生的控件的行为 <xref:System.Web.UI.WebControls.LoginView> 。 <xref:System.ArgumentException>如果关联的控件不是对象，则该示例引发 `MyLoginView` 。  
  
 [!code-csharp[System.Web.UI.Design.WebControls.LoginViewDesigner#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/CS/LoginViewDesigner.cs#6)]
 [!code-vb[System.Web.UI.Design.WebControls.LoginViewDesigner#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/VB/LoginViewDesigner.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="component" /> 不是 <see cref="T:System.Web.UI.WebControls.LoginView" />，也不属于 <see cref="T:System.Web.UI.WebControls.LoginView" /> 的派生类。</exception>
        <altmember cref="T:System.Web.UI.WebControls.LoginView" />
        <altmember cref="T:System.ComponentModel.IComponent" />
        <altmember cref="E:System.Web.UI.Design.IControlDesignerView.ViewEvent" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)" />
        <altmember cref="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="OnComponentChanged">
      <MemberSignature Language="C#" Value="public override void OnComponentChanged (object sender, System.ComponentModel.Design.ComponentChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnComponentChanged(object sender, class System.ComponentModel.Design.ComponentChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LoginViewDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnComponentChanged (sender As Object, e As ComponentChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnComponentChanged(System::Object ^ sender, System::ComponentModel::Design::ComponentChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnComponentChanged : obj * System.ComponentModel.Design.ComponentChangedEventArgs -&gt; unit" Usage="loginViewDesigner.OnComponentChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">事件源。</param>
        <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />。</param>
        <summary>与此设计器关联的控件发生更改时调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.OnComponentChanged%2A>当 <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> 关联控件的事件执行时，将调用方法 <xref:System.Web.UI.WebControls.LoginView> 。 通常，这是为了响应控件上的属性更改 (例如， **属性** 网格更改) 。 如果 <xref:System.Web.UI.WebControls.LoginView> 更改了控件模板，则会刷新 " **属性** " 网格。  
  
 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.OnComponentChanged%2A>验证当前模板索引是否有效，然后调用 <xref:System.Web.UI.Design.ControlDesigner.OnComponentChanged%2A> 基方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />
        <altmember cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.LoginView" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="protected override void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LoginViewDesigner.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="override this.PreFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="loginViewDesigner.PreFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">实现添加的和隐藏的属性的 <see cref="T:System.Collections.IDictionary" /> 的集合。</param>
        <summary>由设计器用来从 " **属性** " 网格的显示中移除属性或向其添加属性或者隐藏关联控件的属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 控件设计器使用从方法派生的方法， <xref:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties%2A?displayProperty=nameWithType> 用设计器实现的相应设计时属性隐藏各种控件属性，以及在 " **属性** " 网格中添加或删除属性。  
  
 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.PreFilterProperties%2A>方法应用属性的属性， <xref:System.ComponentModel.BrowsableAttribute> <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> 使其不显示在 "**属性**" 网格中。  
  
   
  
## Examples  
 下面的代码示例演示如何 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.PreFilterProperties%2A> 在从类继承的类中重写方法 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner> ，以便在设计时更改从类派生的控件的 **属性** 网格 <xref:System.Web.UI.WebControls.LoginView> 。 该示例使 <xref:System.Web.UI.Control.NamingContainer%2A> 属性在 **属性** 网格中可见。  
  
 [!code-csharp[System.Web.UI.Design.WebControls.LoginViewDesigner#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/CS/LoginViewDesigner.cs#3)]
 [!code-vb[System.Web.UI.Design.WebControls.LoginViewDesigner#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/VB/LoginViewDesigner.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>重写 <see cref="M:System.Web.UI.Design.WebControls.LoginViewDesigner.PreFilterProperties(System.Collections.IDictionary)" /> 方法，以便在设计时属性集合中将属性添加到、删除属性，或更改属性的属性。 请确保 <see cref="M:System.Web.UI.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)" /> 在执行其他处理之前调用基方法。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.LoginView" />
        <altmember cref="T:System.ComponentModel.BrowsableAttribute" />
        <altmember cref="P:System.Web.UI.WebControls.LoginView.RoleGroups" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.Design.HtmlControlDesigner.PreFilterProperties(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="SetEditableDesignerRegionContent">
      <MemberSignature Language="C#" Value="public override void SetEditableDesignerRegionContent (System.Web.UI.Design.EditableDesignerRegion region, string content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetEditableDesignerRegionContent(class System.Web.UI.Design.EditableDesignerRegion region, string content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LoginViewDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetEditableDesignerRegionContent (region As EditableDesignerRegion, content As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetEditableDesignerRegionContent(System::Web::UI::Design::EditableDesignerRegion ^ region, System::String ^ content);" />
      <MemberSignature Language="F#" Value="override this.SetEditableDesignerRegionContent : System.Web.UI.Design.EditableDesignerRegion * string -&gt; unit" Usage="loginViewDesigner.SetEditableDesignerRegionContent (region, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Web.UI.Design.EditableDesignerRegion" />
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="region">一个 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />，提供要更新的区域的名称。</param>
        <param name="content">一个字符串，其中包含关联控件的序列化模板。</param>
        <summary>根据控件模板的序列化副本设置关联控件的一个区域。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.SetEditableDesignerRegionContent%2A>方法分析参数所指定的关联控件的序列化模板 <xref:System.Web.UI.WebControls.LoginView> `content` ，然后使用该模板更新由参数的属性指定的控件的区域 <xref:System.Web.UI.Design.DesignerObject.Name%2A> `region` 。  
  
 控件的当前模板 <xref:System.Web.UI.WebControls.LoginView> 可以使用方法进行序列化 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEditableDesignerRegionContent%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.LoginView" />
        <altmember cref="M:System.Web.UI.Design.ControlParser.ParseTemplate(System.ComponentModel.Design.IDesignerHost,System.String,System.String)" />
        <altmember cref="T:System.Web.UI.Design.EditableDesignerRegion" />
        <altmember cref="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TemplateGroups">
      <MemberSignature Language="C#" Value="public override System.Web.UI.Design.TemplateGroupCollection TemplateGroups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Design.TemplateGroupCollection TemplateGroups" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.WebControls.LoginViewDesigner.TemplateGroups" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TemplateGroups As TemplateGroupCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::Design::TemplateGroupCollection ^ TemplateGroups { System::Web::UI::Design::TemplateGroupCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TemplateGroups : System.Web.UI.Design.TemplateGroupCollection" Usage="System.Web.UI.Design.WebControls.LoginViewDesigner.TemplateGroups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.TemplateGroupCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于关联控件字段的模板组集合。</summary>
        <value>一个 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />，<see cref="T:System.Web.UI.WebControls.LoginView" /> 控件中每个模板都有一个元素包含在其中。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.TemplateGroups%2A>属性 <xref:System.Web.UI.Design.TemplateGroupCollection> 从 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.TemplateGroups%2A> 基属性获取对象，然后添加 <xref:System.Web.UI.Design.TemplateGroup> 对象，这些对象包含匿名模板的单个 <xref:System.Web.UI.Design.TemplateDefinition> 对象 (该对象对应于未登录的用户) 、登录模板以及 <xref:System.Web.UI.WebControls.RoleGroup> 关联控件的集合中的每个元素 <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> <xref:System.Web.UI.WebControls.LoginView> <xref:System.Web.UI.Design.TemplateGroupCollection> 。 将 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.TemplateGroups%2A> 此返回 <xref:System.Web.UI.Design.TemplateGroupCollection> 到调用方。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.LoginView" />
        <altmember cref="T:System.Web.UI.Design.TemplateGroupCollection" />
        <altmember cref="T:System.Web.UI.Design.TemplateGroup" />
        <altmember cref="T:System.Web.UI.Design.TemplateDefinition" />
        <altmember cref="T:System.Web.UI.WebControls.RoleGroup" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.TemplateGroups" />
      </Docs>
    </Member>
    <Member MemberName="UsePreviewControl">
      <MemberSignature Language="C#" Value="protected override bool UsePreviewControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsePreviewControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.WebControls.LoginViewDesigner.UsePreviewControl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property UsePreviewControl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool UsePreviewControl { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UsePreviewControl : bool" Usage="System.Web.UI.Design.WebControls.LoginViewDesigner.UsePreviewControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，指示设计器是否应使用临时副本取代与设计器关联的实际控件来生成设计时标记。</summary>
        <value>总是为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 由于 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.UsePreviewControl%2A> 属性始终为 `true` ，因此设计器 <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> 属性返回关联控件的副本， <xref:System.Web.UI.WebControls.LoginView> 以生成设计时标记。 <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A>属性通过保持实际的 <xref:System.Web.UI.WebControls.LoginView> 控件，然后分析持久化的控制字符串来创建副本。 复制的控件不会影响实际的任何持久性 <xref:System.Web.UI.WebControls.LoginView> 。  
  
 如果 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.UsePreviewControl%2A> 已重写属性以返回 `false` ，则设计器将使用关联 <xref:System.Web.UI.WebControls.LoginView> 控件本身来生成设计时标记，对控件的设计时更改将保留在页标记源中。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>您可以重写 <see cref="P:System.Web.UI.Design.WebControls.LoginViewDesigner.UsePreviewControl" /> 属性以返回 <see langword="false" /> 或根据控件是否标记为类级别特性来确定其值 <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> 。 如果 <see cref="P:System.Web.UI.Design.WebControls.LoginViewDesigner.UsePreviewControl" /> 未重写，则将 <see cref="T:System.Web.UI.WebControls.LoginView" /> 忽略 <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> 。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.LoginView" />
        <altmember cref="M:System.Web.UI.Design.ControlPersister.PersistControl(System.IO.TextWriter,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.Design.ControlParser.ParseControl(System.ComponentModel.Design.IDesignerHost,System.String)" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" />
        <altmember cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" />
      </Docs>
    </Member>
  </Members>
</Type>
