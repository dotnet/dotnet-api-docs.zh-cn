<Type Name="ToolboxItemCreatorCallback" FullName="System.Drawing.Design.ToolboxItemCreatorCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6d633426fd7c5767653b816619a1913385796c21" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83961621" /></Metadata><TypeSignature Language="C#" Value="public delegate System.Drawing.Design.ToolboxItem ToolboxItemCreatorCallback(object serializedObject, string format);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ToolboxItemCreatorCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Design.ToolboxItemCreatorCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function ToolboxItemCreatorCallback(serializedObject As Object, format As String) As ToolboxItem " />
  <TypeSignature Language="C++ CLI" Value="public delegate System::Drawing::Design::ToolboxItem ^ ToolboxItemCreatorCallback(System::Object ^ serializedObject, System::String ^ format);" />
  <TypeSignature Language="F#" Value="type ToolboxItemCreatorCallback = delegate of obj * string -&gt; ToolboxItem" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="serializedObject" Type="System.Object" />
    <Parameter Name="format" Type="System.String" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Drawing.Design.ToolboxItem</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="serializedObject"><span data-ttu-id="6d9e6-101">包含将为其创建 <see cref="T:System.Drawing.Design.ToolboxItem" /> 的数据的对象。</span><span class="sxs-lookup"><span data-stu-id="6d9e6-101">The object which contains the data to create a <see cref="T:System.Drawing.Design.ToolboxItem" /> for.</span></span></param>
    <param name="format"><span data-ttu-id="6d9e6-102">将为其创建 <see cref="T:System.Drawing.Design.ToolboxItem" /> 的剪贴板数据格式名称。</span><span class="sxs-lookup"><span data-stu-id="6d9e6-102">The name of the clipboard data format to create a <see cref="T:System.Drawing.Design.ToolboxItem" /> for.</span></span></param>
    <summary><span data-ttu-id="6d9e6-103">提供可以创建 <see cref="T:System.Drawing.Design.ToolboxItem" /> 的一种回调机制。</span><span class="sxs-lookup"><span data-stu-id="6d9e6-103">Provides a callback mechanism that can create a <see cref="T:System.Drawing.Design.ToolboxItem" />.</span></span></summary>
    <returns><span data-ttu-id="6d9e6-104">由 <paramref name="serializedObject" /> 指定的反序列化 <see cref="T:System.Drawing.Design.ToolboxItem" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="6d9e6-104">The deserialized <see cref="T:System.Drawing.Design.ToolboxItem" /> object specified by <paramref name="serializedObject" />.</span></span></returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d9e6-105">可以实现一个工具箱项创建者方法，该方法签名与此委托类型的方法签名相匹配，该委托类型可从放置在工具箱上的特定剪贴板数据格式的任何对象创建工具箱项。</span><span class="sxs-lookup"><span data-stu-id="6d9e6-105">You can implement a toolbox item creator method with a method signature matching the method signature of this delegate type that creates a toolbox item from any object of a particular clipboard data format placed on the toolbox.</span></span> <span data-ttu-id="6d9e6-106">例如，您可以设计一个工具箱项创建程序，它创建一个用于存储从剪贴板中粘贴到工具箱中的文本的 <xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="6d9e6-106">For example, you can design a toolbox item creator that creates a <xref:System.Windows.Forms.TextBox> to store text pasted to the toolbox from the clipboard.</span></span> <span data-ttu-id="6d9e6-107">您可以使用 <xref:System.Drawing.Design.IToolboxService> 的 <xref:System.Drawing.Design.IToolboxService.AddCreator%2A> 方法将特定数据类型的 <xref:System.Drawing.Design.ToolboxItemCreatorCallback> 事件处理程序添加到 "工具箱"。</span><span class="sxs-lookup"><span data-stu-id="6d9e6-107">You can use the <xref:System.Drawing.Design.IToolboxService.AddCreator%2A> method of the <xref:System.Drawing.Design.IToolboxService> to add a <xref:System.Drawing.Design.ToolboxItemCreatorCallback> event handler for a particular data type to the toolbox.</span></span> <span data-ttu-id="6d9e6-108">`serializedObject` 参数包含数据对象。</span><span class="sxs-lookup"><span data-stu-id="6d9e6-108">The `serializedObject` parameter contains the data object.</span></span>  
  
 <span data-ttu-id="6d9e6-109">创建 <xref:System.Drawing.Design.ToolboxItemCreatorCallback> 委托时，需要标识将处理该事件的方法。</span><span class="sxs-lookup"><span data-stu-id="6d9e6-109">When you create a <xref:System.Drawing.Design.ToolboxItemCreatorCallback> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="6d9e6-110">若要将事件与事件处理程序关联，请将该委托的一个实例添加到事件中。</span><span class="sxs-lookup"><span data-stu-id="6d9e6-110">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="6d9e6-111">除非移除了该委托，否则每当发生该事件时就会调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="6d9e6-111">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="6d9e6-112">有关事件处理程序委托的详细信息，请参阅[处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="6d9e6-112">For more information about event handler delegates, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d9e6-113">下面的示例提供了一个组件，该组件使用 <xref:System.Drawing.Design.IToolboxService> 向 "工具箱" 添加 "文本" 数据格式处理程序或 <xref:System.Drawing.Design.ToolboxItemCreatorCallback>。</span><span class="sxs-lookup"><span data-stu-id="6d9e6-113">The following example provides a component that uses the <xref:System.Drawing.Design.IToolboxService> to add a "Text" data format handler, or <xref:System.Drawing.Design.ToolboxItemCreatorCallback>, to the toolbox.</span></span> <span data-ttu-id="6d9e6-114">数据编写器回调委托将粘贴到工具箱中的任何文本数据传递到窗体上，并将其拖到一个自定义 <xref:System.Drawing.Design.ToolboxItem>，该自定义创建包含文本的 <xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="6d9e6-114">The data creator callback delegate passes any text data pasted to the toolbox and dragged onto a form to a custom <xref:System.Drawing.Design.ToolboxItem> that creates a <xref:System.Windows.Forms.TextBox> containing the text.</span></span>  
  
 [!code-cpp[ToolboxCreatorCallbackSample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ToolboxCreatorCallbackSample/CPP/textdatatextboxcomponent.cpp#1)]
 [!code-csharp[ToolboxCreatorCallbackSample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ToolboxCreatorCallbackSample/CS/textdatatextboxcomponent.cs#1)]
 [!code-vb[ToolboxCreatorCallbackSample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ToolboxCreatorCallbackSample/VB/textdatatextboxcomponent.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>
