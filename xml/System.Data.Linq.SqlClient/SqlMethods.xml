<Type Name="SqlMethods" FullName="System.Data.Linq.SqlClient.SqlMethods">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ec85e32dbd982ceea307475028353bb34cefef06" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89847205" /></Metadata><TypeSignature Language="C#" Value="public static class SqlMethods" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SqlMethods extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.SqlClient.SqlMethods" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlMethods" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlMethods abstract sealed" />
  <TypeSignature Language="F#" Value="type SqlMethods = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供与 SQL Server 函数对应的方法。 <see cref="T:System.Data.Linq.SqlClient.SqlMethods" /> 类中的方法仅在 LINQ to SQL 查询中受支持。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="DateDiffDay">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>对两个指定日期之间的日期边界进行计数。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `day` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateDiffDay">
      <MemberSignature Language="C#" Value="public static int DateDiffDay (DateTime startDate, DateTime endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DateDiffDay(valuetype System.DateTime startDate, valuetype System.DateTime endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffDay(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DateDiffDay (startDate As DateTime, endDate As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DateDiffDay(DateTime startDate, DateTime endDate);" />
      <MemberSignature Language="F#" Value="static member DateDiffDay : DateTime * DateTime -&gt; int" Usage="System.Data.Linq.SqlClient.SqlMethods.DateDiffDay (startDate, endDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.DateTime" />
        <Parameter Name="endDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="startDate">时间段的起始日期。</param>
        <param name="endDate">时间段的结束日期。</param>
        <summary>对两个不可以为 null 的日期之间的日期边界进行计数。</summary>
        <returns>两个指定日期之间的日期边界数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `day` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffDay">
      <MemberSignature Language="C#" Value="public static int DateDiffDay (DateTimeOffset startDate, DateTimeOffset endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DateDiffDay(valuetype System.DateTimeOffset startDate, valuetype System.DateTimeOffset endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffDay(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DateDiffDay (startDate As DateTimeOffset, endDate As DateTimeOffset) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DateDiffDay(DateTimeOffset startDate, DateTimeOffset endDate);" />
      <MemberSignature Language="F#" Value="static member DateDiffDay : DateTimeOffset * DateTimeOffset -&gt; int" Usage="System.Data.Linq.SqlClient.SqlMethods.DateDiffDay (startDate, endDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.DateTimeOffset" />
        <Parameter Name="endDate" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="startDate">时间段的起始日期。</param>
        <param name="endDate">时间段的结束日期。</param>
        <summary>对两个不可以为 null 的日期之间的日期边界进行计数。</summary>
        <returns>两个指定日期之间的日期边界数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `day` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffDay">
      <MemberSignature Language="C#" Value="public static int? DateDiffDay (DateTime? startDate, DateTime? endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiffDay(valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffDay(System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DateDiffDay (startDate As Nullable(Of DateTime), endDate As Nullable(Of DateTime)) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Nullable&lt;int&gt; DateDiffDay(Nullable&lt;DateTime&gt; startDate, Nullable&lt;DateTime&gt; endDate);" />
      <MemberSignature Language="F#" Value="static member DateDiffDay : Nullable&lt;DateTime&gt; * Nullable&lt;DateTime&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Data.Linq.SqlClient.SqlMethods.DateDiffDay (startDate, endDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="startDate">时间段的起始日期。</param>
        <param name="endDate">时间段的结束日期。</param>
        <summary>对两个可以为 null 的日期之间的日期边界进行计数。</summary>
        <returns>当两个参数都不为 <see langword="null" /> 时，返回两个指定日期之间的日期边界数。 当一个参数为或两个参数都为 <see langword="null" /> 时，返回 <see langword="null" /> 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `day` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffDay">
      <MemberSignature Language="C#" Value="public static int? DateDiffDay (DateTimeOffset? startDate, DateTimeOffset? endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiffDay(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffDay(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DateDiffDay (startDate As Nullable(Of DateTimeOffset), endDate As Nullable(Of DateTimeOffset)) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Nullable&lt;int&gt; DateDiffDay(Nullable&lt;DateTimeOffset&gt; startDate, Nullable&lt;DateTimeOffset&gt; endDate);" />
      <MemberSignature Language="F#" Value="static member DateDiffDay : Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Data.Linq.SqlClient.SqlMethods.DateDiffDay (startDate, endDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="startDate">时间段的起始日期。</param>
        <param name="endDate">时间段的结束日期。</param>
        <summary>对两个可以为 null 的日期之间的日期边界进行计数。</summary>
        <returns>当两个参数都不为 <see langword="null" /> 时，返回两个指定日期之间的日期边界数。 当一个参数为或两个参数都为 <see langword="null" /> 时，返回 <see langword="null" /> 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `day` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DateDiffHour">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>对两个指定日期之间的小时边界进行计数。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `hour` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateDiffHour">
      <MemberSignature Language="C#" Value="public static int DateDiffHour (DateTime startDate, DateTime endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DateDiffHour(valuetype System.DateTime startDate, valuetype System.DateTime endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffHour(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DateDiffHour (startDate As DateTime, endDate As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DateDiffHour(DateTime startDate, DateTime endDate);" />
      <MemberSignature Language="F#" Value="static member DateDiffHour : DateTime * DateTime -&gt; int" Usage="System.Data.Linq.SqlClient.SqlMethods.DateDiffHour (startDate, endDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.DateTime" />
        <Parameter Name="endDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="startDate">时间段的起始日期。</param>
        <param name="endDate">时间段的结束日期。</param>
        <summary>对两个不可以为 null 的日期之间的小时边界进行计数。</summary>
        <returns>两个指定日期之间的小时边界数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `hour` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffHour">
      <MemberSignature Language="C#" Value="public static int DateDiffHour (DateTimeOffset startDate, DateTimeOffset endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DateDiffHour(valuetype System.DateTimeOffset startDate, valuetype System.DateTimeOffset endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffHour(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DateDiffHour (startDate As DateTimeOffset, endDate As DateTimeOffset) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DateDiffHour(DateTimeOffset startDate, DateTimeOffset endDate);" />
      <MemberSignature Language="F#" Value="static member DateDiffHour : DateTimeOffset * DateTimeOffset -&gt; int" Usage="System.Data.Linq.SqlClient.SqlMethods.DateDiffHour (startDate, endDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.DateTimeOffset" />
        <Parameter Name="endDate" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="startDate">时间段的起始日期。</param>
        <param name="endDate">时间段的结束日期。</param>
        <summary>对两个不可以为 null 的日期之间的小时边界进行计数。</summary>
        <returns>两个指定日期之间的小时边界数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `hour` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffHour">
      <MemberSignature Language="C#" Value="public static int? DateDiffHour (DateTime? startDate, DateTime? endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiffHour(valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffHour(System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DateDiffHour (startDate As Nullable(Of DateTime), endDate As Nullable(Of DateTime)) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Nullable&lt;int&gt; DateDiffHour(Nullable&lt;DateTime&gt; startDate, Nullable&lt;DateTime&gt; endDate);" />
      <MemberSignature Language="F#" Value="static member DateDiffHour : Nullable&lt;DateTime&gt; * Nullable&lt;DateTime&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Data.Linq.SqlClient.SqlMethods.DateDiffHour (startDate, endDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="startDate">时间段的起始日期。</param>
        <param name="endDate">时间段的结束日期。</param>
        <summary>对两个可以为 null 的日期之间的小时边界进行计数。</summary>
        <returns>当两个参数都不为 <see langword="null" /> 时，返回两个指定日期之间的小时边界数。 当一个参数为或两个参数都为 <see langword="null" /> 时，返回 <see langword="null" /> 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `hour` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffHour">
      <MemberSignature Language="C#" Value="public static int? DateDiffHour (DateTimeOffset? startDate, DateTimeOffset? endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiffHour(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffHour(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DateDiffHour (startDate As Nullable(Of DateTimeOffset), endDate As Nullable(Of DateTimeOffset)) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Nullable&lt;int&gt; DateDiffHour(Nullable&lt;DateTimeOffset&gt; startDate, Nullable&lt;DateTimeOffset&gt; endDate);" />
      <MemberSignature Language="F#" Value="static member DateDiffHour : Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Data.Linq.SqlClient.SqlMethods.DateDiffHour (startDate, endDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="startDate">时间段的起始日期。</param>
        <param name="endDate">时间段的结束日期。</param>
        <summary>对两个可以为 null 的日期之间的小时边界进行计数。</summary>
        <returns>当两个参数都不为 <see langword="null" /> 时，返回两个指定日期之间的小时边界数。 当一个参数为或两个参数都为 <see langword="null" /> 时，返回 <see langword="null" /> 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `hour` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DateDiffMicrosecond">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>对两个指定日期之间的微秒边界进行计数。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `millisecond` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateDiffMicrosecond">
      <MemberSignature Language="C#" Value="public static int DateDiffMicrosecond (DateTime startDate, DateTime endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DateDiffMicrosecond(valuetype System.DateTime startDate, valuetype System.DateTime endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffMicrosecond(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DateDiffMicrosecond (startDate As DateTime, endDate As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DateDiffMicrosecond(DateTime startDate, DateTime endDate);" />
      <MemberSignature Language="F#" Value="static member DateDiffMicrosecond : DateTime * DateTime -&gt; int" Usage="System.Data.Linq.SqlClient.SqlMethods.DateDiffMicrosecond (startDate, endDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.DateTime" />
        <Parameter Name="endDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="startDate">时间段的起始日期。</param>
        <param name="endDate">时间段的结束日期。</param>
        <summary>对两个不可为 null 的日期之间的微秒边界进行计数。</summary>
        <returns>两个指定日期之间的微秒边界数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `microsecond` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffMicrosecond">
      <MemberSignature Language="C#" Value="public static int DateDiffMicrosecond (DateTimeOffset startDate, DateTimeOffset endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DateDiffMicrosecond(valuetype System.DateTimeOffset startDate, valuetype System.DateTimeOffset endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffMicrosecond(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DateDiffMicrosecond (startDate As DateTimeOffset, endDate As DateTimeOffset) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DateDiffMicrosecond(DateTimeOffset startDate, DateTimeOffset endDate);" />
      <MemberSignature Language="F#" Value="static member DateDiffMicrosecond : DateTimeOffset * DateTimeOffset -&gt; int" Usage="System.Data.Linq.SqlClient.SqlMethods.DateDiffMicrosecond (startDate, endDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.DateTimeOffset" />
        <Parameter Name="endDate" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="startDate">时间段的起始日期。</param>
        <param name="endDate">时间段的结束日期。</param>
        <summary>对两个不可为 null 的日期之间的微秒边界进行计数。</summary>
        <returns>两个指定日期之间的微秒边界数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `microsecond` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffMicrosecond">
      <MemberSignature Language="C#" Value="public static int? DateDiffMicrosecond (DateTime? startDate, DateTime? endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiffMicrosecond(valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffMicrosecond(System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DateDiffMicrosecond (startDate As Nullable(Of DateTime), endDate As Nullable(Of DateTime)) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Nullable&lt;int&gt; DateDiffMicrosecond(Nullable&lt;DateTime&gt; startDate, Nullable&lt;DateTime&gt; endDate);" />
      <MemberSignature Language="F#" Value="static member DateDiffMicrosecond : Nullable&lt;DateTime&gt; * Nullable&lt;DateTime&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Data.Linq.SqlClient.SqlMethods.DateDiffMicrosecond (startDate, endDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="startDate">时间段的起始日期。</param>
        <param name="endDate">时间段的结束日期。</param>
        <summary>对两个可为 null 的日期之间的微秒边界进行计数。</summary>
        <returns>当两个参数都不为 <see langword="null" /> 时，返回两个指定日期之间的微秒边界数。 当一个参数为或两个参数都为 <see langword="null" /> 时，返回 <see langword="null" /> 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `microsecond` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffMicrosecond">
      <MemberSignature Language="C#" Value="public static int? DateDiffMicrosecond (DateTimeOffset? startDate, DateTimeOffset? endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiffMicrosecond(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffMicrosecond(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DateDiffMicrosecond (startDate As Nullable(Of DateTimeOffset), endDate As Nullable(Of DateTimeOffset)) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Nullable&lt;int&gt; DateDiffMicrosecond(Nullable&lt;DateTimeOffset&gt; startDate, Nullable&lt;DateTimeOffset&gt; endDate);" />
      <MemberSignature Language="F#" Value="static member DateDiffMicrosecond : Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Data.Linq.SqlClient.SqlMethods.DateDiffMicrosecond (startDate, endDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="startDate">时间段的起始日期。</param>
        <param name="endDate">时间段的结束日期。</param>
        <summary>对两个可为 null 的日期之间的微秒边界进行计数。</summary>
        <returns>当两个参数都不为 <see langword="null" /> 时，返回两个指定日期之间的微秒边界数。 当一个参数为或两个参数都为 <see langword="null" /> 时，返回 <see langword="null" /> 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `microsecond` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DateDiffMillisecond">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>对两个指定日期之间的毫秒边界进行计数。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `millisecond` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateDiffMillisecond">
      <MemberSignature Language="C#" Value="public static int DateDiffMillisecond (DateTime startDate, DateTime endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DateDiffMillisecond(valuetype System.DateTime startDate, valuetype System.DateTime endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffMillisecond(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DateDiffMillisecond (startDate As DateTime, endDate As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DateDiffMillisecond(DateTime startDate, DateTime endDate);" />
      <MemberSignature Language="F#" Value="static member DateDiffMillisecond : DateTime * DateTime -&gt; int" Usage="System.Data.Linq.SqlClient.SqlMethods.DateDiffMillisecond (startDate, endDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.DateTime" />
        <Parameter Name="endDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="startDate">时间段的起始日期。</param>
        <param name="endDate">时间段的结束日期。</param>
        <summary>对两个不可以为 null 的日期之间的毫秒边界进行计数。</summary>
        <returns>两个指定日期之间的毫秒边界数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `millisecond` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffMillisecond">
      <MemberSignature Language="C#" Value="public static int DateDiffMillisecond (DateTimeOffset startDate, DateTimeOffset endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DateDiffMillisecond(valuetype System.DateTimeOffset startDate, valuetype System.DateTimeOffset endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffMillisecond(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DateDiffMillisecond (startDate As DateTimeOffset, endDate As DateTimeOffset) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DateDiffMillisecond(DateTimeOffset startDate, DateTimeOffset endDate);" />
      <MemberSignature Language="F#" Value="static member DateDiffMillisecond : DateTimeOffset * DateTimeOffset -&gt; int" Usage="System.Data.Linq.SqlClient.SqlMethods.DateDiffMillisecond (startDate, endDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.DateTimeOffset" />
        <Parameter Name="endDate" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="startDate">时间段的起始日期。</param>
        <param name="endDate">时间段的结束日期。</param>
        <summary>对两个不可以为 null 的日期之间的毫秒边界进行计数。</summary>
        <returns>两个指定日期之间的毫秒边界数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `millisecond` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffMillisecond">
      <MemberSignature Language="C#" Value="public static int? DateDiffMillisecond (DateTime? startDate, DateTime? endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiffMillisecond(valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffMillisecond(System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DateDiffMillisecond (startDate As Nullable(Of DateTime), endDate As Nullable(Of DateTime)) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Nullable&lt;int&gt; DateDiffMillisecond(Nullable&lt;DateTime&gt; startDate, Nullable&lt;DateTime&gt; endDate);" />
      <MemberSignature Language="F#" Value="static member DateDiffMillisecond : Nullable&lt;DateTime&gt; * Nullable&lt;DateTime&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Data.Linq.SqlClient.SqlMethods.DateDiffMillisecond (startDate, endDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="startDate">时间段的起始日期。</param>
        <param name="endDate">时间段的结束日期。</param>
        <summary>对两个可以为 null 的日期之间的毫秒边界进行计数。</summary>
        <returns>当两个参数都不为 <see langword="null" /> 时，返回两个指定日期之间的毫秒边界数。 当一个参数为或两个参数都为 <see langword="null" /> 时，返回 <see langword="null" /> 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `millisecond` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffMillisecond">
      <MemberSignature Language="C#" Value="public static int? DateDiffMillisecond (DateTimeOffset? startDate, DateTimeOffset? endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiffMillisecond(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffMillisecond(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DateDiffMillisecond (startDate As Nullable(Of DateTimeOffset), endDate As Nullable(Of DateTimeOffset)) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Nullable&lt;int&gt; DateDiffMillisecond(Nullable&lt;DateTimeOffset&gt; startDate, Nullable&lt;DateTimeOffset&gt; endDate);" />
      <MemberSignature Language="F#" Value="static member DateDiffMillisecond : Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Data.Linq.SqlClient.SqlMethods.DateDiffMillisecond (startDate, endDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="startDate">时间段的起始日期。</param>
        <param name="endDate">时间段的结束日期。</param>
        <summary>对两个可以为 null 的日期之间的毫秒边界进行计数。</summary>
        <returns>当两个参数都不为 <see langword="null" /> 时，返回两个指定日期之间的毫秒边界数。 当一个参数为或两个参数都为 <see langword="null" /> 时，返回 <see langword="null" /> 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `millisecond` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DateDiffMinute">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>对两个指定日期之间的分钟边界进行计数。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `minute` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateDiffMinute">
      <MemberSignature Language="C#" Value="public static int DateDiffMinute (DateTime startDate, DateTime endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DateDiffMinute(valuetype System.DateTime startDate, valuetype System.DateTime endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffMinute(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DateDiffMinute (startDate As DateTime, endDate As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DateDiffMinute(DateTime startDate, DateTime endDate);" />
      <MemberSignature Language="F#" Value="static member DateDiffMinute : DateTime * DateTime -&gt; int" Usage="System.Data.Linq.SqlClient.SqlMethods.DateDiffMinute (startDate, endDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.DateTime" />
        <Parameter Name="endDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="startDate">时间段的起始日期。</param>
        <param name="endDate">时间段的结束日期。</param>
        <summary>对两个不可以为 null 的日期之间的分钟边界进行计数。</summary>
        <returns>两个指定日期之间的分钟边界数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `minute` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffMinute">
      <MemberSignature Language="C#" Value="public static int DateDiffMinute (DateTimeOffset startDate, DateTimeOffset endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DateDiffMinute(valuetype System.DateTimeOffset startDate, valuetype System.DateTimeOffset endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffMinute(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DateDiffMinute (startDate As DateTimeOffset, endDate As DateTimeOffset) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DateDiffMinute(DateTimeOffset startDate, DateTimeOffset endDate);" />
      <MemberSignature Language="F#" Value="static member DateDiffMinute : DateTimeOffset * DateTimeOffset -&gt; int" Usage="System.Data.Linq.SqlClient.SqlMethods.DateDiffMinute (startDate, endDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.DateTimeOffset" />
        <Parameter Name="endDate" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="startDate">时间段的起始日期。</param>
        <param name="endDate">时间段的结束日期。</param>
        <summary>对两个不可以为 null 的日期之间的分钟边界进行计数。</summary>
        <returns>两个指定日期之间的分钟边界数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `minute` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffMinute">
      <MemberSignature Language="C#" Value="public static int? DateDiffMinute (DateTime? startDate, DateTime? endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiffMinute(valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffMinute(System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DateDiffMinute (startDate As Nullable(Of DateTime), endDate As Nullable(Of DateTime)) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Nullable&lt;int&gt; DateDiffMinute(Nullable&lt;DateTime&gt; startDate, Nullable&lt;DateTime&gt; endDate);" />
      <MemberSignature Language="F#" Value="static member DateDiffMinute : Nullable&lt;DateTime&gt; * Nullable&lt;DateTime&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Data.Linq.SqlClient.SqlMethods.DateDiffMinute (startDate, endDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="startDate">时间段的起始日期。</param>
        <param name="endDate">时间段的结束日期。</param>
        <summary>对两个可以为 null 的日期之间的分钟边界进行计数。</summary>
        <returns>当两个参数都不为 <see langword="null" /> 时，返回两个指定日期之间的分钟边界数。 当一个参数为或两个参数都为 <see langword="null" /> 时，返回 <see langword="null" /> 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `minute` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffMinute">
      <MemberSignature Language="C#" Value="public static int? DateDiffMinute (DateTimeOffset? startDate, DateTimeOffset? endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiffMinute(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffMinute(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DateDiffMinute (startDate As Nullable(Of DateTimeOffset), endDate As Nullable(Of DateTimeOffset)) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Nullable&lt;int&gt; DateDiffMinute(Nullable&lt;DateTimeOffset&gt; startDate, Nullable&lt;DateTimeOffset&gt; endDate);" />
      <MemberSignature Language="F#" Value="static member DateDiffMinute : Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Data.Linq.SqlClient.SqlMethods.DateDiffMinute (startDate, endDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="startDate">时间段的起始日期。</param>
        <param name="endDate">时间段的结束日期。</param>
        <summary>对两个可以为 null 的日期之间的分钟边界进行计数。</summary>
        <returns>当两个参数都不为 <see langword="null" /> 时，返回两个指定日期之间的分钟边界数。 当一个参数为或两个参数都为 <see langword="null" /> 时，返回 <see langword="null" /> 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `minute` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DateDiffMonth">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>对两个指定日期之间的月份边界进行计数。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `month` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateDiffMonth">
      <MemberSignature Language="C#" Value="public static int DateDiffMonth (DateTime startDate, DateTime endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DateDiffMonth(valuetype System.DateTime startDate, valuetype System.DateTime endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffMonth(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DateDiffMonth (startDate As DateTime, endDate As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DateDiffMonth(DateTime startDate, DateTime endDate);" />
      <MemberSignature Language="F#" Value="static member DateDiffMonth : DateTime * DateTime -&gt; int" Usage="System.Data.Linq.SqlClient.SqlMethods.DateDiffMonth (startDate, endDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.DateTime" />
        <Parameter Name="endDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="startDate">时间段的起始日期。</param>
        <param name="endDate">时间段的结束日期。</param>
        <summary>对两个不可以为 null 的日期之间的月份边界进行计数。</summary>
        <returns>两个指定日期之间的月份边界数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `month` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffMonth">
      <MemberSignature Language="C#" Value="public static int DateDiffMonth (DateTimeOffset startDate, DateTimeOffset endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DateDiffMonth(valuetype System.DateTimeOffset startDate, valuetype System.DateTimeOffset endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffMonth(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DateDiffMonth (startDate As DateTimeOffset, endDate As DateTimeOffset) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DateDiffMonth(DateTimeOffset startDate, DateTimeOffset endDate);" />
      <MemberSignature Language="F#" Value="static member DateDiffMonth : DateTimeOffset * DateTimeOffset -&gt; int" Usage="System.Data.Linq.SqlClient.SqlMethods.DateDiffMonth (startDate, endDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.DateTimeOffset" />
        <Parameter Name="endDate" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="startDate">时间段的起始日期。</param>
        <param name="endDate">时间段的结束日期。</param>
        <summary>对两个不可以为 null 的日期之间的月份边界进行计数。</summary>
        <returns>两个指定日期之间的月份边界数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `month` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffMonth">
      <MemberSignature Language="C#" Value="public static int? DateDiffMonth (DateTime? startDate, DateTime? endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiffMonth(valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffMonth(System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DateDiffMonth (startDate As Nullable(Of DateTime), endDate As Nullable(Of DateTime)) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Nullable&lt;int&gt; DateDiffMonth(Nullable&lt;DateTime&gt; startDate, Nullable&lt;DateTime&gt; endDate);" />
      <MemberSignature Language="F#" Value="static member DateDiffMonth : Nullable&lt;DateTime&gt; * Nullable&lt;DateTime&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Data.Linq.SqlClient.SqlMethods.DateDiffMonth (startDate, endDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="startDate">时间段的起始日期。</param>
        <param name="endDate">时间段的结束日期。</param>
        <summary>对两个可以为 null 的日期之间的月份边界进行计数。</summary>
        <returns>当两个参数都不为 <see langword="null" /> 时，返回两个指定日期之间的月份边界数。 当一个参数为或两个参数都为 <see langword="null" /> 时，返回 <see langword="null" /> 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `month` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffMonth">
      <MemberSignature Language="C#" Value="public static int? DateDiffMonth (DateTimeOffset? startDate, DateTimeOffset? endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiffMonth(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffMonth(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DateDiffMonth (startDate As Nullable(Of DateTimeOffset), endDate As Nullable(Of DateTimeOffset)) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Nullable&lt;int&gt; DateDiffMonth(Nullable&lt;DateTimeOffset&gt; startDate, Nullable&lt;DateTimeOffset&gt; endDate);" />
      <MemberSignature Language="F#" Value="static member DateDiffMonth : Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Data.Linq.SqlClient.SqlMethods.DateDiffMonth (startDate, endDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="startDate">时间段的起始日期。</param>
        <param name="endDate">时间段的结束日期。</param>
        <summary>对两个可以为 null 的日期之间的月份边界进行计数。</summary>
        <returns>当两个参数都不为 <see langword="null" /> 时，返回两个指定日期之间的月份边界数。 当一个参数为或两个参数都为 <see langword="null" /> 时，返回 <see langword="null" /> 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `month` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DateDiffNanosecond">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>对两个指定日期之间的毫微秒边界进行计数。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateDiffNanosecond">
      <MemberSignature Language="C#" Value="public static int DateDiffNanosecond (DateTime startDate, DateTime endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DateDiffNanosecond(valuetype System.DateTime startDate, valuetype System.DateTime endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffNanosecond(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DateDiffNanosecond (startDate As DateTime, endDate As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DateDiffNanosecond(DateTime startDate, DateTime endDate);" />
      <MemberSignature Language="F#" Value="static member DateDiffNanosecond : DateTime * DateTime -&gt; int" Usage="System.Data.Linq.SqlClient.SqlMethods.DateDiffNanosecond (startDate, endDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.DateTime" />
        <Parameter Name="endDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="startDate">时间段的起始日期。</param>
        <param name="endDate">时间段的结束日期。</param>
        <summary>对两个不可为 null 的日期之间的毫微秒边界进行计数。</summary>
        <returns>两个指定日期之间的毫微秒边界数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `nanosecond` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffNanosecond">
      <MemberSignature Language="C#" Value="public static int DateDiffNanosecond (DateTimeOffset startDate, DateTimeOffset endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DateDiffNanosecond(valuetype System.DateTimeOffset startDate, valuetype System.DateTimeOffset endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffNanosecond(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DateDiffNanosecond (startDate As DateTimeOffset, endDate As DateTimeOffset) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DateDiffNanosecond(DateTimeOffset startDate, DateTimeOffset endDate);" />
      <MemberSignature Language="F#" Value="static member DateDiffNanosecond : DateTimeOffset * DateTimeOffset -&gt; int" Usage="System.Data.Linq.SqlClient.SqlMethods.DateDiffNanosecond (startDate, endDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.DateTimeOffset" />
        <Parameter Name="endDate" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="startDate">时间段的起始日期。</param>
        <param name="endDate">时间段的结束日期。</param>
        <summary>对两个不可为 null 的日期之间的毫微秒边界进行计数。</summary>
        <returns>两个指定日期之间的毫微秒边界数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `nanosecond` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffNanosecond">
      <MemberSignature Language="C#" Value="public static int? DateDiffNanosecond (DateTime? startDate, DateTime? endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiffNanosecond(valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffNanosecond(System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DateDiffNanosecond (startDate As Nullable(Of DateTime), endDate As Nullable(Of DateTime)) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Nullable&lt;int&gt; DateDiffNanosecond(Nullable&lt;DateTime&gt; startDate, Nullable&lt;DateTime&gt; endDate);" />
      <MemberSignature Language="F#" Value="static member DateDiffNanosecond : Nullable&lt;DateTime&gt; * Nullable&lt;DateTime&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Data.Linq.SqlClient.SqlMethods.DateDiffNanosecond (startDate, endDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="startDate">时间段的起始日期。</param>
        <param name="endDate">时间段的结束日期。</param>
        <summary>对两个可为 null 的日期之间的毫微秒边界进行计数。</summary>
        <returns>当两个参数都不为 <see langword="null" /> 时，返回两个指定日期之间的毫微秒边界数。 当一个参数为或两个参数都为 <see langword="null" /> 时，返回 <see langword="null" /> 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `nanosecond` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffNanosecond">
      <MemberSignature Language="C#" Value="public static int? DateDiffNanosecond (DateTimeOffset? startDate, DateTimeOffset? endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiffNanosecond(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffNanosecond(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DateDiffNanosecond (startDate As Nullable(Of DateTimeOffset), endDate As Nullable(Of DateTimeOffset)) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Nullable&lt;int&gt; DateDiffNanosecond(Nullable&lt;DateTimeOffset&gt; startDate, Nullable&lt;DateTimeOffset&gt; endDate);" />
      <MemberSignature Language="F#" Value="static member DateDiffNanosecond : Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Data.Linq.SqlClient.SqlMethods.DateDiffNanosecond (startDate, endDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="startDate">时间段的起始日期。</param>
        <param name="endDate">时间段的结束日期。</param>
        <summary>对两个可为 null 的日期之间的毫微秒边界进行计数。</summary>
        <returns>当两个参数都不为 <see langword="null" /> 时，返回两个指定日期之间的毫微秒边界数。 当一个参数为或两个参数都为 <see langword="null" /> 时，返回 <see langword="null" /> 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `nanosecond` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DateDiffSecond">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>对两个指定日期之间的秒边界进行计数。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `second` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateDiffSecond">
      <MemberSignature Language="C#" Value="public static int DateDiffSecond (DateTime startDate, DateTime endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DateDiffSecond(valuetype System.DateTime startDate, valuetype System.DateTime endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffSecond(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DateDiffSecond (startDate As DateTime, endDate As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DateDiffSecond(DateTime startDate, DateTime endDate);" />
      <MemberSignature Language="F#" Value="static member DateDiffSecond : DateTime * DateTime -&gt; int" Usage="System.Data.Linq.SqlClient.SqlMethods.DateDiffSecond (startDate, endDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.DateTime" />
        <Parameter Name="endDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="startDate">时间段的起始日期。</param>
        <param name="endDate">时间段的结束日期。</param>
        <summary>对两个不可以为 null 的日期之间的秒边界进行计数。</summary>
        <returns>两个指定日期之间的秒边界数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `second` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffSecond">
      <MemberSignature Language="C#" Value="public static int DateDiffSecond (DateTimeOffset startDate, DateTimeOffset endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DateDiffSecond(valuetype System.DateTimeOffset startDate, valuetype System.DateTimeOffset endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffSecond(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DateDiffSecond (startDate As DateTimeOffset, endDate As DateTimeOffset) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DateDiffSecond(DateTimeOffset startDate, DateTimeOffset endDate);" />
      <MemberSignature Language="F#" Value="static member DateDiffSecond : DateTimeOffset * DateTimeOffset -&gt; int" Usage="System.Data.Linq.SqlClient.SqlMethods.DateDiffSecond (startDate, endDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.DateTimeOffset" />
        <Parameter Name="endDate" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="startDate">时间段的起始日期。</param>
        <param name="endDate">时间段的结束日期。</param>
        <summary>对两个不可以为 null 的日期之间的秒边界进行计数。</summary>
        <returns>两个指定日期之间的秒边界数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `second` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffSecond">
      <MemberSignature Language="C#" Value="public static int? DateDiffSecond (DateTime? startDate, DateTime? endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiffSecond(valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffSecond(System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DateDiffSecond (startDate As Nullable(Of DateTime), endDate As Nullable(Of DateTime)) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Nullable&lt;int&gt; DateDiffSecond(Nullable&lt;DateTime&gt; startDate, Nullable&lt;DateTime&gt; endDate);" />
      <MemberSignature Language="F#" Value="static member DateDiffSecond : Nullable&lt;DateTime&gt; * Nullable&lt;DateTime&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Data.Linq.SqlClient.SqlMethods.DateDiffSecond (startDate, endDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="startDate">时间段的起始日期。</param>
        <param name="endDate">时间段的结束日期。</param>
        <summary>对两个可以为 null 的日期之间的秒边界进行计数。</summary>
        <returns>当两个参数都不为 <see langword="null" /> 时，返回两个指定日期之间的秒边界数。 当一个参数为或两个参数都为 <see langword="null" /> 时，返回 <see langword="null" /> 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `second` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffSecond">
      <MemberSignature Language="C#" Value="public static int? DateDiffSecond (DateTimeOffset? startDate, DateTimeOffset? endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiffSecond(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffSecond(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DateDiffSecond (startDate As Nullable(Of DateTimeOffset), endDate As Nullable(Of DateTimeOffset)) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Nullable&lt;int&gt; DateDiffSecond(Nullable&lt;DateTimeOffset&gt; startDate, Nullable&lt;DateTimeOffset&gt; endDate);" />
      <MemberSignature Language="F#" Value="static member DateDiffSecond : Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Data.Linq.SqlClient.SqlMethods.DateDiffSecond (startDate, endDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="startDate">时间段的起始日期。</param>
        <param name="endDate">时间段的结束日期。</param>
        <summary>对两个可以为 null 的日期之间的秒边界进行计数。</summary>
        <returns>当两个参数都不为 <see langword="null" /> 时，返回两个指定日期之间的秒边界数。 当一个参数为或两个参数都为 <see langword="null" /> 时，返回 <see langword="null" /> 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `second` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DateDiffYear">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>对两个指定日期之间的年份边界进行计数。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `year` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateDiffYear">
      <MemberSignature Language="C#" Value="public static int DateDiffYear (DateTime startDate, DateTime endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DateDiffYear(valuetype System.DateTime startDate, valuetype System.DateTime endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffYear(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DateDiffYear (startDate As DateTime, endDate As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DateDiffYear(DateTime startDate, DateTime endDate);" />
      <MemberSignature Language="F#" Value="static member DateDiffYear : DateTime * DateTime -&gt; int" Usage="System.Data.Linq.SqlClient.SqlMethods.DateDiffYear (startDate, endDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.DateTime" />
        <Parameter Name="endDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="startDate">时间段的起始日期。</param>
        <param name="endDate">时间段的结束日期。</param>
        <summary>对两个不可以为 null 的日期之间的年份边界进行计数。</summary>
        <returns>两个指定日期之间的年份边界数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `year` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffYear">
      <MemberSignature Language="C#" Value="public static int DateDiffYear (DateTimeOffset startDate, DateTimeOffset endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DateDiffYear(valuetype System.DateTimeOffset startDate, valuetype System.DateTimeOffset endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffYear(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DateDiffYear (startDate As DateTimeOffset, endDate As DateTimeOffset) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DateDiffYear(DateTimeOffset startDate, DateTimeOffset endDate);" />
      <MemberSignature Language="F#" Value="static member DateDiffYear : DateTimeOffset * DateTimeOffset -&gt; int" Usage="System.Data.Linq.SqlClient.SqlMethods.DateDiffYear (startDate, endDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.DateTimeOffset" />
        <Parameter Name="endDate" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="startDate">时间段的起始日期。</param>
        <param name="endDate">时间段的结束日期。</param>
        <summary>对两个不可以为 null 的日期之间的年份边界进行计数。</summary>
        <returns>两个指定日期之间的年份边界数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `year` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffYear">
      <MemberSignature Language="C#" Value="public static int? DateDiffYear (DateTime? startDate, DateTime? endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiffYear(valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffYear(System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DateDiffYear (startDate As Nullable(Of DateTime), endDate As Nullable(Of DateTime)) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Nullable&lt;int&gt; DateDiffYear(Nullable&lt;DateTime&gt; startDate, Nullable&lt;DateTime&gt; endDate);" />
      <MemberSignature Language="F#" Value="static member DateDiffYear : Nullable&lt;DateTime&gt; * Nullable&lt;DateTime&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Data.Linq.SqlClient.SqlMethods.DateDiffYear (startDate, endDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="startDate">时间段的起始日期。</param>
        <param name="endDate">时间段的结束日期。</param>
        <summary>对两个可以为 null 的日期之间的年份边界进行计数。</summary>
        <returns>当两个参数都不为 <see langword="null" /> 时，返回两个指定日期之间的年份边界数。 当一个参数为或两个参数都为 <see langword="null" /> 时，返回 <see langword="null" /> 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `year` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiffYear">
      <MemberSignature Language="C#" Value="public static int? DateDiffYear (DateTimeOffset? startDate, DateTimeOffset? endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiffYear(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.DateDiffYear(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DateDiffYear (startDate As Nullable(Of DateTimeOffset), endDate As Nullable(Of DateTimeOffset)) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Nullable&lt;int&gt; DateDiffYear(Nullable&lt;DateTimeOffset&gt; startDate, Nullable&lt;DateTimeOffset&gt; endDate);" />
      <MemberSignature Language="F#" Value="static member DateDiffYear : Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Data.Linq.SqlClient.SqlMethods.DateDiffYear (startDate, endDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="startDate">时间段的起始日期。</param>
        <param name="endDate">时间段的结束日期。</param>
        <summary>对两个可以为 null 的日期之间的年份边界进行计数。</summary>
        <returns>当两个参数都不为 <see langword="null" /> 时，返回两个指定日期之间的年份边界数。 当一个参数为或两个参数都为 <see langword="null" /> 时，返回 <see langword="null" /> 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对应于 SQL Server 函数，该 `DATEDIFF` 函数使用 `year` 指定跨越的时间边界类型。 有关此 SQL Server 函数的详细信息，请参阅 [DATEDIFF](/sql/t-sql/functions/datediff-transact-sql)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Like">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>确定特定字符串是否与指定模式相匹配。 目前只有 LINQ to SQL 查询支持此方法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SQL Server `LIKE` 功能不能通过 (CLR) 和 .NET Framework 构造的现有公共语言运行时的翻译公开，在 LINQ to SQL 上下文外部不受支持。 在 LINQ to SQL 之外使用此方法将始终引发类型为的异常 <xref:System.NotSupportedException> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Like">
      <MemberSignature Language="C#" Value="public static bool Like (string matchExpression, string pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Like(string matchExpression, string pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.Like(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Like (matchExpression As String, pattern As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Like(System::String ^ matchExpression, System::String ^ pattern);" />
      <MemberSignature Language="F#" Value="static member Like : string * string -&gt; bool" Usage="System.Data.Linq.SqlClient.SqlMethods.Like (matchExpression, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matchExpression" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="matchExpression">要搜索其匹配项的字符串。</param>
        <param name="pattern">与 <paramref name="matchExpression" /> 匹配的模式（可能包括通配符）。</param>
        <summary>确定特定字符串是否与指定模式相匹配。 目前只有 LINQ to SQL 查询支持此方法。</summary>
        <returns>如果 <paramref name="matchExpression" /> 与模式匹配，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SQL Server `LIKE` 功能不能通过 (CLR) 和 .NET Framework 构造的现有公共语言运行时的翻译公开，在 LINQ to SQL 上下文外部不受支持。 在 LINQ to SQL 之外使用此方法将始终引发类型为的异常 <xref:System.NotSupportedException> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Like">
      <MemberSignature Language="C#" Value="public static bool Like (string matchExpression, string pattern, char escapeCharacter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Like(string matchExpression, string pattern, char escapeCharacter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlMethods.Like(System.String,System.String,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Like (matchExpression As String, pattern As String, escapeCharacter As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Like(System::String ^ matchExpression, System::String ^ pattern, char escapeCharacter);" />
      <MemberSignature Language="F#" Value="static member Like : string * string * char -&gt; bool" Usage="System.Data.Linq.SqlClient.SqlMethods.Like (matchExpression, pattern, escapeCharacter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matchExpression" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="escapeCharacter" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="matchExpression">要搜索其匹配项的字符串。</param>
        <param name="pattern">与 <paramref name="matchExpression" /> 匹配的模式（可能包括通配符）。</param>
        <param name="escapeCharacter">放置在通配符前面的字符，以指示应将其解释为常规字符而非通配符。</param>
        <summary>确定特定字符串是否与指定模式相匹配。 目前只有 LINQ to SQL 查询支持此方法。</summary>
        <returns>如果 <paramref name="matchExpression" /> 与模式匹配，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SQL Server `LIKE` 功能不能通过 (CLR) 和 .NET Framework 构造的现有公共语言运行时的翻译公开，在 LINQ to SQL 上下文外部不受支持。 在 LINQ to SQL 之外使用此方法将始终引发类型为的异常 <xref:System.NotSupportedException> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
