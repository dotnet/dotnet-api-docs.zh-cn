<Type Name="DbEnumerator" FullName="System.Data.Common.DbEnumerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b0ace1573e48f2821cfedc50e1c8cad6002699ad" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89826480" /></Metadata><TypeSignature Language="C#" Value="public class DbEnumerator : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DbEnumerator extends System.Object implements class System.Collections.IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Class DbEnumerator&#xA;Implements IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbEnumerator : System::Collections::IEnumerator" />
  <TypeSignature Language="F#" Value="type DbEnumerator = class&#xA;    interface IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Data.Common" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="1eaf0-101">公开 <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> 方法，该方法支持 .NET Framework 数据提供程序对集合进行简单的迭代。</span><span class="sxs-lookup"><span data-stu-id="1eaf0-101">Exposes the <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> method, which supports a simple iteration over a collection by a .NET Framework data provider.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1eaf0-102"><xref:System.Data.Common.DbEnumerator>类由 .NET Framework 数据提供程序实现，以提供数据绑定支持。</span><span class="sxs-lookup"><span data-stu-id="1eaf0-102">The <xref:System.Data.Common.DbEnumerator> class is implemented by a .NET Framework data provider to provide data binding support.</span></span>  
  
 <span data-ttu-id="1eaf0-103">按照设计， <xref:System.Data.Common.DbEnumerator> 对象只与一个结果集一起使用。</span><span class="sxs-lookup"><span data-stu-id="1eaf0-103">By design, the <xref:System.Data.Common.DbEnumerator> object is intended for use with only one resultset.</span></span> <span data-ttu-id="1eaf0-104">例如，如果执行包含两个返回不同架构的 SQL SELECT 语句的批处理语句，则第二条语句可能不会返回整个架构。</span><span class="sxs-lookup"><span data-stu-id="1eaf0-104">For example, if you execute a batch statement containing two SQL SELECT statements that return different schemas, the second statement might not retun the entire schema.</span></span> <span data-ttu-id="1eaf0-105">若要避免这种情况，请获取 <xref:System.Data.Common.DbEnumerator> 每个结果集的，然后调用 `NextResult` .NET Framework 数据提供程序 DataReader 对象的方法。</span><span class="sxs-lookup"><span data-stu-id="1eaf0-105">To avoid this situation, obtain a <xref:System.Data.Common.DbEnumerator> for each resultset, and then call the `NextResult` method of a .NET Framework data provider DataReader object.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="1eaf0-106">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="1eaf0-106">ADO.NET Overview</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1eaf0-107">初始化 <see cref="T:System.Data.Common.DbEnumerator" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1eaf0-107">Initializes a new instance of the <see cref="T:System.Data.Common.DbEnumerator" /> class.</span></span></summary>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="1eaf0-108">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="1eaf0-108">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DbEnumerator (System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As DbDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DbEnumerator(System::Data::Common::DbDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="new System.Data.Common.DbEnumerator : System.Data.Common.DbDataReader -&gt; System.Data.Common.DbEnumerator" Usage="new System.Data.Common.DbEnumerator reader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="1eaf0-109">要对其进行循环访问的 DataReader。</span><span class="sxs-lookup"><span data-stu-id="1eaf0-109">The DataReader through which to iterate.</span></span></param>
        <summary><span data-ttu-id="1eaf0-110">使用给定的数据读取器初始化 <see cref="T:System.Data.Common.DbEnumerator" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1eaf0-110">Initializes a new instance of the <see cref="T:System.Data.Common.DbEnumerator" /> class with the give n data reader.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DbEnumerator (System.Data.IDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.IDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As IDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DbEnumerator(System::Data::IDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="new System.Data.Common.DbEnumerator : System.Data.IDataReader -&gt; System.Data.Common.DbEnumerator" Usage="new System.Data.Common.DbEnumerator reader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="1eaf0-111">要通过其进行循环访问的 <see langword="DataReader" />。</span><span class="sxs-lookup"><span data-stu-id="1eaf0-111">The <see langword="DataReader" /> through which to iterate.</span></span></param>
        <summary><span data-ttu-id="1eaf0-112">使用指定的 <see cref="T:System.Data.Common.DbEnumerator" /> 初始化 <see langword="DataReader" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1eaf0-112">Initializes a new instance of the <see cref="T:System.Data.Common.DbEnumerator" /> class using the specified <see langword="DataReader" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="1eaf0-113">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="1eaf0-113">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DbEnumerator (System.Data.Common.DbDataReader reader, bool closeReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbDataReader reader, bool closeReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As DbDataReader, closeReader As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DbEnumerator(System::Data::Common::DbDataReader ^ reader, bool closeReader);" />
      <MemberSignature Language="F#" Value="new System.Data.Common.DbEnumerator : System.Data.Common.DbDataReader * bool -&gt; System.Data.Common.DbEnumerator" Usage="new System.Data.Common.DbEnumerator (reader, closeReader)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="closeReader" Type="System.Boolean" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="1eaf0-114">要对其进行循环访问的 DataReader。</span><span class="sxs-lookup"><span data-stu-id="1eaf0-114">The DataReader through which to iterate.</span></span></param>
        <param name="closeReader"><span data-ttu-id="1eaf0-115">若要在循环访问 DataReader 的数据后将其自动关闭，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1eaf0-115"><see langword="true" /> to automatically close the DataReader after iterating through its data; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="1eaf0-116">使用指定的读取器初始化 <see cref="T:System.Data.Common.DbEnumerator" /> 类的新实例，并表示在循环访问读取器的数据后是否将其自动关闭。</span><span class="sxs-lookup"><span data-stu-id="1eaf0-116">Initializes a new instance of the <see cref="T:System.Data.Common.DbEnumerator" /> class using the specified reader and indicates whether to automatically close the reader after iterating through its data.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DbEnumerator (System.Data.IDataReader reader, bool closeReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.IDataReader reader, bool closeReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As IDataReader, closeReader As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DbEnumerator(System::Data::IDataReader ^ reader, bool closeReader);" />
      <MemberSignature Language="F#" Value="new System.Data.Common.DbEnumerator : System.Data.IDataReader * bool -&gt; System.Data.Common.DbEnumerator" Usage="new System.Data.Common.DbEnumerator (reader, closeReader)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" />
        <Parameter Name="closeReader" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="1eaf0-117">要通过其进行循环访问的 <see langword="DataReader" />。</span><span class="sxs-lookup"><span data-stu-id="1eaf0-117">The <see langword="DataReader" /> through which to iterate.</span></span></param>
        <param name="closeReader"><span data-ttu-id="1eaf0-118">若要在循环访问 <see langword="DataReader" /> 的数据后将其自动关闭，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1eaf0-118"><see langword="true" /> to automatically close the <see langword="DataReader" /> after iterating through its data; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="1eaf0-119">使用指定的 <see langword="DataReader" /> 初始化 <see cref="T:System.Data.Common.DbEnumerator" /> 类的新实例，并指示在循环访问 <see langword="DataReader" /> 的数据后是否将其自动关闭。</span><span class="sxs-lookup"><span data-stu-id="1eaf0-119">Initializes a new instance of the <see cref="T:System.Data.Common.DbEnumerator" /> class using the specified <see langword="DataReader" />, and indicates whether to automatically close the <see langword="DataReader" /> after iterating through its data.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="1eaf0-120">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="1eaf0-120">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : obj" Usage="System.Data.Common.DbEnumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1eaf0-121">获取集合中的当前元素。</span><span class="sxs-lookup"><span data-stu-id="1eaf0-121">Gets the current element in the collection.</span></span></summary>
        <value><span data-ttu-id="1eaf0-122">集合中的当前元素。</span><span class="sxs-lookup"><span data-stu-id="1eaf0-122">The current element in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1eaf0-123">在创建枚举器之后或之后 <xref:System.Data.Common.DbEnumerator.Reset%2A> ， <xref:System.Data.Common.DbEnumerator.MoveNext%2A> 必须先调用以将枚举数前移到集合的第一个元素，然后才能读取的值 <xref:System.Data.Common.DbEnumerator.Current%2A> ; 否则， <xref:System.Data.Common.DbEnumerator.Current%2A> 将未定义。</span><span class="sxs-lookup"><span data-stu-id="1eaf0-123">After an enumerator is created or after a <xref:System.Data.Common.DbEnumerator.Reset%2A>, <xref:System.Data.Common.DbEnumerator.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before reading the value of <xref:System.Data.Common.DbEnumerator.Current%2A>; otherwise, <xref:System.Data.Common.DbEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="1eaf0-124"><xref:System.Data.Common.DbEnumerator.Current%2A> 如果最后一次调用返回 false，则还会引发异常 <xref:System.Data.Common.DbEnumerator.MoveNext%2A> ，指示集合的末尾。</span><span class="sxs-lookup"><span data-stu-id="1eaf0-124"><xref:System.Data.Common.DbEnumerator.Current%2A> also throws an exception if the last call to <xref:System.Data.Common.DbEnumerator.MoveNext%2A> returned false, which indicates the end of the collection.</span></span> <span data-ttu-id="1eaf0-125"><xref:System.Data.Common.DbEnumerator.Current%2A> 在调用或之前，不会移动枚举器的位置和连续调用来 <xref:System.Data.Common.DbEnumerator.Current%2A> 返回相同的对象 <xref:System.Data.Common.DbEnumerator.MoveNext%2A> <xref:System.Data.Common.DbEnumerator.Reset%2A> 。</span><span class="sxs-lookup"><span data-stu-id="1eaf0-125"><xref:System.Data.Common.DbEnumerator.Current%2A> does not move the position of the enumerator and consecutive calls to <xref:System.Data.Common.DbEnumerator.Current%2A> return the same object until either <xref:System.Data.Common.DbEnumerator.MoveNext%2A> or <xref:System.Data.Common.DbEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="1eaf0-126">只要集合保持不变，枚举器就仍有效。</span><span class="sxs-lookup"><span data-stu-id="1eaf0-126">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="1eaf0-127">如果对集合所做的更改（如添加、修改或删除元素），则枚举器将失效且不可恢复，并将对或的下一个调用 <xref:System.Data.Common.DbEnumerator.MoveNext%2A> <xref:System.Data.Common.DbEnumerator.Reset%2A> 生成 <xref:System.InvalidOperationException> 。</span><span class="sxs-lookup"><span data-stu-id="1eaf0-127">If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Data.Common.DbEnumerator.MoveNext%2A> or <xref:System.Data.Common.DbEnumerator.Reset%2A> generates an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="1eaf0-128">如果集合在和之间进行了修改 <xref:System.Data.Common.DbEnumerator.MoveNext%2A> <xref:System.Data.Common.DbEnumerator.Current%2A> ，则 <xref:System.Data.Common.DbEnumerator.Current%2A> 将返回它所设置到的元素，即使枚举器已失效。</span><span class="sxs-lookup"><span data-stu-id="1eaf0-128">If the collection is modified between <xref:System.Data.Common.DbEnumerator.MoveNext%2A> and <xref:System.Data.Common.DbEnumerator.Current%2A>, <xref:System.Data.Common.DbEnumerator.Current%2A> returns the element to which it is set, even if the enumerator is already invalidated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1eaf0-129">枚举器位于集合中第一个元素之前或最后一个元素之后。</span><span class="sxs-lookup"><span data-stu-id="1eaf0-129">The enumerator is positioned before the first element of the collection or after the last element.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="1eaf0-130">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="1eaf0-130">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="dbEnumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1eaf0-131">将枚举数推进到集合的下一个元素。</span><span class="sxs-lookup"><span data-stu-id="1eaf0-131">Advances the enumerator to the next element of the collection.</span></span></summary>
        <returns><span data-ttu-id="1eaf0-132">如果枚举数已成功地推进到下一个元素，则为 <see langword="true" />；如果枚举数传递到集合的末尾，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1eaf0-132"><see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1eaf0-133">在创建枚举器之后或在调用之后 <xref:System.Data.Common.DbEnumerator.Reset%2A> ，枚举数将定位到集合的第一个元素之前，第一次调用将 <xref:System.Data.Common.DbEnumerator.MoveNext%2A> 枚举数移到集合的第一个元素上。</span><span class="sxs-lookup"><span data-stu-id="1eaf0-133">After an enumerator is created or after a call to <xref:System.Data.Common.DbEnumerator.Reset%2A>, an enumerator is positioned before the first element of the collection, and the first call to <xref:System.Data.Common.DbEnumerator.MoveNext%2A> moves the enumerator over the first element of the collection.</span></span> <span data-ttu-id="1eaf0-134">在传递集合的末尾后，对的后续调用将 <xref:System.Data.Common.DbEnumerator.MoveNext%2A> 返回 false，直到 <xref:System.Data.Common.DbEnumerator.Reset%2A> 调用。</span><span class="sxs-lookup"><span data-stu-id="1eaf0-134">After the end of the collection is passed, subsequent calls to <xref:System.Data.Common.DbEnumerator.MoveNext%2A> return false until <xref:System.Data.Common.DbEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="1eaf0-135">只要集合保持不变，枚举器就仍有效。</span><span class="sxs-lookup"><span data-stu-id="1eaf0-135">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="1eaf0-136">如果集合发生更改（如添加、修改或删除元素），则枚举器无效且无法恢复，对 <xref:System.Data.Common.DbEnumerator.MoveNext%2A> 或 <xref:System.Data.Common.DbEnumerator.Reset%2A> 的下一个调用将引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="1eaf0-136">If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Data.Common.DbEnumerator.MoveNext%2A> or <xref:System.Data.Common.DbEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1eaf0-137">集合在枚举器创建后被修改。</span><span class="sxs-lookup"><span data-stu-id="1eaf0-137">The collection was modified after the enumerator was created.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="1eaf0-138">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="1eaf0-138">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="dbEnumerator.Reset " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1eaf0-139">将枚举数设置为其初始位置，该位置位于集合中第一个元素之前。</span><span class="sxs-lookup"><span data-stu-id="1eaf0-139">Sets the enumerator to its initial position, which is before the first element in the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1eaf0-140">只要集合保持不变，枚举器就仍有效。</span><span class="sxs-lookup"><span data-stu-id="1eaf0-140">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="1eaf0-141">如果集合发生更改（如添加、修改或删除元素），则枚举器无效且无法恢复，对 <xref:System.Data.Common.DbEnumerator.MoveNext%2A> 或 <xref:System.Data.Common.DbEnumerator.Reset%2A> 的下一个调用将引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="1eaf0-141">If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Data.Common.DbEnumerator.MoveNext%2A> or <xref:System.Data.Common.DbEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1eaf0-142">集合在枚举器创建后被修改。</span><span class="sxs-lookup"><span data-stu-id="1eaf0-142">The collection was modified after the enumerator was created.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="1eaf0-143">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="1eaf0-143">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
