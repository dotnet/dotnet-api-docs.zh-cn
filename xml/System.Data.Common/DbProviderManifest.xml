<Type Name="DbProviderManifest" FullName="System.Data.Common.DbProviderManifest">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5720b7774b4d784391b49c0e9b30f5f1f8b77a83" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86773768" /></Metadata><TypeSignature Language="C#" Value="public abstract class DbProviderManifest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbProviderManifest extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbProviderManifest" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbProviderManifest" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbProviderManifest abstract" />
  <TypeSignature Language="F#" Value="type DbProviderManifest = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0b815-101">所有 CLR 类型 types 的元数据接口。</span><span class="sxs-lookup"><span data-stu-id="0b815-101">Metadata Interface for all CLR types types.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbProviderManifest ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderManifest.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbProviderManifest();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0b815-102">初始化 <see cref="T:System.Data.Common.DbProviderManifest" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0b815-102">Initializes a new instance of the <see cref="T:System.Data.Common.DbProviderManifest" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConceptualSchemaDefinition">
      <MemberSignature Language="C#" Value="public static readonly string ConceptualSchemaDefinition;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string ConceptualSchemaDefinition" />
      <MemberSignature Language="DocId" Value="F:System.Data.Common.DbProviderManifest.ConceptualSchemaDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ConceptualSchemaDefinition As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ ConceptualSchemaDefinition;" />
      <MemberSignature Language="F#" Value=" staticval mutable ConceptualSchemaDefinition : string" Usage="System.Data.Common.DbProviderManifest.ConceptualSchemaDefinition" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b815-103">为获取 ConceptualSchemaDefinitionVersion 而传递给 GetInformation 的值。</span><span class="sxs-lookup"><span data-stu-id="0b815-103">Value to pass to GetInformation to get the ConceptualSchemaDefinitionVersion.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConceptualSchemaDefinitionVersion3">
      <MemberSignature Language="C#" Value="public static readonly string ConceptualSchemaDefinitionVersion3;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string ConceptualSchemaDefinitionVersion3" />
      <MemberSignature Language="DocId" Value="F:System.Data.Common.DbProviderManifest.ConceptualSchemaDefinitionVersion3" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ConceptualSchemaDefinitionVersion3 As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ ConceptualSchemaDefinitionVersion3;" />
      <MemberSignature Language="F#" Value=" staticval mutable ConceptualSchemaDefinitionVersion3 : string" Usage="System.Data.Common.DbProviderManifest.ConceptualSchemaDefinitionVersion3" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b815-104">为获取 ConceptualSchemaDefinitionVersion3 而传递给 GetInformation 的值。</span><span class="sxs-lookup"><span data-stu-id="0b815-104">Value to pass to GetInformation to get the ConceptualSchemaDefinitionVersion3.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EscapeLikeArgument">
      <MemberSignature Language="C#" Value="public virtual string EscapeLikeArgument (string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string EscapeLikeArgument(string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderManifest.EscapeLikeArgument(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EscapeLikeArgument (argument As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ EscapeLikeArgument(System::String ^ argument);" />
      <MemberSignature Language="F#" Value="abstract member EscapeLikeArgument : string -&gt; string&#xA;override this.EscapeLikeArgument : string -&gt; string" Usage="dbProviderManifest.EscapeLikeArgument argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="0b815-105">要转义的参数。</span><span class="sxs-lookup"><span data-stu-id="0b815-105">The argument to be escaped.</span></span></param>
        <summary><span data-ttu-id="0b815-106">提供程序编写人员应重写此方法，以返回带有已转义的通配符和转义符的参数。</span><span class="sxs-lookup"><span data-stu-id="0b815-106">Provider writers should override this method to return the argument with the wildcards and the escape character escaped.</span></span> <span data-ttu-id="0b815-107">如果 SupportsEscapingLikeArgument 返回 true，则只使用此方法。</span><span class="sxs-lookup"><span data-stu-id="0b815-107">This method is only used if SupportsEscapingLikeArgument returns true.</span></span></summary>
        <returns><span data-ttu-id="0b815-108">带有已转义的通配符和转义符的参数。</span><span class="sxs-lookup"><span data-stu-id="0b815-108">The argument with the wildcards and the escape character escaped.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDbInformation">
      <MemberSignature Language="C#" Value="protected abstract System.Xml.XmlReader GetDbInformation (string informationType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.XmlReader GetDbInformation(string informationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderManifest.GetDbInformation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetDbInformation (informationType As String) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Xml::XmlReader ^ GetDbInformation(System::String ^ informationType);" />
      <MemberSignature Language="F#" Value="abstract member GetDbInformation : string -&gt; System.Xml.XmlReader" Usage="dbProviderManifest.GetDbInformation informationType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="informationType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="informationType"><span data-ttu-id="0b815-109">要返回的信息的类型。</span><span class="sxs-lookup"><span data-stu-id="0b815-109">The type of the information to return.</span></span></param>
        <summary><span data-ttu-id="0b815-110">在派生类中重写时，此方法返回特定于提供程序的信息。</span><span class="sxs-lookup"><span data-stu-id="0b815-110">When overridden in a derived class, this method returns provider-specific information.</span></span></summary>
        <returns><span data-ttu-id="0b815-111">表示基础数据存储区目录的映射的 XmlReader 对象。</span><span class="sxs-lookup"><span data-stu-id="0b815-111">The XmlReader object that represents the mapping to the underlying data store catalog.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEdmType">
      <MemberSignature Language="C#" Value="public abstract System.Data.Metadata.Edm.TypeUsage GetEdmType (System.Data.Metadata.Edm.TypeUsage storeType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Metadata.Edm.TypeUsage GetEdmType(class System.Data.Metadata.Edm.TypeUsage storeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderManifest.GetEdmType(System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEdmType (storeType As TypeUsage) As TypeUsage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Data::Metadata::Edm::TypeUsage ^ GetEdmType(System::Data::Metadata::Edm::TypeUsage ^ storeType);" />
      <MemberSignature Language="F#" Value="abstract member GetEdmType : System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Metadata.Edm.TypeUsage" Usage="dbProviderManifest.GetEdmType storeType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeType" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="storeType"><span data-ttu-id="0b815-112">TypeUsage 实例，它描述了要映射到 EDM 类型的存储类型以及该类型的一组 Facet。</span><span class="sxs-lookup"><span data-stu-id="0b815-112">The TypeUsage instance that describes a storage type and a set of facets for that type to be mapped to the EDM type.</span></span></param>
        <summary><span data-ttu-id="0b815-113">在派生类中重写时，此方法将指定的存储类型以及该类型的一组 Facet 映射到 EDM 类型。</span><span class="sxs-lookup"><span data-stu-id="0b815-113">When overridden in a derived class, this method maps the specified storage type and a set of facets for that type to an EDM type.</span></span></summary>
        <returns><span data-ttu-id="0b815-114">描述 EDM 类型以及该类型的一组 Facet的 <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="0b815-114">The <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> instance that describes an EDM type and a set of facets for that type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFacetDescriptions">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.FacetDescription&gt; GetFacetDescriptions (System.Data.Metadata.Edm.EdmType edmType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.FacetDescription&gt; GetFacetDescriptions(class System.Data.Metadata.Edm.EdmType edmType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetFacetDescriptions (edmType As EdmType) As ReadOnlyCollection(Of FacetDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::FacetDescription ^&gt; ^ GetFacetDescriptions(System::Data::Metadata::Edm::EdmType ^ edmType);" />
      <MemberSignature Language="F#" Value="abstract member GetFacetDescriptions : System.Data.Metadata.Edm.EdmType -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.FacetDescription&gt;" Usage="dbProviderManifest.GetFacetDescriptions edmType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.FacetDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edmType" Type="System.Data.Metadata.Edm.EdmType" />
      </Parameters>
      <Docs>
        <param name="edmType"><span data-ttu-id="0b815-115">要返回 Facet 描述的 EDM 类型。</span><span class="sxs-lookup"><span data-stu-id="0b815-115">The EDM type to return the facet description for.</span></span></param>
        <summary><span data-ttu-id="0b815-116">返回特定类型的 FacetDescription 对象。</span><span class="sxs-lookup"><span data-stu-id="0b815-116">Returns the FacetDescription objects for a particular type.</span></span></summary>
        <returns><span data-ttu-id="0b815-117">用于指定的 EDM 类型的 FacetDescription 对象。</span><span class="sxs-lookup"><span data-stu-id="0b815-117">The FacetDescription objects for the specified EDM type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInformation">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader GetInformation (string informationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader GetInformation(string informationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderManifest.GetInformation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInformation (informationType As String) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ GetInformation(System::String ^ informationType);" />
      <MemberSignature Language="F#" Value="member this.GetInformation : string -&gt; System.Xml.XmlReader" Usage="dbProviderManifest.GetInformation informationType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="informationType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="informationType"><span data-ttu-id="0b815-118">要返回的信息的类型。</span><span class="sxs-lookup"><span data-stu-id="0b815-118">The type of the information to return.</span></span></param>
        <summary><span data-ttu-id="0b815-119">获取特定于提供程序的信息。</span><span class="sxs-lookup"><span data-stu-id="0b815-119">Gets the provider-specific information.</span></span></summary>
        <returns><span data-ttu-id="0b815-120">特定于提供程序的信息。</span><span class="sxs-lookup"><span data-stu-id="0b815-120">The provider-specific information.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStoreFunctions">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt; GetStoreFunctions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.EdmFunction&gt; GetStoreFunctions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderManifest.GetStoreFunctions" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetStoreFunctions () As ReadOnlyCollection(Of EdmFunction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::EdmFunction ^&gt; ^ GetStoreFunctions();" />
      <MemberSignature Language="F#" Value="abstract member GetStoreFunctions : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;" Usage="dbProviderManifest.GetStoreFunctions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0b815-121">在派生类中重写时，返回提供程序清单支持的 EDM 函数的集合。</span><span class="sxs-lookup"><span data-stu-id="0b815-121">When overridden in a derived class, returns a collection of EDM functions supported by the provider manifest.</span></span></summary>
        <returns><span data-ttu-id="0b815-122">EDM 函数的集合。</span><span class="sxs-lookup"><span data-stu-id="0b815-122">A collection of EDM functions.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStoreType">
      <MemberSignature Language="C#" Value="public abstract System.Data.Metadata.Edm.TypeUsage GetStoreType (System.Data.Metadata.Edm.TypeUsage edmType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Metadata.Edm.TypeUsage GetStoreType(class System.Data.Metadata.Edm.TypeUsage edmType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderManifest.GetStoreType(System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetStoreType (edmType As TypeUsage) As TypeUsage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Data::Metadata::Edm::TypeUsage ^ GetStoreType(System::Data::Metadata::Edm::TypeUsage ^ edmType);" />
      <MemberSignature Language="F#" Value="abstract member GetStoreType : System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Metadata.Edm.TypeUsage" Usage="dbProviderManifest.GetStoreType edmType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edmType" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="edmType"><span data-ttu-id="0b815-123">TypeUsage 实例，它描述了要映射到存储类型的EDM 类型以及该类 Facet。</span><span class="sxs-lookup"><span data-stu-id="0b815-123">The TypeUsage instance that describes the EDM type and a set of facets for that type to be mapped to a storage type.</span></span></param>
        <summary><span data-ttu-id="0b815-124">在派生类中重写时，此方法将指定的 EDM 类型以及该类型的一组 Facet 映射到存储类型。</span><span class="sxs-lookup"><span data-stu-id="0b815-124">When overridden in a derived class, this method maps the specified EDM type and a set of facets for that type to a storage type.</span></span></summary>
        <returns><span data-ttu-id="0b815-125">TypeUsage 实例，它描述了存储类型以及该类型的一组 Facet。</span><span class="sxs-lookup"><span data-stu-id="0b815-125">The TypeUsage instance that describes a storage type and a set of facets for that type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStoreTypes">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.PrimitiveType&gt; GetStoreTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.PrimitiveType&gt; GetStoreTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderManifest.GetStoreTypes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetStoreTypes () As ReadOnlyCollection(Of PrimitiveType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::PrimitiveType ^&gt; ^ GetStoreTypes();" />
      <MemberSignature Language="F#" Value="abstract member GetStoreTypes : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.PrimitiveType&gt;" Usage="dbProviderManifest.GetStoreTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.PrimitiveType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0b815-126">在派生类中重写时，返回数据源支持的一组基元类型。</span><span class="sxs-lookup"><span data-stu-id="0b815-126">When overridden in a derived class, returns the set of primitive types supported by the data source.</span></span></summary>
        <returns><span data-ttu-id="0b815-127">数据源支持的一组类型。</span><span class="sxs-lookup"><span data-stu-id="0b815-127">The set of types supported by the data source.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceName">
      <MemberSignature Language="C#" Value="public abstract string NamespaceName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbProviderManifest.NamespaceName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NamespaceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ NamespaceName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceName : string" Usage="System.Data.Common.DbProviderManifest.NamespaceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b815-128">获取此提供程序清单使用的命名空间。</span><span class="sxs-lookup"><span data-stu-id="0b815-128">Gets the namespace used by this provider manifest.</span></span></summary>
        <value><span data-ttu-id="0b815-129">此提供程序清单使用的命名空间。</span><span class="sxs-lookup"><span data-stu-id="0b815-129">The namespace used by this provider manifest.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreSchemaDefinition">
      <MemberSignature Language="C#" Value="public static readonly string StoreSchemaDefinition;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string StoreSchemaDefinition" />
      <MemberSignature Language="DocId" Value="F:System.Data.Common.DbProviderManifest.StoreSchemaDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StoreSchemaDefinition As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ StoreSchemaDefinition;" />
      <MemberSignature Language="F#" Value=" staticval mutable StoreSchemaDefinition : string" Usage="System.Data.Common.DbProviderManifest.StoreSchemaDefinition" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b815-130">为获取 StoreSchemaDefinitionVersion 而传递给 GetInformation 的值。</span><span class="sxs-lookup"><span data-stu-id="0b815-130">Value to pass to GetInformation to get the StoreSchemaDefinitionVersion.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreSchemaDefinitionVersion3">
      <MemberSignature Language="C#" Value="public static readonly string StoreSchemaDefinitionVersion3;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string StoreSchemaDefinitionVersion3" />
      <MemberSignature Language="DocId" Value="F:System.Data.Common.DbProviderManifest.StoreSchemaDefinitionVersion3" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StoreSchemaDefinitionVersion3 As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ StoreSchemaDefinitionVersion3;" />
      <MemberSignature Language="F#" Value=" staticval mutable StoreSchemaDefinitionVersion3 : string" Usage="System.Data.Common.DbProviderManifest.StoreSchemaDefinitionVersion3" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b815-131">为获取 StoreSchemaDefinitionVersion3 而传递给 GetInformation 的值。</span><span class="sxs-lookup"><span data-stu-id="0b815-131">Value to pass to GetInformation to get the StoreSchemaDefinitionVersion3.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreSchemaMapping">
      <MemberSignature Language="C#" Value="public static readonly string StoreSchemaMapping;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string StoreSchemaMapping" />
      <MemberSignature Language="DocId" Value="F:System.Data.Common.DbProviderManifest.StoreSchemaMapping" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StoreSchemaMapping As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ StoreSchemaMapping;" />
      <MemberSignature Language="F#" Value=" staticval mutable StoreSchemaMapping : string" Usage="System.Data.Common.DbProviderManifest.StoreSchemaMapping" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b815-132">为获取存储架构映射信息而传递给 GetInformation 的值。</span><span class="sxs-lookup"><span data-stu-id="0b815-132">Value to pass to GetInformation to get the StoreSchemaMappingVersion.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreSchemaMappingVersion3">
      <MemberSignature Language="C#" Value="public static readonly string StoreSchemaMappingVersion3;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string StoreSchemaMappingVersion3" />
      <MemberSignature Language="DocId" Value="F:System.Data.Common.DbProviderManifest.StoreSchemaMappingVersion3" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StoreSchemaMappingVersion3 As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ StoreSchemaMappingVersion3;" />
      <MemberSignature Language="F#" Value=" staticval mutable StoreSchemaMappingVersion3 : string" Usage="System.Data.Common.DbProviderManifest.StoreSchemaMappingVersion3" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b815-133">为获取 StoreSchemaMappingVersion3 而传递给 GetInformation 的值。</span><span class="sxs-lookup"><span data-stu-id="0b815-133">Value to pass to GetInformation to get the StoreSchemaMappingVersion3.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsEscapingLikeArgument">
      <MemberSignature Language="C#" Value="public virtual bool SupportsEscapingLikeArgument (out char escapeCharacter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SupportsEscapingLikeArgument([out] char&amp; escapeCharacter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderManifest.SupportsEscapingLikeArgument(System.Char@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SupportsEscapingLikeArgument (ByRef escapeCharacter As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool SupportsEscapingLikeArgument([Runtime::InteropServices::Out] char % escapeCharacter);" />
      <MemberSignature Language="F#" Value="abstract member SupportsEscapingLikeArgument : char -&gt; bool&#xA;override this.SupportsEscapingLikeArgument : char -&gt; bool" Usage="dbProviderManifest.SupportsEscapingLikeArgument escapeCharacter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="escapeCharacter" Type="System.Char" RefType="out" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="escapeCharacter"><span data-ttu-id="0b815-134">如果提供程序支持转义，则为要用作转义符的字符。</span><span class="sxs-lookup"><span data-stu-id="0b815-134">If the provider supports escaping, the character that would be used as the escape character.</span></span></param>
        <summary><span data-ttu-id="0b815-135">指示提供程序是否支持在 Like 表达式中使用转义字符串作为模式。</span><span class="sxs-lookup"><span data-stu-id="0b815-135">Indicates if the provider supports escaping strings to be used as patterns in a Like expression.</span></span></summary>
        <returns><span data-ttu-id="0b815-136">如果此提供程序支持在 Like 表达式中使用转义字符串作为模式，则为 <see langword="true" />；否则，为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0b815-136"><see langword="true" /> if this provider supports escaping strings to be used as patterns in a Like expression; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
