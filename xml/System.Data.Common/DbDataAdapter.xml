<Type Name="DbDataAdapter" FullName="System.Data.Common.DbDataAdapter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8e4f84a39a3ed3f7793625932eab2265ec42ae48" /><Meta Name="ms.sourcegitcommit" Value="943c8cdbe5b47c6c296a6f4b73038bbd43da0dd2" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/12/2021" /><Meta Name="ms.locfileid" Value="100292943" /></Metadata><TypeSignature Language="C#" Value="public abstract class DbDataAdapter : System.Data.Common.DataAdapter, ICloneable, System.Data.IDbDataAdapter" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbDataAdapter extends System.Data.Common.DataAdapter implements class System.Data.IDataAdapter, class System.Data.IDbDataAdapter, class System.ICloneable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbDataAdapter&#xA;Inherits DataAdapter&#xA;Implements ICloneable, IDbDataAdapter" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbDataAdapter abstract : System::Data::Common::DataAdapter, ICloneable, System::Data::IDbDataAdapter" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type DbDataAdapter = class&#xA;    inherit DataAdapter&#xA;    interface IDataAdapter&#xA;    interface IDbDataAdapter&#xA;    interface ICloneable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="C#" Value="public abstract class DbDataAdapter : System.Data.Common.DataAdapter, ICloneable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbDataAdapter extends System.Data.Common.DataAdapter implements class System.ICloneable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbDataAdapter&#xA;Inherits DataAdapter&#xA;Implements ICloneable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbDataAdapter abstract : System::Data::Common::DataAdapter, ICloneable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type DbDataAdapter = class&#xA;    inherit DataAdapter&#xA;    interface ICloneable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type DbDataAdapter = class&#xA;    inherit DataAdapter&#xA;    interface IDbDataAdapter&#xA;    interface IDataAdapter&#xA;    interface ICloneable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type DbDataAdapter = class&#xA;    inherit DataAdapter&#xA;    interface IDbDataAdapter&#xA;    interface ICloneable&#xA;    interface IDataAdapter" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Data.Common" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Data.Common.DataAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.Data.IDataAdapter</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.Data.IDbDataAdapter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="9e23c-101">帮助实现 <see cref="T:System.Data.IDbDataAdapter" /> 接口。</span><span class="sxs-lookup"><span data-stu-id="9e23c-101">Aids implementation of the <see cref="T:System.Data.IDbDataAdapter" /> interface.</span></span> <span data-ttu-id="9e23c-102"><see cref="T:System.Data.Common.DbDataAdapter" /> 的继承类实现了一组功能以提供强类型，但是继承了完全实现 DataAdapter 所需的大部分功能。</span><span class="sxs-lookup"><span data-stu-id="9e23c-102">Inheritors of <see cref="T:System.Data.Common.DbDataAdapter" /> implement a set of functions to provide strong typing, but inherit most of the functionality needed to fully implement a **DataAdapter**.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e23c-103"><xref:System.Data.Common.DbDataAdapter>类从 <xref:System.Data.Common.DataAdapter> 类继承并实现 <xref:System.Data.IDbDataAdapter> 接口。</span><span class="sxs-lookup"><span data-stu-id="9e23c-103">The <xref:System.Data.Common.DbDataAdapter> class inherits from the <xref:System.Data.Common.DataAdapter> class and implements the <xref:System.Data.IDbDataAdapter> interface.</span></span> <span data-ttu-id="9e23c-104">它有助于类实现设计用于关系数据库的 **DataAdapter** 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-104">It helps a class implement a **DataAdapter** designed for use with a relational database.</span></span>  
  
 <span data-ttu-id="9e23c-105">应用程序不会直接创建类的实例 <xref:System.Data.Common.DbDataAdapter> ，而是创建从它继承的类的实例。</span><span class="sxs-lookup"><span data-stu-id="9e23c-105">An application does not create an instance of the <xref:System.Data.Common.DbDataAdapter> class directly, but creates an instance of a class that inherits from it.</span></span>  
  
 <span data-ttu-id="9e23c-106">继承的类 <xref:System.Data.Common.DbDataAdapter> 必须实现继承成员，并且通常定义其他成员来添加特定于提供程序的功能。</span><span class="sxs-lookup"><span data-stu-id="9e23c-106">Classes that inherit <xref:System.Data.Common.DbDataAdapter> must implement the inherited members, and typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="9e23c-107">例如， <xref:System.Data.Common.DbDataAdapter> 类定义 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 属性， <xref:System.Data.Common.DbDataAdapter> 类定义8个 <xref:System.Data.IDataAdapter.Fill%2A> 方法重载。</span><span class="sxs-lookup"><span data-stu-id="9e23c-107">For example, the <xref:System.Data.Common.DbDataAdapter> class defines the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property, and the <xref:System.Data.Common.DbDataAdapter> class defines eight overloads of the <xref:System.Data.IDataAdapter.Fill%2A> method.</span></span> <span data-ttu-id="9e23c-108">反过来， <xref:System.Data.OleDb.OleDbDataAdapter> 该类继承 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 方法，还定义了两个将 <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> ADO 记录集对象作为参数的重载。</span><span class="sxs-lookup"><span data-stu-id="9e23c-108">In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method, and also defines two additional overloads of <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> that take an ADO Recordset object as a parameter.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="9e23c-109">当你从类继承时 <see cref="T:System.Data.Common.DbDataAdapter" /> ，我们建议你实现以下构造函数：</span><span class="sxs-lookup"><span data-stu-id="9e23c-109">When you inherit from the <see cref="T:System.Data.Common.DbDataAdapter" /> class, we recommend that you implement the following constructors:</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="9e23c-110">项</span><span class="sxs-lookup"><span data-stu-id="9e23c-110">Item</span></span> 
 </term><description> <span data-ttu-id="9e23c-111">说明</span><span class="sxs-lookup"><span data-stu-id="9e23c-111">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="9e23c-112">*Prv* DataAdapter () </span><span class="sxs-lookup"><span data-stu-id="9e23c-112">*Prv* DataAdapter()</span></span> 
 </term><description> <span data-ttu-id="9e23c-113">初始化 *Prv* DataAdapter 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9e23c-113">Initializes a new instance of the *Prv* DataAdapter class.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="9e23c-114">*Prv* DataAdapter (*Prv* 命令 *selectCommand*) </span><span class="sxs-lookup"><span data-stu-id="9e23c-114">*Prv* DataAdapter(*Prv* Command *selectCommand*)</span></span> 
 </term><description> <span data-ttu-id="9e23c-115">使用指定的 SQL SELECT 语句初始化 *Prv* DataAdapter 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9e23c-115">Initializes a new instance of the *Prv* DataAdapter class with the specified SQL SELECT statement.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="9e23c-116">*Prv* DataAdapter (字符串 *selectCommandText*，string *selectConnectionString*) </span><span class="sxs-lookup"><span data-stu-id="9e23c-116">*Prv* DataAdapter(string *selectCommandText*, string *selectConnectionString*)</span></span> 
 </term><description> <span data-ttu-id="9e23c-117">使用 SQL SELECT 语句和连接字符串初始化 *Prv* DataAdapter 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9e23c-117">Initializes a new instance of the *Prv* DataAdapter class with an SQL SELECT statement and a connection string.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="9e23c-118">*Prv* DataAdapter (字符串 *selectCommandText*， *Prv* 连接 *selectConnection*) </span><span class="sxs-lookup"><span data-stu-id="9e23c-118">*Prv* DataAdapter(string *selectCommandText*, *Prv* Connection *selectConnection*)</span></span> 
 </term><description> <span data-ttu-id="9e23c-119">使用 SQL SELECT 语句和 *Prv* 连接对象初始化 *Prv* DataAdapter 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9e23c-119">Initializes a new instance of the *Prv* DataAdapter class with an SQL SELECT statement and a *Prv* Connection object.</span></span>  
  
 </description></item></list>  

 <span data-ttu-id="9e23c-120">若要提升 .NET Framework 数据提供程序之间的一致性，应将继承类命名为 *Prv* DataAdapter 格式，其中 *Prv* 是给定给特定 .NET Framework 数据提供程序命名空间中的所有类的统一前缀。</span><span class="sxs-lookup"><span data-stu-id="9e23c-120">To promote consistency among .NET Framework data providers, you should name the inheriting class in the form *Prv* DataAdapter, where *Prv* is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</span></span> <span data-ttu-id="9e23c-121">例如，"Sql" 是 <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> **SqlClient** 命名空间中类的前缀。</span><span class="sxs-lookup"><span data-stu-id="9e23c-121">For example, "Sql" is the prefix of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class in the **System.Data.SqlClient** namespace.</span></span></para></block>
    <related type="Article" href="/dotnet/framework/data/adonet/dbproviderfactories"><span data-ttu-id="9e23c-122">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-122">DbProviderFactories (ADO.NET)</span></span></related>
    <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-123">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-123">ADO.NET Overview</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9e23c-124">初始化 <see langword="DataAdapter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9e23c-124">Initializes a new instance of a <see langword="DataAdapter" /> class.</span></span></summary>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-125">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-125">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbDataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbDataAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9e23c-126">初始化 DataAdapter 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9e23c-126">Initializes a new instance of a **DataAdapter** class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e23c-127">当你创建的实例时 <xref:System.Data.Common.DbDataAdapter> ，以下读/写属性将设置为以下初始值。</span><span class="sxs-lookup"><span data-stu-id="9e23c-127">When you create an instance of <xref:System.Data.Common.DbDataAdapter>, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="9e23c-128">属性</span><span class="sxs-lookup"><span data-stu-id="9e23c-128">Properties</span></span>|<span data-ttu-id="9e23c-129">初始值</span><span class="sxs-lookup"><span data-stu-id="9e23c-129">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.IDbDataAdapter.SelectCommand%2A>|<span data-ttu-id="9e23c-130">一个新的 <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="9e23c-130">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.InsertCommand%2A>|<span data-ttu-id="9e23c-131">一个新的 <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="9e23c-131">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>|<span data-ttu-id="9e23c-132">一个新的 <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="9e23c-132">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>|<span data-ttu-id="9e23c-133">一个新的 <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="9e23c-133">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="9e23c-134">可以通过单独调用属性来更改任何这些属性的值。</span><span class="sxs-lookup"><span data-stu-id="9e23c-134">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dbproviderfactories"><span data-ttu-id="9e23c-135">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-135">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-136">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-136">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbDataAdapter (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbDataAdapter(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberSignature Language="F#" Value="new System.Data.Common.DbDataAdapter : System.Data.Common.DbDataAdapter -&gt; System.Data.Common.DbDataAdapter" Usage="new System.Data.Common.DbDataAdapter adapter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter"><span data-ttu-id="9e23c-137">用于创建新 <see langword="DataAdapter" /> 的 <see langword="DataAdapter" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="9e23c-137">A <see langword="DataAdapter" /> object used to create the new <see langword="DataAdapter" />.</span></span></param>
        <summary><span data-ttu-id="9e23c-138">从同一类型的现有对象中初始化 <see langword="DataAdapter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9e23c-138">Initializes a new instance of a <see langword="DataAdapter" /> class from an existing object of the same type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e23c-139">构造函数的此重载 <xref:System.Data.Common.DbDataAdapter> 旨在供 .NET Framework 数据提供程序在实现在克隆实现中使用的类似构造函数时使用。</span><span class="sxs-lookup"><span data-stu-id="9e23c-139">This overload of the <xref:System.Data.Common.DbDataAdapter> constructor is designed for use by a .NET Framework data provider when implementing a similar constructor for use in a clone implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dbproviderfactories"><span data-ttu-id="9e23c-140">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-140">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-141">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-141">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddToBatch">
      <MemberSignature Language="C#" Value="protected virtual int AddToBatch (System.Data.IDbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 AddToBatch(class System.Data.IDbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AddToBatch (command As IDbCommand) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int AddToBatch(System::Data::IDbCommand ^ command);" />
      <MemberSignature Language="F#" Value="abstract member AddToBatch : System.Data.IDbCommand -&gt; int&#xA;override this.AddToBatch : System.Data.IDbCommand -&gt; int" Usage="dbDataAdapter.AddToBatch command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.IDbCommand" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="9e23c-142">要添加到批处理的 <see cref="T:System.Data.IDbCommand" />。</span><span class="sxs-lookup"><span data-stu-id="9e23c-142">The <see cref="T:System.Data.IDbCommand" /> to add to the batch.</span></span></param>
        <summary><span data-ttu-id="9e23c-143">向当前批处理添加 <see cref="T:System.Data.IDbCommand" />。</span><span class="sxs-lookup"><span data-stu-id="9e23c-143">Adds a <see cref="T:System.Data.IDbCommand" /> to the current batch.</span></span></summary>
        <returns><span data-ttu-id="9e23c-144">添加 <see cref="T:System.Data.IDbCommand" /> 之前批处理中的命令数。</span><span class="sxs-lookup"><span data-stu-id="9e23c-144">The number of commands in the batch before adding the <see cref="T:System.Data.IDbCommand" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e23c-145">在中 <xref:System.Data.Common.DbDataAdapter> ，此方法将引发 <xref:System.NotSupportedException> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-145">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="9e23c-146">从继承的类 <xref:System.Data.Common.DbDataAdapter> 将重写此方法以提供对批的支持。</span><span class="sxs-lookup"><span data-stu-id="9e23c-146">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9e23c-147">该适配器不支持批处理。</span><span class="sxs-lookup"><span data-stu-id="9e23c-147">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="9e23c-148">此方法是受保护的，由 .NET Framework 数据提供程序使用。</span><span class="sxs-lookup"><span data-stu-id="9e23c-148">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="9e23c-149">如果从继承的类 <see cref="T:System.Data.Common.DbDataAdapter" /> 支持批处理，则该类将重写此方法，以允许用户向批处理中添加命令。</span><span class="sxs-lookup"><span data-stu-id="9e23c-149">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to add a command to a batch.</span></span></para></block>
        <related type="Article" href="/dotnet/framework/data/adonet/dbproviderfactories"><span data-ttu-id="9e23c-150">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-150">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-151">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-151">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ClearBatch">
      <MemberSignature Language="C#" Value="protected virtual void ClearBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.ClearBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ClearBatch ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ClearBatch();" />
      <MemberSignature Language="F#" Value="abstract member ClearBatch : unit -&gt; unit&#xA;override this.ClearBatch : unit -&gt; unit" Usage="dbDataAdapter.ClearBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9e23c-152">从批处理中移除所有 <see cref="T:System.Data.IDbCommand" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="9e23c-152">Removes all <see cref="T:System.Data.IDbCommand" /> objects from the batch.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e23c-153">在中 <xref:System.Data.Common.DbDataAdapter> ，此方法将引发 <xref:System.NotSupportedException> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-153">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="9e23c-154">从继承的类 <xref:System.Data.Common.DbDataAdapter> 将重写此方法以提供对批的支持。</span><span class="sxs-lookup"><span data-stu-id="9e23c-154">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9e23c-155">该适配器不支持批处理。</span><span class="sxs-lookup"><span data-stu-id="9e23c-155">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="9e23c-156">此方法是受保护的，由 .NET Framework 数据提供程序使用。</span><span class="sxs-lookup"><span data-stu-id="9e23c-156">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="9e23c-157">如果从继承的类 <see cref="T:System.Data.Common.DbDataAdapter" /> 支持批处理，则该类将重写此方法，以允许用户从批处理中删除所有命令。</span><span class="sxs-lookup"><span data-stu-id="9e23c-157">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to remove all commands from a batch.</span></span></para></block>
        <related type="Article" href="/dotnet/framework/data/adonet/dbproviderfactories"><span data-ttu-id="9e23c-158">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-158">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-159">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-159">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatedEvent">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand? command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateRowUpdatedEvent (dataRow As DataRow, command As IDbCommand, statementType As StatementType, tableMapping As DataTableMapping) As RowUpdatedEventArgs" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::RowUpdatedEventArgs ^ CreateRowUpdatedEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs&#xA;override this.CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs" Usage="dbDataAdapter.CreateRowUpdatedEvent (dataRow, command, statementType, tableMapping)" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="protected abstract System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateRowUpdatedEvent (dataRow As DataRow, command As IDbCommand, statementType As StatementType, tableMapping As DataTableMapping) As RowUpdatedEventArgs" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Data::Common::RowUpdatedEventArgs ^ CreateRowUpdatedEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs" Usage="dbDataAdapter.CreateRowUpdatedEvent (dataRow, command, statementType, tableMapping)" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatedEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow"><span data-ttu-id="9e23c-160">用于更新数据源的 <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="9e23c-160">The <see cref="T:System.Data.DataRow" /> used to update the data source.</span></span></param>
        <param name="command"><span data-ttu-id="9e23c-161">在 <see cref="T:System.Data.IDbCommand" /> 过程中执行的 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="9e23c-161">The <see cref="T:System.Data.IDbCommand" /> executed during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span></span></param>
        <param name="statementType"><span data-ttu-id="9e23c-162">该命令是 UPDATE、INSERT、DELETE 语句还是 SELECT 语句。</span><span class="sxs-lookup"><span data-stu-id="9e23c-162">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</span></span></param>
        <param name="tableMapping"><span data-ttu-id="9e23c-163"><see cref="T:System.Data.Common.DataTableMapping" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="9e23c-163">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</span></span></param>
        <summary><span data-ttu-id="9e23c-164">初始化 <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9e23c-164">Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</span></span></summary>
        <returns><span data-ttu-id="9e23c-165"><see cref="T:System.Data.Common.RowUpdatedEventArgs" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9e23c-165">A new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="9e23c-166">当 <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> 在派生类中重写时，请确保调用基类的 <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="9e23c-166">When overriding <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> method.</span></span></para></block>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-167">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-167">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatingEvent">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand? command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateRowUpdatingEvent (dataRow As DataRow, command As IDbCommand, statementType As StatementType, tableMapping As DataTableMapping) As RowUpdatingEventArgs" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::RowUpdatingEventArgs ^ CreateRowUpdatingEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs&#xA;override this.CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs" Usage="dbDataAdapter.CreateRowUpdatingEvent (dataRow, command, statementType, tableMapping)" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="protected abstract System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateRowUpdatingEvent (dataRow As DataRow, command As IDbCommand, statementType As StatementType, tableMapping As DataTableMapping) As RowUpdatingEventArgs" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Data::Common::RowUpdatingEventArgs ^ CreateRowUpdatingEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs" Usage="dbDataAdapter.CreateRowUpdatingEvent (dataRow, command, statementType, tableMapping)" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatingEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow"><span data-ttu-id="9e23c-168">更新数据源的 <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="9e23c-168">The <see cref="T:System.Data.DataRow" /> that updates the data source.</span></span></param>
        <param name="command"><span data-ttu-id="9e23c-169">要在 <see cref="T:System.Data.IDbCommand" /> 过程中执行的 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="9e23c-169">The <see cref="T:System.Data.IDbCommand" /> to execute during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span></span></param>
        <param name="statementType"><span data-ttu-id="9e23c-170">该命令是 UPDATE、INSERT、DELETE 语句还是 SELECT 语句。</span><span class="sxs-lookup"><span data-stu-id="9e23c-170">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</span></span></param>
        <param name="tableMapping"><span data-ttu-id="9e23c-171"><see cref="T:System.Data.Common.DataTableMapping" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="9e23c-171">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</span></span></param>
        <summary><span data-ttu-id="9e23c-172">初始化 <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9e23c-172">Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</span></span></summary>
        <returns><span data-ttu-id="9e23c-173"><see cref="T:System.Data.Common.RowUpdatingEventArgs" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9e23c-173">A new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="9e23c-174">当 <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> 在派生类中重写时，请确保调用基类的 <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="9e23c-174">When overriding <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> method.</span></span></para></block>
        <related type="Article" href="/dotnet/framework/data/adonet/dbproviderfactories"><span data-ttu-id="9e23c-175">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-175">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-176">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-176">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DefaultSourceTableName">
      <MemberSignature Language="C#" Value="public const string DefaultSourceTableName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultSourceTableName" />
      <MemberSignature Language="DocId" Value="F:System.Data.Common.DbDataAdapter.DefaultSourceTableName" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultSourceTableName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultSourceTableName;" />
      <MemberSignature Language="F#" Value="val mutable DefaultSourceTableName : string" Usage="System.Data.Common.DbDataAdapter.DefaultSourceTableName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9e23c-177"><see cref="T:System.Data.Common.DataAdapter" /> 对象用于表映射的默认名称。</span><span class="sxs-lookup"><span data-stu-id="9e23c-177">The default name used by the <see cref="T:System.Data.Common.DataAdapter" /> object for table mappings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e23c-178">"表" 是对象用于表映射的默认名称 <xref:System.Data.Common.DataAdapter> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-178">"Table" is the default name used by the <xref:System.Data.Common.DataAdapter> object for table mappings.</span></span>  
  
 <span data-ttu-id="9e23c-179"><xref:System.Data.Common.DbDataAdapter.DefaultSourceTableName> 当应用程序添加要与一起使用的表映射 <xref:System.Data.Common.DbDataAdapter.Fill%2A> ，但未指定 <xref:System.Data.DataTable> 名称时。</span><span class="sxs-lookup"><span data-stu-id="9e23c-179"><xref:System.Data.Common.DbDataAdapter.DefaultSourceTableName> is when an application adds a table mapping to be used with <xref:System.Data.Common.DbDataAdapter.Fill%2A>, but does not specify a <xref:System.Data.DataTable> name.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dbproviderfactories"><span data-ttu-id="9e23c-180">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-180">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-181">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-181">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand? DeleteCommand { get; set; }" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ DeleteCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.DeleteCommand" />
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand DeleteCommand { get; set; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9e23c-182">获取或设置用于从数据集中删除记录的命令。</span><span class="sxs-lookup"><span data-stu-id="9e23c-182">Gets or sets a command for deleting records from the data set.</span></span></summary>
        <value><span data-ttu-id="9e23c-183"><see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />，它针对数据集中已删除的行删除数据源中的记录。</span><span class="sxs-lookup"><span data-stu-id="9e23c-183">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e23c-184">在过程中 <xref:System.Data.Common.DbDataAdapter.Update%2A> ，如果未设置此属性，并且主键信息存在于中 <xref:System.Data.DataSet> ，则 <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> 会自动生成。</span><span class="sxs-lookup"><span data-stu-id="9e23c-184">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> is automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e23c-185">下面的示例创建派生类 <xref:System.Data.OleDb.OleDbDataAdapter> 并设置其一些属性。</span><span class="sxs-lookup"><span data-stu-id="9e23c-185">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="9e23c-186">操作数据 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-186">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dbproviderfactories"><span data-ttu-id="9e23c-187">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-187">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-188">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-188">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="dbDataAdapter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="9e23c-189">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9e23c-189"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="9e23c-190">释放由 <see cref="T:System.Data.Common.DbDataAdapter" /> 占用的非托管资源，还可以另外再释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="9e23c-190">Releases the unmanaged resources used by the <see cref="T:System.Data.Common.DbDataAdapter" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dbproviderfactories"><span data-ttu-id="9e23c-191">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-191">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-192">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-192">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteBatch">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.ExecuteBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteBatch () As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteBatch();" />
      <MemberSignature Language="F#" Value="abstract member ExecuteBatch : unit -&gt; int&#xA;override this.ExecuteBatch : unit -&gt; int" Usage="dbDataAdapter.ExecuteBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9e23c-193">执行当前批处理。</span><span class="sxs-lookup"><span data-stu-id="9e23c-193">Executes the current batch.</span></span></summary>
        <returns><span data-ttu-id="9e23c-194">从批处理中的最后一个命令返回的值。</span><span class="sxs-lookup"><span data-stu-id="9e23c-194">The return value from the last command in the batch.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e23c-195">在中 <xref:System.Data.Common.DbDataAdapter> ，此方法将引发 <xref:System.NotSupportedException> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-195">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="9e23c-196">从继承的类 <xref:System.Data.Common.DbDataAdapter> 将重写此方法以提供对批的支持。</span><span class="sxs-lookup"><span data-stu-id="9e23c-196">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="9e23c-197">此方法是受保护的，由 .NET Framework 数据提供程序使用。</span><span class="sxs-lookup"><span data-stu-id="9e23c-197">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="9e23c-198">如果从继承的类 <see cref="T:System.Data.Common.DbDataAdapter" /> 支持批处理，则该类将重写此方法以允许用户执行批处理。</span><span class="sxs-lookup"><span data-stu-id="9e23c-198">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to execute a batch.</span></span> <span data-ttu-id="9e23c-199">此方法的实现将适配器中的命令合并为一个批处理，然后执行该批并返回该批的返回值。</span><span class="sxs-lookup"><span data-stu-id="9e23c-199">An implementation of this method combines the commands in the adapter into a batch, then executes the batch and returns the return value of the batch.</span></span></para></block>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="9e23c-200">操作数据 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-200">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dbproviderfactories"><span data-ttu-id="9e23c-201">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-201">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-202">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-202">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fill">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9e23c-203">填充 <see cref="T:System.Data.DataSet" /> 或 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="9e23c-203">Fills a <see cref="T:System.Data.DataSet" /> or a <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-204">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-204">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public override int Fill (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Fill(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Fill (dataSet As DataSet) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Fill(System::Data::DataSet ^ dataSet);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet -&gt; int" Usage="dbDataAdapter.Fill dataSet" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">M:System.Data.IDataAdapter.Fill(System.Data.DataSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="9e23c-205">要用记录和架构（如果必要）填充的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="9e23c-205">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <summary><span data-ttu-id="9e23c-206">在 <see cref="T:System.Data.DataSet" /> 中添加或刷新行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-206">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <returns><span data-ttu-id="9e23c-207">已在 <see cref="T:System.Data.DataSet" /> 中成功添加或刷新的行数。</span><span class="sxs-lookup"><span data-stu-id="9e23c-207">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="9e23c-208">这不包括受不返回行的语句影响的行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-208">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e23c-209"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法使用 SELECT 语句从数据源中检索数据。</span><span class="sxs-lookup"><span data-stu-id="9e23c-209">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="9e23c-210"><xref:System.Data.IDbConnection>与 select 命令关联的对象必须有效，但不需要打开。</span><span class="sxs-lookup"><span data-stu-id="9e23c-210">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to be open.</span></span> <span data-ttu-id="9e23c-211">如果在 <xref:System.Data.IDbConnection> 调用之前关闭 <xref:System.Data.Common.DbDataAdapter.Fill%2A> ，则将其打开以检索数据，然后将其关闭。</span><span class="sxs-lookup"><span data-stu-id="9e23c-211">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="9e23c-212">如果在调用之前连接处于打开状态 <xref:System.Data.Common.DbDataAdapter.Fill%2A> ，则该连接将保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="9e23c-212">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="9e23c-213">如果在填充数据表时出现错误或异常，则在出现错误之前添加的行将保留在数据表中。</span><span class="sxs-lookup"><span data-stu-id="9e23c-213">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="9e23c-214">操作的剩余部分中止。</span><span class="sxs-lookup"><span data-stu-id="9e23c-214">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="9e23c-215">如果命令未返回任何行，则不会向中添加任何表 <xref:System.Data.DataSet> ，也不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="9e23c-215">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
 <span data-ttu-id="9e23c-216">如果 <xref:System.Data.Common.DbDataAdapter> 对象在填充时遇到重复的列 <xref:System.Data.DataTable> ，则它将使用模式 "*columnname* 1"、"*columnname* 2"、"*columnname* 3" 等生成后续列的名称。</span><span class="sxs-lookup"><span data-stu-id="9e23c-216">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns using the pattern "*columnname* 1", "*columnname* 2", "*columnname* 3", and so on.</span></span> <span data-ttu-id="9e23c-217">如果传入数据包含未命名列，则这些列将 <xref:System.Data.DataSet> 按照模式 "Column1"、"Column2" 等放置在中。</span><span class="sxs-lookup"><span data-stu-id="9e23c-217">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="9e23c-218">当指定的查询返回多个结果时，返回查询的每个行的结果集将放在一个单独的表中。</span><span class="sxs-lookup"><span data-stu-id="9e23c-218">When the query specified returns multiple results, the result set for each row returning query is placed in a separate table.</span></span> <span data-ttu-id="9e23c-219">附加的结果集通过将整数值追加到指定的表名来命名 (例如，"Table"、"Table1"、"Table2" 等) 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-219">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="9e23c-220">由于没有为不返回行的查询创建表，因此，如果处理的是 insert 查询后跟 select 查询，则为 select 查询创建的表名为 "Table"，因为它是第一个创建的表。</span><span class="sxs-lookup"><span data-stu-id="9e23c-220">Because no table is created for a query that does not return rows, if you process an insert query followed by a select query, the table created for the select query is named "Table" because it is the first table created.</span></span> <span data-ttu-id="9e23c-221">使用列和表名称的应用程序应确保不会与这些命名模式发生冲突。</span><span class="sxs-lookup"><span data-stu-id="9e23c-221">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="9e23c-222">当用于填充的 SELECT 语句 <xref:System.Data.DataSet> 返回多个结果（如批处理 SQL 语句）时，如果其中一个结果包含错误，则会跳过所有后续结果，并且不会将其添加到中 <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-222">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as batch SQL statements, if one of the results contains an error, all subsequent results are skipped and are not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="9e23c-223">使用后续 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 调用来刷新的内容时 <xref:System.Data.DataSet> ，必须满足两个条件：</span><span class="sxs-lookup"><span data-stu-id="9e23c-223">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="9e23c-224">SQL 语句应匹配最初用于填充的 <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-224">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="9e23c-225">**键** 列信息必须存在。</span><span class="sxs-lookup"><span data-stu-id="9e23c-225">The **Key** column information must be present.</span></span>  
  
 <span data-ttu-id="9e23c-226">如果主键信息存在，则会对所有重复行进行协调，并且仅在对应于的中出现一次 <xref:System.Data.DataTable> <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-226">If primary key information is present, any duplicate rows are reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="9e23c-227">可以通过 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 指定 <xref:System.Data.DataTable.PrimaryKey%2A> 的属性 <xref:System.Data.DataTable> 或将 <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> 属性设置为来 `AddWithKey` 设置主键信息。</span><span class="sxs-lookup"><span data-stu-id="9e23c-227">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="9e23c-228">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="9e23c-228">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="9e23c-229">必须显式定义主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-229">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="9e23c-230">有关详细信息，请参阅 [定义主键](/dotnet/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys)。</span><span class="sxs-lookup"><span data-stu-id="9e23c-230">For more information, see [Defining Primary Keys](/dotnet/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e23c-231">当处理返回多个结果的批处理 SQL 语句时， <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> OLE DB 的 .NET Framework 数据提供程序的实现仅检索第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="9e23c-231">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="9e23c-232">若要检索多个结果的架构信息，请使用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> <xref:System.Data.MissingSchemaAction> 设置为的 `AddWithKey` 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-232">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dbproviderfactories"><span data-ttu-id="9e23c-233">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-233">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-234">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-234">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fill (dataTable As DataTable) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataTable ^ dataTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable -&gt; int" Usage="dbDataAdapter.Fill dataTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="9e23c-235">用于表映射的 <see cref="T:System.Data.DataTable" /> 的名称。</span><span class="sxs-lookup"><span data-stu-id="9e23c-235">The name of the <see cref="T:System.Data.DataTable" /> to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="9e23c-236">在 <see cref="T:System.Data.DataSet" /> 的指定范围中添加或刷新行，以与使用 <see cref="T:System.Data.DataTable" /> 名称的数据源中的行匹配。</span><span class="sxs-lookup"><span data-stu-id="9e23c-236">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataTable" /> name.</span></span></summary>
        <returns><span data-ttu-id="9e23c-237">已在 <see cref="T:System.Data.DataSet" /> 中成功添加或刷新的行数。</span><span class="sxs-lookup"><span data-stu-id="9e23c-237">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="9e23c-238">这不包括受不返回行的语句影响的行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-238">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e23c-239"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法使用关联属性指定的 SELECT 语句从数据源中检索行 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-239">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="9e23c-240">与 SELECT 语句关联的连接对象必须有效，但不需要打开。</span><span class="sxs-lookup"><span data-stu-id="9e23c-240">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="9e23c-241">如果在调用之前连接关闭 <xref:System.Data.Common.DbDataAdapter.Fill%2A> ，则将其打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="9e23c-241">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="9e23c-242">如果在调用之前连接处于打开状态 <xref:System.Data.Common.DbDataAdapter.Fill%2A> ，则该连接将保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="9e23c-242">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="9e23c-243"><xref:System.Data.Common.DbDataAdapter.Fill%2A>然后，操作将行添加到 <xref:System.Data.DataTable> 中的目标对象 <xref:System.Data.DataSet> ，并创建 <xref:System.Data.DataTable> 对象（如果它们尚不存在）。</span><span class="sxs-lookup"><span data-stu-id="9e23c-243">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="9e23c-244">创建 <xref:System.Data.DataTable> 对象时，该 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 操作通常只创建列名称元数据。</span><span class="sxs-lookup"><span data-stu-id="9e23c-244">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="9e23c-245">但是，如果将 <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> 属性设置为 `AddWithKey` ，则还会创建相应的主键和约束。</span><span class="sxs-lookup"><span data-stu-id="9e23c-245">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="9e23c-246">如果在 <xref:System.Data.Common.DbDataAdapter> 填充时遇到重复的列， <xref:System.Data.DataTable> 则它将使用模式 "*columnname* 1"、"*columnname* 2"、"*columnname* 3" 等为后续列生成名称。</span><span class="sxs-lookup"><span data-stu-id="9e23c-246">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname* 1", "*columnname* 2", "*columnname* 3", and so on.</span></span> <span data-ttu-id="9e23c-247">如果传入数据包含未命名列，则这些列将 <xref:System.Data.DataSet> 按照模式 "Column1"、"Column2" 等放置在中。</span><span class="sxs-lookup"><span data-stu-id="9e23c-247">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="9e23c-248">如果将多个结果集添加到 <xref:System.Data.DataSet> 每个结果集，则会将其放在一个单独的表中。</span><span class="sxs-lookup"><span data-stu-id="9e23c-248">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span>  
  
 <span data-ttu-id="9e23c-249"><xref:System.Data.Common.DbDataAdapter.Fill%2A>作为参数的的重载 `DataTable` 只获取第一个结果。</span><span class="sxs-lookup"><span data-stu-id="9e23c-249">The overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataTable` as a parameter only obtains the first result.</span></span> <span data-ttu-id="9e23c-250">使用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> `DataSet` 作为参数的重载以获取多个结果。</span><span class="sxs-lookup"><span data-stu-id="9e23c-250">Use an overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataSet` as a parameter to obtain multiple results.</span></span>  
  
 <span data-ttu-id="9e23c-251"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支持 <xref:System.Data.DataSet> 包含多个对象，这些 <xref:System.Data.DataTable> 对象的名称仅区分大小写。</span><span class="sxs-lookup"><span data-stu-id="9e23c-251">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="9e23c-252">在这种情况下， <xref:System.Data.Common.DbDataAdapter.Fill%2A> 将执行区分大小写的比较来查找相应的表，如果不存在精确匹配，则创建新表。</span><span class="sxs-lookup"><span data-stu-id="9e23c-252">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="9e23c-253">下面的 c # 代码阐释了这一行为。</span><span class="sxs-lookup"><span data-stu-id="9e23c-253">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
 dataset.Tables.Add("AAA");  
 adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
    adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="9e23c-254">如果 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 调用，并且 <xref:System.Data.DataSet> 仅包含 <xref:System.Data.DataTable> 其名称仅大小写不同的名称， <xref:System.Data.DataTable> 则会更新。</span><span class="sxs-lookup"><span data-stu-id="9e23c-254">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="9e23c-255">在这种情况下，比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="9e23c-255">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="9e23c-256">下面的 c # 代码阐释了这一行为。</span><span class="sxs-lookup"><span data-stu-id="9e23c-256">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
    adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="9e23c-257">您可以 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 在同一上多次使用该方法 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-257">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="9e23c-258">如果存在主键，则传入行与已存在的匹配行合并在一起。</span><span class="sxs-lookup"><span data-stu-id="9e23c-258">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="9e23c-259">如果主键不存在，则传入行将追加到 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-259">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="9e23c-260">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="9e23c-260">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="9e23c-261">必须显式定义主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-261">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="9e23c-262">有关详细信息，请参阅 [定义主键](/dotnet/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys)。</span><span class="sxs-lookup"><span data-stu-id="9e23c-262">For more information, see [Defining Primary Keys](/dotnet/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e23c-263">当处理返回多个结果的批处理 SQL 语句时， <xref:System.Data.Common.DbDataAdapter.Fill%2A> <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> .NET Framework 数据提供程序的和的实现仅检索第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="9e23c-263">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.Fill%2A> and <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for a .NET Framework data provider retrieves schema information for only the first result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9e23c-264">源表无效。</span><span class="sxs-lookup"><span data-stu-id="9e23c-264">The source table is invalid.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="9e23c-265">此方法的重载 <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> 是受保护的，旨在供 .NET Framework 数据提供程序使用。</span><span class="sxs-lookup"><span data-stu-id="9e23c-265">This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para></block>
        <related type="Article" href="/dotnet/framework/data/adonet/dbproviderfactories"><span data-ttu-id="9e23c-266">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-266">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-267">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-267">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fill (dataSet As DataSet, srcTable As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * string -&gt; int" Usage="dbDataAdapter.Fill (dataSet, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="9e23c-268">要用记录和架构（如果必要）填充的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="9e23c-268">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="srcTable"><span data-ttu-id="9e23c-269">用于表映射的源表的名称。</span><span class="sxs-lookup"><span data-stu-id="9e23c-269">The name of the source table to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="9e23c-270">在 <see cref="T:System.Data.DataSet" /> 中添加或刷新行以匹配使用 <see cref="T:System.Data.DataSet" /> 和 <see cref="T:System.Data.DataTable" /> 名称的数据源中的行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-270">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span></span></summary>
        <returns><span data-ttu-id="9e23c-271">已在 <see cref="T:System.Data.DataSet" /> 中成功添加或刷新的行数。</span><span class="sxs-lookup"><span data-stu-id="9e23c-271">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="9e23c-272">这不包括受不返回行的语句影响的行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-272">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e23c-273"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法使用 SELECT 语句从数据源中检索数据。</span><span class="sxs-lookup"><span data-stu-id="9e23c-273">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="9e23c-274"><xref:System.Data.IDbConnection>与 select 命令关联的对象必须有效，但不需要打开。</span><span class="sxs-lookup"><span data-stu-id="9e23c-274">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to be open.</span></span> <span data-ttu-id="9e23c-275">如果在 <xref:System.Data.IDbConnection> 调用之前关闭 <xref:System.Data.Common.DbDataAdapter.Fill%2A> ，则将其打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="9e23c-275">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="9e23c-276">如果在调用之前连接处于打开状态 <xref:System.Data.Common.DbDataAdapter.Fill%2A> ，则该连接将保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="9e23c-276">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="9e23c-277">如果命令未返回任何行，则不会向中添加任何表 <xref:System.Data.DataSet> ，也不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="9e23c-277">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
 <span data-ttu-id="9e23c-278">如果 <xref:System.Data.Common.DbDataAdapter> 对象在填充时遇到重复的列， <xref:System.Data.DataTable> 它将使用模式 "columnname1"、"columnname2"、"columnname3" 等，为后续列生成名称。</span><span class="sxs-lookup"><span data-stu-id="9e23c-278">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="9e23c-279">如果传入数据包含未命名列，则这些列将 <xref:System.Data.DataSet> 按照模式 "Column1"、"Column2" 等放置在中。</span><span class="sxs-lookup"><span data-stu-id="9e23c-279">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="9e23c-280">当指定的查询返回多个结果时，每个结果集将放在一个单独的表中。</span><span class="sxs-lookup"><span data-stu-id="9e23c-280">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="9e23c-281">附加的结果集通过将整数值追加到指定的表名来命名 (例如，"Table"、"Table1"、"Table2" 等) 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-281">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="9e23c-282">由于没有为不返回行的查询创建表，因此，如果要处理一个 insert 查询后跟一个 select 查询，则为 select 查询创建的表将命名为 "Table"，因为它是第一个创建的表。</span><span class="sxs-lookup"><span data-stu-id="9e23c-282">Since no table is created for a query that does not return rows, if you were to process an insert query followed by a select query, the table created for the select query would be named "Table", because it is the first table created.</span></span> <span data-ttu-id="9e23c-283">使用列和表名称的应用程序应确保不会与这些命名模式发生冲突。</span><span class="sxs-lookup"><span data-stu-id="9e23c-283">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="9e23c-284"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支持 <xref:System.Data.DataSet> 包含多个对象，这些 <xref:System.Data.DataTable> 对象的名称仅区分大小写。</span><span class="sxs-lookup"><span data-stu-id="9e23c-284">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="9e23c-285">在这种情况下， <xref:System.Data.Common.DbDataAdapter.Fill%2A> 将执行区分大小写的比较来查找相应的表，如果不存在精确匹配，则创建新表。</span><span class="sxs-lookup"><span data-stu-id="9e23c-285">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="9e23c-286">下面的 c # 代码阐释了这一行为。</span><span class="sxs-lookup"><span data-stu-id="9e23c-286">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="9e23c-287">如果 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 调用，并且 <xref:System.Data.DataSet> 仅包含 <xref:System.Data.DataTable> 其名称仅大小写不同的名称， <xref:System.Data.DataTable> 则会更新。</span><span class="sxs-lookup"><span data-stu-id="9e23c-287">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="9e23c-288">在这种情况下，比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="9e23c-288">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="9e23c-289">下面的 c # 代码阐释了这一行为。</span><span class="sxs-lookup"><span data-stu-id="9e23c-289">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="9e23c-290">如果在填充数据表时出现错误或异常，则在出现错误之前添加的行将保留在数据表中。</span><span class="sxs-lookup"><span data-stu-id="9e23c-290">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="9e23c-291">操作的剩余部分中止。</span><span class="sxs-lookup"><span data-stu-id="9e23c-291">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="9e23c-292">当用于填充的 SELECT 语句 <xref:System.Data.DataSet> 返回多个结果（如批处理 SQL 语句）时，请注意以下事项：</span><span class="sxs-lookup"><span data-stu-id="9e23c-292">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as a batch SQL statement, be aware of the following:</span></span>  
  
-   <span data-ttu-id="9e23c-293">如果其中一个结果包含错误，则会跳过所有后续结果，并且不会将其添加到中 <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-293">If one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="9e23c-294">使用后续 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 调用来刷新的内容时 <xref:System.Data.DataSet> ，必须满足两个条件：</span><span class="sxs-lookup"><span data-stu-id="9e23c-294">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="9e23c-295">SQL 语句应匹配最初用于填充的 <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-295">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="9e23c-296">**键** 列信息必须存在。</span><span class="sxs-lookup"><span data-stu-id="9e23c-296">The **Key** column information must be present.</span></span> <span data-ttu-id="9e23c-297">如果主键信息存在，则会对所有重复行进行协调，并且仅在对应于的中出现一次 <xref:System.Data.DataTable> <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-297">If primary key information is present, any duplicate rows are reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="9e23c-298">可以通过 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 指定 <xref:System.Data.DataTable.PrimaryKey%2A> 的属性 <xref:System.Data.DataTable> 或将 <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> 属性设置为来 `AddWithKey` 设置主键信息。</span><span class="sxs-lookup"><span data-stu-id="9e23c-298">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="9e23c-299">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="9e23c-299">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="9e23c-300">必须显式定义主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-300">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="9e23c-301">有关详细信息，请参阅 [定义主键](/dotnet/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys)。</span><span class="sxs-lookup"><span data-stu-id="9e23c-301">For more information, see [Defining Primary Keys](/dotnet/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e23c-302">当处理返回多个结果的批处理 SQL 语句时， <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> OLE DB 的 .NET Framework 数据提供程序的实现仅检索第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="9e23c-302">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="9e23c-303">若要检索多个结果的架构信息，请使用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> <xref:System.Data.MissingSchemaAction> 设置为的 `AddWithKey` 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-303">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e23c-304">下面的示例使用派生类， <xref:System.Data.OleDb.OleDbDataAdapter> 以便 <xref:System.Data.DataSet> 使用 "类别" 表中的行填充。</span><span class="sxs-lookup"><span data-stu-id="9e23c-304">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to fill a <xref:System.Data.DataSet> with rows from the categories table.</span></span> <span data-ttu-id="9e23c-305">此示例假设您已创建 <xref:System.Data.OleDb.OleDbDataAdapter> 和 <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-305">This example assumes that you have created an <xref:System.Data.OleDb.OleDbDataAdapter> and a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Fill2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Fill2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="9e23c-306">源表无效。</span><span class="sxs-lookup"><span data-stu-id="9e23c-306">The source table is invalid.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="9e23c-307">当 <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> 在派生类中重写时，请确保调用基类的 <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="9e23c-307">When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</span></span></para></block>
        <related type="Article" href="/dotnet/framework/data/adonet/dbproviderfactories"><span data-ttu-id="9e23c-308">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-308">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-309">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-309">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable dataTable, System.Data.IDataReader dataReader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable dataTable, class System.Data.IDataReader dataReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Fill (dataTable As DataTable, dataReader As IDataReader) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataTable ^ dataTable, System::Data::IDataReader ^ dataReader);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable * System.Data.IDataReader -&gt; int" Usage="dbDataAdapter.Fill (dataTable, dataReader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="dataReader" Type="System.Data.IDataReader" Index="1" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="9e23c-310">要用记录和架构（如果必要）填充的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="9e23c-310">A <see cref="T:System.Data.DataTable" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="dataReader"><span data-ttu-id="9e23c-311"><see cref="T:System.Data.IDataReader" /> 的名称。</span><span class="sxs-lookup"><span data-stu-id="9e23c-311">The name of the <see cref="T:System.Data.IDataReader" />.</span></span></param>
        <summary><span data-ttu-id="9e23c-312">在 <see cref="T:System.Data.DataTable" /> 中添加或刷新行，以与使用指定的 <see cref="T:System.Data.DataTable" /> 和 <see cref="T:System.Data.IDataReader" /> 名称的数据源中的行匹配。</span><span class="sxs-lookup"><span data-stu-id="9e23c-312">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source using the specified <see cref="T:System.Data.DataTable" /> and <see cref="T:System.Data.IDataReader" /> names.</span></span></summary>
        <returns><span data-ttu-id="9e23c-313">已在 <see cref="T:System.Data.DataTable" /> 中成功添加或刷新的行数。</span><span class="sxs-lookup"><span data-stu-id="9e23c-313">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span></span> <span data-ttu-id="9e23c-314">这不包括受不返回行的语句影响的行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-314">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable dataTable, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable dataTable, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Fill (dataTable As DataTable, command As IDbCommand, behavior As CommandBehavior) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataTable ^ dataTable, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; int" Usage="dbDataAdapter.Fill (dataTable, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="9e23c-315">要用记录和架构（如果必要）填充的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="9e23c-315">A <see cref="T:System.Data.DataTable" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="command"><span data-ttu-id="9e23c-316">用于从数据源中检索行的 SQL SELECT 语句。</span><span class="sxs-lookup"><span data-stu-id="9e23c-316">The SQL SELECT statement used to retrieve rows from the data source.</span></span></param>
        <param name="behavior"><span data-ttu-id="9e23c-317"><see cref="T:System.Data.CommandBehavior" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="9e23c-317">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="9e23c-318">在 <see cref="T:System.Data.DataTable" /> 中添加或刷新行，以与使用指定的 <see cref="T:System.Data.DataTable" />、<see cref="T:System.Data.IDbCommand" /> 和 <see cref="T:System.Data.CommandBehavior" /> 的数据源中的行匹配。</span><span class="sxs-lookup"><span data-stu-id="9e23c-318">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source using the specified <see cref="T:System.Data.DataTable" />, <see cref="T:System.Data.IDbCommand" /> and <see cref="T:System.Data.CommandBehavior" />.</span></span></summary>
        <returns><span data-ttu-id="9e23c-319">已在 <see cref="T:System.Data.DataTable" /> 中成功添加或刷新的行数。</span><span class="sxs-lookup"><span data-stu-id="9e23c-319">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span></span> <span data-ttu-id="9e23c-320">这不包括受不返回行的语句影响的行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-320">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e23c-321"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法使用关联属性指定的 SELECT 语句从数据源中检索行 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-321">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="9e23c-322">与 SELECT 语句关联的连接对象必须有效，但不需要打开。</span><span class="sxs-lookup"><span data-stu-id="9e23c-322">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="9e23c-323">如果在调用前关闭连接 <xref:System.Data.Common.DbDataAdapter.Fill%2A> ，则会打开该连接，以检索数据，然后将其关闭。</span><span class="sxs-lookup"><span data-stu-id="9e23c-323">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="9e23c-324">如果在调用之前连接处于打开状态 <xref:System.Data.Common.DbDataAdapter.Fill%2A> ，则该连接将保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="9e23c-324">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="9e23c-325"><xref:System.Data.Common.DbDataAdapter.Fill%2A>然后，操作将行添加到中的指定目标 <xref:System.Data.DataTable> 对象 <xref:System.Data.DataSet> ，并创建对象（ <xref:System.Data.DataTable> 如果它尚不存在）。</span><span class="sxs-lookup"><span data-stu-id="9e23c-325">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to the specified destination <xref:System.Data.DataTable> object in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> object if it does not already exist.</span></span> <span data-ttu-id="9e23c-326">当创建 <xref:System.Data.DataTable> 对象时， <xref:System.Data.Common.DbDataAdapter.Fill%2A> 操作通常只创建列名称元数据。</span><span class="sxs-lookup"><span data-stu-id="9e23c-326">When creating a <xref:System.Data.DataTable> object, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="9e23c-327">但是，如果将 <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> 属性设置为 `AddWithKey` ，则还会创建相应的主键和约束。</span><span class="sxs-lookup"><span data-stu-id="9e23c-327">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="9e23c-328">如果 <xref:System.Data.Common.DbDataAdapter> 对象在填充时遇到重复的列， <xref:System.Data.DataTable> 则它将使用模式 "*columnname* 1"、"*columnname* 2"、"*columnname* 3" 等生成后续列的名称。</span><span class="sxs-lookup"><span data-stu-id="9e23c-328">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname* 1", "*columnname* 2", "*columnname* 3", and so on.</span></span> <span data-ttu-id="9e23c-329">如果传入数据包含未命名列，则这些列将 <xref:System.Data.DataSet> 按照模式 "Column1"、"Column2" 等放置在中。</span><span class="sxs-lookup"><span data-stu-id="9e23c-329">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="9e23c-330"><xref:System.Data.Common.DbDataAdapter.Fill%2A>作为参数的的重载 `DataTable` 只获取第一个结果。</span><span class="sxs-lookup"><span data-stu-id="9e23c-330">The overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataTable` as a parameter only obtains the first result.</span></span> <span data-ttu-id="9e23c-331">使用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> `DataSet` 作为参数的重载以获取多个结果。</span><span class="sxs-lookup"><span data-stu-id="9e23c-331">Use an overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataSet` as a parameter to obtain multiple results.</span></span>  
  
 <span data-ttu-id="9e23c-332">您可以 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 在同一上多次使用该方法 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-332">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="9e23c-333">如果存在主键，则传入行与已存在的匹配行合并在一起。</span><span class="sxs-lookup"><span data-stu-id="9e23c-333">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="9e23c-334">如果主键不存在，则传入行将追加到 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-334">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="9e23c-335">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="9e23c-335">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="9e23c-336">必须显式定义主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-336">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="9e23c-337">有关详细信息，请参阅 [定义主键](/dotnet/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys)。</span><span class="sxs-lookup"><span data-stu-id="9e23c-337">For more information, see [Defining Primary Keys](/dotnet/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e23c-338">当处理返回多个结果的批处理 SQL 语句时， <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> OLE DB 的 .NET Framework 数据提供程序的实现仅检索第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="9e23c-338">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="9e23c-339">若要检索多个结果的架构信息，请使用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> <xref:System.Data.MissingSchemaAction> 设置为的 `AddWithKey` 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-339">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="9e23c-340">此方法的重载 <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> 是受保护的，旨在供 .NET Framework 数据提供程序使用。</span><span class="sxs-lookup"><span data-stu-id="9e23c-340">This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para></block>
        <related type="Article" href="/dotnet/framework/data/adonet/dbproviderfactories"><span data-ttu-id="9e23c-341">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-341">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-342">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-342">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (int startRecord, int maxRecords, params System.Data.DataTable[] dataTables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(int32 startRecord, int32 maxRecords, class System.Data.DataTable[] dataTables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Fill (startRecord As Integer, maxRecords As Integer, ParamArray dataTables As DataTable()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(int startRecord, int maxRecords, ... cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables);" />
      <MemberSignature Language="F#" Value="override this.Fill : int * int * System.Data.DataTable[] -&gt; int" Usage="dbDataAdapter.Fill (startRecord, maxRecords, dataTables)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startRecord" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="maxRecords" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="dataTables" Type="System.Data.DataTable[]" Index="2" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-5.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="startRecord"><span data-ttu-id="9e23c-343">从其开始的从零开始的记录号。</span><span class="sxs-lookup"><span data-stu-id="9e23c-343">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="9e23c-344">要检索的最大记录数。</span><span class="sxs-lookup"><span data-stu-id="9e23c-344">The maximum number of records to retrieve.</span></span></param>
        <param name="dataTables"><span data-ttu-id="9e23c-345">要从数据源填充的 <see cref="T:System.Data.DataTable" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="9e23c-345">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</span></span></param>
        <summary><span data-ttu-id="9e23c-346">在 <see cref="T:System.Data.DataTable" /> 中添加或刷新行，以与从指定的记录开始一直检索到指定的最大数目的记录的数据源中的行匹配。</span><span class="sxs-lookup"><span data-stu-id="9e23c-346">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source starting at the specified record and retrieving up to the specified maximum number of records.</span></span></summary>
        <returns><span data-ttu-id="9e23c-347">已在 <see cref="T:System.Data.DataTable" /> 中成功添加或刷新的行数。</span><span class="sxs-lookup"><span data-stu-id="9e23c-347">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span></span> <span data-ttu-id="9e23c-348">此值不包括受不返回行的语句影响的行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-348">This value does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e23c-349"><xref:System.Data.Common.DataAdapter.Fill%2A>方法使用关联属性指定的 SELECT 语句从数据源中检索行 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-349">The <xref:System.Data.Common.DataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="9e23c-350">与 SELECT 语句关联的连接对象必须有效，但不需要打开。</span><span class="sxs-lookup"><span data-stu-id="9e23c-350">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="9e23c-351">如果在调用前关闭连接 <xref:System.Data.Common.DataAdapter.Fill%2A> ，则会打开该连接以检索数据，然后将其关闭。</span><span class="sxs-lookup"><span data-stu-id="9e23c-351">If the connection is closed before <xref:System.Data.Common.DataAdapter.Fill%2A> is called, it is opened to retrieve data, and then it is closed.</span></span> <span data-ttu-id="9e23c-352">如果在调用之前连接处于打开状态 <xref:System.Data.Common.DataAdapter.Fill%2A> ，则该连接将保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="9e23c-352">If the connection is open before <xref:System.Data.Common.DataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="9e23c-353"><xref:System.Data.Common.DataAdapter.Fill%2A>然后，操作将行添加到 <xref:System.Data.DataTable> 中的目标对象 <xref:System.Data.DataSet> ，并创建 <xref:System.Data.DataTable> 对象（如果它们尚不存在）。</span><span class="sxs-lookup"><span data-stu-id="9e23c-353">The <xref:System.Data.Common.DataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="9e23c-354">创建 <xref:System.Data.DataTable> 对象时，该 <xref:System.Data.Common.DataAdapter.Fill%2A> 操作通常只创建列名称元数据。</span><span class="sxs-lookup"><span data-stu-id="9e23c-354">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="9e23c-355">但是，如果将 <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> 属性设置为 `AddWithKey` ，则还会创建相应的主键和约束。</span><span class="sxs-lookup"><span data-stu-id="9e23c-355">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="9e23c-356">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="9e23c-356">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="9e23c-357">必须显式定义主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-357">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="9e23c-358">有关详细信息，请参阅 [定义主键](/dotnet/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys)。</span><span class="sxs-lookup"><span data-stu-id="9e23c-358">For more information, see [Defining Primary Keys](/dotnet/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys).</span></span>  
  
 <span data-ttu-id="9e23c-359">如果数据适配器在填充时遇到重复的列， <xref:System.Data.DataTable> 则它会使用 "columnname1"、"columnname2"、"columnname3" 等模式为后续列生成名称。</span><span class="sxs-lookup"><span data-stu-id="9e23c-359">If the data adapter encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="9e23c-360">如果传入数据包含未命名列，则这些列将 <xref:System.Data.DataSet> 按照模式 "Column1"、"Column2" 等放置在中。</span><span class="sxs-lookup"><span data-stu-id="9e23c-360">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="9e23c-361">如果将多个结果集添加到 <xref:System.Data.DataSet> 中，则每个结果集都放置在一个单独的表中。</span><span class="sxs-lookup"><span data-stu-id="9e23c-361">When multiple result sets are added to the <xref:System.Data.DataSet>, each result set is placed in a separate table.</span></span> <span data-ttu-id="9e23c-362">附加的结果集通过将整数值追加到指定的表名来命名 (例如，"Table"、"Table1"、"Table2" 等) 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-362">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="9e23c-363">使用列和表名称的应用程序应确保不会与这些命名模式发生冲突。</span><span class="sxs-lookup"><span data-stu-id="9e23c-363">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="9e23c-364">当用于填充的 SELECT 语句 <xref:System.Data.DataSet> 返回多个结果（如批处理 SQL 语句）时，如果其中一个结果包含错误，则会跳过所有后续结果，并且不会将其添加到中 <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-364">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as a batch SQL statements, if one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="9e23c-365">您可以 <xref:System.Data.Common.DataAdapter.Fill%2A> 在同一上多次使用该方法 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-365">You can use the <xref:System.Data.Common.DataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="9e23c-366">如果存在主键，则传入行与已存在的匹配行合并在一起。</span><span class="sxs-lookup"><span data-stu-id="9e23c-366">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="9e23c-367">如果主键不存在，则传入行将追加到 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-367">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e23c-368">当处理返回多个结果的批处理 SQL 语句时， <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> OLE DB 的 .NET Framework 数据提供程序的实现仅检索第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="9e23c-368">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="9e23c-369">若要检索多个结果的架构信息，请使用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> <xref:System.Data.MissingSchemaAction> 设置为的 `AddWithKey` 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-369">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dbproviderfactories"><span data-ttu-id="9e23c-370">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-370">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-371">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-371">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, int startRecord, int maxRecords, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, int32 startRecord, int32 maxRecords, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fill (dataSet As DataSet, startRecord As Integer, maxRecords As Integer, srcTable As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, int startRecord, int maxRecords, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * int * int * string -&gt; int" Usage="dbDataAdapter.Fill (dataSet, startRecord, maxRecords, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="9e23c-372">要用记录和架构（如果必要）填充的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="9e23c-372">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="startRecord"><span data-ttu-id="9e23c-373">从其开始的从零开始的记录号。</span><span class="sxs-lookup"><span data-stu-id="9e23c-373">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="9e23c-374">要检索的最大记录数。</span><span class="sxs-lookup"><span data-stu-id="9e23c-374">The maximum number of records to retrieve.</span></span></param>
        <param name="srcTable"><span data-ttu-id="9e23c-375">用于表映射的源表的名称。</span><span class="sxs-lookup"><span data-stu-id="9e23c-375">The name of the source table to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="9e23c-376">在 <see cref="T:System.Data.DataSet" /> 的指定范围中添加或刷新行以匹配使用 <see cref="T:System.Data.DataSet" /> 和 <see cref="T:System.Data.DataTable" /> 名称的数据源中的行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-376">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span></span></summary>
        <returns><span data-ttu-id="9e23c-377">已在 <see cref="T:System.Data.DataSet" /> 中成功添加或刷新的行数。</span><span class="sxs-lookup"><span data-stu-id="9e23c-377">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="9e23c-378">这不包括受不返回行的语句影响的行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-378">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e23c-379">`maxRecords`值0获取在开始记录后找到的所有记录。</span><span class="sxs-lookup"><span data-stu-id="9e23c-379">A `maxRecords` value of 0 gets all records found after the start record.</span></span> <span data-ttu-id="9e23c-380">如果 `maxRecords` 大于剩余行的数目，则仅返回剩余的行，并且不会发出错误。</span><span class="sxs-lookup"><span data-stu-id="9e23c-380">If `maxRecords` is greater than the number of remaining rows, only the remaining rows are returned, and no error is issued.</span></span>  
  
 <span data-ttu-id="9e23c-381">如果相应的 select 命令是返回多个结果的语句，则 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 仅适用于 `maxRecords` 第一个结果。</span><span class="sxs-lookup"><span data-stu-id="9e23c-381">If the corresponding select command is a statement returning multiple results, <xref:System.Data.Common.DbDataAdapter.Fill%2A> only applies `maxRecords` to the first result.</span></span>  
  
 <span data-ttu-id="9e23c-382"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法使用 SELECT 语句从数据源中检索数据。</span><span class="sxs-lookup"><span data-stu-id="9e23c-382">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="9e23c-383"><xref:System.Data.IDbConnection>与 SELECT 语句关联的对象必须有效，但不需要打开。</span><span class="sxs-lookup"><span data-stu-id="9e23c-383">The <xref:System.Data.IDbConnection> object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="9e23c-384">如果在 <xref:System.Data.IDbConnection> 调用之前关闭 <xref:System.Data.Common.DbDataAdapter.Fill%2A> ，则将其打开以检索数据，然后将其关闭。</span><span class="sxs-lookup"><span data-stu-id="9e23c-384">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="9e23c-385">如果在调用之前连接处于打开状态 <xref:System.Data.Common.DbDataAdapter.Fill%2A> ，则该连接将保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="9e23c-385">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="9e23c-386">如果命令未返回任何行，则不会将任何表添加到 <xref:System.Data.DataSet> ，但不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="9e23c-386">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, but no exception is raised.</span></span>  
  
 <span data-ttu-id="9e23c-387">如果 <xref:System.Data.Common.DbDataAdapter> 对象在填充时遇到重复的列， <xref:System.Data.DataTable> 则它将使用模式 "*columnname* 1"、"*columnname* 2"、"*columnname* 3" 等生成后续列的名称。</span><span class="sxs-lookup"><span data-stu-id="9e23c-387">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname* 1", "*columnname* 2", "*columnname* 3", and so on.</span></span> <span data-ttu-id="9e23c-388">如果传入数据包含未命名列，则这些列将 <xref:System.Data.DataSet> 按照模式 "Column1"、"Column2" 等放置在中。</span><span class="sxs-lookup"><span data-stu-id="9e23c-388">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="9e23c-389">当指定的查询返回多个结果时，每个结果集将放在一个单独的表中。</span><span class="sxs-lookup"><span data-stu-id="9e23c-389">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="9e23c-390">附加的结果集通过将整数值追加到指定的表名来命名 (例如，"Table"、"Table1"、"Table2" 等) 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-390">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="9e23c-391">由于没有为不返回行的查询创建表，因此，如果处理的是 insert 查询后跟 select 查询，则为 select 查询创建的表名为 "Table"，因为它是第一个创建的表。</span><span class="sxs-lookup"><span data-stu-id="9e23c-391">Because no table is created for a query that does not return rows, if you process an insert query followed by a select query, the table created for the select query is named "Table", because it is the first table created.</span></span> <span data-ttu-id="9e23c-392">使用列和表名称的应用程序应确保不会与这些命名模式发生冲突。</span><span class="sxs-lookup"><span data-stu-id="9e23c-392">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="9e23c-393"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支持 <xref:System.Data.DataSet> 包含多个对象，这些 <xref:System.Data.DataTable> 对象的名称仅区分大小写。</span><span class="sxs-lookup"><span data-stu-id="9e23c-393">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="9e23c-394">在这种情况下， <xref:System.Data.Common.DbDataAdapter.Fill%2A> 将执行区分大小写的比较来查找相应的表，如果不存在精确匹配，则创建新表。</span><span class="sxs-lookup"><span data-stu-id="9e23c-394">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="9e23c-395">下面的 c # 代码阐释了这一行为。</span><span class="sxs-lookup"><span data-stu-id="9e23c-395">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="9e23c-396">如果 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 调用，并且 <xref:System.Data.DataSet> 仅包含 <xref:System.Data.DataTable> 其名称仅大小写不同的名称， <xref:System.Data.DataTable> 则会更新。</span><span class="sxs-lookup"><span data-stu-id="9e23c-396">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="9e23c-397">在这种情况下，比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="9e23c-397">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="9e23c-398">下面的 c # 代码阐释了这一行为。</span><span class="sxs-lookup"><span data-stu-id="9e23c-398">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="9e23c-399">如果在填充数据表时出现错误或异常，则在出现错误之前添加的行将保留在数据表中。</span><span class="sxs-lookup"><span data-stu-id="9e23c-399">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="9e23c-400">操作的剩余部分中止。</span><span class="sxs-lookup"><span data-stu-id="9e23c-400">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="9e23c-401">当用于填充的 SELECT 语句 <xref:System.Data.DataSet> 返回多个结果（如批处理 SQL 语句）时，请注意以下事项：</span><span class="sxs-lookup"><span data-stu-id="9e23c-401">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as batch SQL statements, be aware of the following:</span></span>  
  
-   <span data-ttu-id="9e23c-402">处理来自批处理 SQL 语句的多个结果时， `maxRecords` 仅适用于第一个结果。</span><span class="sxs-lookup"><span data-stu-id="9e23c-402">When processing multiple results from a batch SQL statement, `maxRecords` only applies to the first result.</span></span> <span data-ttu-id="9e23c-403">对于包含分段结果的行也是如此 ( .NET Framework 数据提供程序仅适用于 OLE DB) 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-403">The same is true for rows containing chaptered results (.NET Framework Data Provider for OLE DB only).</span></span> <span data-ttu-id="9e23c-404">顶级结果受限制 `maxRecords` ，但会添加所有子行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-404">The top level result is limited by `maxRecords`, but all child rows are added.</span></span>  
  
-   <span data-ttu-id="9e23c-405">如果其中一个结果包含错误，则会跳过所有后续结果，并且不会将其添加到中 <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-405">If one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="9e23c-406">使用后续 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 调用来刷新的内容时 <xref:System.Data.DataSet> ，必须满足两个条件：</span><span class="sxs-lookup"><span data-stu-id="9e23c-406">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="9e23c-407">SQL 语句应匹配最初用于填充的 <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-407">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="9e23c-408">**键** 列信息必须存在。</span><span class="sxs-lookup"><span data-stu-id="9e23c-408">The **Key** column information must be present.</span></span>  
  
 <span data-ttu-id="9e23c-409">如果主键信息存在，则会对所有重复行进行协调，并且仅在对应于的中出现一次 <xref:System.Data.DataTable> <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-409">If primary key information is present, any duplicate rows will be reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="9e23c-410">可以通过 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 指定 <xref:System.Data.DataTable.PrimaryKey%2A> 的属性 <xref:System.Data.DataTable> 或将 <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> 属性设置为来 `AddWithKey` 设置主键信息。</span><span class="sxs-lookup"><span data-stu-id="9e23c-410">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="9e23c-411">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="9e23c-411">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="9e23c-412">必须显式定义主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-412">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="9e23c-413">有关详细信息，请参阅 [定义主键](/dotnet/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys)。</span><span class="sxs-lookup"><span data-stu-id="9e23c-413">For more information, see [Defining Primary Keys](/dotnet/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e23c-414">当处理返回多个结果的批处理 SQL 语句时， <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> OLE DB 的 .NET Framework 数据提供程序的实现仅检索第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="9e23c-414">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="9e23c-415">若要检索多个结果的架构信息，请使用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> <xref:System.Data.MissingSchemaAction> 设置为的 `AddWithKey` 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-415">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e23c-416">`DataSet`不会包含超过指示的记录数 `maxRecords` 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-416">The `DataSet` will not contain more than the number of records indicated by `maxRecords`.</span></span> <span data-ttu-id="9e23c-417">但是，查询生成的整个结果集仍从服务器返回。</span><span class="sxs-lookup"><span data-stu-id="9e23c-417">However, the entire result set generated by the query is still returned from the server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e23c-418">下面的示例使用派生类， <xref:System.Data.OleDb.OleDbDataAdapter> <xref:System.Data.DataSet> 从 " **类别** " 表中填充15行（从第10行开始）。</span><span class="sxs-lookup"><span data-stu-id="9e23c-418">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to fill a <xref:System.Data.DataSet> with 15 rows, beginning at row 10, from the **Categories** table.</span></span> <span data-ttu-id="9e23c-419">此示例假设您已创建 <xref:System.Data.OleDb.OleDbDataAdapter> 和 <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-419">This example assumes that you have created an <xref:System.Data.OleDb.OleDbDataAdapter> and a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Fill3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Fill3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="9e23c-420"><see cref="T:System.Data.DataSet" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="9e23c-420">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9e23c-421">源表无效。</span><span class="sxs-lookup"><span data-stu-id="9e23c-421">The source table is invalid.</span></span>  
  
 <span data-ttu-id="9e23c-422">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9e23c-422">-or-</span></span>  
  
 <span data-ttu-id="9e23c-423">连接无效。</span><span class="sxs-lookup"><span data-stu-id="9e23c-423">The connection is invalid.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="9e23c-424">未能找到连接。</span><span class="sxs-lookup"><span data-stu-id="9e23c-424">The connection could not be found.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9e23c-425"><paramref name="startRecord" /> 参数小于 0。</span><span class="sxs-lookup"><span data-stu-id="9e23c-425">The <paramref name="startRecord" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="9e23c-426">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9e23c-426">-or-</span></span> 
<span data-ttu-id="9e23c-427"><paramref name="maxRecords" /> 参数小于 0。</span><span class="sxs-lookup"><span data-stu-id="9e23c-427">The <paramref name="maxRecords" /> parameter is less than 0.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="9e23c-428">当 <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> 在派生类中重写时，请确保调用基类的 <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="9e23c-428">When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</span></span></para></block>
        <related type="Article" href="/dotnet/framework/data/adonet/dbproviderfactories"><span data-ttu-id="9e23c-429">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-429">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-430">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-430">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataSet dataSet, string srcTable, System.Data.IDataReader dataReader, int startRecord, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataSet dataSet, string srcTable, class System.Data.IDataReader dataReader, int32 startRecord, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Fill (dataSet As DataSet, srcTable As String, dataReader As IDataReader, startRecord As Integer, maxRecords As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataSet ^ dataSet, System::String ^ srcTable, System::Data::IDataReader ^ dataReader, int startRecord, int maxRecords);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * string * System.Data.IDataReader * int * int -&gt; int" Usage="dbDataAdapter.Fill (dataSet, srcTable, dataReader, startRecord, maxRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="srcTable" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="dataReader" Type="System.Data.IDataReader" Index="2" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="startRecord" Type="System.Int32" Index="3" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="maxRecords" Type="System.Int32" Index="4" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="9e23c-431">要用记录和架构（如果必要）填充的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="9e23c-431">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="srcTable"><span data-ttu-id="9e23c-432">用于表映射的 <see cref="T:System.Data.DataTable" /> 的名称。</span><span class="sxs-lookup"><span data-stu-id="9e23c-432">The name of the <see cref="T:System.Data.DataTable" /> to use for table mapping.</span></span></param>
        <param name="dataReader"><span data-ttu-id="9e23c-433"><see cref="T:System.Data.IDataReader" /> 的名称。</span><span class="sxs-lookup"><span data-stu-id="9e23c-433">The name of the <see cref="T:System.Data.IDataReader" />.</span></span></param>
        <param name="startRecord"><span data-ttu-id="9e23c-434">从其开始的从零开始的记录号。</span><span class="sxs-lookup"><span data-stu-id="9e23c-434">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="9e23c-435">要检索的最大记录数。</span><span class="sxs-lookup"><span data-stu-id="9e23c-435">The maximum number of records to retrieve.</span></span></param>
        <summary><span data-ttu-id="9e23c-436">在 <see cref="T:System.Data.DataSet" /> 的指定范围中添加或刷新行以与使用 <see cref="T:System.Data.DataSet" />、<see cref="T:System.Data.DataTable" /> 和 <see cref="T:System.Data.IDataReader" /> 名称的数据源中的行进行匹配。</span><span class="sxs-lookup"><span data-stu-id="9e23c-436">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" />, <see cref="T:System.Data.DataTable" />, and <see cref="T:System.Data.IDataReader" /> names.</span></span></summary>
        <returns><span data-ttu-id="9e23c-437">已在 <see cref="T:System.Data.DataSet" /> 中成功添加或刷新的行数。</span><span class="sxs-lookup"><span data-stu-id="9e23c-437">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="9e23c-438">这不包括受不返回行的语句影响的行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-438">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable[] dataTables, int startRecord, int maxRecords, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable[] dataTables, int32 startRecord, int32 maxRecords, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Fill (dataTables As DataTable(), startRecord As Integer, maxRecords As Integer, command As IDbCommand, behavior As CommandBehavior) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables, int startRecord, int maxRecords, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable[] * int * int * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; int" Usage="dbDataAdapter.Fill (dataTables, startRecord, maxRecords, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTables" Type="System.Data.DataTable[]" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="startRecord" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="maxRecords" Type="System.Int32" Index="2" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="command" Type="System.Data.IDbCommand" Index="3" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="4" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dataTables"><span data-ttu-id="9e23c-439">要从数据源填充的 <see cref="T:System.Data.DataTable" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="9e23c-439">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</span></span></param>
        <param name="startRecord"><span data-ttu-id="9e23c-440">从其开始的从零开始的记录号。</span><span class="sxs-lookup"><span data-stu-id="9e23c-440">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="9e23c-441">要检索的最大记录数。</span><span class="sxs-lookup"><span data-stu-id="9e23c-441">The maximum number of records to retrieve.</span></span></param>
        <param name="command"><span data-ttu-id="9e23c-442">执行以填充 <see cref="T:System.Data.IDbCommand" /> 对象的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="9e23c-442">The <see cref="T:System.Data.IDbCommand" /> executed to fill the <see cref="T:System.Data.DataTable" /> objects.</span></span></param>
        <param name="behavior"><span data-ttu-id="9e23c-443"><see cref="T:System.Data.CommandBehavior" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="9e23c-443">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="9e23c-444">在 <see cref="T:System.Data.DataSet" /> 的指定范围中添加或刷新行以匹配使用 <see cref="T:System.Data.DataSet" /> 和 <see cref="T:System.Data.DataTable" /> 名称的数据源中的行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-444">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span></span></summary>
        <returns><span data-ttu-id="9e23c-445">已在数据表中添加或刷新的行数。</span><span class="sxs-lookup"><span data-stu-id="9e23c-445">The number of rows added to or refreshed in the data tables.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e23c-446">`maxRecords`值0获取在开始记录后找到的所有记录。</span><span class="sxs-lookup"><span data-stu-id="9e23c-446">A `maxRecords` value of 0 gets all records found after the start record.</span></span> <span data-ttu-id="9e23c-447">如果 `maxRecords` 大于剩余行数，则只返回剩余的行，并且不会发出错误。</span><span class="sxs-lookup"><span data-stu-id="9e23c-447">If `maxRecords` is greater than the number of remaining rows, only the remaining rows are returned and no error is issued.</span></span>  
  
 <span data-ttu-id="9e23c-448"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法使用 SELECT 语句从数据源中检索数据。</span><span class="sxs-lookup"><span data-stu-id="9e23c-448">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="9e23c-449"><xref:System.Data.IDbConnection>与 SELECT 语句关联的对象必须有效，但不需要打开。</span><span class="sxs-lookup"><span data-stu-id="9e23c-449">The <xref:System.Data.IDbConnection> object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="9e23c-450">如果在 <xref:System.Data.IDbConnection> 调用之前关闭 <xref:System.Data.Common.DbDataAdapter.Fill%2A> ，则将其打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="9e23c-450">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="9e23c-451">如果在调用之前连接处于打开状态 <xref:System.Data.Common.DbDataAdapter.Fill%2A> ，则该连接将保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="9e23c-451">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="9e23c-452">如果命令未返回任何行，则不会将任何表添加到 <xref:System.Data.DataSet> ，但不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="9e23c-452">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, but no exception is raised.</span></span>  
  
 <span data-ttu-id="9e23c-453">如果 <xref:System.Data.Common.DbDataAdapter> 对象在填充时遇到重复的列， <xref:System.Data.DataTable> 则它将使用模式 "*columnname* 1"、"*columnname* 2"、"*columnname* 3" 等生成后续列的名称。</span><span class="sxs-lookup"><span data-stu-id="9e23c-453">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname* 1", "*columnname* 2", "*columnname* 3", and so on.</span></span> <span data-ttu-id="9e23c-454">如果传入数据包含未命名列，则这些列将 <xref:System.Data.DataSet> 按照模式 "Column1"、"Column2" 等放置在中。</span><span class="sxs-lookup"><span data-stu-id="9e23c-454">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="9e23c-455">当指定的查询返回多个结果时，每个结果集将放在一个单独的表中。</span><span class="sxs-lookup"><span data-stu-id="9e23c-455">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="9e23c-456">附加的结果集通过将整数值追加到指定的表名来命名 (例如，"Table"、"Table1"、"Table2" 等) 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-456">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="9e23c-457">由于没有为不返回行的查询创建表，因此，如果要处理一个 insert 查询后跟一个 select 查询，则为 select 查询创建的表将命名为 "Table"，因为它是第一个创建的表。</span><span class="sxs-lookup"><span data-stu-id="9e23c-457">Since no table is created for a query that does not return rows, if you were to process an insert query followed by a select query, the table created for the select query would be named "Table", because it is the first table created.</span></span> <span data-ttu-id="9e23c-458">使用列和表名称的应用程序应确保不会与这些命名模式发生冲突。</span><span class="sxs-lookup"><span data-stu-id="9e23c-458">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="9e23c-459"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支持 <xref:System.Data.DataSet> 包含多个对象，这些 <xref:System.Data.DataTable> 对象的名称仅区分大小写。</span><span class="sxs-lookup"><span data-stu-id="9e23c-459">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="9e23c-460">在这种情况下， <xref:System.Data.Common.DbDataAdapter.Fill%2A> 将执行区分大小写的比较来查找相应的表，如果不存在精确匹配，则创建新表。</span><span class="sxs-lookup"><span data-stu-id="9e23c-460">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="9e23c-461">下面的 c # 代码阐释了这一行为。</span><span class="sxs-lookup"><span data-stu-id="9e23c-461">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="9e23c-462">如果 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 调用，并且 <xref:System.Data.DataSet> 仅包含 <xref:System.Data.DataTable> 其名称仅大小写不同的名称， <xref:System.Data.DataTable> 则会更新。</span><span class="sxs-lookup"><span data-stu-id="9e23c-462">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="9e23c-463">在这种情况下，比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="9e23c-463">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="9e23c-464">下面的 c # 代码阐释了这一行为。</span><span class="sxs-lookup"><span data-stu-id="9e23c-464">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="9e23c-465">如果在填充数据表时出现错误或异常，则在出现错误之前添加的行将保留在数据表中。</span><span class="sxs-lookup"><span data-stu-id="9e23c-465">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="9e23c-466">操作的剩余部分中止。</span><span class="sxs-lookup"><span data-stu-id="9e23c-466">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="9e23c-467">当用于填充对象的 SELECT 语句 <xref:System.Data.DataTable> 返回多个结果（如批处理 SQL 语句）时，请注意以下事项：</span><span class="sxs-lookup"><span data-stu-id="9e23c-467">When the SELECT statement used to populate the <xref:System.Data.DataTable> objects returns multiple results, such as a batch SQL statement, be aware of the following:</span></span>  
  
-   <span data-ttu-id="9e23c-468">处理来自批处理 SQL 语句的多个结果时， `maxRecords` 仅适用于第一个结果。</span><span class="sxs-lookup"><span data-stu-id="9e23c-468">When processing multiple results from a batch SQL statement, `maxRecords` only applies to the first result.</span></span> <span data-ttu-id="9e23c-469">对于包含分段结果的行也是如此 ( .NET Framework 数据提供程序仅适用于 OLE DB) 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-469">The same is true for rows containing chaptered results (.NET Framework Data Provider for OLE DB only).</span></span> <span data-ttu-id="9e23c-470">顶级结果受限制 `maxRecords` ，但会添加所有子行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-470">The top level result is limited by `maxRecords`, but all child rows are added.</span></span>  
  
-   <span data-ttu-id="9e23c-471">如果其中一个结果包含错误，则会跳过所有后续结果。</span><span class="sxs-lookup"><span data-stu-id="9e23c-471">If one of the results contains an error, all subsequent results are skipped.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e23c-472">`DataSet`不会包含超过指示的记录数 `maxRecords` 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-472">The `DataSet` will not contain more than the number of records indicated by `maxRecords`.</span></span> <span data-ttu-id="9e23c-473">但仍从服务器返回查询生成的整个结果集。</span><span class="sxs-lookup"><span data-stu-id="9e23c-473">However, the entire resultset generated by the query is still returned from the server.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="9e23c-474"><see cref="T:System.Data.DataSet" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="9e23c-474">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9e23c-475">源表无效。</span><span class="sxs-lookup"><span data-stu-id="9e23c-475">The source table is invalid.</span></span>  
  
 <span data-ttu-id="9e23c-476">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9e23c-476">-or-</span></span>  
  
 <span data-ttu-id="9e23c-477">连接无效。</span><span class="sxs-lookup"><span data-stu-id="9e23c-477">The connection is invalid.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="9e23c-478">未能找到连接。</span><span class="sxs-lookup"><span data-stu-id="9e23c-478">The connection could not be found.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9e23c-479"><paramref name="startRecord" /> 参数小于 0。</span><span class="sxs-lookup"><span data-stu-id="9e23c-479">The <paramref name="startRecord" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="9e23c-480">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9e23c-480">-or-</span></span> 
<span data-ttu-id="9e23c-481"><paramref name="maxRecords" /> 参数小于 0。</span><span class="sxs-lookup"><span data-stu-id="9e23c-481">The <paramref name="maxRecords" /> parameter is less than 0.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="9e23c-482">当 <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> 在派生类中重写时，请确保调用基类的 <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="9e23c-482">When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</span></span></para></block>
        <related type="Article" href="/dotnet/framework/data/adonet/dbproviderfactories"><span data-ttu-id="9e23c-483">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-483">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-484">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-484">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataSet dataSet, int startRecord, int maxRecords, string srcTable, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataSet dataSet, int32 startRecord, int32 maxRecords, string srcTable, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Fill (dataSet As DataSet, startRecord As Integer, maxRecords As Integer, srcTable As String, command As IDbCommand, behavior As CommandBehavior) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataSet ^ dataSet, int startRecord, int maxRecords, System::String ^ srcTable, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * int * int * string * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; int" Usage="dbDataAdapter.Fill (dataSet, startRecord, maxRecords, srcTable, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="9e23c-485">要用记录和架构（如果必要）填充的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="9e23c-485">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="startRecord"><span data-ttu-id="9e23c-486">从其开始的从零开始的记录号。</span><span class="sxs-lookup"><span data-stu-id="9e23c-486">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="9e23c-487">要检索的最大记录数。</span><span class="sxs-lookup"><span data-stu-id="9e23c-487">The maximum number of records to retrieve.</span></span></param>
        <param name="srcTable"><span data-ttu-id="9e23c-488">用于表映射的源表的名称。</span><span class="sxs-lookup"><span data-stu-id="9e23c-488">The name of the source table to use for table mapping.</span></span></param>
        <param name="command"><span data-ttu-id="9e23c-489">用于从数据源中检索行的 SQL SELECT 语句。</span><span class="sxs-lookup"><span data-stu-id="9e23c-489">The SQL SELECT statement used to retrieve rows from the data source.</span></span></param>
        <param name="behavior"><span data-ttu-id="9e23c-490"><see cref="T:System.Data.CommandBehavior" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="9e23c-490">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="9e23c-491">使用 <see cref="T:System.Data.DataSet" /> 和源表名称、命令字符串以及命令行为，在 <see cref="T:System.Data.DataSet" /> 的指定范围中添加或刷新某些行以使它们与数据源中对应的行相一致。</span><span class="sxs-lookup"><span data-stu-id="9e23c-491">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and source table names, command string, and command behavior.</span></span></summary>
        <returns><span data-ttu-id="9e23c-492">已在 <see cref="T:System.Data.DataSet" /> 中成功添加或刷新的行数。</span><span class="sxs-lookup"><span data-stu-id="9e23c-492">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="9e23c-493">这不包括受不返回行的语句影响的行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-493">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e23c-494"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法使用关联属性指定的 SELECT 语句从数据源中检索行 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-494">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="9e23c-495">与 SELECT 语句关联的连接对象必须有效，但不需要打开。</span><span class="sxs-lookup"><span data-stu-id="9e23c-495">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="9e23c-496">如果在调用之前连接关闭 <xref:System.Data.Common.DbDataAdapter.Fill%2A> ，则将其打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="9e23c-496">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="9e23c-497">如果在调用之前连接处于打开状态 <xref:System.Data.Common.DbDataAdapter.Fill%2A> ，则该连接将保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="9e23c-497">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="9e23c-498"><xref:System.Data.Common.DbDataAdapter.Fill%2A>然后，操作将行添加到 <xref:System.Data.DataTable> 中的目标对象 <xref:System.Data.DataSet> ，并创建 <xref:System.Data.DataTable> 对象（如果它们尚不存在）。</span><span class="sxs-lookup"><span data-stu-id="9e23c-498">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="9e23c-499">创建 <xref:System.Data.DataTable> 对象时，该 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 操作通常只创建列名称元数据。</span><span class="sxs-lookup"><span data-stu-id="9e23c-499">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="9e23c-500">但是，如果将 <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> 属性设置为 `AddWithKey` ，则还会创建相应的主键和约束。</span><span class="sxs-lookup"><span data-stu-id="9e23c-500">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="9e23c-501">如果在 <xref:System.Data.Common.DbDataAdapter> 填充时遇到重复的列， <xref:System.Data.DataTable> 则它将使用模式 "*columnname* 1"、"*columnname* 2"、"*columnname* 3" 等为后续列生成名称。</span><span class="sxs-lookup"><span data-stu-id="9e23c-501">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname* 1", "*columnname* 2", "*columnname* 3", and so on.</span></span> <span data-ttu-id="9e23c-502">如果传入数据包含未命名列，则这些列将 <xref:System.Data.DataSet> 按照模式 "Column1"、"Column2" 等放置在中。</span><span class="sxs-lookup"><span data-stu-id="9e23c-502">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="9e23c-503">如果将多个结果集添加到 <xref:System.Data.DataSet> 每个结果集，则会将其放在一个单独的表中。</span><span class="sxs-lookup"><span data-stu-id="9e23c-503">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="9e23c-504">附加的结果集通过将整数值追加到指定的表名来命名 (例如，"Table"、"Table1"、"Table2" 等) 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-504">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="9e23c-505">使用列和表名称的应用程序应确保不会与这些命名模式发生冲突。</span><span class="sxs-lookup"><span data-stu-id="9e23c-505">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="9e23c-506"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支持 <xref:System.Data.DataSet> 包含多个对象，这些 <xref:System.Data.DataTable> 对象的名称仅区分大小写。</span><span class="sxs-lookup"><span data-stu-id="9e23c-506">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="9e23c-507">在这种情况下， <xref:System.Data.Common.DbDataAdapter.Fill%2A> 将执行区分大小写的比较来查找相应的表，如果不存在精确匹配，则创建新表。</span><span class="sxs-lookup"><span data-stu-id="9e23c-507">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="9e23c-508">下面的 c # 代码阐释了这一行为。</span><span class="sxs-lookup"><span data-stu-id="9e23c-508">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="9e23c-509">如果 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 调用，并且 <xref:System.Data.DataSet> 仅包含 <xref:System.Data.DataTable> 其名称仅大小写不同的名称， <xref:System.Data.DataTable> 则会更新。</span><span class="sxs-lookup"><span data-stu-id="9e23c-509">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="9e23c-510">在这种情况下，比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="9e23c-510">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="9e23c-511">下面的 c # 代码阐释了这一行为。</span><span class="sxs-lookup"><span data-stu-id="9e23c-511">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="9e23c-512">您可以 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 在同一上多次使用该方法 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-512">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="9e23c-513">如果存在主键，则传入行与已存在的匹配行合并在一起。</span><span class="sxs-lookup"><span data-stu-id="9e23c-513">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="9e23c-514">如果主键不存在，则传入行将追加到 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-514">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="9e23c-515">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="9e23c-515">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="9e23c-516">必须显式定义主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-516">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="9e23c-517">有关详细信息，请参阅 [定义主键](/dotnet/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys)。</span><span class="sxs-lookup"><span data-stu-id="9e23c-517">For more information, see [Defining Primary Keys](/dotnet/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e23c-518">当处理返回多个结果的批处理 SQL 语句时， <xref:System.Data.Common.DbDataAdapter.Fill%2A> <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> .NET Framework 数据提供程序的和的实现仅检索第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="9e23c-518">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.Fill%2A> and <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for a .NET Framework data provider retrieves schema information for only the first result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9e23c-519">源表无效。</span><span class="sxs-lookup"><span data-stu-id="9e23c-519">The source table is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9e23c-520"><paramref name="startRecord" /> 参数小于 0。</span><span class="sxs-lookup"><span data-stu-id="9e23c-520">The <paramref name="startRecord" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="9e23c-521">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9e23c-521">-or-</span></span> 
<span data-ttu-id="9e23c-522"><paramref name="maxRecords" /> 参数小于 0。</span><span class="sxs-lookup"><span data-stu-id="9e23c-522">The <paramref name="maxRecords" /> parameter is less than 0.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="9e23c-523">此方法的重载 <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> 是受保护的，旨在供 .NET Framework 数据提供程序使用。</span><span class="sxs-lookup"><span data-stu-id="9e23c-523">This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para></block>
        <related type="Article" href="/dotnet/framework/data/adonet/dbproviderfactories"><span data-ttu-id="9e23c-524">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-524">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-525">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-525">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillCommandBehavior">
      <MemberSignature Language="C#" Value="protected internal System.Data.CommandBehavior FillCommandBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandBehavior FillCommandBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.FillCommandBehavior" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property FillCommandBehavior As CommandBehavior" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Data::CommandBehavior FillCommandBehavior { System::Data::CommandBehavior get(); void set(System::Data::CommandBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.FillCommandBehavior : System.Data.CommandBehavior with get, set" Usage="System.Data.Common.DbDataAdapter.FillCommandBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9e23c-526">获取或设置用于填充数据适配器的命令的行为。</span><span class="sxs-lookup"><span data-stu-id="9e23c-526">Gets or sets the behavior of the command used to fill the data adapter.</span></span></summary>
        <value><span data-ttu-id="9e23c-527">用于填充数据适配器的命令的 <see cref="T:System.Data.CommandBehavior" />。</span><span class="sxs-lookup"><span data-stu-id="9e23c-527">The <see cref="T:System.Data.CommandBehavior" /> of the command used to fill the data adapter.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dbproviderfactories"><span data-ttu-id="9e23c-528">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-528">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-529">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-529">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillError">
      <MemberSignature Language="C#" Value="public event System.Data.FillErrorEventHandler FillError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.FillErrorEventHandler FillError" />
      <MemberSignature Language="DocId" Value="E:System.Data.Common.DbDataAdapter.FillError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FillError As FillErrorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::FillErrorEventHandler ^ FillError;" />
      <MemberSignature Language="F#" Value="member this.FillError : System.Data.FillErrorEventHandler " Usage="member this.FillError : System.Data.FillErrorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Data.DataSysDescription("DbDataAdapter_FillError")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Data.DataSysDescription("DbDataAdapter_FillError")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.FillErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9e23c-530">在填充操作过程中出现错误时返回。</span><span class="sxs-lookup"><span data-stu-id="9e23c-530">Returned when an error occurs during a fill operation.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FillSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9e23c-531">将 <see cref="T:System.Data.DataTable" /> 添加到 <see cref="T:System.Data.DataSet" /> 中，并配置架构以匹配数据源中的架构。</span><span class="sxs-lookup"><span data-stu-id="9e23c-531">Adds a <see cref="T:System.Data.DataTable" /> to a <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source.</span></span></summary>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-532">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-532">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FillSchema (dataSet As DataSet, schemaType As SchemaType) As DataTable()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataSet * System.Data.SchemaType -&gt; System.Data.DataTable[]" Usage="dbDataAdapter.FillSchema (dataSet, schemaType)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="9e23c-533">要插入架构的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="9e23c-533">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</span></span></param>
        <param name="schemaType"><span data-ttu-id="9e23c-534"><see cref="T:System.Data.SchemaType" /> 值之一，指定如何插入架构。</span><span class="sxs-lookup"><span data-stu-id="9e23c-534">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</span></span></param>
        <summary><span data-ttu-id="9e23c-535">将名为“Table”的 <see cref="T:System.Data.DataTable" /> 添加到指定的 <see cref="T:System.Data.DataSet" />，并根据指定的 <see cref="T:System.Data.SchemaType" /> 配置架构以匹配数据源中的架构。</span><span class="sxs-lookup"><span data-stu-id="9e23c-535">Adds a <see cref="T:System.Data.DataTable" /> named "Table" to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span></span></summary>
        <returns><span data-ttu-id="9e23c-536">一个引用，指向添加到 <see cref="T:System.Data.DataSet" /> 的 <see cref="T:System.Data.DataTable" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="9e23c-536">A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e23c-537">此方法使用从数据源中检索架构信息 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-537">This method retrieves the schema information from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 <span data-ttu-id="9e23c-538"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>操作将添加 <xref:System.Data.DataTable> 到目标 <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-538">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="9e23c-539">然后，它将列添加到的 <xref:System.Data.DataColumnCollection> <xref:System.Data.DataTable> ，并配置以下 <xref:System.Data.DataColumn> 属性（如果它们存在于数据源中）：</span><span class="sxs-lookup"><span data-stu-id="9e23c-539">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="9e23c-540"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="9e23c-540"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="9e23c-541">您必须 <xref:System.Data.DataColumn.AutoIncrementStep%2A> 分别设置和 <xref:System.Data.DataColumn.AutoIncrementSeed%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-541">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="9e23c-542"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A><xref:System.Data.DataTable.PrimaryKey%2A>根据以下规则，还可以配置和 <xref:System.Data.DataTable.Constraints%2A> 属性：</span><span class="sxs-lookup"><span data-stu-id="9e23c-542"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="9e23c-543">如果返回一个或多个主键列，则将 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 它们用作的主键列 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-543">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="9e23c-544">如果未返回主键列但唯一列为，则当且仅当不可 null 所有唯一列时，才将唯一列用作主键。</span><span class="sxs-lookup"><span data-stu-id="9e23c-544">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="9e23c-545">如果任何列可为 null， <xref:System.Data.UniqueConstraint> 则会将添加到 <xref:System.Data.ConstraintCollection> ，但 <xref:System.Data.DataTable.PrimaryKey%2A> 不设置属性。</span><span class="sxs-lookup"><span data-stu-id="9e23c-545">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="9e23c-546">如果为主键列和唯一列都返回，则主键列将用作的主键列 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-546">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="9e23c-547">请注意，根据前面的规则将主键和 unique 约束添加到， <xref:System.Data.ConstraintCollection> 但不会添加其他约束类型。</span><span class="sxs-lookup"><span data-stu-id="9e23c-547">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="9e23c-548">如果在 SQL Server 表中的一列或多列上定义了唯一聚集索引，并且在一组单独的列上定义了 primary key 约束，则将返回聚集索引中的列的名称。</span><span class="sxs-lookup"><span data-stu-id="9e23c-548">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="9e23c-549">若要返回主键列的名称，请使用带有指定主键索引名称的 SELECT 语句的查询提示。</span><span class="sxs-lookup"><span data-stu-id="9e23c-549">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="9e23c-550">有关指定查询提示的详细信息，请参阅 [ (transact-sql) 的提示](/sql/t-sql/queries/hints-transact-sql-query)。</span><span class="sxs-lookup"><span data-stu-id="9e23c-550">For more information about specifying query hints, see [Hints (Transact-SQL) - Query](/sql/t-sql/queries/hints-transact-sql-query).</span></span>  
  
 <span data-ttu-id="9e23c-551">在过程中使用主键信息 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 查找并替换其键列匹配的任何行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-551">Primary key information is used during <xref:System.Data.Common.DbDataAdapter.Fill%2A> to find and replace any rows whose key columns match.</span></span> <span data-ttu-id="9e23c-552">如果这不是所需的行为，请使用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 而不请求架构信息。</span><span class="sxs-lookup"><span data-stu-id="9e23c-552">If this is not the desired behavior, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> without requesting schema information.</span></span>  
  
 <span data-ttu-id="9e23c-553">如果在 <xref:System.Data.IDataAdapter> 填充时遇到重复的列， <xref:System.Data.DataTable> 则它将使用模式 "*columnname* 1"、"*columnname* 2"、"*columnname* 3" 等为后续列生成名称。</span><span class="sxs-lookup"><span data-stu-id="9e23c-553">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname* 1", "*columnname* 2", "*columnname* 3", and so on.</span></span> <span data-ttu-id="9e23c-554">如果传入数据包含未命名列，则这些列将 <xref:System.Data.DataSet> 按照模式 "Column1"、"Column2" 等放置在中。</span><span class="sxs-lookup"><span data-stu-id="9e23c-554">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="9e23c-555">如果将多个结果集添加到 <xref:System.Data.DataSet> 每个结果集，则会将其放在一个单独的表中。</span><span class="sxs-lookup"><span data-stu-id="9e23c-555">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="9e23c-556">附加的结果集通过将整数值追加到指定的表名来命名 (例如，"Table"、"Table1"、"Table2" 等。 ) 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-556">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="9e23c-557">使用列和表名称的应用程序应确保不会与这些命名模式发生冲突。</span><span class="sxs-lookup"><span data-stu-id="9e23c-557">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="9e23c-558"><xref:System.Data.IDbConnection>与 select 命令关联的对象必须有效，但不需要打开。</span><span class="sxs-lookup"><span data-stu-id="9e23c-558">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to open.</span></span> <span data-ttu-id="9e23c-559">如果在 <xref:System.Data.IDbConnection> 调用之前关闭 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> ，则将其打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="9e23c-559">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="9e23c-560">如果在调用之前连接已打开，则将 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 其保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="9e23c-560">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is left open.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e23c-561">当处理返回多个结果的批处理 SQL 语句时， <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> OLE DB 的 .NET Framework 数据提供程序的实现仅检索第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="9e23c-561">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="9e23c-562">若要检索多个结果的架构信息，请使用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> <xref:System.Data.MissingSchemaAction> 设置为的 `AddWithKey` 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-562">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="9e23c-563">当使用 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 时，用于 SQL Server 的 .NET Framework 数据提供程序将 FOR BROWSE 子句追加到正在执行的语句。</span><span class="sxs-lookup"><span data-stu-id="9e23c-563">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="9e23c-564">用户应该注意潜在的副作用，例如对 SET FMTONLY ON 语句的使用产生的干扰。</span><span class="sxs-lookup"><span data-stu-id="9e23c-564">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="9e23c-565">有关详细信息，请参阅 [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)。</span><span class="sxs-lookup"><span data-stu-id="9e23c-565">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="9e23c-566">下面的示例使用派生类， <xref:System.Data.SqlClient.SqlDataAdapter> 将填充到 <xref:System.Data.DataSet> 架构，并返回 <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-566">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dbproviderfactories"><span data-ttu-id="9e23c-567">DbProviderFactories</span><span class="sxs-lookup"><span data-stu-id="9e23c-567">DbProviderFactories</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-568">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-568">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public System.Data.DataTable? FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable FillSchema(class System.Data.DataTable dataTable, valuetype System.Data.SchemaType schemaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)" />
      <MemberSignature Language="VB.NET" Value="Public Function FillSchema (dataTable As DataTable, schemaType As SchemaType) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ FillSchema(System::Data::DataTable ^ dataTable, System::Data::SchemaType schemaType);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataTable * System.Data.SchemaType -&gt; System.Data.DataTable" Usage="dbDataAdapter.FillSchema (dataTable, schemaType)" />
      <MemberSignature Language="C#" Value="public System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="9e23c-569">要用数据源中的架构填充的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="9e23c-569">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</span></span></param>
        <param name="schemaType"><span data-ttu-id="9e23c-570"><see cref="T:System.Data.SchemaType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="9e23c-570">One of the <see cref="T:System.Data.SchemaType" /> values.</span></span></param>
        <summary><span data-ttu-id="9e23c-571">根据指定的 <see cref="T:System.Data.SchemaType" /> 配置指定 <see cref="T:System.Data.DataTable" /> 的架构。</span><span class="sxs-lookup"><span data-stu-id="9e23c-571">Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />.</span></span></summary>
        <returns><span data-ttu-id="9e23c-572">一个 <see cref="T:System.Data.DataTable" />，其中包含从数据源返回的架构信息。</span><span class="sxs-lookup"><span data-stu-id="9e23c-572">A <see cref="T:System.Data.DataTable" /> that contains schema information returned from the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e23c-573"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法使用检索数据源中的架构 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-573">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="9e23c-574">与关联的连接对象 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 必须有效，但不需要打开。</span><span class="sxs-lookup"><span data-stu-id="9e23c-574">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="9e23c-575">如果在调用之前连接关闭 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> ，则将其打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="9e23c-575">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="9e23c-576">如果在调用之前连接处于打开状态 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> ，则该连接将保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="9e23c-576">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="9e23c-577"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>操作返回 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-577">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation returns a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="9e23c-578">然后，它将列添加到的 <xref:System.Data.DataColumnCollection> <xref:System.Data.DataTable> ，并配置以下 <xref:System.Data.DataColumn> 属性（如果它们存在于数据源中）：</span><span class="sxs-lookup"><span data-stu-id="9e23c-578">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="9e23c-579"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="9e23c-579"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="9e23c-580">您必须 <xref:System.Data.DataColumn.AutoIncrementStep%2A> 分别设置和 <xref:System.Data.DataColumn.AutoIncrementSeed%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-580">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="9e23c-581"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A><xref:System.Data.DataTable.PrimaryKey%2A>根据以下规则，还可以配置和 <xref:System.Data.DataTable.Constraints%2A> 属性：</span><span class="sxs-lookup"><span data-stu-id="9e23c-581"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="9e23c-582">如果已 <xref:System.Data.DataTable.PrimaryKey%2A> 为指定 `DataTable` ，或 `DataTable` 包含数据，则 `PrimaryKey` 不会设置属性。</span><span class="sxs-lookup"><span data-stu-id="9e23c-582">If a <xref:System.Data.DataTable.PrimaryKey%2A> has already been defined for the `DataTable`, or the `DataTable` contains data, the `PrimaryKey` property will not be set.</span></span>  
  
-   <span data-ttu-id="9e23c-583">如果返回一个或多个主键列，则将 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 它们用作的主键列 `DataTable` 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-583">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the `DataTable`.</span></span>  
  
-   <span data-ttu-id="9e23c-584">如果未返回主键列但唯一列为，则当且仅当不可 null 所有唯一列时，才将唯一列用作主键。</span><span class="sxs-lookup"><span data-stu-id="9e23c-584">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="9e23c-585">如果任何列可为 null， <xref:System.Data.UniqueConstraint> 则会将添加到 <xref:System.Data.ConstraintCollection> ，但 `PrimaryKey` 不设置属性。</span><span class="sxs-lookup"><span data-stu-id="9e23c-585">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the `PrimaryKey` property is not set.</span></span>  
  
-   <span data-ttu-id="9e23c-586">如果为主键列和唯一列都返回，则主键列将用作的主键列 `DataTable` 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-586">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the `DataTable`.</span></span>  
  
 <span data-ttu-id="9e23c-587">请注意，根据前面的规则将主键和 unique 约束添加到， <xref:System.Data.ConstraintCollection> 但不会添加其他约束类型。</span><span class="sxs-lookup"><span data-stu-id="9e23c-587">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span> <span data-ttu-id="9e23c-588">此过程可能需要多次往返服务器。</span><span class="sxs-lookup"><span data-stu-id="9e23c-588">This process may require several round-trips to the server.</span></span>  
  
 <span data-ttu-id="9e23c-589">如果在 SQL Server 表中的一列或多列上定义了唯一聚集索引，并且在一组单独的列上定义了 primary key 约束，则将返回聚集索引中的列的名称。</span><span class="sxs-lookup"><span data-stu-id="9e23c-589">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="9e23c-590">若要返回主键列的名称，请使用带有指定主键索引名称的 SELECT 语句的查询提示。</span><span class="sxs-lookup"><span data-stu-id="9e23c-590">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="9e23c-591">有关指定查询提示的详细信息，请参阅 [ (transact-sql) 的提示](/sql/t-sql/queries/hints-transact-sql-query)。</span><span class="sxs-lookup"><span data-stu-id="9e23c-591">For more information about specifying query hints, see [Hints (Transact-SQL) - Query](/sql/t-sql/queries/hints-transact-sql-query).</span></span>  
  
 <span data-ttu-id="9e23c-592">如果在 <xref:System.Data.Common.DbDataAdapter> 填充时遇到重复的列， <xref:System.Data.DataTable> 则它将使用模式 "*columnname* 1"、"*columnname* 2"、"*columnname* 3" 等为后续列生成名称。</span><span class="sxs-lookup"><span data-stu-id="9e23c-592">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname* 1", "*columnname* 2", "*columnname* 3", and so on.</span></span> <span data-ttu-id="9e23c-593">如果传入数据包含未命名列，则这些列将 <xref:System.Data.DataSet> 按照模式 "Column1"、"Column2" 等放置在中。</span><span class="sxs-lookup"><span data-stu-id="9e23c-593">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="9e23c-594">如果将多个结果集添加到 <xref:System.Data.DataSet> 每个结果集，则会将其放在一个单独的表中。</span><span class="sxs-lookup"><span data-stu-id="9e23c-594">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="9e23c-595">附加的结果集通过将整数值追加到指定的表名来命名 (例如，"Table"、"Table1"、"Table2" 等。 ) 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-595">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="9e23c-596">使用列和表名称的应用程序应确保不会与这些命名模式发生冲突。</span><span class="sxs-lookup"><span data-stu-id="9e23c-596">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="9e23c-597"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 不返回任何行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-597"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="9e23c-598">使用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 方法可将行添加到 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-598">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e23c-599">当处理返回多个结果的批处理 SQL 语句时， <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> OLE DB 的 .NET Framework 数据提供程序的实现仅检索第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="9e23c-599">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="9e23c-600">若要检索多个结果的架构信息，请使用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> <xref:System.Data.MissingSchemaAction> 设置为的 `AddWithKey` 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-600">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="9e23c-601">当使用 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 时，用于 SQL Server 的 .NET Framework 数据提供程序将 FOR BROWSE 子句追加到正在执行的语句。</span><span class="sxs-lookup"><span data-stu-id="9e23c-601">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="9e23c-602">用户应该注意潜在的副作用，例如对 SET FMTONLY ON 语句的使用产生的干扰。</span><span class="sxs-lookup"><span data-stu-id="9e23c-602">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="9e23c-603">有关详细信息，请参阅 [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)。</span><span class="sxs-lookup"><span data-stu-id="9e23c-603">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="9e23c-604">下面的示例使用派生类， <xref:System.Data.SqlClient.SqlDataAdapter> 将填充到 <xref:System.Data.DataSet> 架构，并返回 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-604">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataTable>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema3/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dbproviderfactories"><span data-ttu-id="9e23c-605">DbProviderFactories</span><span class="sxs-lookup"><span data-stu-id="9e23c-605">DbProviderFactories</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-606">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-606">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FillSchema (dataSet As DataSet, schemaType As SchemaType, srcTable As String) As DataTable()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataSet * System.Data.SchemaType * string -&gt; System.Data.DataTable[]" Usage="dbDataAdapter.FillSchema (dataSet, schemaType, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="9e23c-607">要插入架构的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="9e23c-607">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</span></span></param>
        <param name="schemaType"><span data-ttu-id="9e23c-608"><see cref="T:System.Data.SchemaType" /> 值之一，指定如何插入架构。</span><span class="sxs-lookup"><span data-stu-id="9e23c-608">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</span></span></param>
        <param name="srcTable"><span data-ttu-id="9e23c-609">用于表映射的源表的名称。</span><span class="sxs-lookup"><span data-stu-id="9e23c-609">The name of the source table to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="9e23c-610">将 <see cref="T:System.Data.DataTable" /> 添加到指定的 <see cref="T:System.Data.DataSet" /> 中，并根据指定的 <see cref="T:System.Data.SchemaType" /> 和 <see cref="T:System.Data.DataTable" /> 配置架构以匹配数据源中的架构。</span><span class="sxs-lookup"><span data-stu-id="9e23c-610">Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based upon the specified <see cref="T:System.Data.SchemaType" /> and <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <returns><span data-ttu-id="9e23c-611">一个引用，指向添加到 <see cref="T:System.Data.DataSet" /> 的 <see cref="T:System.Data.DataTable" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="9e23c-611">A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e23c-612">此方法使用从数据源中检索架构信息 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-612">This method retrieves the schema information from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 <span data-ttu-id="9e23c-613"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>操作将添加 <xref:System.Data.DataTable> 到目标 <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-613">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="9e23c-614">然后，它将列添加到的 <xref:System.Data.DataColumnCollection> <xref:System.Data.DataTable> ，并配置以下 <xref:System.Data.DataColumn> 属性（如果它们存在于数据源中）：</span><span class="sxs-lookup"><span data-stu-id="9e23c-614">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="9e23c-615"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="9e23c-615"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="9e23c-616">您必须 <xref:System.Data.DataColumn.AutoIncrementStep%2A> 分别设置和 <xref:System.Data.DataColumn.AutoIncrementSeed%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-616">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="9e23c-617"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A><xref:System.Data.DataTable.PrimaryKey%2A>根据以下规则，还可以配置和 <xref:System.Data.DataTable.Constraints%2A> 属性：</span><span class="sxs-lookup"><span data-stu-id="9e23c-617"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="9e23c-618">如果返回一个或多个主键列，则将 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 它们用作的主键列 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-618">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="9e23c-619">如果未返回主键列但唯一列为，则当且仅当不可 null 所有唯一列时，才将唯一列用作主键。</span><span class="sxs-lookup"><span data-stu-id="9e23c-619">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="9e23c-620">如果任何列可为 null， <xref:System.Data.UniqueConstraint> 则会将添加到 <xref:System.Data.ConstraintCollection> ，但 <xref:System.Data.DataTable.PrimaryKey%2A> 不设置属性。</span><span class="sxs-lookup"><span data-stu-id="9e23c-620">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="9e23c-621">如果为主键列和唯一列都返回，则主键列将用作的主键列 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-621">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="9e23c-622">请注意，根据前面的规则将主键和 unique 约束添加到， <xref:System.Data.ConstraintCollection> 但不会添加其他约束类型。</span><span class="sxs-lookup"><span data-stu-id="9e23c-622">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="9e23c-623">如果在 SQL Server 表中的一列或多列上定义了唯一聚集索引，并且在一组单独的列上定义了 primary key 约束，则将返回聚集索引中的列的名称。</span><span class="sxs-lookup"><span data-stu-id="9e23c-623">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="9e23c-624">若要返回主键列的名称，请使用带有指定主键索引名称的 SELECT 语句的查询提示。</span><span class="sxs-lookup"><span data-stu-id="9e23c-624">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="9e23c-625">有关指定查询提示的详细信息，请参阅 [ (transact-sql) 的提示](/sql/t-sql/queries/hints-transact-sql-query)。</span><span class="sxs-lookup"><span data-stu-id="9e23c-625">For more information about specifying query hints, see [Hints (Transact-SQL) - Query](/sql/t-sql/queries/hints-transact-sql-query).</span></span>  
  
 <span data-ttu-id="9e23c-626">在过程中使用主键信息 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 查找并替换其键列匹配的任何行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-626">Primary key information is used during <xref:System.Data.Common.DbDataAdapter.Fill%2A> to find and replace any rows whose key columns match.</span></span> <span data-ttu-id="9e23c-627">如果这不是所需的行为，请使用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 而不请求架构信息。</span><span class="sxs-lookup"><span data-stu-id="9e23c-627">If this is not the desired behavior, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> without requesting schema information.</span></span>  
  
 <span data-ttu-id="9e23c-628">如果在 <xref:System.Data.Common.DbDataAdapter> 填充时遇到重复的列， <xref:System.Data.DataTable> 则它将使用模式 "*columnname* 1"、"*columnname* 2"、"*columnname* 3" 等为后续列生成名称。</span><span class="sxs-lookup"><span data-stu-id="9e23c-628">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname* 1", "*columnname* 2", "*columnname* 3", and so on.</span></span> <span data-ttu-id="9e23c-629">如果传入数据包含未命名列，则这些列将 <xref:System.Data.DataSet> 按照模式 "Column1"、"Column2" 等放置在中。</span><span class="sxs-lookup"><span data-stu-id="9e23c-629">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="9e23c-630">如果将多个结果集添加到 <xref:System.Data.DataSet> 每个结果集，则会将其放在一个单独的表中。</span><span class="sxs-lookup"><span data-stu-id="9e23c-630">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="9e23c-631">附加的结果集通过将整数值追加到指定的表名来命名 (例如，"Table"、"Table1"、"Table2" 等。 ) 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-631">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="9e23c-632">使用列和表名称的应用程序应确保不会与这些命名模式发生冲突。</span><span class="sxs-lookup"><span data-stu-id="9e23c-632">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="9e23c-633"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法支持 <xref:System.Data.DataSet> 包含多个对象，这些 <xref:System.Data.DataTable> 对象的名称仅区分大小写。</span><span class="sxs-lookup"><span data-stu-id="9e23c-633">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="9e23c-634">在这种情况下， <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 将执行区分大小写的比较来查找相应的表，如果不存在精确匹配，则创建新表。</span><span class="sxs-lookup"><span data-stu-id="9e23c-634">In such situations, <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="9e23c-635">下面的 c # 代码阐释了这一行为。</span><span class="sxs-lookup"><span data-stu-id="9e23c-635">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.FillSchema(dataset, "aaa"); // Fills the schema of "aaa", which already exists in the DataSet.  
adapter.FillSchema(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="9e23c-636">如果 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 调用，并且 <xref:System.Data.DataSet> 仅包含 <xref:System.Data.DataTable> 其名称仅大小写不同的名称， <xref:System.Data.DataTable> 则会更新。</span><span class="sxs-lookup"><span data-stu-id="9e23c-636">If <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="9e23c-637">在这种情况下，比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="9e23c-637">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="9e23c-638">下面的 c # 代码阐释了这一行为。</span><span class="sxs-lookup"><span data-stu-id="9e23c-638">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.FillSchema(dataset, "AAA"); // Fills the schema of table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="9e23c-639"><xref:System.Data.IDbConnection>与 select 命令关联的对象必须有效，但不需要打开。</span><span class="sxs-lookup"><span data-stu-id="9e23c-639">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to open.</span></span> <span data-ttu-id="9e23c-640">如果在 <xref:System.Data.IDbConnection> 调用之前关闭 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> ，则将其打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="9e23c-640">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="9e23c-641">如果在调用之前连接已打开，则将 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 其保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="9e23c-641">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is left open.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e23c-642">当处理返回多个结果的批处理 SQL 语句时， <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> OLE DB 的 .NET Framework 数据提供程序的实现仅检索第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="9e23c-642">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="9e23c-643">若要检索多个结果的架构信息，请使用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> <xref:System.Data.MissingSchemaAction> 设置为的 `AddWithKey` 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-643">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="9e23c-644">当使用 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 时，用于 SQL Server 的 .NET Framework 数据提供程序将 FOR BROWSE 子句追加到正在执行的语句。</span><span class="sxs-lookup"><span data-stu-id="9e23c-644">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="9e23c-645">用户应该注意潜在的副作用，例如对 SET FMTONLY ON 语句的使用产生的干扰。</span><span class="sxs-lookup"><span data-stu-id="9e23c-645">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="9e23c-646">有关详细信息，请参阅 [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)。</span><span class="sxs-lookup"><span data-stu-id="9e23c-646">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="9e23c-647">下面的示例使用派生类， <xref:System.Data.SqlClient.SqlDataAdapter> 将填充到 <xref:System.Data.DataSet> 架构，并返回 <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-647">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9e23c-648">找不到从中获取架构的源表。</span><span class="sxs-lookup"><span data-stu-id="9e23c-648">A source table from which to get the schema could not be found.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/dbproviderfactories"><span data-ttu-id="9e23c-649">DbProviderFactories</span><span class="sxs-lookup"><span data-stu-id="9e23c-649">DbProviderFactories</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-650">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-650">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable? FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable FillSchema(class System.Data.DataTable dataTable, valuetype System.Data.SchemaType schemaType, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FillSchema (dataTable As DataTable, schemaType As SchemaType, command As IDbCommand, behavior As CommandBehavior) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataTable ^ FillSchema(System::Data::DataTable ^ dataTable, System::Data::SchemaType schemaType, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataTable * System.Data.SchemaType * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; System.Data.DataTable" Usage="dbDataAdapter.FillSchema (dataTable, schemaType, command, behavior)" />
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="9e23c-651">要用数据源中的架构填充的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="9e23c-651">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</span></span></param>
        <param name="schemaType"><span data-ttu-id="9e23c-652"><see cref="T:System.Data.SchemaType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="9e23c-652">One of the <see cref="T:System.Data.SchemaType" /> values.</span></span></param>
        <param name="command"><span data-ttu-id="9e23c-653">用于从数据源中检索行的 SQL SELECT 语句。</span><span class="sxs-lookup"><span data-stu-id="9e23c-653">The SQL SELECT statement used to retrieve rows from the data source.</span></span></param>
        <param name="behavior"><span data-ttu-id="9e23c-654"><see cref="T:System.Data.CommandBehavior" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="9e23c-654">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="9e23c-655">根据指定的 <see cref="T:System.Data.DataTable" />、命令字符串以及 <see cref="T:System.Data.SchemaType" /> 值配置指定 <see cref="T:System.Data.CommandBehavior" /> 的架构。</span><span class="sxs-lookup"><span data-stu-id="9e23c-655">Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />, command string, and <see cref="T:System.Data.CommandBehavior" /> values.</span></span></summary>
        <returns><span data-ttu-id="9e23c-656">包含从数据源返回的架构信息的 <see cref="T:System.Data.DataTable" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="9e23c-656">A of <see cref="T:System.Data.DataTable" /> object that contains schema information returned from the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e23c-657"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法使用检索数据源中的架构 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-657">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="9e23c-658">与关联的连接对象 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 必须有效，但不需要打开。</span><span class="sxs-lookup"><span data-stu-id="9e23c-658">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="9e23c-659">如果在调用之前连接关闭 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> ，则将其打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="9e23c-659">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="9e23c-660">如果在调用之前连接处于打开状态 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> ，则该连接将保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="9e23c-660">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="9e23c-661"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>操作将添加 <xref:System.Data.DataTable> 到目标 <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-661">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="9e23c-662">然后，它将列添加到的 <xref:System.Data.DataColumnCollection> <xref:System.Data.DataTable> ，并配置以下 <xref:System.Data.DataColumn> 属性（如果它们存在于数据源中）：</span><span class="sxs-lookup"><span data-stu-id="9e23c-662">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="9e23c-663"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="9e23c-663"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="9e23c-664">您必须 <xref:System.Data.DataColumn.AutoIncrementStep%2A> 分别设置和 <xref:System.Data.DataColumn.AutoIncrementSeed%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-664">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="9e23c-665"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A><xref:System.Data.DataTable.PrimaryKey%2A>根据以下规则，还可以配置和 <xref:System.Data.DataTable.Constraints%2A> 属性：</span><span class="sxs-lookup"><span data-stu-id="9e23c-665"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="9e23c-666">如果返回一个或多个主键列，则将 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 它们用作的主键列 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-666">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="9e23c-667">如果未返回主键列但唯一列为，则当且仅当不可 null 所有唯一列时，才将唯一列用作主键。</span><span class="sxs-lookup"><span data-stu-id="9e23c-667">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="9e23c-668">如果任何列可为 null， <xref:System.Data.UniqueConstraint> 则会将添加到 <xref:System.Data.ConstraintCollection> ，但 <xref:System.Data.DataTable.PrimaryKey%2A> 不设置属性。</span><span class="sxs-lookup"><span data-stu-id="9e23c-668">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="9e23c-669">如果为主键列和唯一列都返回，则主键列将用作的主键列 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-669">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="9e23c-670">请注意，根据前面的规则将主键和 unique 约束添加到， <xref:System.Data.ConstraintCollection> 但不会添加其他约束类型。</span><span class="sxs-lookup"><span data-stu-id="9e23c-670">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="9e23c-671">如果在 SQL Server 表中的一列或多列上定义了唯一聚集索引，并且在一组单独的列上定义了 primary key 约束，则将返回聚集索引中的列的名称。</span><span class="sxs-lookup"><span data-stu-id="9e23c-671">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="9e23c-672">若要返回主键列的名称，请使用带有指定主键索引名称的 SELECT 语句的查询提示。</span><span class="sxs-lookup"><span data-stu-id="9e23c-672">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="9e23c-673">有关指定查询提示的详细信息，请参阅 [ (transact-sql) 的提示](/sql/t-sql/queries/hints-transact-sql-query)。</span><span class="sxs-lookup"><span data-stu-id="9e23c-673">For more information about specifying query hints, see [Hints (Transact-SQL) - Query](/sql/t-sql/queries/hints-transact-sql-query).</span></span>  
  
 <span data-ttu-id="9e23c-674">如果在 <xref:System.Data.IDataAdapter> 填充时遇到重复的列， <xref:System.Data.DataTable> 则它将使用模式 "*columnname* 1"、"*columnname* 2"、"*columnname* 3" 等为后续列生成名称。</span><span class="sxs-lookup"><span data-stu-id="9e23c-674">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname* 1", "*columnname* 2", "*columnname* 3", and so on.</span></span> <span data-ttu-id="9e23c-675">如果传入数据包含未命名列，则这些列将 <xref:System.Data.DataSet> 按照模式 "Column1"、"Column2" 等放置在中。</span><span class="sxs-lookup"><span data-stu-id="9e23c-675">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="9e23c-676">如果将多个结果集添加到 <xref:System.Data.DataSet> 每个结果集，则会将其放在一个单独的表中。</span><span class="sxs-lookup"><span data-stu-id="9e23c-676">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="9e23c-677">附加的结果集通过将整数值追加到指定的表名来命名 (例如，"Table"、"Table1"、"Table2" 等。 ) 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-677">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="9e23c-678">使用列和表名称的应用程序应确保不会与这些命名模式发生冲突。</span><span class="sxs-lookup"><span data-stu-id="9e23c-678">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="9e23c-679"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 不返回任何行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-679"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="9e23c-680">使用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 方法可将行添加到 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-680">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e23c-681">当处理返回多个结果的批处理 SQL 语句时， <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> OLE DB 的 .NET Framework 数据提供程序的实现仅检索第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="9e23c-681">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="9e23c-682">若要检索多个结果的架构信息，请使用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> <xref:System.Data.MissingSchemaAction> 设置为的 `AddWithKey` 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-682">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="9e23c-683">当使用 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 时，用于 SQL Server 的 .NET Framework 数据提供程序将 FOR BROWSE 子句追加到正在执行的语句。</span><span class="sxs-lookup"><span data-stu-id="9e23c-683">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="9e23c-684">用户应该注意潜在的副作用，例如对 SET FMTONLY ON 语句的使用产生的干扰。</span><span class="sxs-lookup"><span data-stu-id="9e23c-684">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="9e23c-685">有关详细信息，请参阅 [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)。</span><span class="sxs-lookup"><span data-stu-id="9e23c-685">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="9e23c-686">此方法的实现 <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> 是受保护的，旨在供 .NET Framework 数据提供程序使用。</span><span class="sxs-lookup"><span data-stu-id="9e23c-686">This implementation of the <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para></block>
        <related type="Article" href="/dotnet/framework/data/adonet/dbproviderfactories"><span data-ttu-id="9e23c-687">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-687">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-688">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-688">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, System.Data.IDbCommand command, string srcTable, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType, class System.Data.IDbCommand command, string srcTable, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FillSchema (dataSet As DataSet, schemaType As SchemaType, command As IDbCommand, srcTable As String, behavior As CommandBehavior) As DataTable()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType, System::Data::IDbCommand ^ command, System::String ^ srcTable, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataSet * System.Data.SchemaType * System.Data.IDbCommand * string * System.Data.CommandBehavior -&gt; System.Data.DataTable[]" Usage="dbDataAdapter.FillSchema (dataSet, schemaType, command, srcTable, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="9e23c-689">要用数据源中的架构填充的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="9e23c-689">The <see cref="T:System.Data.DataSet" /> to be filled with the schema from the data source.</span></span></param>
        <param name="schemaType"><span data-ttu-id="9e23c-690"><see cref="T:System.Data.SchemaType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="9e23c-690">One of the <see cref="T:System.Data.SchemaType" /> values.</span></span></param>
        <param name="command"><span data-ttu-id="9e23c-691">用于从数据源中检索行的 SQL SELECT 语句。</span><span class="sxs-lookup"><span data-stu-id="9e23c-691">The SQL SELECT statement used to retrieve rows from the data source.</span></span></param>
        <param name="srcTable"><span data-ttu-id="9e23c-692">用于表映射的源表的名称。</span><span class="sxs-lookup"><span data-stu-id="9e23c-692">The name of the source table to use for table mapping.</span></span></param>
        <param name="behavior"><span data-ttu-id="9e23c-693"><see cref="T:System.Data.CommandBehavior" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="9e23c-693">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="9e23c-694">将 <see cref="T:System.Data.DataTable" /> 添加到指定的 <see cref="T:System.Data.DataSet" /> ，并根据指定的 <see cref="T:System.Data.SchemaType" />配置架构以匹配数据源中的架构。</span><span class="sxs-lookup"><span data-stu-id="9e23c-694">Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span></span></summary>
        <returns><span data-ttu-id="9e23c-695"><see cref="T:System.Data.DataTable" /> 对象的数组，这些对象包含从数据源返回的架构信息。</span><span class="sxs-lookup"><span data-stu-id="9e23c-695">An array of <see cref="T:System.Data.DataTable" /> objects that contain schema information returned from the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e23c-696"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法使用检索数据源中的架构 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-696">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="9e23c-697">与关联的连接对象 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 必须有效，但不需要打开。</span><span class="sxs-lookup"><span data-stu-id="9e23c-697">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="9e23c-698">如果在调用之前连接关闭 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> ，则将其打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="9e23c-698">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="9e23c-699">如果在调用之前连接处于打开状态 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> ，则该连接将保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="9e23c-699">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="9e23c-700"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>操作将添加 <xref:System.Data.DataTable> 到目标 <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-700">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="9e23c-701">然后，它将列添加到的 <xref:System.Data.DataColumnCollection> <xref:System.Data.DataTable> ，并配置以下 <xref:System.Data.DataColumn> 属性（如果它们存在于数据源中）：</span><span class="sxs-lookup"><span data-stu-id="9e23c-701">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="9e23c-702"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="9e23c-702"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="9e23c-703">您必须 <xref:System.Data.DataColumn.AutoIncrementStep%2A> 分别设置和 <xref:System.Data.DataColumn.AutoIncrementSeed%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-703">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="9e23c-704"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A><xref:System.Data.DataTable.PrimaryKey%2A>根据以下规则，还可以配置和 <xref:System.Data.DataTable.Constraints%2A> 属性：</span><span class="sxs-lookup"><span data-stu-id="9e23c-704"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="9e23c-705">如果返回一个或多个主键列，则将 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 它们用作的主键列 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-705">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="9e23c-706">如果未返回主键列但唯一列为，则当且仅当不可 null 所有唯一列时，才将唯一列用作主键。</span><span class="sxs-lookup"><span data-stu-id="9e23c-706">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="9e23c-707">如果任何列可为 null， <xref:System.Data.UniqueConstraint> 则会将添加到 <xref:System.Data.ConstraintCollection> ，但 <xref:System.Data.DataTable.PrimaryKey%2A> 不设置属性。</span><span class="sxs-lookup"><span data-stu-id="9e23c-707">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="9e23c-708">如果为主键列和唯一列都返回，则主键列将用作的主键列 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-708">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="9e23c-709">请注意，根据前面的规则将主键和 unique 约束添加到， <xref:System.Data.ConstraintCollection> 但不会添加其他约束类型。</span><span class="sxs-lookup"><span data-stu-id="9e23c-709">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="9e23c-710">如果在 SQL Server 表中的一列或多列上定义了唯一聚集索引，并且在一组单独的列上定义了 primary key 约束，则将返回聚集索引中的列的名称。</span><span class="sxs-lookup"><span data-stu-id="9e23c-710">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="9e23c-711">若要返回主键列的名称，请使用带有指定主键索引名称的 SELECT 语句的查询提示。</span><span class="sxs-lookup"><span data-stu-id="9e23c-711">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="9e23c-712">有关指定查询提示的详细信息，请参阅 [ (transact-sql) 的提示](/sql/t-sql/queries/hints-transact-sql-query)。</span><span class="sxs-lookup"><span data-stu-id="9e23c-712">For more information about specifying query hints, see [Hints (Transact-SQL) - Query](/sql/t-sql/queries/hints-transact-sql-query).</span></span>  
  
 <span data-ttu-id="9e23c-713">如果在 <xref:System.Data.IDataAdapter> 填充时遇到重复的列， <xref:System.Data.DataTable> 则它将使用模式 "*columnname* 1"、"*columnname* 2"、"*columnname* 3" 等为后续列生成名称。</span><span class="sxs-lookup"><span data-stu-id="9e23c-713">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname* 1", "*columnname* 2", "*columnname* 3", and so on.</span></span> <span data-ttu-id="9e23c-714">如果传入数据包含未命名列，则这些列将 <xref:System.Data.DataSet> 按照模式 "Column1"、"Column2" 等放置在中。</span><span class="sxs-lookup"><span data-stu-id="9e23c-714">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="9e23c-715">如果将多个结果集添加到 <xref:System.Data.DataSet> 每个结果集，则会将其放在一个单独的表中。</span><span class="sxs-lookup"><span data-stu-id="9e23c-715">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="9e23c-716">附加的结果集通过将整数值追加到指定的表名来命名 (例如，"Table"、"Table1"、"Table2" 等。 ) 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-716">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="9e23c-717">使用列和表名称的应用程序应确保不会与这些命名模式发生冲突。</span><span class="sxs-lookup"><span data-stu-id="9e23c-717">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="9e23c-718"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法支持 <xref:System.Data.DataSet> 包含多个对象，这些 <xref:System.Data.DataTable> 对象的名称仅区分大小写。</span><span class="sxs-lookup"><span data-stu-id="9e23c-718">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="9e23c-719">在这种情况下， <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 将执行区分大小写的比较来查找相应的表，如果不存在精确匹配，则创建新表。</span><span class="sxs-lookup"><span data-stu-id="9e23c-719">In such situations, <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="9e23c-720">下面的 c # 代码阐释了这一行为。</span><span class="sxs-lookup"><span data-stu-id="9e23c-720">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.FillSchema(dataset, "aaa"); // Fills the schema of "aaa", which already exists in the DataSet.  
adapter.FillSchema(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="9e23c-721">如果 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 调用，并且 <xref:System.Data.DataSet> 仅包含 <xref:System.Data.DataTable> 其名称仅大小写不同的名称， <xref:System.Data.DataTable> 则会更新。</span><span class="sxs-lookup"><span data-stu-id="9e23c-721">If <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="9e23c-722">在这种情况下，比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="9e23c-722">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="9e23c-723">下面的 c # 代码阐释了这一行为。</span><span class="sxs-lookup"><span data-stu-id="9e23c-723">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.FillSchema(dataset, "AAA"); // Fills the schema of table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="9e23c-724"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 不返回任何行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-724"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="9e23c-725">使用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 方法可将行添加到 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-725">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e23c-726">当处理返回多个结果的批处理 SQL 语句时， <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> OLE DB 的 .NET Framework 数据提供程序的实现仅检索第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="9e23c-726">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="9e23c-727">若要检索多个结果的架构信息，请使用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> <xref:System.Data.MissingSchemaAction> 设置为的 `AddWithKey` 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-727">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="9e23c-728">当使用 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 时，用于 SQL Server 的 .NET Framework 数据提供程序将 FOR BROWSE 子句追加到正在执行的语句。</span><span class="sxs-lookup"><span data-stu-id="9e23c-728">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="9e23c-729">用户应该注意潜在的副作用，例如对 SET FMTONLY ON 语句的使用产生的干扰。</span><span class="sxs-lookup"><span data-stu-id="9e23c-729">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="9e23c-730">有关详细信息，请参阅 [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)。</span><span class="sxs-lookup"><span data-stu-id="9e23c-730">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="9e23c-731">此方法的实现 <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> 是受保护的，旨在供 .NET Framework 数据提供程序使用。</span><span class="sxs-lookup"><span data-stu-id="9e23c-731">This implementation of the <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para></block>
        <related type="Article" href="/dotnet/framework/data/adonet/dbproviderfactories"><span data-ttu-id="9e23c-732">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-732">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-733">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-733">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedParameter">
      <MemberSignature Language="C#" Value="protected virtual System.Data.IDataParameter GetBatchedParameter (int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.IDataParameter GetBatchedParameter(int32 commandIdentifier, int32 parameterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetBatchedParameter (commandIdentifier As Integer, parameterIndex As Integer) As IDataParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::IDataParameter ^ GetBatchedParameter(int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetBatchedParameter : int * int -&gt; System.Data.IDataParameter&#xA;override this.GetBatchedParameter : int * int -&gt; System.Data.IDataParameter" Usage="dbDataAdapter.GetBatchedParameter (commandIdentifier, parameterIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameterIndex" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier"><span data-ttu-id="9e23c-734">要从中检索参数的命令的索引。</span><span class="sxs-lookup"><span data-stu-id="9e23c-734">The index of the command to retrieve the parameter from.</span></span></param>
        <param name="parameterIndex"><span data-ttu-id="9e23c-735">命令内的参数的索引。</span><span class="sxs-lookup"><span data-stu-id="9e23c-735">The index of the parameter within the command.</span></span></param>
        <summary><span data-ttu-id="9e23c-736">从当前批处理中的其中一个命令返回一个 <see cref="T:System.Data.IDataParameter" />。</span><span class="sxs-lookup"><span data-stu-id="9e23c-736">Returns a <see cref="T:System.Data.IDataParameter" /> from one of the commands in the current batch.</span></span></summary>
        <returns><span data-ttu-id="9e23c-737">指定的 <see cref="T:System.Data.IDataParameter" />。</span><span class="sxs-lookup"><span data-stu-id="9e23c-737">The <see cref="T:System.Data.IDataParameter" /> specified.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e23c-738">在中 <xref:System.Data.Common.DbDataAdapter> ，此方法将引发 <xref:System.NotSupportedException> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-738">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="9e23c-739">从继承的类 <xref:System.Data.Common.DbDataAdapter> 将重写此方法以提供对批的支持。</span><span class="sxs-lookup"><span data-stu-id="9e23c-739">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9e23c-740">该适配器不支持批处理。</span><span class="sxs-lookup"><span data-stu-id="9e23c-740">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="9e23c-741">此方法是受保护的，由 .NET Framework 数据提供程序使用。</span><span class="sxs-lookup"><span data-stu-id="9e23c-741">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="9e23c-742">如果从继承的类 <see cref="T:System.Data.Common.DbDataAdapter" /> 支持批处理，则该类将重写此方法以允许用户执行批处理。</span><span class="sxs-lookup"><span data-stu-id="9e23c-742">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to execute a batch.</span></span> <span data-ttu-id="9e23c-743">实现使用提供的 <paramref name="commandIdentifier" /> 来定位请求的命令，然后使用提供的 <paramref name="parameterIndex" /> 来定位请求的参数。</span><span class="sxs-lookup"><span data-stu-id="9e23c-743">An implementation uses the <paramref name="commandIdentifier" /> provided to locate the requested command, then uses the <paramref name="parameterIndex" /> provided to locate the requested parameter.</span></span> <span data-ttu-id="9e23c-744">例如，如果为 <paramref name="commandIdentifier" /> 0，并且的为0，则 <paramref name="parameterIndex" /> 返回批处理中第一个命令的第一个参数。</span><span class="sxs-lookup"><span data-stu-id="9e23c-744">For example, a <paramref name="commandIdentifier" /> of 0 and a <paramref name="parameterIndex" /> of 0 returns the first parameter from the first command in the batch.</span></span></para></block>
        <related type="Article" href="/dotnet/framework/data/adonet/dbproviderfactories"><span data-ttu-id="9e23c-745">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-745">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-746">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-746">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedRecordsAffected">
      <MemberSignature Language="C#" Value="protected virtual bool GetBatchedRecordsAffected (int commandIdentifier, out int? recordsAffected, out Exception? error);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool GetBatchedRecordsAffected(int32 commandIdentifier, [out] int32&amp; recordsAffected, [out] class System.Exception&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetBatchedRecordsAffected (commandIdentifier As Integer, ByRef recordsAffected As Integer, ByRef error As Exception) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool GetBatchedRecordsAffected(int commandIdentifier, [Runtime::InteropServices::Out] int % recordsAffected, [Runtime::InteropServices::Out] Exception ^ % error);" />
      <MemberSignature Language="F#" Value="abstract member GetBatchedRecordsAffected : int * int * Exception -&gt; bool&#xA;override this.GetBatchedRecordsAffected : int * int * Exception -&gt; bool" Usage="dbDataAdapter.GetBatchedRecordsAffected (commandIdentifier, recordsAffected, error)" />
      <MemberSignature Language="C#" Value="protected virtual bool GetBatchedRecordsAffected (int commandIdentifier, out int recordsAffected, out Exception error);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="recordsAffected" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="error" Type="System.Exception" RefType="out" Index="2" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier"><span data-ttu-id="9e23c-747">该批次内单个命令的从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="9e23c-747">The zero-based column ordinal of the individual command within the batch.</span></span></param>
        <param name="recordsAffected"><span data-ttu-id="9e23c-748">数据存储区中受该批内的指定命令影响的行数。</span><span class="sxs-lookup"><span data-stu-id="9e23c-748">The number of rows affected in the data store by the specified command within the batch.</span></span></param>
        <param name="error"><span data-ttu-id="9e23c-749">在执行指定命令期间引发的一个 <see cref="T:System.Exception" />。</span><span class="sxs-lookup"><span data-stu-id="9e23c-749">An <see cref="T:System.Exception" /> thrown during execution of the specified command.</span></span> <span data-ttu-id="9e23c-750">如果未引发任何异常，则返回 <see langword="null" />（在 Visual Basic 中为 <see langword="Nothing" />）。</span><span class="sxs-lookup"><span data-stu-id="9e23c-750">Returns <see langword="null" /> (<see langword="Nothing" /> in Visual Basic) if no exception is thrown.</span></span></param>
        <summary><span data-ttu-id="9e23c-751">返回与较大的批处理更新内的单次更新尝试有关的信息。</span><span class="sxs-lookup"><span data-stu-id="9e23c-751">Returns information about an individual update attempt within a larger batched update.</span></span></summary>
        <returns><span data-ttu-id="9e23c-752">与较大的批处理更新内的单次更新尝试有关的信息。</span><span class="sxs-lookup"><span data-stu-id="9e23c-752">Information about an individual update attempt within a larger batched update.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e23c-753">支持批量更新逻辑的数据访问接口必须重写类的一系列虚方法 <xref:System.Data.Common.DbDataAdapter> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-753">Data providers that support batched updating logic must override a series of virtual methods on the <xref:System.Data.Common.DbDataAdapter> class.</span></span> <span data-ttu-id="9e23c-754">`GetBatchedRecordsAffected` 表示这些虚方法中的一个。</span><span class="sxs-lookup"><span data-stu-id="9e23c-754">`GetBatchedRecordsAffected` represents one of those virtual methods.</span></span> <span data-ttu-id="9e23c-755">`DbDataAdapter`类依赖于 `GetBatchedRecordsAffected` 确定批次中的单个更新尝试是成功还是失败，以便它能够相应地对其进行标记 <xref:System.Data.DataRow> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-755">The `DbDataAdapter` class relies on `GetBatchedRecordsAffected` to determine the success or failure of individual update attempts within a batch so it can mark each corresponding <xref:System.Data.DataRow> accordingly.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-756">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-756">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFillParameters">
      <MemberSignature Language="C#" Value="public override System.Data.IDataParameter[] GetFillParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.IDataParameter[] GetFillParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetFillParameters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFillParameters () As IDataParameter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Data::IDataParameter ^&gt; ^ GetFillParameters();" />
      <MemberSignature Language="F#" Value="override this.GetFillParameters : unit -&gt; System.Data.IDataParameter[]" Usage="dbDataAdapter.GetFillParameters " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">M:System.Data.IDataAdapter.GetFillParameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9e23c-757">获取当执行 SQL SELECT 语句时由用户设置的参数。</span><span class="sxs-lookup"><span data-stu-id="9e23c-757">Gets the parameters set by the user when executing an SQL SELECT statement.</span></span></summary>
        <returns><span data-ttu-id="9e23c-758"><see cref="T:System.Data.IDataParameter" /> 对象的数组，这些对象包含由用户设置的参数。</span><span class="sxs-lookup"><span data-stu-id="9e23c-758">An array of <see cref="T:System.Data.IDataParameter" /> objects that contains the parameters set by the user.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-759">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-759">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InitializeBatching">
      <MemberSignature Language="C#" Value="protected virtual void InitializeBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.InitializeBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeBatching();" />
      <MemberSignature Language="F#" Value="abstract member InitializeBatching : unit -&gt; unit&#xA;override this.InitializeBatching : unit -&gt; unit" Usage="dbDataAdapter.InitializeBatching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9e23c-760">初始化 <see cref="T:System.Data.Common.DbDataAdapter" /> 的批处理。</span><span class="sxs-lookup"><span data-stu-id="9e23c-760">Initializes batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e23c-761">在中 <xref:System.Data.Common.DbDataAdapter> ，此方法将引发 <xref:System.NotSupportedException> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-761">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="9e23c-762">从继承的类 <xref:System.Data.Common.DbDataAdapter> 将重写此方法以提供对批的支持。</span><span class="sxs-lookup"><span data-stu-id="9e23c-762">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9e23c-763">该适配器不支持批处理。</span><span class="sxs-lookup"><span data-stu-id="9e23c-763">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="9e23c-764">此方法是受保护的，由 .NET Framework 数据提供程序使用。</span><span class="sxs-lookup"><span data-stu-id="9e23c-764">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="9e23c-765">如果从继承的类 <see cref="T:System.Data.Common.DbDataAdapter" /> 支持批处理，则该类将重写此方法。</span><span class="sxs-lookup"><span data-stu-id="9e23c-765">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method.</span></span> <span data-ttu-id="9e23c-766">此方法为类提供了初始化支持批处理所需的任何资源的机会。</span><span class="sxs-lookup"><span data-stu-id="9e23c-766">This method gives the class the opportunity to initialize any resources necessary to support batching.</span></span> <span data-ttu-id="9e23c-767">例如，类可以分配数据结构来保存批处理中的命令集。</span><span class="sxs-lookup"><span data-stu-id="9e23c-767">For example, a class may allocate a data structure to hold the set of commands in the batch.</span></span></para></block>
        <related type="Article" href="/dotnet/framework/data/adonet/dbproviderfactories"><span data-ttu-id="9e23c-768">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-768">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-769">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-769">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand? InsertCommand { get; set; }" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ InsertCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.InsertCommand" />
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand InsertCommand { get; set; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9e23c-770">获取或设置用于在数据源中插入新记录的命令。</span><span class="sxs-lookup"><span data-stu-id="9e23c-770">Gets or sets a command used to insert new records into the data source.</span></span></summary>
        <value><span data-ttu-id="9e23c-771">在 <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />，它针对数据集中的新行将记录插入到数据源中。</span><span class="sxs-lookup"><span data-stu-id="9e23c-771">A <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e23c-772">在过程中 <xref:System.Data.Common.DbDataAdapter.Update%2A> ，如果未设置此属性，并且主键信息存在于中 <xref:System.Data.DataSet> ，则 <xref:System.Data.IDbDataAdapter.InsertCommand%2A> 将自动生成。</span><span class="sxs-lookup"><span data-stu-id="9e23c-772">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.InsertCommand%2A> will be automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e23c-773">下面的示例创建派生类 <xref:System.Data.OleDb.OleDbDataAdapter> 并设置其一些属性。</span><span class="sxs-lookup"><span data-stu-id="9e23c-773">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="9e23c-774">操作数据 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-774">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dbproviderfactories"><span data-ttu-id="9e23c-775">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-775">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-776">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-776">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnFillError">
      <MemberSignature Language="C#" Value="protected virtual void OnFillError (System.Data.FillErrorEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFillError(class System.Data.FillErrorEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnFillError(System.Data.FillErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFillError (value As FillErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFillError(System::Data::FillErrorEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnFillError : System.Data.FillErrorEventArgs -&gt; unit&#xA;override this.OnFillError : System.Data.FillErrorEventArgs -&gt; unit" Usage="dbDataAdapter.OnFillError value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.FillErrorEventArgs" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="9e23c-777">事件的数据。</span><span class="sxs-lookup"><span data-stu-id="9e23c-777">The data for the event.</span></span></param>
        <summary><span data-ttu-id="9e23c-778">引发 <see cref="E:System.Data.Common.DataAdapter.FillError" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="9e23c-778">Raises the <see cref="E:System.Data.Common.DataAdapter.FillError" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUpdated(class System.Data.Common.RowUpdatedEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowUpdated (value As RowUpdatedEventArgs)" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowUpdated(System::Data::Common::RowUpdatedEventArgs ^ value);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit&#xA;override this.OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit" Usage="dbDataAdapter.OnRowUpdated value" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="protected abstract void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub OnRowUpdated (value As RowUpdatedEventArgs)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OnRowUpdated(System::Data::Common::RowUpdatedEventArgs ^ value);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit" Usage="dbDataAdapter.OnRowUpdated value" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="9e23c-779">包含事件数据的 <see cref="T:System.Data.Common.RowUpdatedEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="9e23c-779">A <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="9e23c-780">引发 .NET 数据提供程序的 <see langword="RowUpdated" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="9e23c-780">Raises the <see langword="RowUpdated" /> event of a .NET data provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e23c-781">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="9e23c-781">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="9e23c-782">有关概述，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="9e23c-782">For an overview, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="9e23c-783">当 <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> 在派生类中重写时，请确保调用基类的 <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="9e23c-783">When overriding <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> method.</span></span></para></block>
        <related type="Article" href="/dotnet/framework/data/adonet/dbproviderfactories"><span data-ttu-id="9e23c-784">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-784">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-785">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-785">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUpdating(class System.Data.Common.RowUpdatingEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowUpdating (value As RowUpdatingEventArgs)" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowUpdating(System::Data::Common::RowUpdatingEventArgs ^ value);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit&#xA;override this.OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit" Usage="dbDataAdapter.OnRowUpdating value" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="protected abstract void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub OnRowUpdating (value As RowUpdatingEventArgs)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OnRowUpdating(System::Data::Common::RowUpdatingEventArgs ^ value);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit" Usage="dbDataAdapter.OnRowUpdating value" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="9e23c-786">包含事件数据的 <see cref="T:System.Data.Common.RowUpdatingEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="9e23c-786">An <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="9e23c-787">引发 .NET 数据提供程序的 <see langword="RowUpdating" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="9e23c-787">Raises the <see langword="RowUpdating" /> event of a .NET data provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e23c-788">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="9e23c-788">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="9e23c-789">有关概述，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="9e23c-789">For an overview, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="9e23c-790">当 <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> 在派生类中重写时，请确保调用基类的 <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="9e23c-790">When overriding <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> in a derived class, be sure to call the bases class's <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> method.</span></span></para></block>
        <related type="Article" href="/dotnet/framework/data/adonet/dbproviderfactories"><span data-ttu-id="9e23c-791">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-791">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-792">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-792">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand? SelectCommand { get; set; }" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ SelectCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.SelectCommand" />
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand SelectCommand { get; set; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9e23c-793">获取或设置用于在数据源中选择记录的命令。</span><span class="sxs-lookup"><span data-stu-id="9e23c-793">Gets or sets a command used to select records in the data source.</span></span></summary>
        <value><span data-ttu-id="9e23c-794">在 <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />，它从数据源中选择记录以便放入数据集中。</span><span class="sxs-lookup"><span data-stu-id="9e23c-794">A <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9e23c-795">下面的示例创建派生类 <xref:System.Data.OleDb.OleDbDataAdapter> 并设置其一些属性。</span><span class="sxs-lookup"><span data-stu-id="9e23c-795">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="9e23c-796">操作数据 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-796">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dbproviderfactories"><span data-ttu-id="9e23c-797">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-797">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-798">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-798">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.DeleteCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand? System.Data.IDbDataAdapter.DeleteCommand { get; set; }" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand" />
      <MemberSignature Language="VB.NET" Value=" Property DeleteCommand As IDbCommand Implements IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Data.IDbDataAdapter.DeleteCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.DeleteCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9e23c-799">获取或设置用于从数据集中删除记录的 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="9e23c-799">Gets or sets an SQL statement for deleting records from the data set.</span></span></summary>
        <value><span data-ttu-id="9e23c-800"><see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />，它针对数据集中已删除的行删除数据源中的记录。</span><span class="sxs-lookup"><span data-stu-id="9e23c-800">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e23c-801">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="9e23c-801">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9e23c-802">它只能在 <xref:System.Data.Common.DbDataAdapter> 实例被强制转换为 <xref:System.Data.IDbDataAdapter> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="9e23c-802">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="9e23c-803">有关详细信息，请参阅 <xref:System.Data.IDbDataAdapter.DeleteCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="9e23c-803">For more information, see <xref:System.Data.IDbDataAdapter.DeleteCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-804">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-804">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.InsertCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand? System.Data.IDbDataAdapter.InsertCommand { get; set; }" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand" />
      <MemberSignature Language="VB.NET" Value=" Property InsertCommand As IDbCommand Implements IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Data.IDbDataAdapter.InsertCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.InsertCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9e23c-805">获取或设置用于将新记录插入到数据源中的 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="9e23c-805">Gets or sets an SQL statement used to insert new records into the data source.</span></span></summary>
        <value><span data-ttu-id="9e23c-806">在 <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />，它针对数据集中的新行将记录插入到数据源。</span><span class="sxs-lookup"><span data-stu-id="9e23c-806">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e23c-807">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="9e23c-807">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9e23c-808">它只能在 <xref:System.Data.Common.DbDataAdapter> 实例被强制转换为 <xref:System.Data.IDbDataAdapter> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="9e23c-808">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="9e23c-809">有关详细信息，请参阅 <xref:System.Data.IDbDataAdapter.InsertCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="9e23c-809">For more information, see <xref:System.Data.IDbDataAdapter.InsertCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-810">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-810">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.SelectCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand? System.Data.IDbDataAdapter.SelectCommand { get; set; }" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand" />
      <MemberSignature Language="VB.NET" Value=" Property SelectCommand As IDbCommand Implements IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Data.IDbDataAdapter.SelectCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.SelectCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9e23c-811">获取或设置用于在数据源中选择记录的 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="9e23c-811">Gets or sets an SQL statement used to select records in the data source.</span></span></summary>
        <value><span data-ttu-id="9e23c-812">在 <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />，它从数据源中选择记录以便放入数据集中。</span><span class="sxs-lookup"><span data-stu-id="9e23c-812">An <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e23c-813">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="9e23c-813">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9e23c-814">它只能在 <xref:System.Data.Common.DbDataAdapter> 实例被强制转换为 <xref:System.Data.IDbDataAdapter> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="9e23c-814">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="9e23c-815">有关详细信息，请参阅 <xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="9e23c-815">For more information, see <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-816">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-816">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.UpdateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand? System.Data.IDbDataAdapter.UpdateCommand { get; set; }" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand" />
      <MemberSignature Language="VB.NET" Value=" Property UpdateCommand As IDbCommand Implements IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Data.IDbDataAdapter.UpdateCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.UpdateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9e23c-817">获取或设置用于更新数据源中的记录的 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="9e23c-817">Gets or sets an SQL statement used to update records in the data source.</span></span></summary>
        <value><span data-ttu-id="9e23c-818">在 <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />，它针对数据集中已修改的行更新数据源中的记录。</span><span class="sxs-lookup"><span data-stu-id="9e23c-818">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e23c-819">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="9e23c-819">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9e23c-820">它只能在 <xref:System.Data.Common.DbDataAdapter> 实例被强制转换为 <xref:System.Data.IDbDataAdapter> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="9e23c-820">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="9e23c-821">有关详细信息，请参阅 <xref:System.Data.IDbDataAdapter.UpdateCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="9e23c-821">For more information, see <xref:System.Data.IDbDataAdapter.UpdateCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-822">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-822">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberSignature Language="F#" Value="abstract member System.ICloneable.Clone : unit -&gt; obj&#xA;override this.System.ICloneable.Clone : unit -&gt; obj" Usage="dbDataAdapter.System.ICloneable.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.Obsolete("use 'protected DbDataAdapter(DbDataAdapter)' ctor")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("use 'protected DbDataAdapter(DbDataAdapter)' ctor")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9e23c-823">创建作为当前实例副本的新对象。</span><span class="sxs-lookup"><span data-stu-id="9e23c-823">Creates a new object that is a copy of the current instance.</span></span></summary>
        <returns><span data-ttu-id="9e23c-824">作为此实例副本的新对象。</span><span class="sxs-lookup"><span data-stu-id="9e23c-824">A new object that is a copy of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e23c-825">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="9e23c-825">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9e23c-826">它只能在 <xref:System.Data.Common.DbDataAdapter> 实例被强制转换为 <xref:System.ICloneable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="9e23c-826">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 <span data-ttu-id="9e23c-827">有关详细信息，请参阅 <xref:System.ICloneable.Clone%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="9e23c-827">For more information, see <xref:System.ICloneable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-828">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-828">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TerminateBatching">
      <MemberSignature Language="C#" Value="protected virtual void TerminateBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TerminateBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.TerminateBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TerminateBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TerminateBatching();" />
      <MemberSignature Language="F#" Value="abstract member TerminateBatching : unit -&gt; unit&#xA;override this.TerminateBatching : unit -&gt; unit" Usage="dbDataAdapter.TerminateBatching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9e23c-829">结束 <see cref="T:System.Data.Common.DbDataAdapter" /> 的批处理。</span><span class="sxs-lookup"><span data-stu-id="9e23c-829">Ends batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e23c-830">在中 <xref:System.Data.Common.DbDataAdapter> ，此方法将引发 <xref:System.NotSupportedException> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-830">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="9e23c-831">从继承的类 <xref:System.Data.Common.DbDataAdapter> 将重写此方法以提供对批的支持。</span><span class="sxs-lookup"><span data-stu-id="9e23c-831">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9e23c-832">该适配器不支持批处理。</span><span class="sxs-lookup"><span data-stu-id="9e23c-832">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="9e23c-833">此方法是受保护的，由 .NET Framework 数据提供程序使用。</span><span class="sxs-lookup"><span data-stu-id="9e23c-833">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="9e23c-834">如果从继承的类 <see cref="T:System.Data.Common.DbDataAdapter" /> 支持批处理，则该类将重写此方法。</span><span class="sxs-lookup"><span data-stu-id="9e23c-834">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method.</span></span> <span data-ttu-id="9e23c-835">此方法使类有机会释放分配给支持批处理的任何资源。</span><span class="sxs-lookup"><span data-stu-id="9e23c-835">This method gives the class the opportunity to dispose of any resources allocated to support batching.</span></span> <span data-ttu-id="9e23c-836">例如，类可以解除分配保存批处理中的命令的数据结构。</span><span class="sxs-lookup"><span data-stu-id="9e23c-836">For example, the class may deallocate the data structure that holds the commands in the batch.</span></span></para></block>
        <related type="Article" href="/dotnet/framework/data/adonet/dbproviderfactories"><span data-ttu-id="9e23c-837">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-837">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-838">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-838">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Update">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9e23c-839">通过为 <see cref="T:System.Data.DataSet" /> 中的每个已插入、已更新或已删除的行执行相应的 INSERT、UPDATE 或 DELETE 语句来更新数据库中的值。</span><span class="sxs-lookup"><span data-stu-id="9e23c-839">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-840">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-840">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataRow[] dataRows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataRow[] dataRows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (dataRows As DataRow()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(cli::array &lt;System::Data::DataRow ^&gt; ^ dataRows);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataRow[] -&gt; int" Usage="dbDataAdapter.Update dataRows" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRows" Type="System.Data.DataRow[]" />
      </Parameters>
      <Docs>
        <param name="dataRows"><span data-ttu-id="9e23c-841">用于更新数据源的 <see cref="T:System.Data.DataRow" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="9e23c-841">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</span></span></param>
        <summary><span data-ttu-id="9e23c-842">通过为 <see cref="T:System.Data.DataSet" /> 中的指定数组中的每个已插入、已更新或已删除的行执行相应的 INSERT、UPDATE 或 DELETE 语句来更新数据库中的值。</span><span class="sxs-lookup"><span data-stu-id="9e23c-842">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array in the <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <returns><span data-ttu-id="9e23c-843"><see cref="T:System.Data.DataSet" /> 中成功更新的行数。</span><span class="sxs-lookup"><span data-stu-id="9e23c-843">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e23c-844">当应用程序调用 <xref:System.Data.Common.DbDataAdapter.Update%2A> 方法时，将 <xref:System.Data.Common.DbDataAdapter> 检查 <xref:System.Data.DataRow.RowState%2A> 属性，并根据中配置的索引的顺序，对每个行重复执行所需的 INSERT、UPDATE 或 DELETE 语句 <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-844">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="9e23c-845">例如， <xref:System.Data.Common.DbDataAdapter.Update%2A> 可能会执行 DELETE 语句，后跟 INSERT 语句，然后执行另一 delete 语句，因为中的行的顺序 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-845">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="9e23c-846">应注意的是，这些语句不作为批处理执行;每一行都单独更新。</span><span class="sxs-lookup"><span data-stu-id="9e23c-846">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="9e23c-847">应用程序可以 <xref:System.Data.DataSet.GetChanges%2A> 在以下情况下调用方法：例如，必须控制语句类型的序列 (例如，在更新) 之前插入。</span><span class="sxs-lookup"><span data-stu-id="9e23c-847">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="9e23c-848">有关详细信息，请参阅 [用 Dataadapter 更新数据源](/dotnet/framework/data/adonet/updating-data-sources-with-dataadapters)。</span><span class="sxs-lookup"><span data-stu-id="9e23c-848">For more information, see [Updating Data Sources with DataAdapters](/dotnet/framework/data/adonet/updating-data-sources-with-dataadapters).</span></span>  
  
 <span data-ttu-id="9e23c-849">如果尚未指定 INSERT、UPDATE 或 DELETE 语句，则该方法将 <xref:System.Data.Common.DbDataAdapter.Update%2A> 生成一个异常。</span><span class="sxs-lookup"><span data-stu-id="9e23c-849">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="9e23c-850">但是， <xref:System.Data.SqlClient.SqlCommandBuilder> <xref:System.Data.OleDb.OleDbCommandBuilder> 如果您设置了 `SelectCommand` .NET Framework 数据提供程序的属性，则可以创建或对象以自动为单表更新生成 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="9e23c-850">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="9e23c-851">然后， **CommandBuilder** 将生成未设置的任何其他 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="9e23c-851">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="9e23c-852">此代逻辑要求密钥列信息存在于中 <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-852">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="9e23c-853">有关详细信息，请参阅 [通过 Commandbuilder 生成命令](/dotnet/framework/data/adonet/generating-commands-with-commandbuilders)。</span><span class="sxs-lookup"><span data-stu-id="9e23c-853">For more information see [Generating Commands with CommandBuilders](/dotnet/framework/data/adonet/generating-commands-with-commandbuilders).</span></span>  
  
 <span data-ttu-id="9e23c-854">在 <xref:System.Data.Common.DbDataAdapter.Update%2A> 执行更新之前，方法将从第一个映射中列出的表中检索行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-854">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="9e23c-855"><xref:System.Data.Common.DbDataAdapter.Update%2A>然后，使用属性的值刷新该行 <xref:System.Data.IDbCommand.UpdatedRowSource%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-855">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="9e23c-856">将忽略返回的任何其他行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-856">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="9e23c-857">在将任何数据加载回后 <xref:System.Data.DataSet> ，将 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 引发事件，从而允许用户检查已协调的 <xref:System.Data.DataSet> 行和该命令返回的任何输出参数。</span><span class="sxs-lookup"><span data-stu-id="9e23c-857">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="9e23c-858">成功更新行后，将接受对该行所做的更改。</span><span class="sxs-lookup"><span data-stu-id="9e23c-858">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="9e23c-859">使用时 <xref:System.Data.Common.DbDataAdapter.Update%2A> ，执行顺序如下所示：</span><span class="sxs-lookup"><span data-stu-id="9e23c-859">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="9e23c-860">中的值 <xref:System.Data.DataRow> 将被移动到参数值中。</span><span class="sxs-lookup"><span data-stu-id="9e23c-860">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="9e23c-861">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="9e23c-861">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="9e23c-862">命令执行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-862">The command executes.</span></span>  
  
4.  <span data-ttu-id="9e23c-863">如果命令设置为，则 `FirstReturnedRecord` 返回的第一个结果位于中 <xref:System.Data.DataRow> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-863">If the command is set to `FirstReturnedRecord`, the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="9e23c-864">如果有输出参数，则将它们放在中 <xref:System.Data.DataRow> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-864">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="9e23c-865">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="9e23c-865">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="9e23c-866">调用 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="9e23c-866"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="9e23c-867">与关联的每个命令 <xref:System.Data.Common.DbDataAdapter> 通常都具有与之关联的参数集合。</span><span class="sxs-lookup"><span data-stu-id="9e23c-867">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="9e23c-868">通过 `SourceColumn` `SourceVersion` .NET Framework 数据提供程序的类的和属性，将参数映射到当前行 `Parameter` 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-868">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="9e23c-869">`SourceColumn` 引用 <xref:System.Data.DataTable> <xref:System.Data.Common.DbDataAdapter> 用于获取当前行的参数值的列。</span><span class="sxs-lookup"><span data-stu-id="9e23c-869">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="9e23c-870">`SourceColumn` 在应用了任何表映射之前引用未映射的列名称。</span><span class="sxs-lookup"><span data-stu-id="9e23c-870">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="9e23c-871">如果 `SourceColumn` 引用不存在的列，则执行的操作取决于下列值之一 <xref:System.Data.MissingMappingAction> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-871">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="9e23c-872">枚举值</span><span class="sxs-lookup"><span data-stu-id="9e23c-872">Enumeration value</span></span>|<span data-ttu-id="9e23c-873">采取的操作</span><span class="sxs-lookup"><span data-stu-id="9e23c-873">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="9e23c-874">如果不存在映射，请使用中的源列名称和表名称 <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-874">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="9e23c-875"><xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="9e23c-875">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="9e23c-876">当显式设置映射时，缺少输入参数的映射通常是由错误引起的。</span><span class="sxs-lookup"><span data-stu-id="9e23c-876">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="9e23c-877"><xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="9e23c-877">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="9e23c-878">`SourceColumn`属性还可用于将输出或输入/输出参数的值映射回 `DataSet` 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-878">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="9e23c-879">如果引用不存在的列，则会生成异常。</span><span class="sxs-lookup"><span data-stu-id="9e23c-879">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="9e23c-880">`SourceVersion`.NET Framework 数据提供程序的类的属性 `Parameter` 确定是使用列值的原始版本、当前版本还是建议的版本。</span><span class="sxs-lookup"><span data-stu-id="9e23c-880">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="9e23c-881">此功能通常用于在 UPDATE 语句的 WHERE 子句中包含原始值，以检查是否存在开放式并发冲突。</span><span class="sxs-lookup"><span data-stu-id="9e23c-881">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e23c-882">如果在更新行时出现错误，则会引发异常并中止执行更新。</span><span class="sxs-lookup"><span data-stu-id="9e23c-882">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="9e23c-883">若要在遇到错误时继续执行更新操作而不生成异常，请在 <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> 调用之前将属性设置为 `true` <xref:System.Data.Common.DbDataAdapter.Update%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-883">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="9e23c-884">您还可以在 DataAdapter 事件内每行响应错误 `RowUpdated` 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-884">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="9e23c-885">若要继续执行更新操作而不在事件中生成异常 `RowUpdated` ，请将 <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> 的属性设置 <xref:System.Data.Common.RowUpdatedEventArgs> 为 <xref:System.Data.UpdateStatus.Continue> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-885">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e23c-886">下面的示例使用派生类 <xref:System.Data.OleDb.OleDbDataAdapter> 来更新数据源。</span><span class="sxs-lookup"><span data-stu-id="9e23c-886">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e23c-887"><see cref="T:System.Data.DataSet" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="9e23c-887">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9e23c-888">源表无效。</span><span class="sxs-lookup"><span data-stu-id="9e23c-888">The source table is invalid.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="9e23c-889">不存在要更新的 <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="9e23c-889">No <see cref="T:System.Data.DataRow" /> exists to update.</span></span>  
  
<span data-ttu-id="9e23c-890">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9e23c-890">-or-</span></span> 
<span data-ttu-id="9e23c-891">不存在要更新的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="9e23c-891">No <see cref="T:System.Data.DataTable" /> exists to update.</span></span>  
  
<span data-ttu-id="9e23c-892">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9e23c-892">-or-</span></span> 
<span data-ttu-id="9e23c-893">不存在要用作源的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="9e23c-893">No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="9e23c-894">尝试执行 INSERT、UPDATE 或 DELETE 语句，但没有记录受到影响。</span><span class="sxs-lookup"><span data-stu-id="9e23c-894">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="9e23c-895">操作数据 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-895">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dbproviderfactories"><span data-ttu-id="9e23c-896">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-896">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-897">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-897">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public override int Update (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Update(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Update (dataSet As DataSet) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Update(System::Data::DataSet ^ dataSet);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataSet -&gt; int" Usage="dbDataAdapter.Update dataSet" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">M:System.Data.IDataAdapter.Update(System.Data.DataSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="9e23c-898">用于更新数据源的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="9e23c-898">The <see cref="T:System.Data.DataSet" /> used to update the data source.</span></span></param>
        <summary><span data-ttu-id="9e23c-899">通过为指定的 <see cref="T:System.Data.DataSet" /> 中的每个已插入、已更新或已删除的行执行相应的 INSERT、UPDATE 或 DELETE 语句来更新数据库中的值。</span><span class="sxs-lookup"><span data-stu-id="9e23c-899">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <returns><span data-ttu-id="9e23c-900"><see cref="T:System.Data.DataSet" /> 中成功更新的行数。</span><span class="sxs-lookup"><span data-stu-id="9e23c-900">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e23c-901">当应用程序调用 <xref:System.Data.Common.DbDataAdapter.Update%2A> 方法时，将 <xref:System.Data.Common.DbDataAdapter> 检查 <xref:System.Data.DataRow.RowState%2A> 属性，并根据中配置的索引的顺序，对每个行重复执行所需的 INSERT、UPDATE 或 DELETE 语句 <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-901">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="9e23c-902">例如， <xref:System.Data.Common.DbDataAdapter.Update%2A> 可能会执行 DELETE 语句，后跟 INSERT 语句，然后执行另一 delete 语句，因为中的行的顺序 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-902">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="9e23c-903">应注意的是，这些语句不作为批处理执行;每一行都单独更新。</span><span class="sxs-lookup"><span data-stu-id="9e23c-903">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="9e23c-904">应用程序可以 <xref:System.Data.DataSet.GetChanges%2A> 在以下情况下调用方法：例如，必须控制语句类型的序列 (例如，在更新) 之前插入。</span><span class="sxs-lookup"><span data-stu-id="9e23c-904">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="9e23c-905">有关详细信息，请参阅 [用 Dataadapter 更新数据源](/dotnet/framework/data/adonet/updating-data-sources-with-dataadapters)。</span><span class="sxs-lookup"><span data-stu-id="9e23c-905">For more information, see [Updating Data Sources with DataAdapters](/dotnet/framework/data/adonet/updating-data-sources-with-dataadapters).</span></span>  
  
 <span data-ttu-id="9e23c-906">如果尚未指定 INSERT、UPDATE 或 DELETE 语句，则该方法将 <xref:System.Data.Common.DbDataAdapter.Update%2A> 生成一个异常。</span><span class="sxs-lookup"><span data-stu-id="9e23c-906">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="9e23c-907">但是， <xref:System.Data.SqlClient.SqlCommandBuilder> <xref:System.Data.OleDb.OleDbCommandBuilder> 如果您设置了 `SelectCommand` .NET Framework 数据提供程序的属性，则可以创建或对象以自动为单表更新生成 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="9e23c-907">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="9e23c-908">然后， **CommandBuilder** 将生成未设置的任何其他 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="9e23c-908">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="9e23c-909">此代逻辑要求密钥列信息存在于中 <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-909">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="9e23c-910">有关详细信息，请参阅 [通过 Commandbuilder 生成命令](/dotnet/framework/data/adonet/generating-commands-with-commandbuilders)。</span><span class="sxs-lookup"><span data-stu-id="9e23c-910">For more information see [Generating Commands with CommandBuilders](/dotnet/framework/data/adonet/generating-commands-with-commandbuilders).</span></span>  
  
 <span data-ttu-id="9e23c-911">在 <xref:System.Data.Common.DbDataAdapter.Update%2A> 执行更新之前，方法将从第一个映射中列出的表中检索行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-911">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="9e23c-912"><xref:System.Data.Common.DbDataAdapter.Update%2A>然后，使用属性的值刷新该行 <xref:System.Data.IDbCommand.UpdatedRowSource%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-912">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="9e23c-913">将忽略返回的任何其他行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-913">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="9e23c-914">在将任何数据加载回后 <xref:System.Data.DataSet> ，将 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 引发事件，从而允许用户检查已协调的 <xref:System.Data.DataSet> 行和该命令返回的任何输出参数。</span><span class="sxs-lookup"><span data-stu-id="9e23c-914">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="9e23c-915">成功更新行后，将接受对该行所做的更改。</span><span class="sxs-lookup"><span data-stu-id="9e23c-915">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="9e23c-916">使用时 <xref:System.Data.Common.DbDataAdapter.Update%2A> ，执行顺序如下所示：</span><span class="sxs-lookup"><span data-stu-id="9e23c-916">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="9e23c-917">中的值 <xref:System.Data.DataRow> 将被移动到参数值中。</span><span class="sxs-lookup"><span data-stu-id="9e23c-917">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="9e23c-918">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="9e23c-918">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="9e23c-919">命令执行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-919">The command executes.</span></span>  
  
4.  <span data-ttu-id="9e23c-920">如果命令设置为 `FirstReturnedRecord` ，则将第一个返回的结果放置在中 <xref:System.Data.DataRow> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-920">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="9e23c-921">如果有输出参数，则将它们放在中 <xref:System.Data.DataRow> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-921">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="9e23c-922">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="9e23c-922">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="9e23c-923">调用 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="9e23c-923"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="9e23c-924">与关联的每个命令 <xref:System.Data.Common.DbDataAdapter> 通常都具有与之关联的参数集合。</span><span class="sxs-lookup"><span data-stu-id="9e23c-924">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="9e23c-925">通过 `SourceColumn` `SourceVersion` .NET Framework 数据提供程序的类的和属性，将参数映射到当前行 `Parameter` 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-925">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="9e23c-926">`SourceColumn` 引用 <xref:System.Data.DataTable> <xref:System.Data.Common.DbDataAdapter> 用于获取当前行的参数值的列。</span><span class="sxs-lookup"><span data-stu-id="9e23c-926">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="9e23c-927">`SourceColumn` 在应用了任何表映射之前引用未映射的列名称。</span><span class="sxs-lookup"><span data-stu-id="9e23c-927">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="9e23c-928">如果 `SourceColumn` 引用不存在的列，则执行的操作取决于下列值之一 <xref:System.Data.MissingMappingAction> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-928">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="9e23c-929">枚举值</span><span class="sxs-lookup"><span data-stu-id="9e23c-929">Enumeration value</span></span>|<span data-ttu-id="9e23c-930">采取的操作</span><span class="sxs-lookup"><span data-stu-id="9e23c-930">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="9e23c-931">如果不存在映射，请使用中的源列名称和表名称 <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-931">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="9e23c-932"><xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="9e23c-932">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="9e23c-933">当显式设置映射时，缺少输入参数的映射通常是由错误引起的。</span><span class="sxs-lookup"><span data-stu-id="9e23c-933">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="9e23c-934"><xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="9e23c-934">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="9e23c-935">`SourceColumn`属性还可用于将输出或输入/输出参数的值映射回 `DataSet` 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-935">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="9e23c-936">如果引用不存在的列，则会生成异常。</span><span class="sxs-lookup"><span data-stu-id="9e23c-936">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="9e23c-937">`SourceVersion`.NET Framework 数据提供程序的类的属性 `Parameter` 确定是使用列值的原始版本、当前版本还是建议的版本。</span><span class="sxs-lookup"><span data-stu-id="9e23c-937">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="9e23c-938">此功能通常用于在 UPDATE 语句的 WHERE 子句中包含原始值，以检查是否存在开放式并发冲突。</span><span class="sxs-lookup"><span data-stu-id="9e23c-938">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e23c-939">如果在更新行时出现错误，则会引发异常并中止执行更新。</span><span class="sxs-lookup"><span data-stu-id="9e23c-939">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="9e23c-940">若要在遇到错误时继续执行更新操作而不生成异常，请在 <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> 调用之前将属性设置为 `true` <xref:System.Data.Common.DbDataAdapter.Update%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-940">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="9e23c-941">您还可以在 DataAdapter 事件内每行响应错误 `RowUpdated` 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-941">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="9e23c-942">若要继续执行更新操作而不在事件中生成异常 `RowUpdated` ，请将 <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> 的属性设置 <xref:System.Data.Common.RowUpdatedEventArgs> 为 <xref:System.Data.UpdateStatus.Continue> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-942">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e23c-943">下面的示例使用派生类 <xref:System.Data.OleDb.OleDbDataAdapter> 来更新数据源。</span><span class="sxs-lookup"><span data-stu-id="9e23c-943">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9e23c-944">源表无效。</span><span class="sxs-lookup"><span data-stu-id="9e23c-944">The source table is invalid.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="9e23c-945">尝试执行 INSERT、UPDATE 或 DELETE 语句，但没有记录受到影响。</span><span class="sxs-lookup"><span data-stu-id="9e23c-945">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="9e23c-946">操作数据 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-946">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dbproviderfactories"><span data-ttu-id="9e23c-947">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-947">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-948">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-948">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (dataTable As DataTable) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Data::DataTable ^ dataTable);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataTable -&gt; int" Usage="dbDataAdapter.Update dataTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="9e23c-949">用于更新数据源的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="9e23c-949">The <see cref="T:System.Data.DataTable" /> used to update the data source.</span></span></param>
        <summary><span data-ttu-id="9e23c-950">通过为指定的 <see cref="T:System.Data.DataTable" /> 中的每个已插入、已更新或已删除的行执行相应的 INSERT、UPDATE 或 DELETE 语句来更新数据库中的值。</span><span class="sxs-lookup"><span data-stu-id="9e23c-950">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <returns><span data-ttu-id="9e23c-951"><see cref="T:System.Data.DataTable" /> 中成功更新的行数。</span><span class="sxs-lookup"><span data-stu-id="9e23c-951">The number of rows successfully updated from the <see cref="T:System.Data.DataTable" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e23c-952">当应用程序调用 <xref:System.Data.Common.DbDataAdapter.Update%2A> 方法时，将 <xref:System.Data.Common.DbDataAdapter> 检查 <xref:System.Data.DataRow.RowState%2A> 属性，并根据中配置的索引的顺序，对每个行重复执行所需的 INSERT、UPDATE 或 DELETE 语句 <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-952">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="9e23c-953">例如， <xref:System.Data.Common.DbDataAdapter.Update%2A> 可能会执行 DELETE 语句，后跟 INSERT 语句，然后执行另一 delete 语句，因为中的行的顺序 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-953">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="9e23c-954">应注意的是，这些语句不作为批处理执行;每一行都单独更新。</span><span class="sxs-lookup"><span data-stu-id="9e23c-954">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="9e23c-955">应用程序可以 <xref:System.Data.DataSet.GetChanges%2A> 在以下情况下调用方法：例如，必须控制语句类型的序列 (例如，在更新) 之前插入。</span><span class="sxs-lookup"><span data-stu-id="9e23c-955">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="9e23c-956">有关详细信息，请参阅 [用 Dataadapter 更新数据源](/dotnet/framework/data/adonet/updating-data-sources-with-dataadapters)。</span><span class="sxs-lookup"><span data-stu-id="9e23c-956">For more information, see [Updating Data Sources with DataAdapters](/dotnet/framework/data/adonet/updating-data-sources-with-dataadapters).</span></span>  
  
 <span data-ttu-id="9e23c-957">如果尚未指定 INSERT、UPDATE 或 DELETE 语句，则该方法将 <xref:System.Data.Common.DbDataAdapter.Update%2A> 生成一个异常。</span><span class="sxs-lookup"><span data-stu-id="9e23c-957">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="9e23c-958">但是， <xref:System.Data.SqlClient.SqlCommandBuilder> <xref:System.Data.OleDb.OleDbCommandBuilder> 如果您设置了 `SelectCommand` .NET Framework 数据提供程序的属性，则可以创建或对象以自动为单表更新生成 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="9e23c-958">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="9e23c-959">然后， **CommandBuilder** 将生成未设置的任何其他 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="9e23c-959">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="9e23c-960">此代逻辑要求密钥列信息存在于中 <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-960">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="9e23c-961">有关详细信息，请参阅 [通过 Commandbuilder 生成命令](/dotnet/framework/data/adonet/generating-commands-with-commandbuilders)。</span><span class="sxs-lookup"><span data-stu-id="9e23c-961">For more information see [Generating Commands with CommandBuilders](/dotnet/framework/data/adonet/generating-commands-with-commandbuilders).</span></span>  
  
 <span data-ttu-id="9e23c-962">在 <xref:System.Data.Common.DbDataAdapter.Update%2A> 执行更新之前，方法将从第一个映射中列出的表中检索行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-962">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="9e23c-963"><xref:System.Data.Common.DbDataAdapter.Update%2A>然后，使用属性的值刷新该行 <xref:System.Data.IDbCommand.UpdatedRowSource%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-963">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="9e23c-964">将忽略返回的任何其他行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-964">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="9e23c-965">在将任何数据加载回后 <xref:System.Data.DataSet> ，将 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 引发事件，从而允许用户检查已协调的 <xref:System.Data.DataSet> 行和该命令返回的任何输出参数。</span><span class="sxs-lookup"><span data-stu-id="9e23c-965">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="9e23c-966">成功更新行后，将接受对该行所做的更改。</span><span class="sxs-lookup"><span data-stu-id="9e23c-966">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="9e23c-967">使用时 <xref:System.Data.Common.DbDataAdapter.Update%2A> ，执行顺序如下所示：</span><span class="sxs-lookup"><span data-stu-id="9e23c-967">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="9e23c-968">中的值 <xref:System.Data.DataRow> 将被移动到参数值中。</span><span class="sxs-lookup"><span data-stu-id="9e23c-968">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="9e23c-969">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="9e23c-969">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="9e23c-970">命令执行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-970">The command executes.</span></span>  
  
4.  <span data-ttu-id="9e23c-971">如果命令设置为 `FirstReturnedRecord` ，则将第一个返回的结果放置在中 <xref:System.Data.DataRow> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-971">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="9e23c-972">如果有输出参数，则将它们放在中 <xref:System.Data.DataRow> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-972">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="9e23c-973">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="9e23c-973">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="9e23c-974">调用 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="9e23c-974"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="9e23c-975">与关联的每个命令 <xref:System.Data.Common.DbDataAdapter> 通常都具有与之关联的参数集合。</span><span class="sxs-lookup"><span data-stu-id="9e23c-975">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="9e23c-976">通过 `SourceColumn` `SourceVersion` .NET Framework 数据提供程序的类的和属性，将参数映射到当前行 `Parameter` 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-976">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="9e23c-977">`SourceColumn` 引用 <xref:System.Data.DataTable> <xref:System.Data.Common.DbDataAdapter> 用于获取当前行的参数值的列。</span><span class="sxs-lookup"><span data-stu-id="9e23c-977">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="9e23c-978">`SourceColumn` 在应用了任何表映射之前引用未映射的列名称。</span><span class="sxs-lookup"><span data-stu-id="9e23c-978">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="9e23c-979">如果 `SourceColumn` 引用不存在的列，则执行的操作取决于下列值之一 <xref:System.Data.MissingMappingAction> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-979">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="9e23c-980">枚举值</span><span class="sxs-lookup"><span data-stu-id="9e23c-980">Enumeration value</span></span>|<span data-ttu-id="9e23c-981">采取的操作</span><span class="sxs-lookup"><span data-stu-id="9e23c-981">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="9e23c-982">如果不存在映射，请使用中的源列名称和表名称 <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-982">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="9e23c-983"><xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="9e23c-983">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="9e23c-984">当显式设置映射时，缺少输入参数的映射通常是由错误引起的。</span><span class="sxs-lookup"><span data-stu-id="9e23c-984">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="9e23c-985"><xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="9e23c-985">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="9e23c-986">`SourceColumn`属性还可用于将输出或输入/输出参数的值映射回 `DataSet` 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-986">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="9e23c-987">如果引用不存在的列，则会生成异常。</span><span class="sxs-lookup"><span data-stu-id="9e23c-987">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="9e23c-988">`SourceVersion`.NET Framework 数据提供程序的类的属性 `Parameter` 确定是使用列值的原始版本、当前版本还是建议的版本。</span><span class="sxs-lookup"><span data-stu-id="9e23c-988">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="9e23c-989">此功能通常用于在 UPDATE 语句的 WHERE 子句中包含原始值，以检查是否存在开放式并发冲突。</span><span class="sxs-lookup"><span data-stu-id="9e23c-989">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e23c-990">如果在更新行时出现错误，则会引发异常并中止执行更新。</span><span class="sxs-lookup"><span data-stu-id="9e23c-990">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="9e23c-991">若要在遇到错误时继续执行更新操作而不生成异常，请在 <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> 调用之前将属性设置为 `true` <xref:System.Data.Common.DbDataAdapter.Update%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-991">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="9e23c-992">您还可以在 DataAdapter 事件内每行响应错误 `RowUpdated` 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-992">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="9e23c-993">若要继续执行更新操作而不在事件中生成异常 `RowUpdated` ，请将 <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> 的属性设置 <xref:System.Data.Common.RowUpdatedEventArgs> 为 <xref:System.Data.UpdateStatus.Continue> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-993">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e23c-994">下面的示例使用派生类 <xref:System.Data.OleDb.OleDbDataAdapter> 来更新数据源。</span><span class="sxs-lookup"><span data-stu-id="9e23c-994">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e23c-995"><see cref="T:System.Data.DataSet" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="9e23c-995">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9e23c-996">源表无效。</span><span class="sxs-lookup"><span data-stu-id="9e23c-996">The source table is invalid.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="9e23c-997">不存在要更新的 <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="9e23c-997">No <see cref="T:System.Data.DataRow" /> exists to update.</span></span>  
  
<span data-ttu-id="9e23c-998">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9e23c-998">-or-</span></span> 
<span data-ttu-id="9e23c-999">不存在要更新的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="9e23c-999">No <see cref="T:System.Data.DataTable" /> exists to update.</span></span>  
  
<span data-ttu-id="9e23c-1000">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9e23c-1000">-or-</span></span> 
<span data-ttu-id="9e23c-1001">不存在要用作源的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1001">No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="9e23c-1002">尝试执行 INSERT、UPDATE 或 DELETE 语句，但没有记录受到影响。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1002">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="9e23c-1003">操作数据 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-1003">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dbproviderfactories"><span data-ttu-id="9e23c-1004">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-1004">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-1005">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-1005">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="protected virtual int Update (System.Data.DataRow[] dataRows, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Update(class System.Data.DataRow[] dataRows, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Update (dataRows As DataRow(), tableMapping As DataTableMapping) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Update(cli::array &lt;System::Data::DataRow ^&gt; ^ dataRows, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataRow[] * System.Data.Common.DataTableMapping -&gt; int" Usage="dbDataAdapter.Update (dataRows, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRows" Type="System.Data.DataRow[]" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRows"><span data-ttu-id="9e23c-1006">用于更新数据源的 <see cref="T:System.Data.DataRow" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1006">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</span></span></param>
        <param name="tableMapping"><span data-ttu-id="9e23c-1007">要使用的 <see cref="P:System.Data.IDataAdapter.TableMappings" /> 集合。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1007">The <see cref="P:System.Data.IDataAdapter.TableMappings" /> collection to use.</span></span></param>
        <summary><span data-ttu-id="9e23c-1008">通过为指定的 <see cref="T:System.Data.DataSet" /> 对象数组中的每个已插入、已更新或已删除的行执行相应的 INSERT、UPDATE 或 DELETE 语句来更新数据库中的值。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1008">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array of <see cref="T:System.Data.DataSet" /> objects.</span></span></summary>
        <returns><span data-ttu-id="9e23c-1009"><see cref="T:System.Data.DataSet" /> 中成功更新的行数。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1009">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e23c-1010">当应用程序调用 <xref:System.Data.Common.DbDataAdapter.Update%2A> 方法时，将 <xref:System.Data.Common.DbDataAdapter> 检查 <xref:System.Data.DataRow.RowState%2A> 属性，并根据中配置的索引的顺序，对每个行重复执行所需的 INSERT、UPDATE 或 DELETE 语句 <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1010">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="9e23c-1011">例如， <xref:System.Data.Common.DbDataAdapter.Update%2A> 可能会执行 DELETE 语句，后跟 INSERT 语句，然后执行另一 delete 语句，因为中的行的顺序 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1011">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="9e23c-1012">应注意的是，这些语句不作为批处理执行;每一行都单独更新。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1012">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="9e23c-1013">应用程序可以 <xref:System.Data.DataSet.GetChanges%2A> 在以下情况下调用方法：例如，必须控制语句类型的序列 (例如，在更新) 之前插入。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1013">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="9e23c-1014">有关详细信息，请参阅 [用 Dataadapter 更新数据源](/dotnet/framework/data/adonet/updating-data-sources-with-dataadapters)。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1014">For more information, see [Updating Data Sources with DataAdapters](/dotnet/framework/data/adonet/updating-data-sources-with-dataadapters).</span></span>  
  
 <span data-ttu-id="9e23c-1015">如果尚未指定 INSERT、UPDATE 或 DELETE 语句，则该方法将 <xref:System.Data.Common.DbDataAdapter.Update%2A> 生成一个异常。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1015">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="9e23c-1016">但是， <xref:System.Data.SqlClient.SqlCommandBuilder> <xref:System.Data.OleDb.OleDbCommandBuilder> 如果您设置了 `SelectCommand` .NET Framework 数据提供程序的属性，则可以创建或对象以自动为单表更新生成 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1016">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="9e23c-1017">然后， **CommandBuilder** 将生成未设置的任何其他 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1017">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="9e23c-1018">此代逻辑要求密钥列信息存在于中 <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1018">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="9e23c-1019">有关详细信息，请参阅 [通过 Commandbuilder 生成命令](/dotnet/framework/data/adonet/generating-commands-with-commandbuilders)。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1019">For more information see [Generating Commands with CommandBuilders](/dotnet/framework/data/adonet/generating-commands-with-commandbuilders).</span></span>  
  
 <span data-ttu-id="9e23c-1020">在 <xref:System.Data.Common.DbDataAdapter.Update%2A> 执行更新之前，方法将从第一个映射中列出的表中检索行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1020">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="9e23c-1021"><xref:System.Data.Common.DbDataAdapter.Update%2A>然后，使用属性的值刷新该行 <xref:System.Data.IDbCommand.UpdatedRowSource%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1021">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="9e23c-1022">将忽略返回的任何其他行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1022">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="9e23c-1023">在将任何数据加载回后 <xref:System.Data.DataSet> ，将 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 引发事件，从而允许用户检查已协调的 <xref:System.Data.DataSet> 行和该命令返回的任何输出参数。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1023">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="9e23c-1024">成功更新行后，将接受对该行所做的更改。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1024">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="9e23c-1025">使用时 <xref:System.Data.Common.DbDataAdapter.Update%2A> ，执行顺序如下所示：</span><span class="sxs-lookup"><span data-stu-id="9e23c-1025">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="9e23c-1026">中的值 <xref:System.Data.DataRow> 将被移动到参数值中。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1026">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="9e23c-1027">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1027">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="9e23c-1028">命令执行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1028">The command executes.</span></span>  
  
4.  <span data-ttu-id="9e23c-1029">如果命令设置为 `FirstReturnedRecord` ，则将第一个返回的结果放置在中 <xref:System.Data.DataRow> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1029">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="9e23c-1030">如果有输出参数，则将它们放在中 <xref:System.Data.DataRow> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1030">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="9e23c-1031">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1031">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="9e23c-1032">调用 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1032"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="9e23c-1033">与关联的每个命令 <xref:System.Data.Common.DbDataAdapter> 通常都具有与之关联的参数集合。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1033">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="9e23c-1034">通过 `SourceColumn` `SourceVersion` .NET Framework 数据提供程序的类的和属性，将参数映射到当前行 `Parameter` 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1034">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="9e23c-1035">`SourceColumn` 引用 <xref:System.Data.DataTable> <xref:System.Data.Common.DbDataAdapter> 用于获取当前行的参数值的列。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1035">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="9e23c-1036">`SourceColumn` 在应用了任何表映射之前引用未映射的列名称。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1036">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="9e23c-1037">如果 `SourceColumn` 引用不存在的列，则执行的操作取决于下列值之一 <xref:System.Data.MissingMappingAction> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1037">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="9e23c-1038">枚举值</span><span class="sxs-lookup"><span data-stu-id="9e23c-1038">Enumeration value</span></span>|<span data-ttu-id="9e23c-1039">采取的操作</span><span class="sxs-lookup"><span data-stu-id="9e23c-1039">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="9e23c-1040">如果不存在映射，请使用中的源列名称和表名称 <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1040">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="9e23c-1041"><xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1041">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="9e23c-1042">当显式设置映射时，缺少输入参数的映射通常是由错误引起的。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1042">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="9e23c-1043"><xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1043">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="9e23c-1044">`SourceColumn`属性还可用于将输出或输入/输出参数的值映射回 `DataSet` 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1044">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="9e23c-1045">如果引用不存在的列，则会生成异常。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1045">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="9e23c-1046">`SourceVersion`.NET Framework 数据提供程序的类的属性 `Parameter` 确定是使用列值的原始版本、当前版本还是建议的版本。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1046">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="9e23c-1047">此功能通常用于在 UPDATE 语句的 WHERE 子句中包含原始值，以检查是否存在开放式并发冲突。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1047">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e23c-1048">如果在更新行时出现错误，则会引发异常并中止执行更新。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1048">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="9e23c-1049">若要在遇到错误时继续执行更新操作而不生成异常，请在 <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> 调用之前将属性设置为 `true` <xref:System.Data.Common.DbDataAdapter.Update%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1049">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="9e23c-1050">您还可以在 DataAdapter 事件内每行响应错误 `RowUpdated` 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1050">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="9e23c-1051">若要继续执行更新操作而不在事件中生成异常 `RowUpdated` ，请将 <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> 的属性设置 <xref:System.Data.Common.RowUpdatedEventArgs> 为 <xref:System.Data.UpdateStatus.Continue> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1051">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e23c-1052"><see cref="T:System.Data.DataSet" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1052">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9e23c-1053">源表无效。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1053">The source table is invalid.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="9e23c-1054">不存在要更新的 <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1054">No <see cref="T:System.Data.DataRow" /> exists to update.</span></span>  
  
<span data-ttu-id="9e23c-1055">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9e23c-1055">-or-</span></span> 
<span data-ttu-id="9e23c-1056">不存在要更新的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1056">No <see cref="T:System.Data.DataTable" /> exists to update.</span></span>  
  
<span data-ttu-id="9e23c-1057">- 或 -</span><span class="sxs-lookup"><span data-stu-id="9e23c-1057">-or-</span></span> 
<span data-ttu-id="9e23c-1058">不存在要用作源的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1058">No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="9e23c-1059">尝试执行 INSERT、UPDATE 或 DELETE 语句，但没有记录受到影响。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1059">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="9e23c-1060">操作数据 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-1060">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dbproviderfactories"><span data-ttu-id="9e23c-1061">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-1061">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-1062">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-1062">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataSet dataSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataSet dataSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (dataSet As DataSet, srcTable As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Data::DataSet ^ dataSet, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataSet * string -&gt; int" Usage="dbDataAdapter.Update (dataSet, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="9e23c-1063">用于更新数据源的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1063">The <see cref="T:System.Data.DataSet" /> to use to update the data source.</span></span></param>
        <param name="srcTable"><span data-ttu-id="9e23c-1064">用于表映射的源表的名称。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1064">The name of the source table to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="9e23c-1065">通过为具有指定名称 <see cref="T:System.Data.DataSet" /> 的 <see cref="T:System.Data.DataTable" /> 中的每个已插入、已更新或已删除的行执行相应的 INSERT、UPDATE 或 DELETE 语句来更新数据库中的值。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1065">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" /> with the specified <see cref="T:System.Data.DataTable" /> name.</span></span></summary>
        <returns><span data-ttu-id="9e23c-1066"><see cref="T:System.Data.DataSet" /> 中成功更新的行数。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1066">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e23c-1067">当应用程序调用 <xref:System.Data.Common.DbDataAdapter.Update%2A> 方法时，将 <xref:System.Data.Common.DbDataAdapter> 检查 <xref:System.Data.DataRow.RowState%2A> 属性，并根据中配置的索引的顺序，对每个行重复执行所需的 INSERT、UPDATE 或 DELETE 语句 <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1067">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="9e23c-1068">例如， <xref:System.Data.Common.DbDataAdapter.Update%2A> 可能会执行 DELETE 语句，后跟 INSERT 语句，然后执行另一 delete 语句，因为中的行的顺序 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1068">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="9e23c-1069">应注意的是，这些语句不作为批处理执行;每一行都单独更新。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1069">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="9e23c-1070">应用程序可以 <xref:System.Data.DataSet.GetChanges%2A> 在以下情况下调用方法：在此情况下，必须控制语句类型的序列 (例如，在 UPDATE) 之前插入。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1070">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERT before UPDATE).</span></span> <span data-ttu-id="9e23c-1071">有关详细信息，请参阅 [用 Dataadapter 更新数据源](/dotnet/framework/data/adonet/updating-data-sources-with-dataadapters)。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1071">For more information, see [Updating Data Sources with DataAdapters](/dotnet/framework/data/adonet/updating-data-sources-with-dataadapters).</span></span>  
  
 <span data-ttu-id="9e23c-1072">如果尚未指定 INSERT、UPDATE 或 DELETE 语句，则该方法将 <xref:System.Data.Common.DbDataAdapter.Update%2A> 生成一个异常。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1072">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="9e23c-1073">但是， <xref:System.Data.SqlClient.SqlCommandBuilder> <xref:System.Data.OleDb.OleDbCommandBuilder> 如果您设置了 `SelectCommand` .NET Framework 数据提供程序的属性，则可以创建或对象以自动为单表更新生成 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1073">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="9e23c-1074">然后， **CommandBuilder** 将生成未设置的任何其他 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1074">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="9e23c-1075">此代逻辑要求密钥列信息存在于中 <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1075">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="9e23c-1076">有关详细信息，请参阅 [通过 Commandbuilder 生成命令](/dotnet/framework/data/adonet/generating-commands-with-commandbuilders)。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1076">For more information see [Generating Commands with CommandBuilders](/dotnet/framework/data/adonet/generating-commands-with-commandbuilders).</span></span>  
  
 <span data-ttu-id="9e23c-1077"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法支持 <xref:System.Data.DataSet> 包含多个对象，这些 <xref:System.Data.DataTable> 对象的名称仅区分大小写。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1077">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="9e23c-1078">如果有多个同名但大小写不同的表存在于中， `DataSet` 则 <xref:System.Data.Common.DbDataAdapter.Update%2A> 执行区分大小写的比较来查找相应的表，如果不存在精确匹配，则会生成异常。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1078">When multiple tables with the same name, but different case, exist in a `DataSet`, <xref:System.Data.Common.DbDataAdapter.Update%2A> performs a case-sensitive comparison to find the corresponding table, and generates an exception if no exact match exists.</span></span> <span data-ttu-id="9e23c-1079">下面的 c # 代码阐释了这一行为。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1079">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet ds = new DataSet();  
 ds.Tables.Add("aaa");  
 ds.Tables.Add("AAA");  
 adapter.Update(ds, "aaa"); // Updates "aaa", which already exists in the DataSet.  
 adapter.Update(ds, "AAA"); // Updates "AAA", which already exists in the DataSet.  
    adapter.Update(ds, "Aaa"); // Results in an exception.  
```  
  
 <span data-ttu-id="9e23c-1080">如果 <xref:System.Data.Common.DbDataAdapter.Update%2A> 调用，并且 <xref:System.Data.DataSet> 仅包含 <xref:System.Data.DataTable> 其名称仅大小写不同的名称， <xref:System.Data.DataTable> 则会更新。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1080">If <xref:System.Data.Common.DbDataAdapter.Update%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="9e23c-1081">在这种情况下，比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1081">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="9e23c-1082">下面的 c # 代码阐释了这一行为。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1082">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
    adapter.Update(dataset, "AAA"); // Updates table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="9e23c-1083">在 <xref:System.Data.Common.DbDataAdapter.Update%2A> 执行更新之前，方法将从第一个映射中列出的表中检索行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1083">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="9e23c-1084"><xref:System.Data.Common.DbDataAdapter.Update%2A>然后，使用属性的值刷新该行 <xref:System.Data.IDbCommand.UpdatedRowSource%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1084">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="9e23c-1085">将忽略返回的任何其他行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1085">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="9e23c-1086">在将任何数据加载回后 <xref:System.Data.DataSet> ，将 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 引发事件，从而允许用户检查已协调的 <xref:System.Data.DataSet> 行和该命令返回的任何输出参数。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1086">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="9e23c-1087">成功更新行后，将接受对该行所做的更改。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1087">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="9e23c-1088">使用时 <xref:System.Data.Common.DbDataAdapter.Update%2A> ，执行顺序如下所示：</span><span class="sxs-lookup"><span data-stu-id="9e23c-1088">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="9e23c-1089">中的值 <xref:System.Data.DataRow> 将被移动到参数值中。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1089">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="9e23c-1090">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1090">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="9e23c-1091">命令执行。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1091">The command executes.</span></span>  
  
4.  <span data-ttu-id="9e23c-1092">如果命令设置为 `FirstReturnedRecord` ，则将第一个返回的结果放置在中 <xref:System.Data.DataRow> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1092">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="9e23c-1093">如果有输出参数，则将它们放在中 <xref:System.Data.DataRow> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1093">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="9e23c-1094">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1094">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="9e23c-1095">调用 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1095"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="9e23c-1096">与关联的每个命令 <xref:System.Data.Common.DbDataAdapter> 通常都具有与之关联的参数集合。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1096">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="9e23c-1097">通过 `SourceColumn` `SourceVersion` .NET Framework 数据提供程序的类的和属性，将参数映射到当前行 `Parameter` 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1097">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="9e23c-1098">`SourceColumn` 引用 <xref:System.Data.DataTable> <xref:System.Data.Common.DbDataAdapter> 用于获取当前行的参数值的列。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1098">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="9e23c-1099">`SourceColumn` 在应用了任何表映射之前引用未映射的列名称。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1099">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="9e23c-1100">如果 `SourceColumn` 引用不存在的列，则执行的操作取决于下列值之一 <xref:System.Data.MissingMappingAction> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1100">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="9e23c-1101">枚举值</span><span class="sxs-lookup"><span data-stu-id="9e23c-1101">Enumeration value</span></span>|<span data-ttu-id="9e23c-1102">采取的操作</span><span class="sxs-lookup"><span data-stu-id="9e23c-1102">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="9e23c-1103">如果不存在映射，请使用中的源列名称和表名称 <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1103">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="9e23c-1104"><xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1104">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="9e23c-1105">当显式设置映射时，缺少输入参数的映射通常是由错误引起的。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1105">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="9e23c-1106"><xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1106">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="9e23c-1107">`SourceColumn`属性还可用于将输出或输入/输出参数的值映射回 `DataSet` 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1107">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="9e23c-1108">如果引用不存在的列，则会生成异常。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1108">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="9e23c-1109">`SourceVersion`.NET Framework 数据提供程序的类的属性 `Parameter` 确定是使用列值的原始版本、当前版本还是建议的版本。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1109">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="9e23c-1110">此功能通常用于在 UPDATE 语句的 WHERE 子句中包含原始值，以检查是否存在开放式并发冲突。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1110">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e23c-1111">如果在更新行时出现错误，则会引发异常并中止执行更新。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1111">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="9e23c-1112">若要在遇到错误时继续执行更新操作而不生成异常，请在 <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> 调用之前将属性设置为 `true` <xref:System.Data.Common.DbDataAdapter.Update%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1112">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="9e23c-1113">您还可以在 DataAdapter 事件内每行响应错误 `RowUpdated` 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1113">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="9e23c-1114">若要继续执行更新操作而不在事件中生成异常 `RowUpdated` ，请将 <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> 的属性设置 <xref:System.Data.Common.RowUpdatedEventArgs> 为 <xref:System.Data.UpdateStatus.Continue> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1114">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e23c-1115">下面的示例使用派生类 <xref:System.Data.OleDb.OleDbDataAdapter> 来更新数据源。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1115">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update3/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e23c-1116"><see cref="T:System.Data.DataSet" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1116">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9e23c-1117">源表无效。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1117">The source table is invalid.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="9e23c-1118">尝试执行 INSERT、UPDATE 或 DELETE 语句，但没有记录受到影响。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1118">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="9e23c-1119">操作数据 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-1119">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dbproviderfactories"><span data-ttu-id="9e23c-1120">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-1120">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-1121">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-1121">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UpdateBatchSize">
      <MemberSignature Language="C#" Value="public virtual int UpdateBatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UpdateBatchSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UpdateBatchSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int UpdateBatchSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateBatchSize : int with get, set" Usage="System.Data.Common.DbDataAdapter.UpdateBatchSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9e23c-1122">获取或设置一个值，该值启用或禁用批处理支持，并且指定可在一次批处理中执行的命令的数量。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1122">Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.</span></span></summary>
        <value><span data-ttu-id="9e23c-1123">每个批处理要处理的行数。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1123">The number of rows to process per batch.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="9e23c-1124">值为</span><span class="sxs-lookup"><span data-stu-id="9e23c-1124">Value is</span></span> 
 </term><description> <span data-ttu-id="9e23c-1125">效果</span><span class="sxs-lookup"><span data-stu-id="9e23c-1125">Effect</span></span> 
 </description></listheader><item><term> <span data-ttu-id="9e23c-1126">0</span><span class="sxs-lookup"><span data-stu-id="9e23c-1126">0</span></span> 
 </term><description> <span data-ttu-id="9e23c-1127">批大小没有限制。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1127">There is no limit on the batch size.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="9e23c-1128">1</span><span class="sxs-lookup"><span data-stu-id="9e23c-1128">1</span></span> 
 </term><description> <span data-ttu-id="9e23c-1129">禁用批量更新。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1129">Disables batch updating.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="9e23c-1130">&gt; 2</span><span class="sxs-lookup"><span data-stu-id="9e23c-1130">&gt; 1</span></span> 
 </term><description> <span data-ttu-id="9e23c-1131">更改是使用 <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" /> 操作的批处理一次性发送的。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1131">Changes are sent using batches of <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" /> operations at a time.</span></span>  
  
 </description></item></list>  

 <span data-ttu-id="9e23c-1132">将此值设置为1以外的值时，所有与关联的命令都 <see cref="T:System.Data.Common.DbDataAdapter" /> 必须 <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> 将其属性设置为 **None** 或 **OutputParameters**。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1132">When setting this to a value other than 1, all the commands associated with the <see cref="T:System.Data.Common.DbDataAdapter" /> must have their <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> property set to **None** or **OutputParameters**.</span></span> <span data-ttu-id="9e23c-1133">否则，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1133">An exception will be thrown otherwise.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e23c-1134">使用 <xref:System.Data.Common.DbDataAdapter.UpdateBatchSize%2A> 属性可使用中的更改更新数据源 <xref:System.Data.DataSet> 。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1134">Use the <xref:System.Data.Common.DbDataAdapter.UpdateBatchSize%2A> property to update a data source with changes from a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="9e23c-1135">如果数据访问接口支持批处理，则这可能会减少到服务器的往返次数，从而提高应用程序的性能。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1135">If the data provider supports batch processing, this can increase application performance by reducing the number of round-trips to the server.</span></span> <span data-ttu-id="9e23c-1136">在 ADO.NET 2.0 中，SQL Server (SqlClient) 和 Oracle (System.data.oracleclient) 的 .NET 数据提供程序支持该属性。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1136">In ADO.NET 2.0, this property is supported for the .NET data providers for SQL Server (SqlClient) and Oracle (OracleClient).</span></span>  
  
 <span data-ttu-id="9e23c-1137">执行极大的批处理会降低性能。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1137">Executing an extremely large batch could decrease performance.</span></span> <span data-ttu-id="9e23c-1138">因此，在实现应用程序前应进行测试以得到最佳的批大小。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1138">Therefore, you should test for the optimum batch size setting before implementing your application.</span></span>  
  
 <span data-ttu-id="9e23c-1139"><xref:System.ArgumentOutOfRangeException>如果将值设置为小于零的数字，将引发。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1139">An <xref:System.ArgumentOutOfRangeException> will be thrown if the value is set to a number less than zero.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="9e23c-1140">操作数据 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-1140">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dbproviderfactories"><span data-ttu-id="9e23c-1141">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-1141">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-1142">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-1142">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand? UpdateCommand { get; set; }" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ UpdateCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.UpdateCommand" />
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand UpdateCommand { get; set; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9e23c-1143">获取或设置用于更新数据源中的记录的命令。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1143">Gets or sets a command used to update records in the data source.</span></span></summary>
        <value><span data-ttu-id="9e23c-1144">在 <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />，它针对数据集中已修改的行更新数据源中的记录。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1144">A <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e23c-1145">在过程中 <xref:System.Data.Common.DbDataAdapter.Update%2A> ，如果未设置此属性，并且主键信息存在于中 <xref:System.Data.DataSet> ，则 <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> 将自动生成。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1145">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> will be automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e23c-1146">下面的示例创建派生类 <xref:System.Data.OleDb.OleDbDataAdapter> 并设置其一些属性。</span><span class="sxs-lookup"><span data-stu-id="9e23c-1146">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/retrieving-and-modifying-data"><span data-ttu-id="9e23c-1147">操作数据 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-1147">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/dbproviderfactories"><span data-ttu-id="9e23c-1148">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="9e23c-1148">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ado-net-overview"><span data-ttu-id="9e23c-1149">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="9e23c-1149">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
