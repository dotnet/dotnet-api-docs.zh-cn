<Type Name="DbColumn" FullName="System.Data.Common.DbColumn">
  <Metadata><Meta Name="ms.openlocfilehash" Value="616d991fc857c55c4ac848f24a04ac53fb954c18" /><Meta Name="ms.sourcegitcommit" Value="ec905a25e6dd05a6a3ffa7f30bf59f3095a8cd67" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/01/2020" /><Meta Name="ms.locfileid" Value="89248819" /></Metadata><TypeSignature Language="C#" Value="public abstract class DbColumn" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbColumn extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbColumn" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbColumn" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbColumn abstract" />
  <TypeSignature Language="F#" Value="type DbColumn = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Data.Common" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netstandard-2.0">
      <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示数据源中的列。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbColumn.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbColumn();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Data.Common.DbColumn" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDBNull">
      <MemberSignature Language="C#" Value="public bool? AllowDBNull { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; AllowDBNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbColumn.AllowDBNull" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDBNull As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:  property Nullable&lt;bool&gt; AllowDBNull {  public:&#xA;Nullable&lt;bool&gt; get(); protected:&#xA; void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDBNull : Nullable&lt;bool&gt; with get, set" Usage="System.Data.Common.DbColumn.AllowDBNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取可为 null 的布尔值，该值指示此列中是否允许 <see langword="DBNull" /> 值，或者在未设置任何值时返回 <see langword="null" />。 在派生类中重写时，可设置为 <see langword="true" /> 或 <see langword="false" />，指示此列中是否允许 <see langword="DBNull" /> 值，也可设置为 <see langword="null" />（在 Visual Basic 中为 <see langword="Nothing" />）。</summary>
        <value>如果此列中允许 <see langword="DBNull" /> 值，则返回 <see langword="true" />，否则，返回 <see langword="false" />。 如果未设置任何值，则返回空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseCatalogName">
      <MemberSignature Language="C#" Value="public string BaseCatalogName { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseCatalogName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbColumn.BaseCatalogName" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseCatalogName As String" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::String ^ BaseCatalogName {  public:&#xA;System::String ^ get(); protected:&#xA; void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseCatalogName : string with get, set" Usage="System.Data.Common.DbColumn.BaseCatalogName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与数据源关联的目录；否则，如果未设置任何值，则为 <see langword="null" />。 在派生类中重写时，可设置为目录名称或 <see langword="null" />。</summary>
        <value>与数据源关联的目录名称；否则，如果未设置任何值，则为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseColumnName">
      <MemberSignature Language="C#" Value="public string BaseColumnName { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseColumnName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbColumn.BaseColumnName" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseColumnName As String" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::String ^ BaseColumnName {  public:&#xA;System::String ^ get(); protected:&#xA; void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseColumnName : string with get, set" Usage="System.Data.Common.DbColumn.BaseColumnName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取列名称；否则，如果未设置任何值，则为 <see langword="null" />。 在派生类中重写时，可设置为列名称或 <see langword="null" />。</summary>
        <value>基列名称；否则，如果未设置任何值，则为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseSchemaName">
      <MemberSignature Language="C#" Value="public string BaseSchemaName { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseSchemaName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbColumn.BaseSchemaName" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseSchemaName As String" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::String ^ BaseSchemaName {  public:&#xA;System::String ^ get(); protected:&#xA; void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseSchemaName : string with get, set" Usage="System.Data.Common.DbColumn.BaseSchemaName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与数据源关联的架构；否则，如果未设置任何值，则为 <see langword="null" />。 在派生类中重写时，可设置为架构名称或 <see langword="null" />。</summary>
        <value>与数据源关联的架构名称；否则，如果未设置任何值，则为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseServerName">
      <MemberSignature Language="C#" Value="public string BaseServerName { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseServerName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbColumn.BaseServerName" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseServerName As String" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::String ^ BaseServerName {  public:&#xA;System::String ^ get(); protected:&#xA; void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseServerName : string with get, set" Usage="System.Data.Common.DbColumn.BaseServerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与列关联的服务器名称；否则，如果未设置任何值，则为 <see langword="null" />。 在派生类中重写时，可设置为服务器名称或 <see langword="null" />。</summary>
        <value>与列关联的服务器名称；否则，如果未设置任何值，则为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseTableName">
      <MemberSignature Language="C#" Value="public string BaseTableName { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseTableName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbColumn.BaseTableName" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseTableName As String" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::String ^ BaseTableName {  public:&#xA;System::String ^ get(); protected:&#xA; void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseTableName : string with get, set" Usage="System.Data.Common.DbColumn.BaseTableName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取架构中的表名称；否则，如果未设置任何值，则为 <see langword="null" />。 在派生类中重写时，可设置为表名称或 <see langword="null" />。</summary>
        <value>架构中的表名称；否则，如果未设置任何值，则为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnName">
      <MemberSignature Language="C#" Value="public string? ColumnName { get; protected set; }" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string ColumnName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbColumn.ColumnName" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnName As String" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::String ^ ColumnName {  public:&#xA;System::String ^ get(); protected:&#xA; void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnName : string with get, set" Usage="System.Data.Common.DbColumn.ColumnName" />
      <MemberSignature Language="C#" Value="public string ColumnName { get; protected set; }" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取列的名称。 在派生类中重写时，可设置为列名称。</summary>
        <value>列的名称。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnOrdinal">
      <MemberSignature Language="C#" Value="public int? ColumnOrdinal { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; ColumnOrdinal" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbColumn.ColumnOrdinal" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnOrdinal As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:  property Nullable&lt;int&gt; ColumnOrdinal {  public:&#xA;Nullable&lt;int&gt; get(); protected:&#xA; void set(Nullable&lt;int&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnOrdinal : Nullable&lt;int&gt; with get, set" Usage="System.Data.Common.DbColumn.ColumnOrdinal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取数据源行中的列位置（序号）；否则，如果未设置任何值，则为 <see langword="null" />。 在派生类中重写时，可设置为 <see langword="int32" /> 值（用于指定列位置）或 <see langword="null" />。</summary>
        <value>表示列序号的 <see langword="int32" /> 值；否则，如果未设置任何值，则为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnSize">
      <MemberSignature Language="C#" Value="public int? ColumnSize { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; ColumnSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbColumn.ColumnSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnSize As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:  property Nullable&lt;int&gt; ColumnSize {  public:&#xA;Nullable&lt;int&gt; get(); protected:&#xA; void set(Nullable&lt;int&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnSize : Nullable&lt;int&gt; with get, set" Usage="System.Data.Common.DbColumn.ColumnSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取列大小；否则，如果未设置任何值，则为 <see langword="null" />。 在派生类中重写时，可设置为 <see langword="int32" /> 值（用于指定列大小）或 <see langword="null" />。</summary>
        <value><see langword="int32" />列大小的值; 否则，如果未设置任何值，则为 null 引用 (<see langword="Nothing" /> Visual Basic) 。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public Type DataType { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DataType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbColumn.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:  property Type ^ DataType {  public:&#xA;Type ^ get(); protected:&#xA; void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : Type with get, set" Usage="System.Data.Common.DbColumn.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取列中存储的数据的类型。 在派生类中重写时，可设置为表示列中数据类型的 <see cref="T:System.Type" /> 对象。</summary>
        <value>表示列中包含的数据类型的 <see cref="T:System.Type" /> 对象。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataTypeName">
      <MemberSignature Language="C#" Value="public string DataTypeName { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbColumn.DataTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property DataTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::String ^ DataTypeName {  public:&#xA;System::String ^ get(); protected:&#xA; void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataTypeName : string with get, set" Usage="System.Data.Common.DbColumn.DataTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取数据类型的名称；否则，如果未设置任何值，则为 <see langword="null" />。 在派生类中重写时，可设置为数据类型名称或 <see langword="null" />。</summary>
        <value>数据类型的名称；否则，如果未设置任何值，则为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAliased">
      <MemberSignature Language="C#" Value="public bool? IsAliased { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsAliased" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbColumn.IsAliased" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAliased As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:  property Nullable&lt;bool&gt; IsAliased {  public:&#xA;Nullable&lt;bool&gt; get(); protected:&#xA; void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.IsAliased : Nullable&lt;bool&gt; with get, set" Usage="System.Data.Common.DbColumn.IsAliased" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取可为 null 的布尔值，该值指示此列是否具有别名，或者在未设置任何值时返回 <see langword="null" />。 在派生类中重写时，可设置为 <see langword="true" /> 或 <see langword="false" />，指示此列是否具有别名，也可设置为 <see langword="null" />（在 Visual Basic 中为 <see langword="Nothing" />）。</summary>
        <value>如果此列具有别名，则返回 <see langword="true" />；否则返回 <see langword="false" />。 如果未设置任何值，则返回空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAutoIncrement">
      <MemberSignature Language="C#" Value="public bool? IsAutoIncrement { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsAutoIncrement" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbColumn.IsAutoIncrement" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAutoIncrement As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:  property Nullable&lt;bool&gt; IsAutoIncrement {  public:&#xA;Nullable&lt;bool&gt; get(); protected:&#xA; void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.IsAutoIncrement : Nullable&lt;bool&gt; with get, set" Usage="System.Data.Common.DbColumn.IsAutoIncrement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取可为 null 的布尔值，该值指示此列中的值是否自动递增，或者在未设置任何值时返回 <see langword="null" />。 在派生类中重写时，可设置为 <see langword="true" /> 或 <see langword="false" />，指示此列中的值是否自动递增，也可设置为 <see langword="null" />（在 Visual Basic中为 <see langword="Nothing" />）。</summary>
        <value>如果此列中的值自动递增，则返回 <see langword="true" />，否则，返回 <see langword="false" />。 如果未设置任何值，则返回空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExpression">
      <MemberSignature Language="C#" Value="public bool? IsExpression { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsExpression" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbColumn.IsExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property IsExpression As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:  property Nullable&lt;bool&gt; IsExpression {  public:&#xA;Nullable&lt;bool&gt; get(); protected:&#xA; void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.IsExpression : Nullable&lt;bool&gt; with get, set" Usage="System.Data.Common.DbColumn.IsExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取可为 null 的布尔值，该值指示此列是否是表达式，或者在未设置任何值时返回 <see langword="null" />。 在派生类中重写时，可设置为 <see langword="true" /> 或 <see langword="false" />，指示此列是否是表达式，也可设置为 <see langword="null" />（在 Visual Basic 中为 <see langword="Nothing" />）。</summary>
        <value>如果此列是表达式，将返回 <see langword="true" />；否则返回 <see langword="false" />。 如果未设置任何值，则返回空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHidden">
      <MemberSignature Language="C#" Value="public bool? IsHidden { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsHidden" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbColumn.IsHidden" />
      <MemberSignature Language="VB.NET" Value="Public Property IsHidden As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:  property Nullable&lt;bool&gt; IsHidden {  public:&#xA;Nullable&lt;bool&gt; get(); protected:&#xA; void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.IsHidden : Nullable&lt;bool&gt; with get, set" Usage="System.Data.Common.DbColumn.IsHidden" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取可为 null 的布尔值，该值指示此列是否被隐藏，或者在未设置任何值时返回 <see langword="null" />。 在派生类中重写时，可设置为 <see langword="true" /> 或 <see langword="false" />，指示此列是否被隐藏，也可设置为 <see langword="null" />（在 Visual Basic 中为 <see langword="Nothing" />）。</summary>
        <value>如果此列被隐藏，则返回 <see langword="true" />；否则返回 <see langword="false" />。 如果未设置任何值，则返回空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIdentity">
      <MemberSignature Language="C#" Value="public bool? IsIdentity { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbColumn.IsIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Property IsIdentity As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:  property Nullable&lt;bool&gt; IsIdentity {  public:&#xA;Nullable&lt;bool&gt; get(); protected:&#xA; void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.IsIdentity : Nullable&lt;bool&gt; with get, set" Usage="System.Data.Common.DbColumn.IsIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取可为 null 的布尔值，该值指示此列是否是标识，或者在未设置任何值时返回 <see langword="null" />。 在派生类中重写时，可设置为 <see langword="true" /> 或 <see langword="false" />，指示此列是否是标识，也可设置为 <see langword="null" />（在 Visual Basic 中为 <see langword="Nothing" />）。</summary>
        <value>如果此列是标识，将返回 <see langword="true" />；否则返回 <see langword="false" />。 如果未设置任何值，则返回空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKey">
      <MemberSignature Language="C#" Value="public bool? IsKey { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsKey" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbColumn.IsKey" />
      <MemberSignature Language="VB.NET" Value="Public Property IsKey As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:  property Nullable&lt;bool&gt; IsKey {  public:&#xA;Nullable&lt;bool&gt; get(); protected:&#xA; void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.IsKey : Nullable&lt;bool&gt; with get, set" Usage="System.Data.Common.DbColumn.IsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取可为 null 的布尔值，该值指示此列是否是密钥，或者在未设置任何值时返回 <see langword="null" />。 在派生类中重写时，可设置为 <see langword="true" /> 或 <see langword="false" />，指示此列是否是密钥，也可以设置为 <see langword="null" />（在 Visual Basic 中为 <see langword="Nothing" />）。</summary>
        <value>如果此列是密钥，则返回 <see langword="true" />；否则返回 <see langword="false" />。 如果未设置任何值，则返回空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLong">
      <MemberSignature Language="C#" Value="public bool? IsLong { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsLong" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbColumn.IsLong" />
      <MemberSignature Language="VB.NET" Value="Public Property IsLong As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:  property Nullable&lt;bool&gt; IsLong {  public:&#xA;Nullable&lt;bool&gt; get(); protected:&#xA; void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.IsLong : Nullable&lt;bool&gt; with get, set" Usage="System.Data.Common.DbColumn.IsLong" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取可为 null 的布尔值，该值指示此列是否包含长数据，或者在未设置任何值时返回 <see langword="null" />。 在派生类中重写时，可设置为 <see langword="true" /> 或 <see langword="false" />，指示此列是否包含长数据，也可设置为 <see langword="null" />（在 Visual Basic 中为 <see langword="Nothing" />）。</summary>
        <value>如果此列包含长数据，则返回 <see langword="true" />；否则，返回 <see langword="false" />。 如果未设置任何值，则返回空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool? IsReadOnly { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbColumn.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReadOnly As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:  property Nullable&lt;bool&gt; IsReadOnly {  public:&#xA;Nullable&lt;bool&gt; get(); protected:&#xA; void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : Nullable&lt;bool&gt; with get, set" Usage="System.Data.Common.DbColumn.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取可为 null 的布尔值，该值指示此列是否是只读的，或者在未设置任何值时返回 <see langword="null" />。 在派生类中重写时，可设置为 <see langword="true" /> 或 <see langword="false" />，指示此列是否是只读的，也可设置为 <see langword="null" />（在 Visual Basic 中为 <see langword="Nothing" />）。</summary>
        <value>如果此列为只读，则返回 <see langword="true" />；否则返回 <see langword="false" />。 如果未设置任何值，则返回空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnique">
      <MemberSignature Language="C#" Value="public bool? IsUnique { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsUnique" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbColumn.IsUnique" />
      <MemberSignature Language="VB.NET" Value="Public Property IsUnique As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:  property Nullable&lt;bool&gt; IsUnique {  public:&#xA;Nullable&lt;bool&gt; get(); protected:&#xA; void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.IsUnique : Nullable&lt;bool&gt; with get, set" Usage="System.Data.Common.DbColumn.IsUnique" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取可为 null 的布尔值，该值指示唯一约束是否适用于此列，或者在未设置任何值时返回 <see langword="null" />。 在派生类中重写时，可设置为 <see langword="true" /> 或 <see langword="false" />，指示唯一约束是否适用于此列，也可设置为 <see langword="null" />（在 Visual Basic 中为 <see langword="Nothing" />）。</summary>
        <value>如果唯一约束适用于此列，返回 <see langword="true" />；否则返回 <see langword="false" />。 如果未设置任何值，则返回空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[string property] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbColumn.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(property As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ property); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj" Usage="System.Data.Common.DbColumn.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="property">列属性名称。</param>
        <summary>获取基于列属性名称的对象。</summary>
        <value>基于列属性名称的对象。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumericPrecision">
      <MemberSignature Language="C#" Value="public int? NumericPrecision { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; NumericPrecision" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbColumn.NumericPrecision" />
      <MemberSignature Language="VB.NET" Value="Public Property NumericPrecision As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:  property Nullable&lt;int&gt; NumericPrecision {  public:&#xA;Nullable&lt;int&gt; get(); protected:&#xA; void set(Nullable&lt;int&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.NumericPrecision : Nullable&lt;int&gt; with get, set" Usage="System.Data.Common.DbColumn.NumericPrecision" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取列数据的数值精度，否则在未设置任何值时为 <see langword="null" />。 在派生类中重写时，可设置为 <see langword="int32" /> 值（用于指定列数据的数值精度）或 <see langword="null" />。</summary>
        <value><see langword="int32" />如果数据为数值，则为指定列数据的精度的值; 否则，如果未设置任何值，则为 null 引用 (<see langword="Nothing" /> Visual Basic) 。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumericScale">
      <MemberSignature Language="C#" Value="public int? NumericScale { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; NumericScale" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbColumn.NumericScale" />
      <MemberSignature Language="VB.NET" Value="Public Property NumericScale As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:  property Nullable&lt;int&gt; NumericScale {  public:&#xA;Nullable&lt;int&gt; get(); protected:&#xA; void set(Nullable&lt;int&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.NumericScale : Nullable&lt;int&gt; with get, set" Usage="System.Data.Common.DbColumn.NumericScale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取可为 null 的 <see langword="int32" /> 值，该值将返回 <see langword="null" /> 或列数据的数值范围。 在派生类中重写时，可设置为 <see langword="null" /> 或 <see langword="int32" /> 值（用于表示列数据的数值范围）。</summary>
        <value>如果未设置任何值，则为空引用（在 Visual Basic 中为 <see langword="Nothing" />）；否则，在数据是数值时，为指定列数据范围的 <see langword="int32" /> 值。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UdtAssemblyQualifiedName">
      <MemberSignature Language="C#" Value="public string UdtAssemblyQualifiedName { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UdtAssemblyQualifiedName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbColumn.UdtAssemblyQualifiedName" />
      <MemberSignature Language="VB.NET" Value="Public Property UdtAssemblyQualifiedName As String" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::String ^ UdtAssemblyQualifiedName {  public:&#xA;System::String ^ get(); protected:&#xA; void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UdtAssemblyQualifiedName : string with get, set" Usage="System.Data.Common.DbColumn.UdtAssemblyQualifiedName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取表示列中数据类型的 <see cref="T:System.Type" /> 对象的程序集限定名称，否则，在未设置任何值时为 <see langword="null" />。 在派生类中重写时，可设置为程序集限定名称或 <see langword="null" />。</summary>
        <value>表示列中数据类型的 <see cref="T:System.Type" /> 对象的程序集限定名称，否则，在未设置任何值时为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
