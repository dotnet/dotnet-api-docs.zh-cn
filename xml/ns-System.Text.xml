<Namespace Name="System.Text">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9e9d84443ac35fb686445ce5dca4bbc77cdbab9a" /><Meta Name="ms.sourcegitcommit" Value="9506e50ec7beb4fa30206b9840dc546b035a6600" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/23/2020" /><Meta Name="ms.locfileid" Value="83976075" /></Metadata><Docs>
    <summary><see cref="N:System.Text" /> 命名空间包含表示 ASCII 和 Unicode 字符编码的类；用于让字符块和字节块相互转换的抽象基类；以及无需创建 <see cref="T:System.String" /> 的中间实例即可操作并格式化 <see cref="T:System.String" /> 对象的帮助器类。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 编码类主要用于在不同的编码或代码页和 Unicode 编码之间转换。 <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType>（UTF-16）编码由 .NET Framework 在内部使用，并且 <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> 编码通常用于存储字符数据，以确保跨计算机和区域性的可移植性。  
  
 从派生的类 <xref:System.Text.Encoding> 使你能够选择回退策略，该策略决定了如何处理无法编码为字节序列的字符或无法解码为字符的字节。 您可以选择下列项之一：  
  
-   异常回退。 可以通过使用 `throwonerror` 某些类构造函数中提供的标志或使用和类来选择引发数据错误的异常 <xref:System.Text.EncoderExceptionFallback> <xref:System.Text.DecoderExceptionFallback> 。 如果你担心数据流的完整性，则建议在出现异常时引发。  
  
-   替换回退。 您可以使用 <xref:System.Text.EncoderFallback> 和 <xref:System.Text.DecoderFallback> 类以无提示方式将字符更改为 "？" 或 Unicode 替换字符（U + FFFD）。  
  
-   最佳回退。 此选项将一种编码中的字符映射到另一编码的字符。 通常不建议使用最佳回退，因为这可能会导致数据丢失和混淆，并且比简单的 "？" 字符替换慢。 但对于 ANSI 代码页，最佳行为是默认值。  
  
 <xref:System.Text.StringBuilder>类适用于对单个字符串执行大量操作的操作。 与 <xref:System.String> 类不同， <xref:System.Text.StringBuilder> 类是可变的，在串联或删除字符串时提供更好的性能。  
  
 有关的详细信息 <xref:System.Text?displayProperty=nameWithType> ，请参阅[.NET Framework 中的字符编码](/dotnet/standard/base-types/character-encoding)。  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>
