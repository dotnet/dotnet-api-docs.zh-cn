<Type Name="IAuthorizationPolicy" FullName="System.IdentityModel.Policy.IAuthorizationPolicy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0c6cbd213edc602dcc6715750306c2bd9bcae1eb" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83520396" /></Metadata><TypeSignature Language="C#" Value="public interface IAuthorizationPolicy" FrameworkAlternate="dotnet-plat-ext-3.1" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAuthorizationPolicy" FrameworkAlternate="dotnet-plat-ext-3.1" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Policy.IAuthorizationPolicy" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAuthorizationPolicy" FrameworkAlternate="dotnet-plat-ext-3.1" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAuthorizationPolicy" FrameworkAlternate="dotnet-plat-ext-3.1" />
  <TypeSignature Language="F#" Value="type IAuthorizationPolicy = interface" FrameworkAlternate="dotnet-plat-ext-3.1" />
  <TypeSignature Language="C#" Value="public interface IAuthorizationPolicy : System.IdentityModel.Policy.IAuthorizationComponent" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAuthorizationPolicy implements class System.IdentityModel.Policy.IAuthorizationComponent" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAuthorizationPolicy&#xA;Implements IAuthorizationComponent" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAuthorizationPolicy : System::IdentityModel::Policy::IAuthorizationComponent" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type IAuthorizationPolicy = interface&#xA;    interface IAuthorizationComponent" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Security</AssemblyName>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IdentityModel.Policy.IAuthorizationComponent</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="82a21-101">通过给定的声明集，定义一组用于对用户进行授权的规则。</span><span class="sxs-lookup"><span data-stu-id="82a21-101">Defines a set of rules for authorizing a user, given a set of claims.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82a21-102">实现 <xref:System.IdentityModel.Policy.IAuthorizationPolicy> 接口可将一个声明集添加或映射到另一个声明集。</span><span class="sxs-lookup"><span data-stu-id="82a21-102">Implement the <xref:System.IdentityModel.Policy.IAuthorizationPolicy> interface to add or map one set of claims to another.</span></span> <span data-ttu-id="82a21-103">授权策略检查声明集并根据当前声明集添加其他声明。</span><span class="sxs-lookup"><span data-stu-id="82a21-103">An authorization policy examines a set of claims and adds additional claims based on the current set.</span></span> <span data-ttu-id="82a21-104">例如，授权策略可评估包含出生日期的声明，添加断言用户超过 21 岁的声明以及将 Over21 声明添加到 <xref:System.IdentityModel.Policy.EvaluationContext> 中。</span><span class="sxs-lookup"><span data-stu-id="82a21-104">For example, an authorization policy might evaluate a claim that contains the date of birth and add a claim that asserts that the user is over 21 years old and add an Over21 claim to the <xref:System.IdentityModel.Policy.EvaluationContext>.</span></span>  
  
 <span data-ttu-id="82a21-105">实现 <xref:System.IdentityModel.Policy.IAuthorizationPolicy> 接口的类不对用户进行授权，但它们可令 <xref:System.ServiceModel.ServiceAuthorizationManager> 类来执行此操作。</span><span class="sxs-lookup"><span data-stu-id="82a21-105">Classes that implement the <xref:System.IdentityModel.Policy.IAuthorizationPolicy> interface do not authorize users, but they enable the <xref:System.ServiceModel.ServiceAuthorizationManager> class to do so.</span></span> <span data-ttu-id="82a21-106"><xref:System.ServiceModel.ServiceAuthorizationManager> 为每个有效授权策略调用 <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="82a21-106">The <xref:System.ServiceModel.ServiceAuthorizationManager> calls the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method for each authorization policy in effect.</span></span> <span data-ttu-id="82a21-107"><xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> 方法根据当前上下文确定是否应为用户添加其他声明。</span><span class="sxs-lookup"><span data-stu-id="82a21-107">The <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method determines whether additional claims should be added for the user, based on the current context.</span></span> <span data-ttu-id="82a21-108">当声明由其他授权策略添加到 <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> 时，可多次调用授权策略的 <xref:System.IdentityModel.Policy.EvaluationContext> 方法。</span><span class="sxs-lookup"><span data-stu-id="82a21-108">An authorization policy's <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method may be called multiple times, as claims are added to the <xref:System.IdentityModel.Policy.EvaluationContext> by other authorization policies.</span></span> <span data-ttu-id="82a21-109">当所有有效授权策略都已完成时，<xref:System.ServiceModel.ServiceAuthorizationManager> 类会根据最终的声明集做出授权决定。</span><span class="sxs-lookup"><span data-stu-id="82a21-109">When all authorization policies in effect are done, the <xref:System.ServiceModel.ServiceAuthorizationManager> class makes authorization decisions based upon the final set of claims.</span></span> <span data-ttu-id="82a21-110">然后，<xref:System.ServiceModel.ServiceAuthorizationManager> 类会创建一个 <xref:System.IdentityModel.Policy.AuthorizationContext>，其中包含反映这些授权决定的不可变声明集。</span><span class="sxs-lookup"><span data-stu-id="82a21-110">The <xref:System.ServiceModel.ServiceAuthorizationManager> class then creates an <xref:System.IdentityModel.Policy.AuthorizationContext> that contains an immutable set of claims that reflects these authorization decisions.</span></span>  
  
   
  
## Examples  
 [!code-csharp[C_IAuthorizationPolicy#1](~/samples/snippets/csharp/VS_Snippets_CFX/c_iauthorizationpolicy/cs/service.cs#1)]
 [!code-vb[C_IAuthorizationPolicy#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_iauthorizationpolicy/vb/myauthorizationpolicy.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/1db325ec-85be-47d0-8b6e-3ba2fdf3dda0"><span data-ttu-id="82a21-111">授权策略示例</span><span class="sxs-lookup"><span data-stu-id="82a21-111">Authorization Policy Sample</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public bool Evaluate (System.IdentityModel.Policy.EvaluationContext evaluationContext, ref object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Evaluate(class System.IdentityModel.Policy.EvaluationContext evaluationContext, object&amp; state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate(System.IdentityModel.Policy.EvaluationContext,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Evaluate (evaluationContext As EvaluationContext, ByRef state As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Evaluate(System::IdentityModel::Policy::EvaluationContext ^ evaluationContext, System::Object ^ % state);" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : System.IdentityModel.Policy.EvaluationContext * obj -&gt; bool" Usage="iAuthorizationPolicy.Evaluate (evaluationContext, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evaluationContext" Type="System.IdentityModel.Policy.EvaluationContext" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" RefType="ref" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="evaluationContext"><span data-ttu-id="82a21-112">一个 <see cref="T:System.IdentityModel.Policy.EvaluationContext" />，其中包含授权策略所评估的声明集。</span><span class="sxs-lookup"><span data-stu-id="82a21-112">An <see cref="T:System.IdentityModel.Policy.EvaluationContext" /> that contains the claim set that the authorization policy evaluates.</span></span></param>
        <param name="state"><span data-ttu-id="82a21-113">一个 <see cref="T:System.Object" />，由表示此授权策略的自定义状态的引用传递。</span><span class="sxs-lookup"><span data-stu-id="82a21-113">A <see cref="T:System.Object" />, passed by reference that represents the custom state for this authorization policy.</span></span></param>
        <summary><span data-ttu-id="82a21-114">评估用户是否符合此授权策略的需求。</span><span class="sxs-lookup"><span data-stu-id="82a21-114">Evaluates whether a user meets the requirements for this authorization policy.</span></span></summary>
        <returns><span data-ttu-id="82a21-115">如果在其他授权策略向 <paramref name="evaluationContext" /> 中添加其他声明时必须调用此授权策略的 <see cref="M:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate(System.IdentityModel.Policy.EvaluationContext,System.Object@)" /> 方法，则为 <see langword="false" />；否则为 <see langword="true" />，表示此授权策略不需要任何其他评估。</span><span class="sxs-lookup"><span data-stu-id="82a21-115"><see langword="false" /> if the <see cref="M:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate(System.IdentityModel.Policy.EvaluationContext,System.Object@)" /> method for this authorization policy must be called if additional claims are added by other authorization policies to <paramref name="evaluationContext" />; otherwise, <see langword="true" /> to state no additional evaluation is required by this authorization policy.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="82a21-116"><xref:System.IdentityModel.Policy.IAuthorizationPolicy> 接口的实施者应当要求不同的线程多次调用 <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="82a21-116">Implementers of the <xref:System.IdentityModel.Policy.IAuthorizationPolicy> interface should expect the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method to be called multiple times by different threads.</span></span>  
  
 <span data-ttu-id="82a21-117"><xref:System.IdentityModel.Policy.IAuthorizationPolicy> 接口的实施者可使用 `state` 参数在对 <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> 方法的多次调用之间跟踪状态。</span><span class="sxs-lookup"><span data-stu-id="82a21-117">Implementers of the <xref:System.IdentityModel.Policy.IAuthorizationPolicy> interface can use the `state` parameter to track state between calls to the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method.</span></span> <span data-ttu-id="82a21-118">如果在对 <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> 方法的给定调用中设置了状态对象，则会在当前评估过程中向对 <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> 方法的每个后续调用传递同一对象实例。</span><span class="sxs-lookup"><span data-stu-id="82a21-118">If a state object is set inside a given call to the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method, the same object instance is passed to each and every subsequent call to the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method in the current evaluation process.</span></span>  
  
   
  
## Examples  
 [!code-csharp[C_IAuthorizationPolicy#2](~/samples/snippets/csharp/VS_Snippets_CFX/c_iauthorizationpolicy/cs/service.cs#2)]
 [!code-vb[C_IAuthorizationPolicy#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_iauthorizationpolicy/vb/myauthorizationpolicy.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Issuer">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Claims.ClaimSet Issuer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Claims.ClaimSet Issuer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Policy.IAuthorizationPolicy.Issuer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Issuer As ClaimSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Claims::ClaimSet ^ Issuer { System::IdentityModel::Claims::ClaimSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Issuer : System.IdentityModel.Claims.ClaimSet" Usage="System.IdentityModel.Policy.IAuthorizationPolicy.Issuer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Claims.ClaimSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="82a21-119">获取一个表示授权策略颁发者的声明集。</span><span class="sxs-lookup"><span data-stu-id="82a21-119">Gets a claim set that represents the issuer of the authorization policy.</span></span></summary>
        <value><span data-ttu-id="82a21-120">一个表示授权策略颁发者的 <see cref="T:System.IdentityModel.Claims.ClaimSet" />。</span><span class="sxs-lookup"><span data-stu-id="82a21-120">A <see cref="T:System.IdentityModel.Claims.ClaimSet" /> that represents the issuer of the authorization policy.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
