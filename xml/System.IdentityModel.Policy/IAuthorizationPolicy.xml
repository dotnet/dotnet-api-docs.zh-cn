<Type Name="IAuthorizationPolicy" FullName="System.IdentityModel.Policy.IAuthorizationPolicy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5680cf76a4e89eca60a794b62a73489896c9bccd" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="86332668" /></Metadata><TypeSignature Language="C#" Value="public interface IAuthorizationPolicy" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAuthorizationPolicy" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Policy.IAuthorizationPolicy" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAuthorizationPolicy" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAuthorizationPolicy" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
  <TypeSignature Language="F#" Value="type IAuthorizationPolicy = interface" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
  <TypeSignature Language="C#" Value="public interface IAuthorizationPolicy : System.IdentityModel.Policy.IAuthorizationComponent" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAuthorizationPolicy implements class System.IdentityModel.Policy.IAuthorizationComponent" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAuthorizationPolicy&#xA;Implements IAuthorizationComponent" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAuthorizationPolicy : System::IdentityModel::Policy::IAuthorizationComponent" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type IAuthorizationPolicy = interface&#xA;    interface IAuthorizationComponent" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Security</AssemblyName>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <InterfaceName>System.IdentityModel.Policy.IAuthorizationComponent</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>通过给定的声明集，定义一组用于对用户进行授权的规则。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 实现 <xref:System.IdentityModel.Policy.IAuthorizationPolicy> 接口可将一个声明集添加或映射到另一个声明集。 授权策略检查声明集并根据当前声明集添加其他声明。 例如，授权策略可评估包含出生日期的声明，添加断言用户超过 21 岁的声明以及将 Over21 声明添加到 <xref:System.IdentityModel.Policy.EvaluationContext> 中。  
  
 实现 <xref:System.IdentityModel.Policy.IAuthorizationPolicy> 接口的类不对用户进行授权，但它们可令 <xref:System.ServiceModel.ServiceAuthorizationManager> 类来执行此操作。 <xref:System.ServiceModel.ServiceAuthorizationManager> 为每个有效授权策略调用 <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> 方法。 <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> 方法根据当前上下文确定是否应为用户添加其他声明。 当声明由其他授权策略添加到 <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> 时，可多次调用授权策略的 <xref:System.IdentityModel.Policy.EvaluationContext> 方法。 当所有有效授权策略都已完成时，<xref:System.ServiceModel.ServiceAuthorizationManager> 类会根据最终的声明集做出授权决定。 然后，<xref:System.ServiceModel.ServiceAuthorizationManager> 类会创建一个 <xref:System.IdentityModel.Policy.AuthorizationContext>，其中包含反映这些授权决定的不可变声明集。  
  
   
  
## Examples  
 [!code-csharp[C_IAuthorizationPolicy#1](~/samples/snippets/csharp/VS_Snippets_CFX/c_iauthorizationpolicy/cs/service.cs#1)]
 [!code-vb[C_IAuthorizationPolicy#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_iauthorizationpolicy/vb/myauthorizationpolicy.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/framework/wcf/samples/authorization-policy">授权策略示例</related>
  </Docs>
  <Members>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public bool Evaluate (System.IdentityModel.Policy.EvaluationContext evaluationContext, ref object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Evaluate(class System.IdentityModel.Policy.EvaluationContext evaluationContext, object&amp; state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate(System.IdentityModel.Policy.EvaluationContext,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Evaluate (evaluationContext As EvaluationContext, ByRef state As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Evaluate(System::IdentityModel::Policy::EvaluationContext ^ evaluationContext, System::Object ^ % state);" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : System.IdentityModel.Policy.EvaluationContext * obj -&gt; bool" Usage="iAuthorizationPolicy.Evaluate (evaluationContext, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evaluationContext" Type="System.IdentityModel.Policy.EvaluationContext" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" RefType="ref" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="evaluationContext">一个 <see cref="T:System.IdentityModel.Policy.EvaluationContext" />，其中包含授权策略所评估的声明集。</param>
        <param name="state">一个 <see cref="T:System.Object" />，由表示此授权策略的自定义状态的引用传递。</param>
        <summary>评估用户是否符合此授权策略的需求。</summary>
        <returns>如果在其他授权策略向 <paramref name="evaluationContext" /> 中添加其他声明时必须调用此授权策略的 <see cref="M:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate(System.IdentityModel.Policy.EvaluationContext,System.Object@)" /> 方法，则为 <see langword="false" />；否则为 <see langword="true" />，表示此授权策略不需要任何其他评估。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.IdentityModel.Policy.IAuthorizationPolicy> 接口的实施者应当要求不同的线程多次调用 <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> 方法。  
  
 <xref:System.IdentityModel.Policy.IAuthorizationPolicy> 接口的实施者可使用 `state` 参数在对 <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> 方法的多次调用之间跟踪状态。 如果在对 <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> 方法的给定调用中设置了状态对象，则会在当前评估过程中向对 <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> 方法的每个后续调用传递同一对象实例。  
  
   
  
## Examples  
 [!code-csharp[C_IAuthorizationPolicy#2](~/samples/snippets/csharp/VS_Snippets_CFX/c_iauthorizationpolicy/cs/service.cs#2)]
 [!code-vb[C_IAuthorizationPolicy#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_iauthorizationpolicy/vb/myauthorizationpolicy.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Issuer">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Claims.ClaimSet Issuer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Claims.ClaimSet Issuer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Policy.IAuthorizationPolicy.Issuer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Issuer As ClaimSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Claims::ClaimSet ^ Issuer { System::IdentityModel::Claims::ClaimSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Issuer : System.IdentityModel.Claims.ClaimSet" Usage="System.IdentityModel.Policy.IAuthorizationPolicy.Issuer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Claims.ClaimSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个表示授权策略颁发者的声明集。</summary>
        <value>一个表示授权策略颁发者的 <see cref="T:System.IdentityModel.Claims.ClaimSet" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
