<Type Name="EvaluationContext" FullName="System.IdentityModel.Policy.EvaluationContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="726a39dcbfe4bdc44bd62e33eeac2678620503d7" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89894987" /></Metadata><TypeSignature Language="C#" Value="public abstract class EvaluationContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EvaluationContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Policy.EvaluationContext" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EvaluationContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class EvaluationContext abstract" />
  <TypeSignature Language="F#" Value="type EvaluationContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>当在派生类中重写时，表示已经过评估的授权策略的结果。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 声明由授权策略添加到 <xref:System.IdentityModel.Policy.EvaluationContext> 中。 授权策略获取一个声明集（如在安全令牌中找到的声明）并根据当前声明集添加其他声明。 例如，授权策略可评估包含出生日期的声明，添加断言用户超过 21 岁的声明以及将 Over21 声明添加到 <xref:System.IdentityModel.Policy.EvaluationContext> 中。  
  
 实现 <xref:System.IdentityModel.Policy.IAuthorizationPolicy> 接口的类不对用户进行授权，但它们可令 <xref:System.ServiceModel.ServiceAuthorizationManager> 类来执行此操作。 <xref:System.ServiceModel.ServiceAuthorizationManager> 为每个有效授权策略调用 <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> 方法。 <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> 方法根据当前声明确定是否应为用户添加其他声明。 当声明由其他授权策略添加到 <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> 时，可多次调用授权策略的 <xref:System.IdentityModel.Policy.EvaluationContext> 方法。 当所有有效授权策略都已完成时，<xref:System.ServiceModel.ServiceAuthorizationManager> 类会根据最终的声明集做出授权决定。 然后，<xref:System.ServiceModel.ServiceAuthorizationManager> 类会创建一个 <xref:System.IdentityModel.Policy.AuthorizationContext>，其中包含反映这些授权决定的不可变声明集。  
  
 评估上下文包含一组 <xref:System.IdentityModel.Claims.ClaimSet> 对象：一个过期时间（指定评估上下文的有效期）和一个唯一标识符。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EvaluationContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Policy.EvaluationContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EvaluationContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.IdentityModel.Policy.EvaluationContext" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClaimSet">
      <MemberSignature Language="C#" Value="public abstract void AddClaimSet (System.IdentityModel.Policy.IAuthorizationPolicy policy, System.IdentityModel.Claims.ClaimSet claimSet);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddClaimSet(class System.IdentityModel.Policy.IAuthorizationPolicy policy, class System.IdentityModel.Claims.ClaimSet claimSet) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Policy.EvaluationContext.AddClaimSet(System.IdentityModel.Policy.IAuthorizationPolicy,System.IdentityModel.Claims.ClaimSet)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AddClaimSet (policy As IAuthorizationPolicy, claimSet As ClaimSet)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddClaimSet(System::IdentityModel::Policy::IAuthorizationPolicy ^ policy, System::IdentityModel::Claims::ClaimSet ^ claimSet);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member AddClaimSet : System.IdentityModel.Policy.IAuthorizationPolicy * System.IdentityModel.Claims.ClaimSet -&gt; unit" Usage="evaluationContext.AddClaimSet (policy, claimSet)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public abstract void AddClaimSet (System.IdentityModel.Policy.IAuthorizationPolicy authorizationPolicy, System.IdentityModel.Claims.ClaimSet claimSet);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddClaimSet(class System.IdentityModel.Policy.IAuthorizationPolicy authorizationPolicy, class System.IdentityModel.Claims.ClaimSet claimSet) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AddClaimSet (authorizationPolicy As IAuthorizationPolicy, claimSet As ClaimSet)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddClaimSet(System::IdentityModel::Policy::IAuthorizationPolicy ^ authorizationPolicy, System::IdentityModel::Claims::ClaimSet ^ claimSet);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member AddClaimSet : System.IdentityModel.Policy.IAuthorizationPolicy * System.IdentityModel.Claims.ClaimSet -&gt; unit" Usage="evaluationContext.AddClaimSet (authorizationPolicy, claimSet)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.IdentityModel.Policy.IAuthorizationPolicy" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="authorizationPolicy" Type="System.IdentityModel.Policy.IAuthorizationPolicy" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="claimSet" Type="System.IdentityModel.Claims.ClaimSet" Index="1" />
      </Parameters>
      <Docs>
        <param name="policy">一个 <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />，表示正将声明添加到评估上下文的授权策略。</param>
        <param name="authorizationPolicy">一个 <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />，表示正将声明添加到评估上下文的授权策略。</param>
        <param name="claimSet">一个包含一个声明集的 <see cref="T:System.IdentityModel.Claims.ClaimSet" />。</param>
        <summary>将一个声明集添加到评估上下文中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 声明被添加到包含在 <xref:System.IdentityModel.Policy.EvaluationContext.ClaimSets%2A> 属性中的声明集中。  
  
 每次调用 <xref:System.IdentityModel.Policy.EvaluationContext.AddClaimSet%2A> 方法向评估上下文中添加声明时，<xref:System.IdentityModel.Policy.EvaluationContext.Generation%2A> 属性都会递增。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClaimSets">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Claims.ClaimSet&gt; ClaimSets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Claims.ClaimSet&gt; ClaimSets" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Policy.EvaluationContext.ClaimSets" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ClaimSets As ReadOnlyCollection(Of ClaimSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Claims::ClaimSet ^&gt; ^ ClaimSets { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Claims::ClaimSet ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClaimSets : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Claims.ClaimSet&gt;" Usage="System.IdentityModel.Policy.EvaluationContext.ClaimSets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Claims.ClaimSet&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.IdentityModel.Claims.ClaimSet" /> 对象的只读集合，该集合包含由已经过评估的授权策略添加的声明。</summary>
        <value>一个 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 对象，它包含由已经过评估的授权策略添加的声明。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 例如，若要将声明从授权策略添加到此集合中，请使用 <xref:System.IdentityModel.Policy.EvaluationContext.AddClaimSet%2A> 方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Generation">
      <MemberSignature Language="C#" Value="public abstract int Generation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Generation" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Policy.EvaluationContext.Generation" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Generation As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Generation { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Generation : int" Usage="System.IdentityModel.Policy.EvaluationContext.Generation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取已向评估上下文中添加声明的次数。</summary>
        <value>已向评估上下文中添加声明的次数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.ServiceAuthorizationManager> 类使用 <xref:System.IdentityModel.Policy.EvaluationContext.Generation%2A> 属性确定是否需要执行下一轮评估。 授权策略每次调用 `AddToTarget` 方法向评估上下文中添加声明时，<xref:System.IdentityModel.Policy.EvaluationContext.Generation%2A> 属性都会递增。  
  
 当再次对所有授权策略调用 <xref:System.ServiceModel.ServiceAuthorizationManager> 方法后，<xref:System.IdentityModel.Policy.EvaluationContext.Generation%2A> 类会检查 <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> 属性。 如果 <xref:System.IdentityModel.Policy.EvaluationContext.Generation%2A> 属性在评估期间已递增，则对于上次对其调用 <xref:System.ServiceModel.ServiceAuthorizationManager> 方法时返回 <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> 的任何授权策略，`false` 类会再次对该授权策略调用 <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> 方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IDictionary&lt;string,object&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Policy.EvaluationContext.Properties" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Properties As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ Properties { System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="System.IdentityModel.Policy.EvaluationContext.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与此 <see cref="T:System.IdentityModel.Policy.EvaluationContext" /> 关联的非声明属性的集合。</summary>
        <value>一个指定非声明属性集合的 <see cref="T:System.Collections.Generic.Dictionary`2" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Selectors>命名空间中实现接口的类 <xref:System.IdentityModel.Policy.IAuthorizationPolicy> (授权策略) 将名为的属性添加 `Identities` 到中。<xref:System.IdentityModel.Policy.AuthorizationContext.Properties%2A> 集合。 `Identities` 属性包含类型为 <xref:System.Collections.Generic.IList%601> 的对象，该对象包含一个或多个 <xref:System.Security.Principal.IIdentity> 实例，这些实例代表由授权策略提供的标识信息。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordExpirationTime">
      <MemberSignature Language="C#" Value="public abstract void RecordExpirationTime (DateTime expirationTime);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecordExpirationTime(valuetype System.DateTime expirationTime) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Policy.EvaluationContext.RecordExpirationTime(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RecordExpirationTime (expirationTime As DateTime)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RecordExpirationTime(DateTime expirationTime);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member RecordExpirationTime : DateTime -&gt; unit" Usage="evaluationContext.RecordExpirationTime expirationTime" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public abstract void RecordExpirationTime (DateTime time);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecordExpirationTime(valuetype System.DateTime time) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RecordExpirationTime (time As DateTime)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RecordExpirationTime(DateTime time);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member RecordExpirationTime : DateTime -&gt; unit" Usage="evaluationContext.RecordExpirationTime time" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expirationTime" Type="System.DateTime" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="time" Type="System.DateTime" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="expirationTime">一个 <see cref="T:System.DateTime" /> 值，指示此 <see cref="T:System.IdentityModel.Policy.AuthorizationContext" /> 对象不再有效的日期和时间。</param>
        <param name="time">一个 <see cref="T:System.DateTime" /> 值，指示此 <see cref="T:System.IdentityModel.Policy.AuthorizationContext" /> 对象不再有效的日期和时间。</param>
        <summary>设置此 <see cref="T:System.IdentityModel.Policy.EvaluationContext" /> 不再有效的日期和时间。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 只有在 <xref:System.IdentityModel.Policy.EvaluationContext.RecordExpirationTime%2A> 参数的值早于上述指定值时，多次调用 `expirationTime` 方法才会起作用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
