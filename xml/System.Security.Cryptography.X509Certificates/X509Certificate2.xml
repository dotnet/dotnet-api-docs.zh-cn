<Type Name="X509Certificate2" FullName="System.Security.Cryptography.X509Certificates.X509Certificate2">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a74d945d3a7f66e16dc758ddbd340821deef4c16" /><Meta Name="ms.sourcegitcommit" Value="8d63c26d96c3714a8a31c9727613bb05c11660f2" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/04/2020" /><Meta Name="ms.locfileid" Value="89467725" /></Metadata><TypeSignature Language="C#" Value="public class X509Certificate2 : System.Security.Cryptography.X509Certificates.X509Certificate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit X509Certificate2 extends System.Security.Cryptography.X509Certificates.X509Certificate" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />
  <TypeSignature Language="VB.NET" Value="Public Class X509Certificate2&#xA;Inherits X509Certificate" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509Certificate2 : System::Security::Cryptography::X509Certificates::X509Certificate" />
  <TypeSignature Language="F#" Value="type X509Certificate2 = class&#xA;    inherit X509Certificate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit X509Certificate2 extends System.Security.Cryptography.X509Certificates.X509Certificate" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Security.Cryptography.X509Certificates" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Security.Cryptography.X509Certificates.X509Certificate</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0f196-101">表示 X.509 证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-101">Represents an X.509 certificate.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-102">X.509 结构源自国际标准化组织 (ISO) 工作组。</span><span class="sxs-lookup"><span data-stu-id="0f196-102">The X.509 structure originated in the International Organization for Standardization (ISO) working groups.</span></span> <span data-ttu-id="0f196-103">此结构可用于表示各种类型的信息，包括标识、权利和持有者属性 (权限、年龄、性别、位置、从属关系等) 。</span><span class="sxs-lookup"><span data-stu-id="0f196-103">This structure can be used to represent various types of information including identity, entitlement, and holder attributes (permissions, age, sex, location, affiliation, and so forth).</span></span> <span data-ttu-id="0f196-104">尽管 ISO 规范在结构本身上是最丰富的信息，但 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 类设计用于按照 Internet 工程任务组 (IETF) 公有密钥基础结构 X. x.509 (PKIX) 工作组中所述的规范对使用方案建模。</span><span class="sxs-lookup"><span data-stu-id="0f196-104">Although the ISO specifications are most informative on the structure itself, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> class is designed to model the usage scenarios defined in specifications issued by the Internet Engineering Task Force (IETF) Public Key Infrastructure, X.509 (PKIX) working group.</span></span> <span data-ttu-id="0f196-105">这些规范的最重要信息是 RFC 3280 "[证书和证书吊销列表 (CRL) 配置文件](https://go.microsoft.com/fwlink/?LinkId=45286)"。</span><span class="sxs-lookup"><span data-stu-id="0f196-105">The most informative of these specifications is RFC 3280, "[Certificate and Certificate Revocation List (CRL) Profile](https://go.microsoft.com/fwlink/?LinkId=45286)."</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0f196-106">从开始 [!INCLUDE[net_v46](~/includes/net-v46-md.md)] ，此类型实现 <xref:System.IDisposable> 接口。</span><span class="sxs-lookup"><span data-stu-id="0f196-106">Starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], this type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="0f196-107">在使用完类型后，您应直接或间接释放类型。</span><span class="sxs-lookup"><span data-stu-id="0f196-107">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="0f196-108">若要直接释放类型，请在 `try`/`catch` 块中调用其 <xref:System.IDisposable.Dispose%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="0f196-108">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="0f196-109">若要间接释放类型，请使用 `using`（在 C# 中）或 `Using`（在 Visual Basic 中）等语言构造。</span><span class="sxs-lookup"><span data-stu-id="0f196-109">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="0f196-110">有关详细信息，请参阅 <xref:System.IDisposable> 接口主题中的“使用实现 IDisposable 的对象”一节。</span><span class="sxs-lookup"><span data-stu-id="0f196-110">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
>   
>  <span data-ttu-id="0f196-111">对于面向 [!INCLUDE[net_v452](~/includes/net-v452-md.md)] 和更早版本的应用， <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 类不实现 <xref:System.IDisposable> 接口，因此不具有 `Dispose` 方法。</span><span class="sxs-lookup"><span data-stu-id="0f196-111">For apps that target the [!INCLUDE[net_v452](~/includes/net-v452-md.md)] and earlier versions, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> class does not implement the <xref:System.IDisposable> interface and therefore does not have a `Dispose` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f196-112">下面的示例演示如何使用对象对 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 文件进行加密和解密。</span><span class="sxs-lookup"><span data-stu-id="0f196-112">The following example demonstrates how to use an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object to encrypt and decrypt a file.</span></span>  
  
 [!code-csharp[X509Certificate2#1](~/samples/snippets/csharp/VS_Snippets_CLR/x509certificate2/cs/program.cs#1)]
 [!code-vb[X509Certificate2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/x509certificate2/vb/program.vb#1)]  
  
 <span data-ttu-id="0f196-113">下面的示例创建一个命令行可执行文件，该命令行可执行文件将证书文件作为参数，并将各种证书属性打印到控制台。</span><span class="sxs-lookup"><span data-stu-id="0f196-113">The following example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0f196-114">初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0f196-114">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f196-115">初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0f196-115">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-116">此构造函数将创建一个空 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 对象，这不同于此类的其他构造函数，该构造函数使用字节数组、指针或证书文件中的证书信息。</span><span class="sxs-lookup"><span data-stu-id="0f196-116">This constructor creates an empty <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object, unlike the other constructors for this class that use certificate information from a byte array, a pointer, or a certificate file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f196-117">下面的代码示例打开当前用户证书存储，仅选择活动证书，并允许用户选择一个或多个证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-117">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="0f196-118">然后，该示例将证书信息写入控制台。</span><span class="sxs-lookup"><span data-stu-id="0f196-118">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : byte[] -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 rawData" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="0f196-119">一个包含 X.509 证书数据的字节数组。</span><span class="sxs-lookup"><span data-stu-id="0f196-119">A byte array containing data from an X.509 certificate.</span></span></param>
        <summary><span data-ttu-id="0f196-120">使用来自字节数组的信息初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0f196-120">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using information from a byte array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-121">此构造函数 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 使用字节数组中的证书信息创建新的对象。</span><span class="sxs-lookup"><span data-stu-id="0f196-121">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using certificate information from a byte array.</span></span> <span data-ttu-id="0f196-122">字节数组可以是编码的二进制文件 (DER) 或 Base64 编码的 X.509 数据。</span><span class="sxs-lookup"><span data-stu-id="0f196-122">The byte array can be binary (DER) encoded or Base64-encoded X.509 data.</span></span> <span data-ttu-id="0f196-123">字节数组还可以是 PKCS7 (Authenticode) 签名的文件;签名者证书用于创建对象。</span><span class="sxs-lookup"><span data-stu-id="0f196-123">The byte array can also be a PKCS7 (Authenticode) signed file; the signer certificate is used to create the object.</span></span>  
  
 <span data-ttu-id="0f196-124">如果 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 通过为指定 PKCS7 签名的文件存储来创建证书，则会为对 `rawData` <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 存储区（而不是存储区中的任何证书）签名的证书创建。</span><span class="sxs-lookup"><span data-stu-id="0f196-124">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f196-125">发生了与证书有关的错误。</span><span class="sxs-lookup"><span data-stu-id="0f196-125">An error with the certificate occurs.</span></span> <span data-ttu-id="0f196-126">例如：</span><span class="sxs-lookup"><span data-stu-id="0f196-126">For example:</span></span>  
  
<span data-ttu-id="0f196-127">-   证书文件不存在。</span><span class="sxs-lookup"><span data-stu-id="0f196-127">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="0f196-128">-   证书无效。</span><span class="sxs-lookup"><span data-stu-id="0f196-128">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="0f196-129">-   证书的密码不正确。</span><span class="sxs-lookup"><span data-stu-id="0f196-129">-   The certificate's password is incorrect.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(IntPtr handle);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : nativeint -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="0f196-130">一个指向非托管代码中的证书上下文的指针。</span><span class="sxs-lookup"><span data-stu-id="0f196-130">A pointer to a certificate context in unmanaged code.</span></span> <span data-ttu-id="0f196-131">C 结构称为 <see langword="PCCERT_CONTEXT" />。</span><span class="sxs-lookup"><span data-stu-id="0f196-131">The C structure is called <see langword="PCCERT_CONTEXT" />.</span></span></param>
        <summary><span data-ttu-id="0f196-132">使用非托管句柄初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0f196-132">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using an unmanaged handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-133">此构造函数 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 使用 Microsoft 加密 API 证书上下文的句柄创建新的对象 `PCCERT_CONTEXT` 。</span><span class="sxs-lookup"><span data-stu-id="0f196-133">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a handle for the Microsoft Cryptographic API certificate context, `PCCERT_CONTEXT`.</span></span> <span data-ttu-id="0f196-134">请注意，此构造函数的直接调用方需要非托管代码权限。</span><span class="sxs-lookup"><span data-stu-id="0f196-134">Note that the immediate caller of this constructor requires unmanaged code permission.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0f196-135">构造函数创建证书上下文的副本。</span><span class="sxs-lookup"><span data-stu-id="0f196-135">The constructor creates a copy of the certificate context.</span></span> <span data-ttu-id="0f196-136">不要假设您传递给构造函数的上下文结构是有效的;它可能已被释放。</span><span class="sxs-lookup"><span data-stu-id="0f196-136">Do not assume that the context structure you passed to the constructor is valid; it may have been released.</span></span> <span data-ttu-id="0f196-137">可以从属性获取当前结构的副本 `PCCERT_CONTEXT` <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A> ，但它仅在对象的生存期内有效 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 。</span><span class="sxs-lookup"><span data-stu-id="0f196-137">You can get a copy of the current `PCCERT_CONTEXT` structure from the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A> property, but it is valid only during the lifetime of the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f196-138">发生了与证书有关的错误。</span><span class="sxs-lookup"><span data-stu-id="0f196-138">An error with the certificate occurs.</span></span> <span data-ttu-id="0f196-139">例如：</span><span class="sxs-lookup"><span data-stu-id="0f196-139">For example:</span></span>  
  
<span data-ttu-id="0f196-140">-   证书文件不存在。</span><span class="sxs-lookup"><span data-stu-id="0f196-140">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="0f196-141">-   证书无效。</span><span class="sxs-lookup"><span data-stu-id="0f196-141">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="0f196-142">-   证书的密码不正确。</span><span class="sxs-lookup"><span data-stu-id="0f196-142">-   The certificate's password is incorrect.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (ReadOnlySpan&lt;byte&gt; rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(ReadOnlySpan&lt;System::Byte&gt; rawData);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : ReadOnlySpan&lt;byte&gt; -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 rawData" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="0f196-143">要处理的证书数据。</span><span class="sxs-lookup"><span data-stu-id="0f196-143">The certificate data to process.</span></span></param>
        <summary><span data-ttu-id="0f196-144">用证书数据初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0f196-144">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class from certificate data.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f196-145">发生了与证书有关的错误。</span><span class="sxs-lookup"><span data-stu-id="0f196-145">An error with the certificate occurs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (System.Security.Cryptography.X509Certificates.X509Certificate certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (certificate As X509Certificate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : System.Security.Cryptography.X509Certificates.X509Certificate -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 certificate" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="certificate"><span data-ttu-id="0f196-146">一个 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0f196-146">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object.</span></span></param>
        <summary><span data-ttu-id="0f196-147">使用 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> 对象初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0f196-147">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-148">此方法使用对象创建类的新实例 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> <xref:System.Security.Cryptography.X509Certificates.X509Certificate> 。</span><span class="sxs-lookup"><span data-stu-id="0f196-148">This method creates a new instance of the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> class using an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f196-149">发生了与证书有关的错误。</span><span class="sxs-lookup"><span data-stu-id="0f196-149">An error with the certificate occurs.</span></span> <span data-ttu-id="0f196-150">例如：</span><span class="sxs-lookup"><span data-stu-id="0f196-150">For example:</span></span>  
  
<span data-ttu-id="0f196-151">-   证书文件不存在。</span><span class="sxs-lookup"><span data-stu-id="0f196-151">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="0f196-152">-   证书无效。</span><span class="sxs-lookup"><span data-stu-id="0f196-152">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="0f196-153">-   证书的密码不正确。</span><span class="sxs-lookup"><span data-stu-id="0f196-153">-   The certificate's password is incorrect.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="0f196-154">一个证书文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0f196-154">The name of a certificate file.</span></span></param>
        <summary><span data-ttu-id="0f196-155">使用证书文件名初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0f196-155">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-156">此构造函数 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 使用证书文件名创建新的对象。</span><span class="sxs-lookup"><span data-stu-id="0f196-156">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a certificate file name.</span></span> <span data-ttu-id="0f196-157">它支持二进制 (DER) 编码或 Base64 编码。</span><span class="sxs-lookup"><span data-stu-id="0f196-157">It supports binary (DER) encoding or Base64 encoding.</span></span>  
  
 <span data-ttu-id="0f196-158">如果 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 通过为指定 PKCS7 签名的文件存储来创建证书，则会为对 `fileName` <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 存储区（而不是存储区中的任何证书）签名的证书创建。</span><span class="sxs-lookup"><span data-stu-id="0f196-158">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f196-159">发生了与证书有关的错误。</span><span class="sxs-lookup"><span data-stu-id="0f196-159">An error with the certificate occurs.</span></span> <span data-ttu-id="0f196-160">例如：</span><span class="sxs-lookup"><span data-stu-id="0f196-160">For example:</span></span>  
  
<span data-ttu-id="0f196-161">-   证书文件不存在。</span><span class="sxs-lookup"><span data-stu-id="0f196-161">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="0f196-162">-   证书无效。</span><span class="sxs-lookup"><span data-stu-id="0f196-162">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="0f196-163">-   证书的密码不正确。</span><span class="sxs-lookup"><span data-stu-id="0f196-163">-   The certificate's password is incorrect.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, System.Security.SecureString? password);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, class System.Security.SecureString password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As SecureString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::Security::SecureString ^ password);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : byte[] * System.Security.SecureString -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (rawData, password)" />
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, System.Security.SecureString password);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="password" Type="System.Security.SecureString" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="0f196-164">包含 X.509 证书数据的字节数组。</span><span class="sxs-lookup"><span data-stu-id="0f196-164">A byte array that contains data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="0f196-165">访问 X.509 证书数据所需的密码。</span><span class="sxs-lookup"><span data-stu-id="0f196-165">The password required to access the X.509 certificate data.</span></span></param>
        <summary><span data-ttu-id="0f196-166">使用一个字节数组和一个密码初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0f196-166">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array and a password.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-167">此构造函数与包含证书私钥的 PKCS12 (PFX) 文件一起使用。</span><span class="sxs-lookup"><span data-stu-id="0f196-167">This constructor is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="0f196-168">使用正确的密码调用此构造函数将对私钥进行解密，并将其保存到密钥容器。</span><span class="sxs-lookup"><span data-stu-id="0f196-168">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0f196-169">切勿在源代码中对密码进行硬编码。</span><span class="sxs-lookup"><span data-stu-id="0f196-169">Never hard code a password within your source code.</span></span>  <span data-ttu-id="0f196-170">通过使用 [Ildasm.exe (IL 拆装器) ](/dotnet/framework/tools/ildasm-exe-il-disassembler)、十六进制编辑器，或者只是在文本编辑器中打开程序集（如 Notepad.exe），可以从程序集中检索硬编码的密码。</span><span class="sxs-lookup"><span data-stu-id="0f196-170">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](/dotnet/framework/tools/ildasm-exe-il-disassembler), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="0f196-171">如果 <xref:System.Security.Cryptography.X509Certificates.X509Certificate> 通过为指定 PKCS7 签名的文件存储来创建证书，则会为对 `rawData` <xref:System.Security.Cryptography.X509Certificates.X509Certificate> 存储区（而不是存储区中的任何证书）签名的证书创建。</span><span class="sxs-lookup"><span data-stu-id="0f196-171">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f196-172">发生了与证书有关的错误。</span><span class="sxs-lookup"><span data-stu-id="0f196-172">An error with the certificate occurs.</span></span> <span data-ttu-id="0f196-173">例如：</span><span class="sxs-lookup"><span data-stu-id="0f196-173">For example:</span></span>  
  
<span data-ttu-id="0f196-174">-   证书文件不存在。</span><span class="sxs-lookup"><span data-stu-id="0f196-174">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="0f196-175">-   证书无效。</span><span class="sxs-lookup"><span data-stu-id="0f196-175">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="0f196-176">-   证书的密码不正确。</span><span class="sxs-lookup"><span data-stu-id="0f196-176">-   The certificate's password is incorrect.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, string? password);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::String ^ password);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : byte[] * string -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (rawData, password)" />
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, string password);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="0f196-177">一个包含 X.509 证书数据的字节数组。</span><span class="sxs-lookup"><span data-stu-id="0f196-177">A byte array containing data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="0f196-178">访问 X.509 证书数据所需的密码。</span><span class="sxs-lookup"><span data-stu-id="0f196-178">The password required to access the X.509 certificate data.</span></span></param>
        <summary><span data-ttu-id="0f196-179">使用一个字节数组和一个密码初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0f196-179">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array and a password.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-180">此构造函数 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 使用一个字节数组和一个访问证书数据所需的密码来创建一个新的对象。</span><span class="sxs-lookup"><span data-stu-id="0f196-180">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a byte array and a password that is needed to access the certificate data.</span></span> <span data-ttu-id="0f196-181">它与包含证书私钥的 PKCS12 (PFX) 文件一起使用。</span><span class="sxs-lookup"><span data-stu-id="0f196-181">It is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="0f196-182">使用正确的密码调用此构造函数将对私钥进行解密，并将其保存到密钥容器。</span><span class="sxs-lookup"><span data-stu-id="0f196-182">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0f196-183">切勿在源代码中对密码进行硬编码。</span><span class="sxs-lookup"><span data-stu-id="0f196-183">Never hard code a password within your source code.</span></span>  <span data-ttu-id="0f196-184">通过使用 [Ildasm.exe (IL 拆装器) ](/dotnet/framework/tools/ildasm-exe-il-disassembler)、十六进制编辑器，或者只是在文本编辑器中打开程序集（如 Notepad.exe），可以从程序集中检索硬编码的密码。</span><span class="sxs-lookup"><span data-stu-id="0f196-184">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](/dotnet/framework/tools/ildasm-exe-il-disassembler), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="0f196-185">如果 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 通过为指定 PKCS7 签名的文件存储来创建证书，则会为对 `rawData` <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 存储区（而不是存储区中的任何证书）签名的证书创建。</span><span class="sxs-lookup"><span data-stu-id="0f196-185">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f196-186">发生了与证书有关的错误。</span><span class="sxs-lookup"><span data-stu-id="0f196-186">An error with the certificate occurs.</span></span> <span data-ttu-id="0f196-187">例如：</span><span class="sxs-lookup"><span data-stu-id="0f196-187">For example:</span></span>  
  
<span data-ttu-id="0f196-188">-   证书文件不存在。</span><span class="sxs-lookup"><span data-stu-id="0f196-188">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="0f196-189">-   证书无效。</span><span class="sxs-lookup"><span data-stu-id="0f196-189">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="0f196-190">-   证书的密码不正确。</span><span class="sxs-lookup"><span data-stu-id="0f196-190">-   The certificate's password is incorrect.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected X509Certificate2 (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; X509Certificate2(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="0f196-191">反序列化新的 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 所需的序列化信息。</span><span class="sxs-lookup"><span data-stu-id="0f196-191">The serialization information required to deserialize the new <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</span></span></param>
        <param name="context"><span data-ttu-id="0f196-192">有关要反序列化的流的源的上下文信息。</span><span class="sxs-lookup"><span data-stu-id="0f196-192">Contextual information about the source of the stream to be deserialized.</span></span></param>
        <summary><span data-ttu-id="0f196-193">使用指定的序列化和流上下文信息初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0f196-193">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using the specified serialization and stream context information.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="0f196-194">仅限 .NET Core：在所有情况下。</span><span class="sxs-lookup"><span data-stu-id="0f196-194">.NET Core only: In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, System.Security.SecureString? password);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, class System.Security.SecureString password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As SecureString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::Security::SecureString ^ password);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string * System.Security.SecureString -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (fileName, password)" />
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, System.Security.SecureString password);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="password" Type="System.Security.SecureString" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="0f196-195">一个证书文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0f196-195">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="0f196-196">访问 X.509 证书数据所需的密码。</span><span class="sxs-lookup"><span data-stu-id="0f196-196">The password required to access the X.509 certificate data.</span></span></param>
        <summary><span data-ttu-id="0f196-197">使用一个证书文件名和一个密码初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0f196-197">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name and a password.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-198">此构造函数与包含证书私钥的 PKCS12 (PFX) 文件一起使用。</span><span class="sxs-lookup"><span data-stu-id="0f196-198">This constructor is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="0f196-199">使用正确的密码调用此构造函数将对私钥进行解密，并将其保存到密钥容器。</span><span class="sxs-lookup"><span data-stu-id="0f196-199">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0f196-200">切勿在源代码中对密码进行硬编码。</span><span class="sxs-lookup"><span data-stu-id="0f196-200">Never hard code a password within your source code.</span></span>  <span data-ttu-id="0f196-201">通过使用 [Ildasm.exe (IL 拆装器) ](/dotnet/framework/tools/ildasm-exe-il-disassembler)、十六进制编辑器，或者只是在文本编辑器中打开程序集（如 Notepad.exe），可以从程序集中检索硬编码的密码。</span><span class="sxs-lookup"><span data-stu-id="0f196-201">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](/dotnet/framework/tools/ildasm-exe-il-disassembler), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="0f196-202">如果 <xref:System.Security.Cryptography.X509Certificates.X509Certificate> 通过为指定 PKCS7 签名的文件存储来创建证书，则会为对 `fileName` <xref:System.Security.Cryptography.X509Certificates.X509Certificate> 存储区（而不是存储区中的任何证书）签名的证书创建。</span><span class="sxs-lookup"><span data-stu-id="0f196-202">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f196-203">发生了与证书有关的错误。</span><span class="sxs-lookup"><span data-stu-id="0f196-203">An error with the certificate occurs.</span></span> <span data-ttu-id="0f196-204">例如：</span><span class="sxs-lookup"><span data-stu-id="0f196-204">For example:</span></span>  
  
<span data-ttu-id="0f196-205">-   证书文件不存在。</span><span class="sxs-lookup"><span data-stu-id="0f196-205">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="0f196-206">-   证书无效。</span><span class="sxs-lookup"><span data-stu-id="0f196-206">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="0f196-207">-   证书的密码不正确。</span><span class="sxs-lookup"><span data-stu-id="0f196-207">-   The certificate's password is incorrect.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, string? password);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string * string -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (fileName, password)" />
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, string password);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="0f196-208">一个证书文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0f196-208">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="0f196-209">访问 X.509 证书数据所需的密码。</span><span class="sxs-lookup"><span data-stu-id="0f196-209">The password required to access the X.509 certificate data.</span></span></param>
        <summary><span data-ttu-id="0f196-210">使用一个证书文件名和一个用于访问该证书的密码初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0f196-210">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name and a password used to access the certificate.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-211">此构造函数 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 使用证书文件名和访问证书所需的密码来创建新的对象。</span><span class="sxs-lookup"><span data-stu-id="0f196-211">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a certificate file name and a password needed to access the certificate.</span></span> <span data-ttu-id="0f196-212">它与包含证书私钥的 PKCS12 (PFX) 文件一起使用。</span><span class="sxs-lookup"><span data-stu-id="0f196-212">It is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="0f196-213">使用正确的密码调用此构造函数将对私钥进行解密，并将其保存到密钥容器。</span><span class="sxs-lookup"><span data-stu-id="0f196-213">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0f196-214">切勿在源代码中对密码进行硬编码。</span><span class="sxs-lookup"><span data-stu-id="0f196-214">Never hard code a password within your source code.</span></span>  <span data-ttu-id="0f196-215">通过使用 [Ildasm.exe (IL 拆装器) ](/dotnet/framework/tools/ildasm-exe-il-disassembler)、十六进制编辑器，或者只是在文本编辑器中打开程序集（如 Notepad.exe），可以从程序集中检索硬编码的密码。</span><span class="sxs-lookup"><span data-stu-id="0f196-215">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](/dotnet/framework/tools/ildasm-exe-il-disassembler), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="0f196-216">如果 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 通过为指定 PKCS7 签名的文件存储来创建证书，则会为对 `fileName` <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 存储区（而不是存储区中的任何证书）签名的证书创建。</span><span class="sxs-lookup"><span data-stu-id="0f196-216">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f196-217">发生了与证书有关的错误。</span><span class="sxs-lookup"><span data-stu-id="0f196-217">An error with the certificate occurs.</span></span> <span data-ttu-id="0f196-218">例如：</span><span class="sxs-lookup"><span data-stu-id="0f196-218">For example:</span></span>  
  
<span data-ttu-id="0f196-219">-   证书文件不存在。</span><span class="sxs-lookup"><span data-stu-id="0f196-219">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="0f196-220">-   证书无效。</span><span class="sxs-lookup"><span data-stu-id="0f196-220">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="0f196-221">-   证书的密码不正确。</span><span class="sxs-lookup"><span data-stu-id="0f196-221">-   The certificate's password is incorrect.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, System.Security.SecureString? password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : byte[] * System.Security.SecureString * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (rawData, password, keyStorageFlags)" />
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="password" Type="System.Security.SecureString" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" Index="2" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="0f196-222">包含 X.509 证书数据的字节数组。</span><span class="sxs-lookup"><span data-stu-id="0f196-222">A byte array that contains data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="0f196-223">访问 X.509 证书数据所需的密码。</span><span class="sxs-lookup"><span data-stu-id="0f196-223">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="0f196-224">一个枚举值的按位组合，这些值控制在何处以及如何导入证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-224">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="0f196-225">使用一个字节数组、一个密码和一个密钥存储标志初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0f196-225">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array, a password, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-226">此构造函数与包含证书私钥的 PKCS12 (PFX) 文件一起使用。</span><span class="sxs-lookup"><span data-stu-id="0f196-226">This constructor is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="0f196-227">使用正确的密码调用此构造函数将对私钥进行解密，并将其保存到 Microsoft 加密 API 加密服务提供程序 (CSP) 。</span><span class="sxs-lookup"><span data-stu-id="0f196-227">Calling this constructor with the correct password decrypts the private key and saves it to a Microsoft Cryptographic API Cryptographic Service Provider (CSP).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0f196-228">切勿在源代码中对密码进行硬编码。</span><span class="sxs-lookup"><span data-stu-id="0f196-228">Never hard code a password within your source code.</span></span>  <span data-ttu-id="0f196-229">通过使用 [Ildasm.exe (IL 拆装器) ](/dotnet/framework/tools/ildasm-exe-il-disassembler)、十六进制编辑器，或者只是在文本编辑器中打开程序集（如 Notepad.exe），可以从程序集中检索硬编码的密码。</span><span class="sxs-lookup"><span data-stu-id="0f196-229">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](/dotnet/framework/tools/ildasm-exe-il-disassembler), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="0f196-230">如果 <xref:System.Security.Cryptography.X509Certificates.X509Certificate> 通过为指定 PKCS7 签名的文件存储来创建证书，则会为对 `rawData` <xref:System.Security.Cryptography.X509Certificates.X509Certificate> 存储区（而不是存储区中的任何证书）签名的证书创建。</span><span class="sxs-lookup"><span data-stu-id="0f196-230">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f196-231">发生了与证书有关的错误。</span><span class="sxs-lookup"><span data-stu-id="0f196-231">An error with the certificate occurs.</span></span> <span data-ttu-id="0f196-232">例如：</span><span class="sxs-lookup"><span data-stu-id="0f196-232">For example:</span></span>  
  
<span data-ttu-id="0f196-233">-   证书文件不存在。</span><span class="sxs-lookup"><span data-stu-id="0f196-233">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="0f196-234">-   证书无效。</span><span class="sxs-lookup"><span data-stu-id="0f196-234">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="0f196-235">-   证书的密码不正确。</span><span class="sxs-lookup"><span data-stu-id="0f196-235">-   The certificate's password is incorrect.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, string? password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : byte[] * string * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (rawData, password, keyStorageFlags)" />
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="0f196-236">一个包含 X.509 证书数据的字节数组。</span><span class="sxs-lookup"><span data-stu-id="0f196-236">A byte array containing data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="0f196-237">访问 X.509 证书数据所需的密码。</span><span class="sxs-lookup"><span data-stu-id="0f196-237">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="0f196-238">一个枚举值的按位组合，这些值控制在何处以及如何导入证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-238">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="0f196-239">使用一个字节数组、一个密码和一个密钥存储标志初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0f196-239">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array, a password, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-240">此构造函数 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 使用字节数组、访问证书数据所需的密码和密钥存储标志来创建一个新的对象。</span><span class="sxs-lookup"><span data-stu-id="0f196-240">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a byte array, a password that is needed to access the certificate data, and a key storage flag.</span></span> <span data-ttu-id="0f196-241">它与包含证书私钥的 PKCS12 (PFX) 文件一起使用。</span><span class="sxs-lookup"><span data-stu-id="0f196-241">It is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="0f196-242">使用正确的密码调用此构造函数将对私钥进行解密，并将其保存到 Microsoft 加密 API 加密服务提供程序 (CSP) 。</span><span class="sxs-lookup"><span data-stu-id="0f196-242">Calling this constructor with the correct password decrypts the private key and saves it to a Microsoft Cryptographic API Cryptographic Service Provider (CSP).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0f196-243">切勿在源代码中对密码进行硬编码。</span><span class="sxs-lookup"><span data-stu-id="0f196-243">Never hard code a password within your source code.</span></span>  <span data-ttu-id="0f196-244">通过使用 [Ildasm.exe (IL 拆装器) ](/dotnet/framework/tools/ildasm-exe-il-disassembler)、十六进制编辑器，或者只是在文本编辑器中打开程序集（如 Notepad.exe），可以从程序集中检索硬编码的密码。</span><span class="sxs-lookup"><span data-stu-id="0f196-244">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](/dotnet/framework/tools/ildasm-exe-il-disassembler), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="0f196-245">如果 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 通过为指定 PKCS7 签名的文件存储来创建证书，则会为对 `rawData` <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 存储区（而不是存储区中的任何证书）签名的证书创建。</span><span class="sxs-lookup"><span data-stu-id="0f196-245">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f196-246">发生了与证书有关的错误。</span><span class="sxs-lookup"><span data-stu-id="0f196-246">An error with the certificate occurs.</span></span> <span data-ttu-id="0f196-247">例如：</span><span class="sxs-lookup"><span data-stu-id="0f196-247">For example:</span></span>  
  
<span data-ttu-id="0f196-248">-   证书文件不存在。</span><span class="sxs-lookup"><span data-stu-id="0f196-248">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="0f196-249">-   证书无效。</span><span class="sxs-lookup"><span data-stu-id="0f196-249">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="0f196-250">-   证书的密码不正确。</span><span class="sxs-lookup"><span data-stu-id="0f196-250">-   The certificate's password is incorrect.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (ReadOnlySpan&lt;byte&gt; rawData, ReadOnlySpan&lt;char&gt; password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags = System.Security.Cryptography.X509Certificates.X509KeyStorageFlags.DefaultKeySet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; rawData, valuetype System.ReadOnlySpan`1&lt;char&gt; password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Char},System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As ReadOnlySpan(Of Byte), password As ReadOnlySpan(Of Char), Optional keyStorageFlags As X509KeyStorageFlags = System.Security.Cryptography.X509Certificates.X509KeyStorageFlags.DefaultKeySet)" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;char&gt; * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (rawData, password, keyStorageFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="net-5.0" />
        <Parameter Name="password" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="1" FrameworkAlternate="net-5.0" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" Index="2" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="0f196-251">要处理的证书数据。</span><span class="sxs-lookup"><span data-stu-id="0f196-251">The certificate data to process.</span></span></param>
        <param name="password"><span data-ttu-id="0f196-252">访问证书数据所需的密码。</span><span class="sxs-lookup"><span data-stu-id="0f196-252">The password required to access the certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="0f196-253">一个枚举值的按位组合，这些值控制在何处以及如何导入证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-253">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="0f196-254">使用证书数据、密码和密钥存储标志初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0f196-254">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class from certificate data, a password, and key storage flags.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f196-255">发生了与证书有关的错误。</span><span class="sxs-lookup"><span data-stu-id="0f196-255">An error with the certificate occurs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string? fileName, ReadOnlySpan&lt;char&gt; password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags = System.Security.Cryptography.X509Certificates.X509KeyStorageFlags.DefaultKeySet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, valuetype System.ReadOnlySpan`1&lt;char&gt; password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.ReadOnlySpan{System.Char},System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As ReadOnlySpan(Of Char), Optional keyStorageFlags As X509KeyStorageFlags = System.Security.Cryptography.X509Certificates.X509KeyStorageFlags.DefaultKeySet)" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string * ReadOnlySpan&lt;char&gt; * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (fileName, password, keyStorageFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="net-5.0" />
        <Parameter Name="password" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="1" FrameworkAlternate="net-5.0" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" Index="2" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <param name="fileName">To be added.</param>
        <param name="password">To be added.</param>
        <param name="keyStorageFlags">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, System.Security.SecureString? password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string * System.Security.SecureString * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (fileName, password, keyStorageFlags)" />
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="password" Type="System.Security.SecureString" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" Index="2" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="0f196-256">一个证书文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0f196-256">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="0f196-257">访问 X.509 证书数据所需的密码。</span><span class="sxs-lookup"><span data-stu-id="0f196-257">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="0f196-258">一个枚举值的按位组合，这些值控制在何处以及如何导入证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-258">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="0f196-259">使用一个证书文件名、一个密码和一个密钥存储标志初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0f196-259">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name, a password, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-260">如果 <xref:System.Security.Cryptography.X509Certificates.X509Certificate> 通过为指定 PKCS7 签名的文件存储来创建证书，则会为对 `fileName` <xref:System.Security.Cryptography.X509Certificates.X509Certificate> 存储区（而不是存储区中的任何证书）签名的证书创建。</span><span class="sxs-lookup"><span data-stu-id="0f196-260">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f196-261">发生了与证书有关的错误。</span><span class="sxs-lookup"><span data-stu-id="0f196-261">An error with the certificate occurs.</span></span> <span data-ttu-id="0f196-262">例如：</span><span class="sxs-lookup"><span data-stu-id="0f196-262">For example:</span></span>  
  
<span data-ttu-id="0f196-263">-   证书文件不存在。</span><span class="sxs-lookup"><span data-stu-id="0f196-263">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="0f196-264">-   证书无效。</span><span class="sxs-lookup"><span data-stu-id="0f196-264">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="0f196-265">-   证书的密码不正确。</span><span class="sxs-lookup"><span data-stu-id="0f196-265">-   The certificate's password is incorrect.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, string? password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2 : string * string * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2 (fileName, password, keyStorageFlags)" />
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="0f196-266">一个证书文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0f196-266">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="0f196-267">访问 X.509 证书数据所需的密码。</span><span class="sxs-lookup"><span data-stu-id="0f196-267">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="0f196-268">一个枚举值的按位组合，这些值控制在何处以及如何导入证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-268">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="0f196-269">使用一个证书文件名、一个用于访问该证书的密码和一个密钥存储标志初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0f196-269">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name, a password used to access the certificate, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-270">此构造函数 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 使用证书文件名、访问证书所需的密码和密钥存储标志来创建一个新的对象。</span><span class="sxs-lookup"><span data-stu-id="0f196-270">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a certificate file name, a password needed to access the certificate, and a key storage flag.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0f196-271">切勿在源代码中对密码进行硬编码。</span><span class="sxs-lookup"><span data-stu-id="0f196-271">Never hard code a password within your source code.</span></span>  <span data-ttu-id="0f196-272">通过使用 [Ildasm.exe (IL 拆装器) ](/dotnet/framework/tools/ildasm-exe-il-disassembler)、十六进制编辑器，或者只是在文本编辑器中打开程序集（如 Notepad.exe），可以从程序集中检索硬编码的密码。</span><span class="sxs-lookup"><span data-stu-id="0f196-272">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](/dotnet/framework/tools/ildasm-exe-il-disassembler), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="0f196-273">如果 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 通过为指定 PKCS7 签名的文件存储来创建证书，则会为对 `fileName` <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 存储区（而不是存储区中的任何证书）签名的证书创建。</span><span class="sxs-lookup"><span data-stu-id="0f196-273">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f196-274">发生了与证书有关的错误。</span><span class="sxs-lookup"><span data-stu-id="0f196-274">An error with the certificate occurs.</span></span> <span data-ttu-id="0f196-275">例如：</span><span class="sxs-lookup"><span data-stu-id="0f196-275">For example:</span></span>  
  
<span data-ttu-id="0f196-276">-   证书文件不存在。</span><span class="sxs-lookup"><span data-stu-id="0f196-276">-   The certificate file does not exist.</span></span>  
  
<span data-ttu-id="0f196-277">-   证书无效。</span><span class="sxs-lookup"><span data-stu-id="0f196-277">-   The certificate is invalid.</span></span>  
  
<span data-ttu-id="0f196-278">-   证书的密码不正确。</span><span class="sxs-lookup"><span data-stu-id="0f196-278">-   The certificate's password is incorrect.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Archived">
      <MemberSignature Language="C#" Value="public bool Archived { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Archived" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived" />
      <MemberSignature Language="VB.NET" Value="Public Property Archived As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Archived { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Archived : bool with get, set" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.Archived" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f196-279">获取或设置一个指示是否存档 X.509 证书的值。</span><span class="sxs-lookup"><span data-stu-id="0f196-279">Gets or sets a value indicating that an X.509 certificate is archived.</span></span></summary>
        <value><span data-ttu-id="0f196-280">如果存档该证书，则为 <see langword="true" />；如果不存档该证书，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0f196-280"><see langword="true" /> if the certificate is archived, <see langword="false" /> if the certificate is not archived.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-281">仅对与存储关联的证书设置此属性。</span><span class="sxs-lookup"><span data-stu-id="0f196-281">This property is set only on a certificate that is associated with a store.</span></span> <span data-ttu-id="0f196-282">如果设置了属性，并将证书添加到证书存储区，则会保留值。</span><span class="sxs-lookup"><span data-stu-id="0f196-282">If the property is set and the certificate is added to a certificate store, the value is persisted.</span></span> <span data-ttu-id="0f196-283">如果在从存储区中检索到的证书上设置了该属性，则会立即保留值。</span><span class="sxs-lookup"><span data-stu-id="0f196-283">If the property is set on a certificate retrieved from a store, the value is persisted immediately.</span></span>  
  
 <span data-ttu-id="0f196-284">在 x.509 存储中，存档的证书不包含在返回的对象中， <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection> 除非将 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A> 属性设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="0f196-284">In an X.509 store, archived certificates are not included in the returned <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection> object unless the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A> property is set to `true`.</span></span> <span data-ttu-id="0f196-285">设置或取消设置值时，不会发生物理存档活动 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0f196-285">No physical archival activity occurs when the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A> value is set or unset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f196-286">下面的代码示例打开当前用户证书存储，仅选择活动证书，并允许用户选择一个或多个证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-286">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="0f196-287">然后，该示例将证书信息写入控制台。</span><span class="sxs-lookup"><span data-stu-id="0f196-287">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f196-288">该证书不可读。</span><span class="sxs-lookup"><span data-stu-id="0f196-288">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromEncryptedPem">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.X509Certificates.X509Certificate2? CreateFromEncryptedPem (ReadOnlySpan&lt;char&gt; certPem, ReadOnlySpan&lt;char&gt; keyPem, ReadOnlySpan&lt;char&gt; password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.X509Certificates.X509Certificate2 CreateFromEncryptedPem(valuetype System.ReadOnlySpan`1&lt;char&gt; certPem, valuetype System.ReadOnlySpan`1&lt;char&gt; keyPem, valuetype System.ReadOnlySpan`1&lt;char&gt; password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.CreateFromEncryptedPem(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromEncryptedPem (certPem As ReadOnlySpan(Of Char), keyPem As ReadOnlySpan(Of Char), password As ReadOnlySpan(Of Char)) As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::X509Certificates::X509Certificate2 ^ CreateFromEncryptedPem(ReadOnlySpan&lt;char&gt; certPem, ReadOnlySpan&lt;char&gt; keyPem, ReadOnlySpan&lt;char&gt; password);" />
      <MemberSignature Language="F#" Value="static member CreateFromEncryptedPem : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.CreateFromEncryptedPem (certPem, keyPem, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certPem" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="net-5.0" />
        <Parameter Name="keyPem" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="1" FrameworkAlternate="net-5.0" />
        <Parameter Name="password" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="2" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <param name="certPem"><span data-ttu-id="0f196-289">PEM 编码的 X509 证书的文本。</span><span class="sxs-lookup"><span data-stu-id="0f196-289">The text of the PEM-encoded X509 certificate.</span></span></param>
        <param name="keyPem"><span data-ttu-id="0f196-290">受密码保护的 PEM 编码的私钥的文本。</span><span class="sxs-lookup"><span data-stu-id="0f196-290">The text of the password protected PEM-encoded private key.</span></span></param>
        <param name="password"><span data-ttu-id="0f196-291">加密 PEM 的密码。</span><span class="sxs-lookup"><span data-stu-id="0f196-291">The password for the encrypted PEM.</span></span></param>
        <summary><span data-ttu-id="0f196-292">用 RFC 7468 PEM 编码的证书的内容和受密码保护的私钥创建新的 X509 证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-292">Creates a new X509 certificate from the contents of an RFC 7468 PEM-encoded certificate and password protected private key.</span></span></summary>
        <returns><span data-ttu-id="0f196-293">带私钥的新证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-293">A new certificate with the private key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 <span data-ttu-id="0f196-294">受密码保护的 PEM 编码的密钥始终应该具有 PEM 标签 "已加密私钥"。</span><span class="sxs-lookup"><span data-stu-id="0f196-294">Password protected PEM-encoded keys are always expected to have the PEM label "ENCRYPTED PRIVATE KEY".</span></span>
            
<span data-ttu-id="0f196-295">PEM 编码的具有不同标签的项将被忽略。</span><span class="sxs-lookup"><span data-stu-id="0f196-295">PEM-encoded items that have a different label are ignored.</span></span>

 <span data-ttu-id="0f196-296">如果 PEM 编码的证书和私钥采用相同的文本，则对和使用相同的字符串 `certPem` `keyPem` ，例如： <code> CreateFromEncryptedPem(combinedCertAndKey, combinedCertAndKey, theKeyPassword); </code> 合并的 PEM 编码的证书和密钥不需要特定的顺序。</span><span class="sxs-lookup"><span data-stu-id="0f196-296">If the PEM-encoded certificate and private key are in the same text, use the same string for both `certPem` and `keyPem`, such as: <code> CreateFromEncryptedPem(combinedCertAndKey, combinedCertAndKey, theKeyPassword); </code> Combined PEM-encoded certificates and keys do not require a specific order.</span></span> <span data-ttu-id="0f196-297">对于证书，将加载具有证书标签的第一个证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-297">For the certificate, the the first certificate with a CERTIFICATE label is loaded.</span></span> <span data-ttu-id="0f196-298">对于私钥，会加载名为 "已加密私钥" 的第一个私钥。</span><span class="sxs-lookup"><span data-stu-id="0f196-298">For the private key, the first private key with the label "ENCRYPTED PRIVATE KEY" is loaded.</span></span> <span data-ttu-id="0f196-299">用于加载证书和私钥的更高级方案可利用 <xref:System.Security.Cryptography.PemEncoding> 来枚举 PEM 编码的值，并应用任何自定义加载行为。</span><span class="sxs-lookup"><span data-stu-id="0f196-299">More advanced scenarios for loading certificates and private keys can leverage <xref:System.Security.Cryptography.PemEncoding> to enumerate PEM-encoded values and apply any custom loading behavior.</span></span>
            
 <span data-ttu-id="0f196-300">对于不带密码的 PEM 编码的密钥，请使用 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.CreateFromPem(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})> 。</span><span class="sxs-lookup"><span data-stu-id="0f196-300">For PEM-encoded keys without a password, use <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.CreateFromPem(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})>.</span></span>
            
          ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f196-301"><paramref name="certPem" /> 的内容不包含 PEM 编码的证书，或者格式不正确。</span><span class="sxs-lookup"><span data-stu-id="0f196-301">The contents of <paramref name="certPem" /> do not contain a PEM-encoded certificate, or it is malformed.</span></span>
<span data-ttu-id="0f196-302">-或- <paramref name="keyPem" /> 的内容不包含受密码保护的 PEM 编码的私钥，或者格式不正确。</span><span class="sxs-lookup"><span data-stu-id="0f196-302">-or- The contents of <paramref name="keyPem" /> do not contain a password protected PEM-encoded private key, or it is malformed.</span></span>
<span data-ttu-id="0f196-303">-或- <paramref name="keyPem" /> 的内容所包含的密钥与证书中的公钥不匹配。</span><span class="sxs-lookup"><span data-stu-id="0f196-303">-or- The contents of <paramref name="keyPem" /> contains a key that does not match the public key in the certificate.</span></span>
<span data-ttu-id="0f196-304">-或- 证书使用未知的公钥算法。</span><span class="sxs-lookup"><span data-stu-id="0f196-304">-or- The certificate uses an unknown public key algorithm.</span></span>
<span data-ttu-id="0f196-305">-或- 为私钥指定的密码不正确。</span><span class="sxs-lookup"><span data-stu-id="0f196-305">-or- The password specified for the private key is incorrect.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromEncryptedPemFile">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.X509Certificates.X509Certificate2 CreateFromEncryptedPemFile (string certPemFilePath, ReadOnlySpan&lt;char&gt;? password, string? keyPemFilePath = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.X509Certificates.X509Certificate2 CreateFromEncryptedPemFile(string certPemFilePath, valuetype System.ReadOnlySpan`1&lt;char&gt; password, string keyPemFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.CreateFromEncryptedPemFile(System.String,System.ReadOnlySpan{System.Char},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromEncryptedPemFile (certPemFilePath As String, password As ReadOnlySpan(Of Char), Optional keyPemFilePath As String = Nothing) As X509Certificate2" />
      <MemberSignature Language="F#" Value="static member CreateFromEncryptedPemFile : string * ReadOnlySpan&lt;char&gt; * string -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.CreateFromEncryptedPemFile (certPemFilePath, password, keyPemFilePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certPemFilePath" Type="System.String" Index="0" FrameworkAlternate="net-5.0" />
        <Parameter Name="password" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="1" FrameworkAlternate="net-5.0" />
        <Parameter Name="keyPemFilePath" Type="System.String" Index="2" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <param name="certPemFilePath"><span data-ttu-id="0f196-306">PEM 编码的 X509 证书的路径。</span><span class="sxs-lookup"><span data-stu-id="0f196-306">The path for the PEM-encoded X509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="0f196-307">加密 PEM 的密码。</span><span class="sxs-lookup"><span data-stu-id="0f196-307">The password for the encrypted PEM.</span></span></param>
        <param name="keyPemFilePath"><span data-ttu-id="0f196-308">如已指定，则为受密码保护的 PEM 编码的私钥的路径。</span><span class="sxs-lookup"><span data-stu-id="0f196-308">If specified, the path for the password protected PEM-encoded private key.</span></span>
<span data-ttu-id="0f196-309">如果未指定，则将使用 <paramref name="certPemFilePath" /> 文件来加载私钥。</span><span class="sxs-lookup"><span data-stu-id="0f196-309">If unspecified, the <paramref name="certPemFilePath" /> file will be used to load the private key.</span></span></param>
        <summary><span data-ttu-id="0f196-310">用 RFC 7468 PEM 编码的证书的文件内容和受密码保护的私钥创建新的 X509 证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-310">Creates a new X509 certificate from the file contents of an RFC 7468 PEM-encoded certificate and password protected private key.</span></span></summary>
        <returns><span data-ttu-id="0f196-311">带私钥的新证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-311">A new certificate with the private key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 <span data-ttu-id="0f196-312">有关 <xref:System.IO.File.ReadAllText(System.String)> 可引发的异常的其他文档，请参阅。</span><span class="sxs-lookup"><span data-stu-id="0f196-312">See <xref:System.IO.File.ReadAllText(System.String)> for additional documentation about exceptions that can be thrown.</span></span>
            
 <span data-ttu-id="0f196-313">受密码保护的 PEM 编码的密钥始终应该具有 PEM 标签 "已加密私钥"。</span><span class="sxs-lookup"><span data-stu-id="0f196-313">Password protected PEM-encoded keys are always expected to have the PEM label "ENCRYPTED PRIVATE KEY".</span></span>
            
<span data-ttu-id="0f196-314">PEM 编码的具有不同标签的项将被忽略。</span><span class="sxs-lookup"><span data-stu-id="0f196-314">PEM-encoded items that have a different label are ignored.</span></span>

 <span data-ttu-id="0f196-315">组合 PEM 编码的证书和密钥不需要特定的顺序。</span><span class="sxs-lookup"><span data-stu-id="0f196-315">Combined PEM-encoded certificates and keys do not require a specific order.</span></span> <span data-ttu-id="0f196-316">对于证书，将加载具有证书标签的第一个证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-316">For the certificate, the the first certificate with a CERTIFICATE label is loaded.</span></span> <span data-ttu-id="0f196-317">对于私钥，会加载名为 "已加密私钥" 的第一个私钥。</span><span class="sxs-lookup"><span data-stu-id="0f196-317">For the private key, the first private key with the label "ENCRYPTED PRIVATE KEY" is loaded.</span></span> <span data-ttu-id="0f196-318">用于加载证书和私钥的更高级方案可利用 <xref:System.Security.Cryptography.PemEncoding> 来枚举 PEM 编码的值，并应用任何自定义加载行为。</span><span class="sxs-lookup"><span data-stu-id="0f196-318">More advanced scenarios for loading certificates and private keys can leverage <xref:System.Security.Cryptography.PemEncoding> to enumerate PEM-encoded values and apply any custom loading behavior.</span></span>
            
 <span data-ttu-id="0f196-319">对于不带密码的 PEM 编码的密钥，请使用 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.CreateFromPemFile(System.String,System.String)> 。</span><span class="sxs-lookup"><span data-stu-id="0f196-319">For PEM-encoded keys without a password, use <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.CreateFromPemFile(System.String,System.String)>.</span></span>
            
          ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f196-320"><paramref name="certPemFilePath" /> 的文件路径的内容不包含 PEM 编码的证书，或者格式不正确。</span><span class="sxs-lookup"><span data-stu-id="0f196-320">The contents of the file path in <paramref name="certPemFilePath" /> do not contain a PEM-encoded certificate, or it is malformed.</span></span>
<span data-ttu-id="0f196-321">-或- <paramref name="keyPemFilePath" /> 文件路径的内容不包含受密码保护的 PEM 编码的私钥，或者格式不正确。</span><span class="sxs-lookup"><span data-stu-id="0f196-321">-or- The contents of the file path in <paramref name="keyPemFilePath" /> do not contain a password protected PEM-encoded private key, or it is malformed.</span></span>
<span data-ttu-id="0f196-322">-或- <paramref name="keyPemFilePath" /> 的文件路径的内容所包含的密钥与证书中的公钥不匹配。</span><span class="sxs-lookup"><span data-stu-id="0f196-322">-or- The contents of the file path in <paramref name="keyPemFilePath" /> contains a key that does not match the public key in the certificate.</span></span>
<span data-ttu-id="0f196-323">-或- 证书使用未知的公钥算法。</span><span class="sxs-lookup"><span data-stu-id="0f196-323">-or- The certificate uses an unknown public key algorithm.</span></span>
<span data-ttu-id="0f196-324">-或- 为私钥指定的密码不正确。</span><span class="sxs-lookup"><span data-stu-id="0f196-324">-or- The password specified for the private key is incorrect.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f196-325"><paramref name="certPemFilePath" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0f196-325"><paramref name="certPemFilePath" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromPem">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.X509Certificates.X509Certificate2? CreateFromPem (ReadOnlySpan&lt;char&gt; certPem, ReadOnlySpan&lt;char&gt; keyPem);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.X509Certificates.X509Certificate2 CreateFromPem(valuetype System.ReadOnlySpan`1&lt;char&gt; certPem, valuetype System.ReadOnlySpan`1&lt;char&gt; keyPem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.CreateFromPem(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromPem (certPem As ReadOnlySpan(Of Char), keyPem As ReadOnlySpan(Of Char)) As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::X509Certificates::X509Certificate2 ^ CreateFromPem(ReadOnlySpan&lt;char&gt; certPem, ReadOnlySpan&lt;char&gt; keyPem);" />
      <MemberSignature Language="F#" Value="static member CreateFromPem : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.CreateFromPem (certPem, keyPem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certPem" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="net-5.0" />
        <Parameter Name="keyPem" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="1" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <param name="certPem"><span data-ttu-id="0f196-326">PEM 编码的 X509 证书的文本。</span><span class="sxs-lookup"><span data-stu-id="0f196-326">The text of the PEM-encoded X509 certificate.</span></span></param>
        <param name="keyPem"><span data-ttu-id="0f196-327">PEM 编码的私钥的文本。</span><span class="sxs-lookup"><span data-stu-id="0f196-327">The text of the PEM-encoded private key.</span></span></param>
        <summary><span data-ttu-id="0f196-328">用 RFC 7468 PEM 编码的证书的内容和私钥创建新的 X509 证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-328">Creates a new X509 certificate from the contents of an RFC 7468 PEM-encoded certificate and private key.</span></span></summary>
        <returns><span data-ttu-id="0f196-329">带私钥的新证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-329">A new certificate with the private key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 <span data-ttu-id="0f196-330">证书中的 SubjectPublicKeyInfo 确定要接受的私钥的 PEM 标签。</span><span class="sxs-lookup"><span data-stu-id="0f196-330">The SubjectPublicKeyInfo from the certificate determines what PEM labels are accepted for the private key.</span></span>
<span data-ttu-id="0f196-331">对于 RSA 证书，接受的私钥 PEM 标签为 "RSA 私钥" 和 "私钥"。</span><span class="sxs-lookup"><span data-stu-id="0f196-331">For RSA certificates, accepted private key PEM labels are "RSA PRIVATE KEY" and "PRIVATE KEY".</span></span>
<span data-ttu-id="0f196-332">对于 ECDSA 证书，接受的私钥 PEM 标签为 "EC 私钥" 和 "私钥"。</span><span class="sxs-lookup"><span data-stu-id="0f196-332">For ECDSA certificates, accepted private key PEM labels are "EC PRIVATE KEY" and "PRIVATE KEY".</span></span>
<span data-ttu-id="0f196-333">对于 DSA 证书，接受的私钥 PEM 标签为 "私钥"。</span><span class="sxs-lookup"><span data-stu-id="0f196-333">For DSA certificates, the accepted private key PEM label is "PRIVATE KEY".</span></span>
            
<span data-ttu-id="0f196-334">PEM 编码的具有不同标签的项将被忽略。</span><span class="sxs-lookup"><span data-stu-id="0f196-334">PEM-encoded items that have a different label are ignored.</span></span>

 <span data-ttu-id="0f196-335">如果 PEM 编码的证书和私钥采用相同的文本，则对和使用相同的字符串 `certPem` `keyPem` ，例如： <code> CreateFromPem(combinedCertAndKey, combinedCertAndKey); </code> 合并的 PEM 编码的证书和密钥不需要特定的顺序。</span><span class="sxs-lookup"><span data-stu-id="0f196-335">If the PEM-encoded certificate and private key are in the same text, use the same string for both `certPem` and `keyPem`, such as: <code> CreateFromPem(combinedCertAndKey, combinedCertAndKey); </code> Combined PEM-encoded certificates and keys do not require a specific order.</span></span> <span data-ttu-id="0f196-336">对于证书，将加载具有证书标签的第一个证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-336">For the certificate, the the first certificate with a CERTIFICATE label is loaded.</span></span> <span data-ttu-id="0f196-337">对于私钥，将加载第一个具有可接受标签的私钥。</span><span class="sxs-lookup"><span data-stu-id="0f196-337">For the private key, the first private key with an acceptable label is loaded.</span></span> <span data-ttu-id="0f196-338">用于加载证书和私钥的更高级方案可利用 <xref:System.Security.Cryptography.PemEncoding> 来枚举 PEM 编码的值，并应用任何自定义加载行为。</span><span class="sxs-lookup"><span data-stu-id="0f196-338">More advanced scenarios for loading certificates and private keys can leverage <xref:System.Security.Cryptography.PemEncoding> to enumerate PEM-encoded values and apply any custom loading behavior.</span></span>

 <span data-ttu-id="0f196-339">对于受密码保护的 PEM 编码的密钥，请使用 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.CreateFromEncryptedPem(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})> 来指定密码。</span><span class="sxs-lookup"><span data-stu-id="0f196-339">For password protected PEM-encoded keys, use <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.CreateFromEncryptedPem(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})> to specify a password.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f196-340"><paramref name="certPem" /> 的内容不包含 PEM 编码的证书，或者格式不正确。</span><span class="sxs-lookup"><span data-stu-id="0f196-340">The contents of <paramref name="certPem" /> do not contain a PEM-encoded certificate, or it is malformed.</span></span>
<span data-ttu-id="0f196-341">-或- <paramref name="keyPem" /> 的内容不包含 PEM 编码的私钥，或者格式不正确。</span><span class="sxs-lookup"><span data-stu-id="0f196-341">-or- The contents of <paramref name="keyPem" /> do not contain a PEM-encoded private key, or it is malformed.</span></span>
<span data-ttu-id="0f196-342">-或- <paramref name="keyPem" /> 的内容所包含的密钥与证书中的公钥不匹配。</span><span class="sxs-lookup"><span data-stu-id="0f196-342">-or- The contents of <paramref name="keyPem" /> contains a key that does not match the public key in the certificate.</span></span>
<span data-ttu-id="0f196-343">-或- 证书使用未知的公钥算法。</span><span class="sxs-lookup"><span data-stu-id="0f196-343">-or- The certificate uses an unknown public key algorithm.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromPemFile">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.X509Certificates.X509Certificate2 CreateFromPemFile (string certPemFilePath, string? keyPemFilePath = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.X509Certificates.X509Certificate2 CreateFromPemFile(string certPemFilePath, string keyPemFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.CreateFromPemFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromPemFile (certPemFilePath As String, Optional keyPemFilePath As String = Nothing) As X509Certificate2" />
      <MemberSignature Language="F#" Value="static member CreateFromPemFile : string * string -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.CreateFromPemFile (certPemFilePath, keyPemFilePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certPemFilePath" Type="System.String" Index="0" FrameworkAlternate="net-5.0" />
        <Parameter Name="keyPemFilePath" Type="System.String" Index="1" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <param name="certPemFilePath"><span data-ttu-id="0f196-344">PEM 编码的 X509 证书的路径。</span><span class="sxs-lookup"><span data-stu-id="0f196-344">The path for the PEM-encoded X509 certificate.</span></span></param>
        <param name="keyPemFilePath"><span data-ttu-id="0f196-345">如已指定，则为 PEM 编码的私钥的路径。</span><span class="sxs-lookup"><span data-stu-id="0f196-345">If specified, the path for the PEM-encoded private key.</span></span>
<span data-ttu-id="0f196-346">如果未指定，则将使用 <paramref name="certPemFilePath" /> 文件来加载私钥。</span><span class="sxs-lookup"><span data-stu-id="0f196-346">If unspecified, the <paramref name="certPemFilePath" /> file will be used to load the private key.</span></span></param>
        <summary><span data-ttu-id="0f196-347">用 RFC 7468 PEM 编码的证书的文件内容和私钥创建新的 X509 证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-347">Creates a new X509 certificate from the file contents of an RFC 7468 PEM-encoded certificate and private key.</span></span></summary>
        <returns><span data-ttu-id="0f196-348">带私钥的新证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-348">A new certificate with the private key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 <span data-ttu-id="0f196-349">有关 <xref:System.IO.File.ReadAllText(System.String)> 可引发的异常的其他文档，请参阅。</span><span class="sxs-lookup"><span data-stu-id="0f196-349">See <xref:System.IO.File.ReadAllText(System.String)> for additional documentation about exceptions that can be thrown.</span></span>

 <span data-ttu-id="0f196-350">证书中的 SubjectPublicKeyInfo 确定要接受的私钥的 PEM 标签。</span><span class="sxs-lookup"><span data-stu-id="0f196-350">The SubjectPublicKeyInfo from the certificate determines what PEM labels are accepted for the private key.</span></span>
<span data-ttu-id="0f196-351">对于 RSA 证书，接受的私钥 PEM 标签为 "RSA 私钥" 和 "私钥"。</span><span class="sxs-lookup"><span data-stu-id="0f196-351">For RSA certificates, accepted private key PEM labels are "RSA PRIVATE KEY" and "PRIVATE KEY".</span></span>
<span data-ttu-id="0f196-352">对于 ECDSA 证书，接受的私钥 PEM 标签为 "EC 私钥" 和 "私钥"。</span><span class="sxs-lookup"><span data-stu-id="0f196-352">For ECDSA certificates, accepted private key PEM labels are "EC PRIVATE KEY" and "PRIVATE KEY".</span></span>
<span data-ttu-id="0f196-353">对于 DSA 证书，接受的私钥 PEM 标签为 "私钥"。</span><span class="sxs-lookup"><span data-stu-id="0f196-353">For DSA certificates, the accepted private key PEM label is "PRIVATE KEY".</span></span>

<span data-ttu-id="0f196-354">PEM 编码的具有不同标签的项将被忽略。</span><span class="sxs-lookup"><span data-stu-id="0f196-354">PEM-encoded items that have a different label are ignored.</span></span>

 <span data-ttu-id="0f196-355">组合 PEM 编码的证书和密钥不需要特定的顺序。</span><span class="sxs-lookup"><span data-stu-id="0f196-355">Combined PEM-encoded certificates and keys do not require a specific order.</span></span> <span data-ttu-id="0f196-356">对于证书，将加载具有证书标签的第一个证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-356">For the certificate, the the first certificate with a CERTIFICATE label is loaded.</span></span> <span data-ttu-id="0f196-357">对于私钥，将加载第一个具有可接受标签的私钥。</span><span class="sxs-lookup"><span data-stu-id="0f196-357">For the private key, the first private key with an acceptable label is loaded.</span></span> <span data-ttu-id="0f196-358">用于加载证书和私钥的更高级方案可利用 <xref:System.Security.Cryptography.PemEncoding> 来枚举 PEM 编码的值，并应用任何自定义加载行为。</span><span class="sxs-lookup"><span data-stu-id="0f196-358">More advanced scenarios for loading certificates and private keys can leverage <xref:System.Security.Cryptography.PemEncoding> to enumerate PEM-encoded values and apply any custom loading behavior.</span></span>

 <span data-ttu-id="0f196-359">对于受密码保护的 PEM 编码的密钥，请使用 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.CreateFromEncryptedPemFile(System.String,System.ReadOnlySpan{System.Char},System.String)> 来指定密码。</span><span class="sxs-lookup"><span data-stu-id="0f196-359">For password protected PEM-encoded keys, use <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.CreateFromEncryptedPemFile(System.String,System.ReadOnlySpan{System.Char},System.String)> to specify a password.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f196-360"><paramref name="certPemFilePath" /> 的文件路径的内容不包含 PEM 编码的证书，或者格式不正确。</span><span class="sxs-lookup"><span data-stu-id="0f196-360">The contents of the file path in <paramref name="certPemFilePath" /> do not contain a PEM-encoded certificate, or it is malformed.</span></span>
<span data-ttu-id="0f196-361">-或- <paramref name="keyPemFilePath" /> 文件路径的内容不包含 PEM 编码的私钥，或者格式不正确。</span><span class="sxs-lookup"><span data-stu-id="0f196-361">-or- The contents of the file path in <paramref name="keyPemFilePath" /> do not contain a PEM-encoded private key, or it is malformed.</span></span>
<span data-ttu-id="0f196-362">-或- <paramref name="keyPemFilePath" /> 的文件路径的内容所包含的密钥与证书中的公钥不匹配。</span><span class="sxs-lookup"><span data-stu-id="0f196-362">-or- The contents of the file path in <paramref name="keyPemFilePath" /> contains a key that does not match the public key in the certificate.</span></span>
<span data-ttu-id="0f196-363">-或- 证书使用未知的公钥算法。</span><span class="sxs-lookup"><span data-stu-id="0f196-363">-or- The certificate uses an unknown public key algorithm.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f196-364"><paramref name="certPemFilePath" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0f196-364"><paramref name="certPemFilePath" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public override byte[] Export (System.Security.Cryptography.X509Certificates.X509ContentType contentType, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] Export(valuetype System.Security.Cryptography.X509Certificates.X509ContentType contentType, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Export (contentType As X509ContentType, password As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ Export(System::Security::Cryptography::X509Certificates::X509ContentType contentType, System::String ^ password);" />
      <MemberSignature Language="F#" Value="override this.Export : System.Security.Cryptography.X509Certificates.X509ContentType * string -&gt; byte[]" Usage="x509Certificate2.Export (contentType, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.MonoTODO("X509ContentType.SerializedCert is not supported")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.MonoTODO("X509ContentType.SerializedCert is not supported")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.Security.Cryptography.X509Certificates.X509ContentType" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="password" Type="System.String" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="contentType"><span data-ttu-id="0f196-365">描述如何设置输出数据格式的 <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="0f196-365">One of the <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> values that describes how to format the output data.</span></span></param>
        <param name="password"><span data-ttu-id="0f196-366">访问 X.509 证书数据所需的密码。</span><span class="sxs-lookup"><span data-stu-id="0f196-366">The password required to access the X.509 certificate data.</span></span></param>
        <summary><span data-ttu-id="0f196-367">使用指定的密码，以 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> 值之一所描述的格式将当前 <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> 对象导出到字节数组。</span><span class="sxs-lookup"><span data-stu-id="0f196-367">Exports the current <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object to a byte array in a format described by one of the <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> values, and using the specified password.</span></span></summary>
        <returns><span data-ttu-id="0f196-368">表示当前 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> 对象的字节数组。</span><span class="sxs-lookup"><span data-stu-id="0f196-368">An array of bytes that represents the current <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-369">`contentType`参数仅接受以下 <xref:System.Security.Cryptography.X509Certificates.X509ContentType> 枚举值： <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Cert> 、 <xref:System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert> 和 <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs12> 。</span><span class="sxs-lookup"><span data-stu-id="0f196-369">The `contentType` parameter accepts only the following values of the <xref:System.Security.Cryptography.X509Certificates.X509ContentType> enumeration: <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Cert>, <xref:System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert>, and <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs12>.</span></span>  <span data-ttu-id="0f196-370">如果传递任何其他值，将导致 <xref:System.Security.Cryptography.CryptographicException> 引发。</span><span class="sxs-lookup"><span data-stu-id="0f196-370">Passing any other value causes a <xref:System.Security.Cryptography.CryptographicException> to be thrown.</span></span>  
  
> [!IMPORTANT]
> <span data-ttu-id="0f196-371">切勿在源代码中对密码进行硬编码。</span><span class="sxs-lookup"><span data-stu-id="0f196-371">Never hard code a password within your source code.</span></span>  <span data-ttu-id="0f196-372">通过使用 [Ildasm.exe (IL 拆装器) ](/dotnet/framework/tools/ildasm-exe-il-disassembler) 工具、十六进制编辑器，或者只是在文本编辑器（例如 Notepad.exe）中打开程序集，可以从程序集检索硬编码的密码。</span><span class="sxs-lookup"><span data-stu-id="0f196-372">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](/dotnet/framework/tools/ildasm-exe-il-disassembler) tool, a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f196-373">将 <see cref="F:System.Security.Cryptography.X509Certificates.X509ContentType.Cert" />、<see cref="F:System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert" /> 或 <see cref="F:System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs12" /> 之外的一个值传递给 <paramref name="contentType" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="0f196-373">A value other than <see cref="F:System.Security.Cryptography.X509Certificates.X509ContentType.Cert" />, <see cref="F:System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert" />, or <see cref="F:System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs12" /> was passed to the <paramref name="contentType" /> parameter.</span></span>  
  
<span data-ttu-id="0f196-374">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0f196-374">-or-</span></span> 
<span data-ttu-id="0f196-375">无法导出证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-375">The certificate could not be exported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Extensions">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509ExtensionCollection Extensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509ExtensionCollection Extensions" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Extensions As X509ExtensionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509ExtensionCollection ^ Extensions { System::Security::Cryptography::X509Certificates::X509ExtensionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Extensions : System.Security.Cryptography.X509Certificates.X509ExtensionCollection" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ExtensionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f196-376">获取 <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="0f196-376">Gets a collection of <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> objects.</span></span></summary>
        <value><span data-ttu-id="0f196-377">一个 <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0f196-377">An <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-378">X.509 v3 证书格式中定义的扩展允许在证书中包含其他数据。</span><span class="sxs-lookup"><span data-stu-id="0f196-378">The extensions defined in the X.509 v3 certificate format allow additional data to be included in the certificate.</span></span> <span data-ttu-id="0f196-379">X.509 v3 定义中的 ISO 以及 RFC 3280 "[证书和证书吊销列表 (CRL) 配置文件](https://go.microsoft.com/fwlink/?LinkId=45286)" 中的 PKIX 定义了许多扩展。</span><span class="sxs-lookup"><span data-stu-id="0f196-379">A number of extensions are defined by ISO in the X.509 v3 definition as well as by PKIX in RFC 3280, "[Certificate and Certificate Revocation List (CRL) Profile](https://go.microsoft.com/fwlink/?LinkId=45286)."</span></span> <span data-ttu-id="0f196-380">常见扩展包含有关密钥用法的信息 (<xref:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension>) 、密钥标识符 (<xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension>) 、证书策略、吊销信息 (CRL 分发点扩展) 和其他用途。</span><span class="sxs-lookup"><span data-stu-id="0f196-380">Common extensions include information regarding key usage (<xref:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension>), key identifiers (<xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension>), certificate policies, revocation information (CRL Distribution Point extension), and other uses.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f196-381">下面的代码示例打开当前用户证书存储，仅选择活动证书，并允许用户选择一个或多个证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-381">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="0f196-382">然后，该示例将证书信息写入控制台。</span><span class="sxs-lookup"><span data-stu-id="0f196-382">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f196-383">该证书不可读。</span><span class="sxs-lookup"><span data-stu-id="0f196-383">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FriendlyName">
      <MemberSignature Language="C#" Value="public string FriendlyName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FriendlyName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName" />
      <MemberSignature Language="VB.NET" Value="Public Property FriendlyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FriendlyName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FriendlyName : string with get, set" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f196-384">获取或设置证书的关联别名。</span><span class="sxs-lookup"><span data-stu-id="0f196-384">Gets or sets the associated alias for a certificate.</span></span></summary>
        <value><span data-ttu-id="0f196-385">证书的友好名称。</span><span class="sxs-lookup"><span data-stu-id="0f196-385">The certificate's friendly name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-386">友好名称是可设置的 x.509 证书存储中的属性。</span><span class="sxs-lookup"><span data-stu-id="0f196-386">Friendly names are properties in the X.509 certificate store that can be set.</span></span> <span data-ttu-id="0f196-387">它们用于使用户能够将别名与证书相关联，以便能够轻松地识别它们。</span><span class="sxs-lookup"><span data-stu-id="0f196-387">They are used to enable a user to associate aliases with certificates so they can be easily identified.</span></span>  
  
 <span data-ttu-id="0f196-388">如果证书不存在友好名称，则返回空字符串 ( "" ) 。</span><span class="sxs-lookup"><span data-stu-id="0f196-388">If no friendly name exists for the certificate, an empty string ("") is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f196-389">下面的代码示例创建一个命令行可执行文件，该命令行可执行文件将证书文件作为参数，并将各种证书属性打印到控制台。</span><span class="sxs-lookup"><span data-stu-id="0f196-389">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f196-390">该证书不可读。</span><span class="sxs-lookup"><span data-stu-id="0f196-390">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCertContentType">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0f196-391">指示字节数组或文件中所包含的证书类型。</span><span class="sxs-lookup"><span data-stu-id="0f196-391">Indicates the type of certificate contained in a byte array or file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCertContentType">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType (byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType(unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCertContentType (rawData As Byte()) As X509ContentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::X509Certificates::X509ContentType GetCertContentType(cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberSignature Language="F#" Value="static member GetCertContentType : byte[] -&gt; System.Security.Cryptography.X509Certificates.X509ContentType" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType rawData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.MonoTODO("Detection limited to Cert, Pfx, Pkcs12, Pkcs7 and Unknown")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.MonoTODO("Detection limited to Cert, Pfx, Pkcs12, Pkcs7 and Unknown")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ContentType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="0f196-392">一个包含 X.509 证书数据的字节数组。</span><span class="sxs-lookup"><span data-stu-id="0f196-392">A byte array containing data from an X.509 certificate.</span></span></param>
        <summary><span data-ttu-id="0f196-393">指示字节数组中所包含的证书类型。</span><span class="sxs-lookup"><span data-stu-id="0f196-393">Indicates the type of certificate contained in a byte array.</span></span></summary>
        <returns><span data-ttu-id="0f196-394">一个 <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0f196-394">An <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-395">此方法使你能够发现文件中的证书类型。</span><span class="sxs-lookup"><span data-stu-id="0f196-395">This method enables you to discover the type of certificate in a file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f196-396">下面的代码示例打开当前用户证书存储，仅选择活动证书，并允许用户选择一个或多个证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-396">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="0f196-397">然后，该示例将证书信息写入控制台。</span><span class="sxs-lookup"><span data-stu-id="0f196-397">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0f196-398"><paramref name="rawData" /> 的长度为零或为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0f196-398"><paramref name="rawData" /> has a zero length or is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCertContentType">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType (ReadOnlySpan&lt;byte&gt; rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCertContentType (rawData As ReadOnlySpan(Of Byte)) As X509ContentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::X509Certificates::X509ContentType GetCertContentType(ReadOnlySpan&lt;System::Byte&gt; rawData);" />
      <MemberSignature Language="F#" Value="static member GetCertContentType : ReadOnlySpan&lt;byte&gt; -&gt; System.Security.Cryptography.X509Certificates.X509ContentType" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType rawData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ContentType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="0f196-399">要标识的数据。</span><span class="sxs-lookup"><span data-stu-id="0f196-399">The data to identify.</span></span></param>
        <summary><span data-ttu-id="0f196-400">指示提供的数据中所包含的证书类型。</span><span class="sxs-lookup"><span data-stu-id="0f196-400">Indicates the type of certificate contained in the provided data.</span></span></summary>
        <returns><span data-ttu-id="0f196-401">枚举值之一，指示所提供数据的内容类型。</span><span class="sxs-lookup"><span data-stu-id="0f196-401">One of the enumeration values that indicate the content type of the provided data.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCertContentType">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCertContentType (fileName As String) As X509ContentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::X509Certificates::X509ContentType GetCertContentType(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="static member GetCertContentType : string -&gt; System.Security.Cryptography.X509Certificates.X509ContentType" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.MonoTODO("Detection limited to Cert, Pfx, Pkcs12 and Unknown")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.MonoTODO("Detection limited to Cert, Pfx, Pkcs12 and Unknown")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ContentType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="0f196-402">一个证书文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0f196-402">The name of a certificate file.</span></span></param>
        <summary><span data-ttu-id="0f196-403">指示文件中所包含的证书类型。</span><span class="sxs-lookup"><span data-stu-id="0f196-403">Indicates the type of certificate contained in a file.</span></span></summary>
        <returns><span data-ttu-id="0f196-404">一个 <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0f196-404">An <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-405">此方法使你能够发现文件中的证书类型。</span><span class="sxs-lookup"><span data-stu-id="0f196-405">This method enables you to discover the type of certificate in a file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f196-406"><paramref name="fileName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0f196-406"><paramref name="fileName" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetNameInfo">
      <MemberSignature Language="C#" Value="public string GetNameInfo (System.Security.Cryptography.X509Certificates.X509NameType nameType, bool forIssuer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetNameInfo(valuetype System.Security.Cryptography.X509Certificates.X509NameType nameType, bool forIssuer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo(System.Security.Cryptography.X509Certificates.X509NameType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNameInfo (nameType As X509NameType, forIssuer As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetNameInfo(System::Security::Cryptography::X509Certificates::X509NameType nameType, bool forIssuer);" />
      <MemberSignature Language="F#" Value="member this.GetNameInfo : System.Security.Cryptography.X509Certificates.X509NameType * bool -&gt; string" Usage="x509Certificate2.GetNameInfo (nameType, forIssuer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.MonoTODO("always return String.Empty for UpnName, DnsFromAlternativeName and UrlName")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.MonoTODO("always return String.Empty for UpnName, DnsFromAlternativeName and UrlName")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nameType" Type="System.Security.Cryptography.X509Certificates.X509NameType" />
        <Parameter Name="forIssuer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nameType"><span data-ttu-id="0f196-407">该主题的 <see cref="T:System.Security.Cryptography.X509Certificates.X509NameType" /> 值。</span><span class="sxs-lookup"><span data-stu-id="0f196-407">The <see cref="T:System.Security.Cryptography.X509Certificates.X509NameType" /> value for the subject.</span></span></param>
        <param name="forIssuer"><span data-ttu-id="0f196-408">如果包含颁发者名称，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0f196-408"><see langword="true" /> to include the issuer name; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="0f196-409">从证书中获取主题和颁发者名称。</span><span class="sxs-lookup"><span data-stu-id="0f196-409">Gets the subject and issuer names from a certificate.</span></span></summary>
        <returns><span data-ttu-id="0f196-410">证书的名称。</span><span class="sxs-lookup"><span data-stu-id="0f196-410">The name of the certificate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-411">应始终使用此方法而不是分析证书，因为很多名称值可以位于多个位置。</span><span class="sxs-lookup"><span data-stu-id="0f196-411">This method should always be used instead of parsing the certificate, since many of the name values can be located in multiple locations.</span></span> <span data-ttu-id="0f196-412">使用此方法可以确保返回适当的名称。</span><span class="sxs-lookup"><span data-stu-id="0f196-412">Using this method ensures that the appropriate name is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f196-413">下面的代码示例打开当前用户证书存储，仅选择活动证书，并允许用户选择一个或多个证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-413">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="0f196-414">然后，该示例将证书信息写入控制台。</span><span class="sxs-lookup"><span data-stu-id="0f196-414">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPrivateKey">
      <MemberSignature Language="C#" Value="public bool HasPrivateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPrivateKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasPrivateKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasPrivateKey { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasPrivateKey : bool" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f196-415">获取一个值，该值指示 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象是否包含私钥。</span><span class="sxs-lookup"><span data-stu-id="0f196-415">Gets a value that indicates whether an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object contains a private key.</span></span></summary>
        <value><span data-ttu-id="0f196-416">如果 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象包含私钥，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0f196-416"><see langword="true" /> if the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object contains a private key; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f196-417">证书上下文无效。</span><span class="sxs-lookup"><span data-stu-id="0f196-417">The certificate context is invalid.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Import">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0f196-418">使用所提供的证书信息填充 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0f196-418">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with the certificate information provided.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (rawData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberSignature Language="F#" Value="override this.Import : byte[] -&gt; unit" Usage="x509Certificate2.Import rawData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="0f196-419">一个包含 X.509 证书数据的字节数组。</span><span class="sxs-lookup"><span data-stu-id="0f196-419">A byte array containing data from an X.509 certificate.</span></span></param>
        <summary><span data-ttu-id="0f196-420">使用字节数组中的数据填充 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0f196-420">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with data from a byte array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-421">此方法可用于获取 x.509 证书的原始字节数组，并 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 使用其关联值填充对象。</span><span class="sxs-lookup"><span data-stu-id="0f196-421">This method can be used to take a raw byte array of an X.509 certificate and populate the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object with its associated values.</span></span>  
  
 <span data-ttu-id="0f196-422">由于此方法只接受字节数组，因此它只能用于不需要密码的证书类型，包括 Base64 编码或 DER 编码的 x.509 证书或 PFX/PKCS12 证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-422">Since this method accepts only a byte array, it can be used only for certificate types that do not require a password, including a Base64-encoded or DER-encoded X.509 certificate or a PFX/PKCS12 certificate.</span></span> <span data-ttu-id="0f196-423">请注意，PFX/PKCS12 证书可包含多个证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-423">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="0f196-424">在这种情况下，将使用与私钥关联的第一个证书，或者如果找不到私钥，则使用第一个证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-424">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="override this.Import : string -&gt; unit" Usage="x509Certificate2.Import fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="0f196-425">证书的名称。</span><span class="sxs-lookup"><span data-stu-id="0f196-425">The name of a certificate.</span></span></param>
        <summary><span data-ttu-id="0f196-426">使用证书文件中的信息填充 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0f196-426">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with information from a certificate file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-427">此方法使用证书文件（如扩展名为 .cer 的文件）来表示 x.509 证书，并 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 使用该文件包含的证书来填充对象。</span><span class="sxs-lookup"><span data-stu-id="0f196-427">This method uses a certificate file, such as a file with a .cer extension, that represents an X.509 certificate and populates the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object with the certificate the file contains.</span></span>  
  
 <span data-ttu-id="0f196-428">此方法可与多种证书类型一起使用，包括 Base64 编码或 DER 编码的 x.509 证书、PFX/PKCS12 证书和签名程序证书（如 Authenticode）。</span><span class="sxs-lookup"><span data-stu-id="0f196-428">This method can be used with several certificate types, including Base64-encoded or DER-encoded X.509 certificates, PFX/PKCS12 certificates, and signer certificates such as Authenticode.</span></span> <span data-ttu-id="0f196-429">请注意，PFX/PKCS12 证书可包含多个证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-429">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="0f196-430">在这种情况下，将使用与私钥关联的第一个证书，或者如果找不到私钥，则使用第一个证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-430">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (byte[] rawData, System.Security.SecureString? password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(unsigned int8[] rawData, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (rawData As Byte(), password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(cli::array &lt;System::Byte&gt; ^ rawData, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="override this.Import : byte[] * System.Security.SecureString * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit" Usage="x509Certificate2.Import (rawData, password, keyStorageFlags)" />
      <MemberSignature Language="C#" Value="public override void Import (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.MonoTODO("SecureString is incomplete")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.MonoTODO("SecureString is incomplete")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="password" Type="System.Security.SecureString" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" Index="2" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="0f196-431">包含 X.509 证书数据的字节数组。</span><span class="sxs-lookup"><span data-stu-id="0f196-431">A byte array that contains data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="0f196-432">访问 X.509 证书数据所需的密码。</span><span class="sxs-lookup"><span data-stu-id="0f196-432">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="0f196-433">一个枚举值的按位组合，这些值控制在何处以及如何导入证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-433">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="0f196-434">使用一个字节数组中的数据、一个密码和一个密钥存储标志填充 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0f196-434">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object using data from a byte array, a password, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-435">你可以将此方法用于证书类型，如 Base64 编码或 DER 编码的 x.509 证书或 PFX/PKCS12 证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-435">You can use this method for certificate types such as Base64-encoded or DER-encoded X.509 certificates, or PFX/PKCS12 certificates.</span></span> <span data-ttu-id="0f196-436">请注意，PFX/PKCS12 证书可包含多个证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-436">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="0f196-437">在这种情况下，将使用与私钥关联的第一个证书，或者如果找不到私钥，则使用第一个证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-437">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0f196-438">切勿在源代码中对密码进行硬编码。</span><span class="sxs-lookup"><span data-stu-id="0f196-438">Never hard code a password within your source code.</span></span>  <span data-ttu-id="0f196-439">通过使用 [Ildasm.exe (IL 拆装器) ](/dotnet/framework/tools/ildasm-exe-il-disassembler)、十六进制编辑器，或者只是在文本编辑器中打开程序集（如 Notepad.exe），可以从程序集中检索硬编码的密码。</span><span class="sxs-lookup"><span data-stu-id="0f196-439">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](/dotnet/framework/tools/ildasm-exe-il-disassembler), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (byte[] rawData, string? password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(unsigned int8[] rawData, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (rawData As Byte(), password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(cli::array &lt;System::Byte&gt; ^ rawData, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="override this.Import : byte[] * string * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit" Usage="x509Certificate2.Import (rawData, password, keyStorageFlags)" />
      <MemberSignature Language="C#" Value="public override void Import (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.MonoTODO("missing KeyStorageFlags support")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.MonoTODO("missing KeyStorageFlags support")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="password" Type="System.String" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" Index="2" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="0f196-440">一个包含 X.509 证书数据的字节数组。</span><span class="sxs-lookup"><span data-stu-id="0f196-440">A byte array containing data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="0f196-441">访问 X.509 证书数据所需的密码。</span><span class="sxs-lookup"><span data-stu-id="0f196-441">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="0f196-442">一个枚举值的按位组合，这些值控制在何处以及如何导入证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-442">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="0f196-443">使用一个字节数组中的数据、一个密码和用于确定如何导入私钥的标志填充 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0f196-443">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object using data from a byte array, a password, and flags for determining how to import the private key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-444">此方法可用于 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 使用由字节数组表示的证书的密码来填充对象。</span><span class="sxs-lookup"><span data-stu-id="0f196-444">This method can be used to populate an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a password for the certificate represented by the byte array.</span></span> <span data-ttu-id="0f196-445"><xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags>值可用于控制在何处以及如何导入私钥。</span><span class="sxs-lookup"><span data-stu-id="0f196-445">The <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> value can be used to control where and how to import the private key.</span></span>  
  
 <span data-ttu-id="0f196-446">此方法接受字节数组，可用于证书类型，如 Base64 编码的 x.509 证书或 "DER 编码的 PKCS12 证书" 或 "PFX/证书"。</span><span class="sxs-lookup"><span data-stu-id="0f196-446">This method accepts a byte array and can be used for certificate types such as Base64-encoded or DER-encoded X.509 certificates or PFX/PKCS12 certificates.</span></span> <span data-ttu-id="0f196-447">请注意，PFX/PKCS12 证书可包含多个证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-447">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="0f196-448">在这种情况下，将使用与私钥关联的第一个证书，或者如果找不到私钥，则使用第一个证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-448">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0f196-449">切勿在源代码中对密码进行硬编码。</span><span class="sxs-lookup"><span data-stu-id="0f196-449">Never hard code a password within your source code.</span></span>  <span data-ttu-id="0f196-450">通过使用 [Ildasm.exe (IL 拆装器) ](/dotnet/framework/tools/ildasm-exe-il-disassembler)、十六进制编辑器，或者只是在文本编辑器中打开程序集（如 Notepad.exe），可以从程序集中检索硬编码的密码。</span><span class="sxs-lookup"><span data-stu-id="0f196-450">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](/dotnet/framework/tools/ildasm-exe-il-disassembler), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f196-451">下面的代码示例创建一个命令行可执行文件，该命令行可执行文件将证书文件作为参数，并将各种证书属性打印到控制台。</span><span class="sxs-lookup"><span data-stu-id="0f196-451">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (string fileName, System.Security.SecureString? password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(string fileName, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (fileName As String, password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(System::String ^ fileName, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="override this.Import : string * System.Security.SecureString * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit" Usage="x509Certificate2.Import (fileName, password, keyStorageFlags)" />
      <MemberSignature Language="C#" Value="public override void Import (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.MonoTODO("SecureString is incomplete")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.MonoTODO("SecureString is incomplete")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="password" Type="System.Security.SecureString" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" Index="2" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="0f196-452">一个证书文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0f196-452">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="0f196-453">访问 X.509 证书数据所需的密码。</span><span class="sxs-lookup"><span data-stu-id="0f196-453">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="0f196-454">一个枚举值的按位组合，这些值控制在何处以及如何导入证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-454">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="0f196-455">使用一个证书文件中的信息，一个密码和一个密钥存储标志填充 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0f196-455">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with information from a certificate file, a password, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-456">**安全说明** 切勿在源代码中对密码进行硬编码。</span><span class="sxs-lookup"><span data-stu-id="0f196-456">**Security Note** Never hard code a password within your source code.</span></span>  <span data-ttu-id="0f196-457">通过使用 [Ildasm.exe (IL 拆装器) ](/dotnet/framework/tools/ildasm-exe-il-disassembler)、十六进制编辑器，或者只是在文本编辑器中打开程序集（如 Notepad.exe），可以从程序集中检索硬编码的密码。</span><span class="sxs-lookup"><span data-stu-id="0f196-457">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](/dotnet/framework/tools/ildasm-exe-il-disassembler), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (string fileName, string? password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(string fileName, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (fileName As String, password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(System::String ^ fileName, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="override this.Import : string * string * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit" Usage="x509Certificate2.Import (fileName, password, keyStorageFlags)" />
      <MemberSignature Language="C#" Value="public override void Import (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.MonoTODO("missing KeyStorageFlags support")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.MonoTODO("missing KeyStorageFlags support")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="password" Type="System.String" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" Index="2" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="0f196-458">一个证书文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0f196-458">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="0f196-459">访问 X.509 证书数据所需的密码。</span><span class="sxs-lookup"><span data-stu-id="0f196-459">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="0f196-460">一个枚举值的按位组合，这些值控制在何处以及如何导入证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-460">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="0f196-461">使用一个证书文件中的信息、一个密码和一个 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 值填充 <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0f196-461">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with information from a certificate file, a password, and a <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-462">此方法可用于使用 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 证书文件中的信息、密码和值填充对象 <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> 。</span><span class="sxs-lookup"><span data-stu-id="0f196-462">This method can be used populate an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object with information from a certificate file, a password, and an <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> value.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0f196-463">切勿在源代码中对密码进行硬编码。</span><span class="sxs-lookup"><span data-stu-id="0f196-463">Never hard code a password within your source code.</span></span>  <span data-ttu-id="0f196-464">通过使用 [Ildasm.exe (IL 拆装器) ](/dotnet/framework/tools/ildasm-exe-il-disassembler)、十六进制编辑器，或者只是在文本编辑器中打开程序集（如 Notepad.exe），可以从程序集中检索硬编码的密码。</span><span class="sxs-lookup"><span data-stu-id="0f196-464">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](/dotnet/framework/tools/ildasm-exe-il-disassembler), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IssuerName">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X500DistinguishedName IssuerName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X500DistinguishedName IssuerName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IssuerName As X500DistinguishedName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ IssuerName { System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IssuerName : System.Security.Cryptography.X509Certificates.X500DistinguishedName" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X500DistinguishedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f196-465">获取证书颁发者的可分辨名称。</span><span class="sxs-lookup"><span data-stu-id="0f196-465">Gets the distinguished name of the certificate issuer.</span></span></summary>
        <value><span data-ttu-id="0f196-466">一个 <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> 对象，包含证书颁发者的名称。</span><span class="sxs-lookup"><span data-stu-id="0f196-466">An <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> object that contains the name of the certificate issuer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-467">此属性包含颁发证书 (CA) 的证书颁发机构的名称。</span><span class="sxs-lookup"><span data-stu-id="0f196-467">This property contains the name of the certificate authority (CA) that issued the certificate.</span></span> <span data-ttu-id="0f196-468">若要获取证书的名称，请使用 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="0f196-468">To obtain the name of a certificate, use the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo%2A> method.</span></span>  
  
 <span data-ttu-id="0f196-469">证书的可分辨名称是证书主题或颁发者的文本表示形式。</span><span class="sxs-lookup"><span data-stu-id="0f196-469">The distinguished name for the certificate is a textual representation of the certificate subject or issuer.</span></span> <span data-ttu-id="0f196-470">此表示形式包含名称特性 (例如，"CN = MyName，OU = MyOrgUnit，C = US" ) 。</span><span class="sxs-lookup"><span data-stu-id="0f196-470">This representation consists of name attributes (for example, "CN=MyName, OU=MyOrgUnit, C=US").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f196-471">下面的代码示例创建一个命令行可执行文件，该文件将证书文件作为参数，并将各种证书属性打印到控制台。</span><span class="sxs-lookup"><span data-stu-id="0f196-471">The following code example creates a command-line executable file that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f196-472">证书上下文无效。</span><span class="sxs-lookup"><span data-stu-id="0f196-472">The certificate context is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NotAfter">
      <MemberSignature Language="C#" Value="public DateTime NotAfter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime NotAfter" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NotAfter As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime NotAfter { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.NotAfter : DateTime" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f196-473">获取本地时间中的一个日期，在该日期后证书不再有效。</span><span class="sxs-lookup"><span data-stu-id="0f196-473">Gets the date in local time after which a certificate is no longer valid.</span></span></summary>
        <value><span data-ttu-id="0f196-474">表示证书的到期日期的 <see cref="T:System.DateTime" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0f196-474">A <see cref="T:System.DateTime" /> object that represents the expiration date for the certificate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-475">此属性指示证书失效的到期日期。</span><span class="sxs-lookup"><span data-stu-id="0f196-475">This property indicates an expiration date on which the certificate becomes invalid.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f196-476">下面的代码示例创建一个命令行可执行文件，该命令行可执行文件将证书文件作为参数，并将各种证书属性打印到控制台。</span><span class="sxs-lookup"><span data-stu-id="0f196-476">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f196-477">该证书不可读。</span><span class="sxs-lookup"><span data-stu-id="0f196-477">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NotBefore">
      <MemberSignature Language="C#" Value="public DateTime NotBefore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime NotBefore" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NotBefore As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime NotBefore { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.NotBefore : DateTime" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f196-478">获取证书生效的本地时间中的日期。</span><span class="sxs-lookup"><span data-stu-id="0f196-478">Gets the date in local time on which a certificate becomes valid.</span></span></summary>
        <value><span data-ttu-id="0f196-479">一个表示证书生效日期的 <see cref="T:System.DateTime" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0f196-479">A <see cref="T:System.DateTime" /> object that represents the effective date of the certificate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-480">此属性指示证书生效的日期。</span><span class="sxs-lookup"><span data-stu-id="0f196-480">This property indicates the date on which the certificate becomes valid.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f196-481">下面的代码示例创建一个命令行可执行文件，该命令行可执行文件将证书文件作为参数，并将各种证书属性打印到控制台。</span><span class="sxs-lookup"><span data-stu-id="0f196-481">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f196-482">该证书不可读。</span><span class="sxs-lookup"><span data-stu-id="0f196-482">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PrivateKey">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.AsymmetricAlgorithm? PrivateKey { get; set; }" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.AsymmetricAlgorithm PrivateKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey" />
      <MemberSignature Language="VB.NET" Value="Public Property PrivateKey As AsymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::AsymmetricAlgorithm ^ PrivateKey { System::Security::Cryptography::AsymmetricAlgorithm ^ get(); void set(System::Security::Cryptography::AsymmetricAlgorithm ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrivateKey : System.Security.Cryptography.AsymmetricAlgorithm with get, set" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey" />
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.AsymmetricAlgorithm PrivateKey { get; set; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f196-483">获取或设置 <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 对象，该对象表示与证书关联的私钥。</span><span class="sxs-lookup"><span data-stu-id="0f196-483">Gets or sets the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object that represents the private key associated with a certificate.</span></span></summary>
        <value><span data-ttu-id="0f196-484">一个 <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 对象，表示 RSA 或 DSA 加密服务提供程序。</span><span class="sxs-lookup"><span data-stu-id="0f196-484">An <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object, which is either an RSA or DSA cryptographic service provider.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-485">此属性当前仅支持 RSA 或 DSA 密钥，因此它将返回 <xref:System.Security.Cryptography.RSA> <xref:System.Security.Cryptography.DSA> .net Core 中的或对象或 <xref:System.Security.Cryptography.RSACryptoServiceProvider> .NET Framework 中的或 <xref:System.Security.Cryptography.DSACryptoServiceProvider> 对象。</span><span class="sxs-lookup"><span data-stu-id="0f196-485">Currently this property supports only RSA or DSA keys, so it returns either an <xref:System.Security.Cryptography.RSA> or a <xref:System.Security.Cryptography.DSA> object in .NET Core or an <xref:System.Security.Cryptography.RSACryptoServiceProvider> or a <xref:System.Security.Cryptography.DSACryptoServiceProvider> object in .NET Framework.</span></span> <span data-ttu-id="0f196-486">如果没有与证书关联的私钥，则返回 `null` 。</span><span class="sxs-lookup"><span data-stu-id="0f196-486">If no private key is associated with the certificate, it returns `null`.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="0f196-487">如果将此属性设置为 `null` 或，而不先删除它，则会在磁盘上保留一个私钥文件。</span><span class="sxs-lookup"><span data-stu-id="0f196-487">If you set this property to `null` or to another key without first deleting it, a private key file is left on the disk.</span></span>  
  
 <span data-ttu-id="0f196-488">若要正确删除与此属性关联的私钥，请将设置 `PersistKeyInCsp` 为 `false` ，然后调用 <xref:System.Security.Cryptography.AsymmetricAlgorithm.Clear%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="0f196-488">To properly delete the private key associated with this property, set `PersistKeyInCsp` to `false`, and then call the <xref:System.Security.Cryptography.AsymmetricAlgorithm.Clear%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f196-489">下面的代码示例打开当前用户证书存储，仅选择活动证书，并允许用户选择一个或多个证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-489">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="0f196-490">然后，该示例将证书信息写入控制台。</span><span class="sxs-lookup"><span data-stu-id="0f196-490">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f196-491">密钥值不是 RSA 或 DSA 密钥，或者密钥不可读。</span><span class="sxs-lookup"><span data-stu-id="0f196-491">The key value is not an RSA or DSA key, or the key is unreadable.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f196-492">为此属性设置的值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0f196-492">The value being set for this property is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0f196-493">此私钥的密钥算法不受支持。</span><span class="sxs-lookup"><span data-stu-id="0f196-493">The key algorithm for this private key is not supported.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException"><span data-ttu-id="0f196-494">X.509 密钥不匹配。</span><span class="sxs-lookup"><span data-stu-id="0f196-494">The X.509 keys do not match.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0f196-495">加密服务提供程序密钥为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0f196-495">The cryptographic service provider key is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="0f196-496">仅限 .NET Core：已尝试设置此属性。</span><span class="sxs-lookup"><span data-stu-id="0f196-496">.NET Core only: An attempt was made to set this property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PublicKey">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.PublicKey PublicKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.PublicKey PublicKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PublicKey As PublicKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::PublicKey ^ PublicKey { System::Security::Cryptography::X509Certificates::PublicKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PublicKey : System.Security.Cryptography.X509Certificates.PublicKey" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.PublicKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f196-497">获取一个与证书相关联的 <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0f196-497">Gets a <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" /> object associated with a certificate.</span></span></summary>
        <value><span data-ttu-id="0f196-498"><see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0f196-498">A <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-499">此属性返回一个 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A> 对象，该对象包含表示公钥算法的对象标识符 (<xref:System.Security.Cryptography.Oid>) 、一个由 asn 编码的参数和一个</span><span class="sxs-lookup"><span data-stu-id="0f196-499">This property returns a <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A> object, which contains the object identifier (<xref:System.Security.Cryptography.Oid>) representing the public key algorithm, the ASN.1-encoded parameters, and the ASN.1-encoded key value.</span></span>  
  
 <span data-ttu-id="0f196-500">还可以通过引用属性，将密钥作为 <xref:System.Security.Cryptography.AsymmetricAlgorithm> 对象来获取 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0f196-500">You can also obtain the key as an <xref:System.Security.Cryptography.AsymmetricAlgorithm> object by referencing the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A> property.</span></span> <span data-ttu-id="0f196-501">此属性仅支持 RSA 或 DSA 密钥，因此它将返回 <xref:System.Security.Cryptography.RSACryptoServiceProvider> 或 <xref:System.Security.Cryptography.DSACryptoServiceProvider> 代表公钥的对象。</span><span class="sxs-lookup"><span data-stu-id="0f196-501">This property supports only RSA or DSA keys, so it returns either an <xref:System.Security.Cryptography.RSACryptoServiceProvider> or a <xref:System.Security.Cryptography.DSACryptoServiceProvider> object that represents the public key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f196-502">下面的代码示例创建一个命令行可执行文件，该命令行可执行文件将证书文件作为参数，并将各种证书属性打印到控制台。</span><span class="sxs-lookup"><span data-stu-id="0f196-502">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f196-503">密钥值不是 RSA 或 DSA 密钥，或者密钥不可读。</span><span class="sxs-lookup"><span data-stu-id="0f196-503">The key value is not an RSA or DSA key, or the key is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RawData">
      <MemberSignature Language="C#" Value="public byte[] RawData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] RawData" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.RawData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawData As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ RawData { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RawData : byte[]" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.RawData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f196-504">获取证书的原始数据。</span><span class="sxs-lookup"><span data-stu-id="0f196-504">Gets the raw data of a certificate.</span></span></summary>
        <value><span data-ttu-id="0f196-505">字节数组形式的证书原始数据。</span><span class="sxs-lookup"><span data-stu-id="0f196-505">The raw data of the certificate as a byte array.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0f196-506">下面的代码示例创建一个命令行可执行文件，该命令行可执行文件将证书文件作为参数，并将各种证书属性打印到控制台。</span><span class="sxs-lookup"><span data-stu-id="0f196-506">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberSignature Language="F#" Value="override this.Reset : unit -&gt; unit" Usage="x509Certificate2.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f196-507">重置 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象的状态。</span><span class="sxs-lookup"><span data-stu-id="0f196-507">Resets the state of an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-508">此方法可用于重置证书的状态。</span><span class="sxs-lookup"><span data-stu-id="0f196-508">This method can be used to reset the state of the certificate.</span></span> <span data-ttu-id="0f196-509">它还可释放与证书关联的任何资源。</span><span class="sxs-lookup"><span data-stu-id="0f196-509">It also frees any resources associated with the certificate.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerialNumber">
      <MemberSignature Language="C#" Value="public string SerialNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SerialNumber" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerialNumber As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SerialNumber { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SerialNumber : string" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f196-510">获取 big-endian 十六进制字符串形式的证书序列号。</span><span class="sxs-lookup"><span data-stu-id="0f196-510">Gets the serial number of a certificate as a big-endian hexadecimal string.</span></span></summary>
        <value><span data-ttu-id="0f196-511">作为大字节序十六进制字符串的证书的序列号。</span><span class="sxs-lookup"><span data-stu-id="0f196-511">The serial number of the certificate as a big-endian hexadecimal string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-512">证书的序列号是原始 x.509 协议的一部分。</span><span class="sxs-lookup"><span data-stu-id="0f196-512">The serial number of the certificate is part of the original X.509 protocol.</span></span> <span data-ttu-id="0f196-513">序列号是证书颁发者颁发的唯一编号，也称为证书颁发机构 (CA) 。</span><span class="sxs-lookup"><span data-stu-id="0f196-513">The serial number is a unique number issued by the certificate issuer, which is also called the Certificate Authority (CA).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f196-514">下面的代码示例创建一个命令行可执行文件，该命令行可执行文件将证书文件作为参数，并将各种证书属性打印到控制台。</span><span class="sxs-lookup"><span data-stu-id="0f196-514">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureAlgorithm">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Oid SignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Oid SignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureAlgorithm As Oid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Oid ^ SignatureAlgorithm { System::Security::Cryptography::Oid ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SignatureAlgorithm : System.Security.Cryptography.Oid" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Oid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f196-515">获取用于创建证书签名的算法。</span><span class="sxs-lookup"><span data-stu-id="0f196-515">Gets the algorithm used to create the signature of a certificate.</span></span></summary>
        <value><span data-ttu-id="0f196-516">签名算法的对象标识符。</span><span class="sxs-lookup"><span data-stu-id="0f196-516">The object identifier of the signature algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-517">对象标识符 (<xref:System.Security.Cryptography.Oid>) 标识证书使用的签名算法的类型。</span><span class="sxs-lookup"><span data-stu-id="0f196-517">The object identifier (<xref:System.Security.Cryptography.Oid>) identifies the type of signature algorithm used by the certificate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f196-518">下面的代码示例打开当前用户证书存储，仅选择活动证书，并允许用户选择一个或多个证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-518">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="0f196-519">然后，该示例将证书信息写入控制台。</span><span class="sxs-lookup"><span data-stu-id="0f196-519">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f196-520">该证书不可读。</span><span class="sxs-lookup"><span data-stu-id="0f196-520">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SubjectName">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X500DistinguishedName SubjectName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X500DistinguishedName SubjectName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubjectName As X500DistinguishedName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ SubjectName { System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SubjectName : System.Security.Cryptography.X509Certificates.X500DistinguishedName" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X500DistinguishedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f196-521">获取证书的主题可分辨名称。</span><span class="sxs-lookup"><span data-stu-id="0f196-521">Gets the subject distinguished name from a certificate.</span></span></summary>
        <value><span data-ttu-id="0f196-522">一个 <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> 对象，用于表示证书主题的名称。</span><span class="sxs-lookup"><span data-stu-id="0f196-522">An <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> object that represents the name of the certificate subject.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-523">使用者可分辨名称是证书的用户的名称。</span><span class="sxs-lookup"><span data-stu-id="0f196-523">The subject distinguished name is the name of the user of the certificate.</span></span> <span data-ttu-id="0f196-524">证书的可分辨名称是证书的使用者或颁发者的文本表示形式。</span><span class="sxs-lookup"><span data-stu-id="0f196-524">The distinguished name for the certificate is a textual representation of the subject or issuer of the certificate.</span></span> <span data-ttu-id="0f196-525">此表示形式包含名称特性，例如 "CN = MyName，OU = MyOrgUnit，C = US"。</span><span class="sxs-lookup"><span data-stu-id="0f196-525">This representation consists of name attributes, for example, "CN=MyName, OU=MyOrgUnit, C=US".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f196-526">下面的代码示例创建一个命令行可执行文件，该命令行可执行文件将证书文件作为参数，并将各种证书属性打印到控制台。</span><span class="sxs-lookup"><span data-stu-id="0f196-526">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f196-527">证书上下文无效。</span><span class="sxs-lookup"><span data-stu-id="0f196-527">The certificate context is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Thumbprint">
      <MemberSignature Language="C#" Value="public string Thumbprint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Thumbprint" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Thumbprint As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Thumbprint { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Thumbprint : string" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f196-528">获取证书的指纹。</span><span class="sxs-lookup"><span data-stu-id="0f196-528">Gets the thumbprint of a certificate.</span></span></summary>
        <value><span data-ttu-id="0f196-529">证书的指纹。</span><span class="sxs-lookup"><span data-stu-id="0f196-529">The thumbprint of the certificate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-530">指纹是使用 SHA1 算法动态生成的，并且在证书中实际上不存在。</span><span class="sxs-lookup"><span data-stu-id="0f196-530">The thumbprint is dynamically generated using the SHA1 algorithm and does not physically exist in the certificate.</span></span> <span data-ttu-id="0f196-531">由于指纹是证书的唯一值，因此通常用于在证书存储区中查找特定证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-531">Since the thumbprint is a unique value for the certificate, it is commonly used to find a particular certificate in a certificate store.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f196-532">下面的代码示例创建一个命令行可执行文件，该命令行可执行文件将证书文件作为参数，并将各种证书属性打印到控制台。</span><span class="sxs-lookup"><span data-stu-id="0f196-532">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0f196-533">以文本格式显示 X.509 证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-533">Displays an X.509 certificate in text format.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="x509Certificate2.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f196-534">以文本格式显示 X.509 证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-534">Displays an X.509 certificate in text format.</span></span></summary>
        <returns><span data-ttu-id="0f196-535">证书信息。</span><span class="sxs-lookup"><span data-stu-id="0f196-535">The certificate information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-536">与所有 `ToString` 方法一样，输出在不同版本的 .NET Framework 中可能不一致，因此不应为内容分析方法结果。</span><span class="sxs-lookup"><span data-stu-id="0f196-536">As with all `ToString` methods, the output might not be consistent across versions of the .NET Framework, so the method results should not be parsed for content.</span></span> <span data-ttu-id="0f196-537">使用对象上的属性 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 可获取有关内容的精确信息，或使用 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString%2A> 方法获取有关证书的信息。</span><span class="sxs-lookup"><span data-stu-id="0f196-537">Use the properties on the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object to obtain precise information about the content or use the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString%2A> method to obtain information about the certificate.</span></span>  
  
 <span data-ttu-id="0f196-538">此方法以文本格式显示证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-538">This method displays the certificate in text format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f196-539">下面的代码示例创建一个命令行可执行文件，该命令行可执行文件将证书文件作为参数，并将各种证书属性打印到控制台。</span><span class="sxs-lookup"><span data-stu-id="0f196-539">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString (bool verbose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString(bool verbose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString (verbose As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString(bool verbose);" />
      <MemberSignature Language="F#" Value="override this.ToString : bool -&gt; string" Usage="x509Certificate2.ToString verbose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verbose" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="verbose"><span data-ttu-id="0f196-540">为 <see langword="true" /> 则显示公钥、私钥、扩展等；为 <see langword="false" /> 则显示类似于 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 类的信息，包括指纹、序列号、主题和颁发者名称等。</span><span class="sxs-lookup"><span data-stu-id="0f196-540"><see langword="true" /> to display the public key, private key, extensions, and so forth; <see langword="false" /> to display information that is similar to the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class, including thumbprint, serial number, subject and issuer names, and so on.</span></span></param>
        <summary><span data-ttu-id="0f196-541">以文本格式显示 X.509 证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-541">Displays an X.509 certificate in text format.</span></span></summary>
        <returns><span data-ttu-id="0f196-542">证书信息。</span><span class="sxs-lookup"><span data-stu-id="0f196-542">The certificate information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-543">与所有 `ToString` 方法一样，输出在不同版本的 .NET Framework 中可能不一致，因此不应为内容分析方法结果。</span><span class="sxs-lookup"><span data-stu-id="0f196-543">As with all `ToString` methods, the output might not be consistent across versions of the .NET Framework, so the method results should not be parsed for content.</span></span> <span data-ttu-id="0f196-544">使用对象的属性 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 来获取精确的信息。</span><span class="sxs-lookup"><span data-stu-id="0f196-544">Use the properties on the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object to obtain precise information.</span></span>  
  
 <span data-ttu-id="0f196-545">此方法以文本格式显示证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-545">This method displays the certificate in text format.</span></span> <span data-ttu-id="0f196-546">如果 `verbose` 参数设置为 `true` ，则文本显示包括公钥、私钥和扩展名。</span><span class="sxs-lookup"><span data-stu-id="0f196-546">If the `verbose` parameter is set to `true`, the text display includes the public key, private key, and extensions.</span></span> <span data-ttu-id="0f196-547">如果 `verbose` 设置为 `false` ，则文本显示包含 x.509 证书中的可用字段，包括指纹、序列号、主题和颁发者名称以及有效性日期信息。</span><span class="sxs-lookup"><span data-stu-id="0f196-547">If `verbose` is set to `false`, the text display includes those fields available from the X.509 certificate, including thumbprint, serial number, subject and issuer names, and validity date information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f196-548">下面的代码示例创建一个命令行可执行文件，它将证书文件作为参数，并将各种证书属性打印到控制台。</span><span class="sxs-lookup"><span data-stu-id="0f196-548">The following code example creates a command line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Verify">
      <MemberSignature Language="C#" Value="public bool Verify ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Verify() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Verify" />
      <MemberSignature Language="VB.NET" Value="Public Function Verify () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Verify();" />
      <MemberSignature Language="F#" Value="member this.Verify : unit -&gt; bool" Usage="x509Certificate2.Verify " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.MonoTODO("by default this depends on the incomplete X509Chain")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.MonoTODO("by default this depends on the incomplete X509Chain")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f196-549">使用基本验证策略执行 X.509 链验证。</span><span class="sxs-lookup"><span data-stu-id="0f196-549">Performs a X.509 chain validation using basic validation policy.</span></span></summary>
        <returns><span data-ttu-id="0f196-550">如果验证成功，则为 <see langword="true" />；如果验证失败，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0f196-550"><see langword="true" /> if the validation succeeds; <see langword="false" /> if the validation fails.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-551">此方法为证书生成一个简单的链，并将基本策略应用到该链。</span><span class="sxs-lookup"><span data-stu-id="0f196-551">This method builds a simple chain for the certificate and applies the base policy to that chain.</span></span> <span data-ttu-id="0f196-552">如果需要有关失败的详细信息，请使用对象直接验证证书 <xref:System.Security.Cryptography.X509Certificates.X509Chain> 。</span><span class="sxs-lookup"><span data-stu-id="0f196-552">If you need more information about a failure, validate the certificate directly using the <xref:System.Security.Cryptography.X509Certificates.X509Chain> object.</span></span>  
  
 <span data-ttu-id="0f196-553">请注意，可以使用类重写默认链接引擎 <xref:System.Security.Cryptography.CryptoConfig> 。</span><span class="sxs-lookup"><span data-stu-id="0f196-553">Note that the default chaining engine can be overridden using the <xref:System.Security.Cryptography.CryptoConfig> class.</span></span> <span data-ttu-id="0f196-554">在 Microsoft Windows Server 2003 上，默认引擎符合 RFC3280 "[证书和证书吊销列表 (CRL) 配置文件](https://go.microsoft.com/fwlink/?LinkId=45286)" 中所述的规范。</span><span class="sxs-lookup"><span data-stu-id="0f196-554">On Microsoft Windows Server 2003, the default engine conforms to the specification described in RFC3280, "[Certificate and Certificate Revocation List (CRL) Profile](https://go.microsoft.com/fwlink/?LinkId=45286)."</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f196-555">下面的代码示例打开当前用户证书存储，仅选择活动证书，并允许用户选择一个或多个证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-555">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="0f196-556">然后，该示例将证书信息写入控制台。</span><span class="sxs-lookup"><span data-stu-id="0f196-556">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f196-557">该证书不可读。</span><span class="sxs-lookup"><span data-stu-id="0f196-557">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public int Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Version" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Version { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : int" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f196-558">获取证书的 X.509 格式版本。</span><span class="sxs-lookup"><span data-stu-id="0f196-558">Gets the X.509 format version of a certificate.</span></span></summary>
        <value><span data-ttu-id="0f196-559">证书格式。</span><span class="sxs-lookup"><span data-stu-id="0f196-559">The certificate format.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f196-560">有多种版本的 x.509 证书。</span><span class="sxs-lookup"><span data-stu-id="0f196-560">There are several versions of X.509 certificates.</span></span> <span data-ttu-id="0f196-561">此属性标识证书使用的格式。</span><span class="sxs-lookup"><span data-stu-id="0f196-561">This property identifies which format the certificate uses.</span></span> <span data-ttu-id="0f196-562">例如，为版本3证书返回 "3"。</span><span class="sxs-lookup"><span data-stu-id="0f196-562">For example, "3" is returned for a version 3 certificate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f196-563">下面的代码示例创建一个命令行可执行文件，该命令行可执行文件将证书文件作为参数，并将各种证书属性打印到控制台。</span><span class="sxs-lookup"><span data-stu-id="0f196-563">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f196-564">该证书不可读。</span><span class="sxs-lookup"><span data-stu-id="0f196-564">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
