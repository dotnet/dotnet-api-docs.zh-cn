<Type Name="ECDsaCertificateExtensions" FullName="System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a462d8f4f03566718a9276f578565cfe38ccbdff" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89858109" /></Metadata><TypeSignature Language="C#" Value="public static class ECDsaCertificateExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ECDsaCertificateExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ECDsaCertificateExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ECDsaCertificateExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type ECDsaCertificateExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Security.Cryptography.X509Certificates" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="eac54-101">提供用于对 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 证书的公钥和私钥的 <see cref="T:System.Security.Cryptography.ECDsa" /> 实现进行检索的扩展方法。</span><span class="sxs-lookup"><span data-stu-id="eac54-101">Provides extension methods for retrieving <see cref="T:System.Security.Cryptography.ECDsa" /> implementations for the     public and private keys of a <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> certificate.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CopyWithPrivateKey">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.X509Certificates.X509Certificate2 CopyWithPrivateKey (this System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, System.Security.Cryptography.ECDsa privateKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.X509Certificates.X509Certificate2 CopyWithPrivateKey(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, class System.Security.Cryptography.ECDsa privateKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions.CopyWithPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.ECDsa)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CopyWithPrivateKey (certificate As X509Certificate2, privateKey As ECDsa) As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Security::Cryptography::X509Certificates::X509Certificate2 ^ CopyWithPrivateKey(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate, System::Security::Cryptography::ECDsa ^ privateKey);" />
      <MemberSignature Language="F#" Value="static member CopyWithPrivateKey : System.Security.Cryptography.X509Certificates.X509Certificate2 * System.Security.Cryptography.ECDsa -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions.CopyWithPrivateKey (certificate, privateKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" RefType="this" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="privateKey" Type="System.Security.Cryptography.ECDsa" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="certificate"><span data-ttu-id="eac54-102">ECDSA 证书。</span><span class="sxs-lookup"><span data-stu-id="eac54-102">The ECDSA certificate.</span></span></param>
        <param name="privateKey"><span data-ttu-id="eac54-103">私有 ECDSA 密钥。</span><span class="sxs-lookup"><span data-stu-id="eac54-103">The private ECDSA key.</span></span></param>
        <summary><span data-ttu-id="eac54-104">将私钥与 <see cref="T:System.Security.Cryptography.ECDsa" /> 证书的公钥合并，以生成新的 ECDSA 证书。</span><span class="sxs-lookup"><span data-stu-id="eac54-104">Combines a private key with the public key of an <see cref="T:System.Security.Cryptography.ECDsa" /> certificate to generate a new ECDSA certificate.</span></span></summary>
        <returns><span data-ttu-id="eac54-105">新 ECDSA 证书，其 <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey" /> 属性设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="eac54-105">A new ECDSA certificate with the <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey" /> property set to <see langword="true" />.</span></span> <span data-ttu-id="eac54-106">未修改输入 ECDSA 证书对象。</span><span class="sxs-lookup"><span data-stu-id="eac54-106">The input ECDSA certificate object isn't modified.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eac54-107"><paramref name="certificate" /> 或 <paramref name="privateKey" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eac54-107"><paramref name="certificate" /> or <paramref name="privateKey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eac54-108">该证书已有关联的私钥。</span><span class="sxs-lookup"><span data-stu-id="eac54-108">The certificate already has an associated private key.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eac54-109">该证书没有公钥。</span><span class="sxs-lookup"><span data-stu-id="eac54-109">The certificate doesn't have a public key.</span></span>  
  
 <span data-ttu-id="eac54-110">- 或 -</span><span class="sxs-lookup"><span data-stu-id="eac54-110">-or-</span></span>  
  
 <span data-ttu-id="eac54-111">指定私钥与指定证书的公钥不匹配。</span><span class="sxs-lookup"><span data-stu-id="eac54-111">The specified private key doesn't match the public key for the specified certificate.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetECDsaPrivateKey">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.ECDsa? GetECDsaPrivateKey (this System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.ECDsa GetECDsaPrivateKey(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions.GetECDsaPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetECDsaPrivateKey (certificate As X509Certificate2) As ECDsa" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Security::Cryptography::ECDsa ^ GetECDsaPrivateKey(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate);" />
      <MemberSignature Language="F#" Value="static member GetECDsaPrivateKey : System.Security.Cryptography.X509Certificates.X509Certificate2 -&gt; System.Security.Cryptography.ECDsa" Usage="System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions.GetECDsaPrivateKey certificate" />
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.ECDsa GetECDsaPrivateKey (this System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECDsa</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" RefType="this" />
      </Parameters>
      <Docs>
        <param name="certificate"><span data-ttu-id="eac54-112">证书。</span><span class="sxs-lookup"><span data-stu-id="eac54-112">The certificate.</span></span></param>
        <summary><span data-ttu-id="eac54-113">从 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 证书获取 <see cref="T:System.Security.Cryptography.ECDsa" /> 私钥。</span><span class="sxs-lookup"><span data-stu-id="eac54-113">Gets the <see cref="T:System.Security.Cryptography.ECDsa" /> private key from the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> certificate.</span></span></summary>
        <returns><span data-ttu-id="eac54-114">私钥，或如果证书不具有 ECDsa 私钥，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eac54-114">The private key, or <see langword="null" /> if the certificate does not have an ECDsa private key.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eac54-115"><paramref name="certificate" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eac54-115"><paramref name="certificate" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetECDsaPublicKey">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.ECDsa? GetECDsaPublicKey (this System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.ECDsa GetECDsaPublicKey(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions.GetECDsaPublicKey(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetECDsaPublicKey (certificate As X509Certificate2) As ECDsa" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Security::Cryptography::ECDsa ^ GetECDsaPublicKey(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate);" />
      <MemberSignature Language="F#" Value="static member GetECDsaPublicKey : System.Security.Cryptography.X509Certificates.X509Certificate2 -&gt; System.Security.Cryptography.ECDsa" Usage="System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions.GetECDsaPublicKey certificate" />
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.ECDsa GetECDsaPublicKey (this System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECDsa</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" RefType="this" />
      </Parameters>
      <Docs>
        <param name="certificate"><span data-ttu-id="eac54-116">证书。</span><span class="sxs-lookup"><span data-stu-id="eac54-116">The certificate.</span></span></param>
        <summary><span data-ttu-id="eac54-117">从 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 证书获取 <see cref="T:System.Security.Cryptography.ECDsa" /> 公钥。</span><span class="sxs-lookup"><span data-stu-id="eac54-117">Gets the <see cref="T:System.Security.Cryptography.ECDsa" /> public key from the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> certificate.</span></span></summary>
        <returns><span data-ttu-id="eac54-118">公钥，或如果证书不具有 ECDsa 公钥，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eac54-118">The public key, or <see langword="null" /> if the certificate does not have an ECDsa public key.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eac54-119"><paramref name="certificate" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eac54-119"><paramref name="certificate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="eac54-120">该句柄无效。</span><span class="sxs-lookup"><span data-stu-id="eac54-120">The handle is invalid.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
