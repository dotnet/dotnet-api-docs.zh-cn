<Type Name="DefaultWorkflowSchedulerService" FullName="System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a11e11dc6bb755e9b5a1b296828b063a4529e55f" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86636712" /></Metadata><TypeSignature Language="C#" Value="public class DefaultWorkflowSchedulerService : System.Workflow.Runtime.Hosting.WorkflowSchedulerService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DefaultWorkflowSchedulerService extends System.Workflow.Runtime.Hosting.WorkflowSchedulerService" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService" />
  <TypeSignature Language="VB.NET" Value="Public Class DefaultWorkflowSchedulerService&#xA;Inherits WorkflowSchedulerService" />
  <TypeSignature Language="C++ CLI" Value="public ref class DefaultWorkflowSchedulerService : System::Workflow::Runtime::Hosting::WorkflowSchedulerService" />
  <TypeSignature Language="F#" Value="type DefaultWorkflowSchedulerService = class&#xA;    inherit WorkflowSchedulerService" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Runtime.Hosting.WorkflowSchedulerService</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>创建和管理在工作流运行时引擎上运行工作流实例的线程。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 默认情况下，<xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService> 由工作流运行时引擎使用。 它包括对多个工作流实例在运行时线程池中排队的默认支持。 如果要控制负责执行工作流的线程，请使用 <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService>。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultWorkflowSchedulerService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultWorkflowSchedulerService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultWorkflowSchedulerService (System.Collections.Specialized.NameValueCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Specialized.NameValueCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor(System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameters As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultWorkflowSchedulerService(System::Collections::Specialized::NameValueCollection ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService : System.Collections.Specialized.NameValueCollection -&gt; System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService" Usage="new System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService parameters" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameters" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="parameters">保存初始化信息的 <see cref="T:System.Collections.Specialized.NameValueCollection" />。</param>
        <summary>初始化 <see cref="T:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当工作流运行时引擎从应用程序配置文件加载服务时，会调用此构造函数。 唯一有效的参数为 `maxSimultaneousWorkflows`，该参数可以指定同时运行的工作流数量。  
  
 将 `maxSimultaneousWorkflows` 设置为很大的值可能导致 .NET 线程池枯竭。 由于 <xref:System.Transactions.Transaction> 对象也使用 .NET 线程池，因此这在持久性服务尝试完成持久性事务时会导致超时。  
  
 如果未在构造函数或配置文件中指定，则 `maxSimultaneousWorkflows` 的默认值对于单处理器计算机为 5，对于多处理器计算机为 (int)(5 * Environment.ProcessorCount * .8)。 请注意，由于整数算法的规则所限，(int)(5 * Environment.ProcessorCount * .8) 并非总是与 (int)(4 * Environment.ProcessorCount) 相同。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="parameters" /> 包含空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="parameters" /> 集合中的键值之一包含空引用 (<see langword="Nothing" />)。  
  
- 或 - 
<paramref name="parameters" /> 集合中的键值之一不与 <see cref="T:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService" /> 的默认键匹配。</exception>
        <exception cref="T:System.FormatException">参数之一无法转换为与 <see cref="P:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows" /> 匹配的双精度浮点数。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows" /> 小于 1。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultWorkflowSchedulerService (int maxSimultaneousWorkflows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 maxSimultaneousWorkflows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (maxSimultaneousWorkflows As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultWorkflowSchedulerService(int maxSimultaneousWorkflows);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService : int -&gt; System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService" Usage="new System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService maxSimultaneousWorkflows" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="maxSimultaneousWorkflows" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxSimultaneousWorkflows">一个整数，它确定线程池队列中可以存储的工作流实例的最大数量。</param>
        <summary>使用服务可同时运行的、最大指定数目的工作流实例初始化 <see cref="T:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将 `maxSimultaneousWorkflows` 设置为很大的值可能导致 .NET 线程池枯竭。 由于 <xref:System.Transactions.Transaction> 对象也使用 .NET 线程池，因此这在持久性服务尝试完成持久性事务时会导致超时。  
  
 如果未在构造函数或配置文件中指定，则 `maxSimultaneousWorkflows` 的默认值对于单处理器计算机为 5，对于多处理器计算机为 (int)(5 * Environment.ProcessorCount * .8)。 请注意，由于整数算法的规则所限，(int)(5 * Environment.ProcessorCount * .8) 并非总是与 (int)(4 * Environment.ProcessorCount) 相同。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="maxSimultaneousWorkflows" /> 小于 1。</exception>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="protected internal override void Cancel (Guid timerId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Cancel(valuetype System.Guid timerId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Cancel(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Cancel (timerId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Cancel(Guid timerId);" />
      <MemberSignature Language="F#" Value="override this.Cancel : Guid -&gt; unit" Usage="defaultWorkflowSchedulerService.Cancel timerId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timerId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="timerId">与要取消的现有计划工作项关联的 <see cref="T:System.Guid" />。</param>
        <summary>取消指定的现有工作流实例工作项。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="timerId" /> 是一个空的 GUID。</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxSimultaneousWorkflows">
      <MemberSignature Language="C#" Value="public int MaxSimultaneousWorkflows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxSimultaneousWorkflows" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxSimultaneousWorkflows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxSimultaneousWorkflows { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxSimultaneousWorkflows : int" Usage="System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取线程池队列中可以存储的最大工作流实例数。</summary>
        <value>一个整数，它表示线程池队列中可以存储的工作流实例的最大数量。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法的默认值对于单处理器计算机为 5，对于多处理器计算机为 (int)(5 * Environment.ProcessorCount * .8)。 请注意，由于整数算法的规则所限，(int)(5 * Environment.ProcessorCount * .8) 并非总是与 (int)(4 * Environment.ProcessorCount) 相同。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStarted">
      <MemberSignature Language="C#" Value="protected override void OnStarted ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnStarted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.OnStarted" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnStarted ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnStarted();" />
      <MemberSignature Language="F#" Value="override this.OnStarted : unit -&gt; unit" Usage="defaultWorkflowSchedulerService.OnStarted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>向 <see cref="T:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService" /> 通知工作流实例已开始运行。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.OnStarted%2A> 为等待加入工作流实例线程池的项的列表中的第一个工作项创建线程。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Schedule">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将工作流实例添加到挂起工作项队列中。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Schedule">
      <MemberSignature Language="C#" Value="protected internal override void Schedule (System.Threading.WaitCallback callback, Guid workflowInstanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Schedule(class System.Threading.WaitCallback callback, valuetype System.Guid workflowInstanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Schedule (callback As WaitCallback, workflowInstanceId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Schedule(System::Threading::WaitCallback ^ callback, Guid workflowInstanceId);" />
      <MemberSignature Language="F#" Value="override this.Schedule : System.Threading.WaitCallback * Guid -&gt; unit" Usage="defaultWorkflowSchedulerService.Schedule (callback, workflowInstanceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.WaitCallback" />
        <Parameter Name="workflowInstanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="callback">一个 <see cref="T:System.Threading.WaitCallback" /> 多路广播委托，表示要运行的方法。</param>
        <param name="workflowInstanceId">表示工作流实例的 <see cref="T:System.Guid" />。</param>
        <summary>使用指定的多路广播委托，将工作流实例添加到使用指定工作流实例的挂起工作项队列中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Threading.WaitCallback> 构造函数创建在新线程中运行的委托方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="callback" /> 包含空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</exception>
      </Docs>
    </Member>
    <Member MemberName="Schedule">
      <MemberSignature Language="C#" Value="protected internal override void Schedule (System.Threading.WaitCallback callback, Guid workflowInstanceId, DateTime whenUtc, Guid timerId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Schedule(class System.Threading.WaitCallback callback, valuetype System.Guid workflowInstanceId, valuetype System.DateTime whenUtc, valuetype System.Guid timerId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Schedule (callback As WaitCallback, workflowInstanceId As Guid, whenUtc As DateTime, timerId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Schedule(System::Threading::WaitCallback ^ callback, Guid workflowInstanceId, DateTime whenUtc, Guid timerId);" />
      <MemberSignature Language="F#" Value="override this.Schedule : System.Threading.WaitCallback * Guid * DateTime * Guid -&gt; unit" Usage="defaultWorkflowSchedulerService.Schedule (callback, workflowInstanceId, whenUtc, timerId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.WaitCallback" />
        <Parameter Name="workflowInstanceId" Type="System.Guid" />
        <Parameter Name="whenUtc" Type="System.DateTime" />
        <Parameter Name="timerId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="callback">一个 <see cref="T:System.Threading.WaitCallback" /> 多路广播委托，表示要运行的方法。</param>
        <param name="workflowInstanceId">表示工作流实例的 <see cref="T:System.Guid" />。</param>
        <param name="whenUtc">指示线程开始运行时间的 <see cref="T:System.DateTime" />。</param>
        <param name="timerId">表示计划线程的 <see cref="T:System.Guid" />。</param>
        <summary>使用指定的多路广播委托、<see cref="T:System.DateTime" /> 和 GUID，将指定的工作流实例添加到挂起工作项队列中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Threading.WaitCallback> 构造函数创建在新线程中运行的委托方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="callback" /> 包含空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="workflowInstanceId" /> 或 <paramref name="timerId" /> 为空 GUID。</exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="protected internal override void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Stop" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Stop();" />
      <MemberSignature Language="F#" Value="override this.Stop : unit -&gt; unit" Usage="defaultWorkflowSchedulerService.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>停止当前在工作流实例上运行的线程以及任何正在运行的计时器。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
