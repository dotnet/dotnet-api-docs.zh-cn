<Type Name="WorkflowRuntimeService" FullName="System.Workflow.Runtime.Hosting.WorkflowRuntimeService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f947d241a3c8bd04fa0e6a2b2c9e482f86762a6e" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86636622" /></Metadata><TypeSignature Language="C#" Value="public abstract class WorkflowRuntimeService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WorkflowRuntimeService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WorkflowRuntimeService" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowRuntimeService abstract" />
  <TypeSignature Language="F#" Value="type WorkflowRuntimeService = class" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c74ea-101">表示从中派生工作流运行时引擎核心服务的抽象基类。</span><span class="sxs-lookup"><span data-stu-id="c74ea-101">Represents the abstract base class from which the workflow runtime engine core services are derived.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="c74ea-102">从 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 类派生的服务可以由工作流运行时引擎启动和停止。</span><span class="sxs-lookup"><span data-stu-id="c74ea-102">Services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class can be started and stopped by the workflow runtime engine.</span></span> <span data-ttu-id="c74ea-103">但是，启动或停止服务的顺序是不确定的，并且服务可能需要其他服务的支持才能在启动时正确初始化自身，反过来，也可能需要其他服务的支持才能在停止时正确地关闭。</span><span class="sxs-lookup"><span data-stu-id="c74ea-103">The order in which the services are started or stopped, however, is indeterminate, and services may require the support of other services in order to properly initialize themselves when they are started, and, conversely, may require the to support of other services in order to properly shut down when they are stopped.</span></span> <span data-ttu-id="c74ea-104">为了解决此问题，工作流运行时引擎为启动和停止服务提供了两阶段机制。</span><span class="sxs-lookup"><span data-stu-id="c74ea-104">To address this problem, the workflow runtime engine provides two-phase mechanisms for starting and stopping services.</span></span> <span data-ttu-id="c74ea-105">在调用 <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> 时，工作流运行时引擎为其每个派生自 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 类的服务调用 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 方法。</span><span class="sxs-lookup"><span data-stu-id="c74ea-105">When <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> is called, the workflow runtime engine invokes the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> method for each of its services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class.</span></span>  <span data-ttu-id="c74ea-106">在启动所有这些服务之后，工作流运行时引擎将引发 <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType> 事件，这会导致为每个工作流运行时引擎服务调用 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c74ea-106">After all of these services have been started, the workflow runtime engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType> event, which causes the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> method to be invoked for each workflow runtime engine service.</span></span> <span data-ttu-id="c74ea-107">您的服务可以重写 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> 方法，从而参与此两阶段过程。</span><span class="sxs-lookup"><span data-stu-id="c74ea-107">Your service can override the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> method to participate in this two phase process.</span></span> <span data-ttu-id="c74ea-108">同样，在调用 <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> 时，<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> 方法、<xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> 事件和 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> 方法提供此两阶段机制。</span><span class="sxs-lookup"><span data-stu-id="c74ea-108">Similarly, when <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> is called, the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> method, the <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> event, and the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> method provide this two-phase mechanism.</span></span>  <span data-ttu-id="c74ea-109">State 属性包含一个 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState> 值，该值指示服务是处于启动和停止过程中，还是已完全启动或停止。</span><span class="sxs-lookup"><span data-stu-id="c74ea-109">The State property contains a <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState> value that indicates whether the service is in the process of starting or stopping or is completely started or stopped.</span></span>  
  
 <span data-ttu-id="c74ea-110">派生自 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 类的服务在遇到导致无法处理的异常的情形时，可以通过调用 <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=nameWithType> 来引发 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="c74ea-110">Services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class can raise the <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=nameWithType> event when they encounter a condition that causes an unhandled exception by calling <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A>.</span></span>  
  
 <span data-ttu-id="c74ea-111">派生自 <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> 类、<xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> 类、<xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> 类和 <xref:System.Workflow.Runtime.Tracking.TrackingService> 类的服务最终都是从 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 类派生的。</span><span class="sxs-lookup"><span data-stu-id="c74ea-111">Services derived from the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class, and the <xref:System.Workflow.Runtime.Tracking.TrackingService> class ultimately derives from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WorkflowRuntimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WorkflowRuntimeService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c74ea-112">在派生类中实现时，初始化 <see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c74ea-112">When implemented in a derived class, initializes a new instance of the <see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c74ea-113"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> 初始化为 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped>。</span><span class="sxs-lookup"><span data-stu-id="c74ea-113"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> is initialized to <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStarted">
      <MemberSignature Language="C#" Value="protected virtual void OnStarted ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStarted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStarted ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStarted();" />
      <MemberSignature Language="F#" Value="abstract member OnStarted : unit -&gt; unit&#xA;override this.OnStarted : unit -&gt; unit" Usage="workflowRuntimeService.OnStarted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c74ea-114">在派生类中重写时，表示将在工作流运行时引擎引发 <see cref="E:System.Workflow.Runtime.WorkflowRuntime.Started" /> 事件时调用的方法。</span><span class="sxs-lookup"><span data-stu-id="c74ea-114">When overridden in a derived class, represents the method that will be called when the workflow runtime engine raises the <see cref="E:System.Workflow.Runtime.WorkflowRuntime.Started" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c74ea-115"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 类实现两阶段启动机制，这样，当工作流运行时引擎为其所有工作流运行时引擎服务调用 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 方法之后，工作流运行时引擎服务可以执行任何依赖于其他服务的初始化。</span><span class="sxs-lookup"><span data-stu-id="c74ea-115">The <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class implements a two-phase starting mechanism so that workflow runtime engine services may perform any initialization that depends on other services after the workflow runtime engine has invoked the  <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> method for all of its workflow runtime engine services.</span></span> <span data-ttu-id="c74ea-116">在工作流运行时引擎调用其所有工作流运行时引擎服务的 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 方法后，将引发 <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType> 事件。</span><span class="sxs-lookup"><span data-stu-id="c74ea-116">After the workflow runtime engine has called the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> method of all of its workflow runtime engine services, it raises the <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="c74ea-117">可以重写 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> 方法，在引发 <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType> 事件时提供服务所需的任何最终启动功能。</span><span class="sxs-lookup"><span data-stu-id="c74ea-117">You can override the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> method to provide any final startup functionality required by your service when the <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType> event is raised.</span></span> <span data-ttu-id="c74ea-118"><xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType> 事件的订阅和取消订阅机制在内部进行处理。</span><span class="sxs-lookup"><span data-stu-id="c74ea-118">The mechanics of subscribing and unsubscribing from the <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType> event is handled internally.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c74ea-119">如果在启动工作流运行时引擎之后，通过调用 <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> 将您的服务添加到工作流运行时引擎，则工作流运行时引擎将在该服务上调用 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>。</span><span class="sxs-lookup"><span data-stu-id="c74ea-119">If your service is added to the workflow runtime engine by a call to <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> after the workflow runtime engine has already been started, the workflow runtime engine will call <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> on your service.</span></span> <span data-ttu-id="c74ea-120">不过，由于在这种情况下已经发生 <xref:System.Workflow.Runtime.WorkflowRuntime.Started> 事件，因此，您的服务可能需要在 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> 方法内部执行任何通常在 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 中执行的初始化。</span><span class="sxs-lookup"><span data-stu-id="c74ea-120">However, in this situation, the <xref:System.Workflow.Runtime.WorkflowRuntime.Started> event has already occurred, therefore, your service may have to perform any initialization that it would ordinarily perform in <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> from inside the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> method.</span></span> <span data-ttu-id="c74ea-121">可以测试 <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>，确定工作流运行时引擎是否已启动。</span><span class="sxs-lookup"><span data-stu-id="c74ea-121">You can test <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> to determine whether the workflow runtime engine has been started.</span></span>  
  
 <span data-ttu-id="c74ea-122">在调用 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> 之前，<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Started> 设置为 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A>。</span><span class="sxs-lookup"><span data-stu-id="c74ea-122"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> is set to <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Started> before <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> is invoked.</span></span>  <span data-ttu-id="c74ea-123"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> 的默认实现不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="c74ea-123">The default implementation of <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> performs no action.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStopped">
      <MemberSignature Language="C#" Value="protected virtual void OnStopped ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStopped() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStopped ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStopped();" />
      <MemberSignature Language="F#" Value="abstract member OnStopped : unit -&gt; unit&#xA;override this.OnStopped : unit -&gt; unit" Usage="workflowRuntimeService.OnStopped " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c74ea-124">在派生类中重写时，表示将在工作流运行时引擎引发 <see cref="E:System.Workflow.Runtime.WorkflowRuntime.Stopped" /> 事件时调用的方法。</span><span class="sxs-lookup"><span data-stu-id="c74ea-124">When overridden in a derived class, represents the method that will be called when the workflow runtime engine raises the <see cref="E:System.Workflow.Runtime.WorkflowRuntime.Stopped" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c74ea-125"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 类实现两阶段停止机制，这样，当工作流运行时引擎调用服务的 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> 方法之后，工作流运行时引擎服务仍可以保留部分功能，以便支持其他服务的关闭操作（如有必要）。</span><span class="sxs-lookup"><span data-stu-id="c74ea-125">The <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class implements a two-phase stopping mechanism so that workflow runtime engine services may retain some functionality after their <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> method is invoked by the workflow runtime engine in order that they may, if necessary, support the shutdown of other services.</span></span> <span data-ttu-id="c74ea-126">在工作流运行时引擎调用其所有工作流运行时引擎服务的 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> 方法后，将引发 <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> 事件。</span><span class="sxs-lookup"><span data-stu-id="c74ea-126">After the workflow runtime engine has called the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> method of all of its workflow runtime engine services, it raises the <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="c74ea-127">可以重写 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> 方法，在引发 <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> 事件时提供服务所需的任何最终关闭功能。</span><span class="sxs-lookup"><span data-stu-id="c74ea-127">You can override the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> method to provide any final shutdown functionality required by your service when the <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> event is raised.</span></span> <span data-ttu-id="c74ea-128"><xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> 事件的订阅和取消订阅机制在内部进行处理。</span><span class="sxs-lookup"><span data-stu-id="c74ea-128">The mechanics of subscribing and unsubscribing from the <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> event is handled internally.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c74ea-129">当工作流运行时引擎正在运行时，如果通过调用 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 从工作流运行时引擎中移除了 <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A>，则工作流运行时引擎将在服务上调用 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>。</span><span class="sxs-lookup"><span data-stu-id="c74ea-129">If your <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> is removed from the workflow runtime engine by a call to <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> while the workflow runtime engine is running, the workflow runtime engine will call <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> on your service.</span></span> <span data-ttu-id="c74ea-130">不过，在这种情况下，不会为服务调用 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c74ea-130">However, in this situation, the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> method will not be called for your service.</span></span> <span data-ttu-id="c74ea-131">因此，您的服务可能需要在 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> 方法内部执行任何通常在 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> 中执行的最终关闭。</span><span class="sxs-lookup"><span data-stu-id="c74ea-131">Therefore, your service may have to perform any final shutdown that it would ordinarily perform in <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> from inside the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> method.</span></span> <span data-ttu-id="c74ea-132">可以测试 <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>，确定工作流运行时引擎是否正在运行。</span><span class="sxs-lookup"><span data-stu-id="c74ea-132">You can test <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> to determine whether the workflow runtime engine is running.</span></span>  
  
 <span data-ttu-id="c74ea-133">在调用 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> 之前，<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped> 设置为 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A>。</span><span class="sxs-lookup"><span data-stu-id="c74ea-133"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> is set to <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped> before <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> is invoked.</span></span>  <span data-ttu-id="c74ea-134"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> 的默认实现不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="c74ea-134">The default implementation of <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> performs no action.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseServicesExceptionNotHandledEvent">
      <MemberSignature Language="C#" Value="protected void RaiseServicesExceptionNotHandledEvent (Exception exception, Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseServicesExceptionNotHandledEvent(class System.Exception exception, valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseServicesExceptionNotHandledEvent (exception As Exception, instanceId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseServicesExceptionNotHandledEvent(Exception ^ exception, Guid instanceId);" />
      <MemberSignature Language="F#" Value="member this.RaiseServicesExceptionNotHandledEvent : Exception * Guid -&gt; unit" Usage="workflowRuntimeService.RaiseServicesExceptionNotHandledEvent (exception, instanceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="exception"><span data-ttu-id="c74ea-135">无法处理的异常。</span><span class="sxs-lookup"><span data-stu-id="c74ea-135">The exception that could not be handled.</span></span></param>
        <param name="instanceId"><span data-ttu-id="c74ea-136">与未经处理的异常关联的工作流实例的 <see cref="T:System.Guid" />。</span><span class="sxs-lookup"><span data-stu-id="c74ea-136">The <see cref="T:System.Guid" /> of the workflow instance associated with the unhandled exception.</span></span></param>
        <summary><span data-ttu-id="c74ea-137">引发 <see cref="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="c74ea-137">Raises the <see cref="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c74ea-138">当服务在其执行期间遇到无法处理的异常时，可以调用 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A> 来引发 <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=nameWithType> 事件。</span><span class="sxs-lookup"><span data-stu-id="c74ea-138">Your service can call <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A> to raise the <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=nameWithType> event when it encounters an exception that it cannot handle during its execution.</span></span> <span data-ttu-id="c74ea-139">应传递与未处理异常关联的工作流实例的 <xref:System.Guid>。</span><span class="sxs-lookup"><span data-stu-id="c74ea-139">You should pass the <xref:System.Guid> of the workflow instance associated with the unhandled exception.</span></span> <span data-ttu-id="c74ea-140">例如，计时器服务可能会传递与发生异常的计时器关联的 <xref:System.Guid>。</span><span class="sxs-lookup"><span data-stu-id="c74ea-140">For example, a timer service might pass the <xref:System.Guid> associated with the timer for which the exception occurred.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Runtime">
      <MemberSignature Language="C#" Value="protected System.Workflow.Runtime.WorkflowRuntime Runtime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Runtime.WorkflowRuntime Runtime" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Runtime As WorkflowRuntime" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Workflow::Runtime::WorkflowRuntime ^ Runtime { System::Workflow::Runtime::WorkflowRuntime ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Runtime : System.Workflow.Runtime.WorkflowRuntime" Usage="System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowRuntime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c74ea-141">获取此服务的 <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />。</span><span class="sxs-lookup"><span data-stu-id="c74ea-141">Gets the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> for this service.</span></span></summary>
        <value><span data-ttu-id="c74ea-142"><see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="c74ea-142">The <see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c74ea-143">在服务上调用 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 之前，工作流运行时引擎将设置此属性。</span><span class="sxs-lookup"><span data-stu-id="c74ea-143">The workflow runtime engine sets this property before it calls <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> on the service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="protected internal virtual void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Start();" />
      <MemberSignature Language="F#" Value="abstract member Start : unit -&gt; unit&#xA;override this.Start : unit -&gt; unit" Usage="workflowRuntimeService.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c74ea-144">在派生类中重写时，启动服务并将 <see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" /> 更改为 <see cref="F:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Starting" />。</span><span class="sxs-lookup"><span data-stu-id="c74ea-144">When overridden in a derived class, starts the service and changes the <see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" /> to <see cref="F:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Starting" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c74ea-145">在调用 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 时，工作流运行时引擎在其所有派生自 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 类的服务上调用 <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>。</span><span class="sxs-lookup"><span data-stu-id="c74ea-145"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> is invoked by the workflow runtime engine on all of its services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class when <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> is called.</span></span>  
  
 <span data-ttu-id="c74ea-146">在工作流运行时引擎启动之后，通过调用 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 将某个工作流运行时引擎服务添加到工作流运行时引擎时，工作流运行时引擎也会调用 <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>。</span><span class="sxs-lookup"><span data-stu-id="c74ea-146"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> is also invoked by the workflow runtime engine when a workflow runtime engine service is added to the workflow runtime engine by a call to <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> after the workflow runtime engine has already started.</span></span> <span data-ttu-id="c74ea-147"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 的默认实现跟踪服务是否已启动；如果在服务已运行的情况下启动该服务，则使用此信息引发适当的异常。</span><span class="sxs-lookup"><span data-stu-id="c74ea-147">The default implementation of <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> tracks whether the service has been started and uses this information to throw the appropriate exception if the service is started while it is already running.</span></span>  
  
 <span data-ttu-id="c74ea-148">通过重写此方法，可以提供由工作流运行时引擎启动服务时所需的附加功能。</span><span class="sxs-lookup"><span data-stu-id="c74ea-148">You can provide additional functionality necessary to have your service started by the workflow runtime engine by overriding this method.</span></span> <span data-ttu-id="c74ea-149">当工作流运行时引擎在服务上调用 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 时，不能确保哪些服务正在运行（如果有）。</span><span class="sxs-lookup"><span data-stu-id="c74ea-149">There is no guarantee about which, if any, services will be running when the workflow runtime engine calls <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> on your service.</span></span> <span data-ttu-id="c74ea-150">因此，在 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 方法中，只应执行任何不依赖于由其他服务提供的功能的初始化。</span><span class="sxs-lookup"><span data-stu-id="c74ea-150">Therefore, in the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> method, you should only perform any initialization that does not depend on functionality provided by other services.</span></span> <span data-ttu-id="c74ea-151">这包括由核心服务（如计划程序服务）提供的功能。</span><span class="sxs-lookup"><span data-stu-id="c74ea-151">This includes functionality provided by core services such as the scheduler service.</span></span> <span data-ttu-id="c74ea-152">在工作流运行时引擎调用其所有工作流运行时引擎服务的 <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType> 方法后，将引发 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="c74ea-152">The workflow runtime engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType> event after it has called the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> method of all of its workflow runtime engine services.</span></span> <span data-ttu-id="c74ea-153">如果在启动所有工作流运行时引擎服务之后，服务需要其他初始化，则可以重写 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> 方法，在引发 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 事件时执行此初始化。</span><span class="sxs-lookup"><span data-stu-id="c74ea-153">If your service requires additional initialization after all of the workflow runtime engine services have been started, you can override the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> method in order to perform this initialization when the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> event is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c74ea-154">如果在启动工作流运行时引擎之后，通过调用 <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> 将您的服务添加到工作流运行时引擎，则工作流运行时引擎将在该服务上调用 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>。</span><span class="sxs-lookup"><span data-stu-id="c74ea-154">If your service is added to the workflow runtime engine by a call to <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> after the workflow runtime engine has already been started, the workflow runtime engine will call <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> on your service.</span></span> <span data-ttu-id="c74ea-155">不过，由于在这种情况下已经发生 <xref:System.Workflow.Runtime.WorkflowRuntime.Started> 事件，因此，您的服务可能需要在 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> 方法内部执行任何通常在 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 中执行的初始化。</span><span class="sxs-lookup"><span data-stu-id="c74ea-155">However, in this situation, the <xref:System.Workflow.Runtime.WorkflowRuntime.Started> event has already occurred, therefore, your service may have to perform any initialization that it would ordinarily perform in <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> from inside the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> method.</span></span> <span data-ttu-id="c74ea-156">可以测试 <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>，确定工作流运行时引擎是否已启动。</span><span class="sxs-lookup"><span data-stu-id="c74ea-156">You can test <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> to determine whether the workflow runtime engine has been started.</span></span>  
  
 <span data-ttu-id="c74ea-157"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 只应由工作流运行时引擎调用。</span><span class="sxs-lookup"><span data-stu-id="c74ea-157"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> should only be called by the workflow runtime engine.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c74ea-158">下面的示例演示如何在从 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 派生的对象 TerminationTrackingService 上调用 Start 方法。</span><span class="sxs-lookup"><span data-stu-id="c74ea-158">The following example demonstrates calling the Start method on an object derived from <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>, TerminationTrackingService.</span></span>  <span data-ttu-id="c74ea-159">此示例摘自“终止跟踪服务”SDK 示例。</span><span class="sxs-lookup"><span data-stu-id="c74ea-159">This example is from the Termination Tracking Service SDK sample.</span></span>  <span data-ttu-id="c74ea-160">有关详细信息，请参阅 [终止跟踪服务示例](https://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439)。</span><span class="sxs-lookup"><span data-stu-id="c74ea-160">For more information, see [Termination Tracking Service Sample](https://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).</span></span>  
  
 [!code-csharp[WF_Samples#112](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#112)]
 [!code-vb[WF_Samples#112](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#112)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c74ea-161"><see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" /> 为空引用（在 Visual Basic 中为 <see langword="Nothing" />）</span><span class="sxs-lookup"><span data-stu-id="c74ea-161"><see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" /> is a null reference (<see langword="Nothing" /> in Visual Basic)</span></span> 
<span data-ttu-id="c74ea-162">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c74ea-162">-or-</span></span> 
<span data-ttu-id="c74ea-163">服务已启动。</span><span class="sxs-lookup"><span data-stu-id="c74ea-163">The service has already been started.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="protected System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState State" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property State As WorkflowRuntimeServiceState" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Workflow::Runtime::Hosting::WorkflowRuntimeServiceState State { System::Workflow::Runtime::Hosting::WorkflowRuntimeServiceState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState" Usage="System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c74ea-164">获取 <see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /> 的状态。</span><span class="sxs-lookup"><span data-stu-id="c74ea-164">Gets the state of the <see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" />.</span></span></summary>
        <value><span data-ttu-id="c74ea-165"><see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="c74ea-165">One of the <see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c74ea-166"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 类为启动和停止工作流运行时引擎服务实现两阶段机制。</span><span class="sxs-lookup"><span data-stu-id="c74ea-166">The <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class implements two-phase mechanisms for both starting and stopping a workflow runtime engine service.</span></span> <span data-ttu-id="c74ea-167">启动机制的第一阶段在工作流运行时引擎调用服务的 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 方法的实现时开始。</span><span class="sxs-lookup"><span data-stu-id="c74ea-167">The first phase of the start mechanism begins when the workflow runtime engine calls the implementation of the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> method for the service.</span></span> <span data-ttu-id="c74ea-168">此方法应调用 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 的基实现，该实现将 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> 设置为 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Starting>。</span><span class="sxs-lookup"><span data-stu-id="c74ea-168">This method should call the base implementation of <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>, which sets <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> to <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Starting>.</span></span> <span data-ttu-id="c74ea-169">当工作流运行时引擎启动了其所有工作流运行时引擎服务之后，在引发 <xref:System.Workflow.Runtime.WorkflowRuntime.Started> 事件时，发生第二阶段。</span><span class="sxs-lookup"><span data-stu-id="c74ea-169">The second phase occurs after the workflow runtime engine starts all of its workflow runtime engine services when it raises the <xref:System.Workflow.Runtime.WorkflowRuntime.Started> event.</span></span> <span data-ttu-id="c74ea-170"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 在内部管理对此事件的订阅，并且其处理程序会将 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> 设置为 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Started>。</span><span class="sxs-lookup"><span data-stu-id="c74ea-170">The <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> internally manages a subscription to this event and its handler will set <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> to <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Started>.</span></span>  
  
 <span data-ttu-id="c74ea-171">当工作流运行时引擎调用服务的 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> 方法的实现时，用于停止工作流运行时引擎服务的两阶段机制开始。</span><span class="sxs-lookup"><span data-stu-id="c74ea-171">The two-phase mechanism for stopping a workflow runtime engine service begins when the workflow runtime engine calls the implementation of the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> method for the service.</span></span> <span data-ttu-id="c74ea-172">此方法应调用 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> 的基实现，该实现将 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> 设置为 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopping>。</span><span class="sxs-lookup"><span data-stu-id="c74ea-172">This method should call the base implementation of <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>, which sets <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> to <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopping>.</span></span> <span data-ttu-id="c74ea-173">在工作流运行时引擎停止其所有工作流运行时引擎服务后，将引发 <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> 事件。</span><span class="sxs-lookup"><span data-stu-id="c74ea-173">After it has stopped all of its workflow runtime engine services, the workflow runtime engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> event.</span></span> <span data-ttu-id="c74ea-174"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 在内部管理对此事件的订阅，并且其处理程序会将 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> 设置为 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped>。</span><span class="sxs-lookup"><span data-stu-id="c74ea-174">The <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> internally manages a subscription to this event and its handler will set <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> to <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="protected internal virtual void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Stop();" />
      <MemberSignature Language="F#" Value="abstract member Stop : unit -&gt; unit&#xA;override this.Stop : unit -&gt; unit" Usage="workflowRuntimeService.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c74ea-175">在派生类中重写时，停止服务并将 <see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" /> 更改为 <see cref="F:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopping" />。</span><span class="sxs-lookup"><span data-stu-id="c74ea-175">When overridden in a derived class, stops the service and changes the <see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" /> to <see cref="F:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopping" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c74ea-176">在调用 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> 时，工作流运行时引擎在其所有派生自 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 类的服务上调用 <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>。</span><span class="sxs-lookup"><span data-stu-id="c74ea-176"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> is invoked by the workflow runtime engine on all of its services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class when <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> is called.</span></span>  <span data-ttu-id="c74ea-177">在通过调用 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> 从工作流运行时引擎中移除工作流运行时引擎服务时，工作流运行时引擎也会调用 <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A>。</span><span class="sxs-lookup"><span data-stu-id="c74ea-177"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> is also invoked by the workflow runtime engine when a workflow runtime engine service is removed from the workflow runtime engine by a call to <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A>.</span></span> <span data-ttu-id="c74ea-178"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> 的默认实现跟踪服务是否已启动，如果在尚未启动服务的情况下停止该服务，则使用此信息引发适当的异常。</span><span class="sxs-lookup"><span data-stu-id="c74ea-178">The default implementation of <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> tracks whether the service has been started and uses this information to throw the appropriate exception if the service is stopped before it is started.</span></span>  
  
 <span data-ttu-id="c74ea-179">通过重写此方法，可以提供由工作流运行时引擎停止服务时所需的附加功能。</span><span class="sxs-lookup"><span data-stu-id="c74ea-179">You can provide additional functionality necessary to have your service stopped by the workflow runtime engine by overriding this method.</span></span> <span data-ttu-id="c74ea-180">在服务上调用 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> 时，不能确保将要停止或正在运行哪些服务（如果有）。</span><span class="sxs-lookup"><span data-stu-id="c74ea-180">There is no guarantee about which, if any, services will be stopped or running when <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> is called on your service.</span></span> <span data-ttu-id="c74ea-181">在工作流运行时引擎调用其所有工作流运行时引擎服务的 <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> 方法后，将引发 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="c74ea-181">The workflow runtime engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> event after it has called the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> method of all of its workflow runtime engine services.</span></span> <span data-ttu-id="c74ea-182">您的服务可能需要保留部分剩余功能以便支持其他服务，直到由工作流运行时引擎对所有工作流运行时引擎服务调用了各自的 Stop 方法。</span><span class="sxs-lookup"><span data-stu-id="c74ea-182">Your service may need to retain some residual functionality to support other services until all the workflow runtime engine services have had their stop methods invoked by the workflow runtime engine.</span></span> <span data-ttu-id="c74ea-183">如果您的服务必须保留此类功能，则可以重写 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> 方法，在引发 <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> 事件时执行完成停止服务所需的任何附加操作。</span><span class="sxs-lookup"><span data-stu-id="c74ea-183">If your service must retain such functionality, you can override the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> method to perform any additional action required to finish stopping your service when the <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> event is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c74ea-184">当工作流运行时引擎正在运行时，如果通过调用 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 从工作流运行时引擎中移除了 <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A>，则工作流运行时引擎将在服务上调用 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>。</span><span class="sxs-lookup"><span data-stu-id="c74ea-184">If your <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> is removed from the workflow runtime engine by a call to <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> while the workflow runtime engine is running, the workflow runtime engine will call <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> on your service.</span></span> <span data-ttu-id="c74ea-185">不过，在这种情况下，不会为服务调用 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c74ea-185">However, in this situation, the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> method will not be called for your service.</span></span> <span data-ttu-id="c74ea-186">因此，您的服务可能需要在 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> 方法内部执行任何通常在 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> 中执行的附加关闭功能。</span><span class="sxs-lookup"><span data-stu-id="c74ea-186">Therefore, your service may have to perform any additional shutdown functionality that it would ordinarily perform in <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> from inside the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> method.</span></span> <span data-ttu-id="c74ea-187">可以测试 <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>，确定工作流运行时引擎是否正在运行。</span><span class="sxs-lookup"><span data-stu-id="c74ea-187">You can test <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> to determine whether the workflow runtime engine is running.</span></span>  
  
 <span data-ttu-id="c74ea-188"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> 只应由工作流运行时引擎调用。</span><span class="sxs-lookup"><span data-stu-id="c74ea-188"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> should only be called by the workflow runtime engine.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c74ea-189"><see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" /> 为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</span><span class="sxs-lookup"><span data-stu-id="c74ea-189"><see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span>  
  
<span data-ttu-id="c74ea-190">- 或 -</span><span class="sxs-lookup"><span data-stu-id="c74ea-190">-or-</span></span> 
<span data-ttu-id="c74ea-191">服务尚未启动。</span><span class="sxs-lookup"><span data-stu-id="c74ea-191">The service has not yet been started.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
