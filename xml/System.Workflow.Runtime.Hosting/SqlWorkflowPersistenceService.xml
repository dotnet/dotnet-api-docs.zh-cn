<Type Name="SqlWorkflowPersistenceService" FullName="System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="64d8c15d80ae7b2406bc54f8ba5b08e4fb7067a2" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89927949" /></Metadata><TypeSignature Language="C#" Value="public class SqlWorkflowPersistenceService : System.Workflow.Runtime.Hosting.WorkflowPersistenceService, System.Workflow.Runtime.IPendingWork" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlWorkflowPersistenceService extends System.Workflow.Runtime.Hosting.WorkflowPersistenceService implements class System.Workflow.Runtime.IPendingWork" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlWorkflowPersistenceService&#xA;Inherits WorkflowPersistenceService&#xA;Implements IPendingWork" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlWorkflowPersistenceService : System::Workflow::Runtime::Hosting::WorkflowPersistenceService, System::Workflow::Runtime::IPendingWork" />
  <TypeSignature Language="F#" Value="type SqlWorkflowPersistenceService = class&#xA;    inherit WorkflowPersistenceService&#xA;    interface IPendingWork" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Runtime.Hosting.WorkflowPersistenceService</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Workflow.Runtime.IPendingWork</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="06960-101">表示一种持久性服务，该服务使用 SQL 数据库存储工作流状态信息。</span><span class="sxs-lookup"><span data-stu-id="06960-101">Represents a persistence service that uses a SQL database to store workflow state information.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="06960-102"><xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> 类表示功能完全的持久性服务。</span><span class="sxs-lookup"><span data-stu-id="06960-102">The <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> class represents a fully-functional persistence service.</span></span> <span data-ttu-id="06960-103">您可以使用这一现成可用的服务，在工作流运行时引擎请求时，保留和检索关于工作流实例的工作流状态信息。</span><span class="sxs-lookup"><span data-stu-id="06960-103">You can use this service out-of-box to persist and retrieve workflow state information about a workflow instance when requested to by the workflow runtime engine.</span></span>  
  
 <span data-ttu-id="06960-104"><xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> 会参与 <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> 所提供的工作流事务批处理功能。</span><span class="sxs-lookup"><span data-stu-id="06960-104">The <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> participates in the workflow transaction batching functionality provided by the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>.</span></span> <span data-ttu-id="06960-105">也就是说，它会将表示 SQL 数据库挂起写入的对象添加到 <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A> 并实现 <xref:System.Workflow.Runtime.IPendingWork> 接口。</span><span class="sxs-lookup"><span data-stu-id="06960-105">That is, it adds objects that represent pending writes to the SQL database to the <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A> and implements the <xref:System.Workflow.Runtime.IPendingWork> interface.</span></span>  
  
 <span data-ttu-id="06960-106"><xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> 支持工作流实例的锁定。</span><span class="sxs-lookup"><span data-stu-id="06960-106">The <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> supports locking of workflow instances.</span></span> <span data-ttu-id="06960-107">此功能用于几个工作流运行时共享同一个数据库的情况。</span><span class="sxs-lookup"><span data-stu-id="06960-107">This feature is used when several workflow runtimes share the same database.</span></span> <span data-ttu-id="06960-108">只要工作流运行时使用了某个工作流实例，SQL 数据库表中的列就会将该工作流实例标记为锁定。</span><span class="sxs-lookup"><span data-stu-id="06960-108">A column in the SQL database table is used to mark a workflow instance as locked whenever it is being used by a workflow runtime.</span></span> <span data-ttu-id="06960-109"><xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> 不会加载被另一个运行时标记为“使用中”的工作流实例。</span><span class="sxs-lookup"><span data-stu-id="06960-109">The <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> does not load a workflow instance that is marked as "in use" by another runtime.</span></span> <span data-ttu-id="06960-110">通常，当保留（如空闲、完成或终止）工作流实例时，会释放这些锁定。</span><span class="sxs-lookup"><span data-stu-id="06960-110">Typically these locks are released when the workflow instance is persisted, for example, on idle, completion, or termination.</span></span> <span data-ttu-id="06960-111">另外，在非活动状态持续一段时间后，也可能会自动释放这些锁定。</span><span class="sxs-lookup"><span data-stu-id="06960-111">The locks can also be released automatically after a period of inactivity.</span></span> <span data-ttu-id="06960-112">使用 <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> 类的构造函数，可以设置此非活动的时间期限。</span><span class="sxs-lookup"><span data-stu-id="06960-112">This period of inactivity can be set using the constructor of the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> class.</span></span>  <span data-ttu-id="06960-113">还可通过配置文件对其进行设置。</span><span class="sxs-lookup"><span data-stu-id="06960-113">It can also be set through the configuration file.</span></span>  
  
 <span data-ttu-id="06960-114">有关持久性服务的一般详细信息，请参阅 <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> 类。</span><span class="sxs-lookup"><span data-stu-id="06960-114">For more information about persistence services in general, see the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class.</span></span>  
  
 <span data-ttu-id="06960-115">例如，如果工作流实例具有 <xref:System.Workflow.Activities.DelayActivity>，则它们可以包含计时器。</span><span class="sxs-lookup"><span data-stu-id="06960-115">Workflow instances can contain timers, for example, if they have a <xref:System.Workflow.Activities.DelayActivity>.</span></span> <span data-ttu-id="06960-116">对于包含计时器的工作流，<xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> 记录此工作流的下一个计时器过期的时间。</span><span class="sxs-lookup"><span data-stu-id="06960-116">For workflows that contain timers, the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> records the time when the workflow's next timer expires.</span></span> <span data-ttu-id="06960-117"><xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> 会定期轮询数据库，查找计时器已过期的工作流。</span><span class="sxs-lookup"><span data-stu-id="06960-117">The <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> periodically polls the database, looking for workflows whose timers have expired.</span></span> <span data-ttu-id="06960-118">轮询间隔的频率可以使用 <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> 构造函数或配置文件进行设置。</span><span class="sxs-lookup"><span data-stu-id="06960-118">The frequency of the polling interval can be set using the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> constructor or using a configuration file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="06960-119">如果在工作流应用程序中同时使用 <xref:System.Workflow.Runtime.Tracking.SqlTrackingService> 和 <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>，建议为持久性和跟踪使用单一数据库。</span><span class="sxs-lookup"><span data-stu-id="06960-119">When using both the <xref:System.Workflow.Runtime.Tracking.SqlTrackingService> and the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> in a workflow application, it is recommended to use a single database for both persistence and tracking.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="06960-120">初始化 <see cref="T:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="06960-120">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlWorkflowPersistenceService (System.Collections.Specialized.NameValueCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Specialized.NameValueCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.#ctor(System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameters As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlWorkflowPersistenceService(System::Collections::Specialized::NameValueCollection ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService : System.Collections.Specialized.NameValueCollection -&gt; System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" Usage="new System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService parameters" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameters" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="06960-121">一个包含启动参数的 <see cref="T:System.Collections.Specialized.NameValueCollection" />。</span><span class="sxs-lookup"><span data-stu-id="06960-121">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that contains startup parameters.</span></span></param>
        <summary><span data-ttu-id="06960-122">使用指定的参数初始化 <see cref="T:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="06960-122">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" /> class by using the specified parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06960-123">当工作流运行时引擎从应用程序配置文件加载服务时，会调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="06960-123">This constructor is invoked when the workflow runtime engine loads services from an application configuration file.</span></span> <span data-ttu-id="06960-124">也可以使用 `NameValueCollection` 参数以编程的方式调用该构造函数。</span><span class="sxs-lookup"><span data-stu-id="06960-124">It can also be programmatically invoked with the `NameValueCollection` parameter.</span></span> <span data-ttu-id="06960-125">有效参数为 `ConnectionString`、`OwnershipTimeoutSeconds`、`UnloadOnIdle` 和 `EnableRetries`。</span><span class="sxs-lookup"><span data-stu-id="06960-125">The valid parameters are `ConnectionString`, `OwnershipTimeoutSeconds`, `UnloadOnIdle`, and `EnableRetries`.</span></span> <span data-ttu-id="06960-126">如果参数包含其他任何键，则会引发 <xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="06960-126">An <xref:System.ArgumentException> is thrown if parameters contain any other keys.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="06960-127"><paramref name="parameters" /> 包含无效的数据库连接字符串。</span><span class="sxs-lookup"><span data-stu-id="06960-127"><paramref name="parameters" /> contains an invalid database connection string.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06960-128"><paramref name="parameters" /> 为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</span><span class="sxs-lookup"><span data-stu-id="06960-128"><paramref name="parameters" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlWorkflowPersistenceService (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlWorkflowPersistenceService(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService : string -&gt; System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" Usage="new System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString"><span data-ttu-id="06960-129">有效的数据库连接字符串。</span><span class="sxs-lookup"><span data-stu-id="06960-129">A valid database connection string.</span></span></param>
        <summary><span data-ttu-id="06960-130">使用数据库连接字符串初始化 <see cref="T:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="06960-130">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" /> class by using the database connection string.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06960-131"><paramref name="connectionString" /> 为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</span><span class="sxs-lookup"><span data-stu-id="06960-131"><paramref name="connectionString" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlWorkflowPersistenceService (string connectionString, bool unloadOnIdle, TimeSpan instanceOwnershipDuration, TimeSpan loadingInterval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, bool unloadOnIdle, valuetype System.TimeSpan instanceOwnershipDuration, valuetype System.TimeSpan loadingInterval) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.#ctor(System.String,System.Boolean,System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, unloadOnIdle As Boolean, instanceOwnershipDuration As TimeSpan, loadingInterval As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlWorkflowPersistenceService(System::String ^ connectionString, bool unloadOnIdle, TimeSpan instanceOwnershipDuration, TimeSpan loadingInterval);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService : string * bool * TimeSpan * TimeSpan -&gt; System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" Usage="new System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService (connectionString, unloadOnIdle, instanceOwnershipDuration, loadingInterval)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="unloadOnIdle" Type="System.Boolean" />
        <Parameter Name="instanceOwnershipDuration" Type="System.TimeSpan" />
        <Parameter Name="loadingInterval" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="connectionString"><span data-ttu-id="06960-132">有效的数据库连接字符串。</span><span class="sxs-lookup"><span data-stu-id="06960-132">A valid database connection string.</span></span></param>
        <param name="unloadOnIdle"><span data-ttu-id="06960-133"><see langword="true" />，则在工作流处于空闲状态时将其卸载。</span><span class="sxs-lookup"><span data-stu-id="06960-133"><see langword="true" /> to unload the workflow when it is in an idle state.</span></span></param>
        <param name="instanceOwnershipDuration"><span data-ttu-id="06960-134">空闲工作流保持锁定的时间长度。</span><span class="sxs-lookup"><span data-stu-id="06960-134">The length of time that locks are maintained on idle workflows.</span></span></param>
        <param name="loadingInterval"><span data-ttu-id="06960-135">持久性服务轮询数据库以查找计时器已过期的工作流的频率。</span><span class="sxs-lookup"><span data-stu-id="06960-135">The frequency at which the persistence service polls the database for workflows with expired timers.</span></span></param>
        <summary><span data-ttu-id="06960-136">使用数据库连接字符串和其他参数初始化 <see cref="T:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="06960-136">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" /> class using a database connection string and other parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06960-137">请注意，使用此构造函数（为 `instanceOwnershipDuration` 提供值）将启用锁定。</span><span class="sxs-lookup"><span data-stu-id="06960-137">Note that using this constructor (which provides a value for `instanceOwnershipDuration`) enables locking.</span></span> <span data-ttu-id="06960-138">若要创建不会启用锁定的持久性服务，请使用另一个不会指定 `instanceOwnershipDuration` 的构造函数。</span><span class="sxs-lookup"><span data-stu-id="06960-138">To create a persistence service that does not enable locking, use a different constructor that does not specify `instanceOwnershipDuration`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06960-139"><paramref name="connectionString" /> 为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</span><span class="sxs-lookup"><span data-stu-id="06960-139"><paramref name="connectionString" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnableRetries">
      <MemberSignature Language="C#" Value="public bool EnableRetries { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableRetries" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.EnableRetries" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableRetries As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableRetries { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableRetries : bool with get, set" Usage="System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.EnableRetries" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06960-140">获取或设置一个值，该值指定 <see cref="T:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" /> 是否将重试提交工作批次。</span><span class="sxs-lookup"><span data-stu-id="06960-140">Gets or sets a value that specifies whether the <see cref="T:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" /> retries committing a work batch.</span></span></summary>
        <value><span data-ttu-id="06960-141">如果服务应重试提交工作批次，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="06960-141"><see langword="true" /> if the service should retry committing the work batch; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="06960-142">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="06960-142">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06960-143">无法批处理以下工作项，而且任何事务重试都必须通过 `EnableRetries` 属性进行处理：</span><span class="sxs-lookup"><span data-stu-id="06960-143">The following work items cannot be batched and any transaction retries must be handled through the `EnableRetries` property:</span></span>  
  
-   <span data-ttu-id="06960-144">轮询以查找过期的数据库计时器。</span><span class="sxs-lookup"><span data-stu-id="06960-144">Polling for expired database timers.</span></span>  
  
-   <span data-ttu-id="06960-145">加载工作流实例状态。</span><span class="sxs-lookup"><span data-stu-id="06960-145">Loading workflow instance states.</span></span>  
  
-   <span data-ttu-id="06960-146">在工作流运行时引擎启动时重新加载工作流实例。</span><span class="sxs-lookup"><span data-stu-id="06960-146">Reloading workflow instances when the workflow run-time engine starts.</span></span>  
  
-   <span data-ttu-id="06960-147">调用 <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.GetAllWorkflows%2A>。</span><span class="sxs-lookup"><span data-stu-id="06960-147">Calling <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.GetAllWorkflows%2A>.</span></span>  
  
 <span data-ttu-id="06960-148">除了以编程方式进行设置外，还可以通过配置文件启用此功能。</span><span class="sxs-lookup"><span data-stu-id="06960-148">Besides being set programmatically, this functionality can be enabled through a configuration file.</span></span> <span data-ttu-id="06960-149">有关如何通过配置文件设置此属性的详细信息，请参阅 [工作流配置文件](https://msdn.microsoft.com/library/ada4bb90-6c9d-4f3d-a9d0-b559bb0f9909)。</span><span class="sxs-lookup"><span data-stu-id="06960-149">For more information about how to set this property through a configuration file, see [Workflow Configuration Files](https://msdn.microsoft.com/library/ada4bb90-6c9d-4f3d-a9d0-b559bb0f9909).</span></span>  
  
 <span data-ttu-id="06960-150">有关重试工作批次事务的一般信息，请参阅 [在工作流中批处理状态信息](https://msdn.microsoft.com/library/ecda18ba-9140-4bd7-b13d-6787fdf5959d)。</span><span class="sxs-lookup"><span data-stu-id="06960-150">For general information about retrying work batch transactions, see [Batching State Information in Workflows](https://msdn.microsoft.com/library/ecda18ba-9140-4bd7-b13d-6787fdf5959d).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllWorkflows">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Workflow.Runtime.Hosting.SqlPersistenceWorkflowInstanceDescription&gt; GetAllWorkflows ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Workflow.Runtime.Hosting.SqlPersistenceWorkflowInstanceDescription&gt; GetAllWorkflows() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.GetAllWorkflows" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllWorkflows () As IEnumerable(Of SqlPersistenceWorkflowInstanceDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Workflow::Runtime::Hosting::SqlPersistenceWorkflowInstanceDescription ^&gt; ^ GetAllWorkflows();" />
      <MemberSignature Language="F#" Value="member this.GetAllWorkflows : unit -&gt; seq&lt;System.Workflow.Runtime.Hosting.SqlPersistenceWorkflowInstanceDescription&gt;" Usage="sqlWorkflowPersistenceService.GetAllWorkflows " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Workflow.Runtime.Hosting.SqlPersistenceWorkflowInstanceDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="06960-151">检索所有已保留工作流的实例描述。</span><span class="sxs-lookup"><span data-stu-id="06960-151">Retrieves instance descriptions of all persisted workflows.</span></span></summary>
        <returns><span data-ttu-id="06960-152">所有已保留工作流的列表。</span><span class="sxs-lookup"><span data-stu-id="06960-152">A list of all persisted workflows.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCompletedContextActivity">
      <MemberSignature Language="C#" Value="protected internal override System.Workflow.ComponentModel.Activity LoadCompletedContextActivity (Guid id, System.Workflow.ComponentModel.Activity outerActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Workflow.ComponentModel.Activity LoadCompletedContextActivity(valuetype System.Guid id, class System.Workflow.ComponentModel.Activity outerActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function LoadCompletedContextActivity (id As Guid, outerActivity As Activity) As Activity" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Workflow::ComponentModel::Activity ^ LoadCompletedContextActivity(Guid id, System::Workflow::ComponentModel::Activity ^ outerActivity);" />
      <MemberSignature Language="F#" Value="override this.LoadCompletedContextActivity : Guid * System.Workflow.ComponentModel.Activity -&gt; System.Workflow.ComponentModel.Activity" Usage="sqlWorkflowPersistenceService.LoadCompletedContextActivity (id, outerActivity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Guid" />
        <Parameter Name="outerActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="06960-153">范围 Activity 的 <see cref="T:System.Guid" />。</span><span class="sxs-lookup"><span data-stu-id="06960-153">The <see cref="T:System.Guid" /> of the scope activity.</span></span></param>
        <param name="outerActivity"><span data-ttu-id="06960-154">包含范围 Activity 的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</span><span class="sxs-lookup"><span data-stu-id="06960-154">The <see cref="T:System.Workflow.ComponentModel.Activity" /> that encloses the scope activity.</span></span></param>
        <summary><span data-ttu-id="06960-155">从数据库中检索指定的已完成范围。</span><span class="sxs-lookup"><span data-stu-id="06960-155">Retrieves the specified completed scope from the database.</span></span></summary>
        <returns><span data-ttu-id="06960-156">表示已完成范围的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</span><span class="sxs-lookup"><span data-stu-id="06960-156">An <see cref="T:System.Workflow.ComponentModel.Activity" /> that represents the completed scope.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06960-157">工作流运行时引擎在补偿期间使用 <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadCompletedContextActivity%2A>。</span><span class="sxs-lookup"><span data-stu-id="06960-157">The workflow run-time engine uses <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadCompletedContextActivity%2A> during compensation.</span></span> <span data-ttu-id="06960-158"><xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadCompletedContextActivity%2A> 只应由工作流运行时引擎调用。</span><span class="sxs-lookup"><span data-stu-id="06960-158"><xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadCompletedContextActivity%2A> should only be called by the workflow run-time engine.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="06960-159">数据库中找不到匹配 <paramref name="id" /> 的范围。</span><span class="sxs-lookup"><span data-stu-id="06960-159">A scope that matches <paramref name="id" /> could not be found in the database.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LoadExpiredTimerWorkflowIds">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Guid&gt; LoadExpiredTimerWorkflowIds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;valuetype System.Guid&gt; LoadExpiredTimerWorkflowIds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadExpiredTimerWorkflowIds" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadExpiredTimerWorkflowIds () As IList(Of Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Guid&gt; ^ LoadExpiredTimerWorkflowIds();" />
      <MemberSignature Language="F#" Value="member this.LoadExpiredTimerWorkflowIds : unit -&gt; System.Collections.Generic.IList&lt;Guid&gt;" Usage="sqlWorkflowPersistenceService.LoadExpiredTimerWorkflowIds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Guid&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="06960-160">检索计时器已过期工作流的 ID 列表。</span><span class="sxs-lookup"><span data-stu-id="06960-160">Retrieves a list of ids for workflows with expired timers.</span></span></summary>
        <returns><span data-ttu-id="06960-161">计时器已过期工作流的 ID 列表。</span><span class="sxs-lookup"><span data-stu-id="06960-161">A list of ids for workflows with expired timers.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadingInterval">
      <MemberSignature Language="C#" Value="public TimeSpan LoadingInterval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan LoadingInterval" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadingInterval" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LoadingInterval As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan LoadingInterval { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.LoadingInterval : TimeSpan" Usage="System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadingInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06960-162">获取加载间隔的长度。</span><span class="sxs-lookup"><span data-stu-id="06960-162">Gets the length of the loading interval.</span></span></summary>
        <value><span data-ttu-id="06960-163">持久性服务轮询数据库以查找计时器已过期的工作流的频率。</span><span class="sxs-lookup"><span data-stu-id="06960-163">The frequency at which the persistence service polls the database for workflows with expired timers.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06960-164">默认值为 2 分钟。</span><span class="sxs-lookup"><span data-stu-id="06960-164">The default value is 2 minutes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadWorkflowInstanceState">
      <MemberSignature Language="C#" Value="protected internal override System.Workflow.ComponentModel.Activity LoadWorkflowInstanceState (Guid id);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Workflow.ComponentModel.Activity LoadWorkflowInstanceState(valuetype System.Guid id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function LoadWorkflowInstanceState (id As Guid) As Activity" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Workflow::ComponentModel::Activity ^ LoadWorkflowInstanceState(Guid id);" />
      <MemberSignature Language="F#" Value="override this.LoadWorkflowInstanceState : Guid -&gt; System.Workflow.ComponentModel.Activity" Usage="sqlWorkflowPersistenceService.LoadWorkflowInstanceState id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="06960-165">工作流实例状态的 <see cref="T:System.Guid" />。</span><span class="sxs-lookup"><span data-stu-id="06960-165">The <see cref="T:System.Guid" /> of the workflow instance state.</span></span></param>
        <summary><span data-ttu-id="06960-166">从数据库中检索指定的工作流实例状态。</span><span class="sxs-lookup"><span data-stu-id="06960-166">Retrieves the specified workflow instance state from the database.</span></span></summary>
        <returns><span data-ttu-id="06960-167">一个 <see cref="T:System.Workflow.ComponentModel.Activity" />，表示工作流实例的根活动。</span><span class="sxs-lookup"><span data-stu-id="06960-167">An <see cref="T:System.Workflow.ComponentModel.Activity" /> that represents the root activity of the workflow instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06960-168"><xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadWorkflowInstanceState%2A> 只应由工作流运行时引擎调用。</span><span class="sxs-lookup"><span data-stu-id="06960-168"><xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadWorkflowInstanceState%2A> should only be called by the workflow run-time engine.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="06960-169">数据库中找不到匹配 <paramref name="id" /> 的工作流实例状态。</span><span class="sxs-lookup"><span data-stu-id="06960-169">A workflow instance state that matches <paramref name="id" /> could not be found in the database.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnStarted">
      <MemberSignature Language="C#" Value="protected override void OnStarted ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnStarted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.OnStarted" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnStarted ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnStarted();" />
      <MemberSignature Language="F#" Value="override this.OnStarted : unit -&gt; unit" Usage="sqlWorkflowPersistenceService.OnStarted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="06960-170">启动新的计时器，并恢复运行中的工作流实例。</span><span class="sxs-lookup"><span data-stu-id="06960-170">Starts a new timer and recovers running workflow instances.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveCompletedContextActivity">
      <MemberSignature Language="C#" Value="protected internal override void SaveCompletedContextActivity (System.Workflow.ComponentModel.Activity completedScopeActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void SaveCompletedContextActivity(class System.Workflow.ComponentModel.Activity completedScopeActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub SaveCompletedContextActivity (completedScopeActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void SaveCompletedContextActivity(System::Workflow::ComponentModel::Activity ^ completedScopeActivity);" />
      <MemberSignature Language="F#" Value="override this.SaveCompletedContextActivity : System.Workflow.ComponentModel.Activity -&gt; unit" Usage="sqlWorkflowPersistenceService.SaveCompletedContextActivity completedScopeActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completedScopeActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="completedScopeActivity"><span data-ttu-id="06960-171">表示已完成范围的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</span><span class="sxs-lookup"><span data-stu-id="06960-171">An <see cref="T:System.Workflow.ComponentModel.Activity" /> that represents the completed scope.</span></span></param>
        <summary><span data-ttu-id="06960-172">保存指定的已完成范围的状态。</span><span class="sxs-lookup"><span data-stu-id="06960-172">Saves the state of the specified completed scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06960-173">`completedScopeActivity` 会进行序列化并添加到 <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A> 中。</span><span class="sxs-lookup"><span data-stu-id="06960-173">`completedScopeActivity` is serialized and added to the <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveWorkflowInstanceState">
      <MemberSignature Language="C#" Value="protected internal override void SaveWorkflowInstanceState (System.Workflow.ComponentModel.Activity rootActivity, bool unlock);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void SaveWorkflowInstanceState(class System.Workflow.ComponentModel.Activity rootActivity, bool unlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub SaveWorkflowInstanceState (rootActivity As Activity, unlock As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void SaveWorkflowInstanceState(System::Workflow::ComponentModel::Activity ^ rootActivity, bool unlock);" />
      <MemberSignature Language="F#" Value="override this.SaveWorkflowInstanceState : System.Workflow.ComponentModel.Activity * bool -&gt; unit" Usage="sqlWorkflowPersistenceService.SaveWorkflowInstanceState (rootActivity, unlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="unlock" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rootActivity"><span data-ttu-id="06960-174">工作流实例的根活动。</span><span class="sxs-lookup"><span data-stu-id="06960-174">The root activity of the workflow instance.</span></span></param>
        <param name="unlock"><span data-ttu-id="06960-175">如果工作流实例不应锁定，则为 <see langword="true" />；如果工作流实例应该锁定，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="06960-175"><see langword="true" /> if the workflow instance should not be locked; <see langword="false" /> if the workflow instance should be locked.</span></span></param>
        <summary><span data-ttu-id="06960-176">保存指定的工作流实例状态。</span><span class="sxs-lookup"><span data-stu-id="06960-176">Saves the specified workflow instance state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06960-177">`rootActivity` 会进行序列化并写入 <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A> 中。</span><span class="sxs-lookup"><span data-stu-id="06960-177">`rootActivity` is serialized and written to the <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>.</span></span> <span data-ttu-id="06960-178">现成可用的 <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> 会实现工作流实例状态的锁定。</span><span class="sxs-lookup"><span data-stu-id="06960-178">The out-of-box <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> implements locking of the workflow instance state.</span></span> <span data-ttu-id="06960-179">用户必须在构造函数中配置 `instanceOwnershipDuration` 参数。</span><span class="sxs-lookup"><span data-stu-id="06960-179">The user must configure the `instanceOwnershipDuration` parameter in the constructor.</span></span> <span data-ttu-id="06960-180">此值将决定主机可以锁定实例的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="06960-180">This value decides the time interval during which the instance can be locked by a host.</span></span> <span data-ttu-id="06960-181">如果多台主机共享相同的持久性服务和数据库，而另一台主机尝试在此间隔期间加载实例，则会发生 <xref:System.Workflow.Runtime.WorkflowOwnershipException>。</span><span class="sxs-lookup"><span data-stu-id="06960-181">If multiple hosts share the same persistence service and database, and another host tries to load the instance during this interval, a <xref:System.Workflow.Runtime.WorkflowOwnershipException> occurs.</span></span> <span data-ttu-id="06960-182">有关更多信息，请参见 <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> 类。</span><span class="sxs-lookup"><span data-stu-id="06960-182">For more information, see the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceInstanceId">
      <MemberSignature Language="C#" Value="public Guid ServiceInstanceId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ServiceInstanceId" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.ServiceInstanceId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceInstanceId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ServiceInstanceId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceInstanceId : Guid" Usage="System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.ServiceInstanceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06960-183">获取服务实例标识符。</span><span class="sxs-lookup"><span data-stu-id="06960-183">Gets the service instance identifier.</span></span></summary>
        <value><span data-ttu-id="06960-184">服务实例标识符。</span><span class="sxs-lookup"><span data-stu-id="06960-184">The service instance identifier.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06960-185">默认值是 `Guid.Empty`。</span><span class="sxs-lookup"><span data-stu-id="06960-185">The default value is `Guid.Empty`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="protected internal override void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Start" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Start();" />
      <MemberSignature Language="F#" Value="override this.Start : unit -&gt; unit" Usage="sqlWorkflowPersistenceService.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="06960-186">启动 <see cref="T:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" />。</span><span class="sxs-lookup"><span data-stu-id="06960-186">Starts the <see cref="T:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06960-187"><xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Start%2A> 只能由工作流运行时引擎调用。</span><span class="sxs-lookup"><span data-stu-id="06960-187"><xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Start%2A> must only be called by the workflow run-time engine.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="protected internal override void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Stop" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Stop();" />
      <MemberSignature Language="F#" Value="override this.Stop : unit -&gt; unit" Usage="sqlWorkflowPersistenceService.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="06960-188">停止服务和计时器。</span><span class="sxs-lookup"><span data-stu-id="06960-188">Stops the service and the timer.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.Runtime.IPendingWork.Commit">
      <MemberSignature Language="C#" Value="void IPendingWork.Commit (System.Transactions.Transaction transaction, System.Collections.ICollection items);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.Runtime.IPendingWork.Commit(class System.Transactions.Transaction transaction, class System.Collections.ICollection items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#Commit(System.Transactions.Transaction,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Sub Commit (transaction As Transaction, items As ICollection) Implements IPendingWork.Commit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.Runtime.IPendingWork.Commit(System::Transactions::Transaction ^ transaction, System::Collections::ICollection ^ items) = System::Workflow::Runtime::IPendingWork::Commit;" />
      <MemberSignature Language="F#" Value="abstract member System.Workflow.Runtime.IPendingWork.Commit : System.Transactions.Transaction * System.Collections.ICollection -&gt; unit&#xA;override this.System.Workflow.Runtime.IPendingWork.Commit : System.Transactions.Transaction * System.Collections.ICollection -&gt; unit" Usage="sqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.Commit (transaction, items)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.Runtime.IPendingWork.Commit(System.Transactions.Transaction,System.Collections.ICollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
        <Parameter Name="items" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="transaction"><span data-ttu-id="06960-189"><see cref="T:System.Transactions.Transaction" />。</span><span class="sxs-lookup"><span data-stu-id="06960-189">A <see cref="T:System.Transactions.Transaction" />.</span></span></param>
        <param name="items"><span data-ttu-id="06960-190">要写入数据库的工作项的 <see cref="T:System.Collections.ICollection" />。</span><span class="sxs-lookup"><span data-stu-id="06960-190">The <see cref="T:System.Collections.ICollection" /> of work items to be written to the database.</span></span></param>
        <summary><span data-ttu-id="06960-191">将序列化状态对象的 <see cref="T:System.Collections.ICollection" /> 写入数据库。</span><span class="sxs-lookup"><span data-stu-id="06960-191">Writes an <see cref="T:System.Collections.ICollection" /> of serialized state objects to the database.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06960-192">包含在 `items` 中的序列化状态对象会写入数据库。</span><span class="sxs-lookup"><span data-stu-id="06960-192">The serialized state objects that are contained in `items` are written to the database.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Workflow.Runtime.Hosting.PersistenceException"><span data-ttu-id="06960-193">尝试写入数据库时发生错误。</span><span class="sxs-lookup"><span data-stu-id="06960-193">An error occurred while trying to write to the database.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.Runtime.IPendingWork.Complete">
      <MemberSignature Language="C#" Value="void IPendingWork.Complete (bool succeeded, System.Collections.ICollection items);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.Runtime.IPendingWork.Complete(bool succeeded, class System.Collections.ICollection items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#Complete(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Sub Complete (succeeded As Boolean, items As ICollection) Implements IPendingWork.Complete" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.Runtime.IPendingWork.Complete(bool succeeded, System::Collections::ICollection ^ items) = System::Workflow::Runtime::IPendingWork::Complete;" />
      <MemberSignature Language="F#" Value="abstract member System.Workflow.Runtime.IPendingWork.Complete : bool * System.Collections.ICollection -&gt; unit&#xA;override this.System.Workflow.Runtime.IPendingWork.Complete : bool * System.Collections.ICollection -&gt; unit" Usage="sqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.Complete (succeeded, items)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.Runtime.IPendingWork.Complete(System.Boolean,System.Collections.ICollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="succeeded" Type="System.Boolean" />
        <Parameter Name="items" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="succeeded"><span data-ttu-id="06960-194">如果提交成功，则为 <see langword="true" />，否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="06960-194"><see langword="true" /> if the commit succeeded; otherwise, <see langword="false" />.</span></span></param>
        <param name="items"><span data-ttu-id="06960-195">序列化状态对象的 <see cref="T:System.Collections.ICollection" />。</span><span class="sxs-lookup"><span data-stu-id="06960-195">An <see cref="T:System.Collections.ICollection" /> of serialized state objects.</span></span></param>
        <summary><span data-ttu-id="06960-196">完成工作批次并释放任何资源。</span><span class="sxs-lookup"><span data-stu-id="06960-196">Completes the work batch and releases any resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06960-197">在 <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> 的现成可用实现中，</span><span class="sxs-lookup"><span data-stu-id="06960-197">In the out-of-box implementation of the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>,</span></span>   
 <span data-ttu-id="06960-198"><xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System%23Workflow%23Runtime%23IPendingWork%23Complete%2A> 为 no-op（不执行任何操作）。</span><span class="sxs-lookup"><span data-stu-id="06960-198"><xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System%23Workflow%23Runtime%23IPendingWork%23Complete%2A> is a no-op.</span></span> <span data-ttu-id="06960-199">如果您继承并扩展了 <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> 类，则可以使用 <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System%23Workflow%23Runtime%23IPendingWork%23Complete%2A>，对实现所指示的 `items` 执行任何所需的操作。</span><span class="sxs-lookup"><span data-stu-id="06960-199">If you inherit from and extend the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> class, you may use <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System%23Workflow%23Runtime%23IPendingWork%23Complete%2A> to perform any actions required on `items` dictated by your implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.Runtime.IPendingWork.MustCommit">
      <MemberSignature Language="C#" Value="bool IPendingWork.MustCommit (System.Collections.ICollection items);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Workflow.Runtime.IPendingWork.MustCommit(class System.Collections.ICollection items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#MustCommit(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Function MustCommit (items As ICollection) As Boolean Implements IPendingWork.MustCommit" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Workflow.Runtime.IPendingWork.MustCommit(System::Collections::ICollection ^ items) = System::Workflow::Runtime::IPendingWork::MustCommit;" />
      <MemberSignature Language="F#" Value="abstract member System.Workflow.Runtime.IPendingWork.MustCommit : System.Collections.ICollection -&gt; bool&#xA;override this.System.Workflow.Runtime.IPendingWork.MustCommit : System.Collections.ICollection -&gt; bool" Usage="sqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.MustCommit items" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.Runtime.IPendingWork.MustCommit(System.Collections.ICollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="items"><span data-ttu-id="06960-200">要写入数据库的序列化状态对象的 <see cref="T:System.Collections.ICollection" />。</span><span class="sxs-lookup"><span data-stu-id="06960-200">An <see cref="T:System.Collections.ICollection" /> of serialized state objects to be written to the database.</span></span></param>
        <summary><span data-ttu-id="06960-201">返回一个值，该值指示序列化状态对象的集合是否应写入数据库。</span><span class="sxs-lookup"><span data-stu-id="06960-201">Returns a value that indicates whether the collection of serialized state objects should be written to the database.</span></span></summary>
        <returns><span data-ttu-id="06960-202"><see langword="true" /> 指示应提交该批次。</span><span class="sxs-lookup"><span data-stu-id="06960-202"><see langword="true" /> indicates that the batch should be committed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06960-203"><xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System%23Workflow%23Runtime%23IPendingWork%23MustCommit(System.Collections.ICollection)> 始终返回 `true`，它指示工作流运行时引擎对该批调用 <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System%23Workflow%23Runtime%23IPendingWork%23MustCommit(System.Collections.ICollection)>。</span><span class="sxs-lookup"><span data-stu-id="06960-203"><xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System%23Workflow%23Runtime%23IPendingWork%23MustCommit(System.Collections.ICollection)> always returns `true`, which instructs the workflow run-time engine to invoke <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System%23Workflow%23Runtime%23IPendingWork%23MustCommit(System.Collections.ICollection)> on the batch.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnloadOnIdle">
      <MemberSignature Language="C#" Value="protected internal override bool UnloadOnIdle (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool UnloadOnIdle(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function UnloadOnIdle (activity As Activity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool UnloadOnIdle(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="override this.UnloadOnIdle : System.Workflow.ComponentModel.Activity -&gt; bool" Usage="sqlWorkflowPersistenceService.UnloadOnIdle activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="06960-204">一个 <see cref="T:System.Workflow.ComponentModel.Activity" />，表示工作流实例的根活动。</span><span class="sxs-lookup"><span data-stu-id="06960-204">An <see cref="T:System.Workflow.ComponentModel.Activity" /> that represents the root activity of the workflow instance.</span></span></param>
        <summary><span data-ttu-id="06960-205">返回一个值，该值指示是否在工作流处于空闲状态时将其卸载。</span><span class="sxs-lookup"><span data-stu-id="06960-205">Returns a value that indicates whether the workflow is unloaded when it is in an idle state.</span></span></summary>
        <returns><span data-ttu-id="06960-206">如果在工作流处于空闲状态时要将其卸载，则为 <see langword="true" />，否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="06960-206"><see langword="true" /> if the workflow is unloaded when it is in an idle state; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnlockWorkflowInstanceState">
      <MemberSignature Language="C#" Value="protected internal override void UnlockWorkflowInstanceState (System.Workflow.ComponentModel.Activity rootActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void UnlockWorkflowInstanceState(class System.Workflow.ComponentModel.Activity rootActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub UnlockWorkflowInstanceState (rootActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void UnlockWorkflowInstanceState(System::Workflow::ComponentModel::Activity ^ rootActivity);" />
      <MemberSignature Language="F#" Value="override this.UnlockWorkflowInstanceState : System.Workflow.ComponentModel.Activity -&gt; unit" Usage="sqlWorkflowPersistenceService.UnlockWorkflowInstanceState rootActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="rootActivity"><span data-ttu-id="06960-207">一个 <see cref="T:System.Workflow.ComponentModel.Activity" />，表示工作流实例的根活动。</span><span class="sxs-lookup"><span data-stu-id="06960-207">An <see cref="T:System.Workflow.ComponentModel.Activity" /> that represents the root activity of the workflow instance.</span></span></param>
        <summary><span data-ttu-id="06960-208">解除对指定工作流实例状态访问的锁定。</span><span class="sxs-lookup"><span data-stu-id="06960-208">Unlocks access to the specified workflow instance state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06960-209">工作流运行时使用此方法，在数据存储区中对工作流实例状态进行解锁而不进行保留；如果运行时必须对此状态进行解锁而不进行保留（如在 <xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A> 的情况下），工作流运行时将调用此方法。</span><span class="sxs-lookup"><span data-stu-id="06960-209">This method is used by the workflow runtime to unlock a workflow instance state in the data store without persistence and is called by the workflow runtime if the runtime must unlock the state without persisting, for example, in the case of an <xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
