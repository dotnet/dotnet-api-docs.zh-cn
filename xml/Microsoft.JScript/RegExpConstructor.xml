<Type Name="RegExpConstructor" FullName="Microsoft.JScript.RegExpConstructor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d3ab3c0fb36812fa5f98e0789bb125595fc67289" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86583620" /></Metadata><TypeSignature Language="C#" Value="public sealed class RegExpConstructor : Microsoft.JScript.ScriptFunction" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RegExpConstructor extends Microsoft.JScript.ScriptFunction" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.RegExpConstructor" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RegExpConstructor&#xA;Inherits ScriptFunction" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegExpConstructor sealed : Microsoft::JScript::ScriptFunction" />
  <TypeSignature Language="F#" Value="type RegExpConstructor = class&#xA;    inherit ScriptFunction" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.JScript.ScriptFunction</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示一个基于原型的对象，该对象由构造函数定义。 此类属于内置对象模型类别。</summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
    <altmember cref="T:Microsoft.JScript.RegExpObject" />
    <altmember cref="T:Microsoft.JScript.RegExpPrototype" />
  </Docs>
  <Members>
    <Member MemberName="Construct">
      <MemberSignature Language="C#" Value="public object Construct (string pattern, bool ignoreCase, bool global, bool multiline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Construct(string pattern, bool ignoreCase, bool global, bool multiline) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.RegExpConstructor.Construct(System.String,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Construct (pattern As String, ignoreCase As Boolean, global As Boolean, multiline As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Construct(System::String ^ pattern, bool ignoreCase, bool global, bool multiline);" />
      <MemberSignature Language="F#" Value="override this.Construct : string * bool * bool * bool -&gt; obj" Usage="regExpConstructor.Construct (pattern, ignoreCase, global, multiline)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="F#" Value="member this.Construct : string * bool * bool * bool -&gt; obj" Usage="regExpConstructor.Construct (pattern, ignoreCase, global, multiline)" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="global" Type="System.Boolean" />
        <Parameter Name="multiline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pattern">要匹配的正则表达式模式。</param>
        <param name="ignoreCase">如果使用不区分大小写的匹配，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="global">如果使用全局匹配，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="multiline">如果使用多行匹配，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>为指定正则表达式模式和标志创建一个新 <see cref="T:Microsoft.JScript.RegExpObject" /> 对象。</summary>
        <returns>一个新 <see cref="T:Microsoft.JScript.RegExpObject" /> 对象。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.RegExpPrototype" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.RegExpObject CreateInstance (params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.JScript.RegExpObject CreateInstance(object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.RegExpConstructor.CreateInstance(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (ParamArray args As Object()) As RegExpObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::JScript::RegExpObject ^ CreateInstance(... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="override this.CreateInstance : obj[] -&gt; Microsoft.JScript.RegExpObject" Usage="regExpConstructor.CreateInstance args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.JScript.JSFunction(Microsoft.JScript.JSFunctionAttributeEnum.HasVarArgs)]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.JScript.JSFunction(Microsoft.JScript.JSFunctionAttributeEnum.HasVarArgs)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.RegExpObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-1.1">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="args">要传递给构造函数的实参。</param>
        <summary>创建基于原型的对象的实例，在指定的参数中传递。</summary>
        <returns>对象的实例。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.RegExpPrototype" />
      </Docs>
    </Member>
    <Member MemberName="index">
      <MemberSignature Language="C#" Value="public object index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object index" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JScript.RegExpConstructor.index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property index As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ index { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.index : obj" Usage="Microsoft.JScript.RegExpConstructor.index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在前移索引之前获取最后一个成功匹配的索引。</summary>
        <value>最后一个成功匹配（如果有）的索引。</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.RegExpObject" />
        <altmember cref="T:Microsoft.JScript.RegExpPrototype" />
      </Docs>
    </Member>
    <Member MemberName="input">
      <MemberSignature Language="C#" Value="public object input { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object input" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JScript.RegExpConstructor.input" />
      <MemberSignature Language="VB.NET" Value="Public Property input As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ input { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.input : obj with get, set" Usage="Microsoft.JScript.RegExpConstructor.input" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于正则表达式搜索的输入字符串。</summary>
        <value>用于正则表达式搜索的输入字符串。</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.RegExpObject" />
        <altmember cref="T:Microsoft.JScript.RegExpPrototype" />
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.RegExpObject Invoke (params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.JScript.RegExpObject Invoke(object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.RegExpConstructor.Invoke(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (ParamArray args As Object()) As RegExpObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::JScript::RegExpObject ^ Invoke(... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="override this.Invoke : obj[] -&gt; Microsoft.JScript.RegExpObject" Usage="regExpConstructor.Invoke args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.JScript.JSFunction(Microsoft.JScript.JSFunctionAttributeEnum.HasVarArgs)]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.JScript.JSFunction(Microsoft.JScript.JSFunctionAttributeEnum.HasVarArgs)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.RegExpObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-1.1">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="args">要传递给构造函数的实参。</param>
        <summary>创建基于原型的对象的实例，在指定的参数中传递。</summary>
        <returns>对象的实例。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.RegExpObject" />
        <altmember cref="T:Microsoft.JScript.RegExpPrototype" />
      </Docs>
    </Member>
    <Member MemberName="lastIndex">
      <MemberSignature Language="C#" Value="public object lastIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object lastIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JScript.RegExpConstructor.lastIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property lastIndex As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ lastIndex { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.lastIndex : obj" Usage="Microsoft.JScript.RegExpConstructor.lastIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在前移索引之后获取最后一个成功匹配的索引。</summary>
        <value>最后一个成功匹配（如果有）的索引。</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.RegExpObject" />
        <altmember cref="T:Microsoft.JScript.RegExpPrototype" />
      </Docs>
    </Member>
    <Member MemberName="lastMatch">
      <MemberSignature Language="C#" Value="public object lastMatch { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object lastMatch" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JScript.RegExpConstructor.lastMatch" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property lastMatch As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ lastMatch { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.lastMatch : obj" Usage="Microsoft.JScript.RegExpConstructor.lastMatch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取最后一个成功匹配的字符串表示形式。</summary>
        <value>最后一个成功匹配（如果有）的字符串表示形式。</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.RegExpObject" />
        <altmember cref="T:Microsoft.JScript.RegExpPrototype" />
      </Docs>
    </Member>
    <Member MemberName="lastParen">
      <MemberSignature Language="C#" Value="public object lastParen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object lastParen" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JScript.RegExpConstructor.lastParen" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property lastParen As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ lastParen { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.lastParen : obj" Usage="Microsoft.JScript.RegExpConstructor.lastParen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>从最后一个匹配的 <see cref="T:System.Text.RegularExpressions.Group" /> 中获取最后一个 <see cref="P:System.Text.RegularExpressions.Match.Groups" />。</summary>
        <value>最后一个组（如果有）的字符串表示形式。</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.RegExpObject" />
        <altmember cref="T:Microsoft.JScript.RegExpPrototype" />
      </Docs>
    </Member>
    <Member MemberName="leftContext">
      <MemberSignature Language="C#" Value="public object leftContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object leftContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JScript.RegExpConstructor.leftContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property leftContext As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ leftContext { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.leftContext : obj" Usage="Microsoft.JScript.RegExpConstructor.leftContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取输入字符串的子字符串（介于输入开头和最后一个成功匹配的开头之间）。</summary>
        <value>输入字符串（如果有）的子字符串。</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.RegExpObject" />
        <altmember cref="T:Microsoft.JScript.RegExpPrototype" />
      </Docs>
    </Member>
    <Member MemberName="rightContext">
      <MemberSignature Language="C#" Value="public object rightContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object rightContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JScript.RegExpConstructor.rightContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property rightContext As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ rightContext { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.rightContext : obj" Usage="Microsoft.JScript.RegExpConstructor.rightContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取输入字符串的子字符串（介于最后一个成功匹配的开头和输入结尾之间）。</summary>
        <value>输入字符串（如果有）的子字符串。</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.RegExpObject" />
        <altmember cref="T:Microsoft.JScript.RegExpPrototype" />
      </Docs>
    </Member>
  </Members>
</Type>
