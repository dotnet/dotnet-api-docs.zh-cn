<Type Name="IDebugVsaScriptCodeItem" FullName="Microsoft.JScript.IDebugVsaScriptCodeItem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7f7e3b17c2e8e1ccab9d1e0874138a06f22ec1e7" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86671071" /></Metadata><TypeSignature Language="C#" Value="public interface IDebugVsaScriptCodeItem" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDebugVsaScriptCodeItem" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.IDebugVsaScriptCodeItem" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDebugVsaScriptCodeItem" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDebugVsaScriptCodeItem" />
  <TypeSignature Language="F#" Value="type IDebugVsaScriptCodeItem = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.Guid("6DFE759A-CB8B-4ca0-A973-1D04E0BF0B53")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.Guid("6DFE759A-CB8B-4ca0-A973-1D04E0BF0B53")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6d41e-101">定义用于计算表达式和分析字符串的方法。</span><span class="sxs-lookup"><span data-stu-id="6d41e-101">Defines methods that evaluate expressions and parse strings.</span></span> <span data-ttu-id="6d41e-102">此接口通常由一个对象实现，该对象表示代码块并通常由调试器调用。</span><span class="sxs-lookup"><span data-stu-id="6d41e-102">This interface is typically implemented by an object that represents a code block, and it is typically called by a debugger.</span></span> <span data-ttu-id="6d41e-103">此接口提供 IActiveScript 宿主需要的额外功能。</span><span class="sxs-lookup"><span data-stu-id="6d41e-103">This interface provides extra functionality that is needed by an IActiveScript host.</span></span></summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public object Evaluate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate" />
      <MemberSignature Language="VB.NET" Value="Public Function Evaluate () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Evaluate();" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : unit -&gt; obj" Usage="iDebugVsaScriptCodeItem.Evaluate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6d41e-104">在类中实现时，计算由代码项表示的块、表达式或语句，并返回值。</span><span class="sxs-lookup"><span data-stu-id="6d41e-104">When implemented in a class, evaluates the block, expression, or statement represented by the code item and returns the value.</span></span> <span data-ttu-id="6d41e-105">它通常由调试器调用，满足其计算表达式（例如在“监视”窗口中）的需要。</span><span class="sxs-lookup"><span data-stu-id="6d41e-105">It is typically called by a debugger that needs to evaluate an expression (in a Watch window, for example).</span></span> <span data-ttu-id="6d41e-106">对于表达式来说，值是表达式的结果。</span><span class="sxs-lookup"><span data-stu-id="6d41e-106">For expressions, the value is the result of the expression.</span></span> <span data-ttu-id="6d41e-107">对于块和语句，结果表达式是由块或语句计算的最后一个表达式。</span><span class="sxs-lookup"><span data-stu-id="6d41e-107">For blocks and statements, the resulting expression is the last expression calculated by the block or statement.</span></span></summary>
        <returns><span data-ttu-id="6d41e-108">一个值，该值表示语句、表达式或块的计算。</span><span class="sxs-lookup"><span data-stu-id="6d41e-108">A value that represents the evaluation of the statement, expression, or block.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d41e-109">请注意，此 <xref:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate%2A> 方法在功能上与 <xref:Microsoft.JScript.IVsaScriptCodeItem.Execute%2A> 方法相同。</span><span class="sxs-lookup"><span data-stu-id="6d41e-109">Note that the <xref:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate%2A> method is functionally identical to the <xref:Microsoft.JScript.IVsaScriptCodeItem.Execute%2A> method.</span></span> <span data-ttu-id="6d41e-110">只有封送特性不同。</span><span class="sxs-lookup"><span data-stu-id="6d41e-110">Only the marshaling attributes differ.</span></span> <span data-ttu-id="6d41e-111">此版本的接口允许非托管调试器获取返回值作为 `IUnknown` 指针，而不是 `VARIANT` 。</span><span class="sxs-lookup"><span data-stu-id="6d41e-111">This version of the interface allows an unmanaged debugger to obtain the return value as an `IUnknown` pointer rather than a `VARIANT`.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ParseNamedBreakPoint">
      <MemberSignature Language="C#" Value="public bool ParseNamedBreakPoint (string input, out string functionName, out int nargs, out string arguments, out string returnType, out ulong offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ParseNamedBreakPoint(string input, [out] string&amp; functionName, [out] int32&amp; nargs, [out] string&amp; arguments, [out] string&amp; returnType, [out] unsigned int64&amp; offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ParseNamedBreakPoint (input As String, ByRef functionName As String, ByRef nargs As Integer, ByRef arguments As String, ByRef returnType As String, ByRef offset As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ParseNamedBreakPoint(System::String ^ input, [Runtime::InteropServices::Out] System::String ^ % functionName, [Runtime::InteropServices::Out] int % nargs, [Runtime::InteropServices::Out] System::String ^ % arguments, [Runtime::InteropServices::Out] System::String ^ % returnType, [Runtime::InteropServices::Out] System::UInt64 % offset);" />
      <MemberSignature Language="F#" Value="abstract member ParseNamedBreakPoint : string * string * int * string * string * uint64 -&gt; bool" Usage="iDebugVsaScriptCodeItem.ParseNamedBreakPoint (input, functionName, nargs, arguments, returnType, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="functionName" Type="System.String" RefType="out" />
        <Parameter Name="nargs" Type="System.Int32" RefType="out" />
        <Parameter Name="arguments" Type="System.String" RefType="out" />
        <Parameter Name="returnType" Type="System.String" RefType="out" />
        <Parameter Name="offset" Type="System.UInt64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="6d41e-112">一个格式良好的命名断点字符串，它提供函数、可选参数列表以及可选 IL 偏移量。</span><span class="sxs-lookup"><span data-stu-id="6d41e-112">A well-formed named breakpoint string giving a function, optional argument list, and optional IL offset.</span></span></param>
        <param name="functionName"><span data-ttu-id="6d41e-113">输出参数，它返回从输入字符串分析出的函数名称，或在输入参数格式不良时返回空字符串。</span><span class="sxs-lookup"><span data-stu-id="6d41e-113">Out parameter returning the name of the function parsed out of the input string, or the empty string if the input string is not well formed.</span></span></param>
        <param name="nargs"><span data-ttu-id="6d41e-114">输出参数，它返回可选参数列表中的参数数目。</span><span class="sxs-lookup"><span data-stu-id="6d41e-114">Out parameter returning the number of arguments in the optional argument list.</span></span> <span data-ttu-id="6d41e-115">如果没有参数列表或如果字符串格式不良，则返回零。</span><span class="sxs-lookup"><span data-stu-id="6d41e-115">Returns zero if there is no arguments list or if the string is not well formed.</span></span></param>
        <param name="arguments"><span data-ttu-id="6d41e-116">输出参数，它返回参数列表中所有参数的类型名称的列表（用空格分隔），或在缺少参数列表或输入字符串格式不良时返回空字符串。</span><span class="sxs-lookup"><span data-stu-id="6d41e-116">Out parameter returning a space-separated list of the names of the types of all the arguments in the arguments list, or an empty string if the arguments list was missing or the input string was not well formed.</span></span></param>
        <param name="returnType"><span data-ttu-id="6d41e-117">输出参数，它返回一个字符串（该字符串包含在输入中命名的函数的返回类型），或在缺少返回类型或输入字符串格式不良好时返回空字符串。</span><span class="sxs-lookup"><span data-stu-id="6d41e-117">Out parameter returning a string containing the return type of the function named in the input, or the empty string if the return type was missing or the input string was not well formed.</span></span></param>
        <param name="offset"><span data-ttu-id="6d41e-118">无符号长整型数，它给出输入字符串的 IL 偏移量，或在没有 IL 偏移量或字符串格式不良时给出零。</span><span class="sxs-lookup"><span data-stu-id="6d41e-118">Unsigned long integer giving the IL offset from the input string, or zero if there was no IL offset or the string was not well formed.</span></span></param>
        <summary><span data-ttu-id="6d41e-119">在类中实现时，分析字符串并返回分析出的信息。</span><span class="sxs-lookup"><span data-stu-id="6d41e-119">When implemented in a class, parses strings and returns the parsed-out information.</span></span> <span data-ttu-id="6d41e-120">此方法通常由调试器调用，满足其分析有关断点的信息的需要，该断点表示为 <see langword="string" />。</span><span class="sxs-lookup"><span data-stu-id="6d41e-120">This method is typically called by a debugger that needs to parse information about a breakpoint that is represented as a <see langword="string" />.</span></span> <span data-ttu-id="6d41e-121">调试器中可能存在用户以 functionname-arguments-ILoffset\*\* 形式键入的断点。</span><span class="sxs-lookup"><span data-stu-id="6d41e-121">The debugger might have a breakpoint typed in by the user in the form *functionname-arguments-ILoffset*.</span></span> <span data-ttu-id="6d41e-122">已命名的断点字符串可具有复杂的格式，例如，<c>F.B(C.D[], int, arg : double ) : C.Abc + 123.</c></span><span class="sxs-lookup"><span data-stu-id="6d41e-122">A named breakpoint string can have a complex format, for example, <c>F.B(C.D[], int, arg : double ) : C.Abc + 123.</c></span></span> <span data-ttu-id="6d41e-123">参数列表是可选的，IL 偏移量也是这样。</span><span class="sxs-lookup"><span data-stu-id="6d41e-123">The parameter list is optional, as is the IL offset.</span></span></summary>
        <returns><span data-ttu-id="6d41e-124">如果成功地分析了命名的断点，则返回 <see langword="true" />；否则，返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d41e-124"><see langword="true" /> if the named breakpoint is successfully parsed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
