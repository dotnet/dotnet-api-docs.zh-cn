<Type Name="SocketsHttpHandler" FullName="System.Net.Http.SocketsHttpHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b3156be62226c345c9e64d36cfcce0a1c5e65e62" /><Meta Name="ms.sourcegitcommit" Value="13a6cb6fba7e05947f15d8d6cc802703ae9c21d5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/18/2020" /><Meta Name="ms.locfileid" Value="90794679" /></Metadata><TypeSignature Language="C#" Value="public sealed class SocketsHttpHandler : System.Net.Http.HttpMessageHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SocketsHttpHandler extends System.Net.Http.HttpMessageHandler" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.SocketsHttpHandler" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SocketsHttpHandler&#xA;Inherits HttpMessageHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class SocketsHttpHandler sealed : System::Net::Http::HttpMessageHandler" />
  <TypeSignature Language="F#" Value="type SocketsHttpHandler = class&#xA;    inherit HttpMessageHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Http.HttpMessageHandler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="28aaf-101">提供在 .NET Core 2.1 及更高版本中由 <see cref="T:System.Net.Http.HttpClient" /> 使用的默认消息处理程序。</span><span class="sxs-lookup"><span data-stu-id="28aaf-101">Provides the default message handler used by <see cref="T:System.Net.Http.HttpClient" /> in .NET Core 2.1 and later.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

<span data-ttu-id="28aaf-102">从 .NET Core 2.1 开始， `SocketsHttpHandler` 类提供由较高级别的 HTTP 网络类（如）使用的实现 <xref:System.Net.Http.HttpClient> 。</span><span class="sxs-lookup"><span data-stu-id="28aaf-102">Starting with .NET Core 2.1, the `SocketsHttpHandler` class provides the implementation used by higher-level HTTP networking classes such as <xref:System.Net.Http.HttpClient>.</span></span> <span data-ttu-id="28aaf-103">使用可 `SocketsHttpHandler` 提供多种优势：</span><span class="sxs-lookup"><span data-stu-id="28aaf-103">The use of `SocketsHttpHandler` offers a number of advantages:</span></span>

- <span data-ttu-id="28aaf-104">对照以前的实现，可以看到显著的性能改进。</span><span class="sxs-lookup"><span data-stu-id="28aaf-104">A significant performance improvement when compared with the previous implementation.</span></span>

- <span data-ttu-id="28aaf-105">消除了平台依赖项，从而简化了部署和服务。</span><span class="sxs-lookup"><span data-stu-id="28aaf-105">The elimination of platform dependencies, which simplifies deployment and servicing.</span></span> <span data-ttu-id="28aaf-106">例如， `libcurl` 不再依赖于适用于 macOS 的 .Net core 和适用于 Linux 的 .Net core。</span><span class="sxs-lookup"><span data-stu-id="28aaf-106">For example, `libcurl` is no longer a dependency on .NET Core for macOS and .NET Core for Linux.</span></span>

- <span data-ttu-id="28aaf-107">各种 .NET 平台的行为一致。</span><span class="sxs-lookup"><span data-stu-id="28aaf-107">Consistent behavior across all .NET platforms.</span></span>

<span data-ttu-id="28aaf-108">如果不需要此更改，可以通过多种方式将应用程序配置为使用较旧的 <xref:System.Net.Http.HttpClientHandler?displayProperty=nameWithType> 类：</span><span class="sxs-lookup"><span data-stu-id="28aaf-108">If this change is undesirable, you can configure your application to use the older <xref:System.Net.Http.HttpClientHandler?displayProperty=nameWithType> class instead in a number of ways:</span></span>

- <span data-ttu-id="28aaf-109">通过调用方法，如下所示 <xref:System.AppContext.SetSwitch%2A?displayProperty=nameWithType> ：</span><span class="sxs-lookup"><span data-stu-id="28aaf-109">By calling the <xref:System.AppContext.SetSwitch%2A?displayProperty=nameWithType> method as follows:</span></span>

   ```csharp
   AppContext.SetSwitch("System.Net.Http.UseSocketsHttpHandler", false);
   ```

   ```vb
   AppContext.SetSwitch("System.Net.Http.UseSocketsHttpHandler", False)
   ```
- <span data-ttu-id="28aaf-110">通过在 `System.Net.Http.UseSocketsHttpHandler` 配置文件的 *.netcore.runtimeconfig.js* 中定义开关：</span><span class="sxs-lookup"><span data-stu-id="28aaf-110">By defining the `System.Net.Http.UseSocketsHttpHandler` switch in the *.netcore.runtimeconfig.json* configuration file:</span></span>

  ```json
  "runtimeOptions": {
    "configProperties": {
        "System.Net.Http.UseSocketsHttpHandler": false
    }
  }
  ```

- <span data-ttu-id="28aaf-111">通过定义名为的环境变量 `DOTNET_SYSTEM_NET_HTTP_USESOCKETSHTTPHANDLER` 并将其设置为 `false` 或0。</span><span class="sxs-lookup"><span data-stu-id="28aaf-111">By defining an environment variable named `DOTNET_SYSTEM_NET_HTTP_USESOCKETSHTTPHANDLER` and setting it to either `false` or 0.</span></span>

         ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SocketsHttpHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.SocketsHttpHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SocketsHttpHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28aaf-112">创建 <see cref="T:System.Net.Http.SocketsHttpHandler" /> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="28aaf-112">Creates an instance of a <see cref="T:System.Net.Http.SocketsHttpHandler" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowAutoRedirect">
      <MemberSignature Language="C#" Value="public bool AllowAutoRedirect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowAutoRedirect" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.AllowAutoRedirect" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowAutoRedirect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowAutoRedirect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowAutoRedirect : bool with get, set" Usage="System.Net.Http.SocketsHttpHandler.AllowAutoRedirect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28aaf-113">获取或设置一个值，该值指示处理程序是否应跟随重定向响应。</span><span class="sxs-lookup"><span data-stu-id="28aaf-113">Gets or sets a value that indicates whether the handler should follow redirection responses.</span></span></summary>
        <value><span data-ttu-id="28aaf-114"><see langword="true" /> 如果处理程序应跟随重定向响应，则为;否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="28aaf-114"><see langword="true" /> if the handler should follow redirection responses; otherwise <see langword="false" />.</span></span> <span data-ttu-id="28aaf-115">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="28aaf-115">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="28aaf-116"><xref:System.Net.Http.SocketsHttpHandler.AllowAutoRedirect%2A> `true` 如果希望处理程序自动跟随 HTTP 重定向标头到资源的新位置，则设置为。</span><span class="sxs-lookup"><span data-stu-id="28aaf-116">Set <xref:System.Net.Http.SocketsHttpHandler.AllowAutoRedirect%2A> to `true` if you want the handler to automatically follow HTTP redirection headers to the new location of the resource.</span></span> <span data-ttu-id="28aaf-117">要遵循的重定向的最大数目由 <xref:System.Net.Http.SocketsHttpHandler.MaxAutomaticRedirections%2A> 属性设置。</span><span class="sxs-lookup"><span data-stu-id="28aaf-117">The maximum number of redirections to follow is set by the <xref:System.Net.Http.SocketsHttpHandler.MaxAutomaticRedirections%2A> property.</span></span>

 <span data-ttu-id="28aaf-118">如果 <xref:System.Net.Http.SocketsHttpHandler.AllowAutoRedirect%2A> 设置为，则将 `false` http 状态代码从300到399的所有 http 响应返回到应用程序。</span><span class="sxs-lookup"><span data-stu-id="28aaf-118">If <xref:System.Net.Http.SocketsHttpHandler.AllowAutoRedirect%2A> is set to `false`, all HTTP responses with an HTTP status code from 300 to 399 are returned to the application.</span></span>

 <span data-ttu-id="28aaf-119">在自动重定向时清除了 Authorization 标头，并且处理程序会自动尝试对重定向的位置重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="28aaf-119">The Authorization header is cleared on auto-redirects and the handler automatically tries to re-authenticate to the redirected location.</span></span> <span data-ttu-id="28aaf-120">在实践中，这意味着应用程序无法将自定义身份验证信息放入授权标头（如果可能遇到重定向）。</span><span class="sxs-lookup"><span data-stu-id="28aaf-120">In practice, this means that an application can't put custom authentication information into the Authorization header if it is possible to encounter redirection.</span></span> <span data-ttu-id="28aaf-121">相反，应用程序必须实现并注册自定义身份验证模块。</span><span class="sxs-lookup"><span data-stu-id="28aaf-121">Instead, the application must implement and register a custom authentication module.</span></span>

> [!NOTE]
>  <span data-ttu-id="28aaf-122">即使将设置为，处理程序也不会跟随从 HTTPS 到 HTTP 的重定向 <xref:System.Net.Http.SocketsHttpHandler.AllowAutoRedirect%2A> `true` 。</span><span class="sxs-lookup"><span data-stu-id="28aaf-122">The handler never follows a redirection from HTTPS to HTTP even if <xref:System.Net.Http.SocketsHttpHandler.AllowAutoRedirect%2A> is set to `true`.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticDecompression">
      <MemberSignature Language="C#" Value="public System.Net.DecompressionMethods AutomaticDecompression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.DecompressionMethods AutomaticDecompression" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.AutomaticDecompression" />
      <MemberSignature Language="VB.NET" Value="Public Property AutomaticDecompression As DecompressionMethods" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::DecompressionMethods AutomaticDecompression { System::Net::DecompressionMethods get(); void set(System::Net::DecompressionMethods value); };" />
      <MemberSignature Language="F#" Value="member this.AutomaticDecompression : System.Net.DecompressionMethods with get, set" Usage="System.Net.Http.SocketsHttpHandler.AutomaticDecompression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.DecompressionMethods</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28aaf-123">获取或设置处理程序用于自动解压缩 HTTP 内容响应的解压缩方法类型。</span><span class="sxs-lookup"><span data-stu-id="28aaf-123">Gets or sets the type of decompression method used by the handler for automatic decompression of the HTTP content response.</span></span></summary>
        <value><span data-ttu-id="28aaf-124">处理程序用于自动解压缩 HTTP 内容响应的解压缩方法类型。</span><span class="sxs-lookup"><span data-stu-id="28aaf-124">The type of decompression method used by the handler for automatic decompression of the HTTP content response.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectCallback">
      <MemberSignature Language="C#" Value="public Func&lt;System.Net.Http.SocketsHttpConnectionContext,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask&lt;System.IO.Stream&gt;&gt;? ConnectCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`3&lt;class System.Net.Http.SocketsHttpConnectionContext, valuetype System.Threading.CancellationToken, valuetype System.Threading.Tasks.ValueTask`1&lt;class System.IO.Stream&gt;&gt; ConnectCallback" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.ConnectCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectCallback As Func(Of SocketsHttpConnectionContext, CancellationToken, ValueTask(Of Stream))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Net::Http::SocketsHttpConnectionContext ^, System::Threading::CancellationToken, System::Threading::Tasks::ValueTask&lt;System::IO::Stream ^&gt;&gt; ^ ConnectCallback { Func&lt;System::Net::Http::SocketsHttpConnectionContext ^, System::Threading::CancellationToken, System::Threading::Tasks::ValueTask&lt;System::IO::Stream ^&gt;&gt; ^ get(); void set(Func&lt;System::Net::Http::SocketsHttpConnectionContext ^, System::Threading::CancellationToken, System::Threading::Tasks::ValueTask&lt;System::IO::Stream ^&gt;&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectCallback : Func&lt;System.Net.Http.SocketsHttpConnectionContext, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask&lt;System.IO.Stream&gt;&gt; with get, set" Usage="System.Net.Http.SocketsHttpHandler.ConnectCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Net.Http.SocketsHttpConnectionContext,System.Threading.CancellationToken,System.Threading.Tasks.ValueTask&lt;System.IO.Stream&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan ConnectTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ConnectTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.ConnectTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ConnectTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectTimeout : TimeSpan with get, set" Usage="System.Net.Http.SocketsHttpHandler.ConnectTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28aaf-125">获取或设置连接建立超时前等待的时间跨度。</span><span class="sxs-lookup"><span data-stu-id="28aaf-125">Gets or sets the timespan to wait before the connection establishing times out.</span></span></summary>
        <value><span data-ttu-id="28aaf-126">连接建立超时前等待的时间跨度。默认值为 <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" /> 。</span><span class="sxs-lookup"><span data-stu-id="28aaf-126">The timespan to wait before the connection establishing times out. The default value is <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieContainer">
      <MemberSignature Language="C#" Value="public System.Net.CookieContainer? CookieContainer { get; set; }" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.CookieContainer CookieContainer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.CookieContainer" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieContainer As CookieContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::CookieContainer ^ CookieContainer { System::Net::CookieContainer ^ get(); void set(System::Net::CookieContainer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CookieContainer : System.Net.CookieContainer with get, set" Usage="System.Net.Http.SocketsHttpHandler.CookieContainer" />
      <MemberSignature Language="C#" Value="public System.Net.CookieContainer CookieContainer { get; set; }" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.CookieContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28aaf-127">获取或设置托管 cookie 容器对象。</span><span class="sxs-lookup"><span data-stu-id="28aaf-127">Gets or sets the managed cookie container object.</span></span></summary>
        <value><span data-ttu-id="28aaf-128">托管 cookie 容器对象。</span><span class="sxs-lookup"><span data-stu-id="28aaf-128">The managed cookie container object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Net.Http.SocketsHttpHandler.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28aaf-129">获取或设置此处理程序使用的身份验证信息。</span><span class="sxs-lookup"><span data-stu-id="28aaf-129">Gets or sets authentication information used by this handler.</span></span></summary>
        <value><span data-ttu-id="28aaf-130">与该处理程序关联的身份验证凭据。</span><span class="sxs-lookup"><span data-stu-id="28aaf-130">The authentication credentials associated with the handler.</span></span> <span data-ttu-id="28aaf-131">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="28aaf-131">The default value is <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultProxyCredentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials DefaultProxyCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials DefaultProxyCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.DefaultProxyCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultProxyCredentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentials ^ DefaultProxyCredentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultProxyCredentials : System.Net.ICredentials with get, set" Usage="System.Net.Http.SocketsHttpHandler.DefaultProxyCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28aaf-132">使用默认（系统）代理时，获取或设置用于提交到默认代理服务器进行身份验证的凭据。</span><span class="sxs-lookup"><span data-stu-id="28aaf-132">When the default (system) proxy is used, gets or sets the credentials used to submit to the default proxy server for authentication.</span></span></summary>
        <value><span data-ttu-id="28aaf-133">用于向身份验证代理验证用户身份的凭据。</span><span class="sxs-lookup"><span data-stu-id="28aaf-133">The credentials used to authenticate the user to an authenticating proxy.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="28aaf-134">只有在 <xref:System.Net.Http.SocketsHttpHandler.UseProxy> 设置为 `true` 且 <xref:System.Net.Http.SocketsHttpHandler.Proxy> 设置为 `null` 时才使用默认代理。</span><span class="sxs-lookup"><span data-stu-id="28aaf-134">The default proxy is used only when <xref:System.Net.Http.SocketsHttpHandler.UseProxy> is set to `true` and <xref:System.Net.Http.SocketsHttpHandler.Proxy> is set to `null`.</span></span>

         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.SocketsHttpHandler.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="socketsHttpHandler.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableMultipleHttp2Connections">
      <MemberSignature Language="C#" Value="public bool EnableMultipleHttp2Connections { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableMultipleHttp2Connections" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.EnableMultipleHttp2Connections" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableMultipleHttp2Connections As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableMultipleHttp2Connections { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableMultipleHttp2Connections : bool with get, set" Usage="System.Net.Http.SocketsHttpHandler.EnableMultipleHttp2Connections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expect100ContinueTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan Expect100ContinueTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Expect100ContinueTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.Expect100ContinueTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Expect100ContinueTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Expect100ContinueTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.Expect100ContinueTimeout : TimeSpan with get, set" Usage="System.Net.Http.SocketsHttpHandler.Expect100ContinueTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28aaf-135">获取或设置服务器 HTTP 100 Continue 响应的超时值。</span><span class="sxs-lookup"><span data-stu-id="28aaf-135">Gets or sets the time-out value for server HTTP 100 Continue response.</span></span></summary>
        <value><span data-ttu-id="28aaf-136">等待 HTTP 100 的时间跨度继续。</span><span class="sxs-lookup"><span data-stu-id="28aaf-136">The timespan to wait for the HTTP 100 Continue.</span></span> <span data-ttu-id="28aaf-137">默认值为 1 秒钟。</span><span class="sxs-lookup"><span data-stu-id="28aaf-137">The default value is 1 second.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="28aaf-138">如果请求包含 `Expect: 100-continue` 标头，则服务器应在 `100 Continue` 客户端发送正文之前响应 HTTP 状态。</span><span class="sxs-lookup"><span data-stu-id="28aaf-138">When request contain `Expect: 100-continue` header the server should respond HTTP status `100 Continue` before the client sends the body.</span></span> <span data-ttu-id="28aaf-139"><xref:System.Net.Http.SocketsHttpHandler.Expect100ContinueTimeout%2A?displayProperty=nameWithType> 定义服务器响应的超时时间 `100 Continue` 。</span><span class="sxs-lookup"><span data-stu-id="28aaf-139"><xref:System.Net.Http.SocketsHttpHandler.Expect100ContinueTimeout%2A?displayProperty=nameWithType> define the timeout for the `100 Continue` server response.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupported">
      <MemberSignature Language="C#" Value="public static bool IsSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsSupported" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.IsSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsSupported { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSupported : bool" Usage="System.Net.Http.SocketsHttpHandler.IsSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAlivePingDelay">
      <MemberSignature Language="C#" Value="public TimeSpan KeepAlivePingDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan KeepAlivePingDelay" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.KeepAlivePingDelay" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepAlivePingDelay As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan KeepAlivePingDelay { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.KeepAlivePingDelay : TimeSpan with get, set" Usage="System.Net.Http.SocketsHttpHandler.KeepAlivePingDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAlivePingPolicy">
      <MemberSignature Language="C#" Value="public System.Net.Http.HttpKeepAlivePingPolicy KeepAlivePingPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Http.HttpKeepAlivePingPolicy KeepAlivePingPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.KeepAlivePingPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepAlivePingPolicy As HttpKeepAlivePingPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Http::HttpKeepAlivePingPolicy KeepAlivePingPolicy { System::Net::Http::HttpKeepAlivePingPolicy get(); void set(System::Net::Http::HttpKeepAlivePingPolicy value); };" />
      <MemberSignature Language="F#" Value="member this.KeepAlivePingPolicy : System.Net.Http.HttpKeepAlivePingPolicy with get, set" Usage="System.Net.Http.SocketsHttpHandler.KeepAlivePingPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HttpKeepAlivePingPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAlivePingTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan KeepAlivePingTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan KeepAlivePingTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.KeepAlivePingTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepAlivePingTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan KeepAlivePingTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.KeepAlivePingTimeout : TimeSpan with get, set" Usage="System.Net.Http.SocketsHttpHandler.KeepAlivePingTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxAutomaticRedirections">
      <MemberSignature Language="C#" Value="public int MaxAutomaticRedirections { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxAutomaticRedirections" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.MaxAutomaticRedirections" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxAutomaticRedirections As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxAutomaticRedirections { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxAutomaticRedirections : int with get, set" Usage="System.Net.Http.SocketsHttpHandler.MaxAutomaticRedirections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28aaf-140">获取或设置允许的最大 HTTP 重定向数。</span><span class="sxs-lookup"><span data-stu-id="28aaf-140">Gets or sets the maximum number of allowed HTTP redirects.</span></span></summary>
        <value><span data-ttu-id="28aaf-141">允许的最大 HTTP 重定向数。</span><span class="sxs-lookup"><span data-stu-id="28aaf-141">The maximum number of allowed HTTP redirects.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxConnectionsPerServer">
      <MemberSignature Language="C#" Value="public int MaxConnectionsPerServer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxConnectionsPerServer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.MaxConnectionsPerServer" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxConnectionsPerServer As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxConnectionsPerServer { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxConnectionsPerServer : int with get, set" Usage="System.Net.Http.SocketsHttpHandler.MaxConnectionsPerServer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28aaf-142">获取或设置允许向单个服务器连接的最大并行 TCP 连接数。</span><span class="sxs-lookup"><span data-stu-id="28aaf-142">Gets or sets the maximum number of simultaneous TCP connections allowed to a single server.</span></span></summary>
        <value><span data-ttu-id="28aaf-143">单个服务器允许的最大并发 TCP 连接数。</span><span class="sxs-lookup"><span data-stu-id="28aaf-143">The maximum number of simultaneous TCP connections allowed to a single server.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxResponseDrainSize">
      <MemberSignature Language="C#" Value="public int MaxResponseDrainSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxResponseDrainSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.MaxResponseDrainSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxResponseDrainSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxResponseDrainSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxResponseDrainSize : int with get, set" Usage="System.Net.Http.SocketsHttpHandler.MaxResponseDrainSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28aaf-144">获取或设置可从响应中排出的最大数据量（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="28aaf-144">Gets or sets the maximum amount of data that can be drained from responses in bytes.</span></span></summary>
        <value><span data-ttu-id="28aaf-145">可从响应中排出的最大数据量（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="28aaf-145">The maximum amount of data that can be drained from responses in bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="28aaf-146">在完全读取内容之前取消请求或释放响应时发生排出。</span><span class="sxs-lookup"><span data-stu-id="28aaf-146">Draining occurs when a request is cancelled or a response is disposed prior to fully reading the content.</span></span> <span data-ttu-id="28aaf-147">如果已排出的字节数超过此量，则将关闭连接而不是重复使用连接。</span><span class="sxs-lookup"><span data-stu-id="28aaf-147">If the number of bytes drained exceeds this amount, the connection will be closed rather than reused.</span></span>

         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxResponseHeadersLength">
      <MemberSignature Language="C#" Value="public int MaxResponseHeadersLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxResponseHeadersLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.MaxResponseHeadersLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxResponseHeadersLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxResponseHeadersLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxResponseHeadersLength : int with get, set" Usage="System.Net.Http.SocketsHttpHandler.MaxResponseHeadersLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28aaf-148">获取或设置响应标头的最大长度，以千字节（1024 字节）为单位。</span><span class="sxs-lookup"><span data-stu-id="28aaf-148">Gets or sets the maximum length, in kilobytes (1024 bytes), of the response headers.</span></span></summary>
        <value><span data-ttu-id="28aaf-149">服务器响应中的标头部分的最大大小（kb）。</span><span class="sxs-lookup"><span data-stu-id="28aaf-149">The maximum size of the header portion from the server response, in kilobytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="28aaf-150">例如，如果值为64，则允许的最大响应标头长度为65536个字节。</span><span class="sxs-lookup"><span data-stu-id="28aaf-150">For example, if the value is 64, then 65,536 bytes are allowed for the maximum response headers' length.</span></span>

         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PooledConnectionIdleTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan PooledConnectionIdleTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan PooledConnectionIdleTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.PooledConnectionIdleTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property PooledConnectionIdleTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan PooledConnectionIdleTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.PooledConnectionIdleTimeout : TimeSpan with get, set" Usage="System.Net.Http.SocketsHttpHandler.PooledConnectionIdleTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28aaf-151">获取或设置池中的连接处于空闲状态多长时间后才能视为可重复使用。</span><span class="sxs-lookup"><span data-stu-id="28aaf-151">Gets or sets how long a connection can be idle in the pool to be considered reusable.</span></span></summary>
        <value><span data-ttu-id="28aaf-152">池中连接的最长空闲时间。</span><span class="sxs-lookup"><span data-stu-id="28aaf-152">The maximum idle time for a connection in the pool.</span></span> <span data-ttu-id="28aaf-153">此属性的默认值为2分钟。</span><span class="sxs-lookup"><span data-stu-id="28aaf-153">The default value for this property is 2 minutes.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="28aaf-154">指定的值小于 <see cref="F:System.TimeSpan.Zero" /> 或等于 <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="28aaf-154">The value specified is less than <see cref="F:System.TimeSpan.Zero" /> or is equal to <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PooledConnectionLifetime">
      <MemberSignature Language="C#" Value="public TimeSpan PooledConnectionLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan PooledConnectionLifetime" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.PooledConnectionLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Property PooledConnectionLifetime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan PooledConnectionLifetime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.PooledConnectionLifetime : TimeSpan with get, set" Usage="System.Net.Http.SocketsHttpHandler.PooledConnectionLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28aaf-155">获取或设置池中的连接持续多长时间后才能视为可重复使用。</span><span class="sxs-lookup"><span data-stu-id="28aaf-155">Gets or sets how long a connection can be the pool to be considered reusable.</span></span></summary>
        <value><span data-ttu-id="28aaf-156">连接在池中的最长时间。</span><span class="sxs-lookup"><span data-stu-id="28aaf-156">The maximum time for a connection to be in the pool.</span></span> <span data-ttu-id="28aaf-157">此属性的默认值为 <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="28aaf-157">The default value for this property is <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="28aaf-158">此属性定义 regardles 连接处于空闲或活动状态时，池中的最大连接生存期。</span><span class="sxs-lookup"><span data-stu-id="28aaf-158">This property define maximal connection lifetime in the pool regardles the connection is idle or active.</span></span> <span data-ttu-id="28aaf-159">定期重新建立连接以反映 DNS 或其他网络更改。</span><span class="sxs-lookup"><span data-stu-id="28aaf-159">The connection is reestablished periodically to reflect the DNS or other network changes.</span></span>
 
 <span data-ttu-id="28aaf-160">如果连接端点不是 Doamin 名称，而是 IP 地址，则值可以为 <xref:System.Threading.Timeout.InfiniteTimeSpan> 。</span><span class="sxs-lookup"><span data-stu-id="28aaf-160">If the connection endpoint is not the Doamin name but the IP address, the value can be <xref:System.Threading.Timeout.InfiniteTimeSpan>.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="28aaf-161">指定的值小于 <see cref="F:System.TimeSpan.Zero" /> 或等于 <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="28aaf-161">The value specified is less than <see cref="F:System.TimeSpan.Zero" /> or is equal to <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public bool PreAuthenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.PreAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public Property PreAuthenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreAuthenticate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreAuthenticate : bool with get, set" Usage="System.Net.Http.SocketsHttpHandler.PreAuthenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28aaf-162">获取或设置一个值，该值指示处理程序是否随请求发送授权标头。</span><span class="sxs-lookup"><span data-stu-id="28aaf-162">Gets or sets a value that indicates whether the handler sends an Authorization header with the request.</span></span></summary>
        <value><span data-ttu-id="28aaf-163"><see langword="true" /> 如果处理程序使用请求发送 Authorization 标头，则为; 否则为。否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="28aaf-163"><see langword="true" /> if the handler sends an Authorization header with the request; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt;? Properties { get; }" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ Properties { System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="System.Net.Http.SocketsHttpHandler.Properties" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; Properties { get; }" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IWebProxy ^ Proxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Proxy : System.Net.IWebProxy with get, set" Usage="System.Net.Http.SocketsHttpHandler.Proxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28aaf-164">当  <see cref="P:System.Net.Http.SocketsHttpHandler.UseProxy" /> 属性为 <see langword="true" /> 时，获取或设置自定义代理。</span><span class="sxs-lookup"><span data-stu-id="28aaf-164">Gets or sets the custom proxy when the <see cref="P:System.Net.Http.SocketsHttpHandler.UseProxy" /> property is <see langword="true" />.</span></span></summary>
        <value><span data-ttu-id="28aaf-165">自定义代理。</span><span class="sxs-lookup"><span data-stu-id="28aaf-165">The custom proxy.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestHeaderEncodingSelector">
      <MemberSignature Language="C#" Value="public System.Net.Http.HeaderEncodingSelector&lt;System.Net.Http.HttpRequestMessage&gt;? RequestHeaderEncodingSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Http.HeaderEncodingSelector`1&lt;class System.Net.Http.HttpRequestMessage&gt; RequestHeaderEncodingSelector" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.RequestHeaderEncodingSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestHeaderEncodingSelector As HeaderEncodingSelector(Of HttpRequestMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Http::HeaderEncodingSelector&lt;System::Net::Http::HttpRequestMessage ^&gt; ^ RequestHeaderEncodingSelector { System::Net::Http::HeaderEncodingSelector&lt;System::Net::Http::HttpRequestMessage ^&gt; ^ get(); void set(System::Net::Http::HeaderEncodingSelector&lt;System::Net::Http::HttpRequestMessage ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestHeaderEncodingSelector : System.Net.Http.HeaderEncodingSelector&lt;System.Net.Http.HttpRequestMessage&gt; with get, set" Usage="System.Net.Http.SocketsHttpHandler.RequestHeaderEncodingSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HeaderEncodingSelector&lt;System.Net.Http.HttpRequestMessage&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseDrainTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan ResponseDrainTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ResponseDrainTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.ResponseDrainTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseDrainTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ResponseDrainTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ResponseDrainTimeout : TimeSpan with get, set" Usage="System.Net.Http.SocketsHttpHandler.ResponseDrainTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28aaf-166">获取或设置等待数据从响应中排出的时间跨度。</span><span class="sxs-lookup"><span data-stu-id="28aaf-166">Gets or sets the timespan to wait for data to be drained from responses.</span></span></summary>
        <value><span data-ttu-id="28aaf-167">等待数据从响应中排出的时间跨度。</span><span class="sxs-lookup"><span data-stu-id="28aaf-167">The timespan to wait for data to be drained from responses.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="28aaf-168">在完全读取内容之前取消请求或释放响应时发生排出。</span><span class="sxs-lookup"><span data-stu-id="28aaf-168">Draining occurs when a request is cancelled or a response is disposed prior to fully reading the content.</span></span> <span data-ttu-id="28aaf-169">如果时间超出该值，将关闭连接而不是重复使用连接。</span><span class="sxs-lookup"><span data-stu-id="28aaf-169">If the time exceeds the value, the connection will be closed rather than reused.</span></span>

         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseHeaderEncodingSelector">
      <MemberSignature Language="C#" Value="public System.Net.Http.HeaderEncodingSelector&lt;System.Net.Http.HttpRequestMessage&gt;? ResponseHeaderEncodingSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Http.HeaderEncodingSelector`1&lt;class System.Net.Http.HttpRequestMessage&gt; ResponseHeaderEncodingSelector" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.ResponseHeaderEncodingSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseHeaderEncodingSelector As HeaderEncodingSelector(Of HttpRequestMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Http::HeaderEncodingSelector&lt;System::Net::Http::HttpRequestMessage ^&gt; ^ ResponseHeaderEncodingSelector { System::Net::Http::HeaderEncodingSelector&lt;System::Net::Http::HttpRequestMessage ^&gt; ^ get(); void set(System::Net::Http::HeaderEncodingSelector&lt;System::Net::Http::HttpRequestMessage ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResponseHeaderEncodingSelector : System.Net.Http.HeaderEncodingSelector&lt;System.Net.Http.HttpRequestMessage&gt; with get, set" Usage="System.Net.Http.SocketsHttpHandler.ResponseHeaderEncodingSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HeaderEncodingSelector&lt;System.Net.Http.HttpRequestMessage&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="protected internal override System.Net.Http.HttpResponseMessage Send (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Net.Http.HttpResponseMessage Send(class System.Net.Http.HttpRequestMessage request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.SocketsHttpHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function Send (request As HttpRequestMessage, cancellationToken As CancellationToken) As HttpResponseMessage" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Net::Http::HttpResponseMessage ^ Send(System::Net::Http::HttpRequestMessage ^ request, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.Send : System.Net.Http.HttpRequestMessage * System.Threading.CancellationToken -&gt; System.Net.Http.HttpResponseMessage" Usage="socketsHttpHandler.Send (request, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HttpResponseMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" Index="0" FrameworkAlternate="net-5.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="protected internal override System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.SocketsHttpHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SendAsync (request As HttpRequestMessage, cancellationToken As CancellationToken) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.SendAsync : System.Net.Http.HttpRequestMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="socketsHttpHandler.SendAsync (request, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="28aaf-170">要发送的 HTTP 请求消息。</span><span class="sxs-lookup"><span data-stu-id="28aaf-170">The HTTP request message to send.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="28aaf-171">取消标记。</span><span class="sxs-lookup"><span data-stu-id="28aaf-171">The cancellation token.</span></span></param>
        <summary><span data-ttu-id="28aaf-172">以异步操作发送 HTTP 请求。</span><span class="sxs-lookup"><span data-stu-id="28aaf-172">Sends an HTTP request as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="28aaf-173">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="28aaf-173">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SslOptions">
      <MemberSignature Language="C#" Value="public System.Net.Security.SslClientAuthenticationOptions? SslOptions { get; set; }" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Security.SslClientAuthenticationOptions SslOptions" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.SslOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property SslOptions As SslClientAuthenticationOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::SslClientAuthenticationOptions ^ SslOptions { System::Net::Security::SslClientAuthenticationOptions ^ get(); void set(System::Net::Security::SslClientAuthenticationOptions ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SslOptions : System.Net.Security.SslClientAuthenticationOptions with get, set" Usage="System.Net.Http.SocketsHttpHandler.SslOptions" />
      <MemberSignature Language="C#" Value="public System.Net.Security.SslClientAuthenticationOptions SslOptions { get; set; }" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Security.SslClientAuthenticationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28aaf-174">获取或设置用于客户端 TLS 身份验证的选项集。</span><span class="sxs-lookup"><span data-stu-id="28aaf-174">Gets or sets the set of options used for client TLS authentication.</span></span></summary>
        <value><span data-ttu-id="28aaf-175">用于客户端 TLS 身份验证的选项集。</span><span class="sxs-lookup"><span data-stu-id="28aaf-175">The set of options used for client TLS authentication.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseCookies">
      <MemberSignature Language="C#" Value="public bool UseCookies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCookies" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.UseCookies" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCookies As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCookies { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseCookies : bool with get, set" Usage="System.Net.Http.SocketsHttpHandler.UseCookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28aaf-176">获取或设置一个值，该值指示处理程序是否应使用 cookie。</span><span class="sxs-lookup"><span data-stu-id="28aaf-176">Gets or sets a value that indicates whether the handler should use cookies.</span></span></summary>
        <value><span data-ttu-id="28aaf-177">一个值，该值指示处理程序是否应使用 cookie。</span><span class="sxs-lookup"><span data-stu-id="28aaf-177">A value that indicates whether the handler should use cookies.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseProxy">
      <MemberSignature Language="C#" Value="public bool UseProxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseProxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.UseProxy" />
      <MemberSignature Language="VB.NET" Value="Public Property UseProxy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseProxy { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseProxy : bool with get, set" Usage="System.Net.Http.SocketsHttpHandler.UseProxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28aaf-178">获取或设置一个值，该值指示处理程序是否应使用代理。</span><span class="sxs-lookup"><span data-stu-id="28aaf-178">Gets or sets a value that indicates whether the handler should use a proxy.</span></span></summary>
        <value><span data-ttu-id="28aaf-179">一个值，该值指示处理程序是否应使用代理。</span><span class="sxs-lookup"><span data-stu-id="28aaf-179">A value that indicates whether the handler should use a proxy.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
