<Type Name="StreamContent" FullName="System.Net.Http.StreamContent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7fa42d9971875bf2f836f88ccffe4f6e307a90c1" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89818179" /></Metadata><TypeSignature Language="C#" Value="public class StreamContent : System.Net.Http.HttpContent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StreamContent extends System.Net.Http.HttpContent" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.StreamContent" />
  <TypeSignature Language="VB.NET" Value="Public Class StreamContent&#xA;Inherits HttpContent" />
  <TypeSignature Language="C++ CLI" Value="public ref class StreamContent : System::Net::Http::HttpContent" />
  <TypeSignature Language="F#" Value="type StreamContent = class&#xA;    inherit HttpContent" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Net.Http" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Net.Http.HttpContent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7cb9b-101">提供基于流的 HTTP 内容。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-101">Provides HTTP content based on a stream.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7cb9b-102">创建 <see cref="T:System.Net.Http.StreamContent" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-102">Creates a new instance of the <see cref="T:System.Net.Http.StreamContent" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamContent (System.IO.Stream content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (content As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamContent(System::IO::Stream ^ content);" />
      <MemberSignature Language="F#" Value="new System.Net.Http.StreamContent : System.IO.Stream -&gt; System.Net.Http.StreamContent" Usage="new System.Net.Http.StreamContent content" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="content" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="content"><span data-ttu-id="7cb9b-103">用于初始化 <see cref="T:System.Net.Http.StreamContent" />的内容。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-103">The content used to initialize the <see cref="T:System.Net.Http.StreamContent" />.</span></span></param>
        <summary><span data-ttu-id="7cb9b-104">创建 <see cref="T:System.Net.Http.StreamContent" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-104">Creates a new instance of the <see cref="T:System.Net.Http.StreamContent" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="7cb9b-105"><xref:System.Net.Http.StreamContent>调用时，对象对 <xref:System.IO.Stream.Dispose> 提供的 <xref:System.IO.Stream> 对象调用 <xref:System.Net.Http.StreamContent.Dispose%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-105">The <xref:System.Net.Http.StreamContent> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.Net.Http.StreamContent.Dispose%2A?displayProperty=nameWithType> is called.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamContent (System.IO.Stream content, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream content, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (content As Stream, bufferSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamContent(System::IO::Stream ^ content, int bufferSize);" />
      <MemberSignature Language="F#" Value="new System.Net.Http.StreamContent : System.IO.Stream * int -&gt; System.Net.Http.StreamContent" Usage="new System.Net.Http.StreamContent (content, bufferSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="content" Type="System.IO.Stream" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="content"><span data-ttu-id="7cb9b-106">用于初始化 <see cref="T:System.Net.Http.StreamContent" />的内容。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-106">The content used to initialize the <see cref="T:System.Net.Http.StreamContent" />.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="7cb9b-107"><see cref="T:System.Net.Http.StreamContent" /> 的缓冲区大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-107">The size, in bytes, of the buffer for the <see cref="T:System.Net.Http.StreamContent" />.</span></span></param>
        <summary><span data-ttu-id="7cb9b-108">创建 <see cref="T:System.Net.Http.StreamContent" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-108">Creates a new instance of the <see cref="T:System.Net.Http.StreamContent" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="7cb9b-109"><xref:System.Net.Http.StreamContent>调用时，对象对 <xref:System.IO.Stream.Dispose> 提供的 <xref:System.IO.Stream> 对象调用 <xref:System.Net.Http.StreamContent.Dispose%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-109">The <xref:System.Net.Http.StreamContent> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.Net.Http.StreamContent.Dispose%2A?displayProperty=nameWithType> is called.</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7cb9b-110"><paramref name="content" /> 是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-110">The <paramref name="content" /> was <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7cb9b-111"><paramref name="bufferSize" /> 小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-111">The <paramref name="bufferSize" /> was less than or equal to zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateContentReadStream">
      <MemberSignature Language="C#" Value="protected override System.IO.Stream CreateContentReadStream (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.IO.Stream CreateContentReadStream(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.StreamContent.CreateContentReadStream(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateContentReadStream (cancellationToken As CancellationToken) As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::IO::Stream ^ CreateContentReadStream(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.CreateContentReadStream : System.Threading.CancellationToken -&gt; System.IO.Stream" Usage="streamContent.CreateContentReadStream cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContentReadStreamAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task&lt;System.IO.Stream&gt; CreateContentReadStreamAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; CreateContentReadStreamAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.StreamContent.CreateContentReadStreamAsync" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateContentReadStreamAsync () As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ CreateContentReadStreamAsync();" />
      <MemberSignature Language="F#" Value="override this.CreateContentReadStreamAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="streamContent.CreateContentReadStreamAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7cb9b-112">作为一个异步操作，将 HTTP 流内容写入内存流。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-112">Write the HTTP stream content to a memory stream as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="7cb9b-113">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-113">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cb9b-114">此操作不会阻止。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-114">This operation will not block.</span></span> <span data-ttu-id="7cb9b-115"><xref:System.Threading.Tasks.Task%601>将所有内容写入内存流后，返回的对象将会完成。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-115">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been written to the memory stream.</span></span>  
  
 <span data-ttu-id="7cb9b-116"><xref:System.Net.Http.StreamContent.CreateContentReadStreamAsync%2A>方法将内容缓冲到内存流。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-116">The <xref:System.Net.Http.StreamContent.CreateContentReadStreamAsync%2A> method buffers the content to a memory stream.</span></span> <span data-ttu-id="7cb9b-117">如果有更好的方法将内容检索为流，派生类可以重写此行为。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-117">Derived classes can override this behavior if there is a better way to retrieve the content as stream.</span></span> <span data-ttu-id="7cb9b-118">例如，字节数组或字符串可以使用更高效的方法，例如， <xref:System.IO.MemoryStream> 围绕字节或字符串环绕只读。 ) </span><span class="sxs-lookup"><span data-stu-id="7cb9b-118">For example, a byte array or a string could use a more efficient method way such as wrapping a read-only <xref:System.IO.MemoryStream> around the bytes or string.)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.StreamContent.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="streamContent.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="7cb9b-119">如果释放托管资源和非托管资源，则为 <see langword="true" />；如果仅释放非托管资源，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-119"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to releases only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="7cb9b-120">释放由 <see cref="T:System.Net.Http.StreamContent" /> 使用的非托管资源，并可根据需要释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-120">Releases the unmanaged resources used by the <see cref="T:System.Net.Http.StreamContent" /> and optionally disposes of the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cb9b-121">此方法由公共 `Dispose()` 方法和 <xref:System.Object.Finalize%2A> 方法调用。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-121">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="7cb9b-122">`Dispose()` 调用受保护的 `Dispose(Boolean)` 方法，并将 `disposing` 参数设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-122">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="7cb9b-123"><xref:System.Object.Finalize%2A>`Dispose`在设置为的情况调用 `disposing` `false` 。当 `disposing` 参数为时 `true` ，此方法释放该引用的任何托管对象所持有的所有资源 <xref:System.Net.Http.StreamContent> 。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-123"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.StreamContent> references.</span></span> <span data-ttu-id="7cb9b-124">此方法将调用每个被引用对象的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-124">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeToStream">
      <MemberSignature Language="C#" Value="protected override void SerializeToStream (System.IO.Stream stream, System.Net.TransportContext? context, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SerializeToStream(class System.IO.Stream stream, class System.Net.TransportContext context, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.StreamContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SerializeToStream (stream As Stream, context As TransportContext, cancellationToken As CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SerializeToStream(System::IO::Stream ^ stream, System::Net::TransportContext ^ context, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.SerializeToStream : System.IO.Stream * System.Net.TransportContext * System.Threading.CancellationToken -&gt; unit" Usage="streamContent.SerializeToStream (stream, context, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="net-5.0" />
        <Parameter Name="context" Type="System.Net.TransportContext" Index="1" FrameworkAlternate="net-5.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <param name="stream">To be added.</param>
        <param name="context">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeToStreamAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task SerializeToStreamAsync (System.IO.Stream stream, System.Net.TransportContext context);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task SerializeToStreamAsync(class System.IO.Stream stream, class System.Net.TransportContext context) cil managed" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SerializeToStreamAsync (stream As Stream, context As TransportContext) As Task" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Threading::Tasks::Task ^ SerializeToStreamAsync(System::IO::Stream ^ stream, System::Net::TransportContext ^ context);" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="F#" Value="override this.SerializeToStreamAsync : System.IO.Stream * System.Net.TransportContext -&gt; System.Threading.Tasks.Task" Usage="streamContent.SerializeToStreamAsync (stream, context)" />
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task SerializeToStreamAsync (System.IO.Stream stream, System.Net.TransportContext? context);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="C#" Value="protected internal override System.Threading.Tasks.Task SerializeToStreamAsync (System.IO.Stream stream, System.Net.TransportContext context);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Threading.Tasks.Task SerializeToStreamAsync(class System.IO.Stream stream, class System.Net.TransportContext context) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SerializeToStreamAsync (stream As Stream, context As TransportContext) As Task" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Threading::Tasks::Task ^ SerializeToStreamAsync(System::IO::Stream ^ stream, System::Net::TransportContext ^ context);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="context" Type="System.Net.TransportContext" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="7cb9b-125">目标流。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-125">The target stream.</span></span></param>
        <param name="context"><span data-ttu-id="7cb9b-126">有关传输的信息（例如信道绑定令牌）。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-126">Information about the transport (channel binding token, for example).</span></span> <span data-ttu-id="7cb9b-127">此参数可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-127">This parameter may be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="7cb9b-128">将 HTTP 内容序列化到流，此为异步操作。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-128">Serialize the HTTP content to a stream as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="7cb9b-129">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-129">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cb9b-130">此操作不会阻止。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-130">This operation will not block.</span></span> <span data-ttu-id="7cb9b-131"><xref:System.Threading.Tasks.Task>所有内容都序列化为目标流后，返回的对象将会完成。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-131">The returned <xref:System.Threading.Tasks.Task> object will complete after all of the content has been serialized to the target stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeToStreamAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task SerializeToStreamAsync (System.IO.Stream stream, System.Net.TransportContext? context, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task SerializeToStreamAsync(class System.IO.Stream stream, class System.Net.TransportContext context, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SerializeToStreamAsync (stream As Stream, context As TransportContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Threading::Tasks::Task ^ SerializeToStreamAsync(System::IO::Stream ^ stream, System::Net::TransportContext ^ context, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.SerializeToStreamAsync : System.IO.Stream * System.Net.TransportContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="streamContent.SerializeToStreamAsync (stream, context, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="net-5.0" />
        <Parameter Name="context" Type="System.Net.TransportContext" Index="1" FrameworkAlternate="net-5.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="7cb9b-132">目标流。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-132">The target stream.</span></span></param>
        <param name="context"><span data-ttu-id="7cb9b-133">有关传输的信息（例如信道绑定令牌）。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-133">Information about the transport (channel binding token, for example).</span></span> <span data-ttu-id="7cb9b-134">此参数可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-134">This parameter may be <see langword="null" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="7cb9b-135">用于取消操作的取消令牌。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-135">The cancellation token to cancel the operation.</span></span></param>
        <summary><span data-ttu-id="7cb9b-136">将 HTTP 内容序列化到流，此为异步操作。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-136">Serialize the HTTP content to a stream as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="7cb9b-137">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-137">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cb9b-138">此操作不会阻止。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-138">This operation will not block.</span></span> <span data-ttu-id="7cb9b-139"><xref:System.Threading.Tasks.Task>所有内容都序列化为目标流后，返回的对象将会完成。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-139">The returned <xref:System.Threading.Tasks.Task> object will complete after all of the content has been serialized to the target stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryComputeLength">
      <MemberSignature Language="C#" Value="protected internal override bool TryComputeLength (out long length);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool TryComputeLength([out] int64&amp; length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.StreamContent.TryComputeLength(System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function TryComputeLength (ByRef length As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool TryComputeLength([Runtime::InteropServices::Out] long % length);" />
      <MemberSignature Language="F#" Value="override this.TryComputeLength : int64 -&gt; bool" Usage="streamContent.TryComputeLength length" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="length"><span data-ttu-id="7cb9b-140">用字节表示的流内容长度。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-140">The length in bytes of the stream content.</span></span></param>
        <summary><span data-ttu-id="7cb9b-141">确定流内容是否具有有效的长度（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-141">Determines whether the stream content has a valid length in bytes.</span></span></summary>
        <returns><span data-ttu-id="7cb9b-142">如果 <paramref name="length" /> 是有效长度，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-142"><see langword="true" /> if <paramref name="length" /> is a valid length; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cb9b-143"><xref:System.Net.Http.StreamContent.TryComputeLength%2A>方法使 HTTP 流内容能够计算内容长度。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-143">The <xref:System.Net.Http.StreamContent.TryComputeLength%2A> method gives HTTP stream content the ability to calculate the content length.</span></span> <span data-ttu-id="7cb9b-144">这对于能够轻松计算内容长度的内容类型很有用。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-144">This is useful for content types which are able to easily calculate the content length.</span></span> <span data-ttu-id="7cb9b-145">如果无法计算内容长度，或成本较高 (需要系统缓冲序列化会消耗大量内存的整个内容，或者需要系统分配大量内存) ，则此方法可以返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-145">If computing the content length is not possible or expensive (would require the system to buffer the whole content where the serialization would be expensive or require the system to allocate a lot of memory), this method can return `false`.</span></span> <span data-ttu-id="7cb9b-146">如果此方法返回 `false` ，则表示需要分块传输，或者必须在将内容发送到服务器之前缓冲内容。</span><span class="sxs-lookup"><span data-stu-id="7cb9b-146">If this method returns `false`, this implies that either chunked transfer is needed or the content must get buffered before being sent to the server.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
