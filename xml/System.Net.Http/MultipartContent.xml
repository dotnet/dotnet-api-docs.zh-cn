<Type Name="MultipartContent" FullName="System.Net.Http.MultipartContent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c8ca327f007a41067c0d50380ca8571dbba27ee6" /><Meta Name="ms.sourcegitcommit" Value="5484acfd78fc29edb48fc1ca6925046c4672954a" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/16/2020" /><Meta Name="ms.locfileid" Value="90704826" /></Metadata><TypeSignature Language="C#" Value="public class MultipartContent : System.Net.Http.HttpContent, System.Collections.Generic.IEnumerable&lt;System.Net.Http.HttpContent&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MultipartContent extends System.Net.Http.HttpContent implements class System.Collections.Generic.IEnumerable`1&lt;class System.Net.Http.HttpContent&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.MultipartContent" />
  <TypeSignature Language="VB.NET" Value="Public Class MultipartContent&#xA;Inherits HttpContent&#xA;Implements IEnumerable(Of HttpContent)" />
  <TypeSignature Language="C++ CLI" Value="public ref class MultipartContent : System::Net::Http::HttpContent, System::Collections::Generic::IEnumerable&lt;System::Net::Http::HttpContent ^&gt;" />
  <TypeSignature Language="F#" Value="type MultipartContent = class&#xA;    inherit HttpContent&#xA;    interface seq&lt;HttpContent&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Net.Http" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Net.Http.HttpContent</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Net.Http.HttpContent&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="bbf79-101">提供 <see cref="T:System.Net.Http.HttpContent" /> 对象的集合，其可通过使用多部分/\* 内容类型规范序列化。</span><span class="sxs-lookup"><span data-stu-id="bbf79-101">Provides a collection of <see cref="T:System.Net.Http.HttpContent" /> objects that get serialized using the multipart/\* content type specification.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bbf79-102">创建 <see cref="T:System.Net.Http.MultipartContent" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="bbf79-102">Creates a new instance of the <see cref="T:System.Net.Http.MultipartContent" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MultipartContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.MultipartContent.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MultipartContent();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bbf79-103">创建 <see cref="T:System.Net.Http.MultipartContent" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="bbf79-103">Creates a new instance of the <see cref="T:System.Net.Http.MultipartContent" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MultipartContent (string subtype);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string subtype) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.MultipartContent.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (subtype As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MultipartContent(System::String ^ subtype);" />
      <MemberSignature Language="F#" Value="new System.Net.Http.MultipartContent : string -&gt; System.Net.Http.MultipartContent" Usage="new System.Net.Http.MultipartContent subtype" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="subtype" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subtype"><span data-ttu-id="bbf79-104">多部分内容的子类型。</span><span class="sxs-lookup"><span data-stu-id="bbf79-104">The subtype of the multipart content.</span></span></param>
        <summary><span data-ttu-id="bbf79-105">创建 <see cref="T:System.Net.Http.MultipartContent" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="bbf79-105">Creates a new instance of the <see cref="T:System.Net.Http.MultipartContent" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bbf79-106"><paramref name="subtype" /> 为 <see langword="null" /> 或者只包含空格字符。</span><span class="sxs-lookup"><span data-stu-id="bbf79-106">The <paramref name="subtype" /> was <see langword="null" /> or contains only white space characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MultipartContent (string subtype, string boundary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string subtype, string boundary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.MultipartContent.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (subtype As String, boundary As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MultipartContent(System::String ^ subtype, System::String ^ boundary);" />
      <MemberSignature Language="F#" Value="new System.Net.Http.MultipartContent : string * string -&gt; System.Net.Http.MultipartContent" Usage="new System.Net.Http.MultipartContent (subtype, boundary)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="subtype" Type="System.String" />
        <Parameter Name="boundary" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subtype"><span data-ttu-id="bbf79-107">多部分内容的子类型。</span><span class="sxs-lookup"><span data-stu-id="bbf79-107">The subtype of the multipart content.</span></span></param>
        <param name="boundary"><span data-ttu-id="bbf79-108">多部分内容的边界字符串。</span><span class="sxs-lookup"><span data-stu-id="bbf79-108">The boundary string for the multipart content.</span></span></param>
        <summary><span data-ttu-id="bbf79-109">创建 <see cref="T:System.Net.Http.MultipartContent" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="bbf79-109">Creates a new instance of the <see cref="T:System.Net.Http.MultipartContent" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bbf79-110"><paramref name="subtype" /> 是 <see langword="null" /> 或空字符串。</span><span class="sxs-lookup"><span data-stu-id="bbf79-110">The <paramref name="subtype" /> was <see langword="null" /> or an empty string.</span></span>  
  
<span data-ttu-id="bbf79-111"><paramref name="boundary" /> 为 <see langword="null" /> 或者只包含空格字符。</span><span class="sxs-lookup"><span data-stu-id="bbf79-111">The <paramref name="boundary" /> was <see langword="null" /> or contains only white space characters.</span></span>  
  
<span data-ttu-id="bbf79-112">- 或 -</span><span class="sxs-lookup"><span data-stu-id="bbf79-112">-or-</span></span> 
<span data-ttu-id="bbf79-113"><paramref name="boundary" /> 以空格字符结尾。</span><span class="sxs-lookup"><span data-stu-id="bbf79-113">The <paramref name="boundary" /> ends with a space character.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="bbf79-114"><paramref name="boundary" /> 的长度大于 70。</span><span class="sxs-lookup"><span data-stu-id="bbf79-114">The length of the <paramref name="boundary" /> was greater than 70.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (content As HttpContent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Net::Http::HttpContent ^ content);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Net.Http.HttpContent -&gt; unit&#xA;override this.Add : System.Net.Http.HttpContent -&gt; unit" Usage="multipartContent.Add content" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="content"><span data-ttu-id="bbf79-115">要添加到集合中的 HTTP 内容。</span><span class="sxs-lookup"><span data-stu-id="bbf79-115">The HTTP content to add to the collection.</span></span></param>
        <summary><span data-ttu-id="bbf79-116">添加多部分 HTTP 内容到 <see cref="T:System.Net.Http.HttpContent" /> 对象的集合，其可通过使用多部分/\* 内容类型规范获取序列化。</span><span class="sxs-lookup"><span data-stu-id="bbf79-116">Add multipart HTTP content to a collection of <see cref="T:System.Net.Http.HttpContent" /> objects that get serialized using the multipart/\* content type specification.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bbf79-117"><paramref name="content" /> 是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bbf79-117">The <paramref name="content" /> was <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateContentReadStream">
      <MemberSignature Language="C#" Value="protected override System.IO.Stream CreateContentReadStream (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.IO.Stream CreateContentReadStream(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.MultipartContent.CreateContentReadStream(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateContentReadStream (cancellationToken As CancellationToken) As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::IO::Stream ^ CreateContentReadStream(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.CreateContentReadStream : System.Threading.CancellationToken -&gt; System.IO.Stream" Usage="multipartContent.CreateContentReadStream cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContentReadStreamAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task&lt;System.IO.Stream&gt; CreateContentReadStreamAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; CreateContentReadStreamAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.MultipartContent.CreateContentReadStreamAsync" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateContentReadStreamAsync () As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ CreateContentReadStreamAsync();" />
      <MemberSignature Language="F#" Value="override this.CreateContentReadStreamAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="multipartContent.CreateContentReadStreamAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bbf79-118">以异步操作方式，使用 multipart/\* 编码将 HTTP 内容序列化到流。</span><span class="sxs-lookup"><span data-stu-id="bbf79-118">Serializes the HTTP content to a stream using the multipart/\* encoding as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="bbf79-119">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="bbf79-119">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbf79-120">此方法将重写 <xref:System.Net.Http.HttpContent.CreateContentReadStreamAsync%2A?displayProperty=nameWithType> 为使用包含数组的自定义流，并对每个 HTTP 内容及其边界进行编码并序列化为 <xref:System.IO.MemoryStream> 实例。</span><span class="sxs-lookup"><span data-stu-id="bbf79-120">This method overrides <xref:System.Net.Http.HttpContent.CreateContentReadStreamAsync%2A?displayProperty=nameWithType> to use a custom stream that contains an array, with each HTTP content and its boundary encoded and serialized to a <xref:System.IO.MemoryStream> instance.</span></span>

 <span data-ttu-id="bbf79-121">此操作不会阻止。</span><span class="sxs-lookup"><span data-stu-id="bbf79-121">This operation will not block.</span></span> <span data-ttu-id="bbf79-122"><xref:System.Threading.Tasks.Task%601>将所有内容写入内存流后，返回的对象将会完成。</span><span class="sxs-lookup"><span data-stu-id="bbf79-122">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been written to the memory stream.</span></span>  
  
 <span data-ttu-id="bbf79-123">操作完成后， <xref:System.Threading.Tasks.Task%601.Result%2A?displayProperty=nameWithType> 返回任务对象上的属性将包含表示多部分/\* 编码 HTTP 内容的流。</span><span class="sxs-lookup"><span data-stu-id="bbf79-123">Once the operation completes, the <xref:System.Threading.Tasks.Task%601.Result%2A?displayProperty=nameWithType> property on the returned task object contains the stream that represents the multipart/\* encoded HTTP content.</span></span> <span data-ttu-id="bbf79-124">然后，可以使用各种流 Api 使用返回的流读取内容。</span><span class="sxs-lookup"><span data-stu-id="bbf79-124">The returned stream can then be used to read the content using various stream APIs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContentReadStreamAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task&lt;System.IO.Stream&gt; CreateContentReadStreamAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; CreateContentReadStreamAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.MultipartContent.CreateContentReadStreamAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateContentReadStreamAsync (cancellationToken As CancellationToken) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ CreateContentReadStreamAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.CreateContentReadStreamAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="multipartContent.CreateContentReadStreamAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="bbf79-125">用于取消操作的取消令牌。</span><span class="sxs-lookup"><span data-stu-id="bbf79-125">The cancellation token to cancel the operation.</span></span></param>
        <summary><span data-ttu-id="bbf79-126">以异步操作方式，使用 multipart/\* 编码将 HTTP 内容序列化到流。</span><span class="sxs-lookup"><span data-stu-id="bbf79-126">Serializes the HTTP content to a stream using the multipart/\* encoding as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="bbf79-127">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="bbf79-127">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbf79-128">此方法将重写 <xref:System.Net.Http.HttpContent.CreateContentReadStreamAsync%2A?displayProperty=nameWithType> 为使用包含数组的自定义流，并对每个 HTTP 内容及其边界进行编码并序列化为 <xref:System.IO.MemoryStream> 实例。</span><span class="sxs-lookup"><span data-stu-id="bbf79-128">This method overrides <xref:System.Net.Http.HttpContent.CreateContentReadStreamAsync%2A?displayProperty=nameWithType> to use a custom stream that contains an array, with each HTTP content and its boundary encoded and serialized to a <xref:System.IO.MemoryStream> instance.</span></span>

 <span data-ttu-id="bbf79-129">此操作不会阻止。</span><span class="sxs-lookup"><span data-stu-id="bbf79-129">This operation will not block.</span></span> <span data-ttu-id="bbf79-130"><xref:System.Threading.Tasks.Task%601>将所有内容写入内存流后，返回的对象将会完成。</span><span class="sxs-lookup"><span data-stu-id="bbf79-130">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been written to the memory stream.</span></span>  
  
 <span data-ttu-id="bbf79-131">操作完成后， <xref:System.Threading.Tasks.Task%601.Result%2A?displayProperty=nameWithType> 返回任务对象上的属性将包含表示多部分/\* 编码 HTTP 内容的流。</span><span class="sxs-lookup"><span data-stu-id="bbf79-131">Once the operation completes, the <xref:System.Threading.Tasks.Task%601.Result%2A?displayProperty=nameWithType> property on the returned task object contains the stream that represents the multipart/\* encoded HTTP content.</span></span> <span data-ttu-id="bbf79-132">然后，可以使用各种流 Api 使用返回的流读取内容。</span><span class="sxs-lookup"><span data-stu-id="bbf79-132">The returned stream can then be used to read the content using various stream APIs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.MultipartContent.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="multipartContent.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="bbf79-133">如果释放托管资源和非托管资源，则为 <see langword="true" />；如果仅释放非托管资源，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bbf79-133"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to releases only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="bbf79-134">释放由 <see cref="T:System.Net.Http.MultipartContent" /> 使用的非托管资源，并可根据需要释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="bbf79-134">Releases the unmanaged resources used by the <see cref="T:System.Net.Http.MultipartContent" /> and optionally disposes of the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbf79-135">此方法由公共 `Dispose()` 方法和 <xref:System.Object.Finalize%2A> 方法调用。</span><span class="sxs-lookup"><span data-stu-id="bbf79-135">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="bbf79-136">`Dispose()` 调用受保护的 `Dispose(Boolean)` 方法，并将 `disposing` 参数设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="bbf79-136">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="bbf79-137"><xref:System.Object.Finalize%2A>`Dispose`在设置为的情况调用 `disposing` `false` 。当 `disposing` 参数为时 `true` ，此方法释放该引用的任何托管对象所持有的所有资源 <xref:System.Net.Http.MultipartContent> 。</span><span class="sxs-lookup"><span data-stu-id="bbf79-137"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.MultipartContent> references.</span></span> <span data-ttu-id="bbf79-138">此方法将调用每个被引用对象的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="bbf79-138">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Net.Http.HttpContent&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Net.Http.HttpContent&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.MultipartContent.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of HttpContent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::Net::Http::HttpContent ^&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Net.Http.HttpContent&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Net.Http.HttpContent&gt;" Usage="multipartContent.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Net.Http.HttpContent&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bbf79-139">返回循环访问 <see cref="T:System.Net.Http.HttpContent" /> 对象集合的枚举器，该对象集合使用多部分/\* 内容类型规范进行序列化。</span><span class="sxs-lookup"><span data-stu-id="bbf79-139">Returns an enumerator that iterates through the collection of <see cref="T:System.Net.Http.HttpContent" /> objects that get serialized using the multipart/\* content type specification.</span></span></summary>
        <returns><span data-ttu-id="bbf79-140">一个可用于循环访问集合的对象。</span><span class="sxs-lookup"><span data-stu-id="bbf79-140">An object that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbf79-141">C# 语言的 foreach 语句（在 Visual Basic 中为 For Each）隐藏了枚举器的复杂性。</span><span class="sxs-lookup"><span data-stu-id="bbf79-141">The foreach statement of the C# language (For Each in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="bbf79-142">因此，建议使用 foreach，而不要直接操作枚举器。</span><span class="sxs-lookup"><span data-stu-id="bbf79-142">Therefore, using foreach is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="bbf79-143">枚举器可用于读取集合中的数据，但不能用于修改基础集合。</span><span class="sxs-lookup"><span data-stu-id="bbf79-143">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="bbf79-144">最初，枚举数定位在集合中第一个元素的前面。</span><span class="sxs-lookup"><span data-stu-id="bbf79-144">Initially, the enumerator is positioned before the first element in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderEncodingSelector">
      <MemberSignature Language="C#" Value="public System.Net.Http.HeaderEncodingSelector&lt;System.Net.Http.HttpContent&gt;? HeaderEncodingSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Http.HeaderEncodingSelector`1&lt;class System.Net.Http.HttpContent&gt; HeaderEncodingSelector" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.MultipartContent.HeaderEncodingSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderEncodingSelector As HeaderEncodingSelector(Of HttpContent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Http::HeaderEncodingSelector&lt;System::Net::Http::HttpContent ^&gt; ^ HeaderEncodingSelector { System::Net::Http::HeaderEncodingSelector&lt;System::Net::Http::HttpContent ^&gt; ^ get(); void set(System::Net::Http::HeaderEncodingSelector&lt;System::Net::Http::HttpContent ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderEncodingSelector : System.Net.Http.HeaderEncodingSelector&lt;System.Net.Http.HttpContent&gt; with get, set" Usage="System.Net.Http.MultipartContent.HeaderEncodingSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HeaderEncodingSelector&lt;System.Net.Http.HttpContent&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeToStream">
      <MemberSignature Language="C#" Value="protected override void SerializeToStream (System.IO.Stream stream, System.Net.TransportContext? context, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SerializeToStream(class System.IO.Stream stream, class System.Net.TransportContext context, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.MultipartContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SerializeToStream (stream As Stream, context As TransportContext, cancellationToken As CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SerializeToStream(System::IO::Stream ^ stream, System::Net::TransportContext ^ context, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.SerializeToStream : System.IO.Stream * System.Net.TransportContext * System.Threading.CancellationToken -&gt; unit" Usage="multipartContent.SerializeToStream (stream, context, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="net-5.0" />
        <Parameter Name="context" Type="System.Net.TransportContext" Index="1" FrameworkAlternate="net-5.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <param name="stream">To be added.</param>
        <param name="context">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeToStreamAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task SerializeToStreamAsync (System.IO.Stream stream, System.Net.TransportContext context);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task SerializeToStreamAsync(class System.IO.Stream stream, class System.Net.TransportContext context) cil managed" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SerializeToStreamAsync (stream As Stream, context As TransportContext) As Task" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Threading::Tasks::Task ^ SerializeToStreamAsync(System::IO::Stream ^ stream, System::Net::TransportContext ^ context);" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="F#" Value="override this.SerializeToStreamAsync : System.IO.Stream * System.Net.TransportContext -&gt; System.Threading.Tasks.Task" Usage="multipartContent.SerializeToStreamAsync (stream, context)" />
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task SerializeToStreamAsync (System.IO.Stream stream, System.Net.TransportContext? context);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="C#" Value="protected internal override System.Threading.Tasks.Task SerializeToStreamAsync (System.IO.Stream stream, System.Net.TransportContext context);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Threading.Tasks.Task SerializeToStreamAsync(class System.IO.Stream stream, class System.Net.TransportContext context) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SerializeToStreamAsync (stream As Stream, context As TransportContext) As Task" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Threading::Tasks::Task ^ SerializeToStreamAsync(System::IO::Stream ^ stream, System::Net::TransportContext ^ context);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="context" Type="System.Net.TransportContext" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="bbf79-145">目标流。</span><span class="sxs-lookup"><span data-stu-id="bbf79-145">The target stream.</span></span></param>
        <param name="context"><span data-ttu-id="bbf79-146">有关传输的信息（例如信道绑定令牌）。</span><span class="sxs-lookup"><span data-stu-id="bbf79-146">Information about the transport (channel binding token, for example).</span></span> <span data-ttu-id="bbf79-147">此参数可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bbf79-147">This parameter may be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="bbf79-148">以异步操作方式，将多部分 HTTP 内容序列化到流。</span><span class="sxs-lookup"><span data-stu-id="bbf79-148">Serialize the multipart HTTP content to a stream as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="bbf79-149">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="bbf79-149">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbf79-150">此操作不会阻止。</span><span class="sxs-lookup"><span data-stu-id="bbf79-150">This operation will not block.</span></span> <span data-ttu-id="bbf79-151"><xref:System.Threading.Tasks.Task%601>所有内容都序列化为目标流后，返回的对象将会完成。</span><span class="sxs-lookup"><span data-stu-id="bbf79-151">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been serialized to the target stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeToStreamAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task SerializeToStreamAsync (System.IO.Stream stream, System.Net.TransportContext? context, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task SerializeToStreamAsync(class System.IO.Stream stream, class System.Net.TransportContext context, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SerializeToStreamAsync (stream As Stream, context As TransportContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Threading::Tasks::Task ^ SerializeToStreamAsync(System::IO::Stream ^ stream, System::Net::TransportContext ^ context, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.SerializeToStreamAsync : System.IO.Stream * System.Net.TransportContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="multipartContent.SerializeToStreamAsync (stream, context, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="net-5.0" />
        <Parameter Name="context" Type="System.Net.TransportContext" Index="1" FrameworkAlternate="net-5.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="bbf79-152">目标流。</span><span class="sxs-lookup"><span data-stu-id="bbf79-152">The target stream.</span></span></param>
        <param name="context"><span data-ttu-id="bbf79-153">有关传输的信息（例如信道绑定令牌）。</span><span class="sxs-lookup"><span data-stu-id="bbf79-153">Information about the transport (channel binding token, for example).</span></span> <span data-ttu-id="bbf79-154">此参数可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bbf79-154">This parameter may be <see langword="null" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="bbf79-155">用于取消操作的取消令牌。</span><span class="sxs-lookup"><span data-stu-id="bbf79-155">The cancellation token to cancel the operation.</span></span></param>
        <summary><span data-ttu-id="bbf79-156">以异步操作方式，将多部分 HTTP 内容序列化到流。</span><span class="sxs-lookup"><span data-stu-id="bbf79-156">Serialize the multipart HTTP content to a stream as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="bbf79-157">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="bbf79-157">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbf79-158">此操作不会阻止。</span><span class="sxs-lookup"><span data-stu-id="bbf79-158">This operation will not block.</span></span> <span data-ttu-id="bbf79-159"><xref:System.Threading.Tasks.Task%601>所有内容都序列化为目标流后，返回的对象将会完成。</span><span class="sxs-lookup"><span data-stu-id="bbf79-159">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been serialized to the target stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="multipartContent.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bbf79-160"><see cref="M:System.Net.Http.MultipartContent.GetEnumerator" /> 方法的显式实现。</span><span class="sxs-lookup"><span data-stu-id="bbf79-160">The explicit implementation of the <see cref="M:System.Net.Http.MultipartContent.GetEnumerator" /> method.</span></span></summary>
        <returns><span data-ttu-id="bbf79-161">一个可用于循环访问集合的对象。</span><span class="sxs-lookup"><span data-stu-id="bbf79-161">An object that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="bbf79-162">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="bbf79-162">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bbf79-163">它只能在 <xref:System.Net.Http.MultipartContent> 实例被强制转换为 <xref:System.Collections.IEnumerable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="bbf79-163">It can be used only when the <xref:System.Net.Http.MultipartContent> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryComputeLength">
      <MemberSignature Language="C#" Value="protected internal override bool TryComputeLength (out long length);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool TryComputeLength([out] int64&amp; length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function TryComputeLength (ByRef length As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool TryComputeLength([Runtime::InteropServices::Out] long % length);" />
      <MemberSignature Language="F#" Value="override this.TryComputeLength : int64 -&gt; bool" Usage="multipartContent.TryComputeLength length" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="length"><span data-ttu-id="bbf79-164">HTTP 内容的长度（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="bbf79-164">The length in bytes of the HHTP content.</span></span></param>
        <summary><span data-ttu-id="bbf79-165">确定 HTTP 多部分内容的长度是否有效（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="bbf79-165">Determines whether the HTTP multipart content has a valid length in bytes.</span></span></summary>
        <returns><span data-ttu-id="bbf79-166">如果 <paramref name="length" /> 是有效长度，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bbf79-166"><see langword="true" /> if <paramref name="length" /> is a valid length; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbf79-167"><xref:System.Net.Http.MultipartContent.TryComputeLength%2A>方法使 HTTP 多部分内容能够计算内容长度。</span><span class="sxs-lookup"><span data-stu-id="bbf79-167">The <xref:System.Net.Http.MultipartContent.TryComputeLength%2A> method gives HTTP multipart content the ability to calculate the content length.</span></span> <span data-ttu-id="bbf79-168">这对于能够轻松计算内容长度的内容类型很有用。</span><span class="sxs-lookup"><span data-stu-id="bbf79-168">This is useful for content types which are able to easily calculate the content length.</span></span> <span data-ttu-id="bbf79-169">如果无法计算内容长度，或成本较高 (需要系统缓冲序列化会消耗大量内存的整个内容，或者需要系统分配大量内存) ，则此方法可以返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="bbf79-169">If computing the content length is not possible or expensive (would require the system to buffer the whole content where the serialization would be expensive or require the system to allocate a lot of memory), this method can return `false`.</span></span> <span data-ttu-id="bbf79-170">如果此方法返回 `false` ，则表示需要分块传输，或者必须在将内容发送到服务器之前缓冲内容。</span><span class="sxs-lookup"><span data-stu-id="bbf79-170">If this method returns `false`, this implies that either chunked transfer is needed or the content must get buffered before being sent to the server.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
