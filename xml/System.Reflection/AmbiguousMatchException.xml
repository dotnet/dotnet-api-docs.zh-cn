<Type Name="AmbiguousMatchException" FullName="System.Reflection.AmbiguousMatchException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2fe25b8c35c67365c348757c544be69b4cae3f10" /><Meta Name="ms.sourcegitcommit" Value="a8ca33e500a87229bed50d12e09b1347df519648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/09/2020" /><Meta Name="ms.locfileid" Value="91926809" /></Metadata><TypeSignature Language="C#" Value="public sealed class AmbiguousMatchException : Exception" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AmbiguousMatchException extends System.Exception" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.AmbiguousMatchException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AmbiguousMatchException&#xA;Inherits Exception" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbiguousMatchException sealed : Exception" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="F#" Value="type AmbiguousMatchException = class&#xA;    inherit Exception" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="C#" Value="public sealed class AmbiguousMatchException : SystemException" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AmbiguousMatchException extends System.SystemException" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AmbiguousMatchException&#xA;Inherits SystemException" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbiguousMatchException sealed : SystemException" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type AmbiguousMatchException = class&#xA;    inherit SystemException" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit AmbiguousMatchException extends System.SystemException" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Reflection" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Reflection" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Reflection" FromVersion="4.2.0.0" To="System.Runtime" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.Reflection" FromVersion="4.2.1.0" To="System.Runtime" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Reflection" FromVersion="4.2.2.0" To="System.Runtime" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="bb35d-101">当绑定到成员导致多个成员匹配绑定条件时引发的异常。</span><span class="sxs-lookup"><span data-stu-id="bb35d-101">The exception that is thrown when binding to a member results in more than one member matching the binding criteria.</span></span> <span data-ttu-id="bb35d-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="bb35d-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb35d-103">`AmbiguousMatchException` 使用值为0x8000211D 的 HRESULT COR_E_AMBIGUOUSMATCH。</span><span class="sxs-lookup"><span data-stu-id="bb35d-103">`AmbiguousMatchException` uses the HRESULT COR_E_AMBIGUOUSMATCH which has the value 0x8000211D.</span></span>  
  
 <span data-ttu-id="bb35d-104">`AmbiguousMatchException`当成员被后期绑定调用，而多个重载满足绑定条件时，或者当多个成员与传递到反射方法（可仅返回单个结果 (例如或) ）的绑定条件匹配时，将引发 <xref:System.Type.GetMethod%2A?displayProperty=nameWithType> <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="bb35d-104">An `AmbiguousMatchException` is thrown when a member is invoked late-bound and multiple overloads satisfy the binding criteria, or when more than one member matches the binding criteria passed to a reflection method that can return only a single result (for example, <xref:System.Type.GetMethod%2A?displayProperty=nameWithType> or <xref:System.Type.GetProperty%2A?displayProperty=nameWithType>).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <altmember cref="T:System.SystemException" />
    <related type="Article" href="/dotnet/standard/exceptions/"><span data-ttu-id="bb35d-105">在 .NET 中处理和引发异常</span><span class="sxs-lookup"><span data-stu-id="bb35d-105">Handling and throwing exceptions in .NET</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb35d-106">初始化 <see cref="T:System.Reflection.AmbiguousMatchException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="bb35d-106">Initializes a new instance of the <see cref="T:System.Reflection.AmbiguousMatchException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbiguousMatchException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AmbiguousMatchException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbiguousMatchException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb35d-107">通过使用空消息字符串和将根源异常设置为 <see langword="null" /> 来初始化 <see cref="T:System.Reflection.AmbiguousMatchException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="bb35d-107">Initializes a new instance of the <see cref="T:System.Reflection.AmbiguousMatchException" /> class with an empty message string and the root cause exception set to <see langword="null" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb35d-108">`AmbiguousMatchException` 从 <xref:System.Exception> 继承。</span><span class="sxs-lookup"><span data-stu-id="bb35d-108">`AmbiguousMatchException` inherits from <xref:System.Exception>.</span></span> <span data-ttu-id="bb35d-109">此构造函数将设置对象的属性，如下 `Exception` 表所示。</span><span class="sxs-lookup"><span data-stu-id="bb35d-109">This constructor sets the properties of the `Exception` object as shown in the following table.</span></span>  
  
|<span data-ttu-id="bb35d-110">properties</span><span class="sxs-lookup"><span data-stu-id="bb35d-110">Property</span></span>|<span data-ttu-id="bb35d-111">Value</span><span class="sxs-lookup"><span data-stu-id="bb35d-111">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="bb35d-112">空字符串 ( "" ) 。</span><span class="sxs-lookup"><span data-stu-id="bb35d-112">The empty string ("").</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <altmember cref="T:System.SystemException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbiguousMatchException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AmbiguousMatchException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbiguousMatchException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Reflection.AmbiguousMatchException : string -&gt; System.Reflection.AmbiguousMatchException" Usage="new System.Reflection.AmbiguousMatchException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="bb35d-113">指示此异常的引发原因的字符串。</span><span class="sxs-lookup"><span data-stu-id="bb35d-113">A string indicating the reason this exception was thrown.</span></span></param>
        <summary><span data-ttu-id="bb35d-114">初始化 <see cref="T:System.Reflection.AmbiguousMatchException" /> 类的一个新实例，将其消息字符串设置为给定消息，将根源异常设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bb35d-114">Initializes a new instance of the <see cref="T:System.Reflection.AmbiguousMatchException" /> class with its message string set to the given message and the root cause exception set to <see langword="null" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb35d-115">`AmbiguousMatchException` 从 <xref:System.Exception> 继承。</span><span class="sxs-lookup"><span data-stu-id="bb35d-115">`AmbiguousMatchException` inherits from <xref:System.Exception>.</span></span> <span data-ttu-id="bb35d-116">此构造函数将设置对象的属性，如下 `Exception` 表所示。</span><span class="sxs-lookup"><span data-stu-id="bb35d-116">This constructor sets the properties of the `Exception` object as shown in the following table.</span></span>  
  
|<span data-ttu-id="bb35d-117">properties</span><span class="sxs-lookup"><span data-stu-id="bb35d-117">Property</span></span>|<span data-ttu-id="bb35d-118">Value</span><span class="sxs-lookup"><span data-stu-id="bb35d-118">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="bb35d-119">`message`字符串。</span><span class="sxs-lookup"><span data-stu-id="bb35d-119">The `message` string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbiguousMatchException (string message, Exception inner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, inner As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbiguousMatchException(System::String ^ message, Exception ^ inner);" />
      <MemberSignature Language="F#" Value="new System.Reflection.AmbiguousMatchException : string * Exception -&gt; System.Reflection.AmbiguousMatchException" Usage="new System.Reflection.AmbiguousMatchException (message, inner)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="bb35d-120">解释异常原因的错误消息。</span><span class="sxs-lookup"><span data-stu-id="bb35d-120">The error message that explains the reason for the exception.</span></span></param>
        <param name="inner"><span data-ttu-id="bb35d-121">导致当前异常的异常。</span><span class="sxs-lookup"><span data-stu-id="bb35d-121">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="bb35d-122">如果 <paramref name="inner" /> 参数不为 <see langword="null" />，则当前异常将在处理内部异常的 <see langword="catch" /> 块中引发。</span><span class="sxs-lookup"><span data-stu-id="bb35d-122">If the <paramref name="inner" /> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="bb35d-123">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:System.Reflection.AmbiguousMatchException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="bb35d-123">Initializes a new instance of the <see cref="T:System.Reflection.AmbiguousMatchException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb35d-124">因前一个异常而直接引发的异常应在 <xref:System.Exception.InnerException%2A> 属性中包含对前一个异常的引用。</span><span class="sxs-lookup"><span data-stu-id="bb35d-124">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="bb35d-125"><xref:System.Exception.InnerException%2A> 属性将返回传递给构造函数的同一值；如果 <xref:System.Exception.InnerException%2A> 属性不向构造函数提供内部异常值，则返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="bb35d-125">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="bb35d-126">下表显示了 <xref:System.Reflection.AmbiguousMatchException> 实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="bb35d-126">The following table shows the initial property values for an instance of <xref:System.Reflection.AmbiguousMatchException>.</span></span>  
  
|<span data-ttu-id="bb35d-127">properties</span><span class="sxs-lookup"><span data-stu-id="bb35d-127">Property</span></span>|<span data-ttu-id="bb35d-128">“值”</span><span class="sxs-lookup"><span data-stu-id="bb35d-128">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="bb35d-129">内部异常引用。</span><span class="sxs-lookup"><span data-stu-id="bb35d-129">The inner exception reference.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="bb35d-130">错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="bb35d-130">The error message string.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="bb35d-131">下面的示例演示两个类，每个类都命名为 `Mymethod` 。</span><span class="sxs-lookup"><span data-stu-id="bb35d-131">The following example shows two classes, each named `Mymethod`.</span></span> <span data-ttu-id="bb35d-132">一个类采用整数，另一个类采用字符串。</span><span class="sxs-lookup"><span data-stu-id="bb35d-132">One class takes an integer and the other takes a string.</span></span> <span data-ttu-id="bb35d-133">如果将整数传递给 `Mymethod` ，则使用第一个类。</span><span class="sxs-lookup"><span data-stu-id="bb35d-133">If an integer is passed to `Mymethod`, the first class is used.</span></span> <span data-ttu-id="bb35d-134">如果传递字符串，则使用第二个类。</span><span class="sxs-lookup"><span data-stu-id="bb35d-134">If a string is passed, the second class is used.</span></span> <span data-ttu-id="bb35d-135">如果无法确定 `Mymethod` 要使用的， `AmbiguousMatchException` 则会引发。</span><span class="sxs-lookup"><span data-stu-id="bb35d-135">If it cannot be determined which `Mymethod` to use, `AmbiguousMatchException` is thrown.</span></span>  
  
 [!code-cpp[Classic AmbiguousMatchException.AmbiguousMatchException2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic AmbiguousMatchException.AmbiguousMatchException2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AmbiguousMatchException.AmbiguousMatchException2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic AmbiguousMatchException.AmbiguousMatchException2 Example/CS/source.cs#1)]
 [!code-vb[Classic AmbiguousMatchException.AmbiguousMatchException2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic AmbiguousMatchException.AmbiguousMatchException2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <related type="Article" href="/dotnet/standard/exceptions/"><span data-ttu-id="bb35d-136">在 .NET 中处理和引发异常</span><span class="sxs-lookup"><span data-stu-id="bb35d-136">Handling and throwing exceptions in .NET</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
