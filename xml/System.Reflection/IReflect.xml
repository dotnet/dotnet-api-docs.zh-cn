<Type Name="IReflect" FullName="System.Reflection.IReflect">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c52adb26e8741b4925dea54c99c350e7c26a66d1" /><Meta Name="ms.sourcegitcommit" Value="a8ca33e500a87229bed50d12e09b1347df519648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/09/2020" /><Meta Name="ms.locfileid" Value="91915073" /></Metadata><TypeSignature Language="C#" Value="public interface IReflect" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IReflect" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.IReflect" />
  <TypeSignature Language="VB.NET" Value="Public Interface IReflect" />
  <TypeSignature Language="C++ CLI" Value="public interface class IReflect" />
  <TypeSignature Language="F#" Value="type IReflect = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.Guid("AFBF15E5-C37C-11d2-B88E-00A0C9B471B8")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.Guid("AFBF15E5-C37C-11d2-B88E-00A0C9B471B8")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e097f-101">与 <see href="/windows/win32/api/oaidl/nn-oaidl-idispatch">IDispatch 接口</see>进行互操作。</span><span class="sxs-lookup"><span data-stu-id="e097f-101">Interoperates with the <see href="/windows/win32/api/oaidl/nn-oaidl-idispatch">IDispatch interface</see>.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e097f-102"><xref:System.Reflection.IReflect>接口用于与[IDispatch 接口](/windows/win32/api/oaidl/nn-oaidl-idispatch)进行互操作。</span><span class="sxs-lookup"><span data-stu-id="e097f-102">The <xref:System.Reflection.IReflect> interface is used to interoperate with the [IDispatch interface](/windows/win32/api/oaidl/nn-oaidl-idispatch).</span></span> <span data-ttu-id="e097f-103"><xref:System.Reflection.IReflect> 定义反射方法的子集 <xref:System.Type> 。</span><span class="sxs-lookup"><span data-stu-id="e097f-103"><xref:System.Reflection.IReflect> defines a subset of the <xref:System.Type> reflection methods.</span></span> <span data-ttu-id="e097f-104">实现此接口可使类型自定义从 COM 作为对象访问的对象的行为 `IDispatch` 。</span><span class="sxs-lookup"><span data-stu-id="e097f-104">Implementing this interface enables a type to customize its behavior when the object is being accessed from COM as an `IDispatch` object.</span></span> <span data-ttu-id="e097f-105"><xref:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler>类可用于封送实现 <xref:System.Reflection.IReflect> 或 <xref:System.Runtime.InteropServices.Expando.IExpando> 作为 COM 对象的对象 `IDispatch` ，反之亦然。</span><span class="sxs-lookup"><span data-stu-id="e097f-105">The <xref:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler> class can be used to marshal an object that implements <xref:System.Reflection.IReflect> or <xref:System.Runtime.InteropServices.Expando.IExpando> as a COM `IDispatch` object, and vice versa.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler" />
  </Docs>
  <Members>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo? GetField (string name, System.Reflection.BindingFlags bindingAttr);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetField (name As String, bindingAttr As BindingFlags) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::FieldInfo ^ GetField(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetField : string * System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo" Usage="iReflect.GetField (name, bindingAttr)" />
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e097f-106">要查找的字段的名称。</span><span class="sxs-lookup"><span data-stu-id="e097f-106">The name of the field to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="e097f-107">用于控制搜索的绑定属性。</span><span class="sxs-lookup"><span data-stu-id="e097f-107">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="e097f-108">返回与指定字段和绑定标志对应的 <see cref="T:System.Reflection.FieldInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="e097f-108">Returns the <see cref="T:System.Reflection.FieldInfo" /> object that corresponds to the specified field and binding flag.</span></span></summary>
        <returns><span data-ttu-id="e097f-109"><see cref="T:System.Reflection.FieldInfo" /> 对象，包含命名对象的符合 <paramref name="bindingAttr" /> 中指定的搜索约束的字段信息。</span><span class="sxs-lookup"><span data-stu-id="e097f-109">A <see cref="T:System.Reflection.FieldInfo" /> object containing the field information for the named object that meets the search constraints specified in <paramref name="bindingAttr" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="e097f-110">该对象实现同名的多个字段。</span><span class="sxs-lookup"><span data-stu-id="e097f-110">The object implements multiple fields with the same name.</span></span></exception>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetFields">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo[] GetFields(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFields (bindingAttr As BindingFlags) As FieldInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ GetFields(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetFields : System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo[]" Usage="iReflect.GetFields bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="e097f-111">用于控制搜索的绑定属性。</span><span class="sxs-lookup"><span data-stu-id="e097f-111">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="e097f-112">返回与当前类的所有字段对应的 <see cref="T:System.Reflection.FieldInfo" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="e097f-112">Returns an array of <see cref="T:System.Reflection.FieldInfo" /> objects that correspond to all fields of the current class.</span></span></summary>
        <returns><span data-ttu-id="e097f-113"><see cref="T:System.Reflection.FieldInfo" /> 对象的数组，包含此反射对象的符合 <paramref name="bindingAttr" /> 中指定的搜索约束的所有字段信息。</span><span class="sxs-lookup"><span data-stu-id="e097f-113">An array of <see cref="T:System.Reflection.FieldInfo" /> objects containing all the field information for this reflection object that meets the search constraints specified in <paramref name="bindingAttr" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e097f-114">匹配基于名称。</span><span class="sxs-lookup"><span data-stu-id="e097f-114">The match is based upon a name.</span></span> <span data-ttu-id="e097f-115">每个字段都必须具有唯一的名称。</span><span class="sxs-lookup"><span data-stu-id="e097f-115">Each field must have a unique name.</span></span> <span data-ttu-id="e097f-116"><xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType>标志指定在搜索中包括非公共方法。</span><span class="sxs-lookup"><span data-stu-id="e097f-116">The <xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType> flag specifies that non-public methods are included in the search.</span></span> <span data-ttu-id="e097f-117"><xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType>标志指定在搜索中包含公共方法。</span><span class="sxs-lookup"><span data-stu-id="e097f-117">The <xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType> flag specifies that public methods are included in the search.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMember(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMember (name As String, bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMember(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMember : string * System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="iReflect.GetMember (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e097f-118">要查找的成员的名称。</span><span class="sxs-lookup"><span data-stu-id="e097f-118">The name of the member to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="e097f-119">用于控制搜索的绑定属性。</span><span class="sxs-lookup"><span data-stu-id="e097f-119">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="e097f-120">检索与所有公共成员对应或者与匹配指定名称的所有成员对应的 <see cref="T:System.Reflection.MemberInfo" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="e097f-120">Retrieves an array of <see cref="T:System.Reflection.MemberInfo" /> objects corresponding to all public members or to all members that match a specified name.</span></span></summary>
        <returns><span data-ttu-id="e097f-121">与 <paramref name="name" /> 参数匹配的 <see cref="T:System.Reflection.MemberInfo" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="e097f-121">An array of <see cref="T:System.Reflection.MemberInfo" /> objects matching the <paramref name="name" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e097f-122"><xref:System.Reflection.IReflect.GetMember%2A>方法 <xref:System.Reflection.MemberInfo> 使用对应于所有公共成员或与指定名称匹配的所有成员的名称和绑定特性来检索对象的数组。</span><span class="sxs-lookup"><span data-stu-id="e097f-122">The <xref:System.Reflection.IReflect.GetMember%2A> method retrieves an array of <xref:System.Reflection.MemberInfo> objects by using the name and binding attribute that correspond to all public members or to all members that match a specified name.</span></span> <span data-ttu-id="e097f-123">观察到或忽略指定名称的大小写，由指定 <xref:System.Reflection.BindingFlags.IgnoreCase?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="e097f-123">The case of the specified name is observed or ignored, as specified by <xref:System.Reflection.BindingFlags.IgnoreCase?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMembers (bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMembers(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMembers : System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="iReflect.GetMembers bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="e097f-124">用于控制搜索的绑定属性。</span><span class="sxs-lookup"><span data-stu-id="e097f-124">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="e097f-125">检索与所有公共成员或当前类的所有成员对应的 <see cref="T:System.Reflection.MemberInfo" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="e097f-125">Retrieves an array of <see cref="T:System.Reflection.MemberInfo" /> objects that correspond either to all public members or to all members of the current class.</span></span></summary>
        <returns><span data-ttu-id="e097f-126">包含此反射对象的所有成员信息的 <see cref="T:System.Reflection.MemberInfo" /> 对象数组。</span><span class="sxs-lookup"><span data-stu-id="e097f-126">An array of <see cref="T:System.Reflection.MemberInfo" /> objects containing all the member information for this reflection object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e097f-127">此方法 <xref:System.Reflection.MemberInfo> 通过使用对应于所有公共成员或当前类的所有成员的绑定特性来检索对象的数组。</span><span class="sxs-lookup"><span data-stu-id="e097f-127">This method retrieves an array of <xref:System.Reflection.MemberInfo> objects by using the binding attribute that corresponds either to all public members or to all members of the current class.</span></span> <span data-ttu-id="e097f-128">它返回为此对象定义的所有成员的数组。</span><span class="sxs-lookup"><span data-stu-id="e097f-128">It returns an array of all of the members defined for this object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMethod">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e097f-129">检索与指定方法对应的 <see cref="T:System.Reflection.MethodInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="e097f-129">Retrieves a <see cref="T:System.Reflection.MethodInfo" /> object that corresponds to a specified method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo? GetMethod (string name, System.Reflection.BindingFlags bindingAttr);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethod (name As String, bindingAttr As BindingFlags) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMethod : string * System.Reflection.BindingFlags -&gt; System.Reflection.MethodInfo" Usage="iReflect.GetMethod (name, bindingAttr)" />
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e097f-130">要查找的成员的名称。</span><span class="sxs-lookup"><span data-stu-id="e097f-130">The name of the member to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="e097f-131">用于控制搜索的绑定属性。</span><span class="sxs-lookup"><span data-stu-id="e097f-131">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="e097f-132">在指定的搜索约束下检索与指定方法对应的 <see cref="T:System.Reflection.MethodInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="e097f-132">Retrieves a <see cref="T:System.Reflection.MethodInfo" /> object that corresponds to a specified method under specified search constraints.</span></span></summary>
        <returns><span data-ttu-id="e097f-133">包含方法信息的 <see cref="T:System.Reflection.MethodInfo" /> 对象，匹配基于方法名和 <paramref name="bindingAttr" /> 中指定的搜索约束。</span><span class="sxs-lookup"><span data-stu-id="e097f-133">A <see cref="T:System.Reflection.MethodInfo" /> object containing the method information, with the match being based on the method name and search constraints specified in <paramref name="bindingAttr" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="e097f-134">该对象实现同名的多个方法。</span><span class="sxs-lookup"><span data-stu-id="e097f-134">The object implements multiple methods with the same name.</span></span></exception>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string? name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[]? types, System.Reflection.ParameterModifier[] modifiers);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethod (name As String, bindingAttr As BindingFlags, binder As Binder, types As Type(), modifiers As ParameterModifier()) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member GetMethod : string * System.Reflection.BindingFlags * System.Reflection.Binder * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.MethodInfo" Usage="iReflect.GetMethod (name, bindingAttr, binder, types, modifiers)" />
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e097f-135">要查找的成员的名称。</span><span class="sxs-lookup"><span data-stu-id="e097f-135">The name of the member to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="e097f-136">用于控制搜索的绑定属性。</span><span class="sxs-lookup"><span data-stu-id="e097f-136">The binding attributes used to control the search.</span></span></param>
        <param name="binder"><span data-ttu-id="e097f-137">一个实现 <see cref="T:System.Reflection.Binder" /> 的对象，包含与此方法相关的属性。</span><span class="sxs-lookup"><span data-stu-id="e097f-137">An object that implements <see cref="T:System.Reflection.Binder" />, containing properties related to this method.</span></span></param>
        <param name="types"><span data-ttu-id="e097f-138">用于从重载方法中进行选择的数组。</span><span class="sxs-lookup"><span data-stu-id="e097f-138">An array used to choose among overloaded methods.</span></span></param>
        <param name="modifiers"><span data-ttu-id="e097f-139">参数修饰符的数组，用于使绑定可与在其中修改了类型的参数签名一起使用。</span><span class="sxs-lookup"><span data-stu-id="e097f-139">An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.</span></span></param>
        <summary><span data-ttu-id="e097f-140">检索与指定方法对应的 <see cref="T:System.Reflection.MethodInfo" /> 对象，使用 <see cref="T:System.Type" /> 数组从重载方法中进行选择。</span><span class="sxs-lookup"><span data-stu-id="e097f-140">Retrieves a <see cref="T:System.Reflection.MethodInfo" /> object corresponding to a specified method, using a <see cref="T:System.Type" /> array to choose from among overloaded methods.</span></span></summary>
        <returns><span data-ttu-id="e097f-141">匹配所有指定参数的请求的方法。</span><span class="sxs-lookup"><span data-stu-id="e097f-141">The requested method that matches all the specified parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e097f-142">返回值是一个匹配项，它基于方法名称、 <xref:System.Reflection.BindingFlags> 枚举成员、由参数指定的类型转换类型 `binder` 、重载以及 <xref:System.Reflection.ParameterInfo> 描述方法签名的。</span><span class="sxs-lookup"><span data-stu-id="e097f-142">The return value is a match based on the method name, <xref:System.Reflection.BindingFlags> enum member, the kind of type conversion specified by the `binder` parameter, the overload, and the <xref:System.Reflection.ParameterInfo> that describes the signature of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="e097f-143">该对象实现同名的多个方法。</span><span class="sxs-lookup"><span data-stu-id="e097f-143">The object implements multiple methods with the same name.</span></span></exception>
        <altmember cref="T:System.Reflection.BindingFlags" />
        <altmember cref="T:System.Reflection.Binder" />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.ParameterModifier" />
      </Docs>
    </Member>
    <Member MemberName="GetMethods">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo[] GetMethods(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethods (bindingAttr As BindingFlags) As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetMethods(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMethods : System.Reflection.BindingFlags -&gt; System.Reflection.MethodInfo[]" Usage="iReflect.GetMethods bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="e097f-144">用于控制搜索的绑定属性。</span><span class="sxs-lookup"><span data-stu-id="e097f-144">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="e097f-145">检索与所有公共方法或当前类的所有方法相关的 <see cref="T:System.Reflection.MethodInfo" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="e097f-145">Retrieves an array of <see cref="T:System.Reflection.MethodInfo" /> objects with all public methods or all methods of the current class.</span></span></summary>
        <returns><span data-ttu-id="e097f-146"><see cref="T:System.Reflection.MethodInfo" /> 对象的数组，包含为此反射对象定义的符合 <paramref name="bindingAttr" /> 中指定的搜索约束的所有方法。</span><span class="sxs-lookup"><span data-stu-id="e097f-146">An array of <see cref="T:System.Reflection.MethodInfo" /> objects containing all the methods defined for this reflection object that meet the search constraints specified in <paramref name="bindingAttr" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e097f-147">`bindingAttr`仅当返回公共方法时，才会指示的非公共特性。</span><span class="sxs-lookup"><span data-stu-id="e097f-147">The non-public attribute of `bindingAttr` is indicated only if public methods are returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo[] GetProperties(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (bindingAttr As BindingFlags) As PropertyInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ GetProperties(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : System.Reflection.BindingFlags -&gt; System.Reflection.PropertyInfo[]" Usage="iReflect.GetProperties bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="e097f-148">用于控制搜索的绑定属性。</span><span class="sxs-lookup"><span data-stu-id="e097f-148">The binding attribute used to control the search.</span></span></param>
        <summary><span data-ttu-id="e097f-149">检索与所有公共属性或当前类的所有属性对应的 <see cref="T:System.Reflection.PropertyInfo" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="e097f-149">Retrieves an array of <see cref="T:System.Reflection.PropertyInfo" /> objects corresponding to all public properties or to all properties of the current class.</span></span></summary>
        <returns><span data-ttu-id="e097f-150">在反射对象上定义的所有属性的 <see cref="T:System.Reflection.PropertyInfo" /> 对象数组。</span><span class="sxs-lookup"><span data-stu-id="e097f-150">An array of <see cref="T:System.Reflection.PropertyInfo" /> objects for all the properties defined on the reflection object.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperty">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e097f-151">检索与指定属性对应的 <see cref="T:System.Reflection.PropertyInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="e097f-151">Retrieves a <see cref="T:System.Reflection.PropertyInfo" /> object corresponding to a specified property.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo? GetProperty (string name, System.Reflection.BindingFlags bindingAttr);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String, bindingAttr As BindingFlags) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string * System.Reflection.BindingFlags -&gt; System.Reflection.PropertyInfo" Usage="iReflect.GetProperty (name, bindingAttr)" />
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e097f-152">要查找的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="e097f-152">The name of the property to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="e097f-153">用于控制搜索的绑定属性。</span><span class="sxs-lookup"><span data-stu-id="e097f-153">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="e097f-154">在指定搜索约束下检索与指定属性对应的 <see cref="T:System.Reflection.PropertyInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="e097f-154">Retrieves a <see cref="T:System.Reflection.PropertyInfo" /> object corresponding to a specified property under specified search constraints.</span></span></summary>
        <returns><span data-ttu-id="e097f-155">找到的与 <paramref name="bindingAttr" /> 中指定的搜索约束相符的属性的 <see cref="T:System.Reflection.PropertyInfo" /> 对象；如果没有找到此属性，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e097f-155">A <see cref="T:System.Reflection.PropertyInfo" /> object for the located property that meets the search constraints specified in <paramref name="bindingAttr" />, or <see langword="null" /> if the property was not located.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="e097f-156">该对象实现同名的多个字段。</span><span class="sxs-lookup"><span data-stu-id="e097f-156">The object implements multiple fields with the same name.</span></span></exception>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string? name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[]? types, System.Reflection.ParameterModifier[] modifiers);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String, bindingAttr As BindingFlags, binder As Binder, returnType As Type, types As Type(), modifiers As ParameterModifier()) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, Type ^ returnType, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string * System.Reflection.BindingFlags * System.Reflection.Binder * Type * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.PropertyInfo" Usage="iReflect.GetProperty (name, bindingAttr, binder, returnType, types, modifiers)" />
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e097f-157">要查找的成员的名称。</span><span class="sxs-lookup"><span data-stu-id="e097f-157">The name of the member to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="e097f-158">用于控制搜索的绑定属性。</span><span class="sxs-lookup"><span data-stu-id="e097f-158">The binding attribute used to control the search.</span></span></param>
        <param name="binder"><span data-ttu-id="e097f-159">一个实现 <see cref="T:System.Reflection.Binder" /> 的对象，包含与此方法相关的属性。</span><span class="sxs-lookup"><span data-stu-id="e097f-159">An object that implements <see cref="T:System.Reflection.Binder" />, containing properties related to this method.</span></span></param>
        <param name="returnType"><span data-ttu-id="e097f-160">属性的类型。</span><span class="sxs-lookup"><span data-stu-id="e097f-160">The type of the property.</span></span></param>
        <param name="types"><span data-ttu-id="e097f-161">用于从同名的重载方法中进行选择的数组。</span><span class="sxs-lookup"><span data-stu-id="e097f-161">An array used to choose among overloaded methods with the same name.</span></span></param>
        <param name="modifiers"><span data-ttu-id="e097f-162">用于选择参数修饰符的数组。</span><span class="sxs-lookup"><span data-stu-id="e097f-162">An array used to choose the parameter modifiers.</span></span></param>
        <summary><span data-ttu-id="e097f-163">在指定的搜索约束下检索与指定属性对应的 <see cref="T:System.Reflection.PropertyInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="e097f-163">Retrieves a <see cref="T:System.Reflection.PropertyInfo" /> object that corresponds to a specified property with specified search constraints.</span></span></summary>
        <returns><span data-ttu-id="e097f-164">如果在此反射对象中找到了具有指定名称的属性，则为所找到的属性的 <see cref="T:System.Reflection.PropertyInfo" /> 对象；如果没有找到此属性，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e097f-164">A <see cref="T:System.Reflection.PropertyInfo" /> object for the located property, if a property with the specified name was located in this reflection object, or <see langword="null" /> if the property was not located.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e097f-165">此方法 <xref:System.Reflection.PropertyInfo> 在指定的搜索约束下检索与指定属性对应的对象。</span><span class="sxs-lookup"><span data-stu-id="e097f-165">This method retrieves a <xref:System.Reflection.PropertyInfo> object corresponding to a specified property under specified search constraints.</span></span> <span data-ttu-id="e097f-166">类型数组用于从重载方法中进行选择。</span><span class="sxs-lookup"><span data-stu-id="e097f-166">A type array is used to choose from among overloaded methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.ParameterModifier" />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.Binder" />
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="InvokeMember">
      <MemberSignature Language="C#" Value="public object InvokeMember (string? name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[]? namedParameters);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InvokeMember(string name, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object target, object[] args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo culture, string[] namedParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeMember (name As String, invokeAttr As BindingFlags, binder As Binder, target As Object, args As Object(), modifiers As ParameterModifier(), culture As CultureInfo, namedParameters As String()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeMember(System::String ^ name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::String ^&gt; ^ namedParameters);" />
      <MemberSignature Language="F#" Value="abstract member InvokeMember : string * System.Reflection.BindingFlags * System.Reflection.Binder * obj * obj[] * System.Reflection.ParameterModifier[] * System.Globalization.CultureInfo * string[] -&gt; obj" Usage="iReflect.InvokeMember (name, invokeAttr, binder, target, args, modifiers, culture, namedParameters)" />
      <MemberSignature Language="C#" Value="public object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="namedParameters" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e097f-167">要查找的成员的名称。</span><span class="sxs-lookup"><span data-stu-id="e097f-167">The name of the member to find.</span></span></param>
        <param name="invokeAttr"><span data-ttu-id="e097f-168"><see cref="T:System.Reflection.BindingFlags" /> 调用特性之一。</span><span class="sxs-lookup"><span data-stu-id="e097f-168">One of the <see cref="T:System.Reflection.BindingFlags" /> invocation attributes.</span></span> <span data-ttu-id="e097f-169"><paramref name="invokeAttr" /> 参数可以是构造函数、方法、属性或字段。</span><span class="sxs-lookup"><span data-stu-id="e097f-169">The <paramref name="invokeAttr" /> parameter may be a constructor, method, property, or field.</span></span> <span data-ttu-id="e097f-170">必须指定合适的调用属性。</span><span class="sxs-lookup"><span data-stu-id="e097f-170">A suitable invocation attribute must be specified.</span></span> <span data-ttu-id="e097f-171">通过将空字符串 ("") 作为成员的名称传递来调用类的默认成员。</span><span class="sxs-lookup"><span data-stu-id="e097f-171">Invoke the default member of a class by passing the empty string ("") as the name of the member.</span></span></param>
        <param name="binder"><span data-ttu-id="e097f-172"><see cref="T:System.Reflection.BindingFlags" /> 位标志之一。</span><span class="sxs-lookup"><span data-stu-id="e097f-172">One of the <see cref="T:System.Reflection.BindingFlags" /> bit flags.</span></span> <span data-ttu-id="e097f-173">实现 <see cref="T:System.Reflection.Binder" />，包含与此方法相关的属性。</span><span class="sxs-lookup"><span data-stu-id="e097f-173">Implements <see cref="T:System.Reflection.Binder" />, containing properties related to this method.</span></span></param>
        <param name="target"><span data-ttu-id="e097f-174">对其调用指定成员的对象。</span><span class="sxs-lookup"><span data-stu-id="e097f-174">The object on which to invoke the specified member.</span></span> <span data-ttu-id="e097f-175">对于静态成员，此参数被忽略。</span><span class="sxs-lookup"><span data-stu-id="e097f-175">This parameter is ignored for static members.</span></span></param>
        <param name="args"><span data-ttu-id="e097f-176">包含要调用的成员的参数数目、顺序和类型的对象数组。</span><span class="sxs-lookup"><span data-stu-id="e097f-176">An array of objects that contains the number, order, and type of the parameters of the member to be invoked.</span></span> <span data-ttu-id="e097f-177">如果没有参数，则这是一个空数组。</span><span class="sxs-lookup"><span data-stu-id="e097f-177">This is an empty array if there are no parameters.</span></span></param>
        <param name="modifiers"><span data-ttu-id="e097f-178">一个 <see cref="T:System.Reflection.ParameterModifier" /> 对象数组。</span><span class="sxs-lookup"><span data-stu-id="e097f-178">An array of <see cref="T:System.Reflection.ParameterModifier" /> objects.</span></span> <span data-ttu-id="e097f-179">此数组与表示元数据中被调用成员的参数属性的 <paramref name="args" /> 参数具有相同的长度。</span><span class="sxs-lookup"><span data-stu-id="e097f-179">This array has the same length as the <paramref name="args" /> parameter, representing the invoked member's argument attributes in the metadata.</span></span> <span data-ttu-id="e097f-180">参数可以有下列属性：<see langword="pdIn" />、<see langword="pdOut" />、<see langword="pdRetval" />、<see langword="pdOptional" /> 和 <see langword="pdHasDefault" />。</span><span class="sxs-lookup"><span data-stu-id="e097f-180">A parameter can have the following attributes: <see langword="pdIn" />, <see langword="pdOut" />, <see langword="pdRetval" />, <see langword="pdOptional" />, and <see langword="pdHasDefault" />.</span></span> <span data-ttu-id="e097f-181">这些属性分别表示 [In]、[Out]、[retval]、[optional] 和默认参数。</span><span class="sxs-lookup"><span data-stu-id="e097f-181">These represent [In], [Out], [retval], [optional], and a default parameter, respectively.</span></span> <span data-ttu-id="e097f-182">这些属性由不同的互操作性服务使用。</span><span class="sxs-lookup"><span data-stu-id="e097f-182">These attributes are used by various interoperability services.</span></span></param>
        <param name="culture"><span data-ttu-id="e097f-183">用于控制类型强制的 <see cref="T:System.Globalization.CultureInfo" /> 的实例。</span><span class="sxs-lookup"><span data-stu-id="e097f-183">An instance of <see cref="T:System.Globalization.CultureInfo" /> used to govern the coercion of types.</span></span> <span data-ttu-id="e097f-184">例如，<paramref name="culture" /> 将表示 1000 的字符串转换为 <see cref="T:System.Double" /> 值，因为不同的区域性以不同的方式表示 1000。</span><span class="sxs-lookup"><span data-stu-id="e097f-184">For example, <paramref name="culture" /> converts a string that represents 1000 to a <see cref="T:System.Double" /> value, since 1000 is represented differently by different cultures.</span></span> <span data-ttu-id="e097f-185">如果此参数为 <see langword="null" />，则使用当前线程的 <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="e097f-185">If this parameter is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="namedParameters"><span data-ttu-id="e097f-186">参数的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="e097f-186">A string array of parameters.</span></span></param>
        <summary><span data-ttu-id="e097f-187">调用指定的成员。</span><span class="sxs-lookup"><span data-stu-id="e097f-187">Invokes a specified member.</span></span></summary>
        <returns><span data-ttu-id="e097f-188">指定的成员。</span><span class="sxs-lookup"><span data-stu-id="e097f-188">The specified member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e097f-189">在指定的活页夹和调用属性的约束下，要调用的方法必须为可访问，并且提供与指定的自变量列表最具体的匹配。</span><span class="sxs-lookup"><span data-stu-id="e097f-189">The method that is to be invoked must be accessible and provide the most specific match with the specified argument list, under the constraints of the specified binder and invocation attributes.</span></span>  
  
 <span data-ttu-id="e097f-190">如果方法声明中的参数数目等于指定参数列表中的参数数量，则会调用方法，并且每个参数的类型都可以由联编程序转换为参数的类型。</span><span class="sxs-lookup"><span data-stu-id="e097f-190">A method is invoked if the number of parameters in the method declaration equals the number of arguments in the specified argument list, and the type of each argument can be converted by the binder to the type of the parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e097f-191">传递给方法的参数修饰符的数组 <xref:System.Reflection.IReflect.InvokeMember%2A> 必须包含单个参数修饰符。</span><span class="sxs-lookup"><span data-stu-id="e097f-191">The array of parameter modifiers passed to the <xref:System.Reflection.IReflect.InvokeMember%2A> method must contain a single parameter modifier.</span></span> <span data-ttu-id="e097f-192">确定在向 COM 公开时需要通过引用传递的参数时，只考虑第一个参数修饰符。</span><span class="sxs-lookup"><span data-stu-id="e097f-192">Only the first parameter modifier is considered when determining which argument needs to be passed by reference when exposed to COM.</span></span>  
  
 <span data-ttu-id="e097f-193">联编程序将根据请求的绑定类型查找所有匹配的方法， (<xref:System.Reflection.BindingFlags.InvokeMethod?displayProperty=nameWithType> 、 <xref:System.Reflection.IReflect.GetProperties%2A> 等) 。</span><span class="sxs-lookup"><span data-stu-id="e097f-193">The binder finds all matching methods, in accordance with the type of binding requested (<xref:System.Reflection.BindingFlags.InvokeMethod?displayProperty=nameWithType>, <xref:System.Reflection.IReflect.GetProperties%2A>, and so on).</span></span> <span data-ttu-id="e097f-194">方法集按名称、参数数目和在联编程序中定义的一组搜索修饰符进行筛选。</span><span class="sxs-lookup"><span data-stu-id="e097f-194">The set of methods is filtered by the name, number of arguments, and a set of search modifiers defined in the binder.</span></span> <span data-ttu-id="e097f-195">选择方法后，将调用该方法，并在该点检查辅助功能。</span><span class="sxs-lookup"><span data-stu-id="e097f-195">After the method is selected, it is invoked, and accessibility is checked at that point.</span></span> <span data-ttu-id="e097f-196">搜索可根据与方法关联的可访问性属性控制要搜索的方法集。</span><span class="sxs-lookup"><span data-stu-id="e097f-196">The search may control which set of methods is searched based upon the accessibility attribute associated with the method.</span></span> <span data-ttu-id="e097f-197"><xref:System.Reflection.Binder.BindToMethod%2A> 选择要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="e097f-197"><xref:System.Reflection.Binder.BindToMethod%2A> selects the method to be invoked.</span></span> <span data-ttu-id="e097f-198">默认联编程序将选择最特定的匹配项。</span><span class="sxs-lookup"><span data-stu-id="e097f-198">The default binder selects the most specific match.</span></span>  
  
 <span data-ttu-id="e097f-199">对于完全受信任的代码，将忽略访问限制。</span><span class="sxs-lookup"><span data-stu-id="e097f-199">Access restrictions are ignored for fully trusted code.</span></span> <span data-ttu-id="e097f-200">也就是说，只要代码完全受信任，就可以通过反射访问和调用私有构造函数、方法、字段和属性。</span><span class="sxs-lookup"><span data-stu-id="e097f-200">That is, private constructors, methods, fields, and properties can be accessed and invoked through reflection whenever the code is fully trusted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e097f-201">下面的示例获取属性的值 <xref:System.DateTime.Now%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e097f-201">The following example obtains the value of the <xref:System.DateTime.Now%2A> property.</span></span>  
  
 [!code-cpp[Classic IReflect.InvokeMember Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic IReflect.InvokeMember Example/CPP/source.cpp#1)]
 [!code-csharp[Classic IReflect.InvokeMember Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic IReflect.InvokeMember Example/CS/source.cs#1)]
 [!code-vb[Classic IReflect.InvokeMember Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic IReflect.InvokeMember Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e097f-202">为字段 <see langword="set" /> 指定了多个参数。</span><span class="sxs-lookup"><span data-stu-id="e097f-202">More than one argument is specified for a field <see langword="set" />.</span></span></exception>
        <exception cref="T:System.MissingFieldException"><span data-ttu-id="e097f-203">找不到此字段或属性。</span><span class="sxs-lookup"><span data-stu-id="e097f-203">The field or property cannot be found.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="e097f-204">找不到此方法。</span><span class="sxs-lookup"><span data-stu-id="e097f-204">The method cannot be found.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e097f-205">在没有所需 <see cref="T:System.Security.Permissions.ReflectionPermission" /> 的情况下调用私有成员。</span><span class="sxs-lookup"><span data-stu-id="e097f-205">A private member is invoked without the necessary <see cref="T:System.Security.Permissions.ReflectionPermission" />.</span></span></exception>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Reflection.Binder" />
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="UnderlyingSystemType">
      <MemberSignature Language="C#" Value="public Type UnderlyingSystemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type UnderlyingSystemType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.IReflect.UnderlyingSystemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingSystemType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ UnderlyingSystemType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingSystemType : Type" Usage="System.Reflection.IReflect.UnderlyingSystemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e097f-206">获取表示 <see cref="T:System.Reflection.IReflect" /> 对象的基础类型。</span><span class="sxs-lookup"><span data-stu-id="e097f-206">Gets the underlying type that represents the <see cref="T:System.Reflection.IReflect" /> object.</span></span></summary>
        <value><span data-ttu-id="e097f-207">表示 <see cref="T:System.Reflection.IReflect" /> 对象的基础类型。</span><span class="sxs-lookup"><span data-stu-id="e097f-207">The underlying type that represents the <see cref="T:System.Reflection.IReflect" /> object.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
  </Members>
</Type>
