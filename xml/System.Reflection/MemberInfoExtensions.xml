<Type Name="MemberInfoExtensions" FullName="System.Reflection.MemberInfoExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bc01001ae5c17675283046b9d7eafba7033b4ded" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="82301171" /></Metadata><TypeSignature Language="C#" Value="public static class MemberInfoExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MemberInfoExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.MemberInfoExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module MemberInfoExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class MemberInfoExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type MemberInfoExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetMetadataToken">
      <MemberSignature Language="C#" Value="public static int GetMetadataToken (this System.Reflection.MemberInfo member);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetMetadataToken(class System.Reflection.MemberInfo member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMetadataToken (member As MemberInfo) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int GetMetadataToken(System::Reflection::MemberInfo ^ member);" />
      <MemberSignature Language="F#" Value="static member GetMetadataToken : System.Reflection.MemberInfo -&gt; int" Usage="System.Reflection.MemberInfoExtensions.GetMetadataToken member" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" RefType="this" />
      </Parameters>
      <Docs>
        <param name="member"><span data-ttu-id="7e56b-101">作为 reftype 检索令牌的成员。</span><span class="sxs-lookup"><span data-stu-id="7e56b-101">The member from which to retrieve the token, as reftype.</span></span></param>
        <summary><span data-ttu-id="7e56b-102">获取给定成员的元数据令牌（如果可用）。</span><span class="sxs-lookup"><span data-stu-id="7e56b-102">Gets a metadata token for the given member, if available.</span></span></summary>
        <returns><span data-ttu-id="7e56b-103">一个表示元数据令牌的整数。</span><span class="sxs-lookup"><span data-stu-id="7e56b-103">An integer representing the metadata token.</span></span> <span data-ttu-id="7e56b-104">返回的令牌永不为零。</span><span class="sxs-lookup"><span data-stu-id="7e56b-104">The returned token is never nil.</span></span> <span data-ttu-id="7e56b-105">如果不可用，则引发异常。</span><span class="sxs-lookup"><span data-stu-id="7e56b-105">If unavailable, an exception is thrown.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="7e56b-106">如果元数据标记不适用于指定的成员，则此方法将引发异常。</span><span class="sxs-lookup"><span data-stu-id="7e56b-106">This method throws an exception if a metadata token is not available for the specified member.</span></span> <span data-ttu-id="7e56b-107"><xref:System.Reflection.MemberInfoExtensions.HasMetadataToken%2A>调用此方法前，可以调用来确定元数据令牌是否可用。</span><span class="sxs-lookup"><span data-stu-id="7e56b-107">You can call <xref:System.Reflection.MemberInfoExtensions.HasMetadataToken%2A> to determine whether a metadata token is available before calling this method.</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7e56b-108">无可用的元数据令牌。</span><span class="sxs-lookup"><span data-stu-id="7e56b-108">There is no metadata token available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HasMetadataToken">
      <MemberSignature Language="C#" Value="public static bool HasMetadataToken (this System.Reflection.MemberInfo member);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HasMetadataToken(class System.Reflection.MemberInfo member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasMetadataToken (member As MemberInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool HasMetadataToken(System::Reflection::MemberInfo ^ member);" />
      <MemberSignature Language="F#" Value="static member HasMetadataToken : System.Reflection.MemberInfo -&gt; bool" Usage="System.Reflection.MemberInfoExtensions.HasMetadataToken member" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" RefType="this" />
      </Parameters>
      <Docs>
        <param name="member"><span data-ttu-id="7e56b-109">要分析的作为 reftype 的成员。</span><span class="sxs-lookup"><span data-stu-id="7e56b-109">The member to analyze, as reftype.</span></span></param>
        <summary><span data-ttu-id="7e56b-110">返回表示元数据令牌是否可用于指定的成员的值。</span><span class="sxs-lookup"><span data-stu-id="7e56b-110">Returns a value that indicates whether a metadata token is available for the specified member.</span></span></summary>
        <returns><span data-ttu-id="7e56b-111">如果为给定成员提供可用的元数据令牌，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7e56b-111"><see langword="true" /> if there is a metadata token available for the given member; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="7e56b-112"><xref:System.Reflection.MemberInfoExtensions.GetMetadataToken%2A>如果元数据标记不适用于指定的成员，则引发异常。</span><span class="sxs-lookup"><span data-stu-id="7e56b-112"><xref:System.Reflection.MemberInfoExtensions.GetMetadataToken%2A> throws an exception if a metadata token is not available for the specified member.</span></span> <span data-ttu-id="7e56b-113">因此，请使用此方法在调用之前确定元数据令牌是否可用 <xref:System.Reflection.MemberInfoExtensions.GetMetadataToken%2A> 。</span><span class="sxs-lookup"><span data-stu-id="7e56b-113">So use this method to determine whether a metadata token is available before calling <xref:System.Reflection.MemberInfoExtensions.GetMetadataToken%2A>.</span></span> 
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
