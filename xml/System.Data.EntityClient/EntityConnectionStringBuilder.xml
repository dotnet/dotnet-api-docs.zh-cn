<Type Name="EntityConnectionStringBuilder" FullName="System.Data.EntityClient.EntityConnectionStringBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="04978fccda069a1b9c79396be6cf7e2daaa94a71" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86730494" /></Metadata><TypeSignature Language="C#" Value="public sealed class EntityConnectionStringBuilder : System.Data.Common.DbConnectionStringBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EntityConnectionStringBuilder extends System.Data.Common.DbConnectionStringBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Data.EntityClient.EntityConnectionStringBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntityConnectionStringBuilder&#xA;Inherits DbConnectionStringBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntityConnectionStringBuilder sealed : System::Data::Common::DbConnectionStringBuilder" />
  <TypeSignature Language="F#" Value="type EntityConnectionStringBuilder = class&#xA;    inherit DbConnectionStringBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnectionStringBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为创建和管理供 EntityClient 使用的连接字符串的内容提供了一种简单的方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 通过连接字符串生成器，开发人员可以使用该类的属性和方法，以编程方式创建语法正确的连接字符串以及分析和重新生成现有的连接字符串。 连接字符串生成器提供了与已知关键字/值对相对应的强类型属性。 必须在应用程序中创建连接字符串的开发人员可以使用 <xref:System.Data.EntityClient.EntityConnectionStringBuilder> 类生成和修改连接字符串。

 <xref:System.Data.EntityClient.EntityConnectionStringBuilder> 对关键字/值对的有效性进行检查，其中每个关键字/值对都被公开为一个 <xref:System.Data.EntityClient.EntityConnectionStringBuilder> 属性值。

> [!NOTE]
>  基础数据源的连接字符串由 <xref:System.Data.EntityClient.EntityConnectionStringBuilder.ProviderConnectionString%2A> 属性提供。 对于提供的提供程序连接字符串，将不对关键字/值对的有效性进行检查。



## Examples
 下面的示例演示如何配合使用 <xref:System.Data.EntityClient.EntityConnectionStringBuilder> 和 <xref:System.Data.SqlClient.SqlConnectionStringBuilder>。

 [!code-csharp[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/samples/snippets/csharp/VS_Snippets_Data/eSQLBasicExamples/CS/Program.cs#buildingconnectionstringwithentitycommand)]
 [!code-vb[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/samples/snippets/visualbasic/VS_Snippets_Data/eSQLBasicExamples/VB/Program.vb#buildingconnectionstringwithentitycommand)]

 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.EntityClient.EntityConnection" />
    <related type="Article" href="/dotnet/framework/data/adonet/connection-strings">连接字符串</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/bb738679(v=vs.90)">使用 EntityClient</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityConnectionStringBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnectionStringBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityConnectionStringBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 下面的示例演示如何配合使用 <xref:System.Data.EntityClient.EntityConnectionStringBuilder> 和 <xref:System.Data.SqlClient.SqlConnectionStringBuilder>。 该代码设置的属性 `SqlConnectionStringBuilder` 以创建 <xref:System.Data.SqlClient.SqlConnection> 提供基础提供程序连接字符串的一部分的连接字符串。 请注意，不能使用设置提供程序名称， `SqlConnectionStringBuilder` 因为它不是有效的 `SqlConnection` 连接字符串语法。 此代码 <xref:System.Data.EntityClient.EntityConnection> 通过设置属性来创建连接字符串 `EntityConnectionStringBuilder` 。

 [!code-csharp[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/samples/snippets/csharp/VS_Snippets_Data/eSQLBasicExamples/CS/Program.cs#buildingconnectionstringwithentitycommand)]
 [!code-vb[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/samples/snippets/visualbasic/VS_Snippets_Data/eSQLBasicExamples/VB/Program.vb#buildingconnectionstringwithentitycommand)]

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-strings">连接字符串</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/bb738679(v=vs.90)">使用 EntityClient</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityConnectionStringBuilder (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnectionStringBuilder.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityConnectionStringBuilder(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.EntityClient.EntityConnectionStringBuilder : string -&gt; System.Data.EntityClient.EntityConnectionStringBuilder" Usage="new System.Data.EntityClient.EntityConnectionStringBuilder connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">一个指向基础数据源的提供程序特定的连接字符串。</param>
        <summary>使用提供的连接字符串初始化 <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 `connectionString`不检查提供的是否是有效的关键字/值对。 有关有效的关键字/值语法，请参见 <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>。

 必须在参数中指定固定提供程序名称 `connectionString` 。 支持的提供程序包括：

-   `System.Data.Odbc`

-   `System.Data.OleDb`

-   `System.Data.OracleClient`

-   `System.Data.SqlClient`

-   `Microsoft.SqlServerCe.Client`



## Examples
 下面的示例演示如何配合使用 <xref:System.Data.EntityClient.EntityConnectionStringBuilder> 和 <xref:System.Data.SqlClient.SqlConnectionStringBuilder>。 该代码设置的属性 `SqlConnectionStringBuilder` 以创建 <xref:System.Data.SqlClient.SqlConnection> 提供基础提供程序连接字符串的一部分的连接字符串。 请注意，不能使用设置提供程序名称， `SqlConnectionStringBuilder` 因为它不是有效的 `SqlConnection` 连接字符串语法。 此代码 <xref:System.Data.EntityClient.EntityConnection> 通过设置属性来创建连接字符串 `EntityConnectionStringBuilder` 。 它不使用 `connectionString` 重载。

 [!code-csharp[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/samples/snippets/csharp/VS_Snippets_Data/eSQLBasicExamples/CS/Program.cs#buildingconnectionstringwithentitycommand)]
 [!code-vb[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/samples/snippets/visualbasic/VS_Snippets_Data/eSQLBasicExamples/VB/Program.vb#buildingconnectionstringwithentitycommand)]

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-strings">连接字符串</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/bb738679(v=vs.90)">使用 EntityClient</related>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public override void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnectionStringBuilder.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Clear();" />
      <MemberSignature Language="F#" Value="override this.Clear : unit -&gt; unit" Usage="entityConnectionStringBuilder.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>清除 <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> 实例的内容。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Data.EntityClient.EntityConnectionStringBuilder.Clear%2A>方法将删除中的所有关键字/值对 <xref:System.Data.EntityClient.EntityConnectionStringBuilder> ，并将所有相应的属性重置为 null (`Nothing` Visual Basic) 。

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-strings">连接字符串</related>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public override bool ContainsKey (string keyword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ContainsKey(string keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnectionStringBuilder.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ContainsKey (keyword As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ContainsKey(System::String ^ keyword);" />
      <MemberSignature Language="F#" Value="override this.ContainsKey : string -&gt; bool" Usage="entityConnectionStringBuilder.ContainsKey keyword" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyword">要在 <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> 中定位的键。</param>
        <summary>确定 <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> 是否包含特定键。</summary>
        <returns>如果 <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> 包含具有指定键的元素，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-strings">连接字符串</related>
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public override bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnectionStringBuilder.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedSize : bool" Usage="System.Data.EntityClient.EntityConnectionStringBuilder.IsFixedSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> 是否具有固定大小。</summary>
        <value><see langword="true" /> 在每种情况下，因为 <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> 提供固定大小的关键字/值对集合。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string keyword] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnectionStringBuilder.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides Property Item(keyword As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ keyword); void set(System::String ^ keyword, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Data.EntityClient.EntityConnectionStringBuilder.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyword">要获取或设置的项的键。</param>
        <summary>获取或设置与指定的键关联的值。 在 C# 中，此属性为索引器。</summary>
        <value>与指定的键相关联的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 由于 <xref:System.Data.EntityClient.EntityConnectionStringBuilder> 包含固定大小的字典，因此如果尝试添加的键不在字典中，则会引发 <xref:System.Collections.Generic.KeyNotFoundException>。

 有关有效的关键字/值语法，请参见 <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>。

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="keyword" /> 为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException">可用键中不存在尝试添加的键。</exception>
        <exception cref="T:System.FormatException">连接字符串中包含无效的值（具体而言，需要使用布尔值或数值，但字符串中并未提供）。</exception>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-strings">连接字符串</related>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public override System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnectionStringBuilder.Keys" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.ICollection" Usage="System.Data.EntityClient.EntityConnectionStringBuilder.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取包含 <see cref="T:System.Collections.ICollection" /> 中的键的 <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />。</summary>
        <value>一个 <see cref="T:System.Collections.ICollection" />，它包含 <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> 中的键。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 有关有效的关键字/值语法，请参见 <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public string Metadata { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Metadata" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnectionStringBuilder.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public Property Metadata As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Metadata { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Metadata : string with get, set" Usage="System.Data.EntityClient.EntityConnectionStringBuilder.Metadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DisplayName("Metadata")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DisplayName("Metadata")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置连接字符串中的元数据位置。</summary>
        <value>连接字符串中的元数据位置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 有关有效的关键字/值语法，请参见 <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnectionStringBuilder.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Data.EntityClient.EntityConnectionStringBuilder.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DisplayName("Name")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DisplayName("Name")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置配置文件中定义的节名称。</summary>
        <value>配置文件中的节名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 有关有效的关键字/值语法，请参见 <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>。

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-strings">连接字符串</related>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public string Provider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Provider" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnectionStringBuilder.Provider" />
      <MemberSignature Language="VB.NET" Value="Public Property Provider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Provider { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Provider : string with get, set" Usage="System.Data.EntityClient.EntityConnectionStringBuilder.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DisplayName("Provider")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DisplayName("Provider")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置连接字符串中的基础 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 数据提供程序的名称。</summary>
        <value>基础 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 数据提供程序的固定名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 固定的提供程序名称可用于检索基础提供程序的 <xref:System.Data.Common.DbProviderFactory> 对象。

 有关有效的关键字/值语法，请参见 <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>。

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-strings">连接字符串</related>
      </Docs>
    </Member>
    <Member MemberName="ProviderConnectionString">
      <MemberSignature Language="C#" Value="public string ProviderConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnectionStringBuilder.ProviderConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Property ProviderConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProviderConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProviderConnectionString : string with get, set" Usage="System.Data.EntityClient.EntityConnectionStringBuilder.ProviderConnectionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DisplayName("Provider Connection String")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DisplayName("Provider Connection String")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置提供程序特定的内部连接字符串。</summary>
        <value>提供程序特定的内部连接字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 设置提供程序特定的连接字符串之前，将不对其关键字/值对的有效性进行检查。 开发人员可以使用强类型连接字符串生成器类或 <xref:System.Data.Common.DbConnectionStringBuilder> 类创建连接字符串。 <xref:System.Data.Common.DbConnectionStringBuilder> 不会对关键字/值对的有效性进行检查。 因此，使用此类可能会创建出无效的连接字符串。

 有关有效的关键字/值语法，请参见 <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>。

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-strings">连接字符串</related>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public override bool Remove (string keyword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Remove(string keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnectionStringBuilder.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Remove (keyword As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Remove(System::String ^ keyword);" />
      <MemberSignature Language="F#" Value="override this.Remove : string -&gt; bool" Usage="entityConnectionStringBuilder.Remove keyword" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyword">要从此 <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> 的连接字符串中移除关键字/值对的键。</param>
        <summary>从 <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> 实例中移除具有指定的键的项。</summary>
        <returns>如果连接字符串中存在该键且已将其删除，则为 <see langword="true" />；如果不存在该键，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 由于 `Remove` 方法返回一个指示成功的值，因此在尝试从实例中移除关键字/值对之前，不需要查找键 <xref:System.Data.EntityClient.EntityConnectionStringBuilder> 。

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="keyword" /> 为 Null（在 Visual Basic 中为 <see langword="Nothing" />）</exception>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-strings">连接字符串</related>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public override bool TryGetValue (string keyword, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TryGetValue(string keyword, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnectionStringBuilder.TryGetValue(System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TryGetValue (keyword As String, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool TryGetValue(System::String ^ keyword, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="override this.TryGetValue : string * obj -&gt; bool" Usage="entityConnectionStringBuilder.TryGetValue (keyword, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
        <Parameter Name="value" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyword">要检索的项的键。</param>
        <param name="value">与 <paramref name="keyword" /> 对应的值。</param>
        <summary>从此 <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> 中检索与提供的键相对应的值。</summary>
        <returns>如果在连接字符串中找到 <paramref name="keyword" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Data.EntityClient.EntityConnectionStringBuilder.TryGetValue%2A> 方法允许开发人员安全地从 <xref:System.Data.EntityClient.EntityConnectionStringBuilder> 中检索值，而无需验证提供的键名是否为有效的键名。 `TryGetValue` 向传递了不存在的键时不会引发异常。 `TryGetValue`使用不存在的键调用会将值 null (`Nothing`) 参数的 Visual Basic 中 `value` 。

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="keyword" /> 包含一个 null 值（在 Visual Basic 中为 <see langword="Nothing" />）。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
