<Type Name="EntityConnectionStringBuilder" FullName="System.Data.EntityClient.EntityConnectionStringBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="994c5bad1cb5ea2312b1df84f1285fbb729570c6" /><Meta Name="ms.sourcegitcommit" Value="9f423345753728e8cad38d4a22663a109e69ea91" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/04/2021" /><Meta Name="ms.locfileid" Value="102088571" /></Metadata><TypeSignature Language="C#" Value="public sealed class EntityConnectionStringBuilder : System.Data.Common.DbConnectionStringBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EntityConnectionStringBuilder extends System.Data.Common.DbConnectionStringBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Data.EntityClient.EntityConnectionStringBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntityConnectionStringBuilder&#xA;Inherits DbConnectionStringBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntityConnectionStringBuilder sealed : System::Data::Common::DbConnectionStringBuilder" />
  <TypeSignature Language="F#" Value="type EntityConnectionStringBuilder = class&#xA;    inherit DbConnectionStringBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnectionStringBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="002bd-101">为创建和管理供 EntityClient 使用的连接字符串的内容提供了一种简单的方法。</span><span class="sxs-lookup"><span data-stu-id="002bd-101">Provides a simple way to create and manage the contents of connection strings used by the EntityClient.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="002bd-102">通过连接字符串生成器，开发人员可以使用该类的属性和方法，以编程方式创建语法正确的连接字符串以及分析和重新生成现有的连接字符串。</span><span class="sxs-lookup"><span data-stu-id="002bd-102">The connection string builder lets developers programmatically create syntactically correct connection strings, and parse and rebuild existing connection strings, by using properties and methods of the class.</span></span> <span data-ttu-id="002bd-103">连接字符串生成器提供了与已知关键字/值对相对应的强类型属性。</span><span class="sxs-lookup"><span data-stu-id="002bd-103">The connection string builder provides strongly typed properties corresponding to the known keyword/value pairs.</span></span> <span data-ttu-id="002bd-104">必须在应用程序中创建连接字符串的开发人员可以使用 <xref:System.Data.EntityClient.EntityConnectionStringBuilder> 类生成和修改连接字符串。</span><span class="sxs-lookup"><span data-stu-id="002bd-104">Developers who must create connection strings as part of applications can use the <xref:System.Data.EntityClient.EntityConnectionStringBuilder> class to build and modify connection strings.</span></span>

 <span data-ttu-id="002bd-105"><xref:System.Data.EntityClient.EntityConnectionStringBuilder> 对关键字/值对的有效性进行检查，其中每个关键字/值对都被公开为一个 <xref:System.Data.EntityClient.EntityConnectionStringBuilder> 属性值。</span><span class="sxs-lookup"><span data-stu-id="002bd-105">The <xref:System.Data.EntityClient.EntityConnectionStringBuilder> performs checks for valid keyword/value pairs, each of which is exposed as a <xref:System.Data.EntityClient.EntityConnectionStringBuilder> property value.</span></span>

> [!NOTE]
>  <span data-ttu-id="002bd-106">基础数据源的连接字符串由 <xref:System.Data.EntityClient.EntityConnectionStringBuilder.ProviderConnectionString%2A> 属性提供。</span><span class="sxs-lookup"><span data-stu-id="002bd-106">The connection string for the underlying data source is supplied by the <xref:System.Data.EntityClient.EntityConnectionStringBuilder.ProviderConnectionString%2A> property.</span></span> <span data-ttu-id="002bd-107">对于提供的提供程序连接字符串，将不对关键字/值对的有效性进行检查。</span><span class="sxs-lookup"><span data-stu-id="002bd-107">The supplied provider connection string is not checked for valid keyword/value pairs.</span></span>



## Examples
 <span data-ttu-id="002bd-108">下面的示例演示如何配合使用 <xref:System.Data.EntityClient.EntityConnectionStringBuilder> 和 <xref:System.Data.SqlClient.SqlConnectionStringBuilder>。</span><span class="sxs-lookup"><span data-stu-id="002bd-108">The following example demonstrates how to use the <xref:System.Data.EntityClient.EntityConnectionStringBuilder> in conjunction with a <xref:System.Data.SqlClient.SqlConnectionStringBuilder>.</span></span>

 [!code-csharp[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/samples/snippets/csharp/VS_Snippets_Data/eSQLBasicExamples/CS/Program.cs#buildingconnectionstringwithentitycommand)]
 [!code-vb[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/samples/snippets/visualbasic/VS_Snippets_Data/eSQLBasicExamples/VB/Program.vb#buildingconnectionstringwithentitycommand)]

 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.EntityClient.EntityConnection" />
    <related type="Article" href="/dotnet/framework/data/adonet/connection-strings"><span data-ttu-id="002bd-109">连接字符串</span><span class="sxs-lookup"><span data-stu-id="002bd-109">Connection Strings</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/bb738679(v=vs.90)"><span data-ttu-id="002bd-110">使用 EntityClient</span><span class="sxs-lookup"><span data-stu-id="002bd-110">Working with EntityClient</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="002bd-111">初始化 <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="002bd-111">Initializes a new instance of the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityConnectionStringBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnectionStringBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityConnectionStringBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="002bd-112">初始化 <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="002bd-112">Initializes a new instance of the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="002bd-113">下面的示例演示如何配合使用 <xref:System.Data.EntityClient.EntityConnectionStringBuilder> 和 <xref:System.Data.SqlClient.SqlConnectionStringBuilder>。</span><span class="sxs-lookup"><span data-stu-id="002bd-113">The following example demonstrates how to use the <xref:System.Data.EntityClient.EntityConnectionStringBuilder> in conjunction with a <xref:System.Data.SqlClient.SqlConnectionStringBuilder>.</span></span> <span data-ttu-id="002bd-114">该代码设置的属性 `SqlConnectionStringBuilder` 以创建 <xref:System.Data.SqlClient.SqlConnection> 提供基础提供程序连接字符串的一部分的连接字符串。</span><span class="sxs-lookup"><span data-stu-id="002bd-114">The code sets properties of a `SqlConnectionStringBuilder` to create a <xref:System.Data.SqlClient.SqlConnection> connection string that supplies part of the underlying provider connection string.</span></span> <span data-ttu-id="002bd-115">请注意，不能使用设置提供程序名称， `SqlConnectionStringBuilder` 因为它不是有效的 `SqlConnection` 连接字符串语法。</span><span class="sxs-lookup"><span data-stu-id="002bd-115">Note that the Provider name cannot be set using the `SqlConnectionStringBuilder` because it is not valid `SqlConnection` connection string syntax.</span></span> <span data-ttu-id="002bd-116">此代码 <xref:System.Data.EntityClient.EntityConnection> 通过设置属性来创建连接字符串 `EntityConnectionStringBuilder` 。</span><span class="sxs-lookup"><span data-stu-id="002bd-116">The code creates the <xref:System.Data.EntityClient.EntityConnection> connection string by setting `EntityConnectionStringBuilder` properties.</span></span>

 [!code-csharp[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/samples/snippets/csharp/VS_Snippets_Data/eSQLBasicExamples/CS/Program.cs#buildingconnectionstringwithentitycommand)]
 [!code-vb[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/samples/snippets/visualbasic/VS_Snippets_Data/eSQLBasicExamples/VB/Program.vb#buildingconnectionstringwithentitycommand)]

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-strings"><span data-ttu-id="002bd-117">连接字符串</span><span class="sxs-lookup"><span data-stu-id="002bd-117">Connection Strings</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/bb738679(v=vs.90)"><span data-ttu-id="002bd-118">使用 EntityClient</span><span class="sxs-lookup"><span data-stu-id="002bd-118">Working with EntityClient</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityConnectionStringBuilder (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnectionStringBuilder.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityConnectionStringBuilder(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.EntityClient.EntityConnectionStringBuilder : string -&gt; System.Data.EntityClient.EntityConnectionStringBuilder" Usage="new System.Data.EntityClient.EntityConnectionStringBuilder connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString"><span data-ttu-id="002bd-119">一个指向基础数据源的提供程序特定的连接字符串。</span><span class="sxs-lookup"><span data-stu-id="002bd-119">A provider-specific connection string to the underlying data source.</span></span></param>
        <summary><span data-ttu-id="002bd-120">使用提供的连接字符串初始化 <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="002bd-120">Initializes a new instance of the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> class using the supplied connection string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="002bd-121">`connectionString`不检查提供的是否是有效的关键字/值对。</span><span class="sxs-lookup"><span data-stu-id="002bd-121">The supplied `connectionString` is not checked for valid keyword/value pairs.</span></span> <span data-ttu-id="002bd-122">有关有效的关键字/值语法，请参见 <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>。</span><span class="sxs-lookup"><span data-stu-id="002bd-122">For valid keyword/value syntax, see <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.</span></span>

 <span data-ttu-id="002bd-123">必须在参数中指定固定提供程序名称 `connectionString` 。</span><span class="sxs-lookup"><span data-stu-id="002bd-123">The invariant Provider name must be specified in the `connectionString` parameter.</span></span> <span data-ttu-id="002bd-124">支持的提供程序包括：</span><span class="sxs-lookup"><span data-stu-id="002bd-124">Supported providers include the following:</span></span>

-   `System.Data.Odbc`

-   `System.Data.OleDb`

-   `System.Data.OracleClient`

-   `System.Data.SqlClient`

-   `Microsoft.SqlServerCe.Client`



## Examples
 <span data-ttu-id="002bd-125">下面的示例演示如何配合使用 <xref:System.Data.EntityClient.EntityConnectionStringBuilder> 和 <xref:System.Data.SqlClient.SqlConnectionStringBuilder>。</span><span class="sxs-lookup"><span data-stu-id="002bd-125">The following example demonstrates how to use the <xref:System.Data.EntityClient.EntityConnectionStringBuilder> in conjunction with a <xref:System.Data.SqlClient.SqlConnectionStringBuilder>.</span></span> <span data-ttu-id="002bd-126">该代码设置的属性 `SqlConnectionStringBuilder` 以创建 <xref:System.Data.SqlClient.SqlConnection> 提供基础提供程序连接字符串的一部分的连接字符串。</span><span class="sxs-lookup"><span data-stu-id="002bd-126">The code sets properties of a `SqlConnectionStringBuilder` to create a <xref:System.Data.SqlClient.SqlConnection> connection string that supplies part of the underlying provider connection string.</span></span> <span data-ttu-id="002bd-127">请注意，不能使用设置提供程序名称， `SqlConnectionStringBuilder` 因为它不是有效的 `SqlConnection` 连接字符串语法。</span><span class="sxs-lookup"><span data-stu-id="002bd-127">Note that the Provider name cannot be set using the `SqlConnectionStringBuilder` because it is not valid `SqlConnection` connection string syntax.</span></span> <span data-ttu-id="002bd-128">此代码 <xref:System.Data.EntityClient.EntityConnection> 通过设置属性来创建连接字符串 `EntityConnectionStringBuilder` 。</span><span class="sxs-lookup"><span data-stu-id="002bd-128">The code creates the <xref:System.Data.EntityClient.EntityConnection> connection string by setting `EntityConnectionStringBuilder` properties.</span></span> <span data-ttu-id="002bd-129">它不使用 `connectionString` 重载。</span><span class="sxs-lookup"><span data-stu-id="002bd-129">It does not use the `connectionString` overload.</span></span>

 [!code-csharp[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/samples/snippets/csharp/VS_Snippets_Data/eSQLBasicExamples/CS/Program.cs#buildingconnectionstringwithentitycommand)]
 [!code-vb[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/samples/snippets/visualbasic/VS_Snippets_Data/eSQLBasicExamples/VB/Program.vb#buildingconnectionstringwithentitycommand)]

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-strings"><span data-ttu-id="002bd-130">连接字符串</span><span class="sxs-lookup"><span data-stu-id="002bd-130">Connection Strings</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/bb738679(v=vs.90)"><span data-ttu-id="002bd-131">使用 EntityClient</span><span class="sxs-lookup"><span data-stu-id="002bd-131">Working with EntityClient</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public override void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnectionStringBuilder.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Clear();" />
      <MemberSignature Language="F#" Value="override this.Clear : unit -&gt; unit" Usage="entityConnectionStringBuilder.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="002bd-132">清除 <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> 实例的内容。</span><span class="sxs-lookup"><span data-stu-id="002bd-132">Clears the contents of the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="002bd-133"><xref:System.Data.EntityClient.EntityConnectionStringBuilder.Clear%2A>方法将删除中的所有关键字/值对 <xref:System.Data.EntityClient.EntityConnectionStringBuilder> ，并将所有相应的属性重置为 null (`Nothing` Visual Basic) 。</span><span class="sxs-lookup"><span data-stu-id="002bd-133">The <xref:System.Data.EntityClient.EntityConnectionStringBuilder.Clear%2A> method removes all keyword/value pairs from the <xref:System.Data.EntityClient.EntityConnectionStringBuilder> and resets all corresponding properties to null (`Nothing` in Visual Basic).</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-strings"><span data-ttu-id="002bd-134">连接字符串</span><span class="sxs-lookup"><span data-stu-id="002bd-134">Connection Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public override bool ContainsKey (string keyword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ContainsKey(string keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnectionStringBuilder.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ContainsKey (keyword As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ContainsKey(System::String ^ keyword);" />
      <MemberSignature Language="F#" Value="override this.ContainsKey : string -&gt; bool" Usage="entityConnectionStringBuilder.ContainsKey keyword" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyword"><span data-ttu-id="002bd-135">要在 <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> 中定位的键。</span><span class="sxs-lookup"><span data-stu-id="002bd-135">The key to locate in the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />.</span></span></param>
        <summary><span data-ttu-id="002bd-136">确定 <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> 是否包含特定键。</span><span class="sxs-lookup"><span data-stu-id="002bd-136">Determines whether the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> contains a specific key.</span></span></summary>
        <returns><span data-ttu-id="002bd-137">如果 <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> 包含具有指定键的元素，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="002bd-137"><see langword="true" /> if the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> contains an element that has the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-strings"><span data-ttu-id="002bd-138">连接字符串</span><span class="sxs-lookup"><span data-stu-id="002bd-138">Connection Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public override bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnectionStringBuilder.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedSize : bool" Usage="System.Data.EntityClient.EntityConnectionStringBuilder.IsFixedSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="002bd-139">获取一个值，该值指示 <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> 是否具有固定大小。</span><span class="sxs-lookup"><span data-stu-id="002bd-139">Gets a value that indicates whether the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> has a fixed size.</span></span></summary>
        <value><span data-ttu-id="002bd-140"><see langword="true" /> 在每种情况下，因为 <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> 提供固定大小的关键字/值对集合。</span><span class="sxs-lookup"><span data-stu-id="002bd-140"><see langword="true" /> in every case, because the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> supplies a fixed-size collection of keyword/value pairs.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string keyword] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnectionStringBuilder.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides Property Item(keyword As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ keyword); void set(System::String ^ keyword, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Data.EntityClient.EntityConnectionStringBuilder.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyword"><span data-ttu-id="002bd-141">要获取或设置的项的键。</span><span class="sxs-lookup"><span data-stu-id="002bd-141">The key of the item to get or set.</span></span></param>
        <summary><span data-ttu-id="002bd-142">获取或设置与指定的键关联的值。</span><span class="sxs-lookup"><span data-stu-id="002bd-142">Gets or sets the value associated with the specified key.</span></span> <span data-ttu-id="002bd-143">在 C# 中，此属性为索引器。</span><span class="sxs-lookup"><span data-stu-id="002bd-143">In C#, this property is the indexer.</span></span></summary>
        <value><span data-ttu-id="002bd-144">与指定的键相关联的值。</span><span class="sxs-lookup"><span data-stu-id="002bd-144">The value associated with the specified key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="002bd-145">由于 <xref:System.Data.EntityClient.EntityConnectionStringBuilder> 包含固定大小的字典，因此如果尝试添加的键不在字典中，则会引发 <xref:System.Collections.Generic.KeyNotFoundException>。</span><span class="sxs-lookup"><span data-stu-id="002bd-145">Because the <xref:System.Data.EntityClient.EntityConnectionStringBuilder> contains a fixed-size dictionary, trying to add a key that does not exist in the dictionary throws a <xref:System.Collections.Generic.KeyNotFoundException>.</span></span>

 <span data-ttu-id="002bd-146">有关有效的关键字/值语法，请参见 <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>。</span><span class="sxs-lookup"><span data-stu-id="002bd-146">For valid keyword/value syntax, see <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="002bd-147"><paramref name="keyword" /> 为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</span><span class="sxs-lookup"><span data-stu-id="002bd-147"><paramref name="keyword" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException"><span data-ttu-id="002bd-148">可用键中不存在尝试添加的键。</span><span class="sxs-lookup"><span data-stu-id="002bd-148">Tried to add a key that does not exist in the available keys.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="002bd-149">连接字符串中包含无效的值（具体而言，需要使用布尔值或数值，但字符串中并未提供）。</span><span class="sxs-lookup"><span data-stu-id="002bd-149">Invalid value in the connection string (specifically, a Boolean or numeric value was expected but not supplied).</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-strings"><span data-ttu-id="002bd-150">连接字符串</span><span class="sxs-lookup"><span data-stu-id="002bd-150">Connection Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public override System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnectionStringBuilder.Keys" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.ICollection" Usage="System.Data.EntityClient.EntityConnectionStringBuilder.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="002bd-151">获取包含 <see cref="T:System.Collections.ICollection" /> 中的键的 <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="002bd-151">Gets an <see cref="T:System.Collections.ICollection" /> that contains the keys in the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />.</span></span></summary>
        <value><span data-ttu-id="002bd-152">一个 <see cref="T:System.Collections.ICollection" />，它包含 <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> 中的键。</span><span class="sxs-lookup"><span data-stu-id="002bd-152">An <see cref="T:System.Collections.ICollection" /> that contains the keys in the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="002bd-153">有关有效的关键字/值语法，请参见 <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>。</span><span class="sxs-lookup"><span data-stu-id="002bd-153">For valid keyword/value syntax, see <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public string Metadata { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Metadata" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnectionStringBuilder.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public Property Metadata As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Metadata { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Metadata : string with get, set" Usage="System.Data.EntityClient.EntityConnectionStringBuilder.Metadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DisplayName("Metadata")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DisplayName("Metadata")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="002bd-154">获取或设置连接字符串中的元数据位置。</span><span class="sxs-lookup"><span data-stu-id="002bd-154">Gets or sets the metadata locations in the connection string.</span></span></summary>
        <value><span data-ttu-id="002bd-155">连接字符串中的元数据位置。</span><span class="sxs-lookup"><span data-stu-id="002bd-155">The metadata locations in the connection string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="002bd-156">有关有效的关键字/值语法，请参见 <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>。</span><span class="sxs-lookup"><span data-stu-id="002bd-156">For valid keyword/value syntax, see <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnectionStringBuilder.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Data.EntityClient.EntityConnectionStringBuilder.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DisplayName("Name")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DisplayName("Name")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="002bd-157">获取或设置配置文件中定义的节名称。</span><span class="sxs-lookup"><span data-stu-id="002bd-157">Gets or sets the name of a section as defined in a configuration file.</span></span></summary>
        <value><span data-ttu-id="002bd-158">配置文件中的节名称。</span><span class="sxs-lookup"><span data-stu-id="002bd-158">The name of a section in a configuration file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="002bd-159">有关有效的关键字/值语法，请参见 <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>。</span><span class="sxs-lookup"><span data-stu-id="002bd-159">For valid keyword/value syntax, see <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-strings"><span data-ttu-id="002bd-160">连接字符串</span><span class="sxs-lookup"><span data-stu-id="002bd-160">Connection Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public string Provider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Provider" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnectionStringBuilder.Provider" />
      <MemberSignature Language="VB.NET" Value="Public Property Provider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Provider { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Provider : string with get, set" Usage="System.Data.EntityClient.EntityConnectionStringBuilder.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DisplayName("Provider")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DisplayName("Provider")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="002bd-161">获取或设置连接字符串中的基础 .NET Framework 数据提供程序的名称。</span><span class="sxs-lookup"><span data-stu-id="002bd-161">Gets or sets the name of the underlying .NET Framework data provider in the connection string.</span></span></summary>
        <value><span data-ttu-id="002bd-162">基础 .NET Framework 数据提供程序的固定名称。</span><span class="sxs-lookup"><span data-stu-id="002bd-162">The invariant name of the underlying .NET Framework data provider.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="002bd-163">固定的提供程序名称可用于检索基础提供程序的 <xref:System.Data.Common.DbProviderFactory> 对象。</span><span class="sxs-lookup"><span data-stu-id="002bd-163">The invariant provider name is used retrieve the <xref:System.Data.Common.DbProviderFactory> object for the underlying provider.</span></span>

 <span data-ttu-id="002bd-164">有关有效的关键字/值语法，请参见 <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>。</span><span class="sxs-lookup"><span data-stu-id="002bd-164">For valid keyword/value syntax, see <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-strings"><span data-ttu-id="002bd-165">连接字符串</span><span class="sxs-lookup"><span data-stu-id="002bd-165">Connection Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ProviderConnectionString">
      <MemberSignature Language="C#" Value="public string ProviderConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnectionStringBuilder.ProviderConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Property ProviderConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProviderConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProviderConnectionString : string with get, set" Usage="System.Data.EntityClient.EntityConnectionStringBuilder.ProviderConnectionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DisplayName("Provider Connection String")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DisplayName("Provider Connection String")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="002bd-166">获取或设置提供程序特定的内部连接字符串。</span><span class="sxs-lookup"><span data-stu-id="002bd-166">Gets or sets the inner, provider-specific connection string.</span></span></summary>
        <value><span data-ttu-id="002bd-167">提供程序特定的内部连接字符串。</span><span class="sxs-lookup"><span data-stu-id="002bd-167">The inner, provider-specific connection string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="002bd-168">设置提供程序特定的连接字符串之前，将不对其关键字/值对的有效性进行检查。</span><span class="sxs-lookup"><span data-stu-id="002bd-168">The provider-specific connection string is not checked for valid keyword/value pairs before it is set.</span></span> <span data-ttu-id="002bd-169">开发人员可以使用强类型连接字符串生成器类或 <xref:System.Data.Common.DbConnectionStringBuilder> 类创建连接字符串。</span><span class="sxs-lookup"><span data-stu-id="002bd-169">Developers can create connection strings by using either a strongly typed connection string builder class, or they can use the <xref:System.Data.Common.DbConnectionStringBuilder> class.</span></span> <span data-ttu-id="002bd-170"><xref:System.Data.Common.DbConnectionStringBuilder> 不会对关键字/值对的有效性进行检查。</span><span class="sxs-lookup"><span data-stu-id="002bd-170">The <xref:System.Data.Common.DbConnectionStringBuilder> performs no checks for valid keyword/value pairs.</span></span> <span data-ttu-id="002bd-171">因此，使用此类可能会创建出无效的连接字符串。</span><span class="sxs-lookup"><span data-stu-id="002bd-171">Therefore, it is possible using this class to create invalid connection strings.</span></span>

 <span data-ttu-id="002bd-172">有关有效的关键字/值语法，请参见 <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>。</span><span class="sxs-lookup"><span data-stu-id="002bd-172">For valid keyword/value syntax, see <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-strings"><span data-ttu-id="002bd-173">连接字符串</span><span class="sxs-lookup"><span data-stu-id="002bd-173">Connection Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public override bool Remove (string keyword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Remove(string keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnectionStringBuilder.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Remove (keyword As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Remove(System::String ^ keyword);" />
      <MemberSignature Language="F#" Value="override this.Remove : string -&gt; bool" Usage="entityConnectionStringBuilder.Remove keyword" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyword"><span data-ttu-id="002bd-174">要从此 <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> 的连接字符串中移除关键字/值对的键。</span><span class="sxs-lookup"><span data-stu-id="002bd-174">The key of the keyword/value pair to be removed from the connection string in this <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />.</span></span></param>
        <summary><span data-ttu-id="002bd-175">从 <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> 实例中移除具有指定的键的项。</span><span class="sxs-lookup"><span data-stu-id="002bd-175">Removes the entry with the specified key from the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> instance.</span></span></summary>
        <returns><span data-ttu-id="002bd-176">如果连接字符串中存在该键且已将其删除，则为 <see langword="true" />；如果不存在该键，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="002bd-176"><see langword="true" /> if the key existed in the connection string and was removed; <see langword="false" /> if the key did not exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="002bd-177">由于 `Remove` 方法返回一个指示成功的值，因此在尝试从实例中移除关键字/值对之前，不需要查找键 <xref:System.Data.EntityClient.EntityConnectionStringBuilder> 。</span><span class="sxs-lookup"><span data-stu-id="002bd-177">Because the `Remove` method returns a value that indicates its success, it is not required to look for a key before trying to remove the keyword/value pair from the <xref:System.Data.EntityClient.EntityConnectionStringBuilder> instance.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="002bd-178"><paramref name="keyword" /> 为 Null（在 Visual Basic 中为 <see langword="Nothing" />）</span><span class="sxs-lookup"><span data-stu-id="002bd-178"><paramref name="keyword" /> is null (<see langword="Nothing" /> in Visual Basic)</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/connection-strings"><span data-ttu-id="002bd-179">连接字符串</span><span class="sxs-lookup"><span data-stu-id="002bd-179">Connection Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public override bool TryGetValue (string keyword, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TryGetValue(string keyword, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnectionStringBuilder.TryGetValue(System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TryGetValue (keyword As String, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool TryGetValue(System::String ^ keyword, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="override this.TryGetValue : string * obj -&gt; bool" Usage="entityConnectionStringBuilder.TryGetValue (keyword, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
        <Parameter Name="value" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyword"><span data-ttu-id="002bd-180">要检索的项的键。</span><span class="sxs-lookup"><span data-stu-id="002bd-180">The key of the item to retrieve.</span></span></param>
        <param name="value"><span data-ttu-id="002bd-181">与 <paramref name="keyword" /> 对应的值。</span><span class="sxs-lookup"><span data-stu-id="002bd-181">The value corresponding to <paramref name="keyword" />.</span></span></param>
        <summary><span data-ttu-id="002bd-182">从此 <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> 中检索与提供的键相对应的值。</span><span class="sxs-lookup"><span data-stu-id="002bd-182">Retrieves a value corresponding to the supplied key from this <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />.</span></span></summary>
        <returns><span data-ttu-id="002bd-183">如果在连接字符串中找到 <paramref name="keyword" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="002bd-183"><see langword="true" /> if <paramref name="keyword" /> was found in the connection string; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="002bd-184"><xref:System.Data.EntityClient.EntityConnectionStringBuilder.TryGetValue%2A> 方法允许开发人员安全地从 <xref:System.Data.EntityClient.EntityConnectionStringBuilder> 中检索值，而无需验证提供的键名是否为有效的键名。</span><span class="sxs-lookup"><span data-stu-id="002bd-184">The <xref:System.Data.EntityClient.EntityConnectionStringBuilder.TryGetValue%2A> method lets developers safely retrieve a value from a <xref:System.Data.EntityClient.EntityConnectionStringBuilder> without having to verify that the supplied key name is a valid key name.</span></span> <span data-ttu-id="002bd-185">`TryGetValue` 向传递了不存在的键时不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="002bd-185">`TryGetValue` does not raise an exception when it is passed a nonexistent key.</span></span> <span data-ttu-id="002bd-186">`TryGetValue`使用不存在的键调用会将值 null (`Nothing`) 参数的 Visual Basic 中 `value` 。</span><span class="sxs-lookup"><span data-stu-id="002bd-186">Calling `TryGetValue` with a nonexistent key puts the value null (`Nothing` in Visual Basic) in the `value` parameter.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="002bd-187"><paramref name="keyword" /> 包含一个 null 值（在 Visual Basic 中为 <see langword="Nothing" />）。</span><span class="sxs-lookup"><span data-stu-id="002bd-187"><paramref name="keyword" /> contains a null value (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
