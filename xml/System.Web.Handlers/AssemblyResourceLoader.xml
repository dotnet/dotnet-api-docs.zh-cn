<Type Name="AssemblyResourceLoader" FullName="System.Web.Handlers.AssemblyResourceLoader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9d5fab7b038cb00c261247d6d3ef780eba6038d8" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86845536" /></Metadata><TypeSignature Language="C#" Value="public sealed class AssemblyResourceLoader : System.Web.IHttpHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AssemblyResourceLoader extends System.Object implements class System.Web.IHttpHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.Handlers.AssemblyResourceLoader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AssemblyResourceLoader&#xA;Implements IHttpHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyResourceLoader sealed : System::Web::IHttpHandler" />
  <TypeSignature Language="F#" Value="type AssemblyResourceLoader = class&#xA;    interface IHttpHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.IHttpHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>提供用于从程序集加载嵌入的资源的 HTTP 处理程序。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Handlers.AssemblyResourceLoader>类是一个 HTTP 处理程序，它使 ASP.NET 的页或控件可以从已编译的 .net 程序集加载嵌入的资源，例如客户端脚本、图像和数据文件。 有关如何在 .NET 程序集中嵌入资源的详细信息，请参阅所用编译器的文档。  
  
 <xref:System.Web.Handlers.AssemblyResourceLoader>处理程序响应由方法生成的 url 发出的请求 <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> 。 在响应请求之前， <xref:System.Web.Handlers.AssemblyResourceLoader> 处理程序确保资源应该直接通过 Web 使用。  
  
 处理程序响应窗体的请求  
  
```  
WebResource.axd?d=<encrypted identifier>&t=<time stamp value>  
```  
  
 其中 `<encrypted identifier>` 唯一标识所请求的 Web 资源， `<time stamp value>` 是请求的程序集的时间戳，以便可以检测到对程序集的更改，并且缓存的资源失效。  
  
 此类支持 ASP.NET 基础结构，不应在代码中直接使用。  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)" />
    <altmember cref="T:System.Web.UI.WebResourceAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyResourceLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Handlers.AssemblyResourceLoader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyResourceLoader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Handlers.AssemblyResourceLoader" /> 类的新实例。 此构造函数支持 ASP.NET 基础结构，不应从代码直接使用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.IHttpHandler.IsReusable">
      <MemberSignature Language="C#" Value="bool System.Web.IHttpHandler.IsReusable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.IHttpHandler.IsReusable" />
      <MemberSignature Language="DocId" Value="P:System.Web.Handlers.AssemblyResourceLoader.System#Web#IHttpHandler#IsReusable" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReusable As Boolean Implements IHttpHandler.IsReusable" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::IHttpHandler::IsReusable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Web.IHttpHandler.IsReusable : bool" Usage="System.Web.IHttpHandler.IsReusable" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.IHttpHandler.IsReusable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示其他请求能否重用 <see cref="T:System.Web.IHttpHandler" /> 实例。</summary>
        <value>在所有情况下均为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式接口成员实现。 它只能在 <xref:System.Web.Handlers.AssemblyResourceLoader> 实例被强制转换为 <xref:System.Web.IHttpHandler> 接口时使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.IHttpHandler.ProcessRequest">
      <MemberSignature Language="C#" Value="void IHttpHandler.ProcessRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.IHttpHandler.ProcessRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Handlers.AssemblyResourceLoader.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Sub ProcessRequest (context As HttpContext) Implements IHttpHandler.ProcessRequest" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.IHttpHandler.ProcessRequest(System::Web::HttpContext ^ context) = System::Web::IHttpHandler::ProcessRequest;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.IHttpHandler.ProcessRequest : System.Web.HttpContext -&gt; unit&#xA;override this.System.Web.IHttpHandler.ProcessRequest : System.Web.HttpContext -&gt; unit" Usage="assemblyResourceLoader.System.Web.IHttpHandler.ProcessRequest context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">请求的上下文。</param>
        <summary>有关此成员的说明，请参见 <see cref="M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式接口成员实现。 它只能在 <xref:System.Web.Handlers.AssemblyResourceLoader> 实例被强制转换为 <xref:System.Web.IHttpHandler> 接口时使用。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Web 资源请求无效。  
  
-或-
  
 未能找到程序集名称。  
  
-或-
  
 未能在程序集中找到资源名称。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
