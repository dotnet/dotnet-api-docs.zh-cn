<Type Name="PeerCollaboration" FullName="System.Net.PeerToPeer.Collaboration.PeerCollaboration">
  <Metadata><Meta Name="ms.openlocfilehash" Value="38edbf0ab2ec142207cb3f4dd0b822dac8cd18dc" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86800335" /></Metadata><TypeSignature Language="C#" Value="public static class PeerCollaboration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit PeerCollaboration extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerCollaboration" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerCollaboration abstract sealed" />
  <TypeSignature Language="F#" Value="type PeerCollaboration = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>与对等方协作基础结构进行交互。 很多核心协作方案都是从此类着手的。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此类是静态类-它是密封的，并且没有公共构造函数。 它用于包含和管理已接受到协作会话邀请的对等方的应用程序、对象和状态信息。 就同级、对象和应用程序而言，PeerCollaboration 类提供三个访问器，一个用于每个集合，作为接口或连接点，适用于计算机上发生的任何其他情况。  此类不能被继承;如果将此密封类指定为基类，则会发生编译时错误。  
  
 此类中的方法和属性可用于：  
  
-   启动和管理协作应用程序  
  
-   注册并删除应用程序和协作对象 (如证书、图片、头像和文本说明)   
  
-   邀请对等节点加入协作会话，包括将通过 Internet 识别的项目（如作用域和对象）  
  
-   允许对等方 <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A> 和 <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut%2A> 协作基础结构进行管理，管理联系人列表，或相互发布联系人  
  
-   利用 <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SynchronizingObject%2A> 属性和事件来协调异步应用程序通信，特别是对名称、状态、应用程序或其他对象的更改。  
  
 "链接-本地云"、"调用对等方的子网" 和 "网络邻居作用域" 是同义词术语。 "Internet 范围" 和 "无服务器状态" 是同义词。 站点本地 <xref:System.Net.PeerToPeer.PnrpScope> 在协作命名空间中没有等效项。  
  
 使用此类中的每个方法或属性都需要 <xref:System.Security.Permissions.PermissionState> 的 <xref:System.Security.Permissions.PermissionState.Unrestricted> 。 此状态是在对等方协作会话开始时创建的。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ApplicationLaunchInfo">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo ApplicationLaunchInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo ApplicationLaunchInfo" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.ApplicationLaunchInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationLaunchInfo As PeerApplicationLaunchInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::PeerToPeer::Collaboration::PeerApplicationLaunchInfo ^ ApplicationLaunchInfo { System::Net::PeerToPeer::Collaboration::PeerApplicationLaunchInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationLaunchInfo : System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.ApplicationLaunchInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" /> 对象，该对象包含应用程序在远程对等方的协作请求下启动时所需的信息。</summary>
        <value>如果应用程序是在邀请下启动的，将返回一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" /> 对象（其中既包含有关发送应用程序邀请的对等方的信息，也包含邀请本身）；否则将返回 <see langword="null" />。  此属性的默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性在启动后可由识别协作的 <xref:System.Net.PeerToPeer.Collaboration.PeerApplication> 实例使用，以确定它是否因远程对等方的协作请求而开始。  调用应用程序应检查 <xref:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.Data%2A> 和 <xref:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.Message%2A> 属性以获取有关邀请请求的详细信息。  
  
 对此属性的访问需要 <xref:System.Security.Permissions.PermissionState> 的为 <xref:System.Security.Permissions.PermissionState.Unrestricted> 。 此状态是在 <xref:System.Net.PeerToPeer.Collaboration.Peer> 协作会话开始时创建的。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalApplicationChanged" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      </Docs>
    </Member>
    <Member MemberName="ContactManager">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.ContactManager ContactManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.PeerToPeer.Collaboration.ContactManager ContactManager" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.ContactManager" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ContactManager As ContactManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::PeerToPeer::Collaboration::ContactManager ^ ContactManager { System::Net::PeerToPeer::Collaboration::ContactManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContactManager : System.Net.PeerToPeer.Collaboration.ContactManager" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.ContactManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.ContactManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取包含远程对等方的所有 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象的持久性存储区。</summary>
        <value>包含远程对等方的所有对等联系人对象的 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 对象。 此属性的默认值为 <see langword="null" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
      </Docs>
    </Member>
    <Member MemberName="DeleteObject">
      <MemberSignature Language="C#" Value="public static void DeleteObject (System.Net.PeerToPeer.Collaboration.PeerObject peerObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteObject(class System.Net.PeerToPeer.Collaboration.PeerObject peerObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.DeleteObject(System.Net.PeerToPeer.Collaboration.PeerObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeleteObject (peerObject As PeerObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteObject(System::Net::PeerToPeer::Collaboration::PeerObject ^ peerObject);" />
      <MemberSignature Language="F#" Value="static member DeleteObject : System.Net.PeerToPeer.Collaboration.PeerObject -&gt; unit" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.DeleteObject peerObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerObject" Type="System.Net.PeerToPeer.Collaboration.PeerObject" />
      </Parameters>
      <Docs>
        <param name="peerObject">要注销的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />。</param>
        <summary>注销与调用对等相关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当对等对象的引用不再有效时，将自动取消注册对等对象 (从对等方协作基础结构中删除) 。  如果调用方未维护对该对象的引用，则将从对等方协作基础结构中注销该对象。  或者，可以使用此方法手动取消注册对象。  
  
 调用此方法需要 <xref:System.Security.Permissions.PermissionState> 的 <xref:System.Security.Permissions.PermissionState.Unrestricted> 。 此状态是在 <xref:System.Net.PeerToPeer.Collaboration.Peer> 协作会话开始时创建的。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="peerObject" /> 参数不能为 <see langword="null" />。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">无法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.DeleteObject(System.Net.PeerToPeer.Collaboration.PeerObject)" /> 操作。</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.UnregisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLocalRegisteredApplications">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>获取在本地计算机上注册的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象的集合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用方必须通过 <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A> 方法或在使用此方法之前登录到对等方协作基础结构。  
  
 对此属性的访问需要 <xref:System.Security.Permissions.PermissionState> 的为 <xref:System.Security.Permissions.PermissionState.Unrestricted> 。 此状态是在 <xref:System.Net.PeerToPeer.Collaboration.Peer> 协作会话开始时创建的。  
  
   
  
## Examples  
 下面的示例代码演示如何检索在协作基础结构中注册的应用程序的集合：  
  
 [!code-csharp[NCLPNRPContacts#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLocalRegisteredApplications">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetLocalRegisteredApplications ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetLocalRegisteredApplications() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLocalRegisteredApplications () As PeerApplicationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::PeerToPeer::Collaboration::PeerApplicationCollection ^ GetLocalRegisteredApplications();" />
      <MemberSignature Language="F#" Value="static member GetLocalRegisteredApplications : unit -&gt; System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取在本地计算机上注册的所有 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象。</summary>
        <returns>一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" />，其中包含在本地计算机上注册的所有应用程序。 如果未找到应用程序，则返回一个大小为零 (0) 的集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用方在 <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A> 使用此方法之前，必须通过方法登录到对等方协作基础结构。  
  
 对此属性的访问需要 <xref:System.Security.Permissions.PermissionState> 的为 <xref:System.Security.Permissions.PermissionState.Unrestricted> 。 此状态是在 <xref:System.Net.PeerToPeer.Collaboration.Peer> 协作会话开始时创建的。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">此方法在尝试向此对等方枚举已注册的应用程序时返回了无效的值。 请确保所有应用程序都具有有效的注册表值。</exception>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" />
      </Docs>
    </Member>
    <Member MemberName="GetLocalRegisteredApplications">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetLocalRegisteredApplications (System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetLocalRegisteredApplications(valuetype System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications(System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLocalRegisteredApplications (type As PeerApplicationRegistrationType) As PeerApplicationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::PeerToPeer::Collaboration::PeerApplicationCollection ^ GetLocalRegisteredApplications(System::Net::PeerToPeer::Collaboration::PeerApplicationRegistrationType type);" />
      <MemberSignature Language="F#" Value="static member GetLocalRegisteredApplications : System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType -&gt; System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" />
      </Parameters>
      <Docs>
        <param name="type">要返回的指定应用程序的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" />。</param>
        <summary>获取在本地计算机上为指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 注册的所有 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" /> 对象的集合。</summary>
        <returns>一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" />，其中包含在本地计算机上注册且属于指定 <paramref name="type" /> 的所有应用程序。 如果未找到应用程序，则返回一个大小为零 (0) 的集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用方在 <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A> 使用此方法之前，必须通过方法登录到对等方协作基础结构。  
  
 对此方法的访问需要 <xref:System.Security.Permissions.PermissionState> 的为 <xref:System.Security.Permissions.PermissionState.Unrestricted> 。 此状态是在 <xref:System.Net.PeerToPeer.Collaboration.Peer> 协作会话开始时创建的。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="type" /> 参数未设置为 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" /> 枚举中的已知值。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">此方法在尝试向此对等方枚举已注册的应用程序时返回了无效的值。 请确保所有应用程序都具有有效的注册表值。</exception>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe" />
      </Docs>
    </Member>
    <Member MemberName="GetLocalSetObjects">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetLocalSetObjects ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetLocalSetObjects() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLocalSetObjects () As PeerObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::PeerToPeer::Collaboration::PeerObjectCollection ^ GetLocalSetObjects();" />
      <MemberSignature Language="F#" Value="static member GetLocalSetObjects : unit -&gt; System.Net.PeerToPeer.Collaboration.PeerObjectCollection" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取调用对等方在此计算机的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 基础结构中注册的所有 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 实例。</summary>
        <returns>一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" />，其中包含调用对等方在本地计算机的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 基础结构中注册的所有 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 实例。  
  
如果未在本地计算机上发现已注册的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例，将返回一个大小为零 (0) 的集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对此属性的访问需要 <xref:System.Security.Permissions.PermissionState> 的为 <xref:System.Security.Permissions.PermissionState.Unrestricted> 。 此状态是在 <xref:System.Net.PeerToPeer.Collaboration.Peer> 协作会话开始时创建的。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">此方法在尝试枚举所有可用的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例时返回了无效的值。</exception>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SetObject(System.Net.PeerToPeer.Collaboration.PeerObject)" />
      </Docs>
    </Member>
    <Member MemberName="GetPeersNearMe">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerNearMeCollection GetPeersNearMe ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.PeerToPeer.Collaboration.PeerNearMeCollection GetPeersNearMe() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPeersNearMe () As PeerNearMeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::PeerToPeer::Collaboration::PeerNearMeCollection ^ GetPeersNearMe();" />
      <MemberSignature Language="F#" Value="static member GetPeersNearMe : unit -&gt; System.Net.PeerToPeer.Collaboration.PeerNearMeCollection" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerNearMeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回一个集合，其中包含当前在调用对等方的网络子网中登录的所有 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 终结点。</summary>
        <returns>一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection" />，其中包含当前在“网络邻居”范围中登录的所有 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 终结点。  
  
如果未在子网上发现对等方，将返回一个大小为零 (0) 的集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection>根据网络拓扑和延迟，通过此方法完全填充的返回可能需要一个不确定的时间量。  
  
 调用此方法需要 <xref:System.Security.Permissions.PermissionState> 的 <xref:System.Security.Permissions.PermissionState.Unrestricted> 。 此状态是在 <xref:System.Net.PeerToPeer.Collaboration.Peer> 协作会话开始时创建的。  
  
   
  
## Examples  
 下面的代码示例演示如何将 PeersNearMe 检索为 PeerNearMeCollection：  
  
 [!code-csharp[NCLPNRPContacts#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">该对等方尚未登录“网络邻居”范围。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">此方法在尝试枚举所有已知的网络邻居终结点时返回了无效的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="LocalApplicationChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; LocalApplicationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; LocalApplicationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalApplicationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event LocalApplicationChanged As EventHandler(Of ApplicationChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Net::PeerToPeer::Collaboration::ApplicationChangedEventArgs ^&gt; ^ LocalApplicationChanged;" />
      <MemberSignature Language="F#" Value="member this.LocalApplicationChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; " Usage="member this.LocalApplicationChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[add: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;add: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[remove: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;remove: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当本地主机上的本地对等方的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 中有 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> 发生更改时引发。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerApplication.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="LocalEndPointName">
      <MemberSignature Language="C#" Value="public static string LocalEndPointName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string LocalEndPointName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalEndPointName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property LocalEndPointName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ LocalEndPointName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LocalEndPointName : string with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalEndPointName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与调用对等方关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 的名称。</summary>
        <value>一个 <see cref="T:System.String" />，其中包含与调用对等方的终结点（作为 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Name" /> 属性提供）关联的名称。 此属性的默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对此属性的访问需要 <xref:System.Security.Permissions.PermissionState> 的为 <xref:System.Security.Permissions.PermissionState.Unrestricted> 。 此状态是在 <xref:System.Net.PeerToPeer.Collaboration.Peer> 协作会话开始时创建的。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">无法设置 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalEndPointName" />。</exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermission" />
      </Docs>
    </Member>
    <Member MemberName="LocalNameChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt; LocalNameChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt; LocalNameChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalNameChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event LocalNameChanged As EventHandler(Of NameChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Net::PeerToPeer::Collaboration::NameChangedEventArgs ^&gt; ^ LocalNameChanged;" />
      <MemberSignature Language="F#" Value="member this.LocalNameChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt; " Usage="member this.LocalNameChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[add: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;add: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[remove: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;remove: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当本地对等方所在的本地主机上的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 名称更改时引发。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerEndPoint.NameChanged" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.OnNameChanged(System.Net.PeerToPeer.Collaboration.NameChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="LocalObjectChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; LocalObjectChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; LocalObjectChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalObjectChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event LocalObjectChanged As EventHandler(Of ObjectChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Net::PeerToPeer::Collaboration::ObjectChangedEventArgs ^&gt; ^ LocalObjectChanged;" />
      <MemberSignature Language="F#" Value="member this.LocalObjectChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; " Usage="member this.LocalObjectChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[add: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;add: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[remove: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;remove: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在本地主机上，本地对等方的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 中有一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> 已发生更改。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerObject.ObjectChanged" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerObject.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="LocalPresenceChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; LocalPresenceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; LocalPresenceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event LocalPresenceChanged As EventHandler(Of PresenceChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Net::PeerToPeer::Collaboration::PresenceChangedEventArgs ^&gt; ^ LocalPresenceChanged;" />
      <MemberSignature Language="F#" Value="member this.LocalPresenceChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; " Usage="member this.LocalPresenceChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[add: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;add: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[remove: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;remove: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在本地主机上，本地对等方的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> 已更改。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged" />
      </Docs>
    </Member>
    <Member MemberName="LocalPresenceInfo">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerPresenceInfo LocalPresenceInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.PeerToPeer.Collaboration.PeerPresenceInfo LocalPresenceInfo" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property LocalPresenceInfo As PeerPresenceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::PeerToPeer::Collaboration::PeerPresenceInfo ^ LocalPresenceInfo { System::Net::PeerToPeer::Collaboration::PeerPresenceInfo ^ get(); void set(System::Net::PeerToPeer::Collaboration::PeerPresenceInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LocalPresenceInfo : System.Net.PeerToPeer.Collaboration.PeerPresenceInfo with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerPresenceInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置调用对等方在 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 基础结构中的状态。</summary>
        <value><see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" />，其中包含为 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 会话注册的调用对等方的状态信息。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法需要 <xref:System.Security.Permissions.PermissionState> 的 <xref:System.Security.Permissions.PermissionState.Unrestricted> 。 此状态是在 <xref:System.Net.PeerToPeer.Collaboration.Peer> 协作会话开始时创建的。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> 无法指定 <see langword="null" /></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" /> 处于脱机状态 
-   无法设置 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /></exception>
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceChanged" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.ContactManager.PresenceChanged" />
      </Docs>
    </Member>
    <Member MemberName="RegisterApplication">
      <MemberSignature Language="C#" Value="public static void RegisterApplication (System.Net.PeerToPeer.Collaboration.PeerApplication application, System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterApplication(class System.Net.PeerToPeer.Collaboration.PeerApplication application, valuetype System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterApplication (application As PeerApplication, type As PeerApplicationRegistrationType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterApplication(System::Net::PeerToPeer::Collaboration::PeerApplication ^ application, System::Net::PeerToPeer::Collaboration::PeerApplicationRegistrationType type);" />
      <MemberSignature Language="F#" Value="static member RegisterApplication : System.Net.PeerToPeer.Collaboration.PeerApplication * System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType -&gt; unit" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication (application, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="application" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="type" Type="System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" />
      </Parameters>
      <Docs>
        <param name="application"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />，要为其在相关范围（全局、本地和链接-本地）内注册调用对等。</param>
        <param name="type">要执行的注册类型。  应用程序可以仅针对调用对等注册，或针对使用计算机的所有对等注册。</param>
        <summary>注册指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />，可用于通过调用对等进行协作会话。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法之前，调用对等方需要通过方法登录到对等方协作基础结构 <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A> 。  
  
 对此方法的访问需要 <xref:System.Security.Permissions.PermissionState> 的为 <xref:System.Security.Permissions.PermissionState.Unrestricted> 。 此状态是在 <xref:System.Net.PeerToPeer.Collaboration.Peer> 协作会话开始时创建的。  
  
   
  
## Examples  
 下面的代码示例演示如何将应用程序注册到协作基础结构：  
  
 [!code-csharp[NCLPNRPContacts#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">-   传递给 <paramref name="application" /> 的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象上的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Path" /> 属性为 <see langword="null" />。  
  
-   所提供的对等应用程序实例与某个已注册的应用程序具有相同的全局唯一 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" />。  必须先注销现有注册，然后才能向提供的标识符注册新的应用程序。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="application" /> 和 <paramref name="type" /> 参数不能为 <see langword="null" />。  必须指定这两个参数。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">未将类型参数设置为 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" /> 枚举中的已知值。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">在调用方登录到基础结构前，无法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" /> 操作。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetObject">
      <MemberSignature Language="C#" Value="public static void SetObject (System.Net.PeerToPeer.Collaboration.PeerObject peerObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetObject(class System.Net.PeerToPeer.Collaboration.PeerObject peerObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SetObject(System.Net.PeerToPeer.Collaboration.PeerObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetObject (peerObject As PeerObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetObject(System::Net::PeerToPeer::Collaboration::PeerObject ^ peerObject);" />
      <MemberSignature Language="F#" Value="static member SetObject : System.Net.PeerToPeer.Collaboration.PeerObject -&gt; unit" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.SetObject peerObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerObject" Type="System.Net.PeerToPeer.Collaboration.PeerObject" />
      </Parameters>
      <Docs>
        <param name="peerObject">要注册的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />。</param>
        <summary>注册与调用对等相关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法允许远程对等方查询对象已注册到的范围。 如果以前已注册过该对象，则此方法将更新其注册。 如果已注册的对象超出范围，则可以通过方法进行检索 <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects%2A> 。  
  
 数据部分的大小 <xref:System.Net.PeerToPeer.Collaboration.PeerObject> 必须小于或等于16384字节。  
  
 对此方法的访问需要 <xref:System.Security.Permissions.PermissionState> 的为 <xref:System.Security.Permissions.PermissionState.Unrestricted> 。 此状态是在 <xref:System.Net.PeerToPeer.Collaboration.Peer> 协作会话开始时创建的。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">对象已注册</exception>
        <exception cref="T:System.ArgumentNullException">-   <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 不能为 <see langword="null" />。  
  
-   <see cref="P:System.Net.PeerToPeer.Collaboration.PeerObject.Id" /> 不能为 <see langword="null" />。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">未能完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SetObject(System.Net.PeerToPeer.Collaboration.PeerObject)" /> 操作。</exception>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe" />
      </Docs>
    </Member>
    <Member MemberName="SignIn">
      <MemberSignature Language="C#" Value="public static void SignIn (System.Net.PeerToPeer.Collaboration.PeerScope peerScope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SignIn(valuetype System.Net.PeerToPeer.Collaboration.PeerScope peerScope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn(System.Net.PeerToPeer.Collaboration.PeerScope)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SignIn (peerScope As PeerScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SignIn(System::Net::PeerToPeer::Collaboration::PeerScope peerScope);" />
      <MemberSignature Language="F#" Value="static member SignIn : System.Net.PeerToPeer.Collaboration.PeerScope -&gt; unit" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn peerScope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerScope" Type="System.Net.PeerToPeer.Collaboration.PeerScope" />
      </Parameters>
      <Docs>
        <param name="peerScope">对等方加入 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 活动使用的范围。</param>
        <summary>让对等方以指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" /> 登录协作基础结构。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 显示名称不一定是唯一的。 用户应在接受协作邀请之前，通过电子邮件、电话或人员来验证用户的身份。  
  
 此函数将用户登录到协作基础结构。  
  
 对此方法的访问需要 <xref:System.Security.Permissions.PermissionState> 的为 <xref:System.Security.Permissions.PermissionState.Unrestricted> 。 此状态是在 <xref:System.Net.PeerToPeer.Collaboration.Peer> 协作会话开始时创建的。  
  
   
  
## Examples  
 下面的代码示例演示如何将用户登录到协作基础结构。  
  
 [!code-csharp[NCLPNRPContacts#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">将 <paramref name="peerScope" /> 设置为 <see cref="F:System.Net.PeerToPeer.Collaboration.PeerScope.None" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="peerScope" /> 参数包含无效枚举值。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">未能完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn(System.Net.PeerToPeer.Collaboration.PeerScope)" /> 操作。</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignInScope" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut(System.Net.PeerToPeer.Collaboration.PeerScope)" />
      </Docs>
    </Member>
    <Member MemberName="SignInScope">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerScope SignInScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Net.PeerToPeer.Collaboration.PeerScope SignInScope" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignInScope" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SignInScope As PeerScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::PeerToPeer::Collaboration::PeerScope SignInScope { System::Net::PeerToPeer::Collaboration::PeerScope get(); };" />
      <MemberSignature Language="F#" Value="member this.SignInScope : System.Net.PeerToPeer.Collaboration.PeerScope" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignInScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取调用对等方可在其中发布状态、功能和对象信息的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />。</summary>
        <value>一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" /> 对象，指定调用对等方将参与的范围。 此属性的默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对等主机或主机应用程序可以使用不同的范围限制或区分对等互连活动。  
  
 调用对等方应检查此方法的返回值，以确定它可以成功执行的其他操作。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpScope" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn(System.Net.PeerToPeer.Collaboration.PeerScope)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut(System.Net.PeerToPeer.Collaboration.PeerScope)" />
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public static void SignOut (System.Net.PeerToPeer.Collaboration.PeerScope peerScope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SignOut(valuetype System.Net.PeerToPeer.Collaboration.PeerScope peerScope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut(System.Net.PeerToPeer.Collaboration.PeerScope)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SignOut (peerScope As PeerScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SignOut(System::Net::PeerToPeer::Collaboration::PeerScope peerScope);" />
      <MemberSignature Language="F#" Value="static member SignOut : System.Net.PeerToPeer.Collaboration.PeerScope -&gt; unit" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut peerScope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerScope" Type="System.Net.PeerToPeer.Collaboration.PeerScope" />
      </Parameters>
      <Docs>
        <param name="peerScope">由 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" /> 指定的范围枚举。</param>
        <summary>从指定范围注销对等方。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法不是特定于应用程序的操作，注销可能会影响当前正在运行的其他应用程序。 如果用户尚未登录到指定的范围，则调用此方法会导致不会操作。  
  
 当用户注销网络邻居时，会从 <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration> 终结点对象集删除其已发布信息。  这包括 <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalEndPointName%2A> 和 <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceInfo%2A> ，以及调用对等方注册到协作基础结构中的任何标识对象。 由于此信息已删除，因此它不再可用于远程对等机或对等主机进行协作。 从类的角度来看 <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration> ，与受信任的联系人共享相同的信息是不相关的; 使用 <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration> 类不会影响保存此信息的其他对象（如远程对等对象） <xref:System.Net.PeerToPeer.Collaboration.ContactManager> 。 同样，从中删除对等方 <xref:System.Net.PeerToPeer.Collaboration.ContactManager> 不会影响其在协作应用程序中的存在性; 其他联系人仍能够查看其状态，并与之协作。  
  
 调用此方法需要 <xref:System.Security.Permissions.PermissionState> 的 <xref:System.Security.Permissions.PermissionState.Unrestricted> 。 此状态是在 <xref:System.Net.PeerToPeer.Collaboration.Peer> 协作会话开始时创建的。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="peerScope" /> 参数包含无效枚举值。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">未能完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut(System.Net.PeerToPeer.Collaboration.PeerScope)" /> 操作。</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn(System.Net.PeerToPeer.Collaboration.PeerScope)" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignInScope" />
      </Docs>
    </Member>
    <Member MemberName="SynchronizingObject">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ComponentModel.ISynchronizeInvoke SynchronizingObject" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SynchronizingObject" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property SynchronizingObject As ISynchronizeInvoke" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ComponentModel::ISynchronizeInvoke ^ SynchronizingObject { System::ComponentModel::ISynchronizeInvoke ^ get(); void set(System::ComponentModel::ISynchronizeInvoke ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizingObject : System.ComponentModel.ISynchronizeInvoke with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.SynchronizingObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Description("SynchronizingObject")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Description("SynchronizingObject")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISynchronizeInvoke</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置所有事件处理程序的事件处理程序回调对象。</summary>
        <value>一个已实现 <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> 的对象，将用于应用程序线程同步。  
  
此属性的默认值为 <see langword="null" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalObjectChanged" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
      </Docs>
    </Member>
    <Member MemberName="UnregisterApplication">
      <MemberSignature Language="C#" Value="public static void UnregisterApplication (System.Net.PeerToPeer.Collaboration.PeerApplication application, System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UnregisterApplication(class System.Net.PeerToPeer.Collaboration.PeerApplication application, valuetype System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.UnregisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UnregisterApplication (application As PeerApplication, type As PeerApplicationRegistrationType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UnregisterApplication(System::Net::PeerToPeer::Collaboration::PeerApplication ^ application, System::Net::PeerToPeer::Collaboration::PeerApplicationRegistrationType type);" />
      <MemberSignature Language="F#" Value="static member UnregisterApplication : System.Net.PeerToPeer.Collaboration.PeerApplication * System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType -&gt; unit" Usage="System.Net.PeerToPeer.Collaboration.PeerCollaboration.UnregisterApplication (application, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="application" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="type" Type="System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" />
      </Parameters>
      <Docs>
        <param name="application">要为调用对等注销的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。</param>
        <param name="type">要为调用对等或计算机上存在的所有对等执行的注销类型。</param>
        <summary>从 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 基础结构中注销指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 取消注册将 <xref:System.Net.PeerToPeer.Collaboration.PeerApplication> 停止调用对等方接收它的协作邀请。 如果正在注销的应用程序以前未注册，则这是一个无操作。  
  
 调用此方法需要 <xref:System.Security.Permissions.PermissionState> 的 <xref:System.Security.Permissions.PermissionState.Unrestricted> 。 此状态是在 <xref:System.Net.PeerToPeer.Collaboration.Peer> 协作会话开始时创建的。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定应用程序的全局唯一 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> 不存在或为空。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="application" /> 或 <paramref name="type" /> 参数设置为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">未将 <paramref name="type" /> 参数设置为 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" /> 中的已知值。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">未能完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.UnregisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" /> 操作。</exception>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      </Docs>
    </Member>
  </Members>
</Type>
