<Type Name="ContactManager" FullName="System.Net.PeerToPeer.Collaboration.ContactManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="34ad8aa13af1a29b646a3abce3816dc285b62d9d" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86800411" /></Metadata><TypeSignature Language="C#" Value="public sealed class ContactManager : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ContactManager extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ContactManager&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContactManager sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type ContactManager = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="f6b66-101">表示持久保存在 Windows 通讯簿中的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="f6b66-101">Represents a collection of <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> objects which persist in a Windows Address Book.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6b66-102">此类没有公共构造函数，因为该类返回了对它的引用 <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration> 。</span><span class="sxs-lookup"><span data-stu-id="f6b66-102">This class has no public constructors, since a reference to it is returned by the <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration> class.</span></span>  
  
 <span data-ttu-id="f6b66-103">与管理相关的通讯簿 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> 包括与主机对等机和远程对等方关联的通讯簿。</span><span class="sxs-lookup"><span data-stu-id="f6b66-103">Address books that are associated with <xref:System.Net.PeerToPeer.Collaboration.PeerContact> management include those associated with the host peer and a remote peer.</span></span>  <span data-ttu-id="f6b66-104">这两台计算机可能会与其他对等方协作;当对等节点在远程对等方（而不是主机对等方）本地时，可以将其添加到主机对等方的中 <xref:System.Net.PeerToPeer.Collaboration.ContactManager> 。</span><span class="sxs-lookup"><span data-stu-id="f6b66-104">Either computer may collaborate with other peers; when a peer is local to the remote peer but not the host peer, it can be added to the <xref:System.Net.PeerToPeer.Collaboration.ContactManager> of the host peer.</span></span> <span data-ttu-id="f6b66-105">类上的某些操作（ <xref:System.Net.PeerToPeer.Collaboration.ContactManager> 如 <xref:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact%2A> 和 <xref:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact%2A> ）与在远程对等方的 Windows 通讯簿上执行的关联操作相关联。</span><span class="sxs-lookup"><span data-stu-id="f6b66-105">Certain operations on the <xref:System.Net.PeerToPeer.Collaboration.ContactManager> class, such as <xref:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact%2A> and <xref:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact%2A>, correlate to the associated operations being performed on the Windows Address book of the remote peer.</span></span>  
  
 <span data-ttu-id="f6b66-106">主机对等方有权访问此永久性存储以获取 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> 信息，这些信息可与对等方打算参与的应用程序相关联。</span><span class="sxs-lookup"><span data-stu-id="f6b66-106">The host peer has access to this persistent storage for <xref:System.Net.PeerToPeer.Collaboration.PeerContact> information, which can be associated with the applications in which a peer intends to participate.</span></span> <span data-ttu-id="f6b66-107"><xref:System.Net.PeerToPeer.Collaboration.PeerApplication>可以将自身标识为 <xref:System.Net.PeerToPeer.Collaboration.ContactManager> 计算机上的永久存储区的用户。</span><span class="sxs-lookup"><span data-stu-id="f6b66-107">A <xref:System.Net.PeerToPeer.Collaboration.PeerApplication> can identify itself as a user of a <xref:System.Net.PeerToPeer.Collaboration.ContactManager> persistent store on a computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6b66-108">下面的示例代码演示如何枚举 <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> ，并将其作为添加 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> 到本地 <xref:System.Net.PeerToPeer.Collaboration.ContactManager> ：</span><span class="sxs-lookup"><span data-stu-id="f6b66-108">The following example code illustrates how to enumerate a <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> and add it as a <xref:System.Net.PeerToPeer.Collaboration.PeerContact> to the local <xref:System.Net.PeerToPeer.Collaboration.ContactManager>:</span></span>  
  
 [!code-csharp[NCLPNRPContacts#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact(System.Net.PeerToPeer.PeerName)" />
    <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)" />
    <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
  </Docs>
  <Members>
    <Member MemberName="AddContact">
      <MemberSignature Language="C#" Value="public void AddContact (System.Net.PeerToPeer.Collaboration.PeerContact peerContact);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddContact(class System.Net.PeerToPeer.Collaboration.PeerContact peerContact) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddContact (peerContact As PeerContact)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddContact(System::Net::PeerToPeer::Collaboration::PeerContact ^ peerContact);" />
      <MemberSignature Language="F#" Value="member this.AddContact : System.Net.PeerToPeer.Collaboration.PeerContact -&gt; unit" Usage="contactManager.AddContact peerContact" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerContact" Type="System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Parameters>
      <Docs>
        <param name="peerContact"><span data-ttu-id="f6b66-109">要添加到 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="f6b66-109">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance to add to <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />.</span></span></param>
        <summary><span data-ttu-id="f6b66-110">将指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 添加到本地对等的 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />。</span><span class="sxs-lookup"><span data-stu-id="f6b66-110">Adds the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> to the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> of the local peer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6b66-111">调用此方法需要 <xref:System.Security.Permissions.PermissionState> 的 <xref:System.Security.Permissions.PermissionState.Unrestricted> 。</span><span class="sxs-lookup"><span data-stu-id="f6b66-111">Calling this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6b66-112">下面的示例代码演示如何枚举 <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> ，并将其作为添加 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> 到本地 <xref:System.Net.PeerToPeer.Collaboration.ContactManager> ：</span><span class="sxs-lookup"><span data-stu-id="f6b66-112">The following example code illustrates how to enumerate a <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> and add it as a <xref:System.Net.PeerToPeer.Collaboration.PeerContact> to the local <xref:System.Net.PeerToPeer.Collaboration.ContactManager>:</span></span>  
  
 [!code-csharp[NCLPNRPContacts#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f6b66-113"><paramref name="peerContact" /> 指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 已存在。</span><span class="sxs-lookup"><span data-stu-id="f6b66-113">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> specified by <paramref name="peerContact" /> already exists.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f6b66-114"><paramref name="peerContact" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f6b66-114"><paramref name="peerContact" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f6b66-115">已释放指定的 <paramref name="peerContact" />。</span><span class="sxs-lookup"><span data-stu-id="f6b66-115">The specified <paramref name="peerContact" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="f6b66-116">-   <paramref name="peerContact" /> 指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 无法从其序列化 XML 格式重新构成。</span><span class="sxs-lookup"><span data-stu-id="f6b66-116">-   The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> specified by <paramref name="peerContact" /> could not be reconstituted from its serialized XML format.</span></span>  
  
<span data-ttu-id="f6b66-117">-   无法将本地对等添加到正在构造的 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="f6b66-117">-   Unable to add the local peer to the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> instance being constructed.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; ApplicationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; ApplicationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.ContactManager.ApplicationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ApplicationChanged As EventHandler(Of ApplicationChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::ApplicationChangedEventArgs ^&gt; ^ ApplicationChanged;" />
      <MemberSignature Language="F#" Value="member this.ApplicationChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; " Usage="member this.ApplicationChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[add: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;add: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[remove: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;remove: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6b66-118">每当与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 中的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 发生更改时引发。</span><span class="sxs-lookup"><span data-stu-id="f6b66-118">Raised whenever a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> associated with a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> in the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6b66-119">此方法仅返回由调用对等方的联系人发布的应用程序。</span><span class="sxs-lookup"><span data-stu-id="f6b66-119">This method only returns applications published by contacts of the calling peer.</span></span>  
  
 <span data-ttu-id="f6b66-120">在引发此事件之前，远程对等方的当前用户必须订阅远程对等方的协作事件。</span><span class="sxs-lookup"><span data-stu-id="f6b66-120">Before this event can be raised, the current user of the remote peer must subscribe to the collaboration events of the remote peer.</span></span> <span data-ttu-id="f6b66-121">订阅通过 <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> 方法完成。</span><span class="sxs-lookup"><span data-stu-id="f6b66-121">Subscription is accomplished via the <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> method.</span></span>  
  
 <span data-ttu-id="f6b66-122">此事件需要 <xref:System.Security.Permissions.PermissionState> 的 <xref:System.Security.Permissions.PermissionState.Unrestricted> 。</span><span class="sxs-lookup"><span data-stu-id="f6b66-122">This event requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f6b66-123">已释放调用对象。</span><span class="sxs-lookup"><span data-stu-id="f6b66-123">The calling object has been disposed.</span></span></exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="CreateContact">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerContact CreateContact (System.Net.PeerToPeer.Collaboration.PeerNearMe peerNearMe);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerContact CreateContact(class System.Net.PeerToPeer.Collaboration.PeerNearMe peerNearMe) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateContact (peerNearMe As PeerNearMe) As PeerContact" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerContact ^ CreateContact(System::Net::PeerToPeer::Collaboration::PeerNearMe ^ peerNearMe);" />
      <MemberSignature Language="F#" Value="member this.CreateContact : System.Net.PeerToPeer.Collaboration.PeerNearMe -&gt; System.Net.PeerToPeer.Collaboration.PeerContact" Usage="contactManager.CreateContact peerNearMe" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerContact</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerNearMe" Type="System.Net.PeerToPeer.Collaboration.PeerNearMe" />
      </Parameters>
      <Docs>
        <param name="peerNearMe"><span data-ttu-id="f6b66-124">要关联到新 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />。</span><span class="sxs-lookup"><span data-stu-id="f6b66-124">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> to associate with the new <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance.</span></span></param>
        <summary><span data-ttu-id="f6b66-125">为指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象创建一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="f6b66-125">Creates a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance for the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> object.</span></span></summary>
        <returns><span data-ttu-id="f6b66-126">所指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 的一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="f6b66-126">A <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance for the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6b66-127">调用此方法需要 <xref:System.Security.Permissions.PermissionState> 的 <xref:System.Security.Permissions.PermissionState.Unrestricted> 。</span><span class="sxs-lookup"><span data-stu-id="f6b66-127">Calling this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f6b66-128"><paramref name="peerNearMe" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f6b66-128"><paramref name="peerNearMe" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f6b66-129">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f6b66-129">This <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> object has been disposed.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="f6b66-130">-   未能到达传入 <paramref name="peerNearMe" /> 的远程对等方的联系人管理器，或者未能从其中读取该联系人。</span><span class="sxs-lookup"><span data-stu-id="f6b66-130">-   The contact manager of the remote peer passed in <paramref name="peerNearMe" /> could not be reached, or the contact could not be read from it.</span></span>  
  
<span data-ttu-id="f6b66-131">-   传入 <paramref name="peerNearMe" /> 的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 实例未设置任何终结点。</span><span class="sxs-lookup"><span data-stu-id="f6b66-131">-   The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> instance passed in <paramref name="peerNearMe" /> has no endpoints set on it.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      </Docs>
    </Member>
    <Member MemberName="CreateContactAsync">
      <MemberSignature Language="C#" Value="public void CreateContactAsync (System.Net.PeerToPeer.Collaboration.PeerNearMe peerNearMe, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateContactAsync(class System.Net.PeerToPeer.Collaboration.PeerNearMe peerNearMe, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateContactAsync (peerNearMe As PeerNearMe, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateContactAsync(System::Net::PeerToPeer::Collaboration::PeerNearMe ^ peerNearMe, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.CreateContactAsync : System.Net.PeerToPeer.Collaboration.PeerNearMe * obj -&gt; unit" Usage="contactManager.CreateContactAsync (peerNearMe, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerNearMe" Type="System.Net.PeerToPeer.Collaboration.PeerNearMe" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerNearMe"><span data-ttu-id="f6b66-132">要关联到新 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />。</span><span class="sxs-lookup"><span data-stu-id="f6b66-132">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> to associate with the new <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance.</span></span></param>
        <param name="userToken"><span data-ttu-id="f6b66-133">用户定义的 <see cref="T:System.Object" />，它包含 <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)" /> 操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="f6b66-133">A user-defined <see cref="T:System.Object" /> that contains information about the <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)" /> operation.</span></span> <span data-ttu-id="f6b66-134">它将被传递给异步操作回调进行标识。</span><span class="sxs-lookup"><span data-stu-id="f6b66-134">It will be passed to the callback of the asynchronous operation for identification.</span></span></param>
        <summary><span data-ttu-id="f6b66-135">为指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象创建一个连接实例。</span><span class="sxs-lookup"><span data-stu-id="f6b66-135">Creates a contact instance for the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6b66-136">调用此方法需要 <xref:System.Security.Permissions.PermissionState> 的 <xref:System.Security.Permissions.PermissionState.Unrestricted> 。</span><span class="sxs-lookup"><span data-stu-id="f6b66-136">Calling this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f6b66-137"><paramref name="userToken" /> 已存在且正在使用。</span><span class="sxs-lookup"><span data-stu-id="f6b66-137"><paramref name="userToken" /> already exists and is in use.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f6b66-138"><paramref name="peerNearMe" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f6b66-138"><paramref name="peerNearMe" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f6b66-139"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象已释放。</span><span class="sxs-lookup"><span data-stu-id="f6b66-139">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> object has been disposed.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="f6b66-140">-   指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 实例上没有设置任何终结点。</span><span class="sxs-lookup"><span data-stu-id="f6b66-140">-   The specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> instance has no endpoints set on it.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      </Docs>
    </Member>
    <Member MemberName="CreateContactCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs&gt; CreateContactCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs&gt; CreateContactCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CreateContactCompleted As EventHandler(Of CreateContactCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::CreateContactCompletedEventArgs ^&gt; ^ CreateContactCompleted;" />
      <MemberSignature Language="F#" Value="member this.CreateContactCompleted : EventHandler&lt;System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs&gt; " Usage="member this.CreateContactCompleted : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6b66-141">每当 <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)" /> 方法完成时引发。</span><span class="sxs-lookup"><span data-stu-id="f6b66-141">Raised whenever a <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)" /> method has completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6b66-142">当方法完成时，将引发此事件 <xref:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f6b66-142">This event is raised when the <xref:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync%2A> method has completed.</span></span> <span data-ttu-id="f6b66-143">如果 <xref:System.Net.PeerToPeer.Collaboration.ContactManager> 操作在错误或被取消时完成，也会引发此错误。</span><span class="sxs-lookup"><span data-stu-id="f6b66-143">It is also raised if the <xref:System.Net.PeerToPeer.Collaboration.ContactManager> operation completes in error or is cancelled.</span></span>  
  
 <span data-ttu-id="f6b66-144">此事件需要 <xref:System.Security.Permissions.PermissionState> 的 <xref:System.Security.Permissions.PermissionState.Unrestricted> 。</span><span class="sxs-lookup"><span data-stu-id="f6b66-144">This event requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f6b66-145">已释放调用对象。</span><span class="sxs-lookup"><span data-stu-id="f6b66-145">The calling object has been disposed.</span></span></exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact(System.Net.PeerToPeer.PeerName)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteContact">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f6b66-146">从本地对等方的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 中移除 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> 或 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />。</span><span class="sxs-lookup"><span data-stu-id="f6b66-146">Removes a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> or <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> from the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> of the local peer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteContact">
      <MemberSignature Language="C#" Value="public void DeleteContact (System.Net.PeerToPeer.Collaboration.PeerContact peerContact);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteContact(class System.Net.PeerToPeer.Collaboration.PeerContact peerContact) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteContact (peerContact As PeerContact)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteContact(System::Net::PeerToPeer::Collaboration::PeerContact ^ peerContact);" />
      <MemberSignature Language="F#" Value="member this.DeleteContact : System.Net.PeerToPeer.Collaboration.PeerContact -&gt; unit" Usage="contactManager.DeleteContact peerContact" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerContact" Type="System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Parameters>
      <Docs>
        <param name="peerContact"><span data-ttu-id="f6b66-147">要从 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 移除的 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />。</span><span class="sxs-lookup"><span data-stu-id="f6b66-147">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> to remove from the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />.</span></span></param>
        <summary><span data-ttu-id="f6b66-148">从本地对等的 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 删除指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</span><span class="sxs-lookup"><span data-stu-id="f6b66-148">Removes the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> from the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> of the local peer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6b66-149">调用此方法需要 <xref:System.Security.Permissions.PermissionState> 的 <xref:System.Security.Permissions.PermissionState.Unrestricted> 。</span><span class="sxs-lookup"><span data-stu-id="f6b66-149">Calling this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6b66-150">下面的代码示例演示如何 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> 从本地删除 <xref:System.Net.PeerToPeer.Collaboration.ContactManager> ：</span><span class="sxs-lookup"><span data-stu-id="f6b66-150">The following code example illustrates how to delete a <xref:System.Net.PeerToPeer.Collaboration.PeerContact> from the local <xref:System.Net.PeerToPeer.Collaboration.ContactManager>:</span></span>  
  
 [!code-csharp[NCLPNRPContacts#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f6b66-151"><paramref name="peerContact" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f6b66-151"><paramref name="peerContact" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact(System.Net.PeerToPeer.PeerName)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteContact">
      <MemberSignature Language="C#" Value="public void DeleteContact (System.Net.PeerToPeer.PeerName peerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteContact(class System.Net.PeerToPeer.PeerName peerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.PeerName)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteContact (peerName As PeerName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteContact(System::Net::PeerToPeer::PeerName ^ peerName);" />
      <MemberSignature Language="F#" Value="member this.DeleteContact : System.Net.PeerToPeer.PeerName -&gt; unit" Usage="contactManager.DeleteContact peerName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
      </Parameters>
      <Docs>
        <param name="peerName"><span data-ttu-id="f6b66-152">要从 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 中删除的与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 关联的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />。</span><span class="sxs-lookup"><span data-stu-id="f6b66-152">The <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> to remove from the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />.</span></span></param>
        <summary><span data-ttu-id="f6b66-153">从本地对等的 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 中删除与指定 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</span><span class="sxs-lookup"><span data-stu-id="f6b66-153">Removes the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> associated with the specified <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> from the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> of the local peer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6b66-154">调用此方法需要 <xref:System.Security.Permissions.PermissionState> 的 <xref:System.Security.Permissions.PermissionState.Unrestricted> 。</span><span class="sxs-lookup"><span data-stu-id="f6b66-154">Calling this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6b66-155">下面的代码示例演示如何 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> 从本地删除 <xref:System.Net.PeerToPeer.Collaboration.ContactManager> ：</span><span class="sxs-lookup"><span data-stu-id="f6b66-155">The following code example illustrates how to delete a <xref:System.Net.PeerToPeer.Collaboration.PeerContact> from the local <xref:System.Net.PeerToPeer.Collaboration.ContactManager>:</span></span>  
  
 [!code-csharp[NCLPNRPContacts#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f6b66-156">无法在联系人管理器中找到与 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> 相关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</span><span class="sxs-lookup"><span data-stu-id="f6b66-156">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> associated with <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> could not be found in the contact manager.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f6b66-157"><paramref name="peerName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f6b66-157"><paramref name="peerName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f6b66-158">此对象之前让 <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.Dispose" /> 对其进行了调用，并且不能用于将来的操作。</span><span class="sxs-lookup"><span data-stu-id="f6b66-158">This object has had <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.Dispose" /> previously called on it and cannot be used for future operations.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="f6b66-159">无法完成 <see cref="Overload:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact" /> 操作。</span><span class="sxs-lookup"><span data-stu-id="f6b66-159">Unable to complete <see cref="Overload:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact" /> operation.</span></span></exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.ContactManager.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="contactManager.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f6b66-160">释放 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 对象使用的所有资源。</span><span class="sxs-lookup"><span data-stu-id="f6b66-160">Releases all resources used by the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContact">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerContact GetContact (System.Net.PeerToPeer.PeerName peerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerContact GetContact(class System.Net.PeerToPeer.PeerName peerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact(System.Net.PeerToPeer.PeerName)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContact (peerName As PeerName) As PeerContact" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerContact ^ GetContact(System::Net::PeerToPeer::PeerName ^ peerName);" />
      <MemberSignature Language="F#" Value="member this.GetContact : System.Net.PeerToPeer.PeerName -&gt; System.Net.PeerToPeer.Collaboration.PeerContact" Usage="contactManager.GetContact peerName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerContact</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
      </Parameters>
      <Docs>
        <param name="peerName"><span data-ttu-id="f6b66-161">与要检索的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</span><span class="sxs-lookup"><span data-stu-id="f6b66-161">The <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> to be retrieved.</span></span></param>
        <summary><span data-ttu-id="f6b66-162">返回具有指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f6b66-162">Returns the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object for the specified <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />.</span></span></summary>
        <returns><span data-ttu-id="f6b66-163">与所提供的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 关联的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />。</span><span class="sxs-lookup"><span data-stu-id="f6b66-163"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> associated with the supplied <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6b66-164">调用此方法需要 <xref:System.Security.Permissions.PermissionState> 的 <xref:System.Security.Permissions.PermissionState.Unrestricted> 。</span><span class="sxs-lookup"><span data-stu-id="f6b66-164">Calling this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f6b66-165"><paramref name="peerName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f6b66-165"><paramref name="peerName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f6b66-166">已释放 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f6b66-166">This <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> object has been disposed.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="f6b66-167">-   在 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 中找不到联系人。</span><span class="sxs-lookup"><span data-stu-id="f6b66-167">-   Contact not found in <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />.</span></span>  
  
<span data-ttu-id="f6b66-168">-   无法获取具有提供的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> 的联系人。</span><span class="sxs-lookup"><span data-stu-id="f6b66-168">-   Unable to obtain the contact for the supplied <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      </Docs>
    </Member>
    <Member MemberName="GetContacts">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerContactCollection GetContacts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerContactCollection GetContacts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContacts () As PeerContactCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerContactCollection ^ GetContacts();" />
      <MemberSignature Language="F#" Value="member this.GetContacts : unit -&gt; System.Net.PeerToPeer.Collaboration.PeerContactCollection" Usage="contactManager.GetContacts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerContactCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f6b66-169">返回一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />，其中包含远程对等方的 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 中的所有联系人。</span><span class="sxs-lookup"><span data-stu-id="f6b66-169">Returns a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" /> that contains all contacts within the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> of the remote peer.</span></span></summary>
        <returns><span data-ttu-id="f6b66-170">一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />，其中包含远程对等方的 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 中的所有联系人。</span><span class="sxs-lookup"><span data-stu-id="f6b66-170"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" /> that contains all contacts within the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> of the remote peer.</span></span>  
  
<span data-ttu-id="f6b66-171">如果联系人管理器为空，则返回一个大小为零 (0) 的集合。</span><span class="sxs-lookup"><span data-stu-id="f6b66-171">If the contact manager is empty, then a collection of size zero (0) is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6b66-172">调用此方法需要 <xref:System.Security.Permissions.PermissionState> 的 <xref:System.Security.Permissions.PermissionState.Unrestricted> 。</span><span class="sxs-lookup"><span data-stu-id="f6b66-172">Calling this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6b66-173">下面的代码示例演示如何检索 <xref:System.Net.PeerToPeer.Collaboration.PeerContactCollection> 表示本地中包含的联系人的 <xref:System.Net.PeerToPeer.Collaboration.ContactManager> ：</span><span class="sxs-lookup"><span data-stu-id="f6b66-173">The following code example illustrates how to retrieve a <xref:System.Net.PeerToPeer.Collaboration.PeerContactCollection> representing the contacts contained in the local <xref:System.Net.PeerToPeer.Collaboration.ContactManager>:</span></span>  
  
 [!code-csharp[NCLPNRPContacts#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f6b66-174">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f6b66-174">This <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> object has been disposed.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="f6b66-175">此方法在尝试枚举此对等联系人集合中的 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 时返回了无效的值。</span><span class="sxs-lookup"><span data-stu-id="f6b66-175">An invalid value was returned when this method attempted to enumerate a <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> in this peer contact collection.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      </Docs>
    </Member>
    <Member MemberName="LocalContact">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerContact LocalContact { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.PeerToPeer.Collaboration.PeerContact LocalContact" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LocalContact As PeerContact" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::PeerToPeer::Collaboration::PeerContact ^ LocalContact { System::Net::PeerToPeer::Collaboration::PeerContact ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalContact : System.Net.PeerToPeer.Collaboration.PeerContact" Usage="System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerContact</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6b66-176">获取表示本地对等方的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</span><span class="sxs-lookup"><span data-stu-id="f6b66-176">Gets the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> representing the local peer.</span></span></summary>
        <value><span data-ttu-id="f6b66-177">表示本地对等方的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="f6b66-177">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance representing the local peer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6b66-178">除非指定，否则此属性的默认值为 `null`。</span><span class="sxs-lookup"><span data-stu-id="f6b66-178">Unless specified, the default value for this property is `null`.</span></span>  
  
 <span data-ttu-id="f6b66-179">使用此属性需要 <xref:System.Security.Permissions.PermissionState> 的 <xref:System.Security.Permissions.PermissionState.Unrestricted> 。</span><span class="sxs-lookup"><span data-stu-id="f6b66-179">Using this property requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      </Docs>
    </Member>
    <Member MemberName="NameChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt; NameChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt; NameChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.ContactManager.NameChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NameChanged As EventHandler(Of NameChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::NameChangedEventArgs ^&gt; ^ NameChanged;" />
      <MemberSignature Language="F#" Value="member this.NameChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt; " Usage="member this.NameChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[add: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;add: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[remove: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;remove: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6b66-180">每当与 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> 中的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 发生更改时引发。</span><span class="sxs-lookup"><span data-stu-id="f6b66-180">Raised whenever the <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> associated with a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> in the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6b66-181">关联的回调提供对新的引用 <xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f6b66-181">The associated callback provides a reference to the new <xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A>.</span></span>  
  
 <span data-ttu-id="f6b66-182">此事件需要 <xref:System.Security.Permissions.PermissionState> 的 <xref:System.Security.Permissions.PermissionState.Unrestricted> 。</span><span class="sxs-lookup"><span data-stu-id="f6b66-182">This event requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f6b66-183">已释放调用对象。</span><span class="sxs-lookup"><span data-stu-id="f6b66-183">The calling object has been disposed.</span></span></exception>
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalNameChanged" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.OnNameChanged(System.Net.PeerToPeer.Collaboration.NameChangedEventArgs)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Docs>
    </Member>
    <Member MemberName="ObjectChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; ObjectChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; ObjectChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.ContactManager.ObjectChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectChanged As EventHandler(Of ObjectChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::ObjectChangedEventArgs ^&gt; ^ ObjectChanged;" />
      <MemberSignature Language="F#" Value="member this.ObjectChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; " Usage="member this.ObjectChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[add: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;add: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[remove: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;remove: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6b66-184">每当联系人注册的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 对象中有对象发生更改时引发。</span><span class="sxs-lookup"><span data-stu-id="f6b66-184">Raised whenever an object within a contact's registered <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> objects has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6b66-185">在引发此事件之前，远程对等方的当前用户必须订阅主机对等节点的协作事件。</span><span class="sxs-lookup"><span data-stu-id="f6b66-185">Before this event can be raised, the current user of the remote peer must subscribe to the collaboration events of the host peer.</span></span> <span data-ttu-id="f6b66-186">订阅通过 PeerContact <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> 方法完成。</span><span class="sxs-lookup"><span data-stu-id="f6b66-186">Subscription is accomplished via the PeerContact <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> methods.</span></span>  
  
 <span data-ttu-id="f6b66-187">此事件需要 <xref:System.Security.Permissions.PermissionState> 的 <xref:System.Security.Permissions.PermissionState.Unrestricted> 。</span><span class="sxs-lookup"><span data-stu-id="f6b66-187">This event requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f6b66-188"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 对象已释放。</span><span class="sxs-lookup"><span data-stu-id="f6b66-188">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> object has been disposed.</span></span></exception>
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.ObjectChanged" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PresenceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; PresenceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; PresenceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.ContactManager.PresenceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PresenceChanged As EventHandler(Of PresenceChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::PresenceChangedEventArgs ^&gt; ^ PresenceChanged;" />
      <MemberSignature Language="F#" Value="member this.PresenceChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; " Usage="member this.PresenceChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[add: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;add: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[remove: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;remove: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6b66-189">每当 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 在 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 中的状态发生更改时引发。</span><span class="sxs-lookup"><span data-stu-id="f6b66-189">Raised whenever the presence status of a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> in the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6b66-190">在引发此事件之前，远程对等方的当前用户必须订阅主机对等节点的协作事件。</span><span class="sxs-lookup"><span data-stu-id="f6b66-190">Before this event can be raised, the current user of the remote peer must subscribe to the collaboration events of the host peer.</span></span> <span data-ttu-id="f6b66-191">订阅通过 <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> 方法完成。</span><span class="sxs-lookup"><span data-stu-id="f6b66-191">Subscription is accomplished via the <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> method.</span></span>  
  
 <span data-ttu-id="f6b66-192">此事件需要 <xref:System.Security.Permissions.PermissionState> 的 <xref:System.Security.Permissions.PermissionState.Unrestricted> 。</span><span class="sxs-lookup"><span data-stu-id="f6b66-192">This event requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f6b66-193"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象已释放。</span><span class="sxs-lookup"><span data-stu-id="f6b66-193">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object has been disposed.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SubscriptionListChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs&gt; SubscriptionListChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs&gt; SubscriptionListChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.ContactManager.SubscriptionListChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SubscriptionListChanged As EventHandler(Of SubscriptionListChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::SubscriptionListChangedEventArgs ^&gt; ^ SubscriptionListChanged;" />
      <MemberSignature Language="F#" Value="member this.SubscriptionListChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs&gt; " Usage="member this.SubscriptionListChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[add: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;add: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[remove: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;remove: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6b66-194">在订阅的联系人列表发生更改时引发。</span><span class="sxs-lookup"><span data-stu-id="f6b66-194">Raised when the list of subscribed contacts changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6b66-195">由于订阅是按用户而非按进程或按应用程序域进行的，因此在主机上运行的其他应用程序也可能导致引发此事件。</span><span class="sxs-lookup"><span data-stu-id="f6b66-195">Since subscriptions are per user and not per process or per application domain, another application running on the host may also cause this event to be raised.</span></span>  
  
 <span data-ttu-id="f6b66-196">此事件需要 <xref:System.Security.Permissions.PermissionState> 的 <xref:System.Security.Permissions.PermissionState.Unrestricted> 。</span><span class="sxs-lookup"><span data-stu-id="f6b66-196">This event requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f6b66-197">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="f6b66-197">The object has been disposed.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Unsubscribe" />
      </Docs>
    </Member>
    <Member MemberName="SynchronizingObject">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISynchronizeInvoke SynchronizingObject" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.ContactManager.SynchronizingObject" />
      <MemberSignature Language="VB.NET" Value="Public Property SynchronizingObject As ISynchronizeInvoke" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ISynchronizeInvoke ^ SynchronizingObject { System::ComponentModel::ISynchronizeInvoke ^ get(); void set(System::ComponentModel::ISynchronizeInvoke ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizingObject : System.ComponentModel.ISynchronizeInvoke with get, set" Usage="System.Net.PeerToPeer.Collaboration.ContactManager.SynchronizingObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Description("SynchronizingObject")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Description("SynchronizingObject")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISynchronizeInvoke</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6b66-198">设置此属性值后，将在创建特定 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject" /> 的线程上为因异步操作而未激发的所有事件回调关联的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f6b66-198">When this property value is set, all events not fired as the result of an asynchronous operation will have the associated event handlers called back on the thread that created the specific <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject" />.</span></span></summary>
        <value><span data-ttu-id="f6b66-199">实现 <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> 接口的对象，此对象在创建它的线程上供该事件处理程序同步类型的实例使用。</span><span class="sxs-lookup"><span data-stu-id="f6b66-199">Object that implements the <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> interface and is used by instances of this type for event handler synchronization on the thread that created it.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6b66-200">此属性的默认设置值为 `null` ，指示在系统线程池线程上调用所有事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f6b66-200">The default set value for this property is `null`, indicating that all event handlers are called on a system thread pool thread.</span></span>  
  
 <span data-ttu-id="f6b66-201">此属性通常设置为 UI 元素（例如 <xref:System.Windows.Forms.Form> 实例）。</span><span class="sxs-lookup"><span data-stu-id="f6b66-201">This property is typically set to a UI element such as a <xref:System.Windows.Forms.Form> instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f6b66-202">已释放调用对象。</span><span class="sxs-lookup"><span data-stu-id="f6b66-202">The calling object has been disposed.</span></span></exception>
        <altmember cref="N:System.Windows.Forms" />
      </Docs>
    </Member>
    <Member MemberName="UpdateContact">
      <MemberSignature Language="C#" Value="public void UpdateContact (System.Net.PeerToPeer.Collaboration.PeerContact peerContact);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateContact(class System.Net.PeerToPeer.Collaboration.PeerContact peerContact) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateContact (peerContact As PeerContact)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateContact(System::Net::PeerToPeer::Collaboration::PeerContact ^ peerContact);" />
      <MemberSignature Language="F#" Value="member this.UpdateContact : System.Net.PeerToPeer.Collaboration.PeerContact -&gt; unit" Usage="contactManager.UpdateContact peerContact" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerContact" Type="System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Parameters>
      <Docs>
        <param name="peerContact"><span data-ttu-id="f6b66-203">要更新的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</span><span class="sxs-lookup"><span data-stu-id="f6b66-203">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> to be updated.</span></span></param>
        <summary><span data-ttu-id="f6b66-204">更新与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 关联的数据。</span><span class="sxs-lookup"><span data-stu-id="f6b66-204">Updates the data associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6b66-205">调用此方法需要 <xref:System.Security.Permissions.PermissionState> 的 <xref:System.Security.Permissions.PermissionState.Unrestricted> 。</span><span class="sxs-lookup"><span data-stu-id="f6b66-205">Calling this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f6b66-206">-   在 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 中找不到 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</span><span class="sxs-lookup"><span data-stu-id="f6b66-206">-   <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> not found in <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f6b66-207"><paramref name="peerContact" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f6b66-207"><paramref name="peerContact" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f6b66-208">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f6b66-208">This <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object has been disposed.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="f6b66-209">无法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)" /> 操作。</span><span class="sxs-lookup"><span data-stu-id="f6b66-209">Unable to complete <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)" /> operation.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.Dispose" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact(System.Net.PeerToPeer.PeerName)" />
      </Docs>
    </Member>
  </Members>
</Type>
