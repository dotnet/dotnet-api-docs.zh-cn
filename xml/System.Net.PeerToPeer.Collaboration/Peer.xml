<Type Name="Peer" FullName="System.Net.PeerToPeer.Collaboration.Peer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3df5104016caec43e610433594ec69137096ff8d" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89993448" /></Metadata><TypeSignature Language="C#" Value="public abstract class Peer : IDisposable, IEquatable&lt;System.Net.PeerToPeer.Collaboration.Peer&gt;, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Peer extends System.Object implements class System.IDisposable, class System.IEquatable`1&lt;class System.Net.PeerToPeer.Collaboration.Peer&gt;, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.Collaboration.Peer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Peer&#xA;Implements IDisposable, IEquatable(Of Peer), ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Peer abstract : IDisposable, IEquatable&lt;System::Net::PeerToPeer::Collaboration::Peer ^&gt;, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type Peer = class&#xA;    interface IDisposable&#xA;    interface IEquatable&lt;Peer&gt;&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Net.PeerToPeer.Collaboration.Peer&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="91c6c-101">此类表示远程对等方。</span><span class="sxs-lookup"><span data-stu-id="91c6c-101">This class represents a remote peer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91c6c-102">抽象类的用途 <xref:System.Net.PeerToPeer.Collaboration.Peer> 是提供可由派生类（如和）共享的通用基类定义 <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> <xref:System.Net.PeerToPeer.Collaboration.PeerContact> 。</span><span class="sxs-lookup"><span data-stu-id="91c6c-102">The purpose of the abstract <xref:System.Net.PeerToPeer.Collaboration.Peer> class is to provide a common base class definition that can be shared by derived classes such as <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> and <xref:System.Net.PeerToPeer.Collaboration.PeerContact>.</span></span> <span data-ttu-id="91c6c-103">由于它是抽象的，因此无法直接构造。</span><span class="sxs-lookup"><span data-stu-id="91c6c-103">It cannot be directly constructed, since it is abstract.</span></span> <span data-ttu-id="91c6c-104">开发人员应改为使用子类 PeerNearMe 或 PeerContact。</span><span class="sxs-lookup"><span data-stu-id="91c6c-104">Developers should use the subclasses PeerNearMe or PeerContact instead.</span></span>  
  
 <span data-ttu-id="91c6c-105">根据上下文，联系人、对等方、远程对等机、、 <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> <xref:System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact%2A> 和 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> 是同义词术语。</span><span class="sxs-lookup"><span data-stu-id="91c6c-105">Contact, peer, remote peer, <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>, <xref:System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact%2A>, and <xref:System.Net.PeerToPeer.Collaboration.PeerContact> are synonymous terms, based on context.</span></span>  
  
 <span data-ttu-id="91c6c-106">"调用对等方" 和 "远程对等方" 通常是同义词。</span><span class="sxs-lookup"><span data-stu-id="91c6c-106">"Calling peer" and "remote peer" are commonly synonymous.</span></span>  <span data-ttu-id="91c6c-107">调用对等方不引用调用给定方法的应用程序。</span><span class="sxs-lookup"><span data-stu-id="91c6c-107">Calling peer does not refer to the application calling a given method.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=94462"><span data-ttu-id="91c6c-108">处理和引发事件</span><span class="sxs-lookup"><span data-stu-id="91c6c-108">Handling and Raising Events</span></span></related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink?LinkID=92916"><span data-ttu-id="91c6c-109">Windows 通讯簿 API 参考</span><span class="sxs-lookup"><span data-stu-id="91c6c-109">Windows Address Book API Reference</span></span></related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink?LinkID=92964"><span data-ttu-id="91c6c-110">Windows 联系人管理器</span><span class="sxs-lookup"><span data-stu-id="91c6c-110">Windows Contact Manager</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Peer (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (serializationInfo As SerializationInfo, streamingContext As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Peer(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.Collaboration.Peer : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.PeerToPeer.Collaboration.Peer" Usage="new System.Net.PeerToPeer.Collaboration.Peer (serializationInfo, streamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo"><span data-ttu-id="91c6c-111">对象的引用，该对象保存反序列化此实例时所需的数据。</span><span class="sxs-lookup"><span data-stu-id="91c6c-111">Reference to the object that holds the data needed to deserialize this instance.</span></span></param>
        <param name="streamingContext"><span data-ttu-id="91c6c-112">提供反序列化数据的方式的上下文。</span><span class="sxs-lookup"><span data-stu-id="91c6c-112">Context that provides the means for deserializing the data.</span></span> <span data-ttu-id="91c6c-113">也称为序列化数据的源。</span><span class="sxs-lookup"><span data-stu-id="91c6c-113">Also referred to as the source of the serialized data.</span></span></param>
        <summary><span data-ttu-id="91c6c-114">初始化 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 类型的新实例。</span><span class="sxs-lookup"><span data-stu-id="91c6c-114">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91c6c-115">返回 <xref:System.Net.PeerToPeer.Collaboration.Peer> 或上的子类类型 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> 。</span><span class="sxs-lookup"><span data-stu-id="91c6c-115">Returns a type <xref:System.Net.PeerToPeer.Collaboration.Peer> object, subclassed on <xref:System.Net.PeerToPeer.Collaboration.PeerContact> or <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>.</span></span> <span data-ttu-id="91c6c-116">PeerContact <xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A> 或 PeerNearMe <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.Nickname%2A> 包含对新对等对象的名称的唯一引用。</span><span class="sxs-lookup"><span data-stu-id="91c6c-116">The PeerContact <xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A> or the PeerNearMe <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.Nickname%2A> contain unique references to the name of the new peer object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Runtime" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="91c6c-117">释放由 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 对象使用的资源。</span><span class="sxs-lookup"><span data-stu-id="91c6c-117">Releases the resources used by the <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="peer.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="91c6c-118">释放由 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 对象使用的所有资源。</span><span class="sxs-lookup"><span data-stu-id="91c6c-118">Releases all resources used by the <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="peer.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="91c6c-119">设置为 <see langword="true" /> 可释放托管资源和非托管资源；设置为 <see langword="false" /> 只能释放非托管资源。</span><span class="sxs-lookup"><span data-stu-id="91c6c-119">Set to <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="91c6c-120">释放由 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 对象占用的非托管资源并（可选）释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="91c6c-120">Releases the unmanaged resources used by the <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> object and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Net.PeerToPeer.Collaboration.Peer other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Net.PeerToPeer.Collaboration.Peer other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.Equals(System.Net.PeerToPeer.Collaboration.Peer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Peer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Net::PeerToPeer::Collaboration::Peer ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Net.PeerToPeer.Collaboration.Peer -&gt; bool" Usage="peer.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Net.PeerToPeer.Collaboration.Peer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="91c6c-121">要与此实例进行比较的 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="91c6c-121">A <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> instance to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="91c6c-122">对当前的 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 和指定对等方执行区分大小写的比较。</span><span class="sxs-lookup"><span data-stu-id="91c6c-122">Performs a case-sensitive comparison of the current <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> and the specified peer.</span></span></summary>
        <returns><span data-ttu-id="91c6c-123">如果提供的 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 实例与此对等实例具有相同的 <see cref="P:System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="91c6c-123"><see langword="true" /> if the supplied <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> instance has the same <see cref="P:System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints" /> as this peer instance, otherwise, <see langword="false" />.</span></span> <span data-ttu-id="91c6c-124">如果对等参数为 <see langword="false" />，此方法也会返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="91c6c-124">This method also returns <see langword="false" /> if the peer parameter is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91c6c-125">如果两个对等方具有相同的终结点集合，则将它们视为相等，而不考虑其属性中的值 <xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A> 。</span><span class="sxs-lookup"><span data-stu-id="91c6c-125">Two peers are considered equal if they have the same endpoint collection, regardless of the values in their <xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A> properties.</span></span> <span data-ttu-id="91c6c-126">使用方案不会直接涉及此类，而是派生 <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> 或 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> 类。</span><span class="sxs-lookup"><span data-stu-id="91c6c-126">Usage scenarios do not involve this class directly, but rather the derived <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> or the <xref:System.Net.PeerToPeer.Collaboration.PeerContact> classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.ToString" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="peer.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="91c6c-127">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span><span class="sxs-lookup"><span data-stu-id="91c6c-127">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</span></span></param>
        <param name="context"><span data-ttu-id="91c6c-128">此序列化的目标。</span><span class="sxs-lookup"><span data-stu-id="91c6c-128">The destination for this serialization.</span></span></param>
        <summary><span data-ttu-id="91c6c-129">使用序列化目标 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 时所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span><span class="sxs-lookup"><span data-stu-id="91c6c-129">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data needed to serialize the target <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="N:System.Runtime.Serialization" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObjects">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="91c6c-130">从本地缓存中获取由对等方注册的数据对象的集合。</span><span class="sxs-lookup"><span data-stu-id="91c6c-130">Gets the collection of data objects that were registered by the peer from a local cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91c6c-131">此功能仅在类上公开 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> 。</span><span class="sxs-lookup"><span data-stu-id="91c6c-131">This functionality is only exposed on the <xref:System.Net.PeerToPeer.Collaboration.PeerContact> class.</span></span>  <span data-ttu-id="91c6c-132">出于安全原因，不会在任何其他类型的对等方上公开此功能。</span><span class="sxs-lookup"><span data-stu-id="91c6c-132">This functionality is not exposed on any other type of peer for security reasons.</span></span>  
  
 <span data-ttu-id="91c6c-133">如果找不到终结点的对象，则返回一个大小为零 (0) 的集合。</span><span class="sxs-lookup"><span data-stu-id="91c6c-133">If no objects are found for the endpoint, a collection of size zero (0) is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataAsync(System.Object)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObjects">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjects" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjects () As PeerObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerObjectCollection ^ GetObjects();" />
      <MemberSignature Language="F#" Value="member this.GetObjects : unit -&gt; System.Net.PeerToPeer.Collaboration.PeerObjectCollection" Usage="peer.GetObjects " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="91c6c-134">从本地缓存中获取数据对象的集合。</span><span class="sxs-lookup"><span data-stu-id="91c6c-134">Gets the collection of data objects from a local cache.</span></span></summary>
        <returns><span data-ttu-id="91c6c-135">由此实例指定的对等方或终结点的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 集合。</span><span class="sxs-lookup"><span data-stu-id="91c6c-135">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> collection for the peer or endpoint specified by this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91c6c-136">此功能仅在类上公开 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> 。</span><span class="sxs-lookup"><span data-stu-id="91c6c-136">This functionality is only exposed on the <xref:System.Net.PeerToPeer.Collaboration.PeerContact> class.</span></span>  <span data-ttu-id="91c6c-137">出于安全原因，不会在任何其他类型的对等方上公开此功能。</span><span class="sxs-lookup"><span data-stu-id="91c6c-137">This functionality is not exposed on any other type of peer for security reasons.</span></span>  
  
 <span data-ttu-id="91c6c-138">如果对等方协作会话未使用的实例 <xref:System.Security.Permissions.PermissionState> 化 <xref:System.Security.Permissions.PermissionState.Unrestricted> ，则此方法无法访问本地计算机上的对象。</span><span class="sxs-lookup"><span data-stu-id="91c6c-138">If the peer collaboration session did not instantiate with a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>, this method cannot access objects on the local computer.</span></span>  <span data-ttu-id="91c6c-139">注册到协作会话中的应用程序也是如此。</span><span class="sxs-lookup"><span data-stu-id="91c6c-139">The same is true of the applications registered into the collaboration session.</span></span>  
  
 <span data-ttu-id="91c6c-140">对等对象的集合包括此实例指定的对等方或终结点的应用程序、数据对象和状态信息。</span><span class="sxs-lookup"><span data-stu-id="91c6c-140">The collection of peer objects consists of application, data object, and presence information for the peer or endpoint specified by this instance.</span></span> <span data-ttu-id="91c6c-141">如果找不到终结点的对象，则返回一个大小为零 (0) 的集合。</span><span class="sxs-lookup"><span data-stu-id="91c6c-141">If no objects are found for the endpoint, a collection of size zero (0) is returned.</span></span> <span data-ttu-id="91c6c-142">如果调用对等方已订阅此终结点，则会自动更新缓存;否则 <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> ，必须在调用此方法之前调用。</span><span class="sxs-lookup"><span data-stu-id="91c6c-142">If the calling peer is subscribed to this endpoint, the cache is automatically updated; otherwise <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> must be called prior to calling this method.</span></span>  
  
 <span data-ttu-id="91c6c-143">调用方无需登录到协作基础结构，此方法即可成功完成。</span><span class="sxs-lookup"><span data-stu-id="91c6c-143">The caller is not required to be signed into the collaboration infrastructure for this method to complete successfully.</span></span>  <span data-ttu-id="91c6c-144">在调用 <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> 方登录到调用此方法之前，必须完成对或其中一种方法的成功调用。</span><span class="sxs-lookup"><span data-stu-id="91c6c-144">A successful call to <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> or one of the <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> methods must have been completed while the caller was signed in previous to calling this method.</span></span>  
  
 <span data-ttu-id="91c6c-145">注意：其他重载是在类上定义的 <xref:System.Net.PeerToPeer.Collaboration.Peer> ，而不是在子类和上定义的 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> 。</span><span class="sxs-lookup"><span data-stu-id="91c6c-145">NOTE: Additional overloads are defined on the <xref:System.Net.PeerToPeer.Collaboration.Peer> class instead of the subclasses <xref:System.Net.PeerToPeer.Collaboration.PeerContact> and <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="91c6c-146">调用方未订阅终结点或尚未调用 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" />。</span><span class="sxs-lookup"><span data-stu-id="91c6c-146">The caller is not subscribed to the endpoint or has not yet called <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" />.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="91c6c-147">此方法因基础对等方协作基础结构中的错误而无法完成。</span><span class="sxs-lookup"><span data-stu-id="91c6c-147">The method is unable to complete due to an error in the underlying Peer Collaboration infrastructure.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataAsync(System.Object)" />
        <altmember cref="T:System.Net.Cache.RequestCachePolicy" />
      </Docs>
    </Member>
    <Member MemberName="GetObjects">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects (Guid objectId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects(valuetype System.Guid objectId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjects(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjects (objectId As Guid) As PeerObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerObjectCollection ^ GetObjects(Guid objectId);" />
      <MemberSignature Language="F#" Value="member this.GetObjects : Guid -&gt; System.Net.PeerToPeer.Collaboration.PeerObjectCollection" Usage="peer.GetObjects objectId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="objectId"><span data-ttu-id="91c6c-148">要从集合中检索的 <see cref="T:System.Guid" /> 对象的 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /></span><span class="sxs-lookup"><span data-stu-id="91c6c-148">The <see cref="T:System.Guid" /> of the <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> object to be retrieved from the collection</span></span></param>
        <summary><span data-ttu-id="91c6c-149">从 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 中获取与提供的 <see cref="T:System.Guid" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="91c6c-149">Gets the <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> object associated with the supplied <see cref="T:System.Guid" /> from the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" />.</span></span></summary>
        <returns><span data-ttu-id="91c6c-150">与所提供的 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 关联的 <see cref="T:System.Guid" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="91c6c-150"><see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> object associated with the supplied <see cref="T:System.Guid" />.</span></span> <span data-ttu-id="91c6c-151">如果未找到对象，则返回一个大小为零 (0) 的集合。</span><span class="sxs-lookup"><span data-stu-id="91c6c-151">If an object is not found, a collection of size zero (0) is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91c6c-152">此功能仅在类上公开 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> 。</span><span class="sxs-lookup"><span data-stu-id="91c6c-152">This functionality is only exposed on the <xref:System.Net.PeerToPeer.Collaboration.PeerContact> class.</span></span> <span data-ttu-id="91c6c-153">出于安全原因，不会在任何其他类型的对等方上公开此功能。</span><span class="sxs-lookup"><span data-stu-id="91c6c-153">This functionality is not exposed on any other type of peer for security reasons.</span></span>  
  
 <span data-ttu-id="91c6c-154">对等对象的集合包括此实例指定的对等方或终结点的应用程序、数据对象和状态信息。</span><span class="sxs-lookup"><span data-stu-id="91c6c-154">The collection of peer objects consists of application, data object, and presence information for the peer or endpoint specified by this instance.</span></span> <span data-ttu-id="91c6c-155">如果找不到终结点的对象，则返回一个大小为零 (0) 的集合。</span><span class="sxs-lookup"><span data-stu-id="91c6c-155">If no objects are found for the endpoint, a collection of size zero (0) is returned.</span></span> <span data-ttu-id="91c6c-156">当调用对等方订阅此终结点时，将自动更新缓存;否则 <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> ，必须在调用此方法之前调用。</span><span class="sxs-lookup"><span data-stu-id="91c6c-156">When the calling peer is subscribed to this endpoint, the cache is automatically updated; otherwise <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> must be called prior to calling this method.</span></span>  
  
 <span data-ttu-id="91c6c-157">调用方无需登录到协作基础结构，此方法即可成功完成。</span><span class="sxs-lookup"><span data-stu-id="91c6c-157">The caller is not required to be signed into the collaboration infrastructure for this method to complete successfully.</span></span>  <span data-ttu-id="91c6c-158">在调用 <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> 方登录到调用此方法之前，必须完成对或其中一种方法的成功调用。</span><span class="sxs-lookup"><span data-stu-id="91c6c-158">A successful call to <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> or one of the <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> methods must have been completed while the caller was signed in previous to calling this method.</span></span> <span data-ttu-id="91c6c-159">调用此方法需要 <xref:System.Security.Permissions.PermissionState> 的 <xref:System.Security.Permissions.PermissionState.Unrestricted> 。</span><span class="sxs-lookup"><span data-stu-id="91c6c-159">Calling this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>.</span></span> <span data-ttu-id="91c6c-160">此状态是在协作会话开始时创建的。</span><span class="sxs-lookup"><span data-stu-id="91c6c-160">This state is created when the collaboration session begins.</span></span>  
  
 <span data-ttu-id="91c6c-161">注意：其他重载是在 <xref:System.Net.PeerToPeer.Collaboration.Peer> 类而不是派生类和上定义的 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> 。</span><span class="sxs-lookup"><span data-stu-id="91c6c-161">NOTE: Additional overloads are defined on the <xref:System.Net.PeerToPeer.Collaboration.Peer> class instead of the derived classes <xref:System.Net.PeerToPeer.Collaboration.PeerContact> and <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="91c6c-162">对象 ID 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="91c6c-162">The object ID is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="91c6c-163">调用方未订阅 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 或尚未对其调用 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" />。</span><span class="sxs-lookup"><span data-stu-id="91c6c-163">The caller is not subscribed to the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> or has not yet called <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> against it.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="91c6c-164">从对等方获取对象信息时出错。</span><span class="sxs-lookup"><span data-stu-id="91c6c-164">An error occurred when getting object information from the peer.</span></span></exception>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="T:System.Guid" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataAsync(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetPresenceInfo">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerPresenceInfo GetPresenceInfo (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerPresenceInfo GetPresenceInfo(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPresenceInfo (peerEndPoint As PeerEndPoint) As PeerPresenceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerPresenceInfo ^ GetPresenceInfo(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint);" />
      <MemberSignature Language="F#" Value="member this.GetPresenceInfo : System.Net.PeerToPeer.Collaboration.PeerEndPoint -&gt; System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" Usage="peer.GetPresenceInfo peerEndPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerPresenceInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint"><span data-ttu-id="91c6c-165">要检索其状态信息的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。</span><span class="sxs-lookup"><span data-stu-id="91c6c-165">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> for which to retrieve presence information.</span></span></param>
        <summary><span data-ttu-id="91c6c-166">获取 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 的可用状态信息。</span><span class="sxs-lookup"><span data-stu-id="91c6c-166">Gets the available presence information for a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.</span></span></summary>
        <returns><span data-ttu-id="91c6c-167">如果存在可用的终结点，则为一个包含其状态信息的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> 对象；否则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="91c6c-167">A <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> object which contains presence information for an available endpoint if it is available; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91c6c-168">存在信息包括状态描述符，如联机、脱机和离开。</span><span class="sxs-lookup"><span data-stu-id="91c6c-168">Presence information includes status descriptors such as online, offline, and away.</span></span>  
  
 <span data-ttu-id="91c6c-169">调用此方法需要 <xref:System.Security.Permissions.PermissionState> 的 <xref:System.Security.Permissions.PermissionState.Unrestricted> 。</span><span class="sxs-lookup"><span data-stu-id="91c6c-169">Calling this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="91c6c-170"><paramref name="peerEndPoint" /> 未包含有效的终结点。</span><span class="sxs-lookup"><span data-stu-id="91c6c-170"><paramref name="peerEndPoint" /> does not contain a valid endpoint.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="91c6c-171"><paramref name="peerEndPoint" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="91c6c-171"><paramref name="peerEndPoint" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="91c6c-172">此对象已被释放，无法用于当前的对等操作。</span><span class="sxs-lookup"><span data-stu-id="91c6c-172">This object has been disposed and cannot be used in current peer operations.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="91c6c-173">从对等方中检索状态信息时出错。</span><span class="sxs-lookup"><span data-stu-id="91c6c-173">An error occurred while retrieving presence information from the peer.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceInfo" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Invite">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="91c6c-174">向 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 发送邀请以启动特定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。</span><span class="sxs-lookup"><span data-stu-id="91c6c-174">Sends an invitation to a <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> to start a specific <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invite">
      <MemberSignature Language="C#" Value="public abstract System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.Invite" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Invite () As PeerInvitationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Net::PeerToPeer::Collaboration::PeerInvitationResponse ^ Invite();" />
      <MemberSignature Language="F#" Value="abstract member Invite : unit -&gt; System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" Usage="peer.Invite " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerInvitationResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="91c6c-175">向 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 发送邀请以启动特定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。</span><span class="sxs-lookup"><span data-stu-id="91c6c-175">Sends an invitation to a <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> to start a specific <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />.</span></span></summary>
        <returns><span data-ttu-id="91c6c-176">从收到邀请的对等方发出的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" />。</span><span class="sxs-lookup"><span data-stu-id="91c6c-176">A <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> from the peer that received the invitation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91c6c-177">调用此方法需要 <xref:System.Security.Permissions.PermissionState> 的 <xref:System.Security.Permissions.PermissionState.Unrestricted> 。</span><span class="sxs-lookup"><span data-stu-id="91c6c-177">Calling this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>.</span></span> <span data-ttu-id="91c6c-178">此状态是在对等方协作会话开始时创建的。</span><span class="sxs-lookup"><span data-stu-id="91c6c-178">This state is created when the Peer Collaboration session begins.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="91c6c-179">-   在邀请过程中出现错误。</span><span class="sxs-lookup"><span data-stu-id="91c6c-179">-   An error occurred during the invitation process.</span></span>  
  
<span data-ttu-id="91c6c-180">-   当前执行的应用程序未在对等方协作基础结构中注册。</span><span class="sxs-lookup"><span data-stu-id="91c6c-180">-   The currently executing application is not registered with the Peer Collaboration infrastructure.</span></span></exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      </Docs>
    </Member>
    <Member MemberName="Invite">
      <MemberSignature Language="C#" Value="public abstract System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite (System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite(class System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, unsigned int8[] invitationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Invite (applicationToInvite As PeerApplication, message As String, invitationData As Byte()) As PeerInvitationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Net::PeerToPeer::Collaboration::PeerInvitationResponse ^ Invite(System::Net::PeerToPeer::Collaboration::PeerApplication ^ applicationToInvite, System::String ^ message, cli::array &lt;System::Byte&gt; ^ invitationData);" />
      <MemberSignature Language="F#" Value="abstract member Invite : System.Net.PeerToPeer.Collaboration.PeerApplication * string * byte[] -&gt; System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" Usage="peer.Invite (applicationToInvite, message, invitationData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerInvitationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="invitationData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="applicationToInvite"><span data-ttu-id="91c6c-181">要向其发送邀请的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。</span><span class="sxs-lookup"><span data-stu-id="91c6c-181">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> for which the invitation is sent.</span></span></param>
        <param name="message"><span data-ttu-id="91c6c-182">要与应用程序邀请一起发送到远程对等方的消息。</span><span class="sxs-lookup"><span data-stu-id="91c6c-182">A message to send to the remote peer along with the application invitation.</span></span>  <span data-ttu-id="91c6c-183">消息的长度不能超过 255 个 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="91c6c-183">The message can be no more than 255 Unicode characters.</span></span></param>
        <param name="invitationData"><span data-ttu-id="91c6c-184">与邀请关联的用户定义的数据 Blob。</span><span class="sxs-lookup"><span data-stu-id="91c6c-184">A user defined data blob to associate with the invitation.</span></span>  <span data-ttu-id="91c6c-185">其大小不能超过 16,384 字节。</span><span class="sxs-lookup"><span data-stu-id="91c6c-185">Its size can be no more than 16,384 bytes.</span></span></param>
        <summary><span data-ttu-id="91c6c-186">向 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 发送邀请以启动特定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。</span><span class="sxs-lookup"><span data-stu-id="91c6c-186">Sends an invitation to a <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> to start a specific <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />.</span></span></summary>
        <returns><span data-ttu-id="91c6c-187">从收到邀请的对等方发出的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" />。</span><span class="sxs-lookup"><span data-stu-id="91c6c-187">A <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> from the peer that received the invitation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91c6c-188">调用此方法需要 <xref:System.Security.Permissions.PermissionState> 的 <xref:System.Security.Permissions.PermissionState.Unrestricted> 。</span><span class="sxs-lookup"><span data-stu-id="91c6c-188">Calling this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>.</span></span> <span data-ttu-id="91c6c-189">此状态是在对等方协作会话开始时创建的。</span><span class="sxs-lookup"><span data-stu-id="91c6c-189">This state is created when the peer collaboration session begins.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="91c6c-190">该应用程序并不是为协作注册的。</span><span class="sxs-lookup"><span data-stu-id="91c6c-190">The application is not registered for collaboration.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="91c6c-191"><paramref name="invitationData" /> 大于 16,384 字节。</span><span class="sxs-lookup"><span data-stu-id="91c6c-191"><paramref name="invitationData" /> is larger than 16,384 bytes.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="91c6c-192">-   在邀请过程中出现错误。</span><span class="sxs-lookup"><span data-stu-id="91c6c-192">-   An error occurred during the invitation process.</span></span>  
  
<span data-ttu-id="91c6c-193">-   当前执行的应用程序未在对等方协作基础结构中注册。</span><span class="sxs-lookup"><span data-stu-id="91c6c-193">-   The currently executing application is not registered with the peer collaboration infrastructure.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="InviteAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="91c6c-194">开始异步邀请操作，该操作会向 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 发送邀请以启用特定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。</span><span class="sxs-lookup"><span data-stu-id="91c6c-194">Begins an asynchronous invitation operation which sends an invitation to a <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> to start a specific <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />.</span></span></summary>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs" />
      </Docs>
    </MemberGroup>
    <Member MemberName="InviteAsync">
      <MemberSignature Language="C#" Value="public abstract void InviteAsync (object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InviteAsync(object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub InviteAsync (userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void InviteAsync(System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="abstract member InviteAsync : obj -&gt; unit" Usage="peer.InviteAsync userToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userToken"><span data-ttu-id="91c6c-195">要传递给异步操作回调进行标识的用户定义的对象。</span><span class="sxs-lookup"><span data-stu-id="91c6c-195">User-defined object to pass to the callback of the asynchronous operation for identification.</span></span> <span data-ttu-id="91c6c-196">此所需参数在正在进行的所有异步邀请操作中必须唯一。</span><span class="sxs-lookup"><span data-stu-id="91c6c-196">This required parameter must be unique across all asynchronous invitation operations in progress.</span></span></param>
        <summary><span data-ttu-id="91c6c-197">开始异步邀请操作，该操作会向 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 发送邀请以启用特定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。</span><span class="sxs-lookup"><span data-stu-id="91c6c-197">Begins an asynchronous invitation operation which sends an invitation to a <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> to start a specific <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91c6c-198">调用此方法需要 <xref:System.Security.Permissions.PermissionState> 的 <xref:System.Security.Permissions.PermissionState.Unrestricted> 。</span><span class="sxs-lookup"><span data-stu-id="91c6c-198">Calling this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>.</span></span> <span data-ttu-id="91c6c-199">此状态是在对等方协作会话开始时创建的。</span><span class="sxs-lookup"><span data-stu-id="91c6c-199">This state is created when the peer collaboration session begins.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="91c6c-200"><paramref name="userToken" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="91c6c-200"><paramref name="userToken" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="91c6c-201">-   在邀请过程中出现错误。</span><span class="sxs-lookup"><span data-stu-id="91c6c-201">-   An error occurred during the invitation process.</span></span>  
  
<span data-ttu-id="91c6c-202">-   当前正在执行的应用程序未注册到协作基础结构。</span><span class="sxs-lookup"><span data-stu-id="91c6c-202">-   The currently executing application is not registered with the collaboration infrastructure.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="InviteAsync">
      <MemberSignature Language="C#" Value="public abstract void InviteAsync (System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InviteAsync(class System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, unsigned int8[] invitationData, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub InviteAsync (applicationToInvite As PeerApplication, message As String, invitationData As Byte(), userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void InviteAsync(System::Net::PeerToPeer::Collaboration::PeerApplication ^ applicationToInvite, System::String ^ message, cli::array &lt;System::Byte&gt; ^ invitationData, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="abstract member InviteAsync : System.Net.PeerToPeer.Collaboration.PeerApplication * string * byte[] * obj -&gt; unit" Usage="peer.InviteAsync (applicationToInvite, message, invitationData, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="invitationData" Type="System.Byte[]" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="applicationToInvite"><span data-ttu-id="91c6c-203">要向其发送邀请的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。</span><span class="sxs-lookup"><span data-stu-id="91c6c-203">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> for which the invitation is sent.</span></span></param>
        <param name="message"><span data-ttu-id="91c6c-204">要与应用程序邀请一起发送到远程对等方的消息。</span><span class="sxs-lookup"><span data-stu-id="91c6c-204">A message to send to the remote peer along with the application invitation.</span></span> <span data-ttu-id="91c6c-205">此消息的最大大小为 255 个 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="91c6c-205">The maximum size of this message is 255 Unicode characters.</span></span></param>
        <param name="invitationData"><span data-ttu-id="91c6c-206">与邀请关联的用户定义的数据 Blob。</span><span class="sxs-lookup"><span data-stu-id="91c6c-206">A user defined data blob to associate with the invitation.</span></span>  <span data-ttu-id="91c6c-207">其大小不能超过 16,384 字节。</span><span class="sxs-lookup"><span data-stu-id="91c6c-207">Its size can be no more than 16,384 bytes.</span></span></param>
        <param name="userToken"><span data-ttu-id="91c6c-208">要传递给异步操作回调进行标识的用户定义的对象。</span><span class="sxs-lookup"><span data-stu-id="91c6c-208">User-defined object to pass to the callback of the asynchronous operation for identification.</span></span> <span data-ttu-id="91c6c-209">此所需参数在正在进行的所有异步邀请操作中必须唯一。</span><span class="sxs-lookup"><span data-stu-id="91c6c-209">This required parameter must be unique across all asynchronous invitation operations in progress.</span></span></param>
        <summary><span data-ttu-id="91c6c-210">开始异步邀请操作，该操作会向 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 发送邀请以启用特定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。</span><span class="sxs-lookup"><span data-stu-id="91c6c-210">Begins an asynchronous invitation operation which sends an invitation to a <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> to start a specific <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91c6c-211">调用此方法需要 <xref:System.Security.Permissions.PermissionState> 的 <xref:System.Security.Permissions.PermissionState.Unrestricted> 。</span><span class="sxs-lookup"><span data-stu-id="91c6c-211">Calling this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>.</span></span> <span data-ttu-id="91c6c-212">此状态是在对等方协作会话开始时创建的。</span><span class="sxs-lookup"><span data-stu-id="91c6c-212">This state is created when the peer collaboration session begins.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="91c6c-213">应用程序未注册到协作基础结构。</span><span class="sxs-lookup"><span data-stu-id="91c6c-213">The application is not registered with the collaboration infrastructure.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="91c6c-214"><paramref name="userToken" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="91c6c-214"><paramref name="userToken" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="91c6c-215"><paramref name="invitationData" /> 大于 16,384 字节。</span><span class="sxs-lookup"><span data-stu-id="91c6c-215"><paramref name="invitationData" /> is larger than 16,384 bytes.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="91c6c-216">-   在邀请过程中出现错误。</span><span class="sxs-lookup"><span data-stu-id="91c6c-216">-   An error occurred during the invitation process.</span></span>  
  
<span data-ttu-id="91c6c-217">-   当前正在执行的应用程序未注册到协作基础结构。</span><span class="sxs-lookup"><span data-stu-id="91c6c-217">-   The currently executing application is not registered with the collaboration infrastructure.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="InviteAsyncCancel">
      <MemberSignature Language="C#" Value="public void InviteAsyncCancel (object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InviteAsyncCancel(object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InviteAsyncCancel (userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InviteAsyncCancel(System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.InviteAsyncCancel : obj -&gt; unit" Usage="peer.InviteAsyncCancel userToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userToken"><span data-ttu-id="91c6c-218">要传递给 <see cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)" /> 操作回调进行标识的用户定义的对象。</span><span class="sxs-lookup"><span data-stu-id="91c6c-218">User defined object to pass to the callback of the <see cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)" /> operation for identification.</span></span> <span data-ttu-id="91c6c-219">此所需参数在正在进行的所有异步邀请操作中必须唯一。</span><span class="sxs-lookup"><span data-stu-id="91c6c-219">This required parameter must be unique across all asynchronous invitation operations in progress.</span></span></param>
        <summary><span data-ttu-id="91c6c-220">取消使用 <see cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)" /> 方法发送的邀请。</span><span class="sxs-lookup"><span data-stu-id="91c6c-220">Cancels the invitation that was sent with the <see cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91c6c-221">调用此方法可确保系统将停止等待 <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> 与 InviteAsync 请求关联的对等方。</span><span class="sxs-lookup"><span data-stu-id="91c6c-221">Calling this method guarantees the system will cease to wait for a <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> from the peer associated with the InviteAsync request.</span></span>  
  
 <span data-ttu-id="91c6c-222">在任意给定时间，可能会有多个邀请未完成。</span><span class="sxs-lookup"><span data-stu-id="91c6c-222">Multiple invitations may be outstanding at any given time.</span></span>  <span data-ttu-id="91c6c-223">如果在由 <xref:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel%2A> 标识的异步操作不存在时调用方法 `userToken` ，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="91c6c-223">If the <xref:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel%2A> method is called when an asynchronous operation identified by the `userToken` is not in existence, an exception is thrown.</span></span> <span data-ttu-id="91c6c-224">`userToken`必须提供对象，因为它用于跟踪特定的异步调用。</span><span class="sxs-lookup"><span data-stu-id="91c6c-224">The `userToken` object must be provided since it is used to track a specific asynchronous call.</span></span> <span data-ttu-id="91c6c-225">此主机应用程序提供的对象对于每个邀请请求都是唯一的。</span><span class="sxs-lookup"><span data-stu-id="91c6c-225">This host application-supplied object is unique for each invite request.</span></span>  
  
 <span data-ttu-id="91c6c-226">使用此方法时， <xref:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted> 仍可能引发事件，但关联对象上的 "已取消" 属性 <xref:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs> 将设置为 `true.`</span><span class="sxs-lookup"><span data-stu-id="91c6c-226">When this method is used, the <xref:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted> event can still be raised, but the Cancelled property on the associated <xref:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs> object will be set to `true.`</span></span>  
  
 <span data-ttu-id="91c6c-227">调用此方法需要 <xref:System.Security.Permissions.PermissionState> 的 <xref:System.Security.Permissions.PermissionState.Unrestricted> 。</span><span class="sxs-lookup"><span data-stu-id="91c6c-227">Calling this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="91c6c-228"><paramref name="userToken" /> 参数不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="91c6c-228">The <paramref name="userToken" /> parameter cannot be <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="91c6c-229">异步邀请不是未完成的。</span><span class="sxs-lookup"><span data-stu-id="91c6c-229">An asynchronous invitation is not outstanding.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.Invite" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs.InviteResponse" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType" />
      </Docs>
    </Member>
    <Member MemberName="InviteCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs&gt; InviteCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs&gt; InviteCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InviteCompleted As EventHandler(Of InviteCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::InviteCompletedEventArgs ^&gt; ^ InviteCompleted;" />
      <MemberSignature Language="F#" Value="member this.InviteCompleted : EventHandler&lt;System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs&gt; " Usage="member this.InviteCompleted : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="91c6c-230">在完成对远程对等方的邀请过程时引发。</span><span class="sxs-lookup"><span data-stu-id="91c6c-230">Raised when the invitation process for a remote peer has completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91c6c-231"><xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse>指定邀请操作的结果。</span><span class="sxs-lookup"><span data-stu-id="91c6c-231">The <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> specifies the result of the invitation operation.</span></span>  
  
 <span data-ttu-id="91c6c-232">调用此方法需要 <xref:System.Security.Permissions.PermissionState> 的 <xref:System.Security.Permissions.PermissionState.Unrestricted> 。</span><span class="sxs-lookup"><span data-stu-id="91c6c-232">Calling this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="91c6c-233">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="91c6c-233">This <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> object has been disposed.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="IsOnline">
      <MemberSignature Language="C#" Value="public bool IsOnline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOnline" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.Peer.IsOnline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOnline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOnline { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOnline : bool" Usage="System.Net.PeerToPeer.Collaboration.Peer.IsOnline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="91c6c-234">获取一个值，该值指定 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 当前是否处于“联机状态”。</span><span class="sxs-lookup"><span data-stu-id="91c6c-234">Gets a value specifying if the <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> is currently 'online'.</span></span></summary>
        <value><span data-ttu-id="91c6c-235"><see langword="true" /> 如果在 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 与其关联的任何终结点上处于联机状态，则为; 否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="91c6c-235"><see langword="true" /> if the <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> is online at any of the endpoints associated with it; otherwise, <see langword="false" />.</span></span>  
  
<span data-ttu-id="91c6c-236">除非指定，否则此属性的默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="91c6c-236">Unless specified, the default value for this property is <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="91c6c-237"><see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 对象已释放。</span><span class="sxs-lookup"><span data-stu-id="91c6c-237">The <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> object has been disposed.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnInviteCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnInviteCompleted (System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInviteCompleted(class System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInviteCompleted (e As InviteCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInviteCompleted(System::Net::PeerToPeer::Collaboration::InviteCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInviteCompleted : System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs -&gt; unit&#xA;override this.OnInviteCompleted : System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs -&gt; unit" Usage="peer.OnInviteCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="91c6c-238"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> 对象，它包含要传递给与 <see cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" /> 事件关联的代理的事件数据。</span><span class="sxs-lookup"><span data-stu-id="91c6c-238">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> object containing the event data to be passed to delegates associated with the <see cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" /> event.</span></span></param>
        <summary><span data-ttu-id="91c6c-239">引发 <see cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="91c6c-239">Raises the <see cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91c6c-240">从此类继承的类可以重写此方法，以便在引发事件时执行其他任务 <xref:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted> 。</span><span class="sxs-lookup"><span data-stu-id="91c6c-240">Classes that inherit from this class can override this method to perform additional tasks when the <xref:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.Invite" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="PeerEndPoints">
      <MemberSignature Language="C#" Value="public virtual System.Net.PeerToPeer.Collaboration.PeerEndPointCollection PeerEndPoints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.Collaboration.PeerEndPointCollection PeerEndPoints" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PeerEndPoints As PeerEndPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::PeerToPeer::Collaboration::PeerEndPointCollection ^ PeerEndPoints { System::Net::PeerToPeer::Collaboration::PeerEndPointCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PeerEndPoints : System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" Usage="System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerEndPointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="91c6c-241">获取与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />。</span><span class="sxs-lookup"><span data-stu-id="91c6c-241">Gets the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />.</span></span></summary>
        <value><span data-ttu-id="91c6c-242">与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />。</span><span class="sxs-lookup"><span data-stu-id="91c6c-242">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91c6c-243">当远程对等机是主机对等方的中介时， <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> 包含在 <xref:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection> 与远程对等方的本地联系人关联的对象。</span><span class="sxs-lookup"><span data-stu-id="91c6c-243">When a remote peer is an intermediary for a host peer, the <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> objects contained in <xref:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection> associate with the local contacts for the remote peer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="91c6c-244"><see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 对象已释放。</span><span class="sxs-lookup"><span data-stu-id="91c6c-244">The <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> object has been disposed.</span></span></exception>
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
      </Docs>
    </Member>
    <Member MemberName="SynchronizingObject">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISynchronizeInvoke SynchronizingObject" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject" />
      <MemberSignature Language="VB.NET" Value="Public Property SynchronizingObject As ISynchronizeInvoke" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ISynchronizeInvoke ^ SynchronizingObject { System::ComponentModel::ISynchronizeInvoke ^ get(); void set(System::ComponentModel::ISynchronizeInvoke ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizingObject : System.ComponentModel.ISynchronizeInvoke with get, set" Usage="System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Description("SynchronizingObject")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Description("SynchronizingObject")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISynchronizeInvoke</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="91c6c-245">设置此属性值后，将在创建特定 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject" /> 的线程上为因异步操作而未激发的所有事件回调关联的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="91c6c-245">When this property value is set, all events not fired as the result of an asynchronous operation will have the associated event handlers called back on the thread that created the specific <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject" />.</span></span></summary>
        <value><span data-ttu-id="91c6c-246">实现 <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> 接口的对象，此对象在创建它的线程上供该事件处理程序同步类型的实例使用。</span><span class="sxs-lookup"><span data-stu-id="91c6c-246">Object that implements the <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> interface and is used by instances of this type for event handler synchronization on the thread that created it.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91c6c-247">此属性的默认设置值为 `null` ，指示在系统线程池线程上调用所有事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="91c6c-247">The default set value for this property is `null`, indicating that all event handlers are called on a system thread pool thread.</span></span>  
  
 <span data-ttu-id="91c6c-248">此属性通常设置为 UI 元素（例如 <xref:System.Windows.Forms.Form> 实例）。</span><span class="sxs-lookup"><span data-stu-id="91c6c-248">This property is typically set to a UI element such as a <xref:System.Windows.Forms.Form> instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="91c6c-249">已释放调用对象。</span><span class="sxs-lookup"><span data-stu-id="91c6c-249">The calling object has been disposed.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.Form" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.Serialization.ISerializable.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.System.Runtime.Serialization.ISerializable.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="peer.System.Runtime.Serialization.ISerializable.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="91c6c-250">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span><span class="sxs-lookup"><span data-stu-id="91c6c-250">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</span></span></param>
        <param name="context"><span data-ttu-id="91c6c-251">此序列化的目标。</span><span class="sxs-lookup"><span data-stu-id="91c6c-251">The destination for the serialization.</span></span></param>
        <summary><span data-ttu-id="91c6c-252">使用序列化指定 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 实例所需的数据填充 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 类实例。</span><span class="sxs-lookup"><span data-stu-id="91c6c-252">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> class instance with the data required to serialize the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> instance.</span></span> <span data-ttu-id="91c6c-253">派生的类型必须调用基类型 <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="91c6c-253">A derived type must call the base type <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjects" />
        <altmember cref="N:System.Runtime.Serialization" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="peer.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="91c6c-254">返回一个 <see cref="T:System.String" />，它表示与 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />。</span><span class="sxs-lookup"><span data-stu-id="91c6c-254">Returns a <see cref="T:System.String" /> representing the <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />.</span></span></summary>
        <returns><span data-ttu-id="91c6c-255">表示 <see cref="T:System.String" /> 的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />。</span><span class="sxs-lookup"><span data-stu-id="91c6c-255"><see cref="T:System.String" /> representing the <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
      </Docs>
    </Member>
  </Members>
</Type>
