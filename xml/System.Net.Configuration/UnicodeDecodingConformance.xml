<Type Name="UnicodeDecodingConformance" FullName="System.Net.Configuration.UnicodeDecodingConformance">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d361d728d1aceceb42f10d9bee2260eb7967e45f" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="78698734" /></Metadata><TypeSignature Language="C#" Value="public enum UnicodeDecodingConformance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed UnicodeDecodingConformance extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Net.Configuration.UnicodeDecodingConformance" />
  <TypeSignature Language="VB.NET" Value="Public Enum UnicodeDecodingConformance" />
  <TypeSignature Language="C++ CLI" Value="public enum class UnicodeDecodingConformance" />
  <TypeSignature Language="F#" Value="type UnicodeDecodingConformance = " />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="560f5-101">控制 <see cref="Overload:System.Net.WebUtility.HtmlDecode" /> 方法如何解释 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="560f5-101">Controls how Unicode characters are interpreted by the <see cref="Overload:System.Net.WebUtility.HtmlDecode" /> methods.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="560f5-102">有关如何在 HTML 中对 Unicode 字符进行编码的详细信息，请参阅[在标记和 CSS 中使用字符转义](https://go.microsoft.com/fwlink/?LinkId=256607)。</span><span class="sxs-lookup"><span data-stu-id="560f5-102">For more information on how Unicode characters are supposed to be encoded in HTML, see [Using character escapes in markup and CSS](https://go.microsoft.com/fwlink/?LinkId=256607).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Net.WebUtility.HtmlDecode" />
  </Docs>
  <Members>
    <Member MemberName="Auto">
      <MemberSignature Language="C#" Value="Auto" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Configuration.UnicodeDecodingConformance Auto = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Configuration.UnicodeDecodingConformance.Auto" />
      <MemberSignature Language="VB.NET" Value="Auto" />
      <MemberSignature Language="C++ CLI" Value="Auto" />
      <MemberSignature Language="F#" Value="Auto = 0" Usage="System.Net.Configuration.UnicodeDecodingConformance.Auto" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Configuration.UnicodeDecodingConformance</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="560f5-103">使用自动行为。</span><span class="sxs-lookup"><span data-stu-id="560f5-103">Use automatic behavior.</span></span> <span data-ttu-id="560f5-104">解码行为由当前应用程序的目标框架确定。</span><span class="sxs-lookup"><span data-stu-id="560f5-104">The decoding behavior is determined by current application's target Framework.</span></span> <span data-ttu-id="560f5-105">对于 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 以及更高版本，Unicode 编码解码使用严格行为。</span><span class="sxs-lookup"><span data-stu-id="560f5-105">For [!INCLUDE[net_v45](~/includes/net-v45-md.md)] and later, the Unicode encoding decoding is strict.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Compat">
      <MemberSignature Language="C#" Value="Compat" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Configuration.UnicodeDecodingConformance Compat = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Configuration.UnicodeDecodingConformance.Compat" />
      <MemberSignature Language="VB.NET" Value="Compat" />
      <MemberSignature Language="C++ CLI" Value="Compat" />
      <MemberSignature Language="F#" Value="Compat = 2" Usage="System.Net.Configuration.UnicodeDecodingConformance.Compat" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Configuration.UnicodeDecodingConformance</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="560f5-106">使用兼容行为。</span><span class="sxs-lookup"><span data-stu-id="560f5-106">Use compatible behavior.</span></span> <span data-ttu-id="560f5-107">指定在解码前不检查传入数据的有效性。</span><span class="sxs-lookup"><span data-stu-id="560f5-107">Specifies that incoming data is not checked for validity before being decoded.</span></span> <span data-ttu-id="560f5-108">例如，输入字符串“&amp;amp;#xD84C;”会解码为 U+D84C，后者是一个不成对的代理。</span><span class="sxs-lookup"><span data-stu-id="560f5-108">For example, an input string of "&amp;amp;#xD84C;" would decode as U+D84C, which is an unpaired surrogate.</span></span> <span data-ttu-id="560f5-109">此外，除非码位表示为 HTML 编码的代理，否则解码器无法知道 SMP 中的码位，因此输入字符串“&amp;#144308;”可能会生成输出字符串“&amp;#144308;”。</span><span class="sxs-lookup"><span data-stu-id="560f5-109">Additionally, the decoder does not understand code points in the SMP unless they're represented as HTML-encoded surrogates, so the inputstring "&amp;#144308;" would result in the output string "&amp;#144308;".</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Loose">
      <MemberSignature Language="C#" Value="Loose" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Configuration.UnicodeDecodingConformance Loose = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Configuration.UnicodeDecodingConformance.Loose" />
      <MemberSignature Language="VB.NET" Value="Loose" />
      <MemberSignature Language="C++ CLI" Value="Loose" />
      <MemberSignature Language="F#" Value="Loose = 3" Usage="System.Net.Configuration.UnicodeDecodingConformance.Loose" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Configuration.UnicodeDecodingConformance</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="560f5-110">使用松散行为。</span><span class="sxs-lookup"><span data-stu-id="560f5-110">Use loose behavior.</span></span> <span data-ttu-id="560f5-111">与 <see cref="F:System.Net.Configuration.UnicodeDecodingConformance.Compat" /> 类似，没有有效性检查，但解码器也知道码位。</span><span class="sxs-lookup"><span data-stu-id="560f5-111">Similar to <see cref="F:System.Net.Configuration.UnicodeDecodingConformance.Compat" /> in that there are no validity checks, but the decoder also understands code points.</span></span> <span data-ttu-id="560f5-112">输入字符串“&amp;#144308;”正确解码为字符 U+233B4。</span><span class="sxs-lookup"><span data-stu-id="560f5-112">The input string "&amp;#144308;" would decode into the character U+233B4 correctly.</span></span> <span data-ttu-id="560f5-113">此开关在解码器不知道提供程序用于生成编码字符串的格式时提供最大互操作性。</span><span class="sxs-lookup"><span data-stu-id="560f5-113">This switch is meant to provide maximum interoperability when the decoder doesn't know which format the provider is using to generate the encoded string.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Strict">
      <MemberSignature Language="C#" Value="Strict" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Configuration.UnicodeDecodingConformance Strict = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Configuration.UnicodeDecodingConformance.Strict" />
      <MemberSignature Language="VB.NET" Value="Strict" />
      <MemberSignature Language="C++ CLI" Value="Strict" />
      <MemberSignature Language="F#" Value="Strict = 1" Usage="System.Net.Configuration.UnicodeDecodingConformance.Strict" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Configuration.UnicodeDecodingConformance</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="560f5-114">使用严格行为。</span><span class="sxs-lookup"><span data-stu-id="560f5-114">Use strict behavior.</span></span> <span data-ttu-id="560f5-115">指定在解码前不检查传入的编码数据的有效性。</span><span class="sxs-lookup"><span data-stu-id="560f5-115">Specifies that the incoming encoded data is checked for validity before being decoded.</span></span> <span data-ttu-id="560f5-116">例如，输入字符串“&amp;#144308;”解码为 U+233B4，但输入字符串“&amp;#xD84C;&amp;#xDFB4;”无法正确解码。</span><span class="sxs-lookup"><span data-stu-id="560f5-116">For example, an input string of "&amp;#144308;" would decode as U+233B4, but an input string of "&amp;#xD84C;&amp;#xDFB4;" would fail to decode properly.</span></span> <span data-ttu-id="560f5-117">不会检查字符串中已解码数据的有效性。</span><span class="sxs-lookup"><span data-stu-id="560f5-117">Already-decoded data in the string is not checked for validity.</span></span> <span data-ttu-id="560f5-118">例如，如果在解码期间跳过已解码的代理，即使该代理是不成对的代理，输入字符串“\ud800”都会生成输出字符串“\ud800”。</span><span class="sxs-lookup"><span data-stu-id="560f5-118">For example, an input string of "\ud800" will result in an output string of "\ud800", as the already-decoded surrogate is skipped during decoding, even though it is unpaired.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
