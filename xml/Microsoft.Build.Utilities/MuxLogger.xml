<Type Name="MuxLogger" FullName="Microsoft.Build.Utilities.MuxLogger">
  <Metadata><Meta Name="ms.openlocfilehash" Value="26e60d250e34307bbaac92668045bb3a415684fb" /><Meta Name="ms.sourcegitcommit" Value="02dd069b9696eb4eee675b6541f86b2602076448" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/20/2020" /><Meta Name="ms.locfileid" Value="92234732" /></Metadata><TypeSignature Language="C#" Value="public class MuxLogger : Microsoft.Build.Framework.INodeLogger" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MuxLogger extends System.Object implements class Microsoft.Build.Framework.ILogger, class Microsoft.Build.Framework.INodeLogger" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Utilities.MuxLogger" />
  <TypeSignature Language="VB.NET" Value="Public Class MuxLogger&#xA;Implements INodeLogger" />
  <TypeSignature Language="C++ CLI" Value="public ref class MuxLogger : Microsoft::Build::Framework::INodeLogger" />
  <TypeSignature Language="F#" Value="type MuxLogger = class&#xA;    interface INodeLogger&#xA;    interface ILogger" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.ILogger</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.INodeLogger</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>这是一个多路复用记录器。 该记录器的作用是允许在生成期间注册和注销多个记录器。 这是为了支持 VS IDE 方案，通过该方案可以为每个项目系统的生成请求注册和注销记录器。 这意味着一个物理生成能拥有多个逻辑生成，每个都带有它自己的记录器集。 
            
Mux 记录器将作为一般中心 /l 样式记录器向生成管理器注册自身。 它将负责根据消息所来自的逻辑生成，从生成管理器中接收消息并将它们发送到正确的记录器上。
            
要求：1）将在生成管理器的“开始生成”操作开始时注册多路复用记录器。在生成管理器实际开始生成之前注册的任何记录器将与 MUX 记录器同时获得生成开始事件。在生成管理器开始生成后注册的所有记录器将获得合成的生成开始事件。 无法缓存该事件，因为在创建事件时就确定了生成开始事件的时间戳，因此缓存该事件将导致在注册到 MUX 的记录器中提供错误的生成时间。
                    
2）生成管理器将对 MUX 记录器进行初始化。
多路复用器将从生成管理器监听事件源上的所有事件，并将事件正确地路由到已注册的记录器。
                
3）当“结束生成”中的生成结束时，MUX 记录器将关闭。 此时，它将注销连接到它的所有记录器。
                
4）当每个记录器的第一个项目开始事件的项目完成事件出现时，MUX 记录器将记录“生成完成”事件。
               
正在注册记录器： 
多路复用记录器将按以下方式工作：系统将使用一个提交 ID 将记录器传递到 MUX 注册记录器方法，该提交 ID 用于将消息路由到正确的记录器。
将创建一个新的事件源，以便可以将传入的记录器注册到该事件源。如果已经记录了生成启动事件，MUX 记录器将创建一个新的 BuildStartedEvent 并将其发送到事件源。
                
UnregisterLoggers：“生成提交”完成后，将使用提交 ID 调用 UnregisterLoggers 方法。
此时，我们将为提交 ID 查找项目完成事件的成功状态，并将生成完成事件记录到记录器中。
将清理事件源。  这看上去可能很有趣，因为注销操作将来自日志记录操作以外的其他线程。
如果在记录事件时调用注销操作，这可能会导致同步问题。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `MuxLogger`一般函数如下所示：  
  
-   在 `MuxLogger` 生成管理器的开始生成时注册。  
  
     在生成管理器启动生成之前注册的任何记录器都将以与相同的时间获取生成启动事件 `MuxLogger` 。  
  
     生成管理器启动生成后注册的任何记录器都将获取合成生成启动事件。 无法缓存事件，因为在创建事件时确定了生成启动事件的时间戳，而缓存事件会在注册到的记录器中产生错误的生成时间 `MuxLogger` 。  
  
-   `MuxLogger`由生成管理器初始化  
  
     `MuxLogger`从生成管理器侦听来自事件源的所有事件，并将事件正确路由到已注册的记录器。  
  
-   `MuxLogger`当生成在结束生成中完成时，将关闭。 此时，它会取消注册附加到它的所有记录器。  
  
-   为 `MuxLogger` 每个记录器显示第一个项目开始事件的项目完成事件时，将记录生成完成事件。  
  
 `MuxLogger`注册记录器的方法如下：  
  
1.  记录器传递给 `MuxLogger.RegisterLogger` 方法，其中包含用于将消息路由到记录器的提交 ID。  
  
2.  将 `MuxLogger` 记录器注册到 `MuxLogger` 事件源。  
  
3.  如果已记录生成已启动的事件，则 `MuxLogger` 会创建一个新的生成启动事件，并将其发送到记录器的事件源。  
  
 `MuxLogger`注销记录器的方法如下：  
  
1.  完成生成提交后，将 `MuxLogger.UnregisterLogger` 使用记录器的提交 ID 调用方法。  
  
2.  将 `MuxLogger` 查找提交 ID 的项目完成事件的成功状态，并将生成结束事件记录到记录器。  
  
3.  `MuxLogger`清理事件源。  
  
     请注意，取消注册来自记录线程以外的线程，如果在记录事件时调用了 "取消注册"，则可能会出现同步问题。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MuxLogger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MuxLogger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>构造函数。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeEvaluationMetaprojects">
      <MemberSignature Language="C#" Value="public bool IncludeEvaluationMetaprojects { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeEvaluationMetaprojects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.MuxLogger.IncludeEvaluationMetaprojects" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeEvaluationMetaprojects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeEvaluationMetaprojects { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeEvaluationMetaprojects : bool with get, set" Usage="Microsoft.Build.Utilities.MuxLogger.IncludeEvaluationMetaprojects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>评估事件是否应包括生成的元项目？</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeEvaluationProfiles">
      <MemberSignature Language="C#" Value="public bool IncludeEvaluationProfiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeEvaluationProfiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.MuxLogger.IncludeEvaluationProfiles" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeEvaluationProfiles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeEvaluationProfiles { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeEvaluationProfiles : bool with get, set" Usage="Microsoft.Build.Utilities.MuxLogger.IncludeEvaluationProfiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>评估事件是否应包括分析信息？</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeTaskInputs">
      <MemberSignature Language="C#" Value="public bool IncludeTaskInputs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeTaskInputs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.MuxLogger.IncludeTaskInputs" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeTaskInputs As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeTaskInputs { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeTaskInputs : bool with get, set" Usage="Microsoft.Build.Utilities.MuxLogger.IncludeTaskInputs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>任务事件是否应包括任务输入？</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Initialize">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see langword="MuxLogger" /> 实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (Microsoft.Build.Framework.IEventSource eventSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class Microsoft.Build.Framework.IEventSource eventSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.Initialize(Microsoft.Build.Framework.IEventSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (eventSource As IEventSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(Microsoft::Build::Framework::IEventSource ^ eventSource);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : Microsoft.Build.Framework.IEventSource -&gt; unit&#xA;override this.Initialize : Microsoft.Build.Framework.IEventSource -&gt; unit" Usage="muxLogger.Initialize eventSource" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ILogger.Initialize(Microsoft.Build.Framework.IEventSource)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="Microsoft.Build.Framework.IEventSource" />
      </Parameters>
      <Docs>
        <param name="eventSource">事件源。</param>
        <summary>初始化记录器。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (Microsoft.Build.Framework.IEventSource eventSource, int maxNodeCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class Microsoft.Build.Framework.IEventSource eventSource, int32 maxNodeCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (eventSource As IEventSource, maxNodeCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(Microsoft::Build::Framework::IEventSource ^ eventSource, int maxNodeCount);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : Microsoft.Build.Framework.IEventSource * int -&gt; unit&#xA;override this.Initialize : Microsoft.Build.Framework.IEventSource * int -&gt; unit" Usage="muxLogger.Initialize (eventSource, maxNodeCount)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.INodeLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="Microsoft.Build.Framework.IEventSource" />
        <Parameter Name="maxNodeCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventSource">事件源。</param>
        <param name="maxNodeCount">最大节点数。</param>
        <summary>初始化记录器。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public string Parameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.MuxLogger.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public Property Parameters As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Parameters { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : string with get, set" Usage="Microsoft.Build.Utilities.MuxLogger.Parameters" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ILogger.Parameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>需要用于 ILoggerInterface</summary>
        <value>Parameters 特性。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterLogger">
      <MemberSignature Language="C#" Value="public void RegisterLogger (int submissionId, Microsoft.Build.Framework.ILogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterLogger(int32 submissionId, class Microsoft.Build.Framework.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.RegisterLogger(System.Int32,Microsoft.Build.Framework.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterLogger (submissionId As Integer, logger As ILogger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterLogger(int submissionId, Microsoft::Build::Framework::ILogger ^ logger);" />
      <MemberSignature Language="F#" Value="member this.RegisterLogger : int * Microsoft.Build.Framework.ILogger -&gt; unit" Usage="muxLogger.RegisterLogger (submissionId, logger)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="submissionId" Type="System.Int32" />
        <Parameter Name="logger" Type="Microsoft.Build.Framework.ILogger" />
      </Parameters>
      <Docs>
        <param name="submissionId">注册的记录器的提交 ID。</param>
        <param name="logger">要注册的记录器。</param>
        <summary>如果已经记录了生成开始事件，则此方法将在 MUX 记录器上注册一个记录器，然后引发生成开始事件</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Shutdown();" />
      <MemberSignature Language="F#" Value="abstract member Shutdown : unit -&gt; unit&#xA;override this.Shutdown : unit -&gt; unit" Usage="muxLogger.Shutdown " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ILogger.Shutdown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>关闭 mux 记录器并清除任何状态</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterLoggers">
      <MemberSignature Language="C#" Value="public bool UnregisterLoggers (int submissionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool UnregisterLoggers(int32 submissionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.UnregisterLoggers(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function UnregisterLoggers (submissionId As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool UnregisterLoggers(int submissionId);" />
      <MemberSignature Language="F#" Value="member this.UnregisterLoggers : int -&gt; bool" Usage="muxLogger.UnregisterLoggers submissionId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="submissionId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="submissionId">要移除的记录器的提交 ID。</param>
        <summary>注销给定提交 ID 的所有记录器。</summary>
        <returns>如果方法成功移除记录器，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbosity">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.LoggerVerbosity Verbosity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.LoggerVerbosity Verbosity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.MuxLogger.Verbosity" />
      <MemberSignature Language="VB.NET" Value="Public Property Verbosity As LoggerVerbosity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Framework::LoggerVerbosity Verbosity { Microsoft::Build::Framework::LoggerVerbosity get(); void set(Microsoft::Build::Framework::LoggerVerbosity value); };" />
      <MemberSignature Language="F#" Value="member this.Verbosity : Microsoft.Build.Framework.LoggerVerbosity with get, set" Usage="Microsoft.Build.Utilities.MuxLogger.Verbosity" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ILogger.Verbosity</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.LoggerVerbosity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>需要用于 ILogger 接口</summary>
        <value>详细级别特性。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
