<Type Name="MuxLogger" FullName="Microsoft.Build.Utilities.MuxLogger">
  <Metadata><Meta Name="ms.openlocfilehash" Value="26e60d250e34307bbaac92668045bb3a415684fb" /><Meta Name="ms.sourcegitcommit" Value="02dd069b9696eb4eee675b6541f86b2602076448" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/20/2020" /><Meta Name="ms.locfileid" Value="92234732" /></Metadata><TypeSignature Language="C#" Value="public class MuxLogger : Microsoft.Build.Framework.INodeLogger" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MuxLogger extends System.Object implements class Microsoft.Build.Framework.ILogger, class Microsoft.Build.Framework.INodeLogger" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Utilities.MuxLogger" />
  <TypeSignature Language="VB.NET" Value="Public Class MuxLogger&#xA;Implements INodeLogger" />
  <TypeSignature Language="C++ CLI" Value="public ref class MuxLogger : Microsoft::Build::Framework::INodeLogger" />
  <TypeSignature Language="F#" Value="type MuxLogger = class&#xA;    interface INodeLogger&#xA;    interface ILogger" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.ILogger</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.INodeLogger</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="38282-101">这是一个多路复用记录器。</span><span class="sxs-lookup"><span data-stu-id="38282-101">This is a multiplexing logger.</span></span> <span data-ttu-id="38282-102">该记录器的作用是允许在生成期间注册和注销多个记录器。</span><span class="sxs-lookup"><span data-stu-id="38282-102">The purpose of this logger is to allow the registration and deregistration of multiple loggers during the build.</span></span> <span data-ttu-id="38282-103">这是为了支持 VS IDE 方案，通过该方案可以为每个项目系统的生成请求注册和注销记录器。</span><span class="sxs-lookup"><span data-stu-id="38282-103">This is to support the VS IDE scenario where loggers are registered and unregistered for each project system's build request.</span></span> <span data-ttu-id="38282-104">这意味着一个物理生成能拥有多个逻辑生成，每个都带有它自己的记录器集。</span><span class="sxs-lookup"><span data-stu-id="38282-104">This means one physical build may have multiple logical builds each with their own set of loggers.</span></span> 
            
<span data-ttu-id="38282-105">Mux 记录器将作为一般中心 /l 样式记录器向生成管理器注册自身。</span><span class="sxs-lookup"><span data-stu-id="38282-105">The Mux logger will register itself with the build manager as a regular central /l style logger.</span></span> <span data-ttu-id="38282-106">它将负责根据消息所来自的逻辑生成，从生成管理器中接收消息并将它们发送到正确的记录器上。</span><span class="sxs-lookup"><span data-stu-id="38282-106">It will be responsible for receiving messages from the build manager and route them to the correct logger based on the logical build the message came from.</span></span>
            
<span data-ttu-id="38282-107">要求：1）将在生成管理器的“开始生成”操作开始时注册多路复用记录器。在生成管理器实际开始生成之前注册的任何记录器将与 MUX 记录器同时获得生成开始事件。在生成管理器开始生成后注册的所有记录器将获得合成的生成开始事件。</span><span class="sxs-lookup"><span data-stu-id="38282-107">Requirements: 1) Multiplexing logger will be registered at the beginning of the build manager's Begin build Any loggers registered before the build manager actually started building will get the build started event at the same time as the MUX logger Any loggers registered after the build manager starts the build will get a synthesised build started event.</span></span> <span data-ttu-id="38282-108">无法缓存该事件，因为在创建事件时就确定了生成开始事件的时间戳，因此缓存该事件将导致在注册到 MUX 的记录器中提供错误的生成时间。</span><span class="sxs-lookup"><span data-stu-id="38282-108">The event cannot be cached because the timestamp of the build started event is determined when the event is created, caching the event would give incorrect build times in the loggers registered to the MUX.</span></span>
                    
<span data-ttu-id="38282-109">2）生成管理器将对 MUX 记录器进行初始化。</span><span class="sxs-lookup"><span data-stu-id="38282-109">2) The MUX logger will be initialized by the build manager.</span></span>
<span data-ttu-id="38282-110">多路复用器将从生成管理器监听事件源上的所有事件，并将事件正确地路由到已注册的记录器。</span><span class="sxs-lookup"><span data-stu-id="38282-110">The mux will listen to all events on the event source from the build manager and will route events correctly to the registered loggers.</span></span>
                
<span data-ttu-id="38282-111">3）当“结束生成”中的生成结束时，MUX 记录器将关闭。</span><span class="sxs-lookup"><span data-stu-id="38282-111">3) The MUX logger will be shutdown when the build is finished in end build .</span></span> <span data-ttu-id="38282-112">此时，它将注销连接到它的所有记录器。</span><span class="sxs-lookup"><span data-stu-id="38282-112">At this time it will un-register any loggers attached to it.</span></span>
                
<span data-ttu-id="38282-113">4）当每个记录器的第一个项目开始事件的项目完成事件出现时，MUX 记录器将记录“生成完成”事件。</span><span class="sxs-lookup"><span data-stu-id="38282-113">4) The MUX logger will log the build finished event when the project finished event for the first project started event is seen for each logger.</span></span>
               
<span data-ttu-id="38282-114">正在注册记录器：</span><span class="sxs-lookup"><span data-stu-id="38282-114">Registering Loggers:</span></span> 
<span data-ttu-id="38282-115">多路复用记录器将按以下方式工作：系统将使用一个提交 ID 将记录器传递到 MUX 注册记录器方法，该提交 ID 用于将消息路由到正确的记录器。</span><span class="sxs-lookup"><span data-stu-id="38282-115">The multiplexing logger will function in the following way: A logger will be passed to the MUX Register logger method with a submission ID which will be used to route a the message to the correct logger.</span></span>
<span data-ttu-id="38282-116">将创建一个新的事件源，以便可以将传入的记录器注册到该事件源。如果已经记录了生成启动事件，MUX 记录器将创建一个新的 BuildStartedEvent 并将其发送到事件源。</span><span class="sxs-lookup"><span data-stu-id="38282-116">A new event source will be created so that the logger passed in can be registered to that event source If the build started event has already been logged the MUX logger will create a new BuildStartedEvent and send that to the event source.</span></span>
                
<span data-ttu-id="38282-117">UnregisterLoggers：“生成提交”完成后，将使用提交 ID 调用 UnregisterLoggers 方法。</span><span class="sxs-lookup"><span data-stu-id="38282-117">UnregisterLoggers: When a build submission is completed the UnregisterLoggers method will be called with the submission ID.</span></span>
<span data-ttu-id="38282-118">此时，我们将为提交 ID 查找项目完成事件的成功状态，并将生成完成事件记录到记录器中。</span><span class="sxs-lookup"><span data-stu-id="38282-118">At this point we will look up the success state of the project finished event for the submission ID and log a build finished event to the logger.</span></span>
<span data-ttu-id="38282-119">将清理事件源。</span><span class="sxs-lookup"><span data-stu-id="38282-119">The event source will be cleaned up.</span></span>  <span data-ttu-id="38282-120">这看上去可能很有趣，因为注销操作将来自日志记录操作以外的其他线程。</span><span class="sxs-lookup"><span data-stu-id="38282-120">This may be interesting because the unregister will come from a thread other than what is doing the logging.</span></span>
<span data-ttu-id="38282-121">如果在记录事件时调用注销操作，这可能会导致同步问题。</span><span class="sxs-lookup"><span data-stu-id="38282-121">This may create a Synchronization issue, if unregister is called while events are being logged.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38282-122">`MuxLogger`一般函数如下所示：</span><span class="sxs-lookup"><span data-stu-id="38282-122">The `MuxLogger` generally functions as follows:</span></span>  
  
-   <span data-ttu-id="38282-123">在 `MuxLogger` 生成管理器的开始生成时注册。</span><span class="sxs-lookup"><span data-stu-id="38282-123">The `MuxLogger` is registered at the beginning of the build manager's Begin build.</span></span>  
  
     <span data-ttu-id="38282-124">在生成管理器启动生成之前注册的任何记录器都将以与相同的时间获取生成启动事件 `MuxLogger` 。</span><span class="sxs-lookup"><span data-stu-id="38282-124">Any loggers registered before the build manager starts the build get the build-started event at the same time as the `MuxLogger`.</span></span>  
  
     <span data-ttu-id="38282-125">生成管理器启动生成后注册的任何记录器都将获取合成生成启动事件。</span><span class="sxs-lookup"><span data-stu-id="38282-125">Any loggers registered after the build manager starts the build get a synthesized build-started event.</span></span> <span data-ttu-id="38282-126">无法缓存事件，因为在创建事件时确定了生成启动事件的时间戳，而缓存事件会在注册到的记录器中产生错误的生成时间 `MuxLogger` 。</span><span class="sxs-lookup"><span data-stu-id="38282-126">The event cannot be cached because the timestamp of the build-started event is determined when the event is created, and caching the event would give incorrect build times in the loggers registered to the `MuxLogger`.</span></span>  
  
-   <span data-ttu-id="38282-127">`MuxLogger`由生成管理器初始化</span><span class="sxs-lookup"><span data-stu-id="38282-127">The `MuxLogger` is initialized by the build manager</span></span>  
  
     <span data-ttu-id="38282-128">`MuxLogger`从生成管理器侦听来自事件源的所有事件，并将事件正确路由到已注册的记录器。</span><span class="sxs-lookup"><span data-stu-id="38282-128">The `MuxLogger` listens to all events on the event source from the build manager and routes events correctly to the registered loggers.</span></span>  
  
-   <span data-ttu-id="38282-129">`MuxLogger`当生成在结束生成中完成时，将关闭。</span><span class="sxs-lookup"><span data-stu-id="38282-129">The `MuxLogger` is shutdown when the build is finished in end build.</span></span> <span data-ttu-id="38282-130">此时，它会取消注册附加到它的所有记录器。</span><span class="sxs-lookup"><span data-stu-id="38282-130">At this time, it unregisters any loggers attached to it.</span></span>  
  
-   <span data-ttu-id="38282-131">为 `MuxLogger` 每个记录器显示第一个项目开始事件的项目完成事件时，将记录生成完成事件。</span><span class="sxs-lookup"><span data-stu-id="38282-131">The `MuxLogger` logs the build-finished event when the project-finished event for the first project-started event is seen for each logger.</span></span>  
  
 <span data-ttu-id="38282-132">`MuxLogger`注册记录器的方法如下：</span><span class="sxs-lookup"><span data-stu-id="38282-132">The `MuxLogger` registers loggers in the following way:</span></span>  
  
1.  <span data-ttu-id="38282-133">记录器传递给 `MuxLogger.RegisterLogger` 方法，其中包含用于将消息路由到记录器的提交 ID。</span><span class="sxs-lookup"><span data-stu-id="38282-133">The logger is passed to the `MuxLogger.RegisterLogger` method with a submission ID that is used to route a message to that logger.</span></span>  
  
2.  <span data-ttu-id="38282-134">将 `MuxLogger` 记录器注册到 `MuxLogger` 事件源。</span><span class="sxs-lookup"><span data-stu-id="38282-134">The `MuxLogger` registers the logger to the `MuxLogger` event source.</span></span>  
  
3.  <span data-ttu-id="38282-135">如果已记录生成已启动的事件，则 `MuxLogger` 会创建一个新的生成启动事件，并将其发送到记录器的事件源。</span><span class="sxs-lookup"><span data-stu-id="38282-135">If the build-started event has already been logged, the `MuxLogger` creates a new build-started event and sends it to the logger's event source.</span></span>  
  
 <span data-ttu-id="38282-136">`MuxLogger`注销记录器的方法如下：</span><span class="sxs-lookup"><span data-stu-id="38282-136">The `MuxLogger` unregisters loggers in the following way:</span></span>  
  
1.  <span data-ttu-id="38282-137">完成生成提交后，将 `MuxLogger.UnregisterLogger` 使用记录器的提交 ID 调用方法。</span><span class="sxs-lookup"><span data-stu-id="38282-137">When a build submission is completed, the `MuxLogger.UnregisterLogger` method is called with the submission ID for the logger.</span></span>  
  
2.  <span data-ttu-id="38282-138">将 `MuxLogger` 查找提交 ID 的项目完成事件的成功状态，并将生成结束事件记录到记录器。</span><span class="sxs-lookup"><span data-stu-id="38282-138">The `MuxLogger` looks up the success state of the project-finished event for the submission ID and logs a build-finished event to the logger.</span></span>  
  
3.  <span data-ttu-id="38282-139">`MuxLogger`清理事件源。</span><span class="sxs-lookup"><span data-stu-id="38282-139">The `MuxLogger` cleans up the event source.</span></span>  
  
     <span data-ttu-id="38282-140">请注意，取消注册来自记录线程以外的线程，如果在记录事件时调用了 "取消注册"，则可能会出现同步问题。</span><span class="sxs-lookup"><span data-stu-id="38282-140">Note that the unregister comes from a thread other than the logging thread and a synchronization issue could occur if unregister is called while events are being logged.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MuxLogger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MuxLogger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="38282-141">构造函数。</span><span class="sxs-lookup"><span data-stu-id="38282-141">Constructor.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeEvaluationMetaprojects">
      <MemberSignature Language="C#" Value="public bool IncludeEvaluationMetaprojects { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeEvaluationMetaprojects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.MuxLogger.IncludeEvaluationMetaprojects" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeEvaluationMetaprojects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeEvaluationMetaprojects { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeEvaluationMetaprojects : bool with get, set" Usage="Microsoft.Build.Utilities.MuxLogger.IncludeEvaluationMetaprojects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38282-142">评估事件是否应包括生成的元项目？</span><span class="sxs-lookup"><span data-stu-id="38282-142">Should evaluation events include generated metaprojects?</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeEvaluationProfiles">
      <MemberSignature Language="C#" Value="public bool IncludeEvaluationProfiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeEvaluationProfiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.MuxLogger.IncludeEvaluationProfiles" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeEvaluationProfiles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeEvaluationProfiles { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeEvaluationProfiles : bool with get, set" Usage="Microsoft.Build.Utilities.MuxLogger.IncludeEvaluationProfiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38282-143">评估事件是否应包括分析信息？</span><span class="sxs-lookup"><span data-stu-id="38282-143">Should evaluation events include profiling information?</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeTaskInputs">
      <MemberSignature Language="C#" Value="public bool IncludeTaskInputs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeTaskInputs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.MuxLogger.IncludeTaskInputs" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeTaskInputs As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeTaskInputs { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeTaskInputs : bool with get, set" Usage="Microsoft.Build.Utilities.MuxLogger.IncludeTaskInputs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38282-144">任务事件是否应包括任务输入？</span><span class="sxs-lookup"><span data-stu-id="38282-144">Should task events include task inputs?</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Initialize">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="38282-145">初始化 <see langword="MuxLogger" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="38282-145">Initializes the <see langword="MuxLogger" /> instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (Microsoft.Build.Framework.IEventSource eventSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class Microsoft.Build.Framework.IEventSource eventSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.Initialize(Microsoft.Build.Framework.IEventSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (eventSource As IEventSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(Microsoft::Build::Framework::IEventSource ^ eventSource);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : Microsoft.Build.Framework.IEventSource -&gt; unit&#xA;override this.Initialize : Microsoft.Build.Framework.IEventSource -&gt; unit" Usage="muxLogger.Initialize eventSource" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ILogger.Initialize(Microsoft.Build.Framework.IEventSource)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="Microsoft.Build.Framework.IEventSource" />
      </Parameters>
      <Docs>
        <param name="eventSource"><span data-ttu-id="38282-146">事件源。</span><span class="sxs-lookup"><span data-stu-id="38282-146">The event source.</span></span></param>
        <summary><span data-ttu-id="38282-147">初始化记录器。</span><span class="sxs-lookup"><span data-stu-id="38282-147">Initialize the logger.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (Microsoft.Build.Framework.IEventSource eventSource, int maxNodeCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class Microsoft.Build.Framework.IEventSource eventSource, int32 maxNodeCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (eventSource As IEventSource, maxNodeCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(Microsoft::Build::Framework::IEventSource ^ eventSource, int maxNodeCount);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : Microsoft.Build.Framework.IEventSource * int -&gt; unit&#xA;override this.Initialize : Microsoft.Build.Framework.IEventSource * int -&gt; unit" Usage="muxLogger.Initialize (eventSource, maxNodeCount)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.INodeLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="Microsoft.Build.Framework.IEventSource" />
        <Parameter Name="maxNodeCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventSource"><span data-ttu-id="38282-148">事件源。</span><span class="sxs-lookup"><span data-stu-id="38282-148">The event source.</span></span></param>
        <param name="maxNodeCount"><span data-ttu-id="38282-149">最大节点数。</span><span class="sxs-lookup"><span data-stu-id="38282-149">The maximum number of nodes.</span></span></param>
        <summary><span data-ttu-id="38282-150">初始化记录器。</span><span class="sxs-lookup"><span data-stu-id="38282-150">Initialize the logger.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public string Parameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.MuxLogger.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public Property Parameters As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Parameters { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : string with get, set" Usage="Microsoft.Build.Utilities.MuxLogger.Parameters" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ILogger.Parameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38282-151">需要用于 ILoggerInterface</span><span class="sxs-lookup"><span data-stu-id="38282-151">Required for the ILoggerInterface</span></span></summary>
        <value><span data-ttu-id="38282-152">Parameters 特性。</span><span class="sxs-lookup"><span data-stu-id="38282-152">The Parameters attribute.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterLogger">
      <MemberSignature Language="C#" Value="public void RegisterLogger (int submissionId, Microsoft.Build.Framework.ILogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterLogger(int32 submissionId, class Microsoft.Build.Framework.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.RegisterLogger(System.Int32,Microsoft.Build.Framework.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterLogger (submissionId As Integer, logger As ILogger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterLogger(int submissionId, Microsoft::Build::Framework::ILogger ^ logger);" />
      <MemberSignature Language="F#" Value="member this.RegisterLogger : int * Microsoft.Build.Framework.ILogger -&gt; unit" Usage="muxLogger.RegisterLogger (submissionId, logger)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="submissionId" Type="System.Int32" />
        <Parameter Name="logger" Type="Microsoft.Build.Framework.ILogger" />
      </Parameters>
      <Docs>
        <param name="submissionId"><span data-ttu-id="38282-153">注册的记录器的提交 ID。</span><span class="sxs-lookup"><span data-stu-id="38282-153">The submission ID of the logger being registered.</span></span></param>
        <param name="logger"><span data-ttu-id="38282-154">要注册的记录器。</span><span class="sxs-lookup"><span data-stu-id="38282-154">The logger to register.</span></span></param>
        <summary><span data-ttu-id="38282-155">如果已经记录了生成开始事件，则此方法将在 MUX 记录器上注册一个记录器，然后引发生成开始事件</span><span class="sxs-lookup"><span data-stu-id="38282-155">This method will register a logger on the MUX logger and then raise a build started event if the build started event has already been logged</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Shutdown();" />
      <MemberSignature Language="F#" Value="abstract member Shutdown : unit -&gt; unit&#xA;override this.Shutdown : unit -&gt; unit" Usage="muxLogger.Shutdown " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ILogger.Shutdown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="38282-156">关闭 mux 记录器并清除任何状态</span><span class="sxs-lookup"><span data-stu-id="38282-156">Shutdown the mux logger and clear out any state</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterLoggers">
      <MemberSignature Language="C#" Value="public bool UnregisterLoggers (int submissionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool UnregisterLoggers(int32 submissionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.UnregisterLoggers(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function UnregisterLoggers (submissionId As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool UnregisterLoggers(int submissionId);" />
      <MemberSignature Language="F#" Value="member this.UnregisterLoggers : int -&gt; bool" Usage="muxLogger.UnregisterLoggers submissionId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="submissionId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="submissionId"><span data-ttu-id="38282-157">要移除的记录器的提交 ID。</span><span class="sxs-lookup"><span data-stu-id="38282-157">The submission ID of the logger to be removed.</span></span></param>
        <summary><span data-ttu-id="38282-158">注销给定提交 ID 的所有记录器。</span><span class="sxs-lookup"><span data-stu-id="38282-158">Unregisters all the loggers for a given submission id.</span></span></summary>
        <returns><span data-ttu-id="38282-159">如果方法成功移除记录器，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="38282-159"><see langword="true" /> if the method is successful in removing the logger; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbosity">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.LoggerVerbosity Verbosity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.LoggerVerbosity Verbosity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.MuxLogger.Verbosity" />
      <MemberSignature Language="VB.NET" Value="Public Property Verbosity As LoggerVerbosity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Framework::LoggerVerbosity Verbosity { Microsoft::Build::Framework::LoggerVerbosity get(); void set(Microsoft::Build::Framework::LoggerVerbosity value); };" />
      <MemberSignature Language="F#" Value="member this.Verbosity : Microsoft.Build.Framework.LoggerVerbosity with get, set" Usage="Microsoft.Build.Utilities.MuxLogger.Verbosity" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ILogger.Verbosity</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.LoggerVerbosity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38282-160">需要用于 ILogger 接口</span><span class="sxs-lookup"><span data-stu-id="38282-160">Required for ILogger interface</span></span></summary>
        <value><span data-ttu-id="38282-161">详细级别特性。</span><span class="sxs-lookup"><span data-stu-id="38282-161">The Verbosity attribute.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
