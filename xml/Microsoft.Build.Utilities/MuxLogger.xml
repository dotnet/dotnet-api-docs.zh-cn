<Type Name="MuxLogger" FullName="Microsoft.Build.Utilities.MuxLogger">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c037fb8f480f5c1333bda7055a455b07d7bee02a" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="86341924" /></Metadata><TypeSignature Language="C#" Value="public class MuxLogger : Microsoft.Build.Framework.INodeLogger" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MuxLogger extends System.Object implements class Microsoft.Build.Framework.ILogger, class Microsoft.Build.Framework.INodeLogger" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Utilities.MuxLogger" />
  <TypeSignature Language="VB.NET" Value="Public Class MuxLogger&#xA;Implements INodeLogger" />
  <TypeSignature Language="C++ CLI" Value="public ref class MuxLogger : Microsoft::Build::Framework::INodeLogger" />
  <TypeSignature Language="F#" Value="type MuxLogger = class&#xA;    interface INodeLogger&#xA;    interface ILogger" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.ILogger</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.INodeLogger</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>这是一个多路复用记录器。 此记录器的用途是允许在生成过程中注册和注销多个记录器。 这是为了支持 VS IDE 方案，其中为每个项目系统的生成请求注册和注销记录器。 这意味着一个物理生成可能有多个每个逻辑生成，每个都具有自己的记录器集。 
            
Mux 记录器会将其自身注册为生成管理器，作为常规中部/l 样式记录器。 它负责接收来自生成管理器的消息，并根据消息来自的逻辑生成将消息路由到正确的记录器。
            
要求： 1) 多路复用记录器将在生成管理器的开始生成之前注册在生成管理器实际开始生成之前注册的任何记录器，并在生成管理器启动生成后，将生成 "生成已启动" 事件，该事件在生成管理器启动后，将会收到 "生成已启动" 事件。 无法缓存事件，因为在创建事件时确定生成已启动事件的时间戳，因此缓存事件会在注册到 MUX 的记录器中产生错误的生成时间。
                    
2) 将由生成管理器初始化 MUX 记录器。
Mux 将从生成管理器侦听事件源中的所有事件，并将事件正确路由到已注册的记录器。
                
3) 在结束生成中完成生成时，MUX 记录器将关闭。 此时，它将取消注册附加到它的所有记录器。
                
4) 在为每个记录器显示第一个项目 "已启动" 事件的 "项目已完成" 事件时，MUX 记录器将记录 "生成完成" 事件。
               
正在注册记录器： 
多路复用记录器的工作方式如下：将使用提交 ID 将记录器传递到 MUX 注册记录器方法，该 ID 用于将消息路由到正确的记录器。
将创建一个新的事件源，以便在已记录生成已启动事件时，可以将传入的记录器注册到该事件源。 MUX 记录器会创建一个新的 BuildStartedEvent 并将其发送到事件源。
                
UnregisterLoggers：生成提交完成后，将使用提交 ID 调用 UnregisterLoggers 方法。
此时，我们将查找提交 ID 的项目已完成事件的成功状态，并将生成完成事件记录到记录器。
将清理事件源。  这可能很有趣，因为取消注册操作将来自执行日志记录的其他线程。
如果在记录事件时调用了 "注销"，这可能会导致同步问题。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `MuxLogger`一般函数如下所示：  
  
-   在 `MuxLogger` 生成管理器的开始生成时注册。  
  
     在生成管理器启动生成之前注册的任何记录器都将以与相同的时间获取生成启动事件 `MuxLogger` 。  
  
     生成管理器启动生成后注册的任何记录器都将获取合成生成启动事件。 无法缓存事件，因为在创建事件时确定了生成启动事件的时间戳，而缓存事件会在注册到的记录器中产生错误的生成时间 `MuxLogger` 。  
  
-   `MuxLogger`由生成管理器初始化  
  
     `MuxLogger`从生成管理器侦听来自事件源的所有事件，并将事件正确路由到已注册的记录器。  
  
-   `MuxLogger`当生成在结束生成中完成时，将关闭。 此时，它会取消注册附加到它的所有记录器。  
  
-   为 `MuxLogger` 每个记录器显示第一个项目开始事件的项目完成事件时，将记录生成完成事件。  
  
 `MuxLogger`注册记录器的方法如下：  
  
1.  记录器传递给 `MuxLogger.RegisterLogger` 方法，其中包含用于将消息路由到记录器的提交 ID。  
  
2.  将 `MuxLogger` 记录器注册到 `MuxLogger` 事件源。  
  
3.  如果已记录生成已启动的事件，则 `MuxLogger` 会创建一个新的生成启动事件，并将其发送到记录器的事件源。  
  
 `MuxLogger`注销记录器的方法如下：  
  
1.  完成生成提交后，将 `MuxLogger.UnregisterLogger` 使用记录器的提交 ID 调用方法。  
  
2.  将 `MuxLogger` 查找提交 ID 的项目完成事件的成功状态，并将生成结束事件记录到记录器。  
  
3.  `MuxLogger`清理事件源。  
  
     请注意，取消注册来自记录线程以外的线程，如果在记录事件时调用了 "取消注册"，则可能会出现同步问题。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MuxLogger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MuxLogger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>构造函数。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeEvaluationMetaprojects">
      <MemberSignature Language="C#" Value="public bool IncludeEvaluationMetaprojects { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeEvaluationMetaprojects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.MuxLogger.IncludeEvaluationMetaprojects" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeEvaluationMetaprojects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeEvaluationMetaprojects { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeEvaluationMetaprojects : bool with get, set" Usage="Microsoft.Build.Utilities.MuxLogger.IncludeEvaluationMetaprojects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>评估事件是否应包括生成的元项目？</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeEvaluationProfiles">
      <MemberSignature Language="C#" Value="public bool IncludeEvaluationProfiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeEvaluationProfiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.MuxLogger.IncludeEvaluationProfiles" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeEvaluationProfiles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeEvaluationProfiles { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeEvaluationProfiles : bool with get, set" Usage="Microsoft.Build.Utilities.MuxLogger.IncludeEvaluationProfiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>评估事件是否应包括分析信息？</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeTaskInputs">
      <MemberSignature Language="C#" Value="public bool IncludeTaskInputs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeTaskInputs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.MuxLogger.IncludeTaskInputs" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeTaskInputs As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeTaskInputs { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeTaskInputs : bool with get, set" Usage="Microsoft.Build.Utilities.MuxLogger.IncludeTaskInputs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>任务事件是否应包括任务输入？</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Initialize">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see langword="MuxLogger" /> 实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (Microsoft.Build.Framework.IEventSource eventSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class Microsoft.Build.Framework.IEventSource eventSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.Initialize(Microsoft.Build.Framework.IEventSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (eventSource As IEventSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(Microsoft::Build::Framework::IEventSource ^ eventSource);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : Microsoft.Build.Framework.IEventSource -&gt; unit&#xA;override this.Initialize : Microsoft.Build.Framework.IEventSource -&gt; unit" Usage="muxLogger.Initialize eventSource" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ILogger.Initialize(Microsoft.Build.Framework.IEventSource)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="Microsoft.Build.Framework.IEventSource" />
      </Parameters>
      <Docs>
        <param name="eventSource">事件源。</param>
        <summary>初始化记录器。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (Microsoft.Build.Framework.IEventSource eventSource, int maxNodeCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class Microsoft.Build.Framework.IEventSource eventSource, int32 maxNodeCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (eventSource As IEventSource, maxNodeCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(Microsoft::Build::Framework::IEventSource ^ eventSource, int maxNodeCount);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : Microsoft.Build.Framework.IEventSource * int -&gt; unit&#xA;override this.Initialize : Microsoft.Build.Framework.IEventSource * int -&gt; unit" Usage="muxLogger.Initialize (eventSource, maxNodeCount)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.INodeLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="Microsoft.Build.Framework.IEventSource" />
        <Parameter Name="maxNodeCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventSource">事件源。</param>
        <param name="maxNodeCount">最大节点数。</param>
        <summary>初始化记录器。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public string Parameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.MuxLogger.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public Property Parameters As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Parameters { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : string with get, set" Usage="Microsoft.Build.Utilities.MuxLogger.Parameters" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ILogger.Parameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ILoggerInterface 必需的</summary>
        <value>Parameters 特性。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterLogger">
      <MemberSignature Language="C#" Value="public void RegisterLogger (int submissionId, Microsoft.Build.Framework.ILogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterLogger(int32 submissionId, class Microsoft.Build.Framework.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.RegisterLogger(System.Int32,Microsoft.Build.Framework.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterLogger (submissionId As Integer, logger As ILogger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterLogger(int submissionId, Microsoft::Build::Framework::ILogger ^ logger);" />
      <MemberSignature Language="F#" Value="member this.RegisterLogger : int * Microsoft.Build.Framework.ILogger -&gt; unit" Usage="muxLogger.RegisterLogger (submissionId, logger)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="submissionId" Type="System.Int32" />
        <Parameter Name="logger" Type="Microsoft.Build.Framework.ILogger" />
      </Parameters>
      <Docs>
        <param name="submissionId">注册的记录器的提交 ID。</param>
        <param name="logger">要注册的记录器。</param>
        <summary>此方法将在 MUX 记录器上注册记录器，并在已记录生成已启动事件时引发生成开始事件</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Shutdown();" />
      <MemberSignature Language="F#" Value="abstract member Shutdown : unit -&gt; unit&#xA;override this.Shutdown : unit -&gt; unit" Usage="muxLogger.Shutdown " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ILogger.Shutdown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>关闭 mux 记录器并清除任何状态</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterLoggers">
      <MemberSignature Language="C#" Value="public bool UnregisterLoggers (int submissionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool UnregisterLoggers(int32 submissionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.UnregisterLoggers(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function UnregisterLoggers (submissionId As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool UnregisterLoggers(int submissionId);" />
      <MemberSignature Language="F#" Value="member this.UnregisterLoggers : int -&gt; bool" Usage="muxLogger.UnregisterLoggers submissionId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="submissionId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="submissionId">要移除的记录器的提交 ID。</param>
        <summary>注销给定提交 id 的所有记录器。</summary>
        <returns>如果方法成功移除记录器，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbosity">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.LoggerVerbosity Verbosity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.LoggerVerbosity Verbosity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.MuxLogger.Verbosity" />
      <MemberSignature Language="VB.NET" Value="Public Property Verbosity As LoggerVerbosity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Framework::LoggerVerbosity Verbosity { Microsoft::Build::Framework::LoggerVerbosity get(); void set(Microsoft::Build::Framework::LoggerVerbosity value); };" />
      <MemberSignature Language="F#" Value="member this.Verbosity : Microsoft.Build.Framework.LoggerVerbosity with get, set" Usage="Microsoft.Build.Utilities.MuxLogger.Verbosity" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ILogger.Verbosity</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.LoggerVerbosity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ILogger 接口需要</summary>
        <value>详细级别特性。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
