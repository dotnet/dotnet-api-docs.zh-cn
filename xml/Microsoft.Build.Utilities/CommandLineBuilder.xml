<Type Name="CommandLineBuilder" FullName="Microsoft.Build.Utilities.CommandLineBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5fb7a1f65507dbec789d6507c2ee0795417b6d00" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83955035" /></Metadata><TypeSignature Language="C#" Value="public class CommandLineBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CommandLineBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Utilities.CommandLineBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class CommandLineBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommandLineBuilder" />
  <TypeSignature Language="F#" Value="type CommandLineBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="385ea-101">包含用于构造命令行的实用工具方法。</span><span class="sxs-lookup"><span data-stu-id="385ea-101">Comprises utility methods for constructing a command line.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="385ea-102">下面的示例创建一个运行[Ilasm （IL 汇编程序）](/dotnet/framework/tools/ilasm-exe-il-assembler)的 <xref:Microsoft.Build.Utilities.ToolTask>。</span><span class="sxs-lookup"><span data-stu-id="385ea-102">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](/dotnet/framework/tools/ilasm-exe-il-assembler).</span></span> <span data-ttu-id="385ea-103"><xref:Microsoft.Build.Utilities.CommandLineBuilder>、<xref:Microsoft.Build.Utilities.ToolLocationHelper>和 <xref:Microsoft.Build.Utilities.TaskLoggingHelper> 类用于生成运行任务所需的信息。</span><span class="sxs-lookup"><span data-stu-id="385ea-103">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="385ea-104">构造函数</span><span class="sxs-lookup"><span data-stu-id="385ea-104">Constructor</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandLineBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandLineBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="385ea-105">初始化 <see cref="T:Microsoft.Build.Utilities.CommandLineBuilder" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="385ea-105">Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.CommandLineBuilder" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="385ea-106">下面的示例创建一个运行[Ilasm （IL 汇编程序）](/dotnet/framework/tools/ilasm-exe-il-assembler)的 <xref:Microsoft.Build.Utilities.ToolTask>。</span><span class="sxs-lookup"><span data-stu-id="385ea-106">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](/dotnet/framework/tools/ilasm-exe-il-assembler).</span></span> <span data-ttu-id="385ea-107"><xref:Microsoft.Build.Utilities.CommandLineBuilder>、<xref:Microsoft.Build.Utilities.ToolLocationHelper>和 <xref:Microsoft.Build.Utilities.TaskLoggingHelper> 类用于生成运行任务所需的信息。</span><span class="sxs-lookup"><span data-stu-id="385ea-107">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandLineBuilder (bool quoteHyphensOnCommandLine);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool quoteHyphensOnCommandLine) cil managed" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.#ctor(System.Boolean)" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (quoteHyphensOnCommandLine As Boolean)" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandLineBuilder(bool quoteHyphensOnCommandLine);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Utilities.CommandLineBuilder : bool -&gt; Microsoft.Build.Utilities.CommandLineBuilder" Usage="new Microsoft.Build.Utilities.CommandLineBuilder quoteHyphensOnCommandLine" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="quoteHyphensOnCommandLine" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="quoteHyphensOnCommandLine"><span data-ttu-id="385ea-108">如果为 true，连字符应该用引号括起来。</span><span class="sxs-lookup"><span data-stu-id="385ea-108">If true, hyphens should be quoted.</span></span></param>
        <summary><span data-ttu-id="385ea-109">无参数构造函数</span><span class="sxs-lookup"><span data-stu-id="385ea-109">Parameterless constructor</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendFileNameIfNotNull">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="385ea-110">在命令行后面附加用参数表示的文件名（如有必要插入引号）。</span><span class="sxs-lookup"><span data-stu-id="385ea-110">Appends the command line with file name represented by the parameter, inserting quotation marks if necessary.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="385ea-111">下面的示例创建一个运行[Ilasm （IL 汇编程序）](/dotnet/framework/tools/ilasm-exe-il-assembler)的 <xref:Microsoft.Build.Utilities.ToolTask>。</span><span class="sxs-lookup"><span data-stu-id="385ea-111">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](/dotnet/framework/tools/ilasm-exe-il-assembler).</span></span> <span data-ttu-id="385ea-112"><xref:Microsoft.Build.Utilities.CommandLineBuilder>、<xref:Microsoft.Build.Utilities.ToolLocationHelper>和 <xref:Microsoft.Build.Utilities.TaskLoggingHelper> 类用于生成运行任务所需的信息。</span><span class="sxs-lookup"><span data-stu-id="385ea-112">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendFileNameIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendFileNameIfNotNull (Microsoft.Build.Framework.ITaskItem fileItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendFileNameIfNotNull(class Microsoft.Build.Framework.ITaskItem fileItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameIfNotNull(Microsoft.Build.Framework.ITaskItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendFileNameIfNotNull (fileItem As ITaskItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendFileNameIfNotNull(Microsoft::Build::Framework::ITaskItem ^ fileItem);" />
      <MemberSignature Language="F#" Value="member this.AppendFileNameIfNotNull : Microsoft.Build.Framework.ITaskItem -&gt; unit" Usage="commandLineBuilder.AppendFileNameIfNotNull fileItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileItem" Type="Microsoft.Build.Framework.ITaskItem" />
      </Parameters>
      <Docs>
        <param name="fileItem"><span data-ttu-id="385ea-113">要追加到命令行的任务项规范。</span><span class="sxs-lookup"><span data-stu-id="385ea-113">The task item specification to append to the command line.</span></span> <span data-ttu-id="385ea-114">如果为 <see langword="null" />，则此方法不起作用。</span><span class="sxs-lookup"><span data-stu-id="385ea-114">If it is <see langword="null" />, then this method has no effect.</span></span></param>
        <summary><span data-ttu-id="385ea-115">在命令行的后面追加指定的 <see cref="T:Microsoft.Build.Framework.ITaskItem" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="385ea-115">Appends the command line with the file name of the specified <see cref="T:Microsoft.Build.Framework.ITaskItem" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="385ea-116">此方法将命令行追加到任务项规范中，并在必要时将任务项规范括在引号中。</span><span class="sxs-lookup"><span data-stu-id="385ea-116">This method appends the command line with a task item specification, and surrounds task item specification with quotations marks as necessary.</span></span>  
  
 <span data-ttu-id="385ea-117">如果命令行不为空，则此方法还会在命令行的后面追加一个空格，在任务项规范之前。</span><span class="sxs-lookup"><span data-stu-id="385ea-117">If the command line is not empty, then this method also appends the command line with a space, before the task item specification.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="385ea-118">下面的示例创建一个运行[Ilasm （IL 汇编程序）](/dotnet/framework/tools/ilasm-exe-il-assembler)的 <xref:Microsoft.Build.Utilities.ToolTask>。</span><span class="sxs-lookup"><span data-stu-id="385ea-118">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](/dotnet/framework/tools/ilasm-exe-il-assembler).</span></span> <span data-ttu-id="385ea-119"><xref:Microsoft.Build.Utilities.CommandLineBuilder>、<xref:Microsoft.Build.Utilities.ToolLocationHelper>和 <xref:Microsoft.Build.Utilities.TaskLoggingHelper> 类用于生成运行任务所需的信息。</span><span class="sxs-lookup"><span data-stu-id="385ea-119">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendFileNameIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendFileNameIfNotNull (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendFileNameIfNotNull(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameIfNotNull(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendFileNameIfNotNull (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendFileNameIfNotNull(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.AppendFileNameIfNotNull : string -&gt; unit" Usage="commandLineBuilder.AppendFileNameIfNotNull fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="385ea-120">要追加的文件名。</span><span class="sxs-lookup"><span data-stu-id="385ea-120">The file name to append.</span></span> <span data-ttu-id="385ea-121">如果为 <see langword="null" />，则此方法不起作用。</span><span class="sxs-lookup"><span data-stu-id="385ea-121">If it is <see langword="null" />, then this method has no effect.</span></span></param>
        <summary><span data-ttu-id="385ea-122">在命令行后面附加用参数表示的文件名（如有必要插入引号）。</span><span class="sxs-lookup"><span data-stu-id="385ea-122">Appends the command line with file name represented by the parameter, inserting quotation marks if necessary.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="385ea-123">此方法在命令行的后面追加文件名，并在必要时在文件名的两侧加上引号。</span><span class="sxs-lookup"><span data-stu-id="385ea-123">This method appends the command line with a file name, and surrounds the file name with quotation marks as necessary.</span></span>  
  
 <span data-ttu-id="385ea-124">如果文件名的第一个字符是短划线，则会将 `.\` 添加到文件名的开头，以便将其与交换机区分开来。</span><span class="sxs-lookup"><span data-stu-id="385ea-124">If the first character of the file name is a dash, then `.\` is added to the beginning of the file name to distinguish it from a switch.</span></span>  
  
 <span data-ttu-id="385ea-125">如果命令行不为空，则此方法还在命令行的后面追加一个空格。</span><span class="sxs-lookup"><span data-stu-id="385ea-125">If the command line is not empty, then this method also appends the command line with a space, before the file name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="385ea-126">`AppendFileNameIfNotNull("-StrangeFileName.cs")` 生成 `.\-StrangeFileName.cs`。</span><span class="sxs-lookup"><span data-stu-id="385ea-126">`AppendFileNameIfNotNull("-StrangeFileName.cs")` yields `.\-StrangeFileName.cs`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendFileNamesIfNotNull">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="385ea-127">在命令行的后面追加文件名列表，并在必要时插入引号。</span><span class="sxs-lookup"><span data-stu-id="385ea-127">Appends the command line with a list of file names, inserting quotation marks if necessary.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendFileNamesIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendFileNamesIfNotNull (Microsoft.Build.Framework.ITaskItem[] fileItems, string delimiter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendFileNamesIfNotNull(class Microsoft.Build.Framework.ITaskItem[] fileItems, string delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull(Microsoft.Build.Framework.ITaskItem[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendFileNamesIfNotNull (fileItems As ITaskItem(), delimiter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendFileNamesIfNotNull(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ fileItems, System::String ^ delimiter);" />
      <MemberSignature Language="F#" Value="member this.AppendFileNamesIfNotNull : Microsoft.Build.Framework.ITaskItem[] * string -&gt; unit" Usage="commandLineBuilder.AppendFileNamesIfNotNull (fileItems, delimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileItems" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileItems"><span data-ttu-id="385ea-128">要追加的任务项规范。</span><span class="sxs-lookup"><span data-stu-id="385ea-128">The task item specifications to append.</span></span> <span data-ttu-id="385ea-129">如果数组为 <see langword="null" />，则此方法不起作用。</span><span class="sxs-lookup"><span data-stu-id="385ea-129">If the array is <see langword="null" />, then this method has no effect.</span></span></param>
        <param name="delimiter"><span data-ttu-id="385ea-130">要放置在命令行中任务项规范之间的分隔符。</span><span class="sxs-lookup"><span data-stu-id="385ea-130">The delimiter to put between task item specifications in the command line.</span></span></param>
        <summary><span data-ttu-id="385ea-131">向命令行中追加指定的 <see cref="T:Microsoft.Build.Framework.ITaskItem" /> 数组中的文件名列表，名称由指定的分隔符分隔。</span><span class="sxs-lookup"><span data-stu-id="385ea-131">Appends the command line with the list of file names in the specified <see cref="T:Microsoft.Build.Framework.ITaskItem" /> array, separated by the specified delimiter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="385ea-132">此方法在命令行的后面追加文件名，并在必要时在文件名的两侧加上引号。</span><span class="sxs-lookup"><span data-stu-id="385ea-132">This method appends the command line with file names, and surrounds the file names with quotation marks as necessary.</span></span> <span data-ttu-id="385ea-133">文件名用指定的分隔符分隔。</span><span class="sxs-lookup"><span data-stu-id="385ea-133">The file names are separated by the specified delimiter.</span></span>  
  
 <span data-ttu-id="385ea-134">如果命令行不为空，则此方法还会在命令行的后面追加一个空格。</span><span class="sxs-lookup"><span data-stu-id="385ea-134">If the command line is not empty, then this method also appends the command line with a space, before the file names.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="385ea-135">请参阅 <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull%2A>中的示例。</span><span class="sxs-lookup"><span data-stu-id="385ea-135">See example in <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendFileNamesIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendFileNamesIfNotNull (string[] fileNames, string delimiter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendFileNamesIfNotNull(string[] fileNames, string delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull(System.String[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendFileNamesIfNotNull (fileNames As String(), delimiter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendFileNamesIfNotNull(cli::array &lt;System::String ^&gt; ^ fileNames, System::String ^ delimiter);" />
      <MemberSignature Language="F#" Value="member this.AppendFileNamesIfNotNull : string[] * string -&gt; unit" Usage="commandLineBuilder.AppendFileNamesIfNotNull (fileNames, delimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileNames" Type="System.String[]" />
        <Parameter Name="delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileNames"><span data-ttu-id="385ea-136">要追加的文件名。</span><span class="sxs-lookup"><span data-stu-id="385ea-136">The file names to append.</span></span> <span data-ttu-id="385ea-137">如果数组为 <see langword="null" />，则此方法不起作用。</span><span class="sxs-lookup"><span data-stu-id="385ea-137">If the array is <see langword="null" />, then this method has no effect.</span></span></param>
        <param name="delimiter"><span data-ttu-id="385ea-138">要在命令行中的文件名之间放置的分隔符。</span><span class="sxs-lookup"><span data-stu-id="385ea-138">The delimiter to put between file names in the command line.</span></span></param>
        <summary><span data-ttu-id="385ea-139">向命令行中追加指定的 <see langword="string" /> 数组中的文件名列表，名称由指定的分隔符分隔。</span><span class="sxs-lookup"><span data-stu-id="385ea-139">Appends the command line with the list of file names in the specified <see langword="string" /> array, separated by the specified delimiter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="385ea-140">此方法在命令行的后面追加文件名，并在必要时在文件名的两侧加上引号。</span><span class="sxs-lookup"><span data-stu-id="385ea-140">This method appends the command line with file names, and surrounds the file names with quotation marks as necessary.</span></span> <span data-ttu-id="385ea-141">文件名用指定的分隔符分隔。</span><span class="sxs-lookup"><span data-stu-id="385ea-141">The file names are separated by the specified delimiter.</span></span>  
  
 <span data-ttu-id="385ea-142">如果命令行不为空，则此方法还会在命令行的后面追加一个空格。</span><span class="sxs-lookup"><span data-stu-id="385ea-142">If the command line is not empty, then this method also appends the command line with a space, before the file names.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="385ea-143">`AppendFileNamesIfNotNull(new string[] {"Alpha.cs", "Beta.cs"}, ",")` 生成 `Alpha.cs,Beta.cs`。</span><span class="sxs-lookup"><span data-stu-id="385ea-143">`AppendFileNamesIfNotNull(new string[] {"Alpha.cs", "Beta.cs"}, ",")` yields `Alpha.cs,Beta.cs`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendFileNameWithQuoting">
      <MemberSignature Language="C#" Value="protected void AppendFileNameWithQuoting (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AppendFileNameWithQuoting(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameWithQuoting(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AppendFileNameWithQuoting (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AppendFileNameWithQuoting(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.AppendFileNameWithQuoting : string -&gt; unit" Usage="commandLineBuilder.AppendFileNameWithQuoting fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="385ea-144">要追加的文件名。</span><span class="sxs-lookup"><span data-stu-id="385ea-144">The file name to append.</span></span></param>
        <summary><span data-ttu-id="385ea-145">在命令行的后面追加文件名，并在必要时在文件名的两侧加上引号。</span><span class="sxs-lookup"><span data-stu-id="385ea-145">Appends the command line with a file name, and surrounds the file name with quotation marks as necessary.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="385ea-146">如果文件名的第一个字符是短划线，则会将 `.\` 添加到文件名的开头，以便将其与交换机区分开来。</span><span class="sxs-lookup"><span data-stu-id="385ea-146">If the first character of the file name is a dash, then `.\` is added to the beginning of the file name to distinguish it from a switch.</span></span>  
  
 <span data-ttu-id="385ea-147">在执行前，此方法不会在命令行的后面追加空格。</span><span class="sxs-lookup"><span data-stu-id="385ea-147">This method does not append the command line with a space, before executing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="385ea-148">`AppendFileNameWithQuoting("-StrangeFileName.cs")` 生成 `.\-StrangeFileName.cs`。</span><span class="sxs-lookup"><span data-stu-id="385ea-148">`AppendFileNameWithQuoting("-StrangeFileName.cs")` yields `.\-StrangeFileName.cs`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendQuotedTextToBuffer">
      <MemberSignature Language="C#" Value="protected void AppendQuotedTextToBuffer (System.Text.StringBuilder buffer, string unquotedTextToAppend);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AppendQuotedTextToBuffer(class System.Text.StringBuilder buffer, string unquotedTextToAppend) cil managed" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendQuotedTextToBuffer(System.Text.StringBuilder,System.String)" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AppendQuotedTextToBuffer (buffer As StringBuilder, unquotedTextToAppend As String)" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AppendQuotedTextToBuffer(System::Text::StringBuilder ^ buffer, System::String ^ unquotedTextToAppend);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.AppendQuotedTextToBuffer : System.Text.StringBuilder * string -&gt; unit" Usage="commandLineBuilder.AppendQuotedTextToBuffer (buffer, unquotedTextToAppend)" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="unquotedTextToAppend" Type="System.String" Index="1" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="385ea-149">要追加到的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="385ea-149">The buffer to append to.</span></span></param>
        <param name="unquotedTextToAppend"><span data-ttu-id="385ea-150">要用引号引起来的文本。</span><span class="sxs-lookup"><span data-stu-id="385ea-150">The text to be quoted.</span></span></param>
        <summary><span data-ttu-id="385ea-151">必要时在缓冲区的第一个用引号引起来的文本后面追加给定文本。</span><span class="sxs-lookup"><span data-stu-id="385ea-151">Appends given text to the buffer after first quoting the text if necessary.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSpaceIfNotEmpty">
      <MemberSignature Language="C#" Value="protected void AppendSpaceIfNotEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AppendSpaceIfNotEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSpaceIfNotEmpty" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AppendSpaceIfNotEmpty ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AppendSpaceIfNotEmpty();" />
      <MemberSignature Language="F#" Value="member this.AppendSpaceIfNotEmpty : unit -&gt; unit" Usage="commandLineBuilder.AppendSpaceIfNotEmpty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="385ea-152">将空间添加到指定字符串，前提是该字符串为非空。</span><span class="sxs-lookup"><span data-stu-id="385ea-152">Adds a space to the specified string, given the string is not empty.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="385ea-153">此方法仅适用于继承类。</span><span class="sxs-lookup"><span data-stu-id="385ea-153">This method is only available to inherited classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSwitch">
      <MemberSignature Language="C#" Value="public void AppendSwitch (string switchName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitch(string switchName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitch(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitch (switchName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitch(System::String ^ switchName);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitch : string -&gt; unit" Usage="commandLineBuilder.AppendSwitch switchName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="switchName"><span data-ttu-id="385ea-154">要追加到命令行后面的开关的名称。</span><span class="sxs-lookup"><span data-stu-id="385ea-154">The name of the switch to append to the command line.</span></span> <span data-ttu-id="385ea-155">此值不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="385ea-155">This value cannot be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="385ea-156">在命令行的后面追加指定的开关。</span><span class="sxs-lookup"><span data-stu-id="385ea-156">Appends the command line with the specified switch.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="385ea-157">如果命令行不为空，则此方法还会在命令行的后面追加一个空格。</span><span class="sxs-lookup"><span data-stu-id="385ea-157">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="385ea-158">下面的示例创建一个运行[Ilasm （IL 汇编程序）](/dotnet/framework/tools/ilasm-exe-il-assembler)的 <xref:Microsoft.Build.Utilities.ToolTask>。</span><span class="sxs-lookup"><span data-stu-id="385ea-158">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](/dotnet/framework/tools/ilasm-exe-il-assembler).</span></span> <span data-ttu-id="385ea-159"><xref:Microsoft.Build.Utilities.CommandLineBuilder>、<xref:Microsoft.Build.Utilities.ToolLocationHelper>和 <xref:Microsoft.Build.Utilities.TaskLoggingHelper> 类用于生成运行任务所需的信息。</span><span class="sxs-lookup"><span data-stu-id="385ea-159">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendSwitchIfNotNull">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="385ea-160">在命令行的后面追加一个开关。</span><span class="sxs-lookup"><span data-stu-id="385ea-160">Appends the command line with a switch.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendSwitchIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendSwitchIfNotNull (string switchName, Microsoft.Build.Framework.ITaskItem parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitchIfNotNull(string switchName, class Microsoft.Build.Framework.ITaskItem parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitchIfNotNull (switchName As String, parameter As ITaskItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitchIfNotNull(System::String ^ switchName, Microsoft::Build::Framework::ITaskItem ^ parameter);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitchIfNotNull : string * Microsoft.Build.Framework.ITaskItem -&gt; unit" Usage="commandLineBuilder.AppendSwitchIfNotNull (switchName, parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameter" Type="Microsoft.Build.Framework.ITaskItem" />
      </Parameters>
      <Docs>
        <param name="switchName"><span data-ttu-id="385ea-161">要追加到命令行后面的开关的名称。</span><span class="sxs-lookup"><span data-stu-id="385ea-161">The name of the switch to append to the command line.</span></span> <span data-ttu-id="385ea-162">此值不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="385ea-162">This value cannot be <see langword="null" />.</span></span></param>
        <param name="parameter"><span data-ttu-id="385ea-163">要追加到命令行后面的开关参数。</span><span class="sxs-lookup"><span data-stu-id="385ea-163">The switch parameter to append to the command line.</span></span> <span data-ttu-id="385ea-164">将在必要时添加引号。</span><span class="sxs-lookup"><span data-stu-id="385ea-164">Quotation marks will be added as necessary.</span></span> <span data-ttu-id="385ea-165">如果此值为 <see langword="null" />，则此方法不起作用。</span><span class="sxs-lookup"><span data-stu-id="385ea-165">If this value is <see langword="null" />, then this method has no effect.</span></span></param>
        <summary><span data-ttu-id="385ea-166">在命令行的后面追加一个采用作为单个字符串参数的任务项规范的开关。</span><span class="sxs-lookup"><span data-stu-id="385ea-166">Appends the command line with a switch that takes a task item specification that acts a single string parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="385ea-167">此方法会在需要时将各个文件名封装在引号中。</span><span class="sxs-lookup"><span data-stu-id="385ea-167">This method encapsulates individual file names with quotation marks as necessary.</span></span>  
  
 <span data-ttu-id="385ea-168">如果命令行不为空，则此方法还会在命令行的后面追加一个空格。</span><span class="sxs-lookup"><span data-stu-id="385ea-168">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="385ea-169">请参阅 <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull%2A>中的示例。</span><span class="sxs-lookup"><span data-stu-id="385ea-169">See example in <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSwitchIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendSwitchIfNotNull (string switchName, string parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitchIfNotNull(string switchName, string parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitchIfNotNull (switchName As String, parameter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitchIfNotNull(System::String ^ switchName, System::String ^ parameter);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitchIfNotNull : string * string -&gt; unit" Usage="commandLineBuilder.AppendSwitchIfNotNull (switchName, parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="switchName"><span data-ttu-id="385ea-170">要追加到命令行后面的开关的名称。</span><span class="sxs-lookup"><span data-stu-id="385ea-170">The name of the switch to append to the command line.</span></span> <span data-ttu-id="385ea-171">此值不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="385ea-171">This value cannot be <see langword="null" />.</span></span></param>
        <param name="parameter"><span data-ttu-id="385ea-172">要追加到命令行后面的开关参数。</span><span class="sxs-lookup"><span data-stu-id="385ea-172">The switch parameter to append to the command line.</span></span> <span data-ttu-id="385ea-173">将在必要时添加引号。</span><span class="sxs-lookup"><span data-stu-id="385ea-173">Quotation marks will be added as necessary.</span></span> <span data-ttu-id="385ea-174">如果此值为 <see langword="null" />，则此方法不起作用。</span><span class="sxs-lookup"><span data-stu-id="385ea-174">If this value is <see langword="null" />, then this method has no effect.</span></span></param>
        <summary><span data-ttu-id="385ea-175">在命令行的后面追加一个采用单个字符串参数的开关。</span><span class="sxs-lookup"><span data-stu-id="385ea-175">Appends the command line with a switch that takes a single string parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="385ea-176">此方法会在需要时将各个文件名封装在引号中。</span><span class="sxs-lookup"><span data-stu-id="385ea-176">This method encapsulates individual file names with quotation marks as necessary.</span></span>  
  
 <span data-ttu-id="385ea-177">如果命令行不为空，则此方法还会在命令行的后面追加一个空格。</span><span class="sxs-lookup"><span data-stu-id="385ea-177">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="385ea-178">`AppendSwitchIfNotNull("/source:", "File Name.cs")` 生成 `/source:\"File Name.cs\"`。</span><span class="sxs-lookup"><span data-stu-id="385ea-178">`AppendSwitchIfNotNull("/source:", "File Name.cs")` yields `/source:\"File Name.cs\"`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSwitchIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendSwitchIfNotNull (string switchName, Microsoft.Build.Framework.ITaskItem[] parameters, string delimiter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitchIfNotNull(string switchName, class Microsoft.Build.Framework.ITaskItem[] parameters, string delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitchIfNotNull (switchName As String, parameters As ITaskItem(), delimiter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitchIfNotNull(System::String ^ switchName, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ parameters, System::String ^ delimiter);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitchIfNotNull : string * Microsoft.Build.Framework.ITaskItem[] * string -&gt; unit" Usage="commandLineBuilder.AppendSwitchIfNotNull (switchName, parameters, delimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameters" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="switchName"><span data-ttu-id="385ea-179">要追加到命令行后面的开关的名称。</span><span class="sxs-lookup"><span data-stu-id="385ea-179">The name of the switch to append to the command line.</span></span> <span data-ttu-id="385ea-180">此值不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="385ea-180">This value cannot be <see langword="null" />.</span></span></param>
        <param name="parameters"><span data-ttu-id="385ea-181">要追加到命令行的开关参数数组。</span><span class="sxs-lookup"><span data-stu-id="385ea-181">An array of switch parameters to append to the command line.</span></span> <span data-ttu-id="385ea-182">将在必要时添加引号。</span><span class="sxs-lookup"><span data-stu-id="385ea-182">Quotation marks will be added as necessary.</span></span> <span data-ttu-id="385ea-183">如果数组为 <see langword="null" />，则此方法不起作用。</span><span class="sxs-lookup"><span data-stu-id="385ea-183">If the array is <see langword="null" />, then this method has no effect.</span></span></param>
        <param name="delimiter"><span data-ttu-id="385ea-184">分隔各个参数的分隔符。</span><span class="sxs-lookup"><span data-stu-id="385ea-184">The delimiter that separates individual parameters.</span></span> <span data-ttu-id="385ea-185">此值可以为空，但不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="385ea-185">This value can be empty, but it cannot be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="385ea-186">在命令行的后面追加一个开关，该开关采用充当字符串参数的任务项规范数组。</span><span class="sxs-lookup"><span data-stu-id="385ea-186">Appends the command line with a switch that takes an array of task item specifications that act as string parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="385ea-187">此方法会在需要时将各个文件名封装在引号中。</span><span class="sxs-lookup"><span data-stu-id="385ea-187">This method encapsulates individual file names with quotation marks as necessary.</span></span>  
  
 <span data-ttu-id="385ea-188">如果命令行不为空，则此方法还会在命令行的后面追加一个空格。</span><span class="sxs-lookup"><span data-stu-id="385ea-188">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="385ea-189">请参阅 <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull%2A>中的示例。</span><span class="sxs-lookup"><span data-stu-id="385ea-189">See example in <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSwitchIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendSwitchIfNotNull (string switchName, string[] parameters, string delimiter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitchIfNotNull(string switchName, string[] parameters, string delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,System.String[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitchIfNotNull (switchName As String, parameters As String(), delimiter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitchIfNotNull(System::String ^ switchName, cli::array &lt;System::String ^&gt; ^ parameters, System::String ^ delimiter);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitchIfNotNull : string * string[] * string -&gt; unit" Usage="commandLineBuilder.AppendSwitchIfNotNull (switchName, parameters, delimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameters" Type="System.String[]" />
        <Parameter Name="delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="switchName"><span data-ttu-id="385ea-190">要追加到命令行后面的开关的名称。</span><span class="sxs-lookup"><span data-stu-id="385ea-190">The name of the switch to append to the command line.</span></span> <span data-ttu-id="385ea-191">此值不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="385ea-191">This value cannot be <see langword="null" />.</span></span></param>
        <param name="parameters"><span data-ttu-id="385ea-192">要追加到命令行的开关参数数组。</span><span class="sxs-lookup"><span data-stu-id="385ea-192">An array of switch parameters to append to the command line.</span></span> <span data-ttu-id="385ea-193">将在必要时添加引号。</span><span class="sxs-lookup"><span data-stu-id="385ea-193">Quotation marks will be added as necessary.</span></span> <span data-ttu-id="385ea-194">如果数组为 <see langword="null" />，则此方法不起作用。</span><span class="sxs-lookup"><span data-stu-id="385ea-194">If the array is <see langword="null" />, then this method has no effect.</span></span></param>
        <param name="delimiter"><span data-ttu-id="385ea-195">分隔各个参数的分隔符。</span><span class="sxs-lookup"><span data-stu-id="385ea-195">The delimiter that separates individual parameters.</span></span> <span data-ttu-id="385ea-196">此值可以为空，但不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="385ea-196">This value can be empty, but it cannot be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="385ea-197">在命令行的后面追加一个采用字符串参数数组的开关。</span><span class="sxs-lookup"><span data-stu-id="385ea-197">Appends the command line with a switch that takes an array of string parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="385ea-198">此方法会在需要时将各个文件名封装在引号中。</span><span class="sxs-lookup"><span data-stu-id="385ea-198">This method encapsulates individual file names with quotation marks as necessary.</span></span>  
  
 <span data-ttu-id="385ea-199">如果命令行不为空，则此方法还会在命令行的后面追加一个空格。</span><span class="sxs-lookup"><span data-stu-id="385ea-199">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="385ea-200">`AppendSwitchIfNotNull("/sources:", new string[] {"Alpha.cs", "Be ta.cs"}, ";")` 生成 `/sources:Alpha.cs;\"Be ta.cs\"`。</span><span class="sxs-lookup"><span data-stu-id="385ea-200">`AppendSwitchIfNotNull("/sources:", new string[] {"Alpha.cs", "Be ta.cs"}, ";")` yields `/sources:Alpha.cs;\"Be ta.cs\"`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendSwitchUnquotedIfNotNull">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="385ea-201">在命令行的后面追加一个开关，但不尝试在开关参数的两侧加上引号。</span><span class="sxs-lookup"><span data-stu-id="385ea-201">Appends the command line with a switch, without attempting to encapsulate the switch parameters with quotation marks.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendSwitchUnquotedIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendSwitchUnquotedIfNotNull (string switchName, Microsoft.Build.Framework.ITaskItem parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitchUnquotedIfNotNull(string switchName, class Microsoft.Build.Framework.ITaskItem parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitchUnquotedIfNotNull (switchName As String, parameter As ITaskItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitchUnquotedIfNotNull(System::String ^ switchName, Microsoft::Build::Framework::ITaskItem ^ parameter);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitchUnquotedIfNotNull : string * Microsoft.Build.Framework.ITaskItem -&gt; unit" Usage="commandLineBuilder.AppendSwitchUnquotedIfNotNull (switchName, parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameter" Type="Microsoft.Build.Framework.ITaskItem" />
      </Parameters>
      <Docs>
        <param name="switchName"><span data-ttu-id="385ea-202">要追加到命令行后面的开关的名称。</span><span class="sxs-lookup"><span data-stu-id="385ea-202">The name of the switch to append to the command line.</span></span> <span data-ttu-id="385ea-203">此值不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="385ea-203">This value cannot be <see langword="null" />.</span></span></param>
        <param name="parameter"><span data-ttu-id="385ea-204">要追加到命令行后面的开关参数。</span><span class="sxs-lookup"><span data-stu-id="385ea-204">The switch parameter to append to the command line.</span></span> <span data-ttu-id="385ea-205">将不会添加引号。</span><span class="sxs-lookup"><span data-stu-id="385ea-205">Quotation marks will not be added.</span></span> <span data-ttu-id="385ea-206">如果此值为 <see langword="null" />，则此方法不起作用。</span><span class="sxs-lookup"><span data-stu-id="385ea-206">If this value is <see langword="null" />, then this method has no effect.</span></span></param>
        <summary><span data-ttu-id="385ea-207">在命令行的后面追加一个开关（该开关采用充当单个字符串参数的任务项规范），但不尝试在开关参数的两侧加上引号。</span><span class="sxs-lookup"><span data-stu-id="385ea-207">Appends the command line with a switch that takes a task item specification as a single string parameter, without attempting to encapsulate the switch parameter with quotation marks.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="385ea-208">如果命令行不为空，则此方法还会在命令行的后面追加一个空格。</span><span class="sxs-lookup"><span data-stu-id="385ea-208">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="385ea-209">请参阅 <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull%2A>中的示例。</span><span class="sxs-lookup"><span data-stu-id="385ea-209">See example in <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSwitchUnquotedIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendSwitchUnquotedIfNotNull (string switchName, string parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitchUnquotedIfNotNull(string switchName, string parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitchUnquotedIfNotNull (switchName As String, parameter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitchUnquotedIfNotNull(System::String ^ switchName, System::String ^ parameter);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitchUnquotedIfNotNull : string * string -&gt; unit" Usage="commandLineBuilder.AppendSwitchUnquotedIfNotNull (switchName, parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="switchName"><span data-ttu-id="385ea-210">要追加到命令行后面的开关的名称。</span><span class="sxs-lookup"><span data-stu-id="385ea-210">The name of the switch to append to the command line.</span></span> <span data-ttu-id="385ea-211">此值不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="385ea-211">This value cannot be <see langword="null" />.</span></span></param>
        <param name="parameter"><span data-ttu-id="385ea-212">要追加到命令行后面的开关参数。</span><span class="sxs-lookup"><span data-stu-id="385ea-212">The switch parameter to append to the command line.</span></span> <span data-ttu-id="385ea-213">将不会添加引号。</span><span class="sxs-lookup"><span data-stu-id="385ea-213">Quotation marks will not be added.</span></span> <span data-ttu-id="385ea-214">如果此值为 <see langword="null" />，则此方法不起作用。</span><span class="sxs-lookup"><span data-stu-id="385ea-214">If this value is <see langword="null" />, then this method has no effect.</span></span></param>
        <summary><span data-ttu-id="385ea-215">在命令行的后面追加采用单字符串参数的开关，但不尝试在开关参数的两侧加上引号。</span><span class="sxs-lookup"><span data-stu-id="385ea-215">Appends the command line with a switch that takes a single string parameter, without attempting to encapsulate the switch parameter with quotation marks.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="385ea-216">如果命令行不为空，则此方法还会在命令行的后面追加一个空格。</span><span class="sxs-lookup"><span data-stu-id="385ea-216">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="385ea-217">`AppendSwitchUnquotedIfNotNull("/source:", "File Name.cs")` 生成 `/source:File Name.cs`。</span><span class="sxs-lookup"><span data-stu-id="385ea-217">`AppendSwitchUnquotedIfNotNull("/source:", "File Name.cs")` yields `/source:File Name.cs`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSwitchUnquotedIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendSwitchUnquotedIfNotNull (string switchName, Microsoft.Build.Framework.ITaskItem[] parameters, string delimiter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitchUnquotedIfNotNull(string switchName, class Microsoft.Build.Framework.ITaskItem[] parameters, string delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitchUnquotedIfNotNull (switchName As String, parameters As ITaskItem(), delimiter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitchUnquotedIfNotNull(System::String ^ switchName, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ parameters, System::String ^ delimiter);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitchUnquotedIfNotNull : string * Microsoft.Build.Framework.ITaskItem[] * string -&gt; unit" Usage="commandLineBuilder.AppendSwitchUnquotedIfNotNull (switchName, parameters, delimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameters" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="switchName"><span data-ttu-id="385ea-218">要追加到命令行后面的开关的名称。</span><span class="sxs-lookup"><span data-stu-id="385ea-218">The name of the switch to append to the command line.</span></span> <span data-ttu-id="385ea-219">此值不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="385ea-219">This value cannot be <see langword="null" />.</span></span></param>
        <param name="parameters"><span data-ttu-id="385ea-220">要追加到命令行的开关参数数组。</span><span class="sxs-lookup"><span data-stu-id="385ea-220">An array of switch parameters to append to the command line.</span></span> <span data-ttu-id="385ea-221">将不会添加引号。</span><span class="sxs-lookup"><span data-stu-id="385ea-221">Quotation marks will not be added.</span></span> <span data-ttu-id="385ea-222">如果数组为 <see langword="null" />，则此方法不起作用。</span><span class="sxs-lookup"><span data-stu-id="385ea-222">If the array is <see langword="null" />, then this method has no effect.</span></span></param>
        <param name="delimiter"><span data-ttu-id="385ea-223">分隔各个参数的分隔符。</span><span class="sxs-lookup"><span data-stu-id="385ea-223">The delimiter that separates individual parameters.</span></span> <span data-ttu-id="385ea-224">此值可以为空，但不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="385ea-224">This value can be empty, but it cannot be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="385ea-225">在命令行的后面追加一个采用作为单个字符串参数的任务项规范的开关，但不尝试在其两侧加上引号。</span><span class="sxs-lookup"><span data-stu-id="385ea-225">Appends the command line with a switch that takes an array of task item specifications that act as string parameters, without attempting to encapsulate them with quotation marks.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="385ea-226">如果命令行不为空，则此方法还会在命令行的后面追加一个空格。</span><span class="sxs-lookup"><span data-stu-id="385ea-226">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="385ea-227">请参阅 <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull%2A>中的示例。</span><span class="sxs-lookup"><span data-stu-id="385ea-227">See example in <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSwitchUnquotedIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendSwitchUnquotedIfNotNull (string switchName, string[] parameters, string delimiter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitchUnquotedIfNotNull(string switchName, string[] parameters, string delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,System.String[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitchUnquotedIfNotNull (switchName As String, parameters As String(), delimiter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitchUnquotedIfNotNull(System::String ^ switchName, cli::array &lt;System::String ^&gt; ^ parameters, System::String ^ delimiter);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitchUnquotedIfNotNull : string * string[] * string -&gt; unit" Usage="commandLineBuilder.AppendSwitchUnquotedIfNotNull (switchName, parameters, delimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameters" Type="System.String[]" />
        <Parameter Name="delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="switchName"><span data-ttu-id="385ea-228">要追加到命令行后面的开关的名称。</span><span class="sxs-lookup"><span data-stu-id="385ea-228">The name of the switch to append to the command line.</span></span> <span data-ttu-id="385ea-229">此值不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="385ea-229">This value cannot be <see langword="null" />.</span></span></param>
        <param name="parameters"><span data-ttu-id="385ea-230">要追加到命令行的开关参数数组。</span><span class="sxs-lookup"><span data-stu-id="385ea-230">An array of switch parameters to append to the command line.</span></span> <span data-ttu-id="385ea-231">将不会添加引号。</span><span class="sxs-lookup"><span data-stu-id="385ea-231">Quotation marks will not be added.</span></span> <span data-ttu-id="385ea-232">如果数组为 <see langword="null" />，则此方法不起作用。</span><span class="sxs-lookup"><span data-stu-id="385ea-232">If the array is <see langword="null" />, then this method has no effect.</span></span></param>
        <param name="delimiter"><span data-ttu-id="385ea-233">分隔各个参数的分隔符。</span><span class="sxs-lookup"><span data-stu-id="385ea-233">The delimiter that separates individual parameters.</span></span> <span data-ttu-id="385ea-234">此值可以为空，但不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="385ea-234">This value can be empty, but it cannot be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="385ea-235">在命令行的后面追加一个采用字符串参数数组的开关，但不尝试在开关参数的两侧加上引号。</span><span class="sxs-lookup"><span data-stu-id="385ea-235">Appends the command line with a switch that takes an array of string parameters, without attempting to encapsulate switch parameters with quotation marks.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="385ea-236">如果命令行不为空，则此方法还会在命令行的后面追加一个空格。</span><span class="sxs-lookup"><span data-stu-id="385ea-236">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="385ea-237">`AppendSwitchUnquotedIfNotNull("/sources:", new string[] {"Alpha.cs", "Be ta.cs"}, ";")` 生成 `/sources:Alpha.cs;Be ta.cs`。</span><span class="sxs-lookup"><span data-stu-id="385ea-237">`AppendSwitchUnquotedIfNotNull("/sources:", new string[] {"Alpha.cs", "Be ta.cs"}, ";")` yields `/sources:Alpha.cs;Be ta.cs`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendTextUnquoted">
      <MemberSignature Language="C#" Value="protected void AppendTextUnquoted (string textToAppend);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AppendTextUnquoted(string textToAppend) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendTextUnquoted(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AppendTextUnquoted (textToAppend As String)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AppendTextUnquoted(System::String ^ textToAppend);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="F#" Value="member this.AppendTextUnquoted : string -&gt; unit" Usage="commandLineBuilder.AppendTextUnquoted textToAppend" />
      <MemberSignature Language="C#" Value="public void AppendTextUnquoted (string textToAppend);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendTextUnquoted(string textToAppend) cil managed" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendTextUnquoted (textToAppend As String)" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendTextUnquoted(System::String ^ textToAppend);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToAppend" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToAppend"><span data-ttu-id="385ea-238">要追加到命令行中的字符串。</span><span class="sxs-lookup"><span data-stu-id="385ea-238">The string to append to the command line.</span></span></param>
        <summary><span data-ttu-id="385ea-239">在命令行中追加字符串，而不尝试将字符串封装在引号中。</span><span class="sxs-lookup"><span data-stu-id="385ea-239">Appends the command line with string, without attempting to encapsulate the string with quotation marks.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="385ea-240">在执行前，此方法不会在命令行的后面追加空格。</span><span class="sxs-lookup"><span data-stu-id="385ea-240">This method does not append the command line with a space, before executing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="385ea-241">`AppendTextUnquoted(@"Folder name\filename.cs")` 生成 `Folder name\\filename.cs`。</span><span class="sxs-lookup"><span data-stu-id="385ea-241">`AppendTextUnquoted(@"Folder name\filename.cs")` yields `Folder name\\filename.cs`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendTextWithQuoting">
      <MemberSignature Language="C#" Value="protected void AppendTextWithQuoting (string textToAppend);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AppendTextWithQuoting(string textToAppend) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendTextWithQuoting(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AppendTextWithQuoting (textToAppend As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AppendTextWithQuoting(System::String ^ textToAppend);" />
      <MemberSignature Language="F#" Value="member this.AppendTextWithQuoting : string -&gt; unit" Usage="commandLineBuilder.AppendTextWithQuoting textToAppend" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToAppend" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToAppend"><span data-ttu-id="385ea-242">要追加到命令行中的字符串。</span><span class="sxs-lookup"><span data-stu-id="385ea-242">The string to append to the command line.</span></span></param>
        <summary><span data-ttu-id="385ea-243">在命令行后追加字符串，并在必要时用引号将字符串引起来。</span><span class="sxs-lookup"><span data-stu-id="385ea-243">Appends the command line with string, and surrounds the string with quotations marks as necessary.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="385ea-244">在执行前，此方法不会在命令行的后面追加空格。</span><span class="sxs-lookup"><span data-stu-id="385ea-244">This method does not append the command line with a space, before executing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="385ea-245">`AppendTextWithQuoting(@"Folder name\filename.cs")` 生成 `\"Folder name\\filename.cs\"`。</span><span class="sxs-lookup"><span data-stu-id="385ea-245">`AppendTextWithQuoting(@"Folder name\filename.cs")` yields `\"Folder name\\filename.cs\"`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandLine">
      <MemberSignature Language="C#" Value="protected System.Text.StringBuilder CommandLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.StringBuilder CommandLine" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.CommandLineBuilder.CommandLine" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CommandLine As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Text::StringBuilder ^ CommandLine { System::Text::StringBuilder ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandLine : System.Text.StringBuilder" Usage="Microsoft.Build.Utilities.CommandLineBuilder.CommandLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="385ea-246">获取表示用于继承类的命令行的 <see cref="T:System.Text.StringBuilder" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="385ea-246">Gets the <see cref="T:System.Text.StringBuilder" /> instance representing the command line for inheriting classes.</span></span></summary>
        <value><span data-ttu-id="385ea-247">用于继承类的 <see cref="T:System.Text.StringBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="385ea-247">A <see cref="T:System.Text.StringBuilder" /> for inheriting classes.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsQuotingRequired">
      <MemberSignature Language="C#" Value="protected virtual bool IsQuotingRequired (string parameter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsQuotingRequired(string parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.IsQuotingRequired(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsQuotingRequired (parameter As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsQuotingRequired(System::String ^ parameter);" />
      <MemberSignature Language="F#" Value="abstract member IsQuotingRequired : string -&gt; bool&#xA;override this.IsQuotingRequired : string -&gt; bool" Usage="commandLineBuilder.IsQuotingRequired parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="385ea-248">要检查是否存在需要使用引号的字符的字符串。</span><span class="sxs-lookup"><span data-stu-id="385ea-248">The string to examine for characters that require quotation marks.</span></span></param>
        <summary><span data-ttu-id="385ea-249">确定指定的字符串参数是否应用引号括起来，因为它包含空格。</span><span class="sxs-lookup"><span data-stu-id="385ea-249">Determines whether the specified string parameter should be surrounded with quotation marks because it contains white space.</span></span></summary>
        <returns><span data-ttu-id="385ea-250">如果应使用引号将开关参数括起来，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="385ea-250"><see langword="true" />, if the switch parameter should be surrounded with quotation marks; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.CommandLineBuilder.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="Microsoft.Build.Utilities.CommandLineBuilder.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="385ea-251">表示命令行的长度。</span><span class="sxs-lookup"><span data-stu-id="385ea-251">Represents the length of the command line.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="commandLineBuilder.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="385ea-252">以字符串形式返回命令行。</span><span class="sxs-lookup"><span data-stu-id="385ea-252">Returns the command line as a string.</span></span></summary>
        <returns><span data-ttu-id="385ea-253">表示命令行的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="385ea-253">A <see cref="T:System.String" /> that represents the command line.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="385ea-254">下面的示例创建一个运行[Ilasm （IL 汇编程序）](/dotnet/framework/tools/ilasm-exe-il-assembler)的 <xref:Microsoft.Build.Utilities.ToolTask>。</span><span class="sxs-lookup"><span data-stu-id="385ea-254">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](/dotnet/framework/tools/ilasm-exe-il-assembler).</span></span> <span data-ttu-id="385ea-255"><xref:Microsoft.Build.Utilities.CommandLineBuilder>、<xref:Microsoft.Build.Utilities.ToolLocationHelper>和 <xref:Microsoft.Build.Utilities.TaskLoggingHelper> 类用于生成运行任务所需的信息。</span><span class="sxs-lookup"><span data-stu-id="385ea-255">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 <span data-ttu-id="385ea-256">msbuild_ToolTask#1</span><span class="sxs-lookup"><span data-stu-id="385ea-256">msbuild_ToolTask#1</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyThrowNoEmbeddedDoubleQuotes">
      <MemberSignature Language="C#" Value="protected virtual void VerifyThrowNoEmbeddedDoubleQuotes (string switchName, string parameter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void VerifyThrowNoEmbeddedDoubleQuotes(string switchName, string parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.VerifyThrowNoEmbeddedDoubleQuotes(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub VerifyThrowNoEmbeddedDoubleQuotes (switchName As String, parameter As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void VerifyThrowNoEmbeddedDoubleQuotes(System::String ^ switchName, System::String ^ parameter);" />
      <MemberSignature Language="F#" Value="abstract member VerifyThrowNoEmbeddedDoubleQuotes : string * string -&gt; unit&#xA;override this.VerifyThrowNoEmbeddedDoubleQuotes : string * string -&gt; unit" Usage="commandLineBuilder.VerifyThrowNoEmbeddedDoubleQuotes (switchName, parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="switchName"><span data-ttu-id="385ea-257">表示错误消息的开关名称的字符串。</span><span class="sxs-lookup"><span data-stu-id="385ea-257">A string representing the switch name for the error message.</span></span></param>
        <param name="parameter"><span data-ttu-id="385ea-258">一个字符串，表示用于扫描双引号的开关参数。</span><span class="sxs-lookup"><span data-stu-id="385ea-258">A string representing the switch parameter to scan for double-quotes.</span></span></param>
        <summary><span data-ttu-id="385ea-259">如果命令行参数包含双引号 (") 字符，则返回错误。</span><span class="sxs-lookup"><span data-stu-id="385ea-259">Returns an error if the command line parameter contains a double-quote (") character.</span></span> <span data-ttu-id="385ea-260">因为在命令行参数中双引号是非法字符，此方法可帮助防止参数注入攻击。</span><span class="sxs-lookup"><span data-stu-id="385ea-260">Because double quotes are illegal in command line parameters, this method helps prevent parameter injection attacks.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="385ea-261"><xref:Microsoft.Build.Utilities.CommandLineBuilder.VerifyThrowNoEmbeddedDoubleQuotes%2A> 是一种虚拟方法，如果想要允许在文件名中使用双引号，则应用程序可以重写此方法。</span><span class="sxs-lookup"><span data-stu-id="385ea-261"><xref:Microsoft.Build.Utilities.CommandLineBuilder.VerifyThrowNoEmbeddedDoubleQuotes%2A> is a virtual method so that your applications can override this method if you want to allow double-quotes escaped in filenames.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
