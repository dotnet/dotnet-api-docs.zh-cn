<Type Name="CanonicalTrackedInputFiles" FullName="Microsoft.Build.Utilities.CanonicalTrackedInputFiles">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4d08fea3fc198546aeffe364093f45715b56dee1" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86684617" /></Metadata><TypeSignature Language="C#" Value="public class CanonicalTrackedInputFiles" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CanonicalTrackedInputFiles extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Utilities.CanonicalTrackedInputFiles" />
  <TypeSignature Language="VB.NET" Value="Public Class CanonicalTrackedInputFiles" />
  <TypeSignature Language="C++ CLI" Value="public ref class CanonicalTrackedInputFiles" />
  <TypeSignature Language="F#" Value="type CanonicalTrackedInputFiles = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="24d03-101">此类是采用规范格式的 .read.</span><span class="sxs-lookup"><span data-stu-id="24d03-101">This class is the filetracking log interpreter for .read.</span></span> <span data-ttu-id="24d03-102">跟踪日志或那些已经过根化处理 (^) 以变得规范的 .read. 跟踪日志的文件跟踪日志解释程序</span><span class="sxs-lookup"><span data-stu-id="24d03-102">tracking logs in canonical form or those that have been rooted (^) to make them canonical</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="24d03-103">用于多个输入源文件的构造函数。</span><span class="sxs-lookup"><span data-stu-id="24d03-103">Constructor for multiple input source files.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CanonicalTrackedInputFiles (Microsoft.Build.Framework.ITaskItem[] tlogFiles, Microsoft.Build.Framework.ITaskItem[] sourceFiles, Microsoft.Build.Utilities.CanonicalTrackedOutputFiles outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Framework.ITaskItem[] tlogFiles, class Microsoft.Build.Framework.ITaskItem[] sourceFiles, class Microsoft.Build.Utilities.CanonicalTrackedOutputFiles outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.#ctor(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Utilities.CanonicalTrackedOutputFiles,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tlogFiles As ITaskItem(), sourceFiles As ITaskItem(), outputs As CanonicalTrackedOutputFiles, useMinimalRebuildOptimization As Boolean, maintainCompositeRootingMarkers As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CanonicalTrackedInputFiles(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ tlogFiles, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ sourceFiles, Microsoft::Build::Utilities::CanonicalTrackedOutputFiles ^ outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Utilities.CanonicalTrackedInputFiles : Microsoft.Build.Framework.ITaskItem[] * Microsoft.Build.Framework.ITaskItem[] * Microsoft.Build.Utilities.CanonicalTrackedOutputFiles * bool * bool -&gt; Microsoft.Build.Utilities.CanonicalTrackedInputFiles" Usage="new Microsoft.Build.Utilities.CanonicalTrackedInputFiles (tlogFiles, sourceFiles, outputs, useMinimalRebuildOptimization, maintainCompositeRootingMarkers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tlogFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="sourceFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="outputs" Type="Microsoft.Build.Utilities.CanonicalTrackedOutputFiles" />
        <Parameter Name="useMinimalRebuildOptimization" Type="System.Boolean" />
        <Parameter Name="maintainCompositeRootingMarkers" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="tlogFiles"><span data-ttu-id="24d03-104">要解释的 .read.</span><span class="sxs-lookup"><span data-stu-id="24d03-104">The .read.</span></span> <span data-ttu-id="24d03-105">tlog 文件</span><span class="sxs-lookup"><span data-stu-id="24d03-105">tlog files to interpret</span></span></param>
        <param name="sourceFiles"><span data-ttu-id="24d03-106">要为其解释依赖项的主源文件</span><span class="sxs-lookup"><span data-stu-id="24d03-106">The primary source files to interpret dependencies for</span></span></param>
        <param name="outputs"><span data-ttu-id="24d03-107">通过编译此源集生成的输出文件</span><span class="sxs-lookup"><span data-stu-id="24d03-107">The output files produced by compiling this set of sources</span></span></param>
        <param name="useMinimalRebuildOptimization"><span data-ttu-id="24d03-108">警告：最小重新生成优化需要指定完全正确的计算输出！</span><span class="sxs-lookup"><span data-stu-id="24d03-108">WARNING: Minimal rebuild optimization requires 100% accurate computed outputs to be specified!</span></span></param>
        <param name="maintainCompositeRootingMarkers"><span data-ttu-id="24d03-109">若要保留复合根标记（多对一情形），则为 true；若要去除这些标记（一对一或一对多情形），则为 false</span><span class="sxs-lookup"><span data-stu-id="24d03-109">True to keep composite rooting markers around (many-to-one case) or false to shred them (one-to-one or one-to-many case)</span></span></param>
        <summary><span data-ttu-id="24d03-110">用于多个输入源文件的构造函数</span><span class="sxs-lookup"><span data-stu-id="24d03-110">Constructor for multiple input source files</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CanonicalTrackedInputFiles (Microsoft.Build.Framework.ITaskItem[] tlogFiles, Microsoft.Build.Framework.ITaskItem[] sourceFiles, Microsoft.Build.Framework.ITaskItem[] excludedInputPaths, Microsoft.Build.Utilities.CanonicalTrackedOutputFiles outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Framework.ITaskItem[] tlogFiles, class Microsoft.Build.Framework.ITaskItem[] sourceFiles, class Microsoft.Build.Framework.ITaskItem[] excludedInputPaths, class Microsoft.Build.Utilities.CanonicalTrackedOutputFiles outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.#ctor(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Utilities.CanonicalTrackedOutputFiles,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tlogFiles As ITaskItem(), sourceFiles As ITaskItem(), excludedInputPaths As ITaskItem(), outputs As CanonicalTrackedOutputFiles, useMinimalRebuildOptimization As Boolean, maintainCompositeRootingMarkers As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CanonicalTrackedInputFiles(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ tlogFiles, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ sourceFiles, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ excludedInputPaths, Microsoft::Build::Utilities::CanonicalTrackedOutputFiles ^ outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Utilities.CanonicalTrackedInputFiles : Microsoft.Build.Framework.ITaskItem[] * Microsoft.Build.Framework.ITaskItem[] * Microsoft.Build.Framework.ITaskItem[] * Microsoft.Build.Utilities.CanonicalTrackedOutputFiles * bool * bool -&gt; Microsoft.Build.Utilities.CanonicalTrackedInputFiles" Usage="new Microsoft.Build.Utilities.CanonicalTrackedInputFiles (tlogFiles, sourceFiles, excludedInputPaths, outputs, useMinimalRebuildOptimization, maintainCompositeRootingMarkers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tlogFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="sourceFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="excludedInputPaths" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="outputs" Type="Microsoft.Build.Utilities.CanonicalTrackedOutputFiles" />
        <Parameter Name="useMinimalRebuildOptimization" Type="System.Boolean" />
        <Parameter Name="maintainCompositeRootingMarkers" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="tlogFiles"><span data-ttu-id="24d03-111">要解释的 .read.</span><span class="sxs-lookup"><span data-stu-id="24d03-111">The .read.</span></span> <span data-ttu-id="24d03-112">tlog 文件</span><span class="sxs-lookup"><span data-stu-id="24d03-112">tlog files to interpret</span></span></param>
        <param name="sourceFiles"><span data-ttu-id="24d03-113">要为其解释依赖项的主源文件</span><span class="sxs-lookup"><span data-stu-id="24d03-113">The primary source files to interpret dependencies for</span></span></param>
        <param name="excludedInputPaths"><span data-ttu-id="24d03-114">包含在最新检查过程中将要忽略的文件的路径集</span><span class="sxs-lookup"><span data-stu-id="24d03-114">The set of paths that contain files that are to be ignored during up to date check</span></span></param>
        <param name="outputs"><span data-ttu-id="24d03-115">通过编译此源集生成的输出文件</span><span class="sxs-lookup"><span data-stu-id="24d03-115">The output files produced by compiling this set of sources</span></span></param>
        <param name="useMinimalRebuildOptimization"><span data-ttu-id="24d03-116">警告：最小重新生成优化需要指定完全正确的计算输出！</span><span class="sxs-lookup"><span data-stu-id="24d03-116">WARNING: Minimal rebuild optimization requires 100% accurate computed outputs to be specified!</span></span></param>
        <param name="maintainCompositeRootingMarkers"><span data-ttu-id="24d03-117">若要保留复合根标记（多对一情形），则为 true；若要去除这些标记（一对一或一对多情形），则为 false</span><span class="sxs-lookup"><span data-stu-id="24d03-117">True to keep composite rooting markers around (many-to-one case) or false to shred them (one-to-one or one-to-many case)</span></span></param>
        <summary><span data-ttu-id="24d03-118">用于多个输入源文件的构造函数</span><span class="sxs-lookup"><span data-stu-id="24d03-118">Constructor for multiple input source files</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CanonicalTrackedInputFiles (Microsoft.Build.Framework.ITask ownerTask, Microsoft.Build.Framework.ITaskItem[] tlogFiles, Microsoft.Build.Framework.ITaskItem sourceFile, Microsoft.Build.Framework.ITaskItem[] excludedInputPaths, Microsoft.Build.Utilities.CanonicalTrackedOutputFiles outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Framework.ITask ownerTask, class Microsoft.Build.Framework.ITaskItem[] tlogFiles, class Microsoft.Build.Framework.ITaskItem sourceFile, class Microsoft.Build.Framework.ITaskItem[] excludedInputPaths, class Microsoft.Build.Utilities.CanonicalTrackedOutputFiles outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Utilities.CanonicalTrackedOutputFiles,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ownerTask As ITask, tlogFiles As ITaskItem(), sourceFile As ITaskItem, excludedInputPaths As ITaskItem(), outputs As CanonicalTrackedOutputFiles, useMinimalRebuildOptimization As Boolean, maintainCompositeRootingMarkers As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CanonicalTrackedInputFiles(Microsoft::Build::Framework::ITask ^ ownerTask, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ tlogFiles, Microsoft::Build::Framework::ITaskItem ^ sourceFile, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ excludedInputPaths, Microsoft::Build::Utilities::CanonicalTrackedOutputFiles ^ outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Utilities.CanonicalTrackedInputFiles : Microsoft.Build.Framework.ITask * Microsoft.Build.Framework.ITaskItem[] * Microsoft.Build.Framework.ITaskItem * Microsoft.Build.Framework.ITaskItem[] * Microsoft.Build.Utilities.CanonicalTrackedOutputFiles * bool * bool -&gt; Microsoft.Build.Utilities.CanonicalTrackedInputFiles" Usage="new Microsoft.Build.Utilities.CanonicalTrackedInputFiles (ownerTask, tlogFiles, sourceFile, excludedInputPaths, outputs, useMinimalRebuildOptimization, maintainCompositeRootingMarkers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ownerTask" Type="Microsoft.Build.Framework.ITask" />
        <Parameter Name="tlogFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="sourceFile" Type="Microsoft.Build.Framework.ITaskItem" />
        <Parameter Name="excludedInputPaths" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="outputs" Type="Microsoft.Build.Utilities.CanonicalTrackedOutputFiles" />
        <Parameter Name="useMinimalRebuildOptimization" Type="System.Boolean" />
        <Parameter Name="maintainCompositeRootingMarkers" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ownerTask"><span data-ttu-id="24d03-119">正在使用文件跟踪器的任务</span><span class="sxs-lookup"><span data-stu-id="24d03-119">The task that is using file tracker</span></span></param>
        <param name="tlogFiles"><span data-ttu-id="24d03-120">要解释的 .read.</span><span class="sxs-lookup"><span data-stu-id="24d03-120">The .read.</span></span> <span data-ttu-id="24d03-121">tlog 文件</span><span class="sxs-lookup"><span data-stu-id="24d03-121">tlog files to interpret</span></span></param>
        <param name="sourceFile"><span data-ttu-id="24d03-122">要为其解释依赖项的主源文件</span><span class="sxs-lookup"><span data-stu-id="24d03-122">The primary source file to interpret dependencies for</span></span></param>
        <param name="excludedInputPaths"><span data-ttu-id="24d03-123">包含在最新检查过程中将要忽略的文件的路径集</span><span class="sxs-lookup"><span data-stu-id="24d03-123">The set of paths that contain files that are to be ignored during up to date check</span></span></param>
        <param name="outputs"><span data-ttu-id="24d03-124">通过编译此源生成的输出文件</span><span class="sxs-lookup"><span data-stu-id="24d03-124">The output files produced by compiling this source</span></span></param>
        <param name="useMinimalRebuildOptimization"><span data-ttu-id="24d03-125">警告：最小重新生成优化需要指定完全正确的计算输出！</span><span class="sxs-lookup"><span data-stu-id="24d03-125">WARNING: Minimal rebuild optimization requires 100% accurate computed outputs to be specified!</span></span></param>
        <param name="maintainCompositeRootingMarkers"><span data-ttu-id="24d03-126">若要保留复合根标记（多对一情形），则为 true；若要去除这些标记（一对一或一对多情形），则为 false</span><span class="sxs-lookup"><span data-stu-id="24d03-126">True to keep composite rooting markers around (many-to-one case) or false to shred them (one-to-one or one-to-many case)</span></span></param>
        <summary><span data-ttu-id="24d03-127">用于单个输入源文件的构造函数</span><span class="sxs-lookup"><span data-stu-id="24d03-127">Constructor for a single input source file</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CanonicalTrackedInputFiles (Microsoft.Build.Framework.ITask ownerTask, Microsoft.Build.Framework.ITaskItem[] tlogFiles, Microsoft.Build.Framework.ITaskItem[] sourceFiles, Microsoft.Build.Framework.ITaskItem[] excludedInputPaths, Microsoft.Build.Framework.ITaskItem[] outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Framework.ITask ownerTask, class Microsoft.Build.Framework.ITaskItem[] tlogFiles, class Microsoft.Build.Framework.ITaskItem[] sourceFiles, class Microsoft.Build.Framework.ITaskItem[] excludedInputPaths, class Microsoft.Build.Framework.ITaskItem[] outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ownerTask As ITask, tlogFiles As ITaskItem(), sourceFiles As ITaskItem(), excludedInputPaths As ITaskItem(), outputs As ITaskItem(), useMinimalRebuildOptimization As Boolean, maintainCompositeRootingMarkers As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CanonicalTrackedInputFiles(Microsoft::Build::Framework::ITask ^ ownerTask, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ tlogFiles, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ sourceFiles, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ excludedInputPaths, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Utilities.CanonicalTrackedInputFiles : Microsoft.Build.Framework.ITask * Microsoft.Build.Framework.ITaskItem[] * Microsoft.Build.Framework.ITaskItem[] * Microsoft.Build.Framework.ITaskItem[] * Microsoft.Build.Framework.ITaskItem[] * bool * bool -&gt; Microsoft.Build.Utilities.CanonicalTrackedInputFiles" Usage="new Microsoft.Build.Utilities.CanonicalTrackedInputFiles (ownerTask, tlogFiles, sourceFiles, excludedInputPaths, outputs, useMinimalRebuildOptimization, maintainCompositeRootingMarkers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ownerTask" Type="Microsoft.Build.Framework.ITask" />
        <Parameter Name="tlogFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="sourceFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="excludedInputPaths" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="outputs" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="useMinimalRebuildOptimization" Type="System.Boolean" />
        <Parameter Name="maintainCompositeRootingMarkers" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ownerTask"><span data-ttu-id="24d03-128">正在使用文件跟踪器的任务</span><span class="sxs-lookup"><span data-stu-id="24d03-128">The task that is using file tracker</span></span></param>
        <param name="tlogFiles"><span data-ttu-id="24d03-129">要解释的 .read.</span><span class="sxs-lookup"><span data-stu-id="24d03-129">The .read.</span></span> <span data-ttu-id="24d03-130">tlog 文件</span><span class="sxs-lookup"><span data-stu-id="24d03-130">tlog files to interpret</span></span></param>
        <param name="sourceFiles"><span data-ttu-id="24d03-131">要为其解释依赖项的主源文件</span><span class="sxs-lookup"><span data-stu-id="24d03-131">The primary source files to interpret dependencies for</span></span></param>
        <param name="excludedInputPaths"><span data-ttu-id="24d03-132">包含在最新检查过程中将要忽略的文件的路径集</span><span class="sxs-lookup"><span data-stu-id="24d03-132">The set of paths that contain files that are to be ignored during up to date check</span></span></param>
        <param name="outputs"><span data-ttu-id="24d03-133">通过编译此源集生成的输出文件</span><span class="sxs-lookup"><span data-stu-id="24d03-133">The output files produced by compiling this set of sources</span></span></param>
        <param name="useMinimalRebuildOptimization"><span data-ttu-id="24d03-134">警告：最小重新生成优化需要指定完全正确的计算输出！</span><span class="sxs-lookup"><span data-stu-id="24d03-134">WARNING: Minimal rebuild optimization requires 100% accurate computed outputs to be specified!</span></span></param>
        <param name="maintainCompositeRootingMarkers"><span data-ttu-id="24d03-135">若要保留复合根标记（多对一情形），则为 true；若要去除这些标记（一对一或一对多情形），则为 false</span><span class="sxs-lookup"><span data-stu-id="24d03-135">True to keep composite rooting markers around (many-to-one case) or false to shred them (one-to-one or one-to-many case)</span></span></param>
        <summary><span data-ttu-id="24d03-136">用于多个输入源文件的构造函数</span><span class="sxs-lookup"><span data-stu-id="24d03-136">Constructor for multiple input source files</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CanonicalTrackedInputFiles (Microsoft.Build.Framework.ITask ownerTask, Microsoft.Build.Framework.ITaskItem[] tlogFiles, Microsoft.Build.Framework.ITaskItem[] sourceFiles, Microsoft.Build.Framework.ITaskItem[] excludedInputPaths, Microsoft.Build.Utilities.CanonicalTrackedOutputFiles outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Framework.ITask ownerTask, class Microsoft.Build.Framework.ITaskItem[] tlogFiles, class Microsoft.Build.Framework.ITaskItem[] sourceFiles, class Microsoft.Build.Framework.ITaskItem[] excludedInputPaths, class Microsoft.Build.Utilities.CanonicalTrackedOutputFiles outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Utilities.CanonicalTrackedOutputFiles,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ownerTask As ITask, tlogFiles As ITaskItem(), sourceFiles As ITaskItem(), excludedInputPaths As ITaskItem(), outputs As CanonicalTrackedOutputFiles, useMinimalRebuildOptimization As Boolean, maintainCompositeRootingMarkers As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CanonicalTrackedInputFiles(Microsoft::Build::Framework::ITask ^ ownerTask, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ tlogFiles, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ sourceFiles, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ excludedInputPaths, Microsoft::Build::Utilities::CanonicalTrackedOutputFiles ^ outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Utilities.CanonicalTrackedInputFiles : Microsoft.Build.Framework.ITask * Microsoft.Build.Framework.ITaskItem[] * Microsoft.Build.Framework.ITaskItem[] * Microsoft.Build.Framework.ITaskItem[] * Microsoft.Build.Utilities.CanonicalTrackedOutputFiles * bool * bool -&gt; Microsoft.Build.Utilities.CanonicalTrackedInputFiles" Usage="new Microsoft.Build.Utilities.CanonicalTrackedInputFiles (ownerTask, tlogFiles, sourceFiles, excludedInputPaths, outputs, useMinimalRebuildOptimization, maintainCompositeRootingMarkers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ownerTask" Type="Microsoft.Build.Framework.ITask" />
        <Parameter Name="tlogFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="sourceFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="excludedInputPaths" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="outputs" Type="Microsoft.Build.Utilities.CanonicalTrackedOutputFiles" />
        <Parameter Name="useMinimalRebuildOptimization" Type="System.Boolean" />
        <Parameter Name="maintainCompositeRootingMarkers" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ownerTask"><span data-ttu-id="24d03-137">正在使用文件跟踪器的任务</span><span class="sxs-lookup"><span data-stu-id="24d03-137">The task that is using file tracker</span></span></param>
        <param name="tlogFiles"><span data-ttu-id="24d03-138">要解释的 .read.</span><span class="sxs-lookup"><span data-stu-id="24d03-138">The .read.</span></span> <span data-ttu-id="24d03-139">tlog 文件</span><span class="sxs-lookup"><span data-stu-id="24d03-139">tlog files to interpret</span></span></param>
        <param name="sourceFiles"><span data-ttu-id="24d03-140">要为其解释依赖项的主源文件</span><span class="sxs-lookup"><span data-stu-id="24d03-140">The primary source files to interpret dependencies for</span></span></param>
        <param name="excludedInputPaths"><span data-ttu-id="24d03-141">包含在最新检查过程中将要忽略的文件的路径集</span><span class="sxs-lookup"><span data-stu-id="24d03-141">The set of paths that contain files that are to be ignored during up to date check</span></span></param>
        <param name="outputs"><span data-ttu-id="24d03-142">通过编译此源集生成的输出文件</span><span class="sxs-lookup"><span data-stu-id="24d03-142">The output files produced by compiling this set of sources</span></span></param>
        <param name="useMinimalRebuildOptimization"><span data-ttu-id="24d03-143">警告：最小重新生成优化需要指定完全正确的计算输出！</span><span class="sxs-lookup"><span data-stu-id="24d03-143">WARNING: Minimal rebuild optimization requires 100% accurate computed outputs to be specified!</span></span></param>
        <param name="maintainCompositeRootingMarkers"><span data-ttu-id="24d03-144">若要保留复合根标记（多对一情形），则为 true；若要去除这些标记（一对一或一对多情形），则为 false</span><span class="sxs-lookup"><span data-stu-id="24d03-144">True to keep composite rooting markers around (many-to-one case) or false to shred them (one-to-one or one-to-many case)</span></span></param>
        <summary><span data-ttu-id="24d03-145">用于多个输入源文件的构造函数</span><span class="sxs-lookup"><span data-stu-id="24d03-145">Constructor for multiple input source files</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ComputeSourcesNeedingCompilation">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="24d03-146">此方法计算需要根据输出文件和输入的完全依赖项关系图来进行编译的源。</span><span class="sxs-lookup"><span data-stu-id="24d03-146">This method computes the sources that need to be compiled based on the output files and the full dependency graph of inputs.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ComputeSourcesNeedingCompilation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] ComputeSourcesNeedingCompilation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Framework.ITaskItem[] ComputeSourcesNeedingCompilation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.ComputeSourcesNeedingCompilation" />
      <MemberSignature Language="VB.NET" Value="Public Function ComputeSourcesNeedingCompilation () As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ ComputeSourcesNeedingCompilation();" />
      <MemberSignature Language="F#" Value="member this.ComputeSourcesNeedingCompilation : unit -&gt; Microsoft.Build.Framework.ITaskItem[]" Usage="canonicalTrackedInputFiles.ComputeSourcesNeedingCompilation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="24d03-147">此方法计算需要根据输出文件和输入的完全依赖项关系图来进行编译的源</span><span class="sxs-lookup"><span data-stu-id="24d03-147">This method computes the sources that need to be compiled based on the output files and the full dependency graph of inputs</span></span></summary>
        <returns><span data-ttu-id="24d03-148">需要编译的文件数组</span><span class="sxs-lookup"><span data-stu-id="24d03-148">Array of files that need to be compiled</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputeSourcesNeedingCompilation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] ComputeSourcesNeedingCompilation (bool searchForSubRootsInCompositeRootingMarkers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Framework.ITaskItem[] ComputeSourcesNeedingCompilation(bool searchForSubRootsInCompositeRootingMarkers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.ComputeSourcesNeedingCompilation(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ComputeSourcesNeedingCompilation (searchForSubRootsInCompositeRootingMarkers As Boolean) As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ ComputeSourcesNeedingCompilation(bool searchForSubRootsInCompositeRootingMarkers);" />
      <MemberSignature Language="F#" Value="member this.ComputeSourcesNeedingCompilation : bool -&gt; Microsoft.Build.Framework.ITaskItem[]" Usage="canonicalTrackedInputFiles.ComputeSourcesNeedingCompilation searchForSubRootsInCompositeRootingMarkers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchForSubRootsInCompositeRootingMarkers" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="searchForSubRootsInCompositeRootingMarkers"><span data-ttu-id="24d03-149">如果为 true，则搜索子根的复合根标记。</span><span class="sxs-lookup"><span data-stu-id="24d03-149">If true, search composite rooting markers for subroots.</span></span></param>
        <summary><span data-ttu-id="24d03-150">此方法计算需要根据输出文件和输入的完全依赖项关系图来进行编译的源，并可选择搜索可能包含输入文件的子根的复合根标记</span><span class="sxs-lookup"><span data-stu-id="24d03-150">This method computes the sources that need to be compiled based on the output files and the full dependency graph of inputs, optionally searching composite rooting markers for subroots that may contain input files</span></span></summary>
        <returns><span data-ttu-id="24d03-151">需要编译的文件数组</span><span class="sxs-lookup"><span data-stu-id="24d03-151">Array of files that need to be compiled</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DependencyTable">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.Dictionary&lt;string,string&gt;&gt; DependencyTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.Dictionary`2&lt;string, string&gt;&gt; DependencyTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.DependencyTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DependencyTable As Dictionary(Of String, Dictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;System::String ^, System::Collections::Generic::Dictionary&lt;System::String ^, System::String ^&gt; ^&gt; ^ DependencyTable { System::Collections::Generic::Dictionary&lt;System::String ^, System::Collections::Generic::Dictionary&lt;System::String ^, System::String ^&gt; ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DependencyTable : System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.Dictionary&lt;string, string&gt;&gt;" Usage="Microsoft.Build.Utilities.CanonicalTrackedInputFiles.DependencyTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24d03-152">获取当前依赖项表。</span><span class="sxs-lookup"><span data-stu-id="24d03-152">Gets the current dependency table.</span></span></summary>
        <value><span data-ttu-id="24d03-153">依赖关系表。</span><span class="sxs-lookup"><span data-stu-id="24d03-153">The dependency table.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileIsExcludedFromDependencyCheck">
      <MemberSignature Language="C#" Value="public bool FileIsExcludedFromDependencyCheck (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool FileIsExcludedFromDependencyCheck(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.FileIsExcludedFromDependencyCheck(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FileIsExcludedFromDependencyCheck (fileName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FileIsExcludedFromDependencyCheck(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.FileIsExcludedFromDependencyCheck : string -&gt; bool" Usage="canonicalTrackedInputFiles.FileIsExcludedFromDependencyCheck fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="24d03-154">要测试的文件的完整路径</span><span class="sxs-lookup"><span data-stu-id="24d03-154">Full path of the file to test</span></span></param>
        <summary><span data-ttu-id="24d03-155">测试是否从跟踪依赖项中排除指定的文件</span><span class="sxs-lookup"><span data-stu-id="24d03-155">Test to see if the specified file is excluded from tracked dependency checking</span></span></summary>
        <returns><span data-ttu-id="24d03-156">如果文件已排除，则返回 <see langword="true" />；否则，返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="24d03-156"><see langword="true" /> if the file is excluded; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveDependenciesFromEntryIfMissing">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="24d03-157">移除给定源和相应输出的输出关系图项。</span><span class="sxs-lookup"><span data-stu-id="24d03-157">Remove the output graph entries for the given sources and corresponding outputs.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveDependenciesFromEntryIfMissing">
      <MemberSignature Language="C#" Value="public void RemoveDependenciesFromEntryIfMissing (Microsoft.Build.Framework.ITaskItem source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveDependenciesFromEntryIfMissing(class Microsoft.Build.Framework.ITaskItem source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveDependenciesFromEntryIfMissing (source As ITaskItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveDependenciesFromEntryIfMissing(Microsoft::Build::Framework::ITaskItem ^ source);" />
      <MemberSignature Language="F#" Value="member this.RemoveDependenciesFromEntryIfMissing : Microsoft.Build.Framework.ITaskItem -&gt; unit" Usage="canonicalTrackedInputFiles.RemoveDependenciesFromEntryIfMissing source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Build.Framework.ITaskItem" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="24d03-158">应从关系图中移除的源</span><span class="sxs-lookup"><span data-stu-id="24d03-158">Source that should be removed from the graph</span></span></param>
        <summary><span data-ttu-id="24d03-159">移除给定源和相应输出的输出关系图项</span><span class="sxs-lookup"><span data-stu-id="24d03-159">Remove the output graph entries for the given sources and corresponding outputs</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDependenciesFromEntryIfMissing">
      <MemberSignature Language="C#" Value="public void RemoveDependenciesFromEntryIfMissing (Microsoft.Build.Framework.ITaskItem[] source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveDependenciesFromEntryIfMissing(class Microsoft.Build.Framework.ITaskItem[] source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveDependenciesFromEntryIfMissing (source As ITaskItem())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveDependenciesFromEntryIfMissing(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ source);" />
      <MemberSignature Language="F#" Value="member this.RemoveDependenciesFromEntryIfMissing : Microsoft.Build.Framework.ITaskItem[] -&gt; unit" Usage="canonicalTrackedInputFiles.RemoveDependenciesFromEntryIfMissing source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Build.Framework.ITaskItem[]" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="24d03-160">应从关系图中移除的源</span><span class="sxs-lookup"><span data-stu-id="24d03-160">Sources that should be removed from the graph</span></span></param>
        <summary><span data-ttu-id="24d03-161">移除给定源和相应输出的输出关系图项</span><span class="sxs-lookup"><span data-stu-id="24d03-161">Remove the output graph entries for the given sources and corresponding outputs</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDependenciesFromEntryIfMissing">
      <MemberSignature Language="C#" Value="public void RemoveDependenciesFromEntryIfMissing (Microsoft.Build.Framework.ITaskItem source, Microsoft.Build.Framework.ITaskItem correspondingOutput);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveDependenciesFromEntryIfMissing(class Microsoft.Build.Framework.ITaskItem source, class Microsoft.Build.Framework.ITaskItem correspondingOutput) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Framework.ITaskItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveDependenciesFromEntryIfMissing (source As ITaskItem, correspondingOutput As ITaskItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveDependenciesFromEntryIfMissing(Microsoft::Build::Framework::ITaskItem ^ source, Microsoft::Build::Framework::ITaskItem ^ correspondingOutput);" />
      <MemberSignature Language="F#" Value="member this.RemoveDependenciesFromEntryIfMissing : Microsoft.Build.Framework.ITaskItem * Microsoft.Build.Framework.ITaskItem -&gt; unit" Usage="canonicalTrackedInputFiles.RemoveDependenciesFromEntryIfMissing (source, correspondingOutput)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Build.Framework.ITaskItem" />
        <Parameter Name="correspondingOutput" Type="Microsoft.Build.Framework.ITaskItem" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="24d03-162">应从关系图中移除的源</span><span class="sxs-lookup"><span data-stu-id="24d03-162">Source that should be removed from the graph</span></span></param>
        <param name="correspondingOutput"><span data-ttu-id="24d03-163">与源相对应的输出（用于相同文件处理）</span><span class="sxs-lookup"><span data-stu-id="24d03-163">Output that correspond ot the sources (used for same file processing)</span></span></param>
        <summary><span data-ttu-id="24d03-164">移除给定源和相应输出的输出关系图项</span><span class="sxs-lookup"><span data-stu-id="24d03-164">Remove the output graph entries for the given sources and corresponding outputs</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDependenciesFromEntryIfMissing">
      <MemberSignature Language="C#" Value="public void RemoveDependenciesFromEntryIfMissing (Microsoft.Build.Framework.ITaskItem[] source, Microsoft.Build.Framework.ITaskItem[] correspondingOutputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveDependenciesFromEntryIfMissing(class Microsoft.Build.Framework.ITaskItem[] source, class Microsoft.Build.Framework.ITaskItem[] correspondingOutputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveDependenciesFromEntryIfMissing (source As ITaskItem(), correspondingOutputs As ITaskItem())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveDependenciesFromEntryIfMissing(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ source, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ correspondingOutputs);" />
      <MemberSignature Language="F#" Value="member this.RemoveDependenciesFromEntryIfMissing : Microsoft.Build.Framework.ITaskItem[] * Microsoft.Build.Framework.ITaskItem[] -&gt; unit" Usage="canonicalTrackedInputFiles.RemoveDependenciesFromEntryIfMissing (source, correspondingOutputs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="correspondingOutputs" Type="Microsoft.Build.Framework.ITaskItem[]" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="24d03-165">应从关系图中移除的源</span><span class="sxs-lookup"><span data-stu-id="24d03-165">Sources that should be removed from the graph</span></span></param>
        <param name="correspondingOutputs"><span data-ttu-id="24d03-166">与源相对应的输出（用于相同文件处理）</span><span class="sxs-lookup"><span data-stu-id="24d03-166">Outputs that correspond ot the sources (used for same file processing)</span></span></param>
        <summary><span data-ttu-id="24d03-167">移除给定源和相应输出的输出关系图项</span><span class="sxs-lookup"><span data-stu-id="24d03-167">Remove the output graph entries for the given sources and corresponding outputs</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveDependencyFromEntry">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="24d03-168">移除给定源和相应输出的输出关系图项。</span><span class="sxs-lookup"><span data-stu-id="24d03-168">Remove the output graph entries for the given source and corresponding outputs.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveDependencyFromEntry">
      <MemberSignature Language="C#" Value="public void RemoveDependencyFromEntry (Microsoft.Build.Framework.ITaskItem source, Microsoft.Build.Framework.ITaskItem dependencyToRemove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveDependencyFromEntry(class Microsoft.Build.Framework.ITaskItem source, class Microsoft.Build.Framework.ITaskItem dependencyToRemove) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependencyFromEntry(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Framework.ITaskItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveDependencyFromEntry (source As ITaskItem, dependencyToRemove As ITaskItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveDependencyFromEntry(Microsoft::Build::Framework::ITaskItem ^ source, Microsoft::Build::Framework::ITaskItem ^ dependencyToRemove);" />
      <MemberSignature Language="F#" Value="member this.RemoveDependencyFromEntry : Microsoft.Build.Framework.ITaskItem * Microsoft.Build.Framework.ITaskItem -&gt; unit" Usage="canonicalTrackedInputFiles.RemoveDependencyFromEntry (source, dependencyToRemove)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Build.Framework.ITaskItem" />
        <Parameter Name="dependencyToRemove" Type="Microsoft.Build.Framework.ITaskItem" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="24d03-169">应从关系图中移除的源</span><span class="sxs-lookup"><span data-stu-id="24d03-169">Source that should be removed from the graph</span></span></param>
        <param name="dependencyToRemove"><span data-ttu-id="24d03-170">要作为依赖项移除的 <see cref="T:Microsoft.Build.Framework.ITaskItem" />。</span><span class="sxs-lookup"><span data-stu-id="24d03-170">A <see cref="T:Microsoft.Build.Framework.ITaskItem" /> to remove as a dependency.</span></span></param>
        <summary><span data-ttu-id="24d03-171">移除给定源和相应输出的输出关系图项</span><span class="sxs-lookup"><span data-stu-id="24d03-171">Remove the output graph entries for the given source and corresponding outputs</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDependencyFromEntry">
      <MemberSignature Language="C#" Value="public void RemoveDependencyFromEntry (Microsoft.Build.Framework.ITaskItem[] sources, Microsoft.Build.Framework.ITaskItem dependencyToRemove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveDependencyFromEntry(class Microsoft.Build.Framework.ITaskItem[] sources, class Microsoft.Build.Framework.ITaskItem dependencyToRemove) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependencyFromEntry(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveDependencyFromEntry (sources As ITaskItem(), dependencyToRemove As ITaskItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveDependencyFromEntry(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ sources, Microsoft::Build::Framework::ITaskItem ^ dependencyToRemove);" />
      <MemberSignature Language="F#" Value="member this.RemoveDependencyFromEntry : Microsoft.Build.Framework.ITaskItem[] * Microsoft.Build.Framework.ITaskItem -&gt; unit" Usage="canonicalTrackedInputFiles.RemoveDependencyFromEntry (sources, dependencyToRemove)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sources" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="dependencyToRemove" Type="Microsoft.Build.Framework.ITaskItem" />
      </Parameters>
      <Docs>
        <param name="sources"><span data-ttu-id="24d03-172">应从关系图中移除的源</span><span class="sxs-lookup"><span data-stu-id="24d03-172">Sources that should be removed from the graph</span></span></param>
        <param name="dependencyToRemove"><span data-ttu-id="24d03-173">要作为依赖项移除的 <see cref="T:Microsoft.Build.Framework.ITaskItem" />。</span><span class="sxs-lookup"><span data-stu-id="24d03-173">A <see cref="T:Microsoft.Build.Framework.ITaskItem" /> to remove as a dependency.</span></span></param>
        <summary><span data-ttu-id="24d03-174">移除给定源和相应输出的输出关系图项</span><span class="sxs-lookup"><span data-stu-id="24d03-174">Remove the output graph entries for the given sources and corresponding outputs</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveEntriesForSource">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="24d03-175">移除给定源和相应输出的输出关系图项。</span><span class="sxs-lookup"><span data-stu-id="24d03-175">Removes the output graph entries for the given sources and corresponding outputs.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveEntriesForSource">
      <MemberSignature Language="C#" Value="public void RemoveEntriesForSource (Microsoft.Build.Framework.ITaskItem source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveEntriesForSource(class Microsoft.Build.Framework.ITaskItem source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveEntriesForSource(Microsoft.Build.Framework.ITaskItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveEntriesForSource (source As ITaskItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveEntriesForSource(Microsoft::Build::Framework::ITaskItem ^ source);" />
      <MemberSignature Language="F#" Value="member this.RemoveEntriesForSource : Microsoft.Build.Framework.ITaskItem -&gt; unit" Usage="canonicalTrackedInputFiles.RemoveEntriesForSource source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Build.Framework.ITaskItem" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="24d03-176">应从关系图中移除的源</span><span class="sxs-lookup"><span data-stu-id="24d03-176">Source that should be removed from the graph</span></span></param>
        <summary><span data-ttu-id="24d03-177">移除给定源和相应输出的输出关系图项</span><span class="sxs-lookup"><span data-stu-id="24d03-177">Remove the output graph entries for the given sources and corresponding outputs</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveEntriesForSource">
      <MemberSignature Language="C#" Value="public void RemoveEntriesForSource (Microsoft.Build.Framework.ITaskItem[] source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveEntriesForSource(class Microsoft.Build.Framework.ITaskItem[] source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveEntriesForSource(Microsoft.Build.Framework.ITaskItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveEntriesForSource (source As ITaskItem())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveEntriesForSource(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ source);" />
      <MemberSignature Language="F#" Value="member this.RemoveEntriesForSource : Microsoft.Build.Framework.ITaskItem[] -&gt; unit" Usage="canonicalTrackedInputFiles.RemoveEntriesForSource source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Build.Framework.ITaskItem[]" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="24d03-178">应从关系图中移除的源</span><span class="sxs-lookup"><span data-stu-id="24d03-178">Sources that should be removed from the graph</span></span></param>
        <summary><span data-ttu-id="24d03-179">移除给定源和相应输出的输出关系图项</span><span class="sxs-lookup"><span data-stu-id="24d03-179">Remove the output graph entries for the given sources and corresponding outputs</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveEntryForSourceRoot">
      <MemberSignature Language="C#" Value="public void RemoveEntryForSourceRoot (string rootingMarker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveEntryForSourceRoot(string rootingMarker) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveEntryForSourceRoot(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveEntryForSourceRoot (rootingMarker As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveEntryForSourceRoot(System::String ^ rootingMarker);" />
      <MemberSignature Language="F#" Value="member this.RemoveEntryForSourceRoot : string -&gt; unit" Usage="canonicalTrackedInputFiles.RemoveEntryForSourceRoot rootingMarker" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootingMarker" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rootingMarker"><span data-ttu-id="24d03-180">要移除的根</span><span class="sxs-lookup"><span data-stu-id="24d03-180">The root to remove</span></span></param>
        <summary><span data-ttu-id="24d03-181">移除输入依赖项关系图中与传入的根标记对应的项。</span><span class="sxs-lookup"><span data-stu-id="24d03-181">Remove the entry in the input dependency graph corresponding to the rooting marker passed in.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SaveTlog">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="24d03-182">此方法将利用要跟踪的当前输出表的新项重新编写 tlog。</span><span class="sxs-lookup"><span data-stu-id="24d03-182">This method will re-write the tlogs from the current output table new entries will be tracked.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SaveTlog">
      <MemberSignature Language="C#" Value="public void SaveTlog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveTlog() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.SaveTlog" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveTlog ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveTlog();" />
      <MemberSignature Language="F#" Value="member this.SaveTlog : unit -&gt; unit" Usage="canonicalTrackedInputFiles.SaveTlog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="24d03-183">此方法将利用要跟踪的当前输出表的新项重新编写 tlog。</span><span class="sxs-lookup"><span data-stu-id="24d03-183">This method will re-write the tlogs from the current output table new entries will be tracked.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveTlog">
      <MemberSignature Language="C#" Value="public void SaveTlog (Microsoft.Build.Utilities.DependencyFilter includeInTLog);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveTlog(class Microsoft.Build.Utilities.DependencyFilter includeInTLog) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.SaveTlog(Microsoft.Build.Utilities.DependencyFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveTlog (includeInTLog As DependencyFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveTlog(Microsoft::Build::Utilities::DependencyFilter ^ includeInTLog);" />
      <MemberSignature Language="F#" Value="member this.SaveTlog : Microsoft.Build.Utilities.DependencyFilter -&gt; unit" Usage="canonicalTrackedInputFiles.SaveTlog includeInTLog" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeInTLog" Type="Microsoft.Build.Utilities.DependencyFilter" />
      </Parameters>
      <Docs>
        <param name="includeInTLog"><span data-ttu-id="24d03-184">用于确定是否应将某个特定文件包括在已压缩的 tlog 中的委托。</span><span class="sxs-lookup"><span data-stu-id="24d03-184">Delegate used to determine whether a particular file should be included in the compacted tlog.</span></span></param>
        <summary><span data-ttu-id="24d03-185">此方法将利用当前依赖项重新编写 tlog。</span><span class="sxs-lookup"><span data-stu-id="24d03-185">This method will re-write the tlogs from the current dependency.</span></span> <span data-ttu-id="24d03-186">在编译源的过程中，将跟踪新项。</span><span class="sxs-lookup"><span data-stu-id="24d03-186">As the sources are compiled, new entries willbe tracked.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
