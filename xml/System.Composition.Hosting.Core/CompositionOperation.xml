<Type Name="CompositionOperation" FullName="System.Composition.Hosting.Core.CompositionOperation">
  <Metadata><Meta Name="ms.openlocfilehash" Value="769131ad98b2728210d9ab354bf51c03dc19104d" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89775960" /></Metadata><TypeSignature Language="C#" Value="public sealed class CompositionOperation : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CompositionOperation extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Composition.Hosting.Core.CompositionOperation" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CompositionOperation&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompositionOperation sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type CompositionOperation = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Composition.Hosting</AssemblyName>
    <AssemblyVersion>1.0.31.0</AssemblyVersion>
    <AssemblyVersion>1.0.32.0</AssemblyVersion>
    <AssemblyVersion>1.0.33.0</AssemblyVersion>
    <AssemblyVersion>1.0.34.0</AssemblyVersion>
    <AssemblyVersion>1.0.35.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>表示单个组合操作。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

此类的实例对于多个线程访问是不安全的。

      ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddNonPrerequisiteAction">
      <MemberSignature Language="C#" Value="public void AddNonPrerequisiteAction (Action action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddNonPrerequisiteAction(class System.Action action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.CompositionOperation.AddNonPrerequisiteAction(System.Action)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddNonPrerequisiteAction (action As Action)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddNonPrerequisiteAction(Action ^ action);" />
      <MemberSignature Language="F#" Value="member this.AddNonPrerequisiteAction : Action -&gt; unit" Usage="compositionOperation.AddNonPrerequisiteAction action" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
        <AssemblyVersion>1.0.34.0</AssemblyVersion>
        <AssemblyVersion>1.0.35.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="action">要运行的操作。</param>
        <summary>指定在满足所有系统必备的部件依赖关系后可运行的操作。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法是在激活过程中调用的。
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="action" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddPostCompositionAction">
      <MemberSignature Language="C#" Value="public void AddPostCompositionAction (Action action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPostCompositionAction(class System.Action action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.CompositionOperation.AddPostCompositionAction(System.Action)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPostCompositionAction (action As Action)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPostCompositionAction(Action ^ action);" />
      <MemberSignature Language="F#" Value="member this.AddPostCompositionAction : Action -&gt; unit" Usage="compositionOperation.AddPostCompositionAction action" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
        <AssemblyVersion>1.0.34.0</AssemblyVersion>
        <AssemblyVersion>1.0.35.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="action">要运行的操作。</param>
        <summary>指定一个操作，在根据 <see cref="T:System.Composition.OnImportsSatisfiedAttribute" /> 的指示完成所有组合后，要运行该操作。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法是在激活过程中调用的。
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.CompositionOperation.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="compositionOperation.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
        <AssemblyVersion>1.0.34.0</AssemblyVersion>
        <AssemblyVersion>1.0.35.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>解除组合操作期间保持的所有锁定。</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public static object Run (System.Composition.Hosting.Core.LifetimeContext outermostLifetimeContext, System.Composition.Hosting.Core.CompositeActivator compositionRootActivator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Run(class System.Composition.Hosting.Core.LifetimeContext outermostLifetimeContext, class System.Composition.Hosting.Core.CompositeActivator compositionRootActivator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.CompositionOperation.Run(System.Composition.Hosting.Core.LifetimeContext,System.Composition.Hosting.Core.CompositeActivator)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Run (outermostLifetimeContext As LifetimeContext, compositionRootActivator As CompositeActivator) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Run(System::Composition::Hosting::Core::LifetimeContext ^ outermostLifetimeContext, System::Composition::Hosting::Core::CompositeActivator ^ compositionRootActivator);" />
      <MemberSignature Language="F#" Value="static member Run : System.Composition.Hosting.Core.LifetimeContext * System.Composition.Hosting.Core.CompositeActivator -&gt; obj" Usage="System.Composition.Hosting.Core.CompositionOperation.Run (outermostLifetimeContext, compositionRootActivator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
        <AssemblyVersion>1.0.34.0</AssemblyVersion>
        <AssemblyVersion>1.0.35.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outermostLifetimeContext" Type="System.Composition.Hosting.Core.LifetimeContext" />
        <Parameter Name="compositionRootActivator" Type="System.Composition.Hosting.Core.CompositeActivator" />
      </Parameters>
      <Docs>
        <param name="outermostLifetimeContext">要在其中开始执行操作的上下文（操作可在需要时流到上下文的父项）。</param>
        <param name="compositionRootActivator">用于驱动操作的激活器。</param>
        <summary>由指定的激活器进行驱动，在指定的生存期上下文内开始运行组合操作。</summary>
        <returns>组合对象图。</returns>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
