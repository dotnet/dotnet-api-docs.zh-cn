<Type Name="LockingPersistenceProvider" FullName="System.ServiceModel.Persistence.LockingPersistenceProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ca39c6f7caee472eaec75ba2fbfb9b95fea9af90" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86570511" /></Metadata><TypeSignature Language="C#" Value="public abstract class LockingPersistenceProvider : System.ServiceModel.Persistence.PersistenceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit LockingPersistenceProvider extends System.ServiceModel.Persistence.PersistenceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Persistence.LockingPersistenceProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class LockingPersistenceProvider&#xA;Inherits PersistenceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class LockingPersistenceProvider abstract : System::ServiceModel::Persistence::PersistenceProvider" />
  <TypeSignature Language="F#" Value="type LockingPersistenceProvider = class&#xA;    inherit PersistenceProvider" />
  <AssemblyInfo>
    <AssemblyName>System.WorkflowServices</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Persistence.PersistenceProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d9472-101">从中派生所有实现锁定的持久性服务永久性提供程序的抽象基类。</span><span class="sxs-lookup"><span data-stu-id="d9472-101">The abstract base class from which all durable service persistence providers that implement locking are derived.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9472-102">除了持久性以外，<xref:System.ServiceModel.Persistence.LockingPersistenceProvider> 类还实现服务状态数据记录的锁定。</span><span class="sxs-lookup"><span data-stu-id="d9472-102">In addition to persistence, the <xref:System.ServiceModel.Persistence.LockingPersistenceProvider> class implements locking of service state data records.</span></span> <span data-ttu-id="d9472-103">与持久化数据进行交互的方法 (例如 `Load`) 方法具有一个可选参数 (`lockInstance`) ，该参数定义是释放还是保持相关数据的锁定。</span><span class="sxs-lookup"><span data-stu-id="d9472-103">Methods that interact with persisted data (such as the `Load` method) have an optional parameter (`lockInstance`) that defines whether locks on the data in question are released or maintained.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LockingPersistenceProvider (Guid id);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Guid id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (id As Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; LockingPersistenceProvider(Guid id);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Persistence.LockingPersistenceProvider : Guid -&gt; System.ServiceModel.Persistence.LockingPersistenceProvider" Usage="new System.ServiceModel.Persistence.LockingPersistenceProvider id" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="d9472-104">要与此永久性提供程序实例关联的唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="d9472-104">The unique identifier to be associated with this persistence provider instance.</span></span></param>
        <summary><span data-ttu-id="d9472-105">在派生类中实现时，创建 <see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" /> 类的新实例，使用指定标识值进行配置。</span><span class="sxs-lookup"><span data-stu-id="d9472-105">When implemented in a derived class, creates a new instance of the <see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" /> class, configured with the specified identity value.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginCreate">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d9472-106">开始一个异步操作，以在持久性存储区中创建实例状态信息。</span><span class="sxs-lookup"><span data-stu-id="d9472-106">Begins an asynchronous operation to create instance state information in the persistence store.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginCreate">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginCreate (object instance, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginCreate(object instance, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginCreate (instance As Object, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginCreate(System::Object ^ instance, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginCreate : obj * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="lockingPersistenceProvider.BeginCreate (instance, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="d9472-107">其状态信息保存到持久性存储区中的实例。</span><span class="sxs-lookup"><span data-stu-id="d9472-107">The instance whose state information is saved into the persistence store.</span></span></param>
        <param name="timeout"><span data-ttu-id="d9472-108">时间间隔，操作必须在此时间间隔内完成而不超时。</span><span class="sxs-lookup"><span data-stu-id="d9472-108">The interval in which the operation must be completed without timing out.</span></span></param>
        <param name="callback"><span data-ttu-id="d9472-109">在操作完成时接收通知的委托。</span><span class="sxs-lookup"><span data-stu-id="d9472-109">The delegate that receives the notification when the operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="d9472-110">与异步操作关联的状态信息。</span><span class="sxs-lookup"><span data-stu-id="d9472-110">The state information associated with the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="d9472-111">开始一个异步操作，以在持久性存储区中使用参数创建实例状态信息。</span><span class="sxs-lookup"><span data-stu-id="d9472-111">Begins an asynchronous operation to create instance state information in the persistence store using the parameters.</span></span> <span data-ttu-id="d9472-112">此方法不会在保存状态信息后对实例进行解锁。</span><span class="sxs-lookup"><span data-stu-id="d9472-112">This method does not unlock the instance after saving the state information.</span></span></summary>
        <returns><span data-ttu-id="d9472-113">异步操作的状态。</span><span class="sxs-lookup"><span data-stu-id="d9472-113">The status of an asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9472-114">此方法调入 <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate%2A> 方法，后者采用附加参数来确定实例是否已被解除锁定。</span><span class="sxs-lookup"><span data-stu-id="d9472-114">This method calls into the <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate%2A> method, which takes an additional parameter to determine whether the instance is unlocked.</span></span> <span data-ttu-id="d9472-115">此方法 `false` 将此参数的值作为此参数的值传递给调用方法。</span><span class="sxs-lookup"><span data-stu-id="d9472-115">This method passes `false` as a value for this parameter to the calling method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCreate">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginCreate (object instance, TimeSpan timeout, bool unlockInstance, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCreate(object instance, valuetype System.TimeSpan timeout, bool unlockInstance, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginCreate (instance As Object, timeout As TimeSpan, unlockInstance As Boolean, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginCreate(System::Object ^ instance, TimeSpan timeout, bool unlockInstance, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginCreate : obj * TimeSpan * bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="lockingPersistenceProvider.BeginCreate (instance, timeout, unlockInstance, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="unlockInstance" Type="System.Boolean" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="d9472-116">其状态信息保存到持久性存储区中的实例。</span><span class="sxs-lookup"><span data-stu-id="d9472-116">The instance whose state information is saved into the persistence store.</span></span></param>
        <param name="timeout"><span data-ttu-id="d9472-117">时间间隔，操作必须在此时间间隔内完成而不超时。</span><span class="sxs-lookup"><span data-stu-id="d9472-117">The interval in which the operation must be completed without timing out.</span></span></param>
        <param name="unlockInstance"><span data-ttu-id="d9472-118">如果必须在持久性存储区中解锁实例，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d9472-118"><see langword="true" /> if the instance must be unlocked in the persistence store; otherwise <see langword="false" />.</span></span></param>
        <param name="callback"><span data-ttu-id="d9472-119">在操作完成时接收通知的委托。</span><span class="sxs-lookup"><span data-stu-id="d9472-119">The delegate that receives the notification when the operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="d9472-120">与异步操作关联的状态信息。</span><span class="sxs-lookup"><span data-stu-id="d9472-120">The state information associated with the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="d9472-121">开始一个异步操作，以在持久性存储区中使用参数创建实例状态信息。</span><span class="sxs-lookup"><span data-stu-id="d9472-121">Begins an asynchronous operation to create instance state information in the persistence store using the parameters.</span></span> <span data-ttu-id="d9472-122">如果 <paramref name="unlockInstance" /> 参数的值为 <see langword="true" />，则此方法将在保存实例状态后对实例进行解锁。</span><span class="sxs-lookup"><span data-stu-id="d9472-122">This method unlocks the instance after saving the instance state if the value of the <paramref name="unlockInstance" /> parameter is <see langword="true" />.</span></span></summary>
        <returns><span data-ttu-id="d9472-123">异步操作的状态。</span><span class="sxs-lookup"><span data-stu-id="d9472-123">The status of an asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginLoad">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d9472-124">开始一个异步操作，以基于持久性存储区中的状态信息加载实例。</span><span class="sxs-lookup"><span data-stu-id="d9472-124">Begins an asynchronous operation to load an instance based on state information in the persistence store.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginLoad (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginLoad(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginLoad (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginLoad(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginLoad : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="lockingPersistenceProvider.BeginLoad (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="d9472-125">时间间隔，操作必须在此时间间隔内完成而不超时。</span><span class="sxs-lookup"><span data-stu-id="d9472-125">The interval in which the operation must be completed without timing out.</span></span></param>
        <param name="callback"><span data-ttu-id="d9472-126">在操作完成时接收通知的委托。</span><span class="sxs-lookup"><span data-stu-id="d9472-126">The delegate that receives the notification when the operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="d9472-127">与异步操作关联的状态信息。</span><span class="sxs-lookup"><span data-stu-id="d9472-127">The state information associated with the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="d9472-128">开始一个异步操作，以使用参数基于持久性存储区中的状态信息加载实例。</span><span class="sxs-lookup"><span data-stu-id="d9472-128">Begins an asynchronous operation to load an instance based on state information in the persistence store using the parameters.</span></span> <span data-ttu-id="d9472-129">此方法不锁定实例。</span><span class="sxs-lookup"><span data-stu-id="d9472-129">This method does not lock the instance.</span></span></summary>
        <returns><span data-ttu-id="d9472-130">异步操作的状态。</span><span class="sxs-lookup"><span data-stu-id="d9472-130">The status of an asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9472-131">此方法调入 <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad%2A>，后者采用附加参数来指定是否必须在持久性存储区中锁定实例。</span><span class="sxs-lookup"><span data-stu-id="d9472-131">This method calls into the <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad%2A>, which takes an additional parameter that specifies whether the instance must be locked in the persistence store.</span></span> <span data-ttu-id="d9472-132">此方法 `false` 将此参数的值作为此参数的值传递给调用方法。</span><span class="sxs-lookup"><span data-stu-id="d9472-132">This method passes `false` as a value for this parameter to the calling method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginLoad (TimeSpan timeout, bool lockInstance, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginLoad(valuetype System.TimeSpan timeout, bool lockInstance, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginLoad (timeout As TimeSpan, lockInstance As Boolean, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginLoad(TimeSpan timeout, bool lockInstance, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginLoad : TimeSpan * bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="lockingPersistenceProvider.BeginLoad (timeout, lockInstance, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="lockInstance" Type="System.Boolean" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="d9472-133">时间间隔，必须在超时前在此时间间隔内完成操作。</span><span class="sxs-lookup"><span data-stu-id="d9472-133">An interval in which the operation must be completed before timing out.</span></span></param>
        <param name="lockInstance"><span data-ttu-id="d9472-134">如果必须锁定实例，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d9472-134"><see langword="true" /> if the instance must be locked; otherwise <see langword="false" />.</span></span></param>
        <param name="callback"><span data-ttu-id="d9472-135">在操作完成时接收通知的委托。</span><span class="sxs-lookup"><span data-stu-id="d9472-135">The delegate that receives the notification when the operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="d9472-136">与异步操作关联的状态信息。</span><span class="sxs-lookup"><span data-stu-id="d9472-136">The state information associated with the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="d9472-137">开始一个异步操作，以使用参数基于持久性存储区中的状态信息加载实例。</span><span class="sxs-lookup"><span data-stu-id="d9472-137">Begins an asynchronous operation to load an instance based on state information in the persistence store using the parameters.</span></span> <span data-ttu-id="d9472-138">如果 <paramref name="lockInstance" /> 参数的值为 <see langword="true" />，则此方法将在加载实例状态后锁定实例。</span><span class="sxs-lookup"><span data-stu-id="d9472-138">This method locks the instance after loading the instance state if the value of the <paramref name="lockInstance" /> parameter is <see langword="true" />.</span></span></summary>
        <returns><span data-ttu-id="d9472-139">异步操作的状态。</span><span class="sxs-lookup"><span data-stu-id="d9472-139">The status of an asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginLoadIfChanged">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d9472-140">开始一个异步操作，以在实例状态信息自上次被调用方加载后已发生更改的情况下从持久性存储区中加载此状态信息。</span><span class="sxs-lookup"><span data-stu-id="d9472-140">Begins an asynchronous operation to load the instance state information from the persistence store if the state information has been changed since the last time the information was loaded by the caller.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginLoadIfChanged">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginLoadIfChanged (TimeSpan timeout, object instanceToken, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginLoadIfChanged(valuetype System.TimeSpan timeout, object instanceToken, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginLoadIfChanged (timeout As TimeSpan, instanceToken As Object, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginLoadIfChanged(TimeSpan timeout, System::Object ^ instanceToken, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginLoadIfChanged : TimeSpan * obj * AsyncCallback * obj -&gt; IAsyncResult" Usage="lockingPersistenceProvider.BeginLoadIfChanged (timeout, instanceToken, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="instanceToken" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="d9472-141">时间段，永久性提供程序在该时间段后将中止此操作。</span><span class="sxs-lookup"><span data-stu-id="d9472-141">The time period after which the persistence provider aborts this operation.</span></span></param>
        <param name="instanceToken"><span data-ttu-id="d9472-142">先前的 <see langword="Create" /> 或 <see langword="Update" /> 方法返回的标记，表示调用方具有的当前状态。</span><span class="sxs-lookup"><span data-stu-id="d9472-142">The token returned by a previous <see langword="Create" /> or <see langword="Update" /> method that represents the current state held by the caller.</span></span></param>
        <param name="callback"><span data-ttu-id="d9472-143">操作完成时将要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="d9472-143">The method to be called when the operation is completed.</span></span></param>
        <param name="state"><span data-ttu-id="d9472-144">一个用户提供的对象，该对象用于将此特定异步操作与其他操作区别开来。</span><span class="sxs-lookup"><span data-stu-id="d9472-144">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span></span></param>
        <summary><span data-ttu-id="d9472-145">在派生类中实现时，表示“LoadIfChanged”阶段开始。</span><span class="sxs-lookup"><span data-stu-id="d9472-145">When implemented in a derived class, represents the beginning of the LoadIfChanged phase.</span></span> <span data-ttu-id="d9472-146">将状态数据从持久性存储区加载到永久性提供程序中，并且持久性存储区中的状态数据已更改时，将进入“LoadIfChanged”阶段。</span><span class="sxs-lookup"><span data-stu-id="d9472-146">The LoadIfChanged phase occurs when state data is loaded into the persistence provider from the persistence store and the state data in the persistence store has been changed.</span></span> <span data-ttu-id="d9472-147">此方法调用不会在持久性存储区中锁定实例。</span><span class="sxs-lookup"><span data-stu-id="d9472-147">This method call does not lock the instance in the persistence store.</span></span></summary>
        <returns><span data-ttu-id="d9472-148">异步操作的状态。</span><span class="sxs-lookup"><span data-stu-id="d9472-148">The status of an asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadIfChanged">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginLoadIfChanged (TimeSpan timeout, object instanceToken, bool lockInstance, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginLoadIfChanged(valuetype System.TimeSpan timeout, object instanceToken, bool lockInstance, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginLoadIfChanged (timeout As TimeSpan, instanceToken As Object, lockInstance As Boolean, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginLoadIfChanged(TimeSpan timeout, System::Object ^ instanceToken, bool lockInstance, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginLoadIfChanged : TimeSpan * obj * bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="lockingPersistenceProvider.BeginLoadIfChanged (timeout, instanceToken, lockInstance, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="instanceToken" Type="System.Object" />
        <Parameter Name="lockInstance" Type="System.Boolean" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="d9472-149">时间段，永久性提供程序在该时间段后将中止此操作。</span><span class="sxs-lookup"><span data-stu-id="d9472-149">The time period after which the persistence provider aborts this operation.</span></span></param>
        <param name="instanceToken"><span data-ttu-id="d9472-150">先前的 <see langword="Create" /> 或 <see langword="Update" /> 方法返回的标记，表示调用方具有的当前状态。</span><span class="sxs-lookup"><span data-stu-id="d9472-150">The token returned by a previous <see langword="Create" /> or <see langword="Update" /> method that represents the current state held by the caller.</span></span></param>
        <param name="lockInstance"><span data-ttu-id="d9472-151">如果在持久性存储区中锁定实例，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d9472-151"><see langword="true" /> if the instance is locked in the persistence store; otherwise <see langword="false" />.</span></span></param>
        <param name="callback"><span data-ttu-id="d9472-152">操作完成时将要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="d9472-152">The method to be called when the operation is completed.</span></span></param>
        <param name="state"><span data-ttu-id="d9472-153">一个用户提供的对象，该对象用于将此特定异步操作与其他操作区别开来。</span><span class="sxs-lookup"><span data-stu-id="d9472-153">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span></span></param>
        <summary><span data-ttu-id="d9472-154">在派生类中实现时，表示“LoadIfChanged”阶段开始。</span><span class="sxs-lookup"><span data-stu-id="d9472-154">When implemented in a derived class, represents the beginning of the LoadIfChanged phase.</span></span> <span data-ttu-id="d9472-155">将状态数据从持久性存储区加载到永久性提供程序中，并且持久性存储区中的状态数据已更改时，将进入“LoadIfChanged”阶段。</span><span class="sxs-lookup"><span data-stu-id="d9472-155">The LoadIfChanged phase occurs when state data is loaded into the persistence provider from the persistence store and the state data in the persistence store has been changed.</span></span> <span data-ttu-id="d9472-156">此方法调用可让您指定是否需要在持久性存储区中锁定实例。</span><span class="sxs-lookup"><span data-stu-id="d9472-156">This method call lets you specify whether you want to lock the instance in the persistence store.</span></span></summary>
        <returns><span data-ttu-id="d9472-157">异步操作的状态。</span><span class="sxs-lookup"><span data-stu-id="d9472-157">The status of an asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUnlock">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginUnlock (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginUnlock(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginUnlock (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginUnlock(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginUnlock : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="lockingPersistenceProvider.BeginUnlock (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="d9472-158">时间间隔，必须在超时前在此时间间隔内完成操作。</span><span class="sxs-lookup"><span data-stu-id="d9472-158">An interval in which the operation must be completed before timing out.</span></span></param>
        <param name="callback"><span data-ttu-id="d9472-159">在操作完成时接收通知的委托。</span><span class="sxs-lookup"><span data-stu-id="d9472-159">The delegate that receives the notification when the operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="d9472-160">与异步操作关联的状态信息。</span><span class="sxs-lookup"><span data-stu-id="d9472-160">The state information associated with the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="d9472-161">开始一个异步操作，以在持久性存储区中对实例进行解锁。</span><span class="sxs-lookup"><span data-stu-id="d9472-161">Begins an asynchronous operation to unlock an instance in the persistence store.</span></span></summary>
        <returns><span data-ttu-id="d9472-162">异步操作的状态。</span><span class="sxs-lookup"><span data-stu-id="d9472-162">The status of an asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginUpdate">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d9472-163">开始一个异步操作，以在持久性存储区中更新实例状态信息。</span><span class="sxs-lookup"><span data-stu-id="d9472-163">Begins an asynchronous operation to update instance state information in the persistence store.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginUpdate">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginUpdate (object instance, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginUpdate(object instance, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginUpdate (instance As Object, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginUpdate(System::Object ^ instance, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginUpdate : obj * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="lockingPersistenceProvider.BeginUpdate (instance, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="d9472-164">其状态信息在持久性存储区中得到更新的实例。</span><span class="sxs-lookup"><span data-stu-id="d9472-164">The instance whose state information is being updated in the persistence store.</span></span></param>
        <param name="timeout"><span data-ttu-id="d9472-165">时间间隔，操作必须在此时间间隔内完成而不超时。</span><span class="sxs-lookup"><span data-stu-id="d9472-165">The interval in which the operation must complete without timing out.</span></span></param>
        <param name="callback"><span data-ttu-id="d9472-166">在操作完成时接收通知的委托。</span><span class="sxs-lookup"><span data-stu-id="d9472-166">The delegate that receives the notification when the operation is completed.</span></span></param>
        <param name="state"><span data-ttu-id="d9472-167">有关异步操作的状态信息。</span><span class="sxs-lookup"><span data-stu-id="d9472-167">The state information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="d9472-168">开始一个异步操作，以在持久性存储区中使用传递的参数更新实例状态信息。</span><span class="sxs-lookup"><span data-stu-id="d9472-168">Begins an asynchronous operation to update instance state information in the persistence store using the parameters passed.</span></span> <span data-ttu-id="d9472-169">此操作不会在实例存储区中对实例进行解锁。</span><span class="sxs-lookup"><span data-stu-id="d9472-169">This operation does not unlock the instance in the instance store.</span></span></summary>
        <returns><span data-ttu-id="d9472-170">异步操作的状态。</span><span class="sxs-lookup"><span data-stu-id="d9472-170">The status of an asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9472-171">此方法调入 <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate%2A> 方法，并传递 `false` 参数的值 `unlockInstance` 。</span><span class="sxs-lookup"><span data-stu-id="d9472-171">This method calls into the <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate%2A> method and passes a `false` value for the `unlockInstance` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUpdate">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginUpdate (object instance, TimeSpan timeout, bool unlockInstance, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginUpdate(object instance, valuetype System.TimeSpan timeout, bool unlockInstance, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginUpdate (instance As Object, timeout As TimeSpan, unlockInstance As Boolean, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginUpdate(System::Object ^ instance, TimeSpan timeout, bool unlockInstance, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginUpdate : obj * TimeSpan * bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="lockingPersistenceProvider.BeginUpdate (instance, timeout, unlockInstance, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="unlockInstance" Type="System.Boolean" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="d9472-172">其状态信息在持久性存储区中得到更新的实例。</span><span class="sxs-lookup"><span data-stu-id="d9472-172">The instance whose state information is being updated in the persistence store.</span></span></param>
        <param name="timeout"><span data-ttu-id="d9472-173">时间间隔，操作必须在此时间间隔内完成而不超时。</span><span class="sxs-lookup"><span data-stu-id="d9472-173">The interval in which the operation must complete without timing out.</span></span></param>
        <param name="unlockInstance"><span data-ttu-id="d9472-174">如果必须在持久性存储区中更新实例状态后锁定实例，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d9472-174"><see langword="true" /> if the instance must be locked after the instance state is updated in the persistence store; otherwise <see langword="false" />.</span></span></param>
        <param name="callback"><span data-ttu-id="d9472-175">在操作完成时接收通知的委托。</span><span class="sxs-lookup"><span data-stu-id="d9472-175">The delegate that receives the notification when the operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="d9472-176">有关异步操作的状态信息。</span><span class="sxs-lookup"><span data-stu-id="d9472-176">The state information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="d9472-177">开始一个异步操作，以在持久性存储区中使用传递的参数更新实例状态信息。</span><span class="sxs-lookup"><span data-stu-id="d9472-177">Begins an asynchronous operation to update instance state information in the persistence store using the parameters passed.</span></span> <span data-ttu-id="d9472-178">如果 <paramref name="unlockInstance" /> 参数的值为 <see langword="true" />，则此操作将在持久性存储区中锁定实例。</span><span class="sxs-lookup"><span data-stu-id="d9472-178">This operation locks the instance in the persistence store if the value of the <paramref name="unlockInstance" /> parameter is <see langword="true" />.</span></span></summary>
        <returns><span data-ttu-id="d9472-179">异步操作的状态。</span><span class="sxs-lookup"><span data-stu-id="d9472-179">The status of an asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d9472-180">在持久性存储区中创建实例状态信息。</span><span class="sxs-lookup"><span data-stu-id="d9472-180">Creates instance state information in the persistence store.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public override object Create (object instance, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Create(object instance, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Create (instance As Object, timeout As TimeSpan) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Create(System::Object ^ instance, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="override this.Create : obj * TimeSpan -&gt; obj" Usage="lockingPersistenceProvider.Create (instance, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="d9472-181">其状态信息必须保存到持久性存储区中的实例对象。</span><span class="sxs-lookup"><span data-stu-id="d9472-181">The instance object whose state information must be saved into the persistence store.</span></span></param>
        <param name="timeout"><span data-ttu-id="d9472-182">时间间隔，必须在超时前在此时间间隔内完成操作。</span><span class="sxs-lookup"><span data-stu-id="d9472-182">The interval in which the operation must complete before timing out.</span></span></param>
        <summary><span data-ttu-id="d9472-183">使用传入方法中的参数在持久性存储区中创建实例状态信息。</span><span class="sxs-lookup"><span data-stu-id="d9472-183">Creates instance state information in the persistence store using parameters passed into the method.</span></span> <span data-ttu-id="d9472-184">此方法不会在保存实例状态后在持久性存储区中对实例进行解锁。</span><span class="sxs-lookup"><span data-stu-id="d9472-184">This method does not unlock the instance in the persistence store after saving the instance state.</span></span></summary>
        <returns><span data-ttu-id="d9472-185">状态信息。</span><span class="sxs-lookup"><span data-stu-id="d9472-185">The state information.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public abstract object Create (object instance, TimeSpan timeout, bool unlockInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Create(object instance, valuetype System.TimeSpan timeout, bool unlockInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Create (instance As Object, timeout As TimeSpan, unlockInstance As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Create(System::Object ^ instance, TimeSpan timeout, bool unlockInstance);" />
      <MemberSignature Language="F#" Value="override this.Create : obj * TimeSpan * bool -&gt; obj" Usage="lockingPersistenceProvider.Create (instance, timeout, unlockInstance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="unlockInstance" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="d9472-186">其状态信息保存到持久性存储区中的实例对象。</span><span class="sxs-lookup"><span data-stu-id="d9472-186">The instance object whose state information is saved into the persistence store.</span></span></param>
        <param name="timeout"><span data-ttu-id="d9472-187">时间间隔，必须在超时前在此时间间隔内完成操作。</span><span class="sxs-lookup"><span data-stu-id="d9472-187">The interval within which the operation must complete before timing out.</span></span></param>
        <param name="unlockInstance"><span data-ttu-id="d9472-188">如果必须在持久性存储区中解锁实例，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d9472-188"><see langword="true" /> if the instance must be unlocked in the persistence store; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="d9472-189">此方法使用传入方法中的参数在持久性存储区中创建实例状态信息。</span><span class="sxs-lookup"><span data-stu-id="d9472-189">This method creates instance state information in the persistence store using parameters passed into the method.</span></span> <span data-ttu-id="d9472-190"><paramref name="unlockInstance" /> 参数的值为 <see langword="true" /> 时该方法将在实例存储区中解锁实例。</span><span class="sxs-lookup"><span data-stu-id="d9472-190">The method unlocks the instance in the instance store if the value of the <paramref name="unlockInstance" /> parameter is <see langword="true" />.</span></span></summary>
        <returns><span data-ttu-id="d9472-191">状态信息。</span><span class="sxs-lookup"><span data-stu-id="d9472-191">The state information.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndUnlock">
      <MemberSignature Language="C#" Value="public abstract void EndUnlock (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndUnlock(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndUnlock (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndUnlock(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndUnlock : IAsyncResult -&gt; unit" Usage="lockingPersistenceProvider.EndUnlock result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="d9472-192">解锁操作所返回的结果。</span><span class="sxs-lookup"><span data-stu-id="d9472-192">The result returned by the unlock operation.</span></span></param>
        <summary><span data-ttu-id="d9472-193">结束异步操作，以在持久性存储区中对实例进行解锁。</span><span class="sxs-lookup"><span data-stu-id="d9472-193">Ends the asynchronous operation to unlock an instance in the persistence store.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d9472-194">从实例存储区中加载实例状态信息。</span><span class="sxs-lookup"><span data-stu-id="d9472-194">Loads instance state information from the instance store.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public override object Load (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Load(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Load (timeout As TimeSpan) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Load(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="override this.Load : TimeSpan -&gt; obj" Usage="lockingPersistenceProvider.Load timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="d9472-195">时间段，永久性提供程序在该时间段后将中止此尝试。</span><span class="sxs-lookup"><span data-stu-id="d9472-195">The time period after which the persistence provider aborts this attempt.</span></span></param>
        <summary><span data-ttu-id="d9472-196">从持久性存储区中加载服务状态信息而不锁定实例。</span><span class="sxs-lookup"><span data-stu-id="d9472-196">Loads service state information from the persistence store without locking the instance.</span></span></summary>
        <returns><span data-ttu-id="d9472-197">服务状态信息。</span><span class="sxs-lookup"><span data-stu-id="d9472-197">The service state information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9472-198">此方法调用 <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Load%2A> 方法，并 `lockInstance` 将参数设置为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="d9472-198">This method invokes the <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Load%2A> method with `lockInstance` parameter set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public abstract object Load (TimeSpan timeout, bool lockInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Load(valuetype System.TimeSpan timeout, bool lockInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Load (timeout As TimeSpan, lockInstance As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Load(TimeSpan timeout, bool lockInstance);" />
      <MemberSignature Language="F#" Value="override this.Load : TimeSpan * bool -&gt; obj" Usage="lockingPersistenceProvider.Load (timeout, lockInstance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="lockInstance" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="d9472-199">时间段，永久性提供程序在该时间段后将中止此操作。</span><span class="sxs-lookup"><span data-stu-id="d9472-199">The period after which the persistence provider aborts this operation.</span></span></param>
        <param name="lockInstance"><span data-ttu-id="d9472-200">如果应锁定实例，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d9472-200"><see langword="true" /> if the instance should be locked; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="d9472-201">在锁定实例后从持久性存储区中加载状态信息。</span><span class="sxs-lookup"><span data-stu-id="d9472-201">Loads state information from the persistence store after locking the instance.</span></span></summary>
        <returns><span data-ttu-id="d9472-202">状态信息。</span><span class="sxs-lookup"><span data-stu-id="d9472-202">The state information.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadIfChanged">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d9472-203">在实例状态信息自上次被调用方加载后已发生更改的情况下从持久性存储区中加载此状态信息。</span><span class="sxs-lookup"><span data-stu-id="d9472-203">Loads the instance state information from the persistence store if the state information has been changed since the last time the information was loaded by the caller.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadIfChanged">
      <MemberSignature Language="C#" Value="public override bool LoadIfChanged (TimeSpan timeout, object instanceToken, out object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool LoadIfChanged(valuetype System.TimeSpan timeout, object instanceToken, [out] object&amp; instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LoadIfChanged (timeout As TimeSpan, instanceToken As Object, ByRef instance As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool LoadIfChanged(TimeSpan timeout, System::Object ^ instanceToken, [Runtime::InteropServices::Out] System::Object ^ % instance);" />
      <MemberSignature Language="F#" Value="override this.LoadIfChanged : TimeSpan * obj * obj -&gt; bool" Usage="lockingPersistenceProvider.LoadIfChanged (timeout, instanceToken, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="instanceToken" Type="System.Object" />
        <Parameter Name="instance" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="d9472-204">时间段，永久性提供程序在该时间段后将中止此操作。</span><span class="sxs-lookup"><span data-stu-id="d9472-204">The time period after which the persistence provider aborts this operation.</span></span></param>
        <param name="instanceToken"><span data-ttu-id="d9472-205">先前的 <see langword="Create" /> 或 <see langword="Update" /> 方法调用所返回的标记，表示调用方具有的当前状态。</span><span class="sxs-lookup"><span data-stu-id="d9472-205">The token returned by the previous <see langword="Create" /> or <see langword="Update" /> method calls, which represents the current state held by the caller.</span></span></param>
        <param name="instance"><span data-ttu-id="d9472-206">实际的实例状态信息。</span><span class="sxs-lookup"><span data-stu-id="d9472-206">The actual instance state information.</span></span></param>
        <summary><span data-ttu-id="d9472-207">在实例状态信息自上次被调用方加载后已发生更改的情况下从持久性存储区中加载此状态信息。</span><span class="sxs-lookup"><span data-stu-id="d9472-207">Loads the instance state information from the persistence store if the state information has been changed since the last time the information was loaded by the caller.</span></span> <span data-ttu-id="d9472-208">此方法不会在持久性存储区中锁定实例。</span><span class="sxs-lookup"><span data-stu-id="d9472-208">This method does not lock the instance in the persistence store.</span></span></summary>
        <returns><span data-ttu-id="d9472-209">如果应在此操作结束时在持久性存储区中锁定实例，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d9472-209"><see langword="true" /> if the instance should be locked in the persistence store at the end of this operation; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadIfChanged">
      <MemberSignature Language="C#" Value="public virtual bool LoadIfChanged (TimeSpan timeout, object instanceToken, bool lockInstance, out object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool LoadIfChanged(valuetype System.TimeSpan timeout, object instanceToken, bool lockInstance, [out] object&amp; instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LoadIfChanged (timeout As TimeSpan, instanceToken As Object, lockInstance As Boolean, ByRef instance As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool LoadIfChanged(TimeSpan timeout, System::Object ^ instanceToken, bool lockInstance, [Runtime::InteropServices::Out] System::Object ^ % instance);" />
      <MemberSignature Language="F#" Value="override this.LoadIfChanged : TimeSpan * obj * bool * obj -&gt; bool" Usage="lockingPersistenceProvider.LoadIfChanged (timeout, instanceToken, lockInstance, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="instanceToken" Type="System.Object" />
        <Parameter Name="lockInstance" Type="System.Boolean" />
        <Parameter Name="instance" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="d9472-210">时间段，永久性提供程序在该时间段后将中止此操作。</span><span class="sxs-lookup"><span data-stu-id="d9472-210">The time period after which the persistence provider aborts this operation.</span></span></param>
        <param name="instanceToken"><span data-ttu-id="d9472-211">先前的 Create 或 Update 方法调用所返回的标记，表示调用方具有的当前状态。</span><span class="sxs-lookup"><span data-stu-id="d9472-211">The token returned by the previous Create or Update method calls, which represents the current state held by the caller.</span></span></param>
        <param name="lockInstance"><span data-ttu-id="d9472-212">如果应在此操作结束时在持久性存储区中锁定实例，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d9472-212"><see langword="true" /> if the instance should be locked in the persistence store at the end of this operation; otherwise <see langword="false" />.</span></span></param>
        <param name="instance"><span data-ttu-id="d9472-213">实例状态信息。</span><span class="sxs-lookup"><span data-stu-id="d9472-213">The instance state information.</span></span></param>
        <summary><span data-ttu-id="d9472-214">在实例状态信息自上次被调用方加载后已发生更改的情况下从持久性存储区中加载此状态信息。</span><span class="sxs-lookup"><span data-stu-id="d9472-214">Loads the instance state information from the persistence store if the state information has been changed since the last time the information was loaded by the caller.</span></span> <span data-ttu-id="d9472-215">此方法还可让调用方指定是否在持久性存储区中锁定实例。</span><span class="sxs-lookup"><span data-stu-id="d9472-215">This method also lets the caller specify whether to lock the instance in the persistence store.</span></span></summary>
        <returns><span data-ttu-id="d9472-216">如果应在此操作结束时在持久性存储区中锁定实例，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d9472-216"><see langword="true" /> if the instance should be locked in the persistence store at the end of this operation; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public abstract void Unlock (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unlock(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Unlock (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Unlock(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Unlock : TimeSpan -&gt; unit" Usage="lockingPersistenceProvider.Unlock timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="d9472-217">时间段，永久性提供程序在该时间段后将中止此操作。</span><span class="sxs-lookup"><span data-stu-id="d9472-217">The time period after which the persistence provider aborts the operation.</span></span></param>
        <summary><span data-ttu-id="d9472-218">对其 ID 在持久性存储区中构造 <see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" /> 对象时已指定的实例进行解锁。</span><span class="sxs-lookup"><span data-stu-id="d9472-218">Unlocks the instance whose ID is specified when constructing the <see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" /> object in the persistence store.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Update">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d9472-219">在持久性存储区中更新实例状态信息。</span><span class="sxs-lookup"><span data-stu-id="d9472-219">Updates the instance state information in the persistence store.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public override object Update (object instance, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Update(object instance, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Update (instance As Object, timeout As TimeSpan) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Update(System::Object ^ instance, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="override this.Update : obj * TimeSpan -&gt; obj" Usage="lockingPersistenceProvider.Update (instance, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="d9472-220">实例状态信息。</span><span class="sxs-lookup"><span data-stu-id="d9472-220">The instance state information.</span></span></param>
        <param name="timeout"><span data-ttu-id="d9472-221">时间段，永久性提供程序在该时间段后将中止此操作。</span><span class="sxs-lookup"><span data-stu-id="d9472-221">The time period after which the persistence provider aborts the operation.</span></span></param>
        <summary><span data-ttu-id="d9472-222">在派生类中实现时，更新持久性存储区中的实例状态信息。</span><span class="sxs-lookup"><span data-stu-id="d9472-222">When implemented in a derived class, updates the instance state information in the persistence store.</span></span> <span data-ttu-id="d9472-223">此方法不会在更新持久性存储区中的实例状态信息后对实例进行解锁。</span><span class="sxs-lookup"><span data-stu-id="d9472-223">This method does not unlock the instance after updating the instance state information in the persistence store.</span></span></summary>
        <returns><span data-ttu-id="d9472-224">实例状态信息。</span><span class="sxs-lookup"><span data-stu-id="d9472-224">The instance state information.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public abstract object Update (object instance, TimeSpan timeout, bool unlockInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Update(object instance, valuetype System.TimeSpan timeout, bool unlockInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Update (instance As Object, timeout As TimeSpan, unlockInstance As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Update(System::Object ^ instance, TimeSpan timeout, bool unlockInstance);" />
      <MemberSignature Language="F#" Value="override this.Update : obj * TimeSpan * bool -&gt; obj" Usage="lockingPersistenceProvider.Update (instance, timeout, unlockInstance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="unlockInstance" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="d9472-225">实例状态信息。</span><span class="sxs-lookup"><span data-stu-id="d9472-225">The instance state information.</span></span></param>
        <param name="timeout"><span data-ttu-id="d9472-226">时间段，永久性提供程序在该时间段后将中止此操作。</span><span class="sxs-lookup"><span data-stu-id="d9472-226">The time period after which the persistence provider aborts the operation.</span></span></param>
        <param name="unlockInstance"><span data-ttu-id="d9472-227">如果在更新实例状态信息后对实例进行解锁，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d9472-227"><see langword="true" /> if the instance is unlocked after the instance state information is updated; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="d9472-228">在派生类中实现时，更新持久性存储区中的实例状态信息。</span><span class="sxs-lookup"><span data-stu-id="d9472-228">When implemented in a derived class, updates the instance state information in the persistence store.</span></span> <span data-ttu-id="d9472-229">此方法不会在更新持久性存储区中的实例状态信息后对实例进行解锁。</span><span class="sxs-lookup"><span data-stu-id="d9472-229">This method does not unlock the instance after updating the instance state information in the persistence store.</span></span></summary>
        <returns><span data-ttu-id="d9472-230">实例状态信息。</span><span class="sxs-lookup"><span data-stu-id="d9472-230">The instance state information.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
