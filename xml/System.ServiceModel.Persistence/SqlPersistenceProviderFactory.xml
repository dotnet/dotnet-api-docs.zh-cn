<Type Name="SqlPersistenceProviderFactory" FullName="System.ServiceModel.Persistence.SqlPersistenceProviderFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9c8655b02349964ee2d8ddf82d1541c7d9a3491d" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86570425" /></Metadata><TypeSignature Language="C#" Value="public class SqlPersistenceProviderFactory : System.ServiceModel.Persistence.PersistenceProviderFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlPersistenceProviderFactory extends System.ServiceModel.Persistence.PersistenceProviderFactory" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlPersistenceProviderFactory&#xA;Inherits PersistenceProviderFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlPersistenceProviderFactory : System::ServiceModel::Persistence::PersistenceProviderFactory" />
  <TypeSignature Language="F#" Value="type SqlPersistenceProviderFactory = class&#xA;    inherit PersistenceProviderFactory" />
  <AssemblyInfo>
    <AssemblyName>System.WorkflowServices</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Persistence.PersistenceProviderFactory</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5da85-101">系统提供的 <see cref="T:System.ServiceModel.Persistence.PersistenceProviderFactory" /> 实现，用于创建一个 <see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" /> 实例，该实例使用 SQL 数据库存储持久性服务状态数据。</span><span class="sxs-lookup"><span data-stu-id="5da85-101">A system-provided <see cref="T:System.ServiceModel.Persistence.PersistenceProviderFactory" /> implementation used to create a <see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" /> instance that uses a SQL database to store persisted service state data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5da85-102"><xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> 类表示功能完整的持久性服务永久性提供程序的工厂类。</span><span class="sxs-lookup"><span data-stu-id="5da85-102">The <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class represents a factory class for a fully-functional, durable service persistence provider.</span></span> <span data-ttu-id="5da85-103">您可以使用此系统提供的提供程序来持久保存和检索有关持久 WCF 服务的状态信息。</span><span class="sxs-lookup"><span data-stu-id="5da85-103">You can use this system-provided provider to persist and retrieve state information about a durable WCF service.</span></span>  
  
 <span data-ttu-id="5da85-104">除了持久性以外，<xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> 类创建的提供程序还可以通过从 <xref:System.ServiceModel.Persistence.LockingPersistenceProvider> 抽象类继承来实现服务状态数据记录的锁定。</span><span class="sxs-lookup"><span data-stu-id="5da85-104">In addition to persistence, the provider created by the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class implements locking of service state data records by inheriting from the abstract <xref:System.ServiceModel.Persistence.LockingPersistenceProvider> class.</span></span>  <span data-ttu-id="5da85-105">与持久化数据 (（例如或) ）进行交互的方法 <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Create%2A> <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Update%2A> 具有一个可选参数 `lockInstance` ， () 定义是否释放或维护相关数据的锁定。</span><span class="sxs-lookup"><span data-stu-id="5da85-105">Methods that interact with persisted data (such as <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Create%2A> or <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Update%2A>) have an optional parameter (`lockInstance`) that defines whether locks on the data in question are released or maintained.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5da85-106">默认情况下，由 <xref:System.ServiceModel.Persistence.PersistenceException> 引发的 <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> 异常不隐藏其异常详细信息。</span><span class="sxs-lookup"><span data-stu-id="5da85-106"><xref:System.ServiceModel.Persistence.PersistenceException> exceptions thrown by <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> do not have their exception details hidden by default.</span></span> <span data-ttu-id="5da85-107">若要防止安全漏洞，可以通过将设置为来隐藏这些详细信息 <xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults%2A> `false` 。</span><span class="sxs-lookup"><span data-stu-id="5da85-107">To protect against security vulnerabilities, these details can be hidden by setting <xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults%2A> to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5da85-108">SQL 永久性提供程序存储和检索 SQL Server 数据库中的数据。</span><span class="sxs-lookup"><span data-stu-id="5da85-108">The SQL Persistence Provider stores and retrieves data from a SQL Server database.</span></span> <span data-ttu-id="5da85-109">主机必须创建一个安全的 SQL Server 环境以防止攻击者在数据库中或在应用程序和数据库之间的网络上获取对实例状态的读/写访问权限。</span><span class="sxs-lookup"><span data-stu-id="5da85-109">The host must create a secure SQL Server environment to protect against attackers gaining read/write access to the instance state either in the database or on the wire between the application and the database.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5da85-110">初始化 <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="5da85-110">Initializes a new instance of the <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5da85-111"><xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> 类的构造函数的重载提供用于设置以下各项的参数：</span><span class="sxs-lookup"><span data-stu-id="5da85-111">Overloads of the constructor for the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class provide parameters for setting the following:</span></span>  
  
-   <span data-ttu-id="5da85-112">用于访问 SQL 数据库的连接字符串。</span><span class="sxs-lookup"><span data-stu-id="5da85-112">The connection string used for accessing the SQL database.</span></span>  
  
-   <span data-ttu-id="5da85-113">用于定义锁定所有权持续时间的锁定超时。</span><span class="sxs-lookup"><span data-stu-id="5da85-113">The lock time-out used for defining lock ownership duration.</span></span>  
  
-   <span data-ttu-id="5da85-114">持久性数据是序列化为 XML 还是二进制数据。</span><span class="sxs-lookup"><span data-stu-id="5da85-114">Whether the persistence data is serialized as XML or binary data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlPersistenceProviderFactory (System.Collections.Specialized.NameValueCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Specialized.NameValueCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameters As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlPersistenceProviderFactory(System::Collections::Specialized::NameValueCollection ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Persistence.SqlPersistenceProviderFactory : System.Collections.Specialized.NameValueCollection -&gt; System.ServiceModel.Persistence.SqlPersistenceProviderFactory" Usage="new System.ServiceModel.Persistence.SqlPersistenceProviderFactory parameters" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameters" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="5da85-115">由新的永久性提供程序工厂所使用的参数集合。</span><span class="sxs-lookup"><span data-stu-id="5da85-115">The collection of parameters used by the new persistence provider factory.</span></span> <span data-ttu-id="5da85-116">有效参数包括 <see langword="lockTimeout" />、<see langword="connectionStringName" /> 和 <see langword="serializeAsText" />。</span><span class="sxs-lookup"><span data-stu-id="5da85-116">Valid parameters include <see langword="lockTimeout" />, <see langword="connectionStringName" />, and <see langword="serializeAsText" />.</span></span></param>
        <summary><span data-ttu-id="5da85-117">初始化 <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /> 类的新实例，使用指定的参数集合进行配置。</span><span class="sxs-lookup"><span data-stu-id="5da85-117">Initializes a new instance of the <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /> class, configured with the specified parameter collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5da85-118">使用此构造函数可以任意指定 `lockTimeout`、`connectionString` 和 `serializeAsText`，无需指定其他构造函数所需的其他参数（例如，指定 `connectionString` 和 `lockTimeout` 参数而无需指定 `serializeAsText` 参数）。</span><span class="sxs-lookup"><span data-stu-id="5da85-118">This constructor can be used to arbitrarily specify `lockTimeout`, `connectionString`, and `serializeAsText` without specifying the other parameters as required by the other constructors (for example, to specify the `connectionString` and `lockTimeout` parameters without specifying the `serializeAsText` parameter.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5da85-119">下面的代码示例演示如何使用参数集合创建 <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="5da85-119">The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class using a parameters collection.</span></span>  
  
 [!code-csharp[SqlPersistenceProviderFactory#3](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlPersistenceProviderFactory (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlPersistenceProviderFactory(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Persistence.SqlPersistenceProviderFactory : string -&gt; System.ServiceModel.Persistence.SqlPersistenceProviderFactory" Usage="new System.ServiceModel.Persistence.SqlPersistenceProviderFactory connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString"><span data-ttu-id="5da85-120">新的永久性提供程序实例的连接参数。</span><span class="sxs-lookup"><span data-stu-id="5da85-120">The connection parameters for the new persistence provider instance.</span></span></param>
        <summary><span data-ttu-id="5da85-121">初始化 <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /> 类的新实例，使用指定的连接字符串进行配置。</span><span class="sxs-lookup"><span data-stu-id="5da85-121">Initializes a new instance of the <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /> class, configured with the specified connection string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5da85-122">下面的代码示例演示如何使用连接字符串创建 <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="5da85-122">The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class using a connection string.</span></span>  
  
 [!code-csharp[SqlPersistenceProviderFactory#2](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlPersistenceProviderFactory (string connectionString, bool serializeAsText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, bool serializeAsText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, serializeAsText As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlPersistenceProviderFactory(System::String ^ connectionString, bool serializeAsText);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Persistence.SqlPersistenceProviderFactory : string * bool -&gt; System.ServiceModel.Persistence.SqlPersistenceProviderFactory" Usage="new System.ServiceModel.Persistence.SqlPersistenceProviderFactory (connectionString, serializeAsText)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="serializeAsText" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="connectionString"><span data-ttu-id="5da85-123">新的永久性提供程序实例的连接参数。</span><span class="sxs-lookup"><span data-stu-id="5da85-123">The connection parameters for the new persistence provider instance.</span></span></param>
        <param name="serializeAsText"><span data-ttu-id="5da85-124">指定是否将数据序列化为文本而不是二进制数据。</span><span class="sxs-lookup"><span data-stu-id="5da85-124">Specifies whether data is serialized as text rather than binary.</span></span></param>
        <summary><span data-ttu-id="5da85-125">初始化 <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /> 类的新实例，使用指定的连接字符串和 <see langword="serializeAsText" /> 参数进行配置。</span><span class="sxs-lookup"><span data-stu-id="5da85-125">Initializes a new instance of the <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /> class, configured with the specified connection string and <see langword="serializeAsText" /> parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5da85-126">的默认值 `serializeAsText` 为 `false` ，该值指示持久性信息序列化为二进制数据。</span><span class="sxs-lookup"><span data-stu-id="5da85-126">The default value for `serializeAsText` is `false`, which indicates that persistence information is serialized as binary data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5da85-127">下面的代码示例演示如何创建 <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="5da85-127">The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class.</span></span>  
  
 [!code-csharp[SqlPersistenceProviderFactory#1](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlPersistenceProviderFactory (string connectionString, bool serializeAsText, TimeSpan lockTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, bool serializeAsText, valuetype System.TimeSpan lockTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, serializeAsText As Boolean, lockTimeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlPersistenceProviderFactory(System::String ^ connectionString, bool serializeAsText, TimeSpan lockTimeout);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Persistence.SqlPersistenceProviderFactory : string * bool * TimeSpan -&gt; System.ServiceModel.Persistence.SqlPersistenceProviderFactory" Usage="new System.ServiceModel.Persistence.SqlPersistenceProviderFactory (connectionString, serializeAsText, lockTimeout)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="serializeAsText" Type="System.Boolean" />
        <Parameter Name="lockTimeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="connectionString"><span data-ttu-id="5da85-128">新的永久性提供程序工厂实例的连接参数。</span><span class="sxs-lookup"><span data-stu-id="5da85-128">The connection parameters for the new persistence provider factory instance.</span></span></param>
        <param name="serializeAsText"><span data-ttu-id="5da85-129">指定是否将数据序列化为文本而不是二进制数据。</span><span class="sxs-lookup"><span data-stu-id="5da85-129">Specifies whether data is serialized as text rather than binary.</span></span></param>
        <param name="lockTimeout"><span data-ttu-id="5da85-130">锁定所有权的超时。</span><span class="sxs-lookup"><span data-stu-id="5da85-130">The time-out for lock ownership.</span></span> <span data-ttu-id="5da85-131">锁定的实例将在此时间段后自动解锁。</span><span class="sxs-lookup"><span data-stu-id="5da85-131">Locked instances are automatically unlocked after this time period.</span></span> <span data-ttu-id="5da85-132">超时值 <see langword="TimeSpan.Zero" /> 指明没有使用锁定。</span><span class="sxs-lookup"><span data-stu-id="5da85-132">A time-out of <see langword="TimeSpan.Zero" /> specifies that no locking is used.</span></span></param>
        <summary><span data-ttu-id="5da85-133">初始化 <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /> 类的新实例，使用指定的连接字符串、<see langword="serializeAsText" /> 和 <see langword="lockTimeout" /> 参数进行配置。</span><span class="sxs-lookup"><span data-stu-id="5da85-133">Initializes a new instance of the <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /> class, configured with the specified connection string, <see langword="serializeAsText" />, and <see langword="lockTimeout" /> parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5da85-134">的默认值 `serializeAsText` 为 `false` ，该值指示持久性信息序列化为二进制数据。</span><span class="sxs-lookup"><span data-stu-id="5da85-134">The default value for `serializeAsText` is `false`, which indicates that persistence information is serialized as binary data.</span></span>  
  
 <span data-ttu-id="5da85-135">的默认值 `lockTimeout` 为 `TimeSpan.Zero` ，指示不使用锁定。</span><span class="sxs-lookup"><span data-stu-id="5da85-135">The default value for `lockTimeout` is `TimeSpan.Zero`, which indicates that locking is not used.</span></span> <span data-ttu-id="5da85-136">如果 `TimeSpan.MaxValue` 使用，则将无限期维护锁。</span><span class="sxs-lookup"><span data-stu-id="5da85-136">If `TimeSpan.MaxValue` is used, then locks are maintained indefinitely.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5da85-137">下面的代码示例演示如何创建 <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="5da85-137">The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class.</span></span>  
  
 [!code-csharp[SqlPersistenceProviderFactory#0](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionString : string with get, set" Usage="System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5da85-138">获取使用此工厂创建的持久性提供程序实例的连接参数。</span><span class="sxs-lookup"><span data-stu-id="5da85-138">Gets the connection parameters for persistence provider instances created with this factory.</span></span></summary>
        <value><span data-ttu-id="5da85-139">使用此工厂创建的持久性提供程序实例的连接参数。</span><span class="sxs-lookup"><span data-stu-id="5da85-139">The connection parameters for persistence provider instances created with this factory.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5da85-140">下面的代码示例演示如何设置和访问 `ConnectionString` 属性。</span><span class="sxs-lookup"><span data-stu-id="5da85-140">The following code example shows how to set and access the `ConnectionString` property.</span></span>  
  
 [!code-csharp[SqlPersistenceProviderFactory#4](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProvider">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Persistence.PersistenceProvider CreateProvider (Guid id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Persistence.PersistenceProvider CreateProvider(valuetype System.Guid id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateProvider (id As Guid) As PersistenceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Persistence::PersistenceProvider ^ CreateProvider(Guid id);" />
      <MemberSignature Language="F#" Value="override this.CreateProvider : Guid -&gt; System.ServiceModel.Persistence.PersistenceProvider" Usage="sqlPersistenceProviderFactory.CreateProvider id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Persistence.PersistenceProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="5da85-141">要创建的永久性提供程序的唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="5da85-141">The unique identifier of the persistence provider being created.</span></span></param>
        <summary><span data-ttu-id="5da85-142">初始化一个新 <see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" /> 实例，该实例使用 SQL 数据库作为其持久性存储区。</span><span class="sxs-lookup"><span data-stu-id="5da85-142">Initializes a new <see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" /> instance that uses a SQL database as its persistence store.</span></span></summary>
        <returns><span data-ttu-id="5da85-143">一个新创建的 <see cref="T:System.ServiceModel.Persistence.PersistenceProvider" />。</span><span class="sxs-lookup"><span data-stu-id="5da85-143">A newly-created <see cref="T:System.ServiceModel.Persistence.PersistenceProvider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5da85-144">初始化的永久性提供程序将使用创建工厂的当前参数（<xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString%2A>、<xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout%2A> 和 <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText%2A>），即使在创建永久性提供程序后工厂的参数已发生更改。</span><span class="sxs-lookup"><span data-stu-id="5da85-144">The initialized persistence provider uses the current parameters of the creating factory (<xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString%2A>, <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout%2A>, and <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText%2A>), even if the factory's parameters are changed after the persistence provider is created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5da85-145">下面的代码示例演示如何执行 `CreateProvider` 方法。</span><span class="sxs-lookup"><span data-stu-id="5da85-145">The following code example shows how to execute the `CreateProvider` method.</span></span> <span data-ttu-id="5da85-146">请注意，生成的提供程序可以作为 <xref:System.ServiceModel.Persistence.LockingPersistenceProvider> 实例进行访问。</span><span class="sxs-lookup"><span data-stu-id="5da85-146">Note that the resulting provider is accessed as a <xref:System.ServiceModel.Persistence.LockingPersistenceProvider> instance.</span></span>  
  
 [!code-csharp[SqlPersistenceProviderFactory#7](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCloseTimeout">
      <MemberSignature Language="C#" Value="protected override TimeSpan DefaultCloseTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultCloseTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultCloseTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property TimeSpan DefaultCloseTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCloseTimeout : TimeSpan" Usage="System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5da85-147">获取使用此工厂创建的永久性提供程序关闭时所用的默认超时值。</span><span class="sxs-lookup"><span data-stu-id="5da85-147">Gets the default time-out value used when persistence providers created with this factory are closed.</span></span></summary>
        <value><span data-ttu-id="5da85-148">默认超时值。</span><span class="sxs-lookup"><span data-stu-id="5da85-148">The default time-out value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5da85-149">关闭超时的默认值为 15 秒。</span><span class="sxs-lookup"><span data-stu-id="5da85-149">The default value for close time-out is 15 seconds.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultOpenTimeout">
      <MemberSignature Language="C#" Value="protected override TimeSpan DefaultOpenTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultOpenTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultOpenTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property TimeSpan DefaultOpenTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultOpenTimeout : TimeSpan" Usage="System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5da85-150">获取永久性提供程序打开时所用的默认超时值。</span><span class="sxs-lookup"><span data-stu-id="5da85-150">Gets the default time-out value used when persistence provider is opened.</span></span></summary>
        <value><span data-ttu-id="5da85-151">默认超时值。</span><span class="sxs-lookup"><span data-stu-id="5da85-151">The default time-out value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5da85-152">打开超时的默认值为 15 秒。</span><span class="sxs-lookup"><span data-stu-id="5da85-152">The default value for open time-out is 15 seconds.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LockTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan LockTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan LockTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property LockTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan LockTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.LockTimeout : TimeSpan with get, set" Usage="System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5da85-153">由此实例创建的永久性提供程序实例所使用的锁定所有权的超时。</span><span class="sxs-lookup"><span data-stu-id="5da85-153">The time-out for lock ownership used by persistence provider instances created by this instance.</span></span> <span data-ttu-id="5da85-154">锁定的实例将在此时间段后自动解锁。</span><span class="sxs-lookup"><span data-stu-id="5da85-154">Locked instances are automatically unlocked after this time period.</span></span></summary>
        <value><span data-ttu-id="5da85-155">锁定所有权的超时值。</span><span class="sxs-lookup"><span data-stu-id="5da85-155">The time-out value for lock ownership.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5da85-156">超时值 `TimeSpan.Zero` 指明没有使用锁定。</span><span class="sxs-lookup"><span data-stu-id="5da85-156">A time-out of `TimeSpan.Zero` specifies that no locking is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5da85-157">下面的代码示例演示如何访问 `LockTimeout` 属性。</span><span class="sxs-lookup"><span data-stu-id="5da85-157">The following code example shows how to access the `LockTimeout` property.</span></span>  
  
 [!code-csharp[SqlPersistenceProviderFactory#5](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAbort">
      <MemberSignature Language="C#" Value="protected override void OnAbort ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAbort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnAbort ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnAbort();" />
      <MemberSignature Language="F#" Value="override this.OnAbort : unit -&gt; unit" Usage="sqlPersistenceProviderFactory.OnAbort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5da85-158">表示“中止”阶段。</span><span class="sxs-lookup"><span data-stu-id="5da85-158">Represents the Abort phase.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5da85-159">`OnAbort` 服务主机突然关闭并关闭当前正在处理的活动命令时激发。</span><span class="sxs-lookup"><span data-stu-id="5da85-159">`OnAbort` fires when the service host shuts down abruptly and active commands currently being processed are closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginClose">
      <MemberSignature Language="C#" Value="protected override IAsyncResult OnBeginClose (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.IAsyncResult OnBeginClose(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBeginClose (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override IAsyncResult ^ OnBeginClose(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.OnBeginClose : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="sqlPersistenceProviderFactory.OnBeginClose (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="5da85-160">时间段，永久性提供程序在该时间段后将中止此尝试。</span><span class="sxs-lookup"><span data-stu-id="5da85-160">The time period after which the persistence provider aborts this attempt.</span></span></param>
        <param name="callback"><span data-ttu-id="5da85-161">操作完成时将要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="5da85-161">The method to be called when the operation is completed.</span></span></param>
        <param name="state"><span data-ttu-id="5da85-162">一个用户提供的对象，该对象用于将此特定异步操作与其他操作区别开来。</span><span class="sxs-lookup"><span data-stu-id="5da85-162">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span></span></param>
        <summary><span data-ttu-id="5da85-163">表示“关闭”阶段开始。</span><span class="sxs-lookup"><span data-stu-id="5da85-163">Represents the beginning of the Close phase.</span></span></summary>
        <returns><span data-ttu-id="5da85-164"><see cref="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> 异步方法调用的状态。</span><span class="sxs-lookup"><span data-stu-id="5da85-164">The state of the <see cref="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> asynchronous method call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5da85-165">关闭服务时将进入“关闭”阶段。</span><span class="sxs-lookup"><span data-stu-id="5da85-165">The Close phase occurs when the service is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginOpen">
      <MemberSignature Language="C#" Value="protected override IAsyncResult OnBeginOpen (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.IAsyncResult OnBeginOpen(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBeginOpen (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override IAsyncResult ^ OnBeginOpen(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.OnBeginOpen : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="sqlPersistenceProviderFactory.OnBeginOpen (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="5da85-166">时间段，永久性提供程序在该时间段后将中止此尝试。</span><span class="sxs-lookup"><span data-stu-id="5da85-166">The time period after which the persistence provider aborts this attempt.</span></span></param>
        <param name="callback"><span data-ttu-id="5da85-167">操作完成时将要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="5da85-167">The method to be called when the operation is completed.</span></span></param>
        <param name="state"><span data-ttu-id="5da85-168">一个用户提供的对象，该对象用于将此特定异步操作与其他操作区别开来。</span><span class="sxs-lookup"><span data-stu-id="5da85-168">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span></span></param>
        <summary><span data-ttu-id="5da85-169">表示“打开”阶段开始。</span><span class="sxs-lookup"><span data-stu-id="5da85-169">Represents the beginning of the Open phase.</span></span></summary>
        <returns><span data-ttu-id="5da85-170"><see cref="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" /> 异步方法调用的状态。</span><span class="sxs-lookup"><span data-stu-id="5da85-170">The state of the <see cref="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" /> asynchronous method call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5da85-171">打开服务时将进入“打开”阶段。</span><span class="sxs-lookup"><span data-stu-id="5da85-171">The Open phase occurs when the service is opened.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClose">
      <MemberSignature Language="C#" Value="protected override void OnClose (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClose(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClose (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClose(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="override this.OnClose : TimeSpan -&gt; unit" Usage="sqlPersistenceProviderFactory.OnClose timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="5da85-172">时间段，永久性提供程序在该时间段后将中止此尝试。</span><span class="sxs-lookup"><span data-stu-id="5da85-172">The time period after which the persistence provider aborts this attempt.</span></span></param>
        <summary><span data-ttu-id="5da85-173">表示“关闭”阶段。</span><span class="sxs-lookup"><span data-stu-id="5da85-173">Represents the Close phase.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5da85-174">关闭服务时将进入“关闭”阶段。</span><span class="sxs-lookup"><span data-stu-id="5da85-174">The Close phase occurs when the service is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndClose">
      <MemberSignature Language="C#" Value="protected override void OnEndClose (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEndClose(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEndClose (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEndClose(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="override this.OnEndClose : IAsyncResult -&gt; unit" Usage="sqlPersistenceProviderFactory.OnEndClose result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="5da85-175">对操作结果的引用。</span><span class="sxs-lookup"><span data-stu-id="5da85-175">A reference to the result of the operation.</span></span></param>
        <summary><span data-ttu-id="5da85-176">表示“关闭”阶段结束。</span><span class="sxs-lookup"><span data-stu-id="5da85-176">Represents the end of the Close phase.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5da85-177">关闭服务时将进入“关闭”阶段。</span><span class="sxs-lookup"><span data-stu-id="5da85-177">The Close phase occurs when the service is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndOpen">
      <MemberSignature Language="C#" Value="protected override void OnEndOpen (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEndOpen(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEndOpen (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEndOpen(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="override this.OnEndOpen : IAsyncResult -&gt; unit" Usage="sqlPersistenceProviderFactory.OnEndOpen result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="5da85-178">对操作结果的引用。</span><span class="sxs-lookup"><span data-stu-id="5da85-178">A reference to the result of the operation.</span></span></param>
        <summary><span data-ttu-id="5da85-179">表示“打开”阶段结束。</span><span class="sxs-lookup"><span data-stu-id="5da85-179">Represents the end of the Open phase.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5da85-180">打开服务时将进入“打开”阶段。</span><span class="sxs-lookup"><span data-stu-id="5da85-180">The Open phase occurs when the service is opened.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnOpen">
      <MemberSignature Language="C#" Value="protected override void OnOpen (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnOpen(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnOpen (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnOpen(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="override this.OnOpen : TimeSpan -&gt; unit" Usage="sqlPersistenceProviderFactory.OnOpen timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="5da85-181">时间段，永久性提供程序在该时间段后将中止此尝试。</span><span class="sxs-lookup"><span data-stu-id="5da85-181">The time period after which the persistence provider aborts this attempt.</span></span></param>
        <summary><span data-ttu-id="5da85-182">表示“打开”阶段。</span><span class="sxs-lookup"><span data-stu-id="5da85-182">Represents the Open phase.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5da85-183">打开服务时将进入“打开”阶段。</span><span class="sxs-lookup"><span data-stu-id="5da85-183">The Open phase occurs when the service is opened.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeAsText">
      <MemberSignature Language="C#" Value="public bool SerializeAsText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SerializeAsText" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText" />
      <MemberSignature Language="VB.NET" Value="Public Property SerializeAsText As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SerializeAsText { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SerializeAsText : bool with get, set" Usage="System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5da85-184">指定使用此工厂创建的永久性提供程序中数据是否序列化为文本而不是二进制数据。</span><span class="sxs-lookup"><span data-stu-id="5da85-184">Specifies whether data is serialized as text rather than binary in persistence providers created with this factory.</span></span></summary>
        <value><span data-ttu-id="5da85-185">如果将服务信息序列化为文本，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5da85-185"><see langword="true" /> if the service information is serialized as text; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5da85-186">的默认值 `serializeAsText` 为 `false` ，该值指示持久性信息序列化为二进制数据。</span><span class="sxs-lookup"><span data-stu-id="5da85-186">The default value for `serializeAsText` is `false`, which indicates that persistence information is serialized as binary data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5da85-187">下面的代码示例演示如何访问 `SerializeAsText` 属性。</span><span class="sxs-lookup"><span data-stu-id="5da85-187">The following code example shows how to access the `SerializeAsText` property.</span></span>  
  
 [!code-csharp[SqlPersistenceProviderFactory#6](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
