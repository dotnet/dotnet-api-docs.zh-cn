<Type Name="NotNullIfNotNullAttribute" FullName="System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7434872ead86a277c4ac1600563730e116ee29a1" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89788297" /></Metadata><TypeSignature Language="C#" Value="public sealed class NotNullIfNotNullAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NotNullIfNotNullAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NotNullIfNotNullAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class NotNullIfNotNullAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type NotNullIfNotNullAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netstandard-2.1">
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=true, Inherited=false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=true, Inherited=false)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指定如果命名参数为非 null，则输出也为非 null。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NotNullIfNotNullAttribute (string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NotNullIfNotNullAttribute(System::String ^ parameterName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute : string -&gt; System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute" Usage="new System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute parameterName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">关联的参数名。  指定指定形参的实参为非 null，则输出也为非 null。</param>
        <summary>使用关联的参数名初始化属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterName">
      <MemberSignature Language="C#" Value="public string ParameterName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.ParameterName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ParameterName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParameterName : string" Usage="System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.ParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取关联的参数名。</summary>
        <value>关联的参数名。 指定指定形参的实参为非 null，则输出也为非 null。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
