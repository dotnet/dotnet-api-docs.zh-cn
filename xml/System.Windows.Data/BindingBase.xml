<Type Name="BindingBase" FullName="System.Windows.Data.BindingBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f9cc8d2b085482bf5cfd850456648f17769ba02e" /><Meta Name="ms.sourcegitcommit" Value="9f423345753728e8cad38d4a22663a109e69ea91" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/04/2021" /><Meta Name="ms.locfileid" Value="102064716" /></Metadata><TypeSignature Language="C#" Value="public abstract class BindingBase : System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BindingBase extends System.Windows.Markup.MarkupExtension" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BindingBase&#xA;Inherits MarkupExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingBase abstract : System::Windows::Markup::MarkupExtension" />
  <TypeSignature Language="F#" Value="type BindingBase = class&#xA;    inherit MarkupExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract BindingBase extends System.Windows.Markup.MarkupExtension" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Markup.MarkupExtension</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Windows.Localizability(System.Windows.LocalizationCategory.None, Modifiability=System.Windows.Modifiability.Unmodifiable, Readability=System.Windows.Readability.Unreadable)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Windows.Localizability(System.Windows.LocalizationCategory.None, Modifiability=System.Windows.Modifiability.Unmodifiable, Readability=System.Windows.Readability.Unreadable)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Windows.Markup.MarkupExtensionReturnType(typeof(System.Object))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Windows.Markup.MarkupExtensionReturnType(typeof(System.Object))&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c9c41-101">定义 <see cref="T:System.Windows.Data.Binding" />、<see cref="T:System.Windows.Data.PriorityBinding" /> 和 <see cref="T:System.Windows.Data.MultiBinding" /> 类的公共特性。</span><span class="sxs-lookup"><span data-stu-id="c9c41-101">Defines the common characteristics of the <see cref="T:System.Windows.Data.Binding" />, <see cref="T:System.Windows.Data.PriorityBinding" />, and <see cref="T:System.Windows.Data.MultiBinding" /> classes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9c41-102">由于 <xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType> 方法是密封的，因此从派生的自定义绑定类 <xref:System.Windows.Data.BindingBase> 将不能作为 EXTENSIBLE APPLICATION MARKUP LANGUAGE (XAML) 标记扩展。</span><span class="sxs-lookup"><span data-stu-id="c9c41-102">Because the <xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType> method is sealed, a custom binding class that derives from <xref:System.Windows.Data.BindingBase> will not function correctly as a Extensible Application Markup Language (XAML) markup extension.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BindingGroupName">
      <MemberSignature Language="C#" Value="public string BindingGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BindingGroupName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.BindingGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Property BindingGroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BindingGroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BindingGroupName : string with get, set" Usage="System.Windows.Data.BindingBase.BindingGroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9c41-103">获取或设置此绑定所属的 <see cref="T:System.Windows.Data.BindingGroup" /> 的名称。</span><span class="sxs-lookup"><span data-stu-id="c9c41-103">Gets or sets the name of the <see cref="T:System.Windows.Data.BindingGroup" /> to which this binding belongs.</span></span></summary>
        <value><span data-ttu-id="c9c41-104">此绑定所属的 <see cref="T:System.Windows.Data.BindingGroup" /> 的名称。</span><span class="sxs-lookup"><span data-stu-id="c9c41-104">The name of the <see cref="T:System.Windows.Data.BindingGroup" /> to which this binding belongs.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9c41-105">如果 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 未设置，则 <xref:System.Windows.Data.BindingGroup> 仅当绑定的源和 <xref:System.Windows.FrameworkElement.DataContext%2A> 具有相同对象的父元素的时，绑定才属于 <xref:System.Windows.Data.BindingGroup> 。</span><span class="sxs-lookup"><span data-stu-id="c9c41-105">If <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> is not set, the binding belongs to a <xref:System.Windows.Data.BindingGroup> only if the binding's source and the <xref:System.Windows.FrameworkElement.DataContext%2A> of the parent element that has the <xref:System.Windows.Data.BindingGroup> are the same object.</span></span>  
  
 <span data-ttu-id="c9c41-106">如果将 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 设置为一个值，则 <xref:System.Windows.Data.BindingGroup> 如果满足以下条件，则绑定所属：</span><span class="sxs-lookup"><span data-stu-id="c9c41-106">If <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> is set to a value, the binding belongs to a <xref:System.Windows.Data.BindingGroup> if the following conditions are true:</span></span>  
  
-   <span data-ttu-id="c9c41-107"><xref:System.Windows.Data.BindingGroup.Name%2A> <xref:System.Windows.Data.BindingGroup> 和的 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 相等。</span><span class="sxs-lookup"><span data-stu-id="c9c41-107">The <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> are equal.</span></span>  
  
-   <span data-ttu-id="c9c41-108"><xref:System.Windows.Data.BindingGroup>属于绑定的目标元素的父元素。</span><span class="sxs-lookup"><span data-stu-id="c9c41-108">The <xref:System.Windows.Data.BindingGroup> belongs to a parent element of the binding's target element.</span></span>  
  
 <span data-ttu-id="c9c41-109">如果 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 设置为 `null` ，则绑定永远不是的一部分 <xref:System.Windows.Data.BindingGroup> 。</span><span class="sxs-lookup"><span data-stu-id="c9c41-109">If <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> is set to `null`, the binding is never a part of a <xref:System.Windows.Data.BindingGroup>.</span></span>  
  
 <span data-ttu-id="c9c41-110">可以包含与父元素的源不同的绑定，该 <xref:System.Windows.FrameworkElement.DataContext%2A> 父元素的 <xref:System.Windows.Data.BindingGroup> 设置为 <xref:System.Windows.Data.BindingGroup.Name%2A> <xref:System.Windows.Data.BindingGroup> ，并将 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 绑定的属性设置为相同的值。</span><span class="sxs-lookup"><span data-stu-id="c9c41-110">You can include bindings that have a source that is different from the <xref:System.Windows.FrameworkElement.DataContext%2A> of the parent element that has the <xref:System.Windows.Data.BindingGroup> by setting <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of a binding to the same value.</span></span>  <span data-ttu-id="c9c41-111">您可以排除与父元素具有相同源的绑定， <xref:System.Windows.FrameworkElement.DataContext%2A> 该父元素的 <xref:System.Windows.Data.BindingGroup> 设置为 <xref:System.Windows.Data.BindingGroup.Name%2A> <xref:System.Windows.Data.BindingGroup> ，并将绑定的 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 属性设置为不同的值。</span><span class="sxs-lookup"><span data-stu-id="c9c41-111">You can exclude bindings that have the same source as <xref:System.Windows.FrameworkElement.DataContext%2A> of the parent element that has the <xref:System.Windows.Data.BindingGroup> by setting <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of a binding to different values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9c41-112">以下示例是应用程序的一部分，用于检查用户是否已将两个对象的属性设置为相等值。</span><span class="sxs-lookup"><span data-stu-id="c9c41-112">The following examples are part of an application that checks whether the user has set the properties of two objects to equal values.</span></span> <span data-ttu-id="c9c41-113">第一个示例创建两个 <xref:System.Windows.Controls.TextBox> 控件，其中每个控件都绑定到不同的数据源：第一个的绑定 <xref:System.Windows.Controls.TextBox> 是的一部分， <xref:System.Windows.Data.BindingGroup> 因为 <xref:System.Windows.Controls.TextBox> <xref:System.Windows.FrameworkElement.DataContext%2A> <xref:System.Windows.Data.BindingGroup> 从其父项继承和 <xref:System.Windows.Controls.StackPanel></span><span class="sxs-lookup"><span data-stu-id="c9c41-113">The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which is data bound to a different source: The binding of the first <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Controls.TextBox> inherits the <xref:System.Windows.FrameworkElement.DataContext%2A> and <xref:System.Windows.Data.BindingGroup> from its parent <xref:System.Windows.Controls.StackPanel></span></span>  
  
 <span data-ttu-id="c9c41-114">第二个的绑定 <xref:System.Windows.Controls.TextBox> 是的一部分，原因是的和的均 <xref:System.Windows.Data.BindingGroup> <xref:System.Windows.Data.BindingGroup.Name%2A> <xref:System.Windows.Data.BindingGroup> <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> <xref:System.Windows.Data.Binding> 设置为 `bindingGroup` 。</span><span class="sxs-lookup"><span data-stu-id="c9c41-114">The binding on the second <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> of the <xref:System.Windows.Data.Binding> are both set to `bindingGroup`.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xaml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 <span data-ttu-id="c9c41-115">下面的示例演示 <xref:System.Windows.Controls.ValidationRule> 前面的示例使用的。</span><span class="sxs-lookup"><span data-stu-id="c9c41-115">The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses.</span></span>  <span data-ttu-id="c9c41-116">在 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 方法中，该示例从获取每个源对象 <xref:System.Windows.Data.BindingGroup> ，并检查对象的属性是否相等。</span><span class="sxs-lookup"><span data-stu-id="c9c41-116">In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delay">
      <MemberSignature Language="C#" Value="public int Delay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Delay" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.Delay" />
      <MemberSignature Language="VB.NET" Value="Public Property Delay As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Delay { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Delay : int with get, set" Usage="System.Windows.Data.BindingBase.Delay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9c41-117">获取或设置更新位于目标更改上的值之后的绑定源前要等待的时间（毫秒）。</span><span class="sxs-lookup"><span data-stu-id="c9c41-117">Gets or sets the amount of time, in milliseconds, to wait before updating the binding source after the value on the target changes.</span></span></summary>
        <value><span data-ttu-id="c9c41-118">在更新绑定资源之前要等待的时间（以毫秒为单位）。</span><span class="sxs-lookup"><span data-stu-id="c9c41-118">The amount of time, in milliseconds, to wait before updating the binding source.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9c41-119">如果在目标上属性的值发生更改时使用绑定来更新绑定源，则将 <xref:System.Windows.Data.Binding.Mode%2A> 属性设置为，并将设置为 <xref:System.Windows.Data.BindingMode.TwoWay> <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged> 。</span><span class="sxs-lookup"><span data-stu-id="c9c41-119">When you use a binding to update the binding source whenever the value of the property changes on the target, you set the <xref:System.Windows.Data.Binding.Mode%2A> property to <xref:System.Windows.Data.BindingMode.TwoWay> and the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> to <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>.</span></span>  <span data-ttu-id="c9c41-120">在这种情况下，你可以使用 <xref:System.Windows.Data.BindingBase.Delay%2A> 属性来指定是否应在更改目标和更新源之间进行时间延迟。</span><span class="sxs-lookup"><span data-stu-id="c9c41-120">In this situation, you can use the <xref:System.Windows.Data.BindingBase.Delay%2A> property to specify whether there should be a time delay between when the target is changed and when the source is updated.</span></span>  <span data-ttu-id="c9c41-121">当你希望允许用户更改源对象上的属性，但不希望将每个更改立即提交到源时，此方法非常有用。</span><span class="sxs-lookup"><span data-stu-id="c9c41-121">This is useful when you want to enable users to change a property on a source object but you don't want each change to be immediately committed to the source.</span></span>  <span data-ttu-id="c9c41-122">例如，假设您有一个文本框，该文本框的数据双向绑定到数据对象的属性。</span><span class="sxs-lookup"><span data-stu-id="c9c41-122">For example, suppose that you have a text box that is data two-way bound to a property of a data object.</span></span>  <span data-ttu-id="c9c41-123">当用户更改文本框中的值时，源会更新。</span><span class="sxs-lookup"><span data-stu-id="c9c41-123">When the user changes the value in the text box, the source gets updated.</span></span>  <span data-ttu-id="c9c41-124">若要启用此方案，请将 <xref:System.Windows.Data.Binding.Mode%2A> 的属性设置 <xref:System.Windows.Data.Binding> 为 <xref:System.Windows.Data.BindingMode.TwoWay> ，并将设置 <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> 为 <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged> 。</span><span class="sxs-lookup"><span data-stu-id="c9c41-124">To enable this scenario, you set the <xref:System.Windows.Data.Binding.Mode%2A> property on the <xref:System.Windows.Data.Binding> to <xref:System.Windows.Data.BindingMode.TwoWay> and the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> to <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>.</span></span>  <span data-ttu-id="c9c41-125">若要避免每次击键时更新源对象，请将 <xref:System.Windows.Data.BindingBase.Delay%2A> 属性设置为合理的值，以使绑定仅在用户停止键入之后经过一段时间后才进行更新。</span><span class="sxs-lookup"><span data-stu-id="c9c41-125">To avoid updating the source object with every keystroke, set the <xref:System.Windows.Data.BindingBase.Delay%2A> property to a reasonable value to cause the binding to update only after that amount of time has elapsed since the user stopped typing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FallbackValue">
      <MemberSignature Language="C#" Value="public object FallbackValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FallbackValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.FallbackValue" />
      <MemberSignature Language="VB.NET" Value="Public Property FallbackValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FallbackValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FallbackValue : obj with get, set" Usage="System.Windows.Data.BindingBase.FallbackValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9c41-126">获取或设置当绑定无法返回值时要使用的值。</span><span class="sxs-lookup"><span data-stu-id="c9c41-126">Gets or sets the value to use when the binding is unable to return a value.</span></span></summary>
        <value><span data-ttu-id="c9c41-127">默认值是 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />。</span><span class="sxs-lookup"><span data-stu-id="c9c41-127">The default value is <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9c41-128">如果以下情况，绑定将成功返回值：</span><span class="sxs-lookup"><span data-stu-id="c9c41-128">A binding returns a value successfully if:</span></span>  
  
1.  <span data-ttu-id="c9c41-129">绑定源的路径解析成功。</span><span class="sxs-lookup"><span data-stu-id="c9c41-129">The path to the binding source resolves successfully.</span></span>  
  
2.  <span data-ttu-id="c9c41-130">值转换器（如果有）能够转换结果值。</span><span class="sxs-lookup"><span data-stu-id="c9c41-130">The value converter, if any, is able to convert the resulting value.</span></span>  
  
3.  <span data-ttu-id="c9c41-131">生成的值对绑定目标 (目标) 属性有效。</span><span class="sxs-lookup"><span data-stu-id="c9c41-131">The resulting value is valid for the binding target (target) property.</span></span>  
  
 <span data-ttu-id="c9c41-132">如果返回1和 2 <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType> ，则将目标属性设置为的值 <xref:System.Windows.Data.BindingBase.FallbackValue%2A> （如果有）。</span><span class="sxs-lookup"><span data-stu-id="c9c41-132">If 1 and 2 return <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>, the target property is set to the value of the <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, if one is available.</span></span> <span data-ttu-id="c9c41-133">如果没有，则 <xref:System.Windows.Data.BindingBase.FallbackValue%2A> 使用目标属性的默认值。</span><span class="sxs-lookup"><span data-stu-id="c9c41-133">If there is no <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, the default value of the target property is used.</span></span>  
  
 <span data-ttu-id="c9c41-134">该值 <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType> 不被视为成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="c9c41-134">The value <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType> is not considered a successful return value.</span></span>  
  
<a name="xamlTextUsage_FallbackValue"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="c9c41-135">XAML 文本用法</span><span class="sxs-lookup"><span data-stu-id="c9c41-135">XAML Text Usage</span></span>  
  
```  
<object FallbackValue="fallbackValue" />  
```  
  
 <span data-ttu-id="c9c41-136">**或**</span><span class="sxs-lookup"><span data-stu-id="c9c41-136">**- or -**</span></span>  
  
```  
<object>  
  <object.FallbackValue>  
    fallbackValue  
    </object.FallbackValue>  
</object>  
```  
  
<a name="xamlValues_FallbackValue"></a>   
## <a name="xaml-values"></a><span data-ttu-id="c9c41-137">XAML 值</span><span class="sxs-lookup"><span data-stu-id="c9c41-137">XAML Values</span></span>  
 <span data-ttu-id="c9c41-138">*fallbackValue*</span><span class="sxs-lookup"><span data-stu-id="c9c41-138">*fallbackValue*</span></span>  
 <span data-ttu-id="c9c41-139">与目标属性具有相同类型的属性或对象元素值。</span><span class="sxs-lookup"><span data-stu-id="c9c41-139">An attribute or object element value of the same type as the target property.</span></span> <span data-ttu-id="c9c41-140">有关 XAML 用法信息，请参阅该类型的文档。</span><span class="sxs-lookup"><span data-stu-id="c9c41-140">See that type's documentation for XAML usage information.</span></span> <span data-ttu-id="c9c41-141">该类型可能支持或不支持其值的特性语法，也可能支持或不支持对象元素语法 (这需要) 该类型的无参数构造函数。</span><span class="sxs-lookup"><span data-stu-id="c9c41-141">That type may or may not support attribute syntax for its values, or may or may not support object element syntax (which requires a parameterless constructor on that type).</span></span> <span data-ttu-id="c9c41-142">因此，目标属性类型将影响为属性的值使用的语法 <xref:System.Windows.Data.BindingBase.FallbackValue%2A> 。</span><span class="sxs-lookup"><span data-stu-id="c9c41-142">The target property type will therefore influence which syntax you use for the value of the <xref:System.Windows.Data.BindingBase.FallbackValue%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ProvideValue">
      <MemberSignature Language="C#" Value="public override sealed object ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function ProvideValue (serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ProvideValue(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="override this.ProvideValue : IServiceProvider -&gt; obj" Usage="bindingBase.ProvideValue serviceProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider"><span data-ttu-id="c9c41-143">可为标记扩展提供服务的对象。</span><span class="sxs-lookup"><span data-stu-id="c9c41-143">The object that can provide services for the markup extension.</span></span> <span data-ttu-id="c9c41-144">可以为 <see langword="null" />；</span><span class="sxs-lookup"><span data-stu-id="c9c41-144">May be <see langword="null" />;</span></span></param>
        <summary><span data-ttu-id="c9c41-145">返回一个应在应用了此绑定和扩展的属性上设置的对象。</span><span class="sxs-lookup"><span data-stu-id="c9c41-145">Returns an object that should be set on the property where this binding and extension are applied.</span></span></summary>
        <returns><span data-ttu-id="c9c41-146">要在绑定目标属性上设置的值。</span><span class="sxs-lookup"><span data-stu-id="c9c41-146">The value to set on the binding target property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9c41-147">此实现为所有提供的实用派生类 Extensible Application Markup Language (XAML) 提供基本语法支持 (<xref:System.Windows.Data.Binding> 、 <xref:System.Windows.Data.PriorityBinding> 和 <xref:System.Windows.Data.MultiBinding>) 。</span><span class="sxs-lookup"><span data-stu-id="c9c41-147">This implementation provides the base syntax support for binding through Extensible Application Markup Language (XAML) for all provided practical derived classes (<xref:System.Windows.Data.Binding>, <xref:System.Windows.Data.PriorityBinding>, and <xref:System.Windows.Data.MultiBinding>).</span></span>  
  
 <span data-ttu-id="c9c41-148"><xref:System.Windows.Data.BindingBase>此方法的类实现应返回作为绑定结果的表达式对象。</span><span class="sxs-lookup"><span data-stu-id="c9c41-148">The <xref:System.Windows.Data.BindingBase> class implementation of this method is expected to return an expression object that is the result of a binding.</span></span> <span data-ttu-id="c9c41-149">绑定属性的工作方式是将给定上的指定为 <xref:System.Windows.DependencyProperty> <xref:System.Windows.DependencyObject> 。</span><span class="sxs-lookup"><span data-stu-id="c9c41-149">Binding a property works by targeting a given <xref:System.Windows.DependencyProperty> on a given <xref:System.Windows.DependencyObject>.</span></span> <span data-ttu-id="c9c41-150">这两部分信息通过在上查询实现进行传输 <xref:System.Windows.Markup.IProvideValueTarget> `serviceProvider` ，WPF XAML 读取器可在分析绑定期间使用该实现。</span><span class="sxs-lookup"><span data-stu-id="c9c41-150">These two pieces of information are transmitted by querying for an <xref:System.Windows.Markup.IProvideValueTarget> implementation on the `serviceProvider`, which the WPF XAML reader makes available during parsing of a binding.</span></span> <span data-ttu-id="c9c41-151">此基类实现负责检查是否有有效的 <xref:System.Windows.DependencyProperty> 和 <xref:System.Windows.DependencyObject> 。</span><span class="sxs-lookup"><span data-stu-id="c9c41-151">This base class implementation is responsible for checking for a valid <xref:System.Windows.DependencyProperty> and <xref:System.Windows.DependencyObject>.</span></span> <span data-ttu-id="c9c41-152">如果找到这些值，则返回绑定表达式的实际实现属于各种派生类，这是通过使基类调用内部抽象方法实现的。</span><span class="sxs-lookup"><span data-stu-id="c9c41-152">If these are found, the actual implementation of returning a binding expression falls to various derived classes, as implemented by having the base class call an internal abstract method.</span></span> <span data-ttu-id="c9c41-153">否则，该扩展将返回绑定对象本身。</span><span class="sxs-lookup"><span data-stu-id="c9c41-153">Otherwise, the extension returns the binding object itself.</span></span> <span data-ttu-id="c9c41-154">返回绑定本身会导致类型不匹配错误，但在正常情况下不会发生这种情况。</span><span class="sxs-lookup"><span data-stu-id="c9c41-154">Returning the binding itself results in a type mismatch error, but this should not occur under normal circumstances.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c9c41-155">由于在此方法中实现的通过 XAML 绑定的语法依赖于实现内部重写，因此， <xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType> 从派生的自定义绑定类 <xref:System.Windows.Data.BindingBase> 将不能作为 XAML 标记扩展运行。</span><span class="sxs-lookup"><span data-stu-id="c9c41-155">Because the syntax for binding through XAML as implemented in this method relies on implementing an internal override, and because <xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType> itself is sealed, a custom binding class that derives from <xref:System.Windows.Data.BindingBase> will not function correctly as a XAML markup extension.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeFallbackValue">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeFallbackValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeFallbackValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingBase.ShouldSerializeFallbackValue" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeFallbackValue () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeFallbackValue();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeFallbackValue : unit -&gt; bool" Usage="bindingBase.ShouldSerializeFallbackValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9c41-156">返回一个值，该值指示序列化进程是否应当对此类的实例的 <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> 有效属性值进行序列化。</span><span class="sxs-lookup"><span data-stu-id="c9c41-156">Returns a value that indicates whether serialization processes should serialize the effective value of the <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> property on instances of this class.</span></span></summary>
        <returns><span data-ttu-id="c9c41-157">如果应当序列化 <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> 属性值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9c41-157"><see langword="true" /> if the <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTargetNullValue">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTargetNullValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTargetNullValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTargetNullValue () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTargetNullValue();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeTargetNullValue : unit -&gt; bool" Usage="bindingBase.ShouldSerializeTargetNullValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9c41-158">返回一个值，该值指示是否应序列化 <see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="c9c41-158">Returns a value that indicates whether the <see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> property should be serialized.</span></span></summary>
        <returns><span data-ttu-id="c9c41-159">如果 <see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> 属性应被序列化，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9c41-159"><see langword="true" /> if the <see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> property should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringFormat">
      <MemberSignature Language="C#" Value="public string StringFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.StringFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property StringFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StringFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StringFormat : string with get, set" Usage="System.Windows.Data.BindingBase.StringFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9c41-160">获取或设置一个字符串，该字符串指定如果绑定值显示为字符串，应如何设置该绑定的格式。</span><span class="sxs-lookup"><span data-stu-id="c9c41-160">Gets or sets a string that specifies how to format the binding if it displays the bound value as a string.</span></span></summary>
        <value><span data-ttu-id="c9c41-161">一个字符串，该字符串指定如果绑定值显示为字符串，应如何设置该绑定的格式。</span><span class="sxs-lookup"><span data-stu-id="c9c41-161">A string that specifies how to format the binding if it displays the bound value as a string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9c41-162"><xref:System.Windows.Data.BindingBase.StringFormat%2A> 可以是预定义的复合字符串格式。</span><span class="sxs-lookup"><span data-stu-id="c9c41-162"><xref:System.Windows.Data.BindingBase.StringFormat%2A> can be a predefined, composite, or custom string format.</span></span> <span data-ttu-id="c9c41-163">有关字符串格式的详细信息，请参阅 [格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="c9c41-163">For more information about string formats, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
 <span data-ttu-id="c9c41-164">如果设置了 <xref:System.Windows.Data.Binding.Converter%2A> 和 <xref:System.Windows.Data.BindingBase.StringFormat%2A> 属性，则转换器将首先应用于数据值，然后 <xref:System.Windows.Data.BindingBase.StringFormat%2A> 应用。</span><span class="sxs-lookup"><span data-stu-id="c9c41-164">If you set the <xref:System.Windows.Data.Binding.Converter%2A> and <xref:System.Windows.Data.BindingBase.StringFormat%2A> properties, the converter is applied to the data value first, and then the <xref:System.Windows.Data.BindingBase.StringFormat%2A> is applied.</span></span>  
  
 <span data-ttu-id="c9c41-165">在将设置 <xref:System.Windows.Data.BindingBase.StringFormat%2A> <xref:System.Windows.Data.Binding> 为复合字符串格式时，只能指定一个参数。</span><span class="sxs-lookup"><span data-stu-id="c9c41-165">When you set the <xref:System.Windows.Data.BindingBase.StringFormat%2A> on a <xref:System.Windows.Data.Binding> to a composite string format, you can specify only one parameter.</span></span>  
  
 <span data-ttu-id="c9c41-166">使用时 <xref:System.Windows.Data.MultiBinding> ， <xref:System.Windows.Data.BindingBase.StringFormat%2A> 仅当在上设置该属性时，该属性才适用 <xref:System.Windows.Data.MultiBinding> 。</span><span class="sxs-lookup"><span data-stu-id="c9c41-166">When you use a <xref:System.Windows.Data.MultiBinding>, the <xref:System.Windows.Data.BindingBase.StringFormat%2A> property applies only when it is set on the <xref:System.Windows.Data.MultiBinding>.</span></span>  <span data-ttu-id="c9c41-167">将 <xref:System.Windows.Data.BindingBase.StringFormat%2A> 忽略在任何子对象上设置的的值 <xref:System.Windows.Data.Binding> 。</span><span class="sxs-lookup"><span data-stu-id="c9c41-167">The value of <xref:System.Windows.Data.BindingBase.StringFormat%2A> that is set on any child <xref:System.Windows.Data.Binding> objects is ignored.</span></span>  <span data-ttu-id="c9c41-168">复合字符串格式中的参数数量不能超过中的子对象数 <xref:System.Windows.Data.Binding> <xref:System.Windows.Data.MultiBinding> 。</span><span class="sxs-lookup"><span data-stu-id="c9c41-168">The number of parameters in a composite string format cannot exceed the number of child <xref:System.Windows.Data.Binding> objects in the <xref:System.Windows.Data.MultiBinding>.</span></span>  
  
 <span data-ttu-id="c9c41-169">当你使用时， <xref:System.Windows.Data.PriorityBinding> 你可以在 <xref:System.Windows.Data.BindingBase.StringFormat%2A> 上对 <xref:System.Windows.Data.PriorityBinding> 、子绑定对象或同时设置两者。</span><span class="sxs-lookup"><span data-stu-id="c9c41-169">When you use a <xref:System.Windows.Data.PriorityBinding>, you can set the <xref:System.Windows.Data.BindingBase.StringFormat%2A> on the <xref:System.Windows.Data.PriorityBinding>, on child binding objects, or both.</span></span>  <span data-ttu-id="c9c41-170">如果在 <xref:System.Windows.Data.BindingBase.StringFormat%2A> 应用的子绑定上设置，则使用该值。</span><span class="sxs-lookup"><span data-stu-id="c9c41-170">If the <xref:System.Windows.Data.BindingBase.StringFormat%2A> is set on the child binding that is applied, that value is used.</span></span>  <span data-ttu-id="c9c41-171">如果 <xref:System.Windows.Data.BindingBase.StringFormat%2A> 未在应用的子绑定上设置，则 <xref:System.Windows.Data.BindingBase.StringFormat%2A> 如果已设置，则 <xref:System.Windows.Data.PriorityBinding> 会应用。</span><span class="sxs-lookup"><span data-stu-id="c9c41-171">If the <xref:System.Windows.Data.BindingBase.StringFormat%2A> is not set on the child binding that is applied, the <xref:System.Windows.Data.BindingBase.StringFormat%2A> of the <xref:System.Windows.Data.PriorityBinding> is applied if it is set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9c41-172">下面的示例使用 <xref:System.Windows.Data.BindingBase.StringFormat%2A> 属性将（ `Price` ）转换 <xref:System.Double> 为表示货币的字符串。</span><span class="sxs-lookup"><span data-stu-id="c9c41-172">The following example uses the <xref:System.Windows.Data.BindingBase.StringFormat%2A> property to convert `Price`, which is a <xref:System.Double>, to a string that represents a currency.</span></span>  
  
 [!code-xaml[ContentStringSnippets#Binding](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentStringSnippets/CSharp/Window1.xaml#binding)]  
  
 <span data-ttu-id="c9c41-173">下面的示例使用 <xref:System.Windows.Data.BindingBase.StringFormat%2A> 上的属性 <xref:System.Windows.Data.MultiBinding> 生成一个字符串，其中包含中的 `Description` `Price` 每一项的和 <xref:System.Windows.Controls.ListBox> 。</span><span class="sxs-lookup"><span data-stu-id="c9c41-173">The following example uses the <xref:System.Windows.Data.BindingBase.StringFormat%2A> property on a <xref:System.Windows.Data.MultiBinding> to build a string that includes the `Description` and `Price` of each item in a <xref:System.Windows.Controls.ListBox>.</span></span>  
  
 [!code-xaml[ContentStringSnippets#MultiBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentStringSnippets/CSharp/Window1.xaml#multibinding)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetNullValue">
      <MemberSignature Language="C#" Value="public object TargetNullValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetNullValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.TargetNullValue" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetNullValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetNullValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetNullValue : obj with get, set" Usage="System.Windows.Data.BindingBase.TargetNullValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9c41-174">获取或设置当源的值为 <see langword="null" /> 时在目标中使用的值。</span><span class="sxs-lookup"><span data-stu-id="c9c41-174">Gets or sets the value that is used in the target when the value of the source is <see langword="null" />.</span></span></summary>
        <value><span data-ttu-id="c9c41-175">当源的值为 <see langword="null" /> 时在目标中使用的值。</span><span class="sxs-lookup"><span data-stu-id="c9c41-175">The value that is used in the target when the value of the source is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_TargetNullValue"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="c9c41-176">XAML 文本用法</span><span class="sxs-lookup"><span data-stu-id="c9c41-176">XAML Text Usage</span></span>  
  
```  
<object TargetNullValue="nullValue" />  
```  
  
 <span data-ttu-id="c9c41-177">**或**</span><span class="sxs-lookup"><span data-stu-id="c9c41-177">**- or -**</span></span>  
  
```  
<object>  
  <object.TargetNullValue>  
    nullValue  
    </object.TargetNullValue>  
</object>  
```  
  
<a name="xamlValues_TargetNullValue"></a>   
## <a name="xaml-values"></a><span data-ttu-id="c9c41-178">XAML 值</span><span class="sxs-lookup"><span data-stu-id="c9c41-178">XAML Values</span></span>  
 <span data-ttu-id="c9c41-179">*nullValue*</span><span class="sxs-lookup"><span data-stu-id="c9c41-179">*nullValue*</span></span>  
 <span data-ttu-id="c9c41-180">与目标属性具有相同类型的属性或对象元素值。</span><span class="sxs-lookup"><span data-stu-id="c9c41-180">An attribute or object element value of the same type as the target property.</span></span> <span data-ttu-id="c9c41-181">有关 XAML 用法信息，请参阅该类型的文档。</span><span class="sxs-lookup"><span data-stu-id="c9c41-181">See that type's documentation for XAML usage information.</span></span> <span data-ttu-id="c9c41-182">该类型可能支持或不支持其值的特性语法，也可能支持或不支持对象元素语法 (这需要) 该类型的无参数构造函数。</span><span class="sxs-lookup"><span data-stu-id="c9c41-182">That type may or may not support attribute syntax for its values, or may or may not support object element syntax (which requires a parameterless constructor on that type).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9c41-183">下面的示例将绑定 <xref:System.Windows.Controls.TextBox> 到对象的属性。</span><span class="sxs-lookup"><span data-stu-id="c9c41-183">The following example binds a <xref:System.Windows.Controls.TextBox> to a property of an object.</span></span>  <span data-ttu-id="c9c41-184">如果属性为 `null` ，则 <xref:System.Windows.Controls.TextBox> 显示 "请输入字符串"。</span><span class="sxs-lookup"><span data-stu-id="c9c41-184">If the property is `null`, the <xref:System.Windows.Controls.TextBox> displays "please enter a string."</span></span>  
  
 [!code-xaml[BindingGroupSnippets#TargetNullValue](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#targetnullvalue)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
