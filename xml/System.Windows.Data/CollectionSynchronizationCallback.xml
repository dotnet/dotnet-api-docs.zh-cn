<Type Name="CollectionSynchronizationCallback" FullName="System.Windows.Data.CollectionSynchronizationCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="59fe7cfd631f2f22aff2186ebee99ec697f5738b" /><Meta Name="ms.sourcegitcommit" Value="f828282420515ef705e09bbdb6c22116df98b5e3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="82472199" /></Metadata><TypeSignature Language="C#" Value="public delegate void CollectionSynchronizationCallback(IEnumerable collection, object context, Action accessMethod, bool writeAccess);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CollectionSynchronizationCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.CollectionSynchronizationCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub CollectionSynchronizationCallback(collection As IEnumerable, context As Object, accessMethod As Action, writeAccess As Boolean)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void CollectionSynchronizationCallback(IEnumerable ^ collection, System::Object ^ context, Action ^ accessMethod, bool writeAccess);" />
  <TypeSignature Language="F#" Value="type CollectionSynchronizationCallback = delegate of IEnumerable * obj * Action * bool -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="collection" Type="System.Collections.IEnumerable" />
    <Parameter Name="context" Type="System.Object" />
    <Parameter Name="accessMethod" Type="System.Action" />
    <Parameter Name="writeAccess" Type="System.Boolean" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="collection"><span data-ttu-id="42d6b-101">要在某线程而不是创建该线程的那个上访问的集合。</span><span class="sxs-lookup"><span data-stu-id="42d6b-101">The collection to access on a thread other than the one that created it.</span></span></param>
    <param name="context"><span data-ttu-id="42d6b-102">用于同步集合的对象。</span><span class="sxs-lookup"><span data-stu-id="42d6b-102">An object used to synchronize the collection.</span></span></param>
    <param name="accessMethod"><span data-ttu-id="42d6b-103">执行集合的操作方法的委托。</span><span class="sxs-lookup"><span data-stu-id="42d6b-103">A delegate to the method that performs the operation on the collection.</span></span></param>
    <param name="writeAccess"><span data-ttu-id="42d6b-104">如果 <paramref name="accessMethod" /> 将写入收集，则为<see langword="true" />；否则，为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="42d6b-104"><see langword="true" /> if <paramref name="accessMethod" /> writes to the collection; otherwise, <see langword="false" />.</span></span></param>
    <summary><span data-ttu-id="42d6b-105">表示方法，其可同步跨线程访问的集合。</span><span class="sxs-lookup"><span data-stu-id="42d6b-105">Represent the method that synchronizes a collection for cross-thread access.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>
