<Type Name="BindingExpression" FullName="System.Windows.Data.BindingExpression">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3c8ce2abe2172899ca5d406c77e8cd64b6374a6c" /><Meta Name="ms.sourcegitcommit" Value="9f423345753728e8cad38d4a22663a109e69ea91" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/04/2021" /><Meta Name="ms.locfileid" Value="102069656" /></Metadata><TypeSignature Language="C#" Value="public sealed class BindingExpression : System.Windows.Data.BindingExpressionBase, System.Windows.IWeakEventListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BindingExpression extends System.Windows.Data.BindingExpressionBase implements class System.Windows.IWeakEventListener" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingExpression" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BindingExpression&#xA;Inherits BindingExpressionBase&#xA;Implements IWeakEventListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingExpression sealed : System::Windows::Data::BindingExpressionBase, System::Windows::IWeakEventListener" />
  <TypeSignature Language="F#" Value="type BindingExpression = class&#xA;    inherit BindingExpressionBase&#xA;    interface IWeakEventListener" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Data.BindingExpressionBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.IWeakEventListener</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="5b6c8-101">包含有关 <see cref="T:System.Windows.Data.Binding" /> 的单个实例的信息。</span><span class="sxs-lookup"><span data-stu-id="5b6c8-101">Contains information about a single instance of a <see cref="T:System.Windows.Data.Binding" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b6c8-102"><xref:System.Windows.Data.Binding>类是绑定的声明的高级类。</span><span class="sxs-lookup"><span data-stu-id="5b6c8-102">The <xref:System.Windows.Data.Binding> class is the high-level class for the declaration of a binding.</span></span> <span data-ttu-id="5b6c8-103"><xref:System.Windows.Data.BindingExpression>类是维护绑定源和绑定目标之间的连接的基础对象。</span><span class="sxs-lookup"><span data-stu-id="5b6c8-103">The <xref:System.Windows.Data.BindingExpression> class is the underlying object that maintains the connection between the binding source and the binding target.</span></span> <span data-ttu-id="5b6c8-104"><xref:System.Windows.Data.Binding>包含可在多个对象之间共享的所有信息 <xref:System.Windows.Data.BindingExpression> 。</span><span class="sxs-lookup"><span data-stu-id="5b6c8-104">A <xref:System.Windows.Data.Binding> contains all the information that can be shared across several <xref:System.Windows.Data.BindingExpression> objects.</span></span> <span data-ttu-id="5b6c8-105"><xref:System.Windows.Data.BindingExpression>是无法共享的实例表达式，它包含有关的所有实例信息 <xref:System.Windows.Data.Binding> 。</span><span class="sxs-lookup"><span data-stu-id="5b6c8-105">A <xref:System.Windows.Data.BindingExpression> is an instance expression that cannot be shared and that contains all the instance information about the <xref:System.Windows.Data.Binding>.</span></span>  
  
 <span data-ttu-id="5b6c8-106">例如，请考虑以下情况，其中 `myDataObject` 是类的一个实例 `MyData` ， `myBinding` 是源 <xref:System.Windows.Data.Binding> 对象， `MyData` 类是一个定义的类，其中包含一个名为的字符串属性 `MyDataProperty` 。</span><span class="sxs-lookup"><span data-stu-id="5b6c8-106">For example, consider the following, where `myDataObject` is an instance of the `MyData` class, `myBinding` is the source <xref:System.Windows.Data.Binding> object, and `MyData` class is a defined class that contains a string property named `MyDataProperty`.</span></span> <span data-ttu-id="5b6c8-107">此示例将（的实例）的文本内容绑定 `mytext` <xref:System.Windows.Controls.TextBlock> 到 `MyDataProperty` 。</span><span class="sxs-lookup"><span data-stu-id="5b6c8-107">This example binds the text content of `mytext`, which is an instance of <xref:System.Windows.Controls.TextBlock>, to `MyDataProperty`.</span></span>  
  
 [!code-csharp[CodeOnlyBinding#1](~/samples/snippets/csharp/VS_Snippets_Wpf/CodeOnlyBinding/CSharp/binding.cs#1)]
 [!code-vb[CodeOnlyBinding#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CodeOnlyBinding/VisualBasic/App.vb#1)]  
  
 <span data-ttu-id="5b6c8-108">您可以使用相同的 `myBinding` 对象创建其他绑定。</span><span class="sxs-lookup"><span data-stu-id="5b6c8-108">You can use the same `myBinding` object to create other bindings.</span></span> <span data-ttu-id="5b6c8-109">例如，您可以使用对象将 `myBinding` 复选框的文本内容绑定到 `MyDataProperty` 。</span><span class="sxs-lookup"><span data-stu-id="5b6c8-109">For example, you might use the `myBinding` object to bind the text content of a check box to `MyDataProperty`.</span></span> <span data-ttu-id="5b6c8-110">在这种情况下，将有两个 <xref:System.Windows.Data.BindingExpression> 共享对象的实例 `myBinding` 。</span><span class="sxs-lookup"><span data-stu-id="5b6c8-110">In that scenario, there will be two instances of <xref:System.Windows.Data.BindingExpression> that share the `myBinding` object.</span></span>  
  
 <span data-ttu-id="5b6c8-111">您可以 <xref:System.Windows.Data.BindingExpression> 通过使用 <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> 方法或 <xref:System.Windows.FrameworkElement.GetBindingExpression%2A> 数据绑定对象上的方法来获取对象。</span><span class="sxs-lookup"><span data-stu-id="5b6c8-111">You can obtain a <xref:System.Windows.Data.BindingExpression> object by using the <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> method or the <xref:System.Windows.FrameworkElement.GetBindingExpression%2A> method on a data-bound object.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public object DataItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpression.DataItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItem : obj" Usage="System.Windows.Data.BindingExpression.DataItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5b6c8-112">获取此 <see cref="T:System.Windows.Data.BindingExpression" /> 使用的绑定源对象。</span><span class="sxs-lookup"><span data-stu-id="5b6c8-112">Gets the binding source object that this <see cref="T:System.Windows.Data.BindingExpression" /> uses.</span></span></summary>
        <value><span data-ttu-id="5b6c8-113">此 <see cref="T:System.Windows.Data.BindingExpression" /> 使用的绑定源对象。</span><span class="sxs-lookup"><span data-stu-id="5b6c8-113">The binding source object that this <see cref="T:System.Windows.Data.BindingExpression" /> uses.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5b6c8-114">下面的示例演示了一个 <xref:System.Windows.Controls.Primitives.ButtonBase.Click> 事件处理程序的实现，该事件处理程序使用 <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> 方法获取 <xref:System.Windows.Data.BindingExpression> ，然后调用 <xref:System.Windows.Data.BindingExpression.DataItem%2A> 属性来访问绑定源对象。</span><span class="sxs-lookup"><span data-stu-id="5b6c8-114">The following example shows the implementation of a <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler that uses the <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> method to obtain the <xref:System.Windows.Data.BindingExpression> and then calls the <xref:System.Windows.Data.BindingExpression.DataItem%2A> property to access the binding source object.</span></span>  
  
 <span data-ttu-id="5b6c8-115"><xref:System.Windows.Controls.TextBlock> `SavingsText` 是绑定目标对象，其 <xref:System.Windows.Controls.TextBlock.Text%2A> 属性是绑定目标属性。</span><span class="sxs-lookup"><span data-stu-id="5b6c8-115">The <xref:System.Windows.Controls.TextBlock> `SavingsText` is the binding target object, and its <xref:System.Windows.Controls.TextBlock.Text%2A> property is the binding target property.</span></span>  
  
 [!code-csharp[DirectionalBinding#OnRentRaise](~/samples/snippets/csharp/VS_Snippets_Wpf/DirectionalBinding/CSharp/Page1.xaml.cs#onrentraise)]
 [!code-vb[DirectionalBinding#OnRentRaise](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DirectionalBinding/VisualBasic/DirectionalBinding.vb#onrentraise)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentBinding">
      <MemberSignature Language="C#" Value="public System.Windows.Data.Binding ParentBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.Binding ParentBinding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpression.ParentBinding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentBinding As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::Binding ^ ParentBinding { System::Windows::Data::Binding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentBinding : System.Windows.Data.Binding" Usage="System.Windows.Data.BindingExpression.ParentBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.Binding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5b6c8-116">返回当前 <see cref="T:System.Windows.Data.BindingExpression" /> 的 <see cref="T:System.Windows.Data.Binding" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="5b6c8-116">Returns the <see cref="T:System.Windows.Data.Binding" /> object of the current <see cref="T:System.Windows.Data.BindingExpression" />.</span></span></summary>
        <value><span data-ttu-id="5b6c8-117">当前绑定表达式的 <see cref="T:System.Windows.Data.Binding" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="5b6c8-117">The <see cref="T:System.Windows.Data.Binding" /> object of the current binding expression.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolvedSource">
      <MemberSignature Language="C#" Value="public object ResolvedSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ResolvedSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpression.ResolvedSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResolvedSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ResolvedSource { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ResolvedSource : obj" Usage="System.Windows.Data.BindingExpression.ResolvedSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5b6c8-118">获取该 <see cref="T:System.Windows.Data.BindingExpression" /> 的绑定源对象。</span><span class="sxs-lookup"><span data-stu-id="5b6c8-118">Gets the binding source object for this <see cref="T:System.Windows.Data.BindingExpression" />.</span></span></summary>
        <value><span data-ttu-id="5b6c8-119">此 <see cref="T:System.Windows.Data.BindingExpression" /> 的绑定源对象。</span><span class="sxs-lookup"><span data-stu-id="5b6c8-119">The binding source object for this <see cref="T:System.Windows.Data.BindingExpression" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolvedSourcePropertyName">
      <MemberSignature Language="C#" Value="public string ResolvedSourcePropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResolvedSourcePropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpression.ResolvedSourcePropertyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResolvedSourcePropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ResolvedSourcePropertyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ResolvedSourcePropertyName : string" Usage="System.Windows.Data.BindingExpression.ResolvedSourcePropertyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5b6c8-120">获取<see cref="T:System.Windows.Data.BindingExpression" /> 的获取绑定源属性的名称。</span><span class="sxs-lookup"><span data-stu-id="5b6c8-120">Gets the name of the binding source property for this <see cref="T:System.Windows.Data.BindingExpression" />.</span></span></summary>
        <value><span data-ttu-id="5b6c8-121">此 <see cref="T:System.Windows.Data.BindingExpression" /> 绑定源属性的名称。</span><span class="sxs-lookup"><span data-stu-id="5b6c8-121">The name of the binding source property for this <see cref="T:System.Windows.Data.BindingExpression" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.IWeakEventListener.ReceiveWeakEvent">
      <MemberSignature Language="C#" Value="bool IWeakEventListener.ReceiveWeakEvent (Type managerType, object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.IWeakEventListener.ReceiveWeakEvent(class System.Type managerType, object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Function ReceiveWeakEvent (managerType As Type, sender As Object, e As EventArgs) As Boolean Implements IWeakEventListener.ReceiveWeakEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.IWeakEventListener.ReceiveWeakEvent(Type ^ managerType, System::Object ^ sender, EventArgs ^ e) = System::Windows::IWeakEventListener::ReceiveWeakEvent;" />
      <MemberSignature Language="F#" Value="override this.System.Windows.IWeakEventListener.ReceiveWeakEvent : Type * obj * EventArgs -&gt; bool" Usage="bindingExpression.System.Windows.IWeakEventListener.ReceiveWeakEvent (managerType, sender, e)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IWeakEventListener.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managerType" Type="System.Type" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="managerType"><span data-ttu-id="5b6c8-122">调用此方法的 <see cref="T:System.Windows.WeakEventManager" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="5b6c8-122">The type of the <see cref="T:System.Windows.WeakEventManager" /> calling this method.</span></span> <span data-ttu-id="5b6c8-123">这仅识别类型 <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" /> 的管理器对象。</span><span class="sxs-lookup"><span data-stu-id="5b6c8-123">This only recognizes manager objects of type <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" />.</span></span></param>
        <param name="sender"><span data-ttu-id="5b6c8-124">发出该事件的对象。</span><span class="sxs-lookup"><span data-stu-id="5b6c8-124">Object that originated the event.</span></span></param>
        <param name="e"><span data-ttu-id="5b6c8-125">事件数据。</span><span class="sxs-lookup"><span data-stu-id="5b6c8-125">Event data.</span></span></param>
        <summary><span data-ttu-id="5b6c8-126">此成员支持 Windows Presentation Foundation (WPF) 基础结构，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="5b6c8-126">This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <returns><span data-ttu-id="5b6c8-127">如果侦听器已处理事件，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5b6c8-127"><see langword="true" /> if the listener handled the event; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSource">
      <MemberSignature Language="C#" Value="public override void UpdateSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpression.UpdateSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UpdateSource ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void UpdateSource();" />
      <MemberSignature Language="F#" Value="override this.UpdateSource : unit -&gt; unit" Usage="bindingExpression.UpdateSource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5b6c8-128">将当前绑定目标值发送到 <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> 或 <see cref="F:System.Windows.Data.BindingMode.OneWayToSource" /> 绑定中的绑定源属性。</span><span class="sxs-lookup"><span data-stu-id="5b6c8-128">Sends the current binding target value to the binding source property in <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> or <see cref="F:System.Windows.Data.BindingMode.OneWayToSource" /> bindings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b6c8-129">当 <xref:System.Windows.Data.Binding.Mode%2A> 绑定的不是或时，此方法不执行任何操作 <xref:System.Windows.Data.BindingMode.TwoWay> <xref:System.Windows.Data.BindingMode.OneWayToSource> 。</span><span class="sxs-lookup"><span data-stu-id="5b6c8-129">This method does nothing when the <xref:System.Windows.Data.Binding.Mode%2A> of the binding is not <xref:System.Windows.Data.BindingMode.TwoWay> or <xref:System.Windows.Data.BindingMode.OneWayToSource>.</span></span>  
  
 <span data-ttu-id="5b6c8-130">如果 <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> 绑定的值设置为 <xref:System.Windows.Data.UpdateSourceTrigger.Explicit> ，则必须调用 <xref:System.Windows.Data.BindingExpression.UpdateSource%2A> 方法，否则更改不会传播回源。</span><span class="sxs-lookup"><span data-stu-id="5b6c8-130">If the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> value of your binding is set to <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>, you must call the <xref:System.Windows.Data.BindingExpression.UpdateSource%2A> method or the changes will not propagate back to the source.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5b6c8-131">此绑定已从其目标分离。</span><span class="sxs-lookup"><span data-stu-id="5b6c8-131">The binding has been detached from its target.</span></span></exception>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateTarget" />
      </Docs>
    </Member>
    <Member MemberName="UpdateTarget">
      <MemberSignature Language="C#" Value="public override void UpdateTarget ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateTarget() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpression.UpdateTarget" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UpdateTarget ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void UpdateTarget();" />
      <MemberSignature Language="F#" Value="override this.UpdateTarget : unit -&gt; unit" Usage="bindingExpression.UpdateTarget " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5b6c8-132">强制将数据从绑定源属性传输到绑定目标属性。</span><span class="sxs-lookup"><span data-stu-id="5b6c8-132">Forces a data transfer from the binding source property to the binding target property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b6c8-133">利用此方法，您可以强制将数据从源属性传输到目标属性。</span><span class="sxs-lookup"><span data-stu-id="5b6c8-133">This method enables you to force a data transfer from the source property to the target property.</span></span> <span data-ttu-id="5b6c8-134">如果源对象实现了正确的属性更改的通知机制（例如 <xref:System.ComponentModel.INotifyPropertyChanged> ），则会自动进行目标更新。</span><span class="sxs-lookup"><span data-stu-id="5b6c8-134">If your source object implements a proper property-changed notification mechanism such as <xref:System.ComponentModel.INotifyPropertyChanged>, target updates happen automatically.</span></span> <span data-ttu-id="5b6c8-135">但是，您可以选择使用此方法在以下情况下显式更新目标属性：源对象未提供正确的属性更改通知。</span><span class="sxs-lookup"><span data-stu-id="5b6c8-135">However, you have the option to use this method to update the target property explicitly in cases where your source object does not provide the proper property-changed notifications.</span></span> <span data-ttu-id="5b6c8-136">如果应用程序需要定期更新目标属性，还可以使用此方法。</span><span class="sxs-lookup"><span data-stu-id="5b6c8-136">You can also use this method if your application needs to update the target properties periodically.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5b6c8-137">此绑定已从其目标分离。</span><span class="sxs-lookup"><span data-stu-id="5b6c8-137">The binding has been detached from its target.</span></span></exception>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateSource" />
      </Docs>
    </Member>
  </Members>
</Type>
