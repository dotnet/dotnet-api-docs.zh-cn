<Type Name="IValueConverter" FullName="System.Windows.Data.IValueConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="823a8883ba1ca646a3fe182a96fb539596c3c951" /><Meta Name="ms.sourcegitcommit" Value="9506e50ec7beb4fa30206b9840dc546b035a6600" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/23/2020" /><Meta Name="ms.locfileid" Value="83957138" /></Metadata><TypeSignature Language="C#" Value="public interface IValueConverter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IValueConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.IValueConverter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IValueConverter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IValueConverter" />
  <TypeSignature Language="F#" Value="type IValueConverter = interface" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>提供将自定义逻辑应用于绑定的方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果要将值转换器与绑定相关联，请创建一个实现接口的类， <xref:System.Windows.Data.IValueConverter> 然后实现 <xref:System.Windows.Data.IValueConverter.Convert%2A> 和 <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> 方法。 转换器可将数据从一种类型更改为另一种类型，根据区域性信息转换数据，或修改演示的其他方面。 有关一些典型转换器方案的示例，请参阅[数据绑定概述](/dotnet/framework/wpf/data/data-binding-overview)中的 "数据转换"。  
  
 值转换器识别区域性。 <xref:System.Windows.Data.IValueConverter.Convert%2A>和 <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> 方法都有一个 `culture` 指示区域性信息的参数。 如果区域性信息与转换无关，则可在自定义转换器中忽略该参数。  
  
 <xref:System.Windows.Data.IValueConverter.Convert%2A>和 <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> 方法也有一个名为的参数， `parameter` 以便你可以使用具有不同参数的转换器的同一实例。 例如，你可以编写一个格式转换器，该转换器根据你使用的输入参数生成不同的数据格式。 您可以使用 <xref:System.Windows.Data.Binding.ConverterParameter%2A> <xref:System.Windows.Data.Binding> 类的来将参数作为参数传递到 <xref:System.Windows.Data.IValueConverter.Convert%2A> 和 <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> 方法。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Data.IMultiValueConverter" />
    <altmember cref="T:System.Windows.Data.ValueConversionAttribute" />
  </Docs>
  <Members>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public object Convert (object value, Type targetType, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Convert(object value, class System.Type targetType, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Convert (value As Object, targetType As Type, parameter As Object, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Convert(System::Object ^ value, Type ^ targetType, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member Convert : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj" Usage="iValueConverter.Convert (value, targetType, parameter, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">绑定源生成的值。</param>
        <param name="targetType">绑定目标属性的类型。</param>
        <param name="parameter">要使用的转换器参数。</param>
        <param name="culture">要用在转换器中的区域性。</param>
        <summary>转换值。</summary>
        <returns>转换后的值。 如果该方法返回 <see langword="null" />，则使用有效的 null 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 数据绑定引擎在将值从绑定源传播到绑定目标时会调用此方法。  
  
 数据绑定引擎不会捕获由用户提供的转换器引发的异常。 方法所引发的任何异常 <xref:System.Windows.Data.IValueConverter.Convert%2A> ，或方法调用的方法所引发的任何未捕获异常 <xref:System.Windows.Data.IValueConverter.Convert%2A> 均被视为运行时错误。 通过返回来处理预期问题 <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType> 。  
  
 的返回值 <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType> 指示转换器没有生成值，并且绑定将使用 <xref:System.Windows.Data.BindingBase.FallbackValue%2A> （如果可用）或默认值。  
  
 返回值 <xref:System.Windows.Data.Binding.DoNothing?displayProperty=nameWithType> 指示绑定不传输值或使用 <xref:System.Windows.Data.BindingBase.FallbackValue%2A> 或默认值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertBack">
      <MemberSignature Language="C#" Value="public object ConvertBack (object value, Type targetType, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertBack(object value, class System.Type targetType, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertBack (value As Object, targetType As Type, parameter As Object, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertBack(System::Object ^ value, Type ^ targetType, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member ConvertBack : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj" Usage="iValueConverter.ConvertBack (value, targetType, parameter, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">绑定目标生成的值。</param>
        <param name="targetType">要转换为的类型。</param>
        <param name="parameter">要使用的转换器参数。</param>
        <param name="culture">要用在转换器中的区域性。</param>
        <summary>转换值。</summary>
        <returns>转换后的值。 如果该方法返回 <see langword="null" />，则使用有效的 null 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 数据绑定引擎在将值从绑定目标传播到绑定源时调用此方法。  
  
 此方法的实现必须是方法的反向实现 <xref:System.Windows.Data.IValueConverter.Convert%2A> 。  
  
 数据绑定引擎不会捕获由用户提供的转换器引发的异常。 方法所引发的任何异常 <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> ，或方法调用的方法所引发的任何未捕获异常 <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> 均被视为运行时错误。 通过返回来处理预期 <xref:System.Windows.DependencyProperty> 问题。 <xref:System.Windows.DependencyProperty.UnsetValue>  
  
 的返回值 <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType> 指示转换器没有生成值，并且绑定将使用 <xref:System.Windows.Data.BindingBase.FallbackValue%2A> （如果可用）或默认值。  
  
 返回值 <xref:System.Windows.Data.Binding.DoNothing?displayProperty=nameWithType> 指示绑定不传输值或使用 <xref:System.Windows.Data.BindingBase.FallbackValue%2A> 或默认值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
