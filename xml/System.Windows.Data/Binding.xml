<Type Name="Binding" FullName="System.Windows.Data.Binding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a14d08acddb91319d8d8840d52028fa04ee407ce" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83962260" /></Metadata><TypeSignature Language="C#" Value="public class Binding : System.Windows.Data.BindingBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Binding extends System.Windows.Data.BindingBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.Binding" />
  <TypeSignature Language="VB.NET" Value="Public Class Binding&#xA;Inherits BindingBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class Binding : System::Windows::Data::BindingBase" />
  <TypeSignature Language="F#" Value="type Binding = class&#xA;    inherit BindingBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Data.BindingBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="3cd41-101">提供对绑定定义的高级访问，该绑定连接绑定目标对象（通常为 WPF 元素）的属性和任何数据源（例如数据库、XML 文件，或包含数据的任何对象）。</span><span class="sxs-lookup"><span data-stu-id="3cd41-101">Provides high-level access to the definition of a binding, which connects the properties of binding target objects (typically, WPF elements), and any data source (for example, a database, an XML file, or any object that contains data).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] <span data-ttu-id="3cd41-102">数据绑定为应用程序呈现数据并与数据交互提供了一种简单且一致的方式。</span><span class="sxs-lookup"><span data-stu-id="3cd41-102">data binding provides a simple and consistent way for applications to present and interact with data.</span></span> <span data-ttu-id="3cd41-103">数据绑定使您可以同步两个不同对象的属性值。</span><span class="sxs-lookup"><span data-stu-id="3cd41-103">Data binding enables you to synchronize the values of the properties of two different objects.</span></span>  
  
 <span data-ttu-id="3cd41-104">若要建立绑定，请使用 <xref:System.Windows.Data.Binding> 类或继承 <xref:System.Windows.Data.BindingBase>的其他类之一。</span><span class="sxs-lookup"><span data-stu-id="3cd41-104">To establish a binding, use the <xref:System.Windows.Data.Binding> class or one of the other classes that inherit <xref:System.Windows.Data.BindingBase>.</span></span> <span data-ttu-id="3cd41-105">不管要绑定的对象和数据源的性质如何，每个绑定都遵循下图所示的模型。</span><span class="sxs-lookup"><span data-stu-id="3cd41-105">Regardless of what object you are binding and the nature of your data source, each binding follows the model illustrated by the following figure.</span></span>  
  
 <span data-ttu-id="3cd41-106">![基本数据绑定关系图](~/add/media/databindingmostbasic.png "基本数据绑定示意图")</span><span class="sxs-lookup"><span data-stu-id="3cd41-106">![Basic data binding diagram](~/add/media/databindingmostbasic.png "Basic data binding diagram")</span></span>  
  
 <span data-ttu-id="3cd41-107">下图演示了下面的基本 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 数据绑定概念。</span><span class="sxs-lookup"><span data-stu-id="3cd41-107">The figure demonstrates the following fundamental [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding concepts.</span></span>  
  
-   <span data-ttu-id="3cd41-108">每个绑定通常具有以下四个组件：绑定目标对象、目标属性、绑定源以及要使用的绑定源中的值 <xref:System.Windows.Data.Binding.Path%2A>。</span><span class="sxs-lookup"><span data-stu-id="3cd41-108">Each binding typically has these four components: a binding target object, a target property, a binding source, and a <xref:System.Windows.Data.Binding.Path%2A> to the value in the binding source to use.</span></span> <span data-ttu-id="3cd41-109">例如，如果想要将 <xref:System.Windows.Controls.TextBox> 的内容绑定到 Employee 对象的 Name 属性，则目标对象是 <xref:System.Windows.Controls.TextBox>，目标属性是 <xref:System.Windows.Controls.TextBox.Text%2A> 属性，要使用的值是名称，而源对象是 Employee 对象。</span><span class="sxs-lookup"><span data-stu-id="3cd41-109">For example, if you want to bind the content of a <xref:System.Windows.Controls.TextBox> to the Name property of an Employee object, your target object is the <xref:System.Windows.Controls.TextBox>, the target property is the <xref:System.Windows.Controls.TextBox.Text%2A> property, the value to use is Name, and the source object is the Employee object.</span></span>  
  
-   <span data-ttu-id="3cd41-110">目标属性必须为依赖属性。</span><span class="sxs-lookup"><span data-stu-id="3cd41-110">The target property must be a dependency property.</span></span> <span data-ttu-id="3cd41-111">这也意味着无法绑定字段。</span><span class="sxs-lookup"><span data-stu-id="3cd41-111">This also means that you cannot bind a field.</span></span> <span data-ttu-id="3cd41-112"><xref:System.Windows.UIElement> 对象的大多数属性都是依赖属性，但大多数依赖属性（只读属性除外）默认支持数据绑定。</span><span class="sxs-lookup"><span data-stu-id="3cd41-112">Most properties of <xref:System.Windows.UIElement> objects are dependency properties and most dependency properties, except read-only ones, support data binding by default.</span></span> <span data-ttu-id="3cd41-113">（只有 <xref:System.Windows.DependencyObject> 类型才能定义依赖属性，并且所有 <xref:System.Windows.UIElement> 对象都派生自 <xref:System.Windows.DependencyObject>。）</span><span class="sxs-lookup"><span data-stu-id="3cd41-113">(Only <xref:System.Windows.DependencyObject> types can define dependency properties and all <xref:System.Windows.UIElement> objects derive from <xref:System.Windows.DependencyObject>.)</span></span>  
  
-   <span data-ttu-id="3cd41-114">尽管图中并未指出，但请注意，绑定源对象并不限于自定义 [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] 对象。</span><span class="sxs-lookup"><span data-stu-id="3cd41-114">Although not specified in the figure, it should be noted that the binding source object is not restricted to being a custom [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="3cd41-115">数据绑定支持 [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] 对象和 [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] 形式的数据。</span><span class="sxs-lookup"><span data-stu-id="3cd41-115">data binding supports data in the form of [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] objects and [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)].</span></span> <span data-ttu-id="3cd41-116">为了提供一些示例，绑定源可以是 <xref:System.Windows.UIElement>、任何列表对象、与 [!INCLUDE[TLA#tla_adonet](~/includes/tlasharptla-adonet-md.md)] 数据或 Web 服务相关联的 [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] 对象或包含 [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] 数据的 XmlNode。</span><span class="sxs-lookup"><span data-stu-id="3cd41-116">To provide some examples, your binding source may be a <xref:System.Windows.UIElement>, any list object, a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object that is associated with [!INCLUDE[TLA#tla_adonet](~/includes/tlasharptla-adonet-md.md)] data or Web Services, or an XmlNode that contains your [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] data.</span></span>  
  
 <span data-ttu-id="3cd41-117">使用 <xref:System.Windows.Data.Binding.Mode%2A> 属性指定数据流的方向。</span><span class="sxs-lookup"><span data-stu-id="3cd41-117">Use the <xref:System.Windows.Data.Binding.Mode%2A> property to specify the direction of the data flow.</span></span> <span data-ttu-id="3cd41-118">若要检测单向或双向绑定中的源更改，源必须实现适当的属性更改通知机制，例如 <xref:System.ComponentModel.INotifyPropertyChanged>。</span><span class="sxs-lookup"><span data-stu-id="3cd41-118">To detect source changes in one-way or two-way bindings, the source must implement a suitable property change notification mechanism such as <xref:System.ComponentModel.INotifyPropertyChanged>.</span></span> <span data-ttu-id="3cd41-119">有关示例，请参阅[如何：实现属性更改通知](/dotnet/framework/wpf/data/how-to-implement-property-change-notification)。</span><span class="sxs-lookup"><span data-stu-id="3cd41-119">For an example, see [How to: Implement Property Change Notification](/dotnet/framework/wpf/data/how-to-implement-property-change-notification).</span></span> <span data-ttu-id="3cd41-120"><xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> 属性指定源更新的时间。</span><span class="sxs-lookup"><span data-stu-id="3cd41-120">The <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property specifies the timing of source updates.</span></span> <span data-ttu-id="3cd41-121">有关详细信息，请参阅[数据绑定概述](/dotnet/framework/wpf/data/data-binding-overview)中的 "基本数据绑定概念"。</span><span class="sxs-lookup"><span data-stu-id="3cd41-121">For more information, see "Basic Data Binding Concepts" in [Data Binding Overview](/dotnet/framework/wpf/data/data-binding-overview).</span></span>  
  
<a name="xamlAttributeUsage_PriorityBinding"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="3cd41-122">XAML 特性用法</span><span class="sxs-lookup"><span data-stu-id="3cd41-122">XAML Attribute Usage</span></span>  
  
```  
<object property="{Binding  declaration}"/>  
```  
  
<a name="xamlValues_PriorityBinding"></a>   
## <a name="xaml-values"></a><span data-ttu-id="3cd41-123">XAML 值</span><span class="sxs-lookup"><span data-stu-id="3cd41-123">XAML Values</span></span>  
 <span data-ttu-id="3cd41-124">declaration</span><span class="sxs-lookup"><span data-stu-id="3cd41-124">*declaration*</span></span>  
 <span data-ttu-id="3cd41-125">零个或多个由逗号（，）分隔的属性赋值子句。</span><span class="sxs-lookup"><span data-stu-id="3cd41-125">Zero or more attribute-assignment clauses separated by commas (,).</span></span> <span data-ttu-id="3cd41-126">有关详细信息，请参阅[绑定标记扩展](/dotnet/framework/wpf/advanced/binding-markup-extension)或[绑定声明概述](/dotnet/framework/wpf/data/binding-declarations-overview)。</span><span class="sxs-lookup"><span data-stu-id="3cd41-126">For more information, see [Binding Markup Extension](/dotnet/framework/wpf/advanced/binding-markup-extension) or [Binding Declarations Overview](/dotnet/framework/wpf/data/binding-declarations-overview).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Data.MultiBinding" />
    <altmember cref="T:System.Windows.Data.PriorityBinding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3cd41-127">初始化 <see cref="T:System.Windows.Data.Binding" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="3cd41-127">Initializes a new instance of the <see cref="T:System.Windows.Data.Binding" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3cd41-128">初始化 <see cref="T:System.Windows.Data.Binding" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="3cd41-128">Initializes a new instance of the <see cref="T:System.Windows.Data.Binding" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Windows.Data.Binding : string -&gt; System.Windows.Data.Binding" Usage="new System.Windows.Data.Binding path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="3cd41-129">绑定的初始 <see cref="P:System.Windows.Data.Binding.Path" />。</span><span class="sxs-lookup"><span data-stu-id="3cd41-129">The initial <see cref="P:System.Windows.Data.Binding.Path" /> for the binding.</span></span></param>
        <summary><span data-ttu-id="3cd41-130">使用初始路径初始化 <see cref="T:System.Windows.Data.Binding" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="3cd41-130">Initializes a new instance of the <see cref="T:System.Windows.Data.Binding" /> class with an initial path.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSourceUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void AddSourceUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddSourceUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddSourceUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddSourceUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddSourceUpdatedHandler : System.Windows.DependencyObject * EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; -&gt; unit" Usage="System.Windows.Data.Binding.AddSourceUpdatedHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd41-131">侦听事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="3cd41-131">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd41-132">要添加的处理程序。</span><span class="sxs-lookup"><span data-stu-id="3cd41-132">The handler to add.</span></span></param>
        <summary><span data-ttu-id="3cd41-133">为 <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 附加事件添加处理程序。</span><span class="sxs-lookup"><span data-stu-id="3cd41-133">Adds a handler for the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd41-134">此方法支持在 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]中使用附加的事件。</span><span class="sxs-lookup"><span data-stu-id="3cd41-134">This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTargetUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void AddTargetUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddTargetUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddTargetUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddTargetUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddTargetUpdatedHandler : System.Windows.DependencyObject * EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; -&gt; unit" Usage="System.Windows.Data.Binding.AddTargetUpdatedHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd41-135">侦听事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="3cd41-135">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd41-136">要添加的处理程序。</span><span class="sxs-lookup"><span data-stu-id="3cd41-136">The handler to add.</span></span></param>
        <summary><span data-ttu-id="3cd41-137">为 <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 附加事件添加处理程序。</span><span class="sxs-lookup"><span data-stu-id="3cd41-137">Adds a handler for the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd41-138">此方法支持在 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]中使用附加的事件。</span><span class="sxs-lookup"><span data-stu-id="3cd41-138">This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncState">
      <MemberSignature Language="C#" Value="public object AsyncState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AsyncState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.AsyncState" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AsyncState { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncState : obj with get, set" Usage="System.Windows.Data.Binding.AsyncState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd41-139">获取或设置传递给异步数据调度程序的不透明数据。</span><span class="sxs-lookup"><span data-stu-id="3cd41-139">Gets or sets opaque data passed to the asynchronous data dispatcher.</span></span></summary>
        <value><span data-ttu-id="3cd41-140">传递给异步数据调度程序的数据。</span><span class="sxs-lookup"><span data-stu-id="3cd41-140">Data passed to the asynchronous data dispatcher.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Data.Binding.IsAsync" />
        <altmember cref="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous" />
        <altmember cref="P:System.Windows.Data.XmlDataProvider.IsAsynchronous" />
      </Docs>
    </Member>
    <Member MemberName="BindsDirectlyToSource">
      <MemberSignature Language="C#" Value="public bool BindsDirectlyToSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BindsDirectlyToSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.BindsDirectlyToSource" />
      <MemberSignature Language="VB.NET" Value="Public Property BindsDirectlyToSource As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BindsDirectlyToSource { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BindsDirectlyToSource : bool with get, set" Usage="System.Windows.Data.Binding.BindsDirectlyToSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd41-141">获取或设置一个值，该值指示是相对于数据项还是 <see cref="T:System.Windows.Data.DataSourceProvider" /> 对象计算 <see cref="P:System.Windows.Data.Binding.Path" />。</span><span class="sxs-lookup"><span data-stu-id="3cd41-141">Gets or sets a value that indicates whether to evaluate the <see cref="P:System.Windows.Data.Binding.Path" /> relative to the data item or the <see cref="T:System.Windows.Data.DataSourceProvider" /> object.</span></span></summary>
        <value><span data-ttu-id="3cd41-142">若要相对于数据项自身计算路径，则为 <see langword="false" />；否则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="3cd41-142"><see langword="false" /> to evaluate the path relative to the data item itself; otherwise, <see langword="true" />.</span></span> <span data-ttu-id="3cd41-143">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3cd41-143">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd41-144">正常行为（`false`此属性时）包含 <xref:System.Windows.Data.DataSourceProvider> 对象的特殊处理。</span><span class="sxs-lookup"><span data-stu-id="3cd41-144">The normal behavior (when this property is `false`) includes special treatment for <xref:System.Windows.Data.DataSourceProvider> objects.</span></span> <span data-ttu-id="3cd41-145">在这种情况下，绑定引擎会相对于从 <xref:System.Windows.Data.DataSourceProvider.Data%2A> 属性获取的对象来计算 <xref:System.Windows.Data.Binding.Path%2A>。</span><span class="sxs-lookup"><span data-stu-id="3cd41-145">In this case, the binding engine evaluates the <xref:System.Windows.Data.Binding.Path%2A> relative to the object obtained from the <xref:System.Windows.Data.DataSourceProvider.Data%2A> property.</span></span> <span data-ttu-id="3cd41-146">此外，绑定还侦听 <xref:System.Windows.Data.DataSourceProvider.DataChanged> 事件，并相应地做出反应。</span><span class="sxs-lookup"><span data-stu-id="3cd41-146">In addition, the binding listens for the <xref:System.Windows.Data.DataSourceProvider.DataChanged> event and reacts accordingly.</span></span> <span data-ttu-id="3cd41-147">将此属性设置为 `true` 重写此行为，并提供对 <xref:System.Windows.Data.DataSourceProvider> 对象本身的属性的绑定访问。</span><span class="sxs-lookup"><span data-stu-id="3cd41-147">Setting this property to `true` overrides this behavior and gives the binding access to properties of the <xref:System.Windows.Data.DataSourceProvider> object itself.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.ObjectDataProvider" />
        <altmember cref="T:System.Windows.Data.XmlDataProvider" />
      </Docs>
    </Member>
    <Member MemberName="Converter">
      <MemberSignature Language="C#" Value="public System.Windows.Data.IValueConverter Converter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.IValueConverter Converter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Converter" />
      <MemberSignature Language="VB.NET" Value="Public Property Converter As IValueConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::IValueConverter ^ Converter { System::Windows::Data::IValueConverter ^ get(); void set(System::Windows::Data::IValueConverter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Converter : System.Windows.Data.IValueConverter with get, set" Usage="System.Windows.Data.Binding.Converter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.IValueConverter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd41-148">获取或设置要使用的转换器。</span><span class="sxs-lookup"><span data-stu-id="3cd41-148">Gets or sets the converter to use.</span></span></summary>
        <value><span data-ttu-id="3cd41-149">一个 <see cref="T:System.Windows.Data.IValueConverter" /> 类型的值。</span><span class="sxs-lookup"><span data-stu-id="3cd41-149">A value of type <see cref="T:System.Windows.Data.IValueConverter" />.</span></span> <span data-ttu-id="3cd41-150">默认为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3cd41-150">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd41-151">绑定隐式使用默认转换器，该转换器尝试在源值和目标值之间执行类型转换。</span><span class="sxs-lookup"><span data-stu-id="3cd41-151">A binding implicitly uses a default converter that tries to do a type conversion between the source value and the target value.</span></span> <span data-ttu-id="3cd41-152">如果不能进行转换，默认转换器会返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="3cd41-152">If a conversion cannot be made, the default converter returns `null`.</span></span>  
  
 <span data-ttu-id="3cd41-153">如果要将自定义值转换器与绑定相关联，则应创建一个类来实现 <xref:System.Windows.Data.IValueConverter> 接口，并为 <xref:System.Windows.Data.IValueConverter.Convert%2A> 和 <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> 方法提供实现。</span><span class="sxs-lookup"><span data-stu-id="3cd41-153">If you want to associate a custom value converter with a binding, you should create a class that implements the <xref:System.Windows.Data.IValueConverter> interface and supply implementations for the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods.</span></span> <span data-ttu-id="3cd41-154">值转换器可将数据从一种类型更改为另一种类型，在区域性详细信息（如字符集）之间进行转换，或修改其演示的其他方面。</span><span class="sxs-lookup"><span data-stu-id="3cd41-154">Value converters can change data from one type to another, translate between cultural details such as character sets, or modify other aspects of their presentation.</span></span> <span data-ttu-id="3cd41-155">有关典型转换方案的示例，请参阅[数据绑定概述](/dotnet/framework/wpf/data/data-binding-overview)中的 "数据转换"。</span><span class="sxs-lookup"><span data-stu-id="3cd41-155">For examples of typical conversion scenarios, see "Data Conversion" in the [Data Binding Overview](/dotnet/framework/wpf/data/data-binding-overview).</span></span>  
  
<a name="xamlAttributeUsage_Converter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="3cd41-156">XAML 特性用法</span><span class="sxs-lookup"><span data-stu-id="3cd41-156">XAML Attribute Usage</span></span>  
  
```  
<object Converter="myConverter"/>  
```  
  
<a name="xamlValues_Converter"></a>   
## <a name="xaml-values"></a><span data-ttu-id="3cd41-157">XAML 值</span><span class="sxs-lookup"><span data-stu-id="3cd41-157">XAML Values</span></span>  
 <span data-ttu-id="3cd41-158">*myConverter*</span><span class="sxs-lookup"><span data-stu-id="3cd41-158">*myConverter*</span></span>  
 <span data-ttu-id="3cd41-159">对实现 <xref:System.Windows.Data.IValueConverter> 接口的类的资源引用，其中包括 <xref:System.Windows.Data.IValueConverter.Convert%2A> 和 <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> 方法的实现。</span><span class="sxs-lookup"><span data-stu-id="3cd41-159">A resource reference to a class that implements the <xref:System.Windows.Data.IValueConverter> interface, which includes implementations of the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods.</span></span> <span data-ttu-id="3cd41-160">若要引用值转换器，请使用[StaticResource 标记扩展](/dotnet/framework/wpf/advanced/staticresource-markup-extension)。</span><span class="sxs-lookup"><span data-stu-id="3cd41-160">To refer to a value converter, use the [StaticResource Markup Extension](/dotnet/framework/wpf/advanced/staticresource-markup-extension).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterCulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo ConverterCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo ConverterCulture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ConverterCulture" />
      <MemberSignature Language="VB.NET" Value="Public Property ConverterCulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ ConverterCulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConverterCulture : System.Globalization.CultureInfo with get, set" Usage="System.Windows.Data.Binding.ConverterCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.CultureInfoIetfLanguageTagConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd41-161">获取或设置计算转换器要使用的区域性。</span><span class="sxs-lookup"><span data-stu-id="3cd41-161">Gets or sets the culture in which to evaluate the converter.</span></span></summary>
        <value><span data-ttu-id="3cd41-162">默认为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3cd41-162">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd41-163">如果未设置此属性，则绑定引擎使用绑定目标对象的 `Language` 属性。</span><span class="sxs-lookup"><span data-stu-id="3cd41-163">If you do not set this property, the binding engine uses the `Language` property of the binding target object.</span></span> <span data-ttu-id="3cd41-164">在 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 此值默认为 "en-us"，或者从页面的根元素（或任何元素）继承值（如果已显式设置了一个）。</span><span class="sxs-lookup"><span data-stu-id="3cd41-164">In [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] this defaults to "en-US" or inherits the value from the root element (or any element) of the page, if one has been explicitly set.</span></span>  
  
 <span data-ttu-id="3cd41-165">有关数据转换的信息，请参阅[数据绑定概述](/dotnet/framework/wpf/data/data-binding-overview)中的 "数据转换" 部分。</span><span class="sxs-lookup"><span data-stu-id="3cd41-165">For information about data conversion, see the Data Conversion section in the [Data Binding Overview](/dotnet/framework/wpf/data/data-binding-overview).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterParameter">
      <MemberSignature Language="C#" Value="public object ConverterParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ConverterParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ConverterParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property ConverterParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ConverterParameter { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConverterParameter : obj with get, set" Usage="System.Windows.Data.Binding.ConverterParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd41-166">获取或设置要传递给 <see cref="P:System.Windows.Data.Binding.Converter" /> 的参数。</span><span class="sxs-lookup"><span data-stu-id="3cd41-166">Gets or sets the parameter to pass to the <see cref="P:System.Windows.Data.Binding.Converter" />.</span></span></summary>
        <value><span data-ttu-id="3cd41-167">要传递给 <see cref="P:System.Windows.Data.Binding.Converter" /> 的参数。</span><span class="sxs-lookup"><span data-stu-id="3cd41-167">The parameter to pass to the <see cref="P:System.Windows.Data.Binding.Converter" />.</span></span> <span data-ttu-id="3cd41-168">默认为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3cd41-168">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd41-169">您可以使用 <xref:System.Windows.Data.Binding.ConverterParameter%2A> 属性指定如何转换对象。</span><span class="sxs-lookup"><span data-stu-id="3cd41-169">You can use the <xref:System.Windows.Data.Binding.ConverterParameter%2A> property to specify how an object is converted.</span></span>  <span data-ttu-id="3cd41-170">此属性将附加信息传递给你对绑定使用的转换器。</span><span class="sxs-lookup"><span data-stu-id="3cd41-170">This property passes additional information to a converter that you use on a binding.</span></span>  <span data-ttu-id="3cd41-171">当指定 <xref:System.Windows.Data.Binding.ConverterParameter%2A>时，该值将作为 `parameter` 参数传递到 <xref:System.Windows.Data.IValueConverter.Convert%2A> 和 <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="3cd41-171">When you specify a <xref:System.Windows.Data.Binding.ConverterParameter%2A>, the value is passed to the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods as the `parameter` parameter.</span></span>  
  
 <span data-ttu-id="3cd41-172">有关示例，请参阅[如何：根据绑定项列表生成值](/dotnet/framework/wpf/data/how-to-produce-a-value-based-on-a-list-of-bound-items)。</span><span class="sxs-lookup"><span data-stu-id="3cd41-172">For an example, see [How to: Produce a Value Based on a List of Bound Items](/dotnet/framework/wpf/data/how-to-produce-a-value-based-on-a-list-of-bound-items).</span></span> <span data-ttu-id="3cd41-173">该示例演示了 <xref:System.Windows.Data.IMultiValueConverter> 的实现，但使用仍适用。</span><span class="sxs-lookup"><span data-stu-id="3cd41-173">That example shows an implementation of an <xref:System.Windows.Data.IMultiValueConverter> but the usage still applies.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoNothing">
      <MemberSignature Language="C#" Value="public static readonly object DoNothing;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly object DoNothing" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.DoNothing" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DoNothing As Object " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Object ^ DoNothing;" />
      <MemberSignature Language="F#" Value=" staticval mutable DoNothing : obj" Usage="System.Windows.Data.Binding.DoNothing" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd41-174">用作返回值以指示绑定引擎不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="3cd41-174">Used as a returned value to instruct the binding engine not to perform any action.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd41-175">绑定源属性或转换器可以返回 <xref:System.Windows.Data.Binding.DoNothing?displayProperty=nameWithType> 以指示绑定引擎不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="3cd41-175">A binding source property or a converter can return <xref:System.Windows.Data.Binding.DoNothing?displayProperty=nameWithType> to instruct the binding engine not to perform any action.</span></span> <span data-ttu-id="3cd41-176">例如，若要指示绑定引擎不将值传输到绑定目标，则不会移动到 <xref:System.Windows.Data.PriorityBinding>中的下一个 <xref:System.Windows.Data.Binding>，也不要使用 `FallBackValue` 或默认值。</span><span class="sxs-lookup"><span data-stu-id="3cd41-176">For example, to instruct the binding engine not to transfer a value to the binding target, not to move to the next <xref:System.Windows.Data.Binding> in a <xref:System.Windows.Data.PriorityBinding>, or not to use the `FallBackValue` or default value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ElementName : string with get, set" Usage="System.Windows.Data.Binding.ElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd41-177">获取或设置要用作绑定源对象的元素的名称。</span><span class="sxs-lookup"><span data-stu-id="3cd41-177">Gets or sets the name of the element to use as the binding source object.</span></span></summary>
        <value><span data-ttu-id="3cd41-178">相关元素的 <see langword="Name" /> 属性或 [x:Name Directive](/dotnet/framework/xaml-services/x-name-directive) 的值。</span><span class="sxs-lookup"><span data-stu-id="3cd41-178">The value of the <see langword="Name" /> property or [x:Name Directive](/dotnet/framework/xaml-services/x-name-directive) of the element of interest.</span></span> <span data-ttu-id="3cd41-179">只有通过 <see langword="RegisterName" /> 将元素注册到适当的 <see cref="T:System.Windows.NameScope" /> 后，才能在代码中引用这些元素。</span><span class="sxs-lookup"><span data-stu-id="3cd41-179">You can refer to elements in code only if they are registered to the appropriate <see cref="T:System.Windows.NameScope" /> through <see langword="RegisterName" />.</span></span> <span data-ttu-id="3cd41-180">有关详细信息，请参阅 [WPF XAML Namescopes](/dotnet/framework/wpf/advanced/wpf-xaml-namescopes)。</span><span class="sxs-lookup"><span data-stu-id="3cd41-180">For more information, see [WPF XAML Namescopes](/dotnet/framework/wpf/advanced/wpf-xaml-namescopes).</span></span>  
  
<span data-ttu-id="3cd41-181">默认为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3cd41-181">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd41-182">如果要绑定到应用程序中的另一个元素的属性，则此属性很有用。</span><span class="sxs-lookup"><span data-stu-id="3cd41-182">This property is useful when you want to bind to the property of another element in your application.</span></span> <span data-ttu-id="3cd41-183">例如，如果想要使用 <xref:System.Windows.Controls.Slider> 来控制应用程序中另一个控件的高度，或者要将控件的 <xref:System.Windows.Controls.ContentControl.Content%2A> 绑定到 <xref:System.Windows.Controls.ListBox> 控件的 <xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="3cd41-183">For example, if you want to use a <xref:System.Windows.Controls.Slider> to control the height of another control in your application, or if you want to bind the <xref:System.Windows.Controls.ContentControl.Content%2A> of your control to the <xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A> property of your <xref:System.Windows.Controls.ListBox> control.</span></span>  
  
 <span data-ttu-id="3cd41-184">默认情况下，绑定将继承 `DataContext` 属性指定的数据上下文（如果已设置）。</span><span class="sxs-lookup"><span data-stu-id="3cd41-184">By default, bindings inherit the data context specified by the `DataContext` property, if one has been set.</span></span> <span data-ttu-id="3cd41-185">不过，<xref:System.Windows.Data.Binding.ElementName%2A> 属性是您显式设置 <xref:System.Windows.Data.Binding> 源并重写继承的数据上下文的方式之一。</span><span class="sxs-lookup"><span data-stu-id="3cd41-185">However, the <xref:System.Windows.Data.Binding.ElementName%2A> property is one of the ways you can explicitly set the source of a <xref:System.Windows.Data.Binding> and override the inherited data context.</span></span> <span data-ttu-id="3cd41-186">有关详细信息，请参阅[如何：指定绑定源](/dotnet/framework/wpf/data/how-to-specify-the-binding-source)。</span><span class="sxs-lookup"><span data-stu-id="3cd41-186">For more information, see [How to: Specify the Binding Source](/dotnet/framework/wpf/data/how-to-specify-the-binding-source).</span></span>  
  
 <span data-ttu-id="3cd41-187">使用 <xref:System.Windows.Data.Binding> 类的 <xref:System.Windows.Data.Binding.Source%2A> 和 <xref:System.Windows.Data.Binding.RelativeSource%2A> 属性，还可以显式设置绑定的源。</span><span class="sxs-lookup"><span data-stu-id="3cd41-187">The <xref:System.Windows.Data.Binding.Source%2A> and <xref:System.Windows.Data.Binding.RelativeSource%2A> properties of the <xref:System.Windows.Data.Binding> class also enable you to set the source of the binding explicitly.</span></span> <span data-ttu-id="3cd41-188">但是，只应为每个绑定设置三个属性中的一个（<xref:System.Windows.Data.Binding.ElementName%2A>、<xref:System.Windows.Data.Binding.Source%2A>和 <xref:System.Windows.Data.Binding.RelativeSource%2A>），否则可能会发生冲突。</span><span class="sxs-lookup"><span data-stu-id="3cd41-188">However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict might occur.</span></span> <span data-ttu-id="3cd41-189">如果存在绑定源冲突，则此属性将引发异常。</span><span class="sxs-lookup"><span data-stu-id="3cd41-189">This property throws an exception if there is a binding source conflict.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXmlNamespaceManager">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlNamespaceManager GetXmlNamespaceManager (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlNamespaceManager GetXmlNamespaceManager(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetXmlNamespaceManager (target As DependencyObject) As XmlNamespaceManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlNamespaceManager ^ GetXmlNamespaceManager(System::Windows::DependencyObject ^ target);" />
      <MemberSignature Language="F#" Value="static member GetXmlNamespaceManager : System.Windows.DependencyObject -&gt; System.Xml.XmlNamespaceManager" Usage="System.Windows.Data.Binding.GetXmlNamespaceManager target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNamespaceManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="3cd41-190">要从中获取命名空间信息的对象。</span><span class="sxs-lookup"><span data-stu-id="3cd41-190">The object from which to get namespace information.</span></span></param>
        <summary><span data-ttu-id="3cd41-191">返回附加到指定对象的绑定所使用的 [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] 命名空间管理器对象。</span><span class="sxs-lookup"><span data-stu-id="3cd41-191">Returns an [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] namespace manager object used by the binding attached to the specified object.</span></span></summary>
        <returns><span data-ttu-id="3cd41-192">一个返回的对象，用于查看与传递的对象元素上的绑定有关的 [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] 命名空间。</span><span class="sxs-lookup"><span data-stu-id="3cd41-192">A returned object used for viewing [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] namespaces that relate to the binding on the passed object element.</span></span> <span data-ttu-id="3cd41-193">此对象应转换为 <see cref="T:System.Xml.XmlNamespaceManager" />。</span><span class="sxs-lookup"><span data-stu-id="3cd41-193">This object should be cast as <see cref="T:System.Xml.XmlNamespaceManager" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd41-194">此方法支持 <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A> 附加属性的附加属性用法。</span><span class="sxs-lookup"><span data-stu-id="3cd41-194">This method supports attached property usage for the <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A> attached property.</span></span>  
  
 <span data-ttu-id="3cd41-195">仅当绑定中的数据来自 [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] 绑定源（<xref:System.Windows.Data.XmlDataProvider> 对象）时，[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] 命名空间管理器才相关。</span><span class="sxs-lookup"><span data-stu-id="3cd41-195">[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] namespace managers are relevant only if the data in the binding came from an [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] binding source (<xref:System.Windows.Data.XmlDataProvider> object).</span></span>  
  
 <span data-ttu-id="3cd41-196">如果命名空间管理器不是专门应用于原始数据源创建或随后对绑定调用 <xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A>，则此方法将返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="3cd41-196">If a namespace manager was not specifically applied either in the original data source creation or by subsequently calling <xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A> on the binding, then this method will return `null`.</span></span>  
  
 <span data-ttu-id="3cd41-197">如果绑定后的数据未 [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]，则此方法将始终返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="3cd41-197">This method will always return `null` if the data behind the binding is not [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3cd41-198"><paramref name="target" /> 参数不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3cd41-198">The <paramref name="target" /> parameter cannot be <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IndexerName">
      <MemberSignature Language="C#" Value="public const string IndexerName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string IndexerName" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.IndexerName" />
      <MemberSignature Language="VB.NET" Value="Public Const IndexerName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ IndexerName;" />
      <MemberSignature Language="F#" Value="val mutable IndexerName : string" Usage="System.Windows.Data.Binding.IndexerName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd41-199">用作 <see cref="P:System.ComponentModel.PropertyChangedEventArgs.PropertyName" /> 的 <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> 以指示索引器属性已更改。</span><span class="sxs-lookup"><span data-stu-id="3cd41-199">Used as the <see cref="P:System.ComponentModel.PropertyChangedEventArgs.PropertyName" /> of <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> to indicate that an indexer property has changed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsync">
      <MemberSignature Language="C#" Value="public bool IsAsync { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAsync" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.IsAsync" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAsync As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAsync { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsAsync : bool with get, set" Usage="System.Windows.Data.Binding.IsAsync" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd41-200">获取或设置一个值，该值表示 <see cref="T:System.Windows.Data.Binding" /> 是否应异步获取和设置值。</span><span class="sxs-lookup"><span data-stu-id="3cd41-200">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Data.Binding" /> should get and set values asynchronously.</span></span></summary>
        <value><span data-ttu-id="3cd41-201">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3cd41-201">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd41-202">当绑定源属性的 `get` 访问器可能需要很长时间时，请使用 <xref:System.Windows.Data.Binding.IsAsync%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="3cd41-202">Use the <xref:System.Windows.Data.Binding.IsAsync%2A> property when the `get` accessor of your binding source property might take a long time.</span></span> <span data-ttu-id="3cd41-203">一个示例是具有从 Web 下载的 `get` 访问器的图像属性。</span><span class="sxs-lookup"><span data-stu-id="3cd41-203">One example is an image property with a `get` accessor that downloads from the Web.</span></span> <span data-ttu-id="3cd41-204">将 <xref:System.Windows.Data.Binding.IsAsync%2A> 设置为 `true` 可避免在下载过程中阻止 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="3cd41-204">Setting <xref:System.Windows.Data.Binding.IsAsync%2A> to `true` avoids blocking the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] while the download occurs.</span></span>  
  
 <span data-ttu-id="3cd41-205">在等待值到达时，绑定将报告 <xref:System.Windows.Data.BindingBase.FallbackValue%2A>（如果有）或绑定目标属性的默认值。</span><span class="sxs-lookup"><span data-stu-id="3cd41-205">While waiting for the value to arrive, the binding reports the <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, if one is available, or the default value of the binding target property.</span></span>  
  
 <span data-ttu-id="3cd41-206">但是，在某些情况下，需要使用 <xref:System.Windows.Data.Binding.IsAsync%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="3cd41-206">However, there should not be many scenarios where you need to use the <xref:System.Windows.Data.Binding.IsAsync%2A> property.</span></span> <span data-ttu-id="3cd41-207">[!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)] 准则建议不要定义比字段集慢的数量级顺序的属性。</span><span class="sxs-lookup"><span data-stu-id="3cd41-207">The [!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)] guidelines recommend against defining properties that are orders of magnitude slower than a field set would be.</span></span> <span data-ttu-id="3cd41-208">创建类时，请考虑处理 `get` 访问器外部的极其缓慢的操作并缓存结果。</span><span class="sxs-lookup"><span data-stu-id="3cd41-208">When you are creating your class, consider handling extremely slow operations outside of the `get` accessor and caching the result.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.AsyncState" />
        <altmember cref="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous" />
        <altmember cref="P:System.Windows.Data.XmlDataProvider.IsAsynchronous" />
        <altmember cref="T:System.Windows.PropertyChangedCallback" />
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.BindingMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As BindingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingMode Mode { System::Windows::Data::BindingMode get(); void set(System::Windows::Data::BindingMode value); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.Windows.Data.BindingMode with get, set" Usage="System.Windows.Data.Binding.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd41-209">获取或设置一个值，该值指示绑定的数据流方向。</span><span class="sxs-lookup"><span data-stu-id="3cd41-209">Gets or sets a value that indicates the direction of the data flow in the binding.</span></span></summary>
        <value><span data-ttu-id="3cd41-210"><see cref="T:System.Windows.Data.BindingMode" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="3cd41-210">One of the <see cref="T:System.Windows.Data.BindingMode" /> values.</span></span> <span data-ttu-id="3cd41-211">默认值为 <see cref="F:System.Windows.Data.BindingMode.Default" />，它返回目标依赖属性的默认绑定模式值。</span><span class="sxs-lookup"><span data-stu-id="3cd41-211">The default is <see cref="F:System.Windows.Data.BindingMode.Default" />, which returns the default binding mode value of the target dependency property.</span></span> <span data-ttu-id="3cd41-212">但是，每个依赖属性的默认值都不同。</span><span class="sxs-lookup"><span data-stu-id="3cd41-212">However, the default value varies for each dependency property.</span></span> <span data-ttu-id="3cd41-213">通常，用户可编辑的控件属性（如文本框和复选框的控件属性）默认为双向绑定，而其他大多数属性默认为单向绑定。</span><span class="sxs-lookup"><span data-stu-id="3cd41-213">In general, user-editable control properties, such as those of text boxes and check boxes, default to two-way bindings, whereas most other properties default to one-way bindings.</span></span>  
  
<span data-ttu-id="3cd41-214">确定依赖属性绑定在默认情况下是单向还是双向的编程方法是：使用 <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> 获取属性的属性元数据，然后检查 <see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /> 属性的布尔值。</span><span class="sxs-lookup"><span data-stu-id="3cd41-214">A programmatic way to determine whether a dependency property binds one-way or two-way by default is to get the property metadata of the property using <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> and then check the Boolean value of the <see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd41-215">若要支持 <xref:System.Windows.Data.BindingMode.OneWay> 和 <xref:System.Windows.Data.BindingMode.TwoWay> 绑定，基础数据必须实现 <xref:System.ComponentModel.INotifyPropertyChanged>。</span><span class="sxs-lookup"><span data-stu-id="3cd41-215">To support <xref:System.Windows.Data.BindingMode.OneWay> and <xref:System.Windows.Data.BindingMode.TwoWay> bindings, the underlying data must implement <xref:System.ComponentModel.INotifyPropertyChanged>.</span></span> <span data-ttu-id="3cd41-216">有关详细信息，请参阅[如何：实现属性更改通知](/dotnet/framework/wpf/data/how-to-implement-property-change-notification)。</span><span class="sxs-lookup"><span data-stu-id="3cd41-216">For details, see [How to: Implement Property Change Notification](/dotnet/framework/wpf/data/how-to-implement-property-change-notification).</span></span>  
  
 <span data-ttu-id="3cd41-217">对于 <xref:System.Windows.Data.BindingMode.TwoWay> 或 <xref:System.Windows.Data.BindingMode.OneWayToSource> 绑定，可以通过设置 <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> 属性来控制目标到源更新。</span><span class="sxs-lookup"><span data-stu-id="3cd41-217">For <xref:System.Windows.Data.BindingMode.TwoWay> or <xref:System.Windows.Data.BindingMode.OneWayToSource> bindings, you can control the target-to-source updates by setting the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property.</span></span> <span data-ttu-id="3cd41-218">有关详细信息，请参阅 <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>。</span><span class="sxs-lookup"><span data-stu-id="3cd41-218">For more information, see <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>.</span></span>  
  
 <span data-ttu-id="3cd41-219">有关不同绑定模式的详细信息，请参阅[数据绑定概述](/dotnet/framework/wpf/data/data-binding-overview)。</span><span class="sxs-lookup"><span data-stu-id="3cd41-219">For more information on the different binding modes, see [Data Binding Overview](/dotnet/framework/wpf/data/data-binding-overview).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyOnSourceUpdated">
      <MemberSignature Language="C#" Value="public bool NotifyOnSourceUpdated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnSourceUpdated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.NotifyOnSourceUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnSourceUpdated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnSourceUpdated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyOnSourceUpdated : bool with get, set" Usage="System.Windows.Data.Binding.NotifyOnSourceUpdated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd41-220">获取或设置一个值，该值指示当值从绑定目标传输到绑定源时是否引发 <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="3cd41-220">Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> event when a value is transferred from the binding target to the binding source.</span></span></summary>
        <value><span data-ttu-id="3cd41-221">如果绑定源值更新时应引发 <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 事件，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3cd41-221"><see langword="true" /> if the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> event should be raised when the binding source value is updated; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3cd41-222">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3cd41-222">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateSource" />
      </Docs>
    </Member>
    <Member MemberName="NotifyOnTargetUpdated">
      <MemberSignature Language="C#" Value="public bool NotifyOnTargetUpdated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnTargetUpdated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.NotifyOnTargetUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnTargetUpdated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnTargetUpdated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyOnTargetUpdated : bool with get, set" Usage="System.Windows.Data.Binding.NotifyOnTargetUpdated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd41-223">获取或设置一个值，该值指示当值从绑定源传输到绑定目标时是否引发 <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="3cd41-223">Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> event when a value is transferred from the binding source to the binding target.</span></span></summary>
        <value><span data-ttu-id="3cd41-224">如果绑定目标值更新时应当引发 <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 事件，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3cd41-224"><see langword="true" /> if the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> event should be raised when the binding target value is updated; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3cd41-225">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3cd41-225">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateTarget" />
      </Docs>
    </Member>
    <Member MemberName="NotifyOnValidationError">
      <MemberSignature Language="C#" Value="public bool NotifyOnValidationError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.NotifyOnValidationError" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnValidationError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyOnValidationError : bool with get, set" Usage="System.Windows.Data.Binding.NotifyOnValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd41-226">获取或设置一个值，该值指示是否对绑定对象引发 <see cref="E:System.Windows.Controls.Validation.Error" /> 附加事件。</span><span class="sxs-lookup"><span data-stu-id="3cd41-226">Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.Controls.Validation.Error" /> attached event on the bound object.</span></span></summary>
        <value><span data-ttu-id="3cd41-227">如果在源更新过程中出现验证错误时应对绑定对象引发<see langword="true" /> 附加事件，则为 <see cref="E:System.Windows.Controls.Validation.Error" /> ；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3cd41-227"><see langword="true" /> if the <see cref="E:System.Windows.Controls.Validation.Error" /> attached event should be raised on the bound object when there is a validation error during source updates; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3cd41-228">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3cd41-228">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd41-229">如果绑定具有与之关联的 <xref:System.Windows.Data.Binding.ValidationRules%2A>，则绑定引擎每次将目标属性值传输到 source 属性时都会检查每个规则。</span><span class="sxs-lookup"><span data-stu-id="3cd41-229">If the binding has <xref:System.Windows.Data.Binding.ValidationRules%2A> associated with it, the binding engine checks each rule each time it transfers the target property value to the source property.</span></span> <span data-ttu-id="3cd41-230">如果规则使某个值失效，则绑定引擎将创建一个 <xref:System.Windows.Controls.ValidationError> 对象并将其添加到 <xref:System.Windows.Controls.Validation>中。<xref:System.Windows.Controls.Validation.Errors%2A></span><span class="sxs-lookup"><span data-stu-id="3cd41-230">If a rule invalidates a value, the binding engine creates a <xref:System.Windows.Controls.ValidationError> object and adds it to the <xref:System.Windows.Controls.Validation>.<xref:System.Windows.Controls.Validation.Errors%2A></span></span> <span data-ttu-id="3cd41-231">绑定对象的集合。</span><span class="sxs-lookup"><span data-stu-id="3cd41-231">collection of the bound object.</span></span> <span data-ttu-id="3cd41-232">如果 <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> 属性不为空，则对象的 <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType> 附加属性设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="3cd41-232">When the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> property is not empty, the <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType> attached property of the object is set to `true`.</span></span> <span data-ttu-id="3cd41-233">如果 <xref:System.Windows.Data.Binding> 的 <xref:System.Windows.Data.Binding.NotifyOnValidationError%2A> 属性设置为 `true`，则绑定引擎将引发对象上的 <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> 附加事件。</span><span class="sxs-lookup"><span data-stu-id="3cd41-233">If the <xref:System.Windows.Data.Binding.NotifyOnValidationError%2A> property of the <xref:System.Windows.Data.Binding> is set to `true`, then the binding engine raises the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> attached event on the object.</span></span>  
  
 <span data-ttu-id="3cd41-234">有关验证过程的详细讨论，请参阅[数据绑定概述](/dotnet/framework/wpf/data/data-binding-overview)中的 "数据验证" 一节。</span><span class="sxs-lookup"><span data-stu-id="3cd41-234">For a detailed discussion of the validation process, see the Data Validation section in the [Data Binding Overview](/dotnet/framework/wpf/data/data-binding-overview).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public System.Windows.PropertyPath Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.PropertyPath Path" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As PropertyPath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::PropertyPath ^ Path { System::Windows::PropertyPath ^ get(); void set(System::Windows::PropertyPath ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : System.Windows.PropertyPath with get, set" Usage="System.Windows.Data.Binding.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PropertyPath</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd41-235">获取或设置绑定源属性的路径。</span><span class="sxs-lookup"><span data-stu-id="3cd41-235">Gets or sets the path to the binding source property.</span></span></summary>
        <value><span data-ttu-id="3cd41-236">绑定源的路径。</span><span class="sxs-lookup"><span data-stu-id="3cd41-236">The path to the binding source.</span></span> <span data-ttu-id="3cd41-237">默认为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3cd41-237">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd41-238">每个绑定通常具有以下四个组件：绑定目标对象、目标属性、绑定源和绑定源中要使用的值的路径。</span><span class="sxs-lookup"><span data-stu-id="3cd41-238">Each binding typically has these four components: a binding target object, a target property, a binding source, and a path to the value in the binding source to use.</span></span> <span data-ttu-id="3cd41-239">有关这些数据绑定概念的详细信息，请参阅[数据绑定概述](/dotnet/framework/wpf/data/data-binding-overview)。</span><span class="sxs-lookup"><span data-stu-id="3cd41-239">For more information about these data binding concepts, see [Data Binding Overview](/dotnet/framework/wpf/data/data-binding-overview).</span></span>  
  
 <span data-ttu-id="3cd41-240">使用 <xref:System.Windows.Data.Binding.Path%2A> 属性指定要绑定到的源值：</span><span class="sxs-lookup"><span data-stu-id="3cd41-240">Use the <xref:System.Windows.Data.Binding.Path%2A> property to specify the source value you want to bind to:</span></span>  
  
-   <span data-ttu-id="3cd41-241">在最简单的情况下，<xref:System.Windows.Data.Binding.Path%2A> 属性值是要用于绑定的源对象的属性的名称，如 `Path=PropertyName`。</span><span class="sxs-lookup"><span data-stu-id="3cd41-241">In the simplest case, the <xref:System.Windows.Data.Binding.Path%2A> property value is the name of the property of the source object to use for the binding, such as `Path=PropertyName`.</span></span>  
  
-   <span data-ttu-id="3cd41-242">可以通过类似于中C#使用的语法来指定属性的子属性。</span><span class="sxs-lookup"><span data-stu-id="3cd41-242">Subproperties of a property can be specified by a syntax similar to that used in C#.</span></span> <span data-ttu-id="3cd41-243">例如，子句 `Path=ShoppingCart.Order` 设置与对象或属性 `ShoppingCart` 的子属性 `Order` 的绑定。</span><span class="sxs-lookup"><span data-stu-id="3cd41-243">For instance, the clause `Path=ShoppingCart.Order` sets the binding to the subproperty `Order` of the object or property `ShoppingCart`.</span></span>  
  
-   <span data-ttu-id="3cd41-244">若要绑定到附加属性，请将附加属性置于括号中。</span><span class="sxs-lookup"><span data-stu-id="3cd41-244">To bind to an attached property, place parentheses around the attached property.</span></span> <span data-ttu-id="3cd41-245">例如，若要绑定到 <xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=nameWithType>的附加属性，则 `Path=(DockPanel.Dock)`语法。</span><span class="sxs-lookup"><span data-stu-id="3cd41-245">For example, to bind to the attached property <xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=nameWithType>, the syntax is `Path=(DockPanel.Dock)`.</span></span>  
  
-   <span data-ttu-id="3cd41-246">可以在已应用索引器的属性名后面的方括号内指定属性的索引器。</span><span class="sxs-lookup"><span data-stu-id="3cd41-246">Indexers of a property can be specified within square brackets following the property name where the indexer is applied.</span></span> <span data-ttu-id="3cd41-247">例如，子句 `Path=ShoppingCart[0]` 将绑定设置为与属性的内部索引处理文本字符串“0”的方式对应的索引。</span><span class="sxs-lookup"><span data-stu-id="3cd41-247">For instance, the clause `Path=ShoppingCart[0]` sets the binding to the index that corresponds to how your property's internal indexing handles the literal string "0".</span></span> <span data-ttu-id="3cd41-248">还支持多个索引器。</span><span class="sxs-lookup"><span data-stu-id="3cd41-248">Multiple indexers are also supported.</span></span>  
  
-   <span data-ttu-id="3cd41-249">可以在 `Path` 子句中混用索引器和子属性，例如 `Path=ShoppingCart.ShippingInfo[MailingAddress,Street].`</span><span class="sxs-lookup"><span data-stu-id="3cd41-249">Indexers and subproperties can be mixed in a `Path` clause; for example, `Path=ShoppingCart.ShippingInfo[MailingAddress,Street].`</span></span>  
  
-   <span data-ttu-id="3cd41-250">可以在索引器内使用多个由逗号 (,) 分隔的索引器参数。</span><span class="sxs-lookup"><span data-stu-id="3cd41-250">Inside indexers you can have multiple indexer parameters separated by commas (,).</span></span> <span data-ttu-id="3cd41-251">可以使用括号指定每个参数的类型。</span><span class="sxs-lookup"><span data-stu-id="3cd41-251">The type of each parameter can be specified with parentheses.</span></span> <span data-ttu-id="3cd41-252">例如，可以使用 `Path="[(sys:Int32)42,(sys:Int32)24]"`，其中 `sys` 将映射到 `System` 命名空间。</span><span class="sxs-lookup"><span data-stu-id="3cd41-252">For example, you can have `Path="[(sys:Int32)42,(sys:Int32)24]"`, where `sys` is mapped to the `System` namespace.</span></span>  
  
-   <span data-ttu-id="3cd41-253">如果源是集合视图，则可以使用斜杠 (/) 指定当前项。</span><span class="sxs-lookup"><span data-stu-id="3cd41-253">When the source is a collection view, the current item can be specified with a slash (/).</span></span> <span data-ttu-id="3cd41-254">例如，子句 `Path=/` 设置与视图中当前项的绑定。</span><span class="sxs-lookup"><span data-stu-id="3cd41-254">For example, the clause `Path=/` sets the binding to the current item in the view.</span></span> <span data-ttu-id="3cd41-255">如果源是集合，则此语法指定默认集合视图的当前项。</span><span class="sxs-lookup"><span data-stu-id="3cd41-255">When the source is a collection, this syntax specifies the current item of the default collection view.</span></span>  
  
-   <span data-ttu-id="3cd41-256">可以组合使用属性名和斜杠，以遍历作为集合的属性。</span><span class="sxs-lookup"><span data-stu-id="3cd41-256">Property names and slashes can be combined to traverse properties that are collections.</span></span> <span data-ttu-id="3cd41-257">例如，`Path=/Offices/ManagerName` 指定源集合的当前项，源集合中包含的 `Offices` 属性也是一个集合。</span><span class="sxs-lookup"><span data-stu-id="3cd41-257">For example, `Path=/Offices/ManagerName` specifies the current item of the source collection, which contains an `Offices` property that is also a collection.</span></span> <span data-ttu-id="3cd41-258">它的当前项是一个包含 `ManagerName` 属性的对象。</span><span class="sxs-lookup"><span data-stu-id="3cd41-258">Its current item is an object that contains a `ManagerName` property.</span></span>  
  
-   <span data-ttu-id="3cd41-259">句点 (.) 路径也可以用于绑定到当前源。</span><span class="sxs-lookup"><span data-stu-id="3cd41-259">Optionally, a period (.) path can be used to bind to the current source.</span></span> <span data-ttu-id="3cd41-260">例如，`Text="{Binding}"` 与 `Text="{Binding Path=.}"` 等效。</span><span class="sxs-lookup"><span data-stu-id="3cd41-260">For example, `Text="{Binding}"` is equivalent to `Text="{Binding Path=.}"`.</span></span>  
  
 <span data-ttu-id="3cd41-261">有关路径语法的信息，请参阅[绑定声明概述](/dotnet/framework/wpf/data/binding-declarations-overview)或[PropertyPath XAML 语法](/dotnet/framework/wpf/advanced/propertypath-xaml-syntax)。</span><span class="sxs-lookup"><span data-stu-id="3cd41-261">For information about path syntax, see [Binding Declarations Overview](/dotnet/framework/wpf/data/binding-declarations-overview) or [PropertyPath XAML Syntax](/dotnet/framework/wpf/advanced/propertypath-xaml-syntax).</span></span>  
  
 <span data-ttu-id="3cd41-262">有关 [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] 绑定，请参阅 <xref:System.Windows.Data.Binding.XPath%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="3cd41-262">For [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] bindings, see the <xref:System.Windows.Data.Binding.XPath%2A> property.</span></span>  
  
 <span data-ttu-id="3cd41-263">若要绑定到整个对象，无需指定 <xref:System.Windows.Data.Binding.Path%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="3cd41-263">To bind to an entire object, you do not need to specify the <xref:System.Windows.Data.Binding.Path%2A> property.</span></span> <span data-ttu-id="3cd41-264">有关详细信息，请参阅[数据绑定概述](/dotnet/framework/wpf/data/data-binding-overview)中的 "指定值的路径"。</span><span class="sxs-lookup"><span data-stu-id="3cd41-264">For more information, see "Specifying the Path to the Value" in [Data Binding Overview](/dotnet/framework/wpf/data/data-binding-overview).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3cd41-265">下面的示例演示一个用于创建报表验证错误消息的 <xref:System.Windows.Controls.ToolTip> 的样式触发器。</span><span class="sxs-lookup"><span data-stu-id="3cd41-265">The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message.</span></span> <span data-ttu-id="3cd41-266">Setter 的值使用 <xref:System.Windows.Data.Binding.RelativeSource%2A> 属性绑定到当前 <xref:System.Windows.Controls.TextBox> （使用样式的 <xref:System.Windows.Controls.TextBox>）的错误内容。</span><span class="sxs-lookup"><span data-stu-id="3cd41-266">The value of the setter binds to the error content of the current <xref:System.Windows.Controls.TextBox> (the <xref:System.Windows.Controls.TextBox> using the style) using the <xref:System.Windows.Data.Binding.RelativeSource%2A> property.</span></span> <span data-ttu-id="3cd41-267">有关此示例的详细信息，请参阅[如何：实现绑定验证](/dotnet/framework/wpf/data/how-to-implement-binding-validation)。</span><span class="sxs-lookup"><span data-stu-id="3cd41-267">For more information on this example, see [How to: Implement Binding Validation](/dotnet/framework/wpf/data/how-to-implement-binding-validation).</span></span>  
  
 [!code-xaml[BindValidation#5](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelativeSource">
      <MemberSignature Language="C#" Value="public System.Windows.Data.RelativeSource RelativeSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.RelativeSource RelativeSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.RelativeSource" />
      <MemberSignature Language="VB.NET" Value="Public Property RelativeSource As RelativeSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::RelativeSource ^ RelativeSource { System::Windows::Data::RelativeSource ^ get(); void set(System::Windows::Data::RelativeSource ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RelativeSource : System.Windows.Data.RelativeSource with get, set" Usage="System.Windows.Data.Binding.RelativeSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.RelativeSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd41-268">通过指定绑定源相对于绑定目标位置的位置，获取或设置此绑定源。</span><span class="sxs-lookup"><span data-stu-id="3cd41-268">Gets or sets the binding source by specifying its location relative to the position of the binding target.</span></span></summary>
        <value><span data-ttu-id="3cd41-269">一个 <see cref="T:System.Windows.Data.RelativeSource" /> 对象，它指定要使用的绑定源的相对位置。</span><span class="sxs-lookup"><span data-stu-id="3cd41-269">A <see cref="T:System.Windows.Data.RelativeSource" /> object specifying the relative location of the binding source to use.</span></span> <span data-ttu-id="3cd41-270">默认为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3cd41-270">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd41-271">此属性通常用于将对象的一个属性绑定到同一对象的另一个属性，或在样式或模板中定义绑定。</span><span class="sxs-lookup"><span data-stu-id="3cd41-271">This property is commonly used to bind one property of an object to another property of the same object, or to define a binding in a style or template.</span></span>  
  
 <span data-ttu-id="3cd41-272">默认情况下，绑定将继承 `DataContext` 属性指定的数据上下文（如果已设置）。</span><span class="sxs-lookup"><span data-stu-id="3cd41-272">By default, bindings inherit the data context specified by the `DataContext` property, if one has been set.</span></span> <span data-ttu-id="3cd41-273">不过，<xref:System.Windows.Data.Binding.RelativeSource%2A> 属性是您显式设置 <xref:System.Windows.Data.Binding> 源并重写继承的数据上下文的方式之一。</span><span class="sxs-lookup"><span data-stu-id="3cd41-273">However, the <xref:System.Windows.Data.Binding.RelativeSource%2A> property is one of the ways you can explicitly set the source of a <xref:System.Windows.Data.Binding> and override the inherited data context.</span></span> <span data-ttu-id="3cd41-274">有关详细信息，请参阅[如何：指定绑定源](/dotnet/framework/wpf/data/how-to-specify-the-binding-source)。</span><span class="sxs-lookup"><span data-stu-id="3cd41-274">For more information, see [How to: Specify the Binding Source](/dotnet/framework/wpf/data/how-to-specify-the-binding-source).</span></span>  
  
 <span data-ttu-id="3cd41-275">使用 "<xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType>" 和 "<xref:System.Windows.Data.Binding.Source%2A?displayProperty=nameWithType>" 属性，还可以显式设置绑定的源。</span><span class="sxs-lookup"><span data-stu-id="3cd41-275">The <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType> and <xref:System.Windows.Data.Binding.Source%2A?displayProperty=nameWithType> properties also enable you to set the source of the binding explicitly.</span></span> <span data-ttu-id="3cd41-276">但是，只应为每个绑定设置三个属性中的一个（<xref:System.Windows.Data.Binding.ElementName%2A>、<xref:System.Windows.Data.Binding.Source%2A>和 <xref:System.Windows.Data.Binding.RelativeSource%2A>），否则可能会发生冲突。</span><span class="sxs-lookup"><span data-stu-id="3cd41-276">However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict can occur.</span></span> <span data-ttu-id="3cd41-277">如果存在绑定源冲突，则此属性将引发异常。</span><span class="sxs-lookup"><span data-stu-id="3cd41-277">This property throws an exception if there is a binding source conflict.</span></span>  
  
 <span data-ttu-id="3cd41-278">有关 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 的信息，请参阅[RelativeSource MarkupExtension](/dotnet/framework/wpf/advanced/relativesource-markupextension)。</span><span class="sxs-lookup"><span data-stu-id="3cd41-278">For [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] information, see [RelativeSource MarkupExtension](/dotnet/framework/wpf/advanced/relativesource-markupextension).</span></span>  
    
## Examples  
 <span data-ttu-id="3cd41-279">下面的示例演示一个用于创建报表验证错误消息的 <xref:System.Windows.Controls.ToolTip> 的样式触发器。</span><span class="sxs-lookup"><span data-stu-id="3cd41-279">The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message.</span></span> <span data-ttu-id="3cd41-280">Setter 的值使用 <xref:System.Windows.Data.Binding.RelativeSource%2A> 属性绑定到当前 <xref:System.Windows.Controls.TextBox> （使用样式的 <xref:System.Windows.Controls.TextBox>）的错误内容。</span><span class="sxs-lookup"><span data-stu-id="3cd41-280">The value of the setter binds to the error content of the current <xref:System.Windows.Controls.TextBox> (the <xref:System.Windows.Controls.TextBox> using the style) using the <xref:System.Windows.Data.Binding.RelativeSource%2A> property.</span></span> <span data-ttu-id="3cd41-281">有关此示例的详细信息，请参阅[如何：实现绑定验证](/dotnet/framework/wpf/data/how-to-implement-binding-validation)。</span><span class="sxs-lookup"><span data-stu-id="3cd41-281">For more information on this example, see [How to: Implement Binding Validation](/dotnet/framework/wpf/data/how-to-implement-binding-validation).</span></span>  
  
 [!code-xaml[BindValidation#5](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#5)]  
  
 <span data-ttu-id="3cd41-282">若要查看完整的示例，请参阅[绑定验证示例](https://go.microsoft.com/fwlink/?LinkID=159972)。</span><span class="sxs-lookup"><span data-stu-id="3cd41-282">To see the full example, see [Binding Validation Sample](https://go.microsoft.com/fwlink/?LinkID=159972).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.Source" />
      </Docs>
    </Member>
    <Member MemberName="RemoveSourceUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void RemoveSourceUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveSourceUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveSourceUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveSourceUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveSourceUpdatedHandler : System.Windows.DependencyObject * EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; -&gt; unit" Usage="System.Windows.Data.Binding.RemoveSourceUpdatedHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd41-283">侦听事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="3cd41-283">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd41-284">要删除的处理程序。</span><span class="sxs-lookup"><span data-stu-id="3cd41-284">The handler to remove.</span></span></param>
        <summary><span data-ttu-id="3cd41-285">移除 <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 附加事件的处理程序。</span><span class="sxs-lookup"><span data-stu-id="3cd41-285">Removes a handler for the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd41-286">此方法支持在 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]中使用附加的事件。</span><span class="sxs-lookup"><span data-stu-id="3cd41-286">This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveTargetUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void RemoveTargetUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveTargetUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveTargetUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveTargetUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveTargetUpdatedHandler : System.Windows.DependencyObject * EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; -&gt; unit" Usage="System.Windows.Data.Binding.RemoveTargetUpdatedHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd41-287">侦听事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="3cd41-287">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd41-288">要删除的处理程序。</span><span class="sxs-lookup"><span data-stu-id="3cd41-288">The handler to remove.</span></span></param>
        <summary><span data-ttu-id="3cd41-289">移除 <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 附加事件的处理程序。</span><span class="sxs-lookup"><span data-stu-id="3cd41-289">Removes a handler for the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd41-290">此方法支持在 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]中使用附加的事件。</span><span class="sxs-lookup"><span data-stu-id="3cd41-290">This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetXmlNamespaceManager">
      <MemberSignature Language="C#" Value="public static void SetXmlNamespaceManager (System.Windows.DependencyObject target, System.Xml.XmlNamespaceManager value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetXmlNamespaceManager(class System.Windows.DependencyObject target, class System.Xml.XmlNamespaceManager value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetXmlNamespaceManager (target As DependencyObject, value As XmlNamespaceManager)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetXmlNamespaceManager(System::Windows::DependencyObject ^ target, System::Xml::XmlNamespaceManager ^ value);" />
      <MemberSignature Language="F#" Value="static member SetXmlNamespaceManager : System.Windows.DependencyObject * System.Xml.XmlNamespaceManager -&gt; unit" Usage="System.Windows.Data.Binding.SetXmlNamespaceManager (target, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Xml.XmlNamespaceManager" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="3cd41-291">要从中获取命名空间信息的对象。</span><span class="sxs-lookup"><span data-stu-id="3cd41-291">The object from which to get namespace information.</span></span></param>
        <param name="value"><span data-ttu-id="3cd41-292">要用于计算传递的元素中的命名空间的 <see cref="T:System.Xml.XmlNamespaceManager" />。</span><span class="sxs-lookup"><span data-stu-id="3cd41-292">The <see cref="T:System.Xml.XmlNamespaceManager" /> to use for namespace evaluation in the passed element.</span></span></param>
        <summary><span data-ttu-id="3cd41-293">设置被附加到提供的元素的绑定所使用的命名空间管理器对象。</span><span class="sxs-lookup"><span data-stu-id="3cd41-293">Sets a namespace manager object used by the binding attached to the provided element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd41-294">此方法支持 <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A> 附加属性的附加属性用法。</span><span class="sxs-lookup"><span data-stu-id="3cd41-294">This method supports attached property usage for the <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A> attached property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3cd41-295"><paramref name="target" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3cd41-295"><paramref name="target" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializePath">
      <MemberSignature Language="C#" Value="public bool ShouldSerializePath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializePath() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.ShouldSerializePath" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializePath () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializePath();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializePath : unit -&gt; bool" Usage="binding.ShouldSerializePath " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3cd41-296">指示是否应使 <see cref="P:System.Windows.Data.Binding.Path" /> 属性持久化。</span><span class="sxs-lookup"><span data-stu-id="3cd41-296">Indicates whether the <see cref="P:System.Windows.Data.Binding.Path" /> property should be persisted.</span></span></summary>
        <returns><span data-ttu-id="3cd41-297">如果属性值已更改，不再是默认值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3cd41-297"><see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd41-298">提供此 `ShouldSerialize` 方法的原因是 <xref:System.Windows.Data.Binding.Path%2A> 属性没有简单的默认值。</span><span class="sxs-lookup"><span data-stu-id="3cd41-298">This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.Binding.Path%2A> property does not have a simple default value.</span></span> <span data-ttu-id="3cd41-299">此方法指示属性是否已更改为其默认值。</span><span class="sxs-lookup"><span data-stu-id="3cd41-299">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="3cd41-300">如果要为 <xref:System.Windows.Data.Binding> 开发设计器或开发包含 <xref:System.Windows.Data.Binding>的自己的控件，则通常会调用此方法。</span><span class="sxs-lookup"><span data-stu-id="3cd41-300">You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.Binding> or developing your own control incorporating the <xref:System.Windows.Data.Binding>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSource">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.ShouldSerializeSource" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeSource () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeSource();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeSource : unit -&gt; bool" Usage="binding.ShouldSerializeSource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3cd41-301">指示是否应使 <see cref="P:System.Windows.Data.Binding.Source" /> 属性持久化。</span><span class="sxs-lookup"><span data-stu-id="3cd41-301">Indicates whether the <see cref="P:System.Windows.Data.Binding.Source" /> property should be persisted.</span></span></summary>
        <returns><span data-ttu-id="3cd41-302">如果属性值已更改，不再是默认值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3cd41-302"><see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd41-303">提供此 `ShouldSerialize` 方法的原因是 <xref:System.Windows.Data.Binding.Source%2A> 属性没有简单的默认值。</span><span class="sxs-lookup"><span data-stu-id="3cd41-303">This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.Binding.Source%2A> property does not have a simple default value.</span></span> <span data-ttu-id="3cd41-304">此方法指示属性是否已更改为其默认值。</span><span class="sxs-lookup"><span data-stu-id="3cd41-304">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="3cd41-305">如果要为 <xref:System.Windows.Data.Binding> 开发设计器或开发包含 <xref:System.Windows.Data.Binding>的自己的控件，则通常会调用此方法。</span><span class="sxs-lookup"><span data-stu-id="3cd41-305">You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.Binding> or developing your own control incorporating the <xref:System.Windows.Data.Binding>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValidationRules">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeValidationRules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeValidationRules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.ShouldSerializeValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeValidationRules () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeValidationRules();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeValidationRules : unit -&gt; bool" Usage="binding.ShouldSerializeValidationRules " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3cd41-306">指示是否应使 <see cref="P:System.Windows.Data.Binding.ValidationRules" /> 属性持久化。</span><span class="sxs-lookup"><span data-stu-id="3cd41-306">Indicates whether the <see cref="P:System.Windows.Data.Binding.ValidationRules" /> property should be persisted.</span></span></summary>
        <returns><span data-ttu-id="3cd41-307">如果属性值已更改，不再是默认值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3cd41-307"><see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd41-308">提供此 `ShouldSerialize` 方法的原因是 <xref:System.Windows.Data.Binding.ValidationRules%2A> 属性没有简单的默认值。</span><span class="sxs-lookup"><span data-stu-id="3cd41-308">This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.Binding.ValidationRules%2A> property does not have a simple default value.</span></span> <span data-ttu-id="3cd41-309">此方法指示属性是否已更改为其默认值。</span><span class="sxs-lookup"><span data-stu-id="3cd41-309">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="3cd41-310">如果要为 <xref:System.Windows.Data.Binding> 开发设计器或开发包含 <xref:System.Windows.Data.Binding>的自己的控件，则通常会调用此方法。</span><span class="sxs-lookup"><span data-stu-id="3cd41-310">You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.Binding> or developing your own control incorporating the <xref:System.Windows.Data.Binding>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public object Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Source { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : obj with get, set" Usage="System.Windows.Data.Binding.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd41-311">获取或设置要用作绑定源的对象。</span><span class="sxs-lookup"><span data-stu-id="3cd41-311">Gets or sets the object to use as the binding source.</span></span></summary>
        <value><span data-ttu-id="3cd41-312">要用作绑定源的对象。</span><span class="sxs-lookup"><span data-stu-id="3cd41-312">The object to use as the binding source.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd41-313">默认情况下，绑定将继承 `DataContext` 属性指定的数据上下文（如果已设置）。</span><span class="sxs-lookup"><span data-stu-id="3cd41-313">By default, bindings inherit the data context specified by the `DataContext` property, if one has been set.</span></span> <span data-ttu-id="3cd41-314">不过，<xref:System.Windows.Data.Binding.Source%2A> 属性是您显式设置 <xref:System.Windows.Data.Binding> 源并重写继承的数据上下文的方式之一。</span><span class="sxs-lookup"><span data-stu-id="3cd41-314">However, the <xref:System.Windows.Data.Binding.Source%2A> property is one of the ways you can explicitly set the source of a <xref:System.Windows.Data.Binding> and override the inherited data context.</span></span> <span data-ttu-id="3cd41-315">如果不需要建立一个作用域的功能，其中有多个属性继承相同的数据上下文，则可以使用 <xref:System.Windows.Data.Binding.Source%2A> 属性，而不是 `DataContext` 属性。</span><span class="sxs-lookup"><span data-stu-id="3cd41-315">If you do not need the functionality of establishing a scope in which several properties inherit the same data context, you can use the <xref:System.Windows.Data.Binding.Source%2A> property instead of the `DataContext` property.</span></span>  
  
 <span data-ttu-id="3cd41-316">使用 "<xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType>" 和 "<xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=nameWithType>" 属性，还可以显式设置绑定的源。</span><span class="sxs-lookup"><span data-stu-id="3cd41-316">The <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType> and <xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=nameWithType> properties also enable you to set the source of the binding explicitly.</span></span> <span data-ttu-id="3cd41-317">但是，只应为每个绑定设置三个属性中的一个（<xref:System.Windows.Data.Binding.ElementName%2A>、<xref:System.Windows.Data.Binding.Source%2A>和 <xref:System.Windows.Data.Binding.RelativeSource%2A>），否则可能会发生冲突。</span><span class="sxs-lookup"><span data-stu-id="3cd41-317">However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict can occur.</span></span> <span data-ttu-id="3cd41-318">如果存在绑定源冲突，则此属性将引发异常。</span><span class="sxs-lookup"><span data-stu-id="3cd41-318">This property throws an exception if there is a binding source conflict.</span></span>  
  
 <span data-ttu-id="3cd41-319">若要清除此属性，请将其设置为 <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3cd41-319">To clear this property, set it to <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>.</span></span>  
  
<a name="xamlAttributeUsage_Source"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="3cd41-320">XAML 特性用法</span><span class="sxs-lookup"><span data-stu-id="3cd41-320">XAML Attribute Usage</span></span>  
  
```  
<object Source="object"/>  
```  
  
<a name="xamlValues_Source"></a>   
## <a name="xaml-values"></a><span data-ttu-id="3cd41-321">XAML 值</span><span class="sxs-lookup"><span data-stu-id="3cd41-321">XAML Values</span></span>  
 <span data-ttu-id="3cd41-322">对象</span><span class="sxs-lookup"><span data-stu-id="3cd41-322">*object*</span></span>  
 <span data-ttu-id="3cd41-323">现有的对象。</span><span class="sxs-lookup"><span data-stu-id="3cd41-323">An existing object.</span></span> <span data-ttu-id="3cd41-324">若要引用现有对象，请使用[StaticResource 标记扩展](/dotnet/framework/wpf/advanced/staticresource-markup-extension)</span><span class="sxs-lookup"><span data-stu-id="3cd41-324">To refer to an existing object, use the [StaticResource Markup Extension](/dotnet/framework/wpf/advanced/staticresource-markup-extension)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3cd41-325">下面的示例使用一个 `Person` 对象，该对象具有在 `SDKSample` 命名空间中定义的名为 `PersonName` 的字符串属性，因为第一个突出显示的行所示。</span><span class="sxs-lookup"><span data-stu-id="3cd41-325">The following example uses a `Person` object with a string property named `PersonName` that is defined in the `SDKSample` namespace, as the first highlighted line shows.</span></span> <span data-ttu-id="3cd41-326">在包含 `<src>` 元素的突出显示行中，它使用 `Joe`的 `PersonName` 属性值实例化 `Person` 对象。</span><span class="sxs-lookup"><span data-stu-id="3cd41-326">In the highlighted line that contains the `<src>` element, it instantiates the `Person` object with a `PersonName` property value of `Joe`.</span></span> <span data-ttu-id="3cd41-327">这是在 `Resources` 部分中完成的，并分配了 `x:Key`。</span><span class="sxs-lookup"><span data-stu-id="3cd41-327">This is done in the `Resources` section and assigned an `x:Key`.</span></span>  
  
 [!code-xaml[BindingInstantiation](~/samples/snippets/csharp/VS_Snippets_Wpf/SimpleBinding/CSharp/Page1.xaml?highlight=4,9,37)]  
  
 <span data-ttu-id="3cd41-328">包含 `<TextBlock>` 元素的突出显示的行演示如何绑定到 `PersonName` 属性。</span><span class="sxs-lookup"><span data-stu-id="3cd41-328">The highlighted line that contains the `<TextBlock>` elements shows how to bind to the `PersonName` property.</span></span> <span data-ttu-id="3cd41-329">因此，<xref:System.Windows.Controls.TextBlock> 控件将显示值 "Joe"。</span><span class="sxs-lookup"><span data-stu-id="3cd41-329">As a result, the <xref:System.Windows.Controls.TextBlock> control appears with the value "Joe".</span></span>  
  
 <span data-ttu-id="3cd41-330">在下面的示例中，<xref:System.Windows.Data.Binding> 对象的 <xref:System.Windows.Data.Binding.Source%2A> 值设置为 `static` 属性 <xref:System.Windows.Application.Current%2A?displayProperty=nameWithType>：</span><span class="sxs-lookup"><span data-stu-id="3cd41-330">In the following example, the <xref:System.Windows.Data.Binding.Source%2A> values of the <xref:System.Windows.Data.Binding> objects are set to the `static` property <xref:System.Windows.Application.Current%2A?displayProperty=nameWithType>:</span></span>  
  
 [!code-xaml[DataBindingLab#ComboBoxMultiBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/AddProductWindow.xaml#comboboxmultibinding)]  
  
 <span data-ttu-id="3cd41-331">有关完整示例，请参阅[数据绑定演示](https://go.microsoft.com/fwlink/?LinkID=163703)。</span><span class="sxs-lookup"><span data-stu-id="3cd41-331">For the full example, see [Data Binding Demo](https://go.microsoft.com/fwlink/?LinkID=163703).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceUpdated">
      <MemberSignature Language="C#" Value="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" />
      <MemberSignature Language="ILAsm" Value="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.Binding.SourceUpdated" />
      <MemberSignature Language="VB.NET" Value="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" />
      <MemberSignature Language="F#" Value="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" Usage="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3cd41-332">当一个值从绑定目标传输到绑定源时发生，但仅限于其 <see cref="P:System.Windows.Data.Binding.NotifyOnSourceUpdated" /> 值设置为 <see langword="true" /> 的绑定。</span><span class="sxs-lookup"><span data-stu-id="3cd41-332">Occurs when a value is transferred from the binding target to the binding source, but only for bindings with the <see cref="P:System.Windows.Data.Binding.NotifyOnSourceUpdated" /> value set to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_SourceUpdatedEvent"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3cd41-333">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="3cd41-333">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3cd41-334">标识符字段</span><span class="sxs-lookup"><span data-stu-id="3cd41-334">Identifier field</span></span>|<xref:System.Windows.Data.Binding.SourceUpdatedEvent>|  
|<span data-ttu-id="3cd41-335">路由策略</span><span class="sxs-lookup"><span data-stu-id="3cd41-335">Routing strategy</span></span>|<span data-ttu-id="3cd41-336">冒泡</span><span class="sxs-lookup"><span data-stu-id="3cd41-336">Bubbling</span></span>|  
|<span data-ttu-id="3cd41-337">委托</span><span class="sxs-lookup"><span data-stu-id="3cd41-337">Delegate</span></span>|<span data-ttu-id="3cd41-338"><xref:System.EventHandler%601>，约束为 <xref:System.Windows.Data.DataTransferEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="3cd41-338"><xref:System.EventHandler%601>, constrained to <xref:System.Windows.Data.DataTransferEventArgs>.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateSource" />
        <altmember cref="E:System.Windows.Data.Binding.TargetUpdated" />
      </Docs>
    </Member>
    <Member MemberName="SourceUpdatedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SourceUpdatedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SourceUpdatedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.SourceUpdatedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SourceUpdatedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ SourceUpdatedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable SourceUpdatedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Data.Binding.SourceUpdatedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd41-339">标识 <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 附加事件。</span><span class="sxs-lookup"><span data-stu-id="3cd41-339">Identifies the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetUpdated">
      <MemberSignature Language="C#" Value="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" />
      <MemberSignature Language="ILAsm" Value="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.Binding.TargetUpdated" />
      <MemberSignature Language="VB.NET" Value="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" />
      <MemberSignature Language="F#" Value="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" Usage="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3cd41-340">当一个值从绑定源传输到绑定目标时发生，但仅限于其 <see cref="P:System.Windows.Data.Binding.NotifyOnTargetUpdated" /> 值设置为 <see langword="true" /> 的绑定。</span><span class="sxs-lookup"><span data-stu-id="3cd41-340">Occurs when a value is transferred from the binding source to the binding target, but only for bindings with the <see cref="P:System.Windows.Data.Binding.NotifyOnTargetUpdated" /> value set to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TargetUpdatedEvent"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3cd41-341">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="3cd41-341">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3cd41-342">标识符字段</span><span class="sxs-lookup"><span data-stu-id="3cd41-342">Identifier field</span></span>|<xref:System.Windows.Data.Binding.TargetUpdatedEvent>|  
|<span data-ttu-id="3cd41-343">路由策略</span><span class="sxs-lookup"><span data-stu-id="3cd41-343">Routing strategy</span></span>|<span data-ttu-id="3cd41-344">冒泡</span><span class="sxs-lookup"><span data-stu-id="3cd41-344">Bubbling</span></span>|  
|<span data-ttu-id="3cd41-345">委托</span><span class="sxs-lookup"><span data-stu-id="3cd41-345">Delegate</span></span>|<span data-ttu-id="3cd41-346"><xref:System.EventHandler%601>，约束为 <xref:System.Windows.Data.DataTransferEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="3cd41-346"><xref:System.EventHandler%601>, constrained to <xref:System.Windows.Data.DataTransferEventArgs>.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateTarget" />
        <altmember cref="E:System.Windows.Data.Binding.SourceUpdated" />
      </Docs>
    </Member>
    <Member MemberName="TargetUpdatedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TargetUpdatedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TargetUpdatedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.TargetUpdatedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetUpdatedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TargetUpdatedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TargetUpdatedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Data.Binding.TargetUpdatedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd41-347">标识 <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 附加事件。</span><span class="sxs-lookup"><span data-stu-id="3cd41-347">Identifies the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSourceExceptionFilter">
      <MemberSignature Language="C#" Value="public System.Windows.Data.UpdateSourceExceptionFilterCallback UpdateSourceExceptionFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.UpdateSourceExceptionFilterCallback UpdateSourceExceptionFilter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateSourceExceptionFilter As UpdateSourceExceptionFilterCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::UpdateSourceExceptionFilterCallback ^ UpdateSourceExceptionFilter { System::Windows::Data::UpdateSourceExceptionFilterCallback ^ get(); void set(System::Windows::Data::UpdateSourceExceptionFilterCallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateSourceExceptionFilter : System.Windows.Data.UpdateSourceExceptionFilterCallback with get, set" Usage="System.Windows.Data.Binding.UpdateSourceExceptionFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.UpdateSourceExceptionFilterCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd41-348">获取或设置一个处理程序，可使用该程序提供自定义逻辑，旨在在更新绑定源值期间处理绑定引擎遇到的异常。</span><span class="sxs-lookup"><span data-stu-id="3cd41-348">Gets or sets a handler you can use to provide custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.</span></span> <span data-ttu-id="3cd41-349">这仅适用于你已将 <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> 与绑定相关联的情况。</span><span class="sxs-lookup"><span data-stu-id="3cd41-349">This is only applicable if you have associated an <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> with your binding.</span></span></summary>
        <value><span data-ttu-id="3cd41-350">一个提供自定义逻辑以在绑定源值更新过程中处理绑定引擎遇到的异常的方法。</span><span class="sxs-lookup"><span data-stu-id="3cd41-350">A method that provides custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd41-351"><xref:System.Windows.Controls.ExceptionValidationRule> 是一种内置的验证规则，用于检查在绑定源属性更新过程中引发的异常。</span><span class="sxs-lookup"><span data-stu-id="3cd41-351">The <xref:System.Windows.Controls.ExceptionValidationRule> is a built-in validation rule that checks for exceptions thrown during the update of the binding source property.</span></span> <span data-ttu-id="3cd41-352">如果已将 <xref:System.Windows.Controls.ExceptionValidationRule> 与 <xref:System.Windows.Data.Binding> 对象关联，则可以使用此属性来设置处理程序，以提供用于处理这些异常的自定义逻辑。</span><span class="sxs-lookup"><span data-stu-id="3cd41-352">If you have associated the <xref:System.Windows.Controls.ExceptionValidationRule> with your <xref:System.Windows.Data.Binding> object, you can use this property to set a handler to provide custom logic for handling these exceptions.</span></span> <span data-ttu-id="3cd41-353">如果未在 <xref:System.Windows.Data.Binding> 上指定 <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>，则绑定引擎会创建具有异常的 <xref:System.Windows.Controls.ValidationError> 并将其添加到绑定元素的 <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> 集合中。</span><span class="sxs-lookup"><span data-stu-id="3cd41-353">If an <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> is not specified on the <xref:System.Windows.Data.Binding>, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the exception and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> collection of the bound element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3cd41-354">以下 <xref:System.Windows.Controls.TextBox> 的 <xref:System.Windows.Controls.TextBox.Text%2A> 属性被数据绑定到类型 `int`的源属性 `Age3`。</span><span class="sxs-lookup"><span data-stu-id="3cd41-354">The <xref:System.Windows.Controls.TextBox.Text%2A> property of the following <xref:System.Windows.Controls.TextBox> is data-bound to a source property `Age3` that is of type `int`.</span></span> <span data-ttu-id="3cd41-355"><xref:System.Windows.Controls.ExceptionValidationRule> 将检查在源属性更新过程中引发的异常（例如，当用户输入不能转换为整数的值时）。</span><span class="sxs-lookup"><span data-stu-id="3cd41-355">The <xref:System.Windows.Controls.ExceptionValidationRule> checks for exceptions that are thrown during the update of the source property (such as when the user enters a value that cannot be converted to an integer).</span></span>  
  
 [!code-xaml[BindValidation#tbExceptionFilter](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#tbexceptionfilter)]  
  
 <span data-ttu-id="3cd41-356">可以提供自定义逻辑来处理这些异常。</span><span class="sxs-lookup"><span data-stu-id="3cd41-356">You can provide custom logic to handle those exceptions.</span></span> <span data-ttu-id="3cd41-357">下面的示例演示如何使用 <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> 属性设置 <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>。</span><span class="sxs-lookup"><span data-stu-id="3cd41-357">The following example shows how to use the <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> property to set an <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.</span></span>  
  
 [!code-csharp[BindValidation#filtercallback](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml.cs#filtercallback)]  
  
 <span data-ttu-id="3cd41-358">下面是 <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>的示例实现。</span><span class="sxs-lookup"><span data-stu-id="3cd41-358">The following is an example implementation of an <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.</span></span>  
  
 [!code-csharp[BindValidation#Handler](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml.cs#handler)]  
  
 <span data-ttu-id="3cd41-359"><xref:System.Windows.Data.UpdateSourceExceptionFilterCallback> 还可以返回 `null`、异常本身或 <xref:System.Windows.Controls.ValidationError>。</span><span class="sxs-lookup"><span data-stu-id="3cd41-359">The <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback> can also return `null`, the exception itself, or a <xref:System.Windows.Controls.ValidationError>.</span></span> <span data-ttu-id="3cd41-360">有关详细信息，请参阅 <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>。</span><span class="sxs-lookup"><span data-stu-id="3cd41-360">For more information, see <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.</span></span>  
  
 <span data-ttu-id="3cd41-361">有关完整示例，请参阅[绑定验证示例](https://go.microsoft.com/fwlink/?LinkID=159972)。</span><span class="sxs-lookup"><span data-stu-id="3cd41-361">For the complete sample, see [Binding Validation Sample](https://go.microsoft.com/fwlink/?LinkID=159972).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSourceTrigger">
      <MemberSignature Language="C#" Value="public System.Windows.Data.UpdateSourceTrigger UpdateSourceTrigger { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.UpdateSourceTrigger UpdateSourceTrigger" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.UpdateSourceTrigger" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateSourceTrigger As UpdateSourceTrigger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::UpdateSourceTrigger UpdateSourceTrigger { System::Windows::Data::UpdateSourceTrigger get(); void set(System::Windows::Data::UpdateSourceTrigger value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateSourceTrigger : System.Windows.Data.UpdateSourceTrigger with get, set" Usage="System.Windows.Data.Binding.UpdateSourceTrigger" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.UpdateSourceTrigger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd41-362">获取或设置一个值，它可确定绑定源更新的计时。</span><span class="sxs-lookup"><span data-stu-id="3cd41-362">Gets or sets a value that determines the timing of binding source updates.</span></span></summary>
        <value><span data-ttu-id="3cd41-363"><see cref="T:System.Windows.Data.UpdateSourceTrigger" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="3cd41-363">One of the <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> values.</span></span> <span data-ttu-id="3cd41-364">默认值为 <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />，即返回目标依赖属性的默认 <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> 值。</span><span class="sxs-lookup"><span data-stu-id="3cd41-364">The default is <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />, which returns the default <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> value of the target dependency property.</span></span> <span data-ttu-id="3cd41-365">但是，大多数依赖项属性的默认值为 <see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" />，而 <see cref="P:System.Windows.Controls.TextBox.Text" /> 属性的默认值为 <see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" />。</span><span class="sxs-lookup"><span data-stu-id="3cd41-365">However, the default value for most dependency properties is <see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" />, while the <see cref="P:System.Windows.Controls.TextBox.Text" /> property has a default value of <see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" />.</span></span>  
  
<span data-ttu-id="3cd41-366">一种确定依赖属性的默认 <see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger" /> 值的编程方法是使用 <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> 获取属性的属性元数据，然后检查 <see cref="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger" /> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="3cd41-366">A programmatic way to determine the default <see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger" /> value of a dependency property is to get the property metadata of the property using <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> and then check the value of the <see cref="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd41-367"><xref:System.Windows.Data.BindingMode.TwoWay> 或 <xref:System.Windows.Data.BindingMode.OneWayToSource> 侦听目标属性中的更改并将其传播回源的绑定。</span><span class="sxs-lookup"><span data-stu-id="3cd41-367">Bindings that are <xref:System.Windows.Data.BindingMode.TwoWay> or <xref:System.Windows.Data.BindingMode.OneWayToSource> listen for changes in the target property and propagate them back to the source.</span></span> <span data-ttu-id="3cd41-368">这称为更新源。</span><span class="sxs-lookup"><span data-stu-id="3cd41-368">This is known as updating the source.</span></span> <span data-ttu-id="3cd41-369">通常，只要目标属性发生更改，就会发生这些更新。</span><span class="sxs-lookup"><span data-stu-id="3cd41-369">Usually, these updates happen whenever the target property changes.</span></span> <span data-ttu-id="3cd41-370">这对于复选框和其他简单控件都很好，但它通常不适合用于文本字段。</span><span class="sxs-lookup"><span data-stu-id="3cd41-370">This is fine for check boxes and other simple controls, but it is usually not appropriate for text fields.</span></span> <span data-ttu-id="3cd41-371">每次击键后更新可能会降低性能，并使用户在提交到新值之前，不会有机会退退并修复键入错误。</span><span class="sxs-lookup"><span data-stu-id="3cd41-371">Updating after every keystroke can diminish performance and it denies the user the usual opportunity to backspace and fix typing errors before committing to the new value.</span></span> <span data-ttu-id="3cd41-372">因此，<xref:System.Windows.Controls.TextBox.Text%2A> 属性的默认 <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> 值为 <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus>，不 <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>。</span><span class="sxs-lookup"><span data-stu-id="3cd41-372">Therefore, the default <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> value of the <xref:System.Windows.Controls.TextBox.Text%2A> property is <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus> and not <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>.</span></span>  
  
 <span data-ttu-id="3cd41-373">如果将 <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> 值设置为 <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>，则必须调用 <xref:System.Windows.Data.BindingExpression.UpdateSource%2A> 方法，否则更改不会传播回源。</span><span class="sxs-lookup"><span data-stu-id="3cd41-373">If you set the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> value to <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>, you must call the <xref:System.Windows.Data.BindingExpression.UpdateSource%2A> method or the changes will not propagate back to the source.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.Mode" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnDataErrors">
      <MemberSignature Language="C#" Value="public bool ValidatesOnDataErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnDataErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidatesOnDataErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnDataErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnDataErrors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnDataErrors : bool with get, set" Usage="System.Windows.Data.Binding.ValidatesOnDataErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd41-374">获取或设置一个值，该值指示是否包含 <see cref="T:System.Windows.Controls.DataErrorValidationRule" />。</span><span class="sxs-lookup"><span data-stu-id="3cd41-374">Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.DataErrorValidationRule" />.</span></span></summary>
        <value><span data-ttu-id="3cd41-375">如果包含 <see cref="T:System.Windows.Controls.DataErrorValidationRule" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3cd41-375"><see langword="true" /> to include the <see cref="T:System.Windows.Controls.DataErrorValidationRule" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd41-376">设置此属性可提供一种显式使用 <xref:System.Windows.Controls.DataErrorValidationRule> 元素的方法。</span><span class="sxs-lookup"><span data-stu-id="3cd41-376">Setting this property provides an alternative to using the <xref:System.Windows.Controls.DataErrorValidationRule> element explicitly.</span></span> <span data-ttu-id="3cd41-377"><xref:System.Windows.Controls.DataErrorValidationRule> 是一种内置的验证规则，用于检查源对象的 <xref:System.ComponentModel.IDataErrorInfo> 实现所引发的错误。</span><span class="sxs-lookup"><span data-stu-id="3cd41-377">The <xref:System.Windows.Controls.DataErrorValidationRule> is a built-in validation rule that checks for errors that are raised by the <xref:System.ComponentModel.IDataErrorInfo> implementation of the source object.</span></span> <span data-ttu-id="3cd41-378">如果引发错误，绑定引擎会创建一个包含错误的 <xref:System.Windows.Controls.ValidationError>，并将其添加到绑定元素的 <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> 集合。</span><span class="sxs-lookup"><span data-stu-id="3cd41-378">If an error is raised, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the error and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> collection of the bound element.</span></span> <span data-ttu-id="3cd41-379">缺少错误会清除此验证反馈，除非其他规则引发验证问题。</span><span class="sxs-lookup"><span data-stu-id="3cd41-379">The lack of an error clears this validation feedback, unless another rule raises a validation issue.</span></span>  
  
 <span data-ttu-id="3cd41-380"><xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> 在 .NET Framework 版本3.5 中引入。</span><span class="sxs-lookup"><span data-stu-id="3cd41-380"><xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="3cd41-381">有关详细信息，请参见 [.NET Framework 版本和依赖关系](/dotnet/framework/migration-guide/versions-and-dependencies)。</span><span class="sxs-lookup"><span data-stu-id="3cd41-381">For more information, see [.NET Framework Versions and Dependencies](/dotnet/framework/migration-guide/versions-and-dependencies).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3cd41-382">下面的示例使用 <xref:System.ComponentModel.IDataErrorInfo> 和 <xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> 在 <xref:System.Windows.Controls.TextBox>中验证用户输入。</span><span class="sxs-lookup"><span data-stu-id="3cd41-382">The following examples uses <xref:System.ComponentModel.IDataErrorInfo> and <xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> to validate user input in a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="3cd41-383">第一个示例创建一个数据类型，该数据类型实现 <xref:System.ComponentModel.IDataErrorInfo> 以报告验证错误。</span><span class="sxs-lookup"><span data-stu-id="3cd41-383">The first example creates a data type that implements <xref:System.ComponentModel.IDataErrorInfo> to report validation errors.</span></span>  
  
 [!code-csharp[BindingValidationAttributesSnippets#IDataErrorInfoData](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/data.cs#idataerrorinfodata)]
 [!code-vb[BindingValidationAttributesSnippets#IDataErrorInfoData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/bindingvalidationattributessnippets/visualbasic/window1.xaml.vb#idataerrorinfodata)]  
  
 <span data-ttu-id="3cd41-384">下面的示例将 `Age` 属性绑定到 <xref:System.Windows.Controls.TextBox> 并将 <xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> 设置为 <xref:System.Windows.Data.Binding>上的 `true`。</span><span class="sxs-lookup"><span data-stu-id="3cd41-384">The following example binds the `Age` property to the <xref:System.Windows.Controls.TextBox> and sets <xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> to `true` on the <xref:System.Windows.Data.Binding>.</span></span>  <span data-ttu-id="3cd41-385">如果用户输入的值无效，则会在 <xref:System.Windows.Controls.TextBox> 中显示一个红色边框，<xref:System.Windows.Controls.ToolTip> 会报告错误消息。</span><span class="sxs-lookup"><span data-stu-id="3cd41-385">When the user enters an invalid value, a red border appears in the <xref:System.Windows.Controls.TextBox> and the <xref:System.Windows.Controls.ToolTip> reports the error message.</span></span>  
  
 [!code-xaml[BindingValidationAttributesSnippets#IDataErrorInfoXaml](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/window1.xaml#idataerrorinfoxaml)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.ValidatesOnExceptions" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnExceptions">
      <MemberSignature Language="C#" Value="public bool ValidatesOnExceptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnExceptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidatesOnExceptions" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnExceptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnExceptions { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnExceptions : bool with get, set" Usage="System.Windows.Data.Binding.ValidatesOnExceptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd41-386">获取或设置一个值，该值指示是否包含 <see cref="T:System.Windows.Controls.ExceptionValidationRule" />。</span><span class="sxs-lookup"><span data-stu-id="3cd41-386">Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.ExceptionValidationRule" />.</span></span></summary>
        <value><span data-ttu-id="3cd41-387">如果包含 <see cref="T:System.Windows.Controls.ExceptionValidationRule" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3cd41-387"><see langword="true" /> to include the <see cref="T:System.Windows.Controls.ExceptionValidationRule" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd41-388">设置此属性可提供一种显式使用 <xref:System.Windows.Controls.ExceptionValidationRule> 元素的方法。</span><span class="sxs-lookup"><span data-stu-id="3cd41-388">Setting this property provides an alternative to using the <xref:System.Windows.Controls.ExceptionValidationRule> element explicitly.</span></span> <span data-ttu-id="3cd41-389"><xref:System.Windows.Controls.ExceptionValidationRule> 是一种内置的验证规则，用于检查在源属性更新过程中引发的异常。</span><span class="sxs-lookup"><span data-stu-id="3cd41-389">The <xref:System.Windows.Controls.ExceptionValidationRule> is a built-in validation rule that checks for exceptions that are thrown during the update of the source property.</span></span> <span data-ttu-id="3cd41-390">如果引发了异常，则绑定引擎将创建一个包含异常的 <xref:System.Windows.Controls.ValidationError>，并将其添加到绑定元素的 <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> 集合。</span><span class="sxs-lookup"><span data-stu-id="3cd41-390">If an exception is thrown, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the exception and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> collection of the bound element.</span></span> <span data-ttu-id="3cd41-391">缺少错误会清除此验证反馈，除非其他规则引发验证问题。</span><span class="sxs-lookup"><span data-stu-id="3cd41-391">The lack of an error clears this validation feedback, unless another rule raises a validation issue.</span></span>  
  
 <span data-ttu-id="3cd41-392"><xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> 在 .NET Framework 版本3.5 中引入。</span><span class="sxs-lookup"><span data-stu-id="3cd41-392"><xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="3cd41-393">有关详细信息，请参见 [.NET Framework 版本和依赖关系](/dotnet/framework/migration-guide/versions-and-dependencies)。</span><span class="sxs-lookup"><span data-stu-id="3cd41-393">For more information, see [.NET Framework Versions and Dependencies](/dotnet/framework/migration-guide/versions-and-dependencies).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3cd41-394">下面的示例使用 <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> 验证 <xref:System.Windows.Controls.TextBox>中的用户输入。</span><span class="sxs-lookup"><span data-stu-id="3cd41-394">The following examples use <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> to validate user input in a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="3cd41-395">第一个示例创建一个数据类型，该数据类型在 `Age` 属性设置为无效属性时引发异常。</span><span class="sxs-lookup"><span data-stu-id="3cd41-395">The first example creates a data type that throws an exception when the `Age` property is set to an invalid property.</span></span>  
  
 [!code-csharp[BindingValidationAttributesSnippets#ThrowExceptionData](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/data.cs#throwexceptiondata)]
 [!code-vb[BindingValidationAttributesSnippets#ThrowExceptionData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/bindingvalidationattributessnippets/visualbasic/window1.xaml.vb#throwexceptiondata)]  
  
 <span data-ttu-id="3cd41-396">下面的示例将 `Age` 属性绑定到 <xref:System.Windows.Controls.TextBox> 并将 <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> 设置为 <xref:System.Windows.Data.Binding>上的 `true`。</span><span class="sxs-lookup"><span data-stu-id="3cd41-396">The following example binds the `Age` property to the <xref:System.Windows.Controls.TextBox> and sets <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> to `true` on the <xref:System.Windows.Data.Binding>.</span></span> <span data-ttu-id="3cd41-397">如果用户输入的值无效，则会在 <xref:System.Windows.Controls.TextBox> 中显示一个红色边框，<xref:System.Windows.Controls.ToolTip> 会报告错误消息。</span><span class="sxs-lookup"><span data-stu-id="3cd41-397">When the user enters an invalid value, a red border appears in the <xref:System.Windows.Controls.TextBox> and the <xref:System.Windows.Controls.ToolTip> reports the error message.</span></span>  
  
 [!code-xaml[BindingValidationAttributesSnippets#ThrowExceptionXaml](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/window1.xaml#throwexceptionxaml)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.ValidatesOnDataErrors" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnNotifyDataErrors">
      <MemberSignature Language="C#" Value="public bool ValidatesOnNotifyDataErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnNotifyDataErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnNotifyDataErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnNotifyDataErrors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnNotifyDataErrors : bool with get, set" Usage="System.Windows.Data.Binding.ValidatesOnNotifyDataErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd41-398">获取或设置一个值，该值指示是否包含 <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />。</span><span class="sxs-lookup"><span data-stu-id="3cd41-398">Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />.</span></span></summary>
        <value><span data-ttu-id="3cd41-399">如果包含 <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3cd41-399"><see langword="true" /> to include the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3cd41-400">默认为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="3cd41-400">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd41-401">`true`<xref:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors%2A> 时，绑定会检查并报告实现 <xref:System.ComponentModel.INotifyDataErrorInfo>的数据源引发的错误。</span><span class="sxs-lookup"><span data-stu-id="3cd41-401">When <xref:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors%2A> is `true`, the binding checks for and reports errors that are raised by a data source that implements <xref:System.ComponentModel.INotifyDataErrorInfo>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationRules">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt; ValidationRules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Controls.ValidationRule&gt; ValidationRules" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationRules As Collection(Of ValidationRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ ValidationRules { System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidationRules : System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;" Usage="System.Windows.Data.Binding.ValidationRules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd41-402">获取用于检查用户输入有效性的规则的集合。</span><span class="sxs-lookup"><span data-stu-id="3cd41-402">Gets a collection of rules that check the validity of the user input.</span></span></summary>
        <value><span data-ttu-id="3cd41-403"><see cref="T:System.Windows.Controls.ValidationRule" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="3cd41-403">A collection of <see cref="T:System.Windows.Controls.ValidationRule" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd41-404">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 的数据绑定模型使你能够将 <xref:System.Windows.Data.Binding.ValidationRules%2A> 与 <xref:System.Windows.Data.Binding> 或 <xref:System.Windows.Data.MultiBinding> 对象相关联。</span><span class="sxs-lookup"><span data-stu-id="3cd41-404">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding model enables you to associate <xref:System.Windows.Data.Binding.ValidationRules%2A> with your <xref:System.Windows.Data.Binding> or <xref:System.Windows.Data.MultiBinding> object.</span></span> <span data-ttu-id="3cd41-405">您可以通过从 <xref:System.Windows.Controls.ValidationRule> 类派生并实现 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 方法来创建自定义规则，也可以使用内置 <xref:System.Windows.Controls.ExceptionValidationRule>，如果在源更新过程中存在异常，则会使值失效。</span><span class="sxs-lookup"><span data-stu-id="3cd41-405">You can create custom rules by deriving from the <xref:System.Windows.Controls.ValidationRule> class and implementing the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, or you can use the built-in <xref:System.Windows.Controls.ExceptionValidationRule>, which invalidates a value if there are exceptions during source updates.</span></span>  
  
 <span data-ttu-id="3cd41-406">每次将输入值（绑定目标属性值）传输到绑定源属性时，绑定引擎都会检查与绑定关联的每个 <xref:System.Windows.Controls.ValidationRule>。</span><span class="sxs-lookup"><span data-stu-id="3cd41-406">The binding engine checks each <xref:System.Windows.Controls.ValidationRule> associated with a binding each time an input value (the binding target property value) is transferred to the binding source property.</span></span> <span data-ttu-id="3cd41-407">有关验证过程的详细讨论，请参阅[数据绑定概述](/dotnet/framework/wpf/data/data-binding-overview)中的 "数据验证" 一节。</span><span class="sxs-lookup"><span data-stu-id="3cd41-407">For a detailed discussion of the validation process, see the Data Validation section in the [Data Binding Overview](/dotnet/framework/wpf/data/data-binding-overview).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3cd41-408">此属性仅可通过以下方式设置 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]：使用所示的集合语法，或通过访问集合对象并使用其各种方法，如 `Add`。</span><span class="sxs-lookup"><span data-stu-id="3cd41-408">This property can be set in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] only by using the collection syntax shown, or by accessing the collection object and using its various methods, such as `Add`.</span></span> <span data-ttu-id="3cd41-409">用于访问集合对象的属性是只读的，而集合本身是可读写的。</span><span class="sxs-lookup"><span data-stu-id="3cd41-409">The property to access the collection object is read-only, whereas the collection itself is read-write.</span></span>  
  
<a name="xamlPropertyElementUsage_ValidationRules"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="3cd41-410">XAML 属性元素用法</span><span class="sxs-lookup"><span data-stu-id="3cd41-410">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.ValidationRules>  
    oneOrMoreValidationRules  
  </object.ValidationRules>  
</object>  
  
```  
  
<a name="xamlValues_ValidationRules"></a>   
## <a name="xaml-values"></a><span data-ttu-id="3cd41-411">XAML 值</span><span class="sxs-lookup"><span data-stu-id="3cd41-411">XAML Values</span></span>  
 <span data-ttu-id="3cd41-412">*oneOrMoreValidationRules*</span><span class="sxs-lookup"><span data-stu-id="3cd41-412">*oneOrMoreValidationRules*</span></span>  
 <span data-ttu-id="3cd41-413">一个或多个 <xref:System.Windows.Controls.ValidationRule> 对象。</span><span class="sxs-lookup"><span data-stu-id="3cd41-413">One or more <xref:System.Windows.Controls.ValidationRule> objects.</span></span> <span data-ttu-id="3cd41-414">您可以使用 <xref:System.Windows.Controls.ExceptionValidationRule> 类，也可以通过创建 <xref:System.Windows.Controls.ValidationRule> 类的子类创建自定义规则。</span><span class="sxs-lookup"><span data-stu-id="3cd41-414">You can use the <xref:System.Windows.Controls.ExceptionValidationRule> class or create custom rules by subclassing the <xref:System.Windows.Controls.ValidationRule> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Validation" />
      </Docs>
    </Member>
    <Member MemberName="XmlNamespaceManager">
      <MemberSignature Language="C#" Value="see GetXmlNamespaceManager, and SetXmlNamespaceManager" />
      <MemberSignature Language="ILAsm" Value="see GetXmlNamespaceManager, and SetXmlNamespaceManager" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.XmlNamespaceManager" />
      <MemberSignature Language="VB.NET" Value="see GetXmlNamespaceManager, and SetXmlNamespaceManager" />
      <MemberSignature Language="F#" Value="see GetXmlNamespaceManager, and SetXmlNamespaceManager" Usage="see GetXmlNamespaceManager, and SetXmlNamespaceManager" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3cd41-415">获取或设置用于在 XML 绑定中执行可以识别命名空间的 <see langword="XPath" /> 查询的 <see cref="T:System.Xml.XmlNamespaceManager" />。</span><span class="sxs-lookup"><span data-stu-id="3cd41-415">Gets or sets the <see cref="T:System.Xml.XmlNamespaceManager" /> used to perform namespace-aware <see langword="XPath" /> queries in XML bindings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd41-416">此附加属性使用属性值继承，这会重现 [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]中存在的命名空间继承的行为。</span><span class="sxs-lookup"><span data-stu-id="3cd41-416">This attached property uses property value inheritance, which reproduces the behavior of namespace inheritance that is present in [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)].</span></span> <span data-ttu-id="3cd41-417">有关详细信息，请参阅[属性值继承](/dotnet/framework/wpf/advanced/property-value-inheritance)。</span><span class="sxs-lookup"><span data-stu-id="3cd41-417">For details, see [Property Value Inheritance](/dotnet/framework/wpf/advanced/property-value-inheritance).</span></span>  
  
<a name="dependencyPropertyInfo_XmlNamespaceManager"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3cd41-418">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="3cd41-418">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3cd41-419">标识符字段</span><span class="sxs-lookup"><span data-stu-id="3cd41-419">Identifier field</span></span>|<xref:System.Windows.Data.Binding.XmlNamespaceManagerProperty>|  
|<span data-ttu-id="3cd41-420">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="3cd41-420">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlNamespaceManagerProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty XmlNamespaceManagerProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty XmlNamespaceManagerProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.XmlNamespaceManagerProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly XmlNamespaceManagerProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ XmlNamespaceManagerProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable XmlNamespaceManagerProperty : System.Windows.DependencyProperty" Usage="System.Windows.Data.Binding.XmlNamespaceManagerProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd41-421">标识 <see cref="P:System.Windows.Data.Binding.XmlNamespaceManager" /> 附加属性。</span><span class="sxs-lookup"><span data-stu-id="3cd41-421">Identifies the <see cref="P:System.Windows.Data.Binding.XmlNamespaceManager" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XPath">
      <MemberSignature Language="C#" Value="public string XPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XPath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.XPath" />
      <MemberSignature Language="VB.NET" Value="Public Property XPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XPath : string with get, set" Usage="System.Windows.Data.Binding.XPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd41-422">获取或设置 <see langword="XPath" /> 查询，该查询返回要使用的 [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] 绑定源上的值。</span><span class="sxs-lookup"><span data-stu-id="3cd41-422">Gets or sets an <see langword="XPath" /> query that returns the value on the [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] binding source to use.</span></span></summary>
        <value><span data-ttu-id="3cd41-423"><see langword="XPath" /> 查询。</span><span class="sxs-lookup"><span data-stu-id="3cd41-423">The <see langword="XPath" /> query.</span></span> <span data-ttu-id="3cd41-424">默认为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3cd41-424">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd41-425">当绑定源 [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] 数据而不是 [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] 对象时，将使用 <xref:System.Windows.Data.Binding.XPath%2A> 属性，而不是 <xref:System.Windows.Data.Binding.Path%2A> 属性来指示要使用的绑定源上的值的路径。</span><span class="sxs-lookup"><span data-stu-id="3cd41-425">When the binding source is [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] data instead of a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] object, the <xref:System.Windows.Data.Binding.XPath%2A> property is used instead of the <xref:System.Windows.Data.Binding.Path%2A> property to indicate the path to the value on the binding source to use.</span></span>  
  
 <span data-ttu-id="3cd41-426">通过设置 <xref:System.Windows.Data.Binding.XPath%2A> 属性，你将创建一个 `XPath` 查询来选择节点或节点集合（<xref:System.Xml.XmlElement?displayProperty=nameWithType> 和 <xref:System.Xml.XmlAttribute?displayProperty=nameWithType> 均派生自 <xref:System.Xml.XmlNode?displayProperty=nameWithType>）。</span><span class="sxs-lookup"><span data-stu-id="3cd41-426">By setting the <xref:System.Windows.Data.Binding.XPath%2A> property, you are creating an `XPath` query to select a node or a collection of nodes (<xref:System.Xml.XmlElement?displayProperty=nameWithType> and <xref:System.Xml.XmlAttribute?displayProperty=nameWithType> both derive from <xref:System.Xml.XmlNode?displayProperty=nameWithType>).</span></span> <span data-ttu-id="3cd41-427"><xref:System.Xml.XmlNode?displayProperty=nameWithType> 是 [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] 对象，这意味着可以使用 <xref:System.Windows.Data.Binding.Path%2A> 属性绑定到其属性。</span><span class="sxs-lookup"><span data-stu-id="3cd41-427"><xref:System.Xml.XmlNode?displayProperty=nameWithType> is a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] object, which means you can bind to its properties using the <xref:System.Windows.Data.Binding.Path%2A> property.</span></span>  
  
 <span data-ttu-id="3cd41-428"><xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> 方法处理 <xref:System.Windows.Data.Binding.XPath%2A> 属性中的 `XPath` 表达式。</span><span class="sxs-lookup"><span data-stu-id="3cd41-428">The <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> method handles the `XPath` expressions from the <xref:System.Windows.Data.Binding.XPath%2A> property.</span></span> <span data-ttu-id="3cd41-429">`XPath` 函数不受支持。</span><span class="sxs-lookup"><span data-stu-id="3cd41-429">`XPath` functions are not supported.</span></span> <span data-ttu-id="3cd41-430">有关 `XPath` 表达式的信息，请参阅 "示例" 部分中提供的 <xref:System.Xml.XmlNode.SelectNodes%2A> 文档和一些示例。</span><span class="sxs-lookup"><span data-stu-id="3cd41-430">For `XPath` expression information, see the <xref:System.Xml.XmlNode.SelectNodes%2A> documentation and some examples provided in the Example section.</span></span>  
  
 <span data-ttu-id="3cd41-431">LINQ to XML 对象 <xref:System.Xml.Linq.XDocument> 并且 <xref:System.Xml.Linq.XElement> 不使用 `XPath`。</span><span class="sxs-lookup"><span data-stu-id="3cd41-431">LINQ to XML objects <xref:System.Xml.Linq.XDocument> and <xref:System.Xml.Linq.XElement> do not use `XPath`.</span></span> <span data-ttu-id="3cd41-432">有关详细信息，请参阅[如何：绑定到 XDocument、system.xml.linq.xelement> 或 LINQ FOR XML 查询结果](/dotnet/framework/wpf/data/how-to-bind-to-xdocument-xelement-or-linq-for-xml-query-results)。</span><span class="sxs-lookup"><span data-stu-id="3cd41-432">For details, see [How to: Bind to XDocument, XElement, or LINQ for XML Query Results](/dotnet/framework/wpf/data/how-to-bind-to-xdocument-xelement-or-linq-for-xml-query-results).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
