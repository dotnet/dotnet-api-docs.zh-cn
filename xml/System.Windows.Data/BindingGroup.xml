<Type Name="BindingGroup" FullName="System.Windows.Data.BindingGroup">
  <Metadata><Meta Name="ms.openlocfilehash" Value="433a6266690251732a43414cba5304b6d694f47a" /><Meta Name="ms.sourcegitcommit" Value="9f423345753728e8cad38d4a22663a109e69ea91" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/04/2021" /><Meta Name="ms.locfileid" Value="102064690" /></Metadata><TypeSignature Language="C#" Value="public class BindingGroup : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BindingGroup extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingGroup" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingGroup&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingGroup : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type BindingGroup = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="353a6-101">包含绑定集合和用于验证对象的 <see cref="T:System.Windows.Controls.ValidationRule" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="353a6-101">Contains a collection of bindings and <see cref="T:System.Windows.Controls.ValidationRule" /> objects that are used to validate an object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="353a6-102"><xref:System.Windows.Data.BindingGroup>创建多个绑定之间的关系，这些绑定可以同时进行验证和更新。</span><span class="sxs-lookup"><span data-stu-id="353a6-102">A <xref:System.Windows.Data.BindingGroup> creates a relationship between multiple bindings, which can be validated and updated together.</span></span> <span data-ttu-id="353a6-103">例如，假设应用程序提示用户输入地址。</span><span class="sxs-lookup"><span data-stu-id="353a6-103">For example, suppose that an application prompts the user to enter an address.</span></span> <span data-ttu-id="353a6-104">然后，应用程序使用用户提供的值填充类型为的对象 `Address` ，该对象具有属性、 `Street` 、、 `City` `ZipCode` 和 `Country` 。</span><span class="sxs-lookup"><span data-stu-id="353a6-104">The application then populates an object of type `Address`, which has the properties, `Street`, `City`, `ZipCode`, and `Country`, with the values that the user provided.</span></span> <span data-ttu-id="353a6-105">应用程序有一个面板，其中包含四个 <xref:System.Windows.Controls.TextBox> 控件，其中每个控件都绑定到对象的一个属性。</span><span class="sxs-lookup"><span data-stu-id="353a6-105">The application has a panel that contains four <xref:System.Windows.Controls.TextBox> controls, each of which is data bound to one of the object's properties.</span></span> <span data-ttu-id="353a6-106">可以 <xref:System.Windows.Controls.ValidationRule> 在中使用 <xref:System.Windows.Data.BindingGroup> 来验证 `Address` 对象。</span><span class="sxs-lookup"><span data-stu-id="353a6-106">You can use a <xref:System.Windows.Controls.ValidationRule> in a <xref:System.Windows.Data.BindingGroup> to validate the `Address` object.</span></span> <span data-ttu-id="353a6-107">如果绑定参与到同一 <xref:System.Windows.Data.BindingGroup> ，则可以确保邮政编码对地址的国家/地区有效。</span><span class="sxs-lookup"><span data-stu-id="353a6-107">If the bindings participate in the same <xref:System.Windows.Data.BindingGroup>, you can ensure that the zip-code is valid for the country/region of the address.</span></span>  
  
 <span data-ttu-id="353a6-108">您可以 <xref:System.Windows.FrameworkElement.BindingGroup%2A> 在或上设置属性 <xref:System.Windows.FrameworkElement> <xref:System.Windows.FrameworkContentElement> 。</span><span class="sxs-lookup"><span data-stu-id="353a6-108">You set the <xref:System.Windows.FrameworkElement.BindingGroup%2A> property on <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.</span></span> <span data-ttu-id="353a6-109">子元素继承 <xref:System.Windows.Data.BindingGroup> 其父元素，就像任何其他可继承的属性一样。</span><span class="sxs-lookup"><span data-stu-id="353a6-109">Child elements inherit the <xref:System.Windows.Data.BindingGroup> from their parent elements, just as with any other inheritable property.</span></span> <span data-ttu-id="353a6-110">如果发生以下情况之一，则会将子代元素上的绑定添加到 <xref:System.Windows.Data.BindingGroup> ：</span><span class="sxs-lookup"><span data-stu-id="353a6-110">A binding on a descendent element is added to a <xref:System.Windows.Data.BindingGroup> if one of the following situations occurs:</span></span>  
  
-   <span data-ttu-id="353a6-111">绑定的源和 <xref:System.Windows.FrameworkElement.DataContext%2A> 具有 <xref:System.Windows.Data.BindingGroup> 相同对象且 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 未设置属性的元素的。</span><span class="sxs-lookup"><span data-stu-id="353a6-111">The binding's source and the <xref:System.Windows.FrameworkElement.DataContext%2A> of the element that has the <xref:System.Windows.Data.BindingGroup> are the same object and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="353a6-112"><xref:System.Windows.Data.BindingBase.BindingGroupName%2A>绑定的属性等于的 <xref:System.Windows.Data.BindingGroup.Name%2A> <xref:System.Windows.FrameworkContentElement.BindingGroup%2A> ，并且未显式设置为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="353a6-112">The <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of the binding is equal to the <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.FrameworkContentElement.BindingGroup%2A> and they are not explicitly set to `null`.</span></span>  
  
 <span data-ttu-id="353a6-113">在地址的示例中，假定的 <xref:System.Windows.FrameworkElement.DataContext%2A> <xref:System.Windows.Controls.Panel> 设置为类型的对象 `Address` 。</span><span class="sxs-lookup"><span data-stu-id="353a6-113">In the example of the address, suppose that the <xref:System.Windows.FrameworkElement.DataContext%2A> of the <xref:System.Windows.Controls.Panel> is set to the object of type `Address`.</span></span> <span data-ttu-id="353a6-114">每个的绑定 <xref:System.Windows.Controls.TextBox> 都会添加到面板的中 <xref:System.Windows.Data.BindingGroup> 。</span><span class="sxs-lookup"><span data-stu-id="353a6-114">The binding for each <xref:System.Windows.Controls.TextBox> is added to the <xref:System.Windows.Data.BindingGroup> of the panel.</span></span>  
  
 <span data-ttu-id="353a6-115">将 <xref:System.Windows.Controls.ValidationRule> 对象添加到 <xref:System.Windows.Data.BindingGroup> 。</span><span class="sxs-lookup"><span data-stu-id="353a6-115">You add <xref:System.Windows.Controls.ValidationRule> objects to a <xref:System.Windows.Data.BindingGroup>.</span></span> <span data-ttu-id="353a6-116"><xref:System.Windows.Data.BindingGroup>当运行时，将作为方法的第一个参数传递 <xref:System.Windows.Controls.ValidationRule.Validate%2A> <xref:System.Windows.Controls.ValidationRule> 。</span><span class="sxs-lookup"><span data-stu-id="353a6-116">The <xref:System.Windows.Data.BindingGroup> is passed as the first parameter of the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method when the <xref:System.Windows.Controls.ValidationRule> runs.</span></span> <span data-ttu-id="353a6-117">您可以使用 <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> 或 <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> 方法 <xref:System.Windows.Data.BindingGroup> 来获取对象的建议值，并使用 <xref:System.Windows.Data.BindingGroup.Items%2A> 属性来获取绑定的源。</span><span class="sxs-lookup"><span data-stu-id="353a6-117">You can use the <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> or <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> method on that <xref:System.Windows.Data.BindingGroup> to get the proposed values of the object, and the <xref:System.Windows.Data.BindingGroup.Items%2A> property to get the sources of the bindings.</span></span>  
  
 <span data-ttu-id="353a6-118"><xref:System.Windows.Data.BindingGroup>同时更新绑定的源，而不是单独更新每个绑定。</span><span class="sxs-lookup"><span data-stu-id="353a6-118">A <xref:System.Windows.Data.BindingGroup> updates the sources of the binding at the same time instead of each binding being updated separately.</span></span> <span data-ttu-id="353a6-119">当你调用其中一种方法来验证 (<xref:System.Windows.Data.BindingGroup.ValidateWithoutUpdate%2A> 、或) 的数据时 <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> ， <xref:System.Windows.Controls.TextBox> 会验证该示例中每个的绑定，并可能会更新这些绑定。</span><span class="sxs-lookup"><span data-stu-id="353a6-119">When you call one of the methods to validate the data (<xref:System.Windows.Data.BindingGroup.ValidateWithoutUpdate%2A>, <xref:System.Windows.Data.BindingGroup.UpdateSources%2A>, or <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>), the binding for each <xref:System.Windows.Controls.TextBox> in the example is validated and potentially updated.</span></span> <span data-ttu-id="353a6-120">当绑定为的一部分时 <xref:System.Windows.Data.BindingGroup> ， <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> <xref:System.Windows.Data.BindingGroup> 除非显式设置了属性，否则直到你调用或上的时，绑定的源才会更新 <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> 。</span><span class="sxs-lookup"><span data-stu-id="353a6-120">When a binding is part of a <xref:System.Windows.Data.BindingGroup>, the source of the binding is not updated until you call <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> or <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> on the <xref:System.Windows.Data.BindingGroup>, unless you explicitly set the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="353a6-121">下面的示例创建一个应用程序，该应用程序提示用户输入商品的描述和价格以及产品/服务的到期日期。</span><span class="sxs-lookup"><span data-stu-id="353a6-121">The following examples create an application that prompts the user to enter the description and price of an item and the date that the offer expires.</span></span> <span data-ttu-id="353a6-122">应用程序将在窗体下显示项的当前信息。</span><span class="sxs-lookup"><span data-stu-id="353a6-122">The application displays the current information for the item below the form.</span></span> <span data-ttu-id="353a6-123">用户可以提交或取消更改。</span><span class="sxs-lookup"><span data-stu-id="353a6-123">The user can submit or cancel the changes.</span></span>  
  
 <span data-ttu-id="353a6-124">应用程序执行以下操作来实现此行为。</span><span class="sxs-lookup"><span data-stu-id="353a6-124">The application does the following to achieve this behavior.</span></span>  
  
-   <span data-ttu-id="353a6-125">创建一个 <xref:System.Windows.Data.BindingGroup> 并在 <xref:System.Windows.Controls.StackPanel> 创建应用程序 (UI) 的用户界面时将其添加到根。</span><span class="sxs-lookup"><span data-stu-id="353a6-125">Creates a <xref:System.Windows.Data.BindingGroup> and adds it the root <xref:System.Windows.Controls.StackPanel> when it creates the user interface (UI) of the application.</span></span>  
  
-   <span data-ttu-id="353a6-126"><xref:System.Windows.Data.BindingGroup.BeginEdit%2A> <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> 在应用程序的逻辑中调用、和以启用回滚更改。</span><span class="sxs-lookup"><span data-stu-id="353a6-126">Calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A>, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>, and <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> in the application's logic to enable rolling back changes.</span></span>  
  
-   <span data-ttu-id="353a6-127">调用 <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> 方法中的 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 以获取用户的输入，然后检查100美元的项是否至少有七天可用。</span><span class="sxs-lookup"><span data-stu-id="353a6-127">Calls <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> in a <xref:System.Windows.Controls.ValidationRule.Validate%2A> method to get the user's input and then check that an item over 100 dollars is available for at least seven days.</span></span>  
  
 <span data-ttu-id="353a6-128">下面的示例创建 (UI) 应用程序的用户界面。</span><span class="sxs-lookup"><span data-stu-id="353a6-128">The following example creates the user interface (UI) of the application.</span></span> <span data-ttu-id="353a6-129">根 <xref:System.Windows.Controls.StackPanel> 具有一个 <xref:System.Windows.Data.BindingGroup> ，它包含用于 <xref:System.Windows.Controls.ValidationRule> 验证项的，如前文所述。</span><span class="sxs-lookup"><span data-stu-id="353a6-129">The root <xref:System.Windows.Controls.StackPanel> has a <xref:System.Windows.Data.BindingGroup> that contains a <xref:System.Windows.Controls.ValidationRule> that validates the item, as described previously.</span></span> <span data-ttu-id="353a6-130">属性和属性的绑定对象将 `Price` `OfferExpires` 成为的一部分 <xref:System.Windows.Data.BindingGroup> ，并且每个绑定都有一个 <xref:System.Windows.Controls.ValidationRule> 来确保价格和日期分别是有效值。</span><span class="sxs-lookup"><span data-stu-id="353a6-130">The binding objects on the `Price` property and the `OfferExpires` property become part of the <xref:System.Windows.Data.BindingGroup> and each binding has a <xref:System.Windows.Controls.ValidationRule> to make sure that price and date, respectively, are valid values.</span></span> <span data-ttu-id="353a6-131">单个属性的验证规则将在 <xref:System.Windows.Controls.ValidationRule> 上的中运行 <xref:System.Windows.Data.BindingGroup> 。</span><span class="sxs-lookup"><span data-stu-id="353a6-131">The validation rules for the individual properties run before the <xref:System.Windows.Controls.ValidationRule> on the <xref:System.Windows.Data.BindingGroup>.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#WindowLayout](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#windowlayout)]  
  
 <span data-ttu-id="353a6-132">下面的示例演示应用程序的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="353a6-132">The following example shows the event handlers for the application.</span></span> <span data-ttu-id="353a6-133">当用户单击 "提交" 按钮时，应用程序会调用 <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> 以运行 <xref:System.Windows.Controls.ValidationRule> 与相关联的每个 <xref:System.Windows.Data.BindingGroup> 。</span><span class="sxs-lookup"><span data-stu-id="353a6-133">When the user clicks the Submit button, the application calls <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> to run each <xref:System.Windows.Controls.ValidationRule> that is associated with the <xref:System.Windows.Data.BindingGroup>.</span></span> <span data-ttu-id="353a6-134">如果每个成功，则会将 <xref:System.Windows.Controls.ValidationRule> <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> 值保存到对象并结束编辑事务。</span><span class="sxs-lookup"><span data-stu-id="353a6-134">If each <xref:System.Windows.Controls.ValidationRule> succeeds, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> saves the values to the object and ends the edit transaction.</span></span> <span data-ttu-id="353a6-135">如果 <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> 成功，则应用程序将开始另一个编辑事务。</span><span class="sxs-lookup"><span data-stu-id="353a6-135">If <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> is successful, the application begins another edit transaction.</span></span> <span data-ttu-id="353a6-136">当 <xref:System.Windows.Controls.ValidationRule> 失败时，将 <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> 发生事件，因为应用程序 <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> 在 `true` 前面的 <xref:System.Windows.Data.BindingGroup> 示例中的 (上) 。</span><span class="sxs-lookup"><span data-stu-id="353a6-136">When a <xref:System.Windows.Controls.ValidationRule> fails, the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> event occurs because the application set <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> to `true` on the <xref:System.Windows.Data.BindingGroup> (in the previous example).</span></span> <span data-ttu-id="353a6-137">`ItemError` 处理 <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> 事件，并向用户显示有关验证错误的信息。</span><span class="sxs-lookup"><span data-stu-id="353a6-137">`ItemError` handles the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> event and displays information about the validation error to the user.</span></span> <span data-ttu-id="353a6-138">该示例还处理的 <xref:System.Windows.FrameworkElement.Loaded> 事件和 " <xref:System.Windows.Controls.StackPanel> 取消" <xref:System.Windows.Controls.Primitives.ButtonBase.Click> 按钮的事件 。</span><span class="sxs-lookup"><span data-stu-id="353a6-138">The example also handles the <xref:System.Windows.FrameworkElement.Loaded> event for the <xref:System.Windows.Controls.StackPanel> and the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event for the **Cancel** button.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#WindowLogic](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#windowlogic)]
 [!code-vb[BindingGroupSnippets#WindowLogic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#windowlogic)]  
  
 <span data-ttu-id="353a6-139">下面的示例演示了自定义 <xref:System.Windows.Controls.ValidationRule> `ValidateDateAndPrice` ，它已添加到 <xref:System.Windows.Data.BindingGroup> 第一个示例中的。</span><span class="sxs-lookup"><span data-stu-id="353a6-139">The following example shows the custom <xref:System.Windows.Controls.ValidationRule> `ValidateDateAndPrice`, which was added to the <xref:System.Windows.Data.BindingGroup> in the first example.</span></span> <span data-ttu-id="353a6-140"><xref:System.Windows.Controls.ValidationRule> <xref:System.Windows.Data.BindingGroup> 在其方法中使用 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 来获取用户在窗体中输入的值，并检查项是否超过100美元，是否可用于至少7天。</span><span class="sxs-lookup"><span data-stu-id="353a6-140">The <xref:System.Windows.Controls.ValidationRule> uses the <xref:System.Windows.Data.BindingGroup> in its <xref:System.Windows.Controls.ValidationRule.Validate%2A> method to get the values the user entered into the form, and checks that if an item is over 100 dollars, it will be available for at least seven days.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingGroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingGroup();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="353a6-141">初始化 <see cref="T:System.Windows.Data.BindingGroup" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="353a6-141">Initializes a new instance of the <see cref="T:System.Windows.Data.BindingGroup" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberSignature Language="F#" Value="member this.BeginEdit : unit -&gt; unit" Usage="bindingGroup.BeginEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="353a6-142">开始 <see cref="T:System.Windows.Data.BindingGroup" /> 中源上的编辑事务。</span><span class="sxs-lookup"><span data-stu-id="353a6-142">Begins an edit transaction on the sources in the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="353a6-143">如果支持中的源 <xref:System.Windows.Data.BindingGroup> 放弃挂起的更改，则可以调用 <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> 来开始编辑事务，调用 <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> 以保存挂起的更改，调用 <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> 以放弃挂起的更改。</span><span class="sxs-lookup"><span data-stu-id="353a6-143">If the sources in the <xref:System.Windows.Data.BindingGroup> support discarding pending changes, you can call <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> to begin the edit transaction, call <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> to save the pending changes, call <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> to discard the pending changes.</span></span>  
  
 <span data-ttu-id="353a6-144">对于实现的中的每个对象 <xref:System.Windows.Data.BindingGroup.Items%2A> <xref:System.ComponentModel.IEditableObject> ， <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> 调用 <xref:System.ComponentModel.IEditableObject.BeginEdit%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="353a6-144">For each object in <xref:System.Windows.Data.BindingGroup.Items%2A> that implements <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> calls <xref:System.ComponentModel.IEditableObject.BeginEdit%2A?displayProperty=nameWithType></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="353a6-145">下面的示例在 <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> 窗口加载以开始编辑事务时进行调用。</span><span class="sxs-lookup"><span data-stu-id="353a6-145">The following example calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> when a window loads to begin the edit transaction.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#BeginEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#beginedit)]
 [!code-vb[BindingGroupSnippets#BeginEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#beginedit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingExpressions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt; BindingExpressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Data.BindingExpressionBase&gt; BindingExpressions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.BindingExpressions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingExpressions As Collection(Of BindingExpressionBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Data::BindingExpressionBase ^&gt; ^ BindingExpressions { System::Collections::ObjectModel::Collection&lt;System::Windows::Data::BindingExpressionBase ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BindingExpressions : System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt;" Usage="System.Windows.Data.BindingGroup.BindingExpressions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="353a6-146">获取 <see cref="T:System.Windows.Data.BindingExpression" /> 对象的集合，其中包含有关 <see cref="T:System.Windows.Data.BindingGroup" /> 中每个绑定的信息。</span><span class="sxs-lookup"><span data-stu-id="353a6-146">Gets a collection of <see cref="T:System.Windows.Data.BindingExpression" /> objects that contains information for each Binding in the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></summary>
        <value><span data-ttu-id="353a6-147">一个 <see cref="T:System.Windows.Data.BindingExpression" /> 对象的集合，其中包含有关 <see cref="T:System.Windows.Data.BindingGroup" /> 中每个绑定的信息。</span><span class="sxs-lookup"><span data-stu-id="353a6-147">A collection of <see cref="T:System.Windows.Data.BindingExpression" /> objects that contains information for each binding in the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="353a6-148"><xref:System.Windows.Data.BindingExpression> <xref:System.Windows.Data.BindingGroup> 如果出现以下情况之一，则属于：</span><span class="sxs-lookup"><span data-stu-id="353a6-148">A <xref:System.Windows.Data.BindingExpression> belongs to a <xref:System.Windows.Data.BindingGroup> if one of the following cases occurs:</span></span>  
  
-   <span data-ttu-id="353a6-149">绑定的源和 <xref:System.Windows.FrameworkElement.DataContext%2A> 具有相同对象的元素的， <xref:System.Windows.Data.BindingGroup> <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 未设置。</span><span class="sxs-lookup"><span data-stu-id="353a6-149">The binding's source and the <xref:System.Windows.FrameworkElement.DataContext%2A> of the element that has the <xref:System.Windows.Data.BindingGroup> are the same object and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> is not set.</span></span>  
  
-   <span data-ttu-id="353a6-150"><xref:System.Windows.Data.BindingBase.BindingGroupName%2A>绑定的属性和的 <xref:System.Windows.Data.BindingGroup.Name%2A> <xref:System.Windows.Data.BindingGroup> 设置为相同的非 null 值，并且 <xref:System.Windows.Data.BindingGroup> 属于绑定的目标元素的父元素。</span><span class="sxs-lookup"><span data-stu-id="353a6-150">The <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of the binding and the <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> are set to the same non-null value and the <xref:System.Windows.Data.BindingGroup> belongs to a parent element of the binding's target element.</span></span>  
  
-   <span data-ttu-id="353a6-151">你将添加 <xref:System.Windows.Data.BindingExpression> 到 <xref:System.Windows.Data.BindingGroup.BindingExpressions%2A> 。</span><span class="sxs-lookup"><span data-stu-id="353a6-151">You add a <xref:System.Windows.Data.BindingExpression> to <xref:System.Windows.Data.BindingGroup.BindingExpressions%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : unit -&gt; unit" Usage="bindingGroup.CancelEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="353a6-152">结束编辑事务并放弃挂起的更改。</span><span class="sxs-lookup"><span data-stu-id="353a6-152">Ends the edit transaction and discards the pending changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="353a6-153">如果源对象能够执行此操作并结束编辑事务，则此方法会导致源放弃挂起的更改。</span><span class="sxs-lookup"><span data-stu-id="353a6-153">This method causes the sources to discard the pending changes, if a source object is capable of doing so and end the edit transaction.</span></span> <span data-ttu-id="353a6-154">然后，方法用保存的源值更新目标属性。</span><span class="sxs-lookup"><span data-stu-id="353a6-154">Then the method updates the target properties with the saved source values.</span></span>  
  
 <span data-ttu-id="353a6-155">对于实现的中的每个对象 <xref:System.Windows.Data.BindingGroup.Items%2A> <xref:System.ComponentModel.IEditableObject> ， <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> 调用 <xref:System.ComponentModel.IEditableObject.CancelEdit%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="353a6-155">For each object in <xref:System.Windows.Data.BindingGroup.Items%2A> that implements <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> calls <xref:System.ComponentModel.IEditableObject.CancelEdit%2A?displayProperty=nameWithType></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="353a6-156">下面的示例调用 <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> 以放弃挂起的更改，然后调用 <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> 来准备重新编辑的源。</span><span class="sxs-lookup"><span data-stu-id="353a6-156">The following example calls <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> to discard the pending changes and then calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> to prepare the source to be re-edited.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#CancelEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#canceledit)]
 [!code-vb[BindingGroupSnippets#CancelEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#canceledit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRestoreValues">
      <MemberSignature Language="C#" Value="public bool CanRestoreValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRestoreValues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.CanRestoreValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRestoreValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRestoreValues { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRestoreValues : bool" Usage="System.Windows.Data.BindingGroup.CanRestoreValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="353a6-157">获取绑定中的每个源是否都可以放弃挂起的更改并还原原始值。</span><span class="sxs-lookup"><span data-stu-id="353a6-157">Gets whether each source in the binding can discard pending changes and restore the original values.</span></span></summary>
        <value><span data-ttu-id="353a6-158">如果绑定中的每个源都可以放弃挂起的更改并还原原始值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="353a6-158"><see langword="true" /> if each source in the binding can discard pending changes and restore the original values; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="353a6-159">如果源实现，则源可以放弃挂起 <xref:System.ComponentModel.IEditableObject> 的更改。</span><span class="sxs-lookup"><span data-stu-id="353a6-159">A source can discard pending changes if it implements <xref:System.ComponentModel.IEditableObject>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitEdit">
      <MemberSignature Language="C#" Value="public bool CommitEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CommitEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.CommitEdit" />
      <MemberSignature Language="VB.NET" Value="Public Function CommitEdit () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CommitEdit();" />
      <MemberSignature Language="F#" Value="member this.CommitEdit : unit -&gt; bool" Usage="bindingGroup.CommitEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="353a6-160">运行所有 <see cref="T:System.Windows.Controls.ValidationRule" /> 对象，并且在所有验证规则都成功时，更新绑定源。</span><span class="sxs-lookup"><span data-stu-id="353a6-160">Runs all the <see cref="T:System.Windows.Controls.ValidationRule" /> objects and updates the binding sources if all validation rules succeed.</span></span></summary>
        <returns><span data-ttu-id="353a6-161">如果每个 <see cref="T:System.Windows.Controls.ValidationRule" /> 都成功且将值提交到了源，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="353a6-161"><see langword="true" /> if every <see cref="T:System.Windows.Controls.ValidationRule" /> succeeds and the values are committed to the sources; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="353a6-162">如果每个 <xref:System.Windows.Controls.ValidationRule> 成功，则此方法会导致源提交挂起的更改并结束编辑事务（如果源对象可以这样做）。</span><span class="sxs-lookup"><span data-stu-id="353a6-162">If every <xref:System.Windows.Controls.ValidationRule> succeeds, this method causes the sources to commit the pending changes and end the edit transaction, if a source object is capable of doing so.</span></span>  
  
 <span data-ttu-id="353a6-163">对于实现的中的每个对象 <xref:System.Windows.Data.BindingGroup.Items%2A> <xref:System.ComponentModel.IEditableObject> ， <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> 调用 <xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="353a6-163">For each object in <xref:System.Windows.Data.BindingGroup.Items%2A> that implements <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> calls <xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=nameWithType></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="353a6-164">下面的示例调用 <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> 保存挂起的更改，然后调用 <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> 来准备要重新编辑的源。</span><span class="sxs-lookup"><span data-stu-id="353a6-164">The following example calls <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> to save the pending changes and then calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> to prepare the source to be re-edited.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#BeginEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#beginedit)]
 [!code-vb[BindingGroupSnippets#BeginEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#beginedit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (object item, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(object item, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (item As Object, propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Object ^ item, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="override this.GetValue : obj * string -&gt; obj" Usage="bindingGroup.GetValue (item, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="353a6-165">包含指定属性的对象。</span><span class="sxs-lookup"><span data-stu-id="353a6-165">The object that contains the specified property.</span></span></param>
        <param name="propertyName"><span data-ttu-id="353a6-166">要获取其建议值的属性。</span><span class="sxs-lookup"><span data-stu-id="353a6-166">The property whose proposed value to get.</span></span></param>
        <summary><span data-ttu-id="353a6-167">返回指定的属性和项的建议值。</span><span class="sxs-lookup"><span data-stu-id="353a6-167">Returns the proposed value for the specified property and item.</span></span></summary>
        <returns><span data-ttu-id="353a6-168">建议的属性值。</span><span class="sxs-lookup"><span data-stu-id="353a6-168">The proposed property value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="353a6-169">在方法中使用此方法 <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType> 可获取要提交到源的值。</span><span class="sxs-lookup"><span data-stu-id="353a6-169">Use this method in the <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType> method to get the value to be committed to the source.</span></span> <span data-ttu-id="353a6-170">返回值的类型取决于发生的阶段 <xref:System.Windows.Controls.ValidationRule> 。</span><span class="sxs-lookup"><span data-stu-id="353a6-170">The type of the return value depends on the stage at which the <xref:System.Windows.Controls.ValidationRule> occurs.</span></span> <span data-ttu-id="353a6-171">例如，如果 <xref:System.Windows.Controls.TextBox> 将数据绑定到类型为 integer 的属性，并且调用的 <xref:System.Windows.Controls.ValidationRule> <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> 将其设置为，则 <xref:System.Windows.Controls.ValidationStep.RawProposedValue> 该方法将返回一个字符串。</span><span class="sxs-lookup"><span data-stu-id="353a6-171">For example, if a <xref:System.Windows.Controls.TextBox> is data bound to a property of type integer and the <xref:System.Windows.Controls.ValidationRule> that calls <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> has its <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> set to <xref:System.Windows.Controls.ValidationStep.RawProposedValue>, the method returns a string.</span></span> <span data-ttu-id="353a6-172">如果将 <xref:System.Windows.Controls.ValidationRule> 其 <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> 设置为 <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue> ，则方法将返回绑定的转换器返回的任何类型。</span><span class="sxs-lookup"><span data-stu-id="353a6-172">If the <xref:System.Windows.Controls.ValidationRule> has its <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> set to <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>, the method returns whatever type that is returned by the binding's converter.</span></span> <span data-ttu-id="353a6-173">在此示例中， <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> 通常返回整数。</span><span class="sxs-lookup"><span data-stu-id="353a6-173">In this example, <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> usually returns an integer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="353a6-174">下面的示例是一个应用程序的一部分，该应用程序提示用户输入多个客户，并为每个客户分配一个销售代表。</span><span class="sxs-lookup"><span data-stu-id="353a6-174">The following example is part of an application that prompts the user to enter multiple customers and assign a sales representative to each customer.</span></span> <span data-ttu-id="353a6-175">应用程序将检查销售代表和客户是否属于同一区域。</span><span class="sxs-lookup"><span data-stu-id="353a6-175">The application checks that the sales representative and the customer belong to the same region.</span></span> <span data-ttu-id="353a6-176">该示例演示 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 方法，该方法使用 <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> 方法获取客户输入的值。</span><span class="sxs-lookup"><span data-stu-id="353a6-176">The example shows the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, which uses the <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> method to get values that the customer entered.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ItemBindGroupValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml.cs#itembindgroupvalidationrule)]
 [!code-vb[BindingGroupSnippets#ItemBindGroupValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window2.xaml.vb#itembindgroupvalidationrule)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="353a6-177">指定项和属性之间没有绑定。</span><span class="sxs-lookup"><span data-stu-id="353a6-177">There is not a binding for the specified item and property.</span></span></exception>
        <exception cref="T:System.Windows.Data.ValueUnavailableException"><span data-ttu-id="353a6-178">由于转换错误或早期验证规则失败，指定的属性值不可用。</span><span class="sxs-lookup"><span data-stu-id="353a6-178">The value of the specified property is not available, due to a conversion error or because an earlier validation rule failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HasValidationError">
      <MemberSignature Language="C#" Value="public bool HasValidationError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.HasValidationError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasValidationError { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValidationError : bool" Usage="System.Windows.Data.BindingGroup.HasValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="353a6-179">获取一个值，该值指示 <see cref="T:System.Windows.Data.BindingGroup" /> 是否具有一个失败的验证规则。</span><span class="sxs-lookup"><span data-stu-id="353a6-179">Gets a value that indicates whether the <see cref="T:System.Windows.Data.BindingGroup" /> has a failed validation rule.</span></span></summary>
        <value><span data-ttu-id="353a6-180">如果 <see cref="T:System.Windows.Data.BindingGroup" /> 具有一个失败的验证规则，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="353a6-180"><see langword="true" /> if the <see cref="T:System.Windows.Data.BindingGroup" /> has a failed validation rule; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="System.Windows.Data.BindingGroup.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="353a6-181">获取或设置指示 <see cref="T:System.Windows.Data.BindingGroup" /> 是否包含尚未写入到源中的建议值的值。</span><span class="sxs-lookup"><span data-stu-id="353a6-181">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Data.BindingGroup" /> contains a proposed value that has not been written to the source.</span></span></summary>
        <value><span data-ttu-id="353a6-182">如果 <see cref="T:System.Windows.Data.BindingGroup" /> 包含尚未写入到源的建议值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="353a6-182"><see langword="true" /> if the <see cref="T:System.Windows.Data.BindingGroup" /> contains a proposed value that has not been written to the source; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.IList Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ Items { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.IList" Usage="System.Windows.Data.BindingGroup.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="353a6-183">获取 <see cref="T:System.Windows.Data.BindingGroup" /> 中的绑定对象所使用的源。</span><span class="sxs-lookup"><span data-stu-id="353a6-183">Gets the sources that are used by the Binding objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></summary>
        <value><span data-ttu-id="353a6-184"><see cref="T:System.Windows.Data.BindingGroup" /> 中的绑定对象所使用的源。</span><span class="sxs-lookup"><span data-stu-id="353a6-184">The sources that are used by the Binding objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="353a6-185">用作源的每个对象都添加到 <xref:System.Windows.Data.BindingGroup.Items%2A> 属性一次，即使该对象用作多个绑定的源也是如此。</span><span class="sxs-lookup"><span data-stu-id="353a6-185">Each object that is used as a source is added into the <xref:System.Windows.Data.BindingGroup.Items%2A> property once, even if the object is used as the source for multiple bindings.</span></span> <span data-ttu-id="353a6-186">通常，中只有一个项 <xref:System.Windows.Data.BindingGroup.Items%2A> ，这是一个对象，该对象是 <xref:System.Windows.FrameworkElement.DataContext%2A> 使用的元素的 <xref:System.Windows.Data.BindingGroup> 。</span><span class="sxs-lookup"><span data-stu-id="353a6-186">Often, there is just one item in <xref:System.Windows.Data.BindingGroup.Items%2A>, which is the object that is the <xref:System.Windows.FrameworkElement.DataContext%2A> of the element that uses the <xref:System.Windows.Data.BindingGroup>.</span></span> <span data-ttu-id="353a6-187"><xref:System.Windows.Data.BindingGroup>不过，可以有多个源。</span><span class="sxs-lookup"><span data-stu-id="353a6-187">It is possible for a <xref:System.Windows.Data.BindingGroup> to have multiple sources, however.</span></span> <span data-ttu-id="353a6-188">例如，如果绑定对象共享相同 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 但使用不同的源对象，则用作源的每个对象都在中 <xref:System.Windows.Data.BindingGroup.Items%2A> 。</span><span class="sxs-lookup"><span data-stu-id="353a6-188">For example, if Binding objects share the same <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> but use different source objects, each object that is used as a source is in <xref:System.Windows.Data.BindingGroup.Items%2A>.</span></span>  
  
 <span data-ttu-id="353a6-189"><xref:System.Windows.Data.BindingGroup.Items%2A>如果绑定的路径解析为源的嵌套属性，则中也可以有多个对象。</span><span class="sxs-lookup"><span data-stu-id="353a6-189">There can also be multiple objects in <xref:System.Windows.Data.BindingGroup.Items%2A> if the path of a Binding resolves to a nested property of the source.</span></span> <span data-ttu-id="353a6-190">例如，假设 <xref:System.Windows.Controls.TextBox> 控件的绑定是的一部分 <xref:System.Windows.Data.BindingGroup> ，并且它 <xref:System.Windows.FrameworkElement.DataContext%2A> 是一个 `Customer` 对象，该对象具有类型为的属性 `Address` 。</span><span class="sxs-lookup"><span data-stu-id="353a6-190">For example, suppose a <xref:System.Windows.Controls.TextBox> control's binding is a part of a <xref:System.Windows.Data.BindingGroup> and its <xref:System.Windows.FrameworkElement.DataContext%2A> is a `Customer` object, which has a property of type `Address`.</span></span> <span data-ttu-id="353a6-191">如果的 <xref:System.Windows.Data.Binding.Path%2A> <xref:System.Windows.Data.Binding> 为 `Address.ZipCode` 属性，则 `Address` 会将添加到属性中 <xref:System.Windows.Data.BindingGroup.Items%2A> 。</span><span class="sxs-lookup"><span data-stu-id="353a6-191">If the <xref:System.Windows.Data.Binding.Path%2A> of the <xref:System.Windows.Data.Binding> is the `Address.ZipCode` property, the `Address` is added to the <xref:System.Windows.Data.BindingGroup.Items%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="353a6-192">以下示例是应用程序的一部分，用于检查用户是否已将两个对象的属性设置为相等值。</span><span class="sxs-lookup"><span data-stu-id="353a6-192">The following examples are part of an application that checks whether the user has set the properties of two objects to equal values.</span></span> <span data-ttu-id="353a6-193">第一个示例创建两个 <xref:System.Windows.Controls.TextBox> 控件，其中每个控件都绑定到不同的源。</span><span class="sxs-lookup"><span data-stu-id="353a6-193">The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which are data bound to a different source.</span></span> <span data-ttu-id="353a6-194">第一个绑定 <xref:System.Windows.Controls.TextBox> `object1` 从 <xref:System.Windows.FrameworkElement.DataContext%2A> 控件的 <xref:System.Windows.Controls.TextBox> 父元素的 () 中获取其源 <xref:System.Windows.Controls.StackPanel> 。</span><span class="sxs-lookup"><span data-stu-id="353a6-194">The binding of the first <xref:System.Windows.Controls.TextBox> gets its source, `object1`, from the <xref:System.Windows.FrameworkElement.DataContext%2A> of the <xref:System.Windows.Controls.TextBox> control's parent element (the <xref:System.Windows.Controls.StackPanel>).</span></span> <span data-ttu-id="353a6-195">在第二个 <xref:System.Windows.Controls.TextBox> 中，绑定的源设置为 `object2` 。</span><span class="sxs-lookup"><span data-stu-id="353a6-195">On the second <xref:System.Windows.Controls.TextBox>, the source of the binding is set to `object2`.</span></span> <span data-ttu-id="353a6-196">该示例还创建了一个 <xref:System.Windows.Controls.Label> 显示验证错误的。</span><span class="sxs-lookup"><span data-stu-id="353a6-196">The example also creates a <xref:System.Windows.Controls.Label> that displays validation errors.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xaml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 <span data-ttu-id="353a6-197">下面的示例演示 <xref:System.Windows.Controls.ValidationRule> 前面的示例使用的。</span><span class="sxs-lookup"><span data-stu-id="353a6-197">The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses.</span></span> <span data-ttu-id="353a6-198">在 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 方法中，该示例从获取每个源对象 <xref:System.Windows.Data.BindingGroup> ，并检查对象的属性是否相等。</span><span class="sxs-lookup"><span data-stu-id="353a6-198">In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Data.BindingGroup.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="353a6-199">获取或设置标识 <see cref="T:System.Windows.Data.BindingGroup" /> 的名称，该名称可用于在 <see cref="T:System.Windows.Data.BindingGroup" /> 中包括和排除绑定对象。</span><span class="sxs-lookup"><span data-stu-id="353a6-199">Gets or sets the name that identifies the <see cref="T:System.Windows.Data.BindingGroup" />, which can be used to include and exclude Binding objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></summary>
        <value><span data-ttu-id="353a6-200">标识 <see cref="T:System.Windows.Data.BindingGroup" /> 的名称。</span><span class="sxs-lookup"><span data-stu-id="353a6-200">The name that identifies the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="353a6-201">如果 <xref:System.Windows.Data.BindingGroup.Name%2A> 为 `null` ，则具有与具有参与的元素的相同的源的绑定 <xref:System.Windows.FrameworkElement.DataContext%2A> <xref:System.Windows.Data.BindingGroup> <xref:System.Windows.Data.BindingGroup> 。</span><span class="sxs-lookup"><span data-stu-id="353a6-201">If <xref:System.Windows.Data.BindingGroup.Name%2A> is `null`, bindings that have a source that is the same object as the <xref:System.Windows.FrameworkElement.DataContext%2A> of the element that has the <xref:System.Windows.Data.BindingGroup> participate in the <xref:System.Windows.Data.BindingGroup>.</span></span>  
  
 <span data-ttu-id="353a6-202">可以包含与父元素的源不同的绑定，该 <xref:System.Windows.FrameworkElement.DataContext%2A> 父元素的 <xref:System.Windows.Data.BindingGroup> 设置为 <xref:System.Windows.Data.BindingGroup.Name%2A> <xref:System.Windows.Data.BindingGroup> ，并将 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 绑定的属性设置为相同的值。</span><span class="sxs-lookup"><span data-stu-id="353a6-202">You can include bindings that have a source that is different from the <xref:System.Windows.FrameworkElement.DataContext%2A> of the parent element that has the <xref:System.Windows.Data.BindingGroup> by setting <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of a binding to the same value.</span></span> <span data-ttu-id="353a6-203">您可以排除与父元素具有相同源的绑定， <xref:System.Windows.FrameworkElement.DataContext%2A> 该父元素的 <xref:System.Windows.Data.BindingGroup> 设置为 <xref:System.Windows.Data.BindingGroup.Name%2A> <xref:System.Windows.Data.BindingGroup> ，并将绑定的 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 属性设置为不同的值。</span><span class="sxs-lookup"><span data-stu-id="353a6-203">You can exclude bindings that have the same source as <xref:System.Windows.FrameworkElement.DataContext%2A> of the parent element that has the <xref:System.Windows.Data.BindingGroup> by setting <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of a binding to different values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="353a6-204">以下示例是应用程序的一部分，用于检查用户是否已将两个对象的属性设置为相等值。</span><span class="sxs-lookup"><span data-stu-id="353a6-204">The following examples are part of an application that checks whether the user has set the properties of two objects to equal values.</span></span> <span data-ttu-id="353a6-205">第一个示例创建两个 <xref:System.Windows.Controls.TextBox> 控件，其中每个控件都绑定到不同的源。</span><span class="sxs-lookup"><span data-stu-id="353a6-205">The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which are data bound to a different source.</span></span> <span data-ttu-id="353a6-206">第一个的绑定 <xref:System.Windows.Controls.TextBox> 是的一部分， <xref:System.Windows.Data.BindingGroup> 因为 <xref:System.Windows.Controls.TextBox> 继承 <xref:System.Windows.FrameworkElement.DataContext%2A> <xref:System.Windows.Data.BindingGroup> 其父对象中的和 <xref:System.Windows.Controls.StackPanel> 。</span><span class="sxs-lookup"><span data-stu-id="353a6-206">The binding of the first <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Controls.TextBox> inherits the <xref:System.Windows.FrameworkElement.DataContext%2A> and <xref:System.Windows.Data.BindingGroup> from its parent <xref:System.Windows.Controls.StackPanel>.</span></span>  
  
 <span data-ttu-id="353a6-207">第二个的绑定 <xref:System.Windows.Controls.TextBox> 是的一部分，原因是的和的均 <xref:System.Windows.Data.BindingGroup> <xref:System.Windows.Data.BindingGroup.Name%2A> <xref:System.Windows.Data.BindingGroup> <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> <xref:System.Windows.Data.Binding> 设置为 `bindingGroup` 。</span><span class="sxs-lookup"><span data-stu-id="353a6-207">The binding on the second <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> of the <xref:System.Windows.Data.Binding> are both set to `bindingGroup`.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xaml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 <span data-ttu-id="353a6-208">下面的示例演示 <xref:System.Windows.Controls.ValidationRule> 前面的示例使用的。</span><span class="sxs-lookup"><span data-stu-id="353a6-208">The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses.</span></span> <span data-ttu-id="353a6-209">在 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 方法中，该示例从获取每个源对象 <xref:System.Windows.Data.BindingGroup> ，并检查对象的属性是否相等。</span><span class="sxs-lookup"><span data-stu-id="353a6-209">In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyOnValidationError">
      <MemberSignature Language="C#" Value="public bool NotifyOnValidationError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.NotifyOnValidationError" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnValidationError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyOnValidationError : bool with get, set" Usage="System.Windows.Data.BindingGroup.NotifyOnValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="353a6-210">获取或设置在 <see cref="E:System.Windows.Controls.Validation.Error" /> 的状态更改时是否发生 <see cref="T:System.Windows.Controls.ValidationRule" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="353a6-210">Gets or sets whether the <see cref="E:System.Windows.Controls.Validation.Error" /> event occurs when the state of a <see cref="T:System.Windows.Controls.ValidationRule" /> changes.</span></span></summary>
        <value><span data-ttu-id="353a6-211">如果在 <see cref="E:System.Windows.Controls.Validation.Error" /> 的状态更改时发生 <see cref="T:System.Windows.Controls.ValidationRule" /> 事件，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="353a6-211"><see langword="true" /> if the <see cref="E:System.Windows.Controls.Validation.Error" /> event occurs when the state of a <see cref="T:System.Windows.Controls.ValidationRule" /> changes; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="353a6-212">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="353a6-212">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="353a6-213"><xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType>附加事件发生在具有的元素上 <xref:System.Windows.Data.BindingGroup> 。</span><span class="sxs-lookup"><span data-stu-id="353a6-213">The <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> attached event occurs on the element that has the <xref:System.Windows.Data.BindingGroup>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="353a6-214">下面的示例创建一个 <xref:System.Windows.Data.BindingGroup> 并将设置 <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> 为， `true` 以便应用程序可以 <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> 在失败时处理事件 <xref:System.Windows.Controls.ValidationRule> 。</span><span class="sxs-lookup"><span data-stu-id="353a6-214">The following example creates a <xref:System.Windows.Data.BindingGroup> and sets <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> to `true` so that the application can handle the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> event when a <xref:System.Windows.Controls.ValidationRule> fails.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#BindingGroup](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#bindinggroup)]  
  
 <span data-ttu-id="353a6-215">下面的示例处理 <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> 事件。</span><span class="sxs-lookup"><span data-stu-id="353a6-215">The following example handles the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ErrorHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#errorhandler)]
 [!code-vb[BindingGroupSnippets#ErrorHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#errorhandler)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ Owner { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.Windows.DependencyObject" Usage="System.Windows.Data.BindingGroup.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="353a6-216">获取 <see cref="T:System.Windows.Data.BindingGroup" /> 分配到的对象。</span><span class="sxs-lookup"><span data-stu-id="353a6-216">Gets the object that this <see cref="T:System.Windows.Data.BindingGroup" /> is assigned to.</span></span></summary>
        <value><span data-ttu-id="353a6-217"><see cref="T:System.Windows.Data.BindingGroup" /> 分配给的对象。</span><span class="sxs-lookup"><span data-stu-id="353a6-217">The object that this <see cref="T:System.Windows.Data.BindingGroup" /> is assigned to.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SharesProposedValues">
      <MemberSignature Language="C#" Value="public bool SharesProposedValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SharesProposedValues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.SharesProposedValues" />
      <MemberSignature Language="VB.NET" Value="Public Property SharesProposedValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SharesProposedValues { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SharesProposedValues : bool with get, set" Usage="System.Windows.Data.BindingGroup.SharesProposedValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="353a6-218">获取或设置一个值，该值指示 <see cref="T:System.Windows.Data.BindingGroup" /> 是否重新使用尚未提交到源的目标值。</span><span class="sxs-lookup"><span data-stu-id="353a6-218">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Data.BindingGroup" /> reuses target values that have not been committed to the source.</span></span></summary>
        <value><span data-ttu-id="353a6-219">如果 <see cref="T:System.Windows.Data.BindingGroup" /> 重新使用尚未提交到源的目标值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="353a6-219"><see langword="true" /> if the <see cref="T:System.Windows.Data.BindingGroup" /> reuses target values that have not been committed to the source; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="353a6-220">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="353a6-220">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="353a6-221">建议的值是在绑定的目标上已更改但尚未提交到源的值。</span><span class="sxs-lookup"><span data-stu-id="353a6-221">A proposed value is a value that has been changed on the target of a binding, but has not been committed to the source.</span></span> <span data-ttu-id="353a6-222">例如，假设上有一个双向绑定 <xref:System.Windows.Controls.TextBox> ，并且 <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> 属性设置为 <xref:System.Windows.Data.UpdateSourceTrigger.Explicit> 。</span><span class="sxs-lookup"><span data-stu-id="353a6-222">For example, suppose that there is a two-way binding on a <xref:System.Windows.Controls.TextBox> and the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property is set to <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>.</span></span> <span data-ttu-id="353a6-223">如果用户更改的值 <xref:System.Windows.Controls.TextBox> ，则建议的值是在将 <xref:System.Windows.Controls.TextBox> 其提交到源之前在中的值。</span><span class="sxs-lookup"><span data-stu-id="353a6-223">If the user changes the value of the <xref:System.Windows.Controls.TextBox>, the proposed value is the value that is in the <xref:System.Windows.Controls.TextBox> before it is committed to source.</span></span>  
  
 <span data-ttu-id="353a6-224">当 <xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A> 为时 `true` ， <xref:System.Windows.Data.BindingGroup> 如果一个绑定离开 system.windows.data.bindinggroup>，则使用建议的值，并且具有相同源的另一个绑定将联接到 system.windows.data.bindinggroup>。</span><span class="sxs-lookup"><span data-stu-id="353a6-224">When <xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A> is `true`, the <xref:System.Windows.Data.BindingGroup> uses the proposed value when one binding leaves the BindingGroup and another Binding with the same source joins the BindingGroup.</span></span>  <span data-ttu-id="353a6-225">例如，假设应用程序允许用户编辑多个字段，并通过单击按钮来更新源对象。</span><span class="sxs-lookup"><span data-stu-id="353a6-225">For example, suppose that an application enables a user to edit multiple fields and update the source object by clicking a button.</span></span> <span data-ttu-id="353a6-226">如果未编辑字段，应用程序会将其显示在中 <xref:System.Windows.Controls.TextBlock> 。</span><span class="sxs-lookup"><span data-stu-id="353a6-226">When a field is not being edited, the application displays it in a <xref:System.Windows.Controls.TextBlock>.</span></span> <span data-ttu-id="353a6-227">当用户开始编辑字段时，应用程序会将替换为 <xref:System.Windows.Controls.TextBlock> <xref:System.Windows.Controls.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="353a6-227">When the user begins to edit a field, the application replaces the <xref:System.Windows.Controls.TextBlock> with a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="353a6-228">当用户完成字段编辑后，应用程序会将替换为 <xref:System.Windows.Controls.TextBox> <xref:System.Windows.Controls.TextBlock> 。</span><span class="sxs-lookup"><span data-stu-id="353a6-228">When the user finishes editing that field, the application replaces the <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBlock>.</span></span> <span data-ttu-id="353a6-229">由于在用户单击该按钮之前不会更新源，因此必须有一种方法 <xref:System.Windows.Controls.TextBlock> 来显示建议的值。</span><span class="sxs-lookup"><span data-stu-id="353a6-229">Because the source is not updated until the user clicks the button, there must be a way for the <xref:System.Windows.Controls.TextBlock> to display the proposed value.</span></span> <span data-ttu-id="353a6-230">通过将设置 <xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A> 为 `true` ，应用程序将显示用户对字段所做的更改，即使未更新源也是如此。</span><span class="sxs-lookup"><span data-stu-id="353a6-230">By setting <xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A> to `true`, the application will display the user's changes to a field even when the source has not been updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (object item, string propertyName, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetValue(object item, string propertyName, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (item As Object, propertyName As String, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(System::Object ^ item, System::String ^ propertyName, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetValue : obj * string * obj -&gt; bool" Usage="bindingGroup.TryGetValue (item, propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="353a6-231">包含指定属性的对象。</span><span class="sxs-lookup"><span data-stu-id="353a6-231">The object that contains the specified property.</span></span></param>
        <param name="propertyName"><span data-ttu-id="353a6-232">要获取其建议值的属性。</span><span class="sxs-lookup"><span data-stu-id="353a6-232">The property whose proposed value to get.</span></span></param>
        <param name="value"><span data-ttu-id="353a6-233">此方法在返回时包含一个表示建议的属性值的对象。</span><span class="sxs-lookup"><span data-stu-id="353a6-233">When this method returns, contains an object that represents the proposed property value.</span></span> <span data-ttu-id="353a6-234">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="353a6-234">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="353a6-235">尝试获取指定属性和项的建议值。</span><span class="sxs-lookup"><span data-stu-id="353a6-235">Attempts to get the proposed value for the specified property and item.</span></span></summary>
        <returns><span data-ttu-id="353a6-236">如果值为指定属性的建议值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="353a6-236"><see langword="true" /> if value is the proposed value for the specified property; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="353a6-237"><xref:System.Windows.Data.BindingGroup.TryGetValue%2A>`false`如果没有指定项和属性的绑定，或者如果指定的属性的值不可用，则返回; 如果指定的属性的值不可用，则返回。</span><span class="sxs-lookup"><span data-stu-id="353a6-237"><xref:System.Windows.Data.BindingGroup.TryGetValue%2A> returns `false` if there is not a binding for the specified item and property or if the value of the specified property is not available, due to a conversion error or because an earlier validation rule failed.</span></span>  
  
 <span data-ttu-id="353a6-238">在方法中使用此方法 <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType> 可获取要提交到源的值。</span><span class="sxs-lookup"><span data-stu-id="353a6-238">Use this method in the <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType> method to get the value to be committed to the source.</span></span> <span data-ttu-id="353a6-239">类型 `value` 取决于发生的阶段 <xref:System.Windows.Controls.ValidationRule> 。</span><span class="sxs-lookup"><span data-stu-id="353a6-239">The type `value` depends on the stage at which the <xref:System.Windows.Controls.ValidationRule> occurs.</span></span> <span data-ttu-id="353a6-240">例如，如果 <xref:System.Windows.Controls.TextBox> 将绑定到类型为 integer 的属性的数据， `value` 则如果 <xref:System.Windows.Controls.ValidationRule> 调用的 <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> 设置为，则为字符串 <xref:System.Windows.Controls.ValidationStep.RawProposedValue> 。</span><span class="sxs-lookup"><span data-stu-id="353a6-240">For example, if a <xref:System.Windows.Controls.TextBox> is data bound to a property of type integer, `value` is a string if the <xref:System.Windows.Controls.ValidationRule> that calls <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> has its <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> set to <xref:System.Windows.Controls.ValidationStep.RawProposedValue>.</span></span> <span data-ttu-id="353a6-241">如果将 <xref:System.Windows.Controls.ValidationRule> 其 <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> 设置为，则的 <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue> 类型 `value` 是绑定的转换器返回的任何类型。</span><span class="sxs-lookup"><span data-stu-id="353a6-241">If the <xref:System.Windows.Controls.ValidationRule> has its <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> set to <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>, the type of `value` is whatever type that is returned by the binding's converter.</span></span> <span data-ttu-id="353a6-242">在此示例中， `value` 通常为一个整数。</span><span class="sxs-lookup"><span data-stu-id="353a6-242">In this example, `value` is usually an integer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="353a6-243">下面的示例创建一个名为的自定义 <xref:System.Windows.Controls.ValidationRule> `ValidateDateAndPrice` 。</span><span class="sxs-lookup"><span data-stu-id="353a6-243">The following example creates a custom <xref:System.Windows.Controls.ValidationRule> named `ValidateDateAndPrice`.</span></span> <span data-ttu-id="353a6-244">在 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 方法中，该示例使用 <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> 方法和 <xref:System.Windows.Data.BindingGroup.Items%2A> 属性来获取用户在窗体中输入的值。</span><span class="sxs-lookup"><span data-stu-id="353a6-244">In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example uses the <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> method and the <xref:System.Windows.Data.BindingGroup.Items%2A> property to get the values the user entered into the form.</span></span> <span data-ttu-id="353a6-245">然后，该示例将检查某一项是否超过100美元，该项目将在至少7天内可用。</span><span class="sxs-lookup"><span data-stu-id="353a6-245">Then the example checks that if an item is over 100 dollars, it will be available for at least seven days.</span></span> <span data-ttu-id="353a6-246">此示例是类中更大示例的一部分 <xref:System.Windows.Data.BindingGroup></span><span class="sxs-lookup"><span data-stu-id="353a6-246">This example is part of a larger example on the <xref:System.Windows.Data.BindingGroup> class</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSources">
      <MemberSignature Language="C#" Value="public bool UpdateSources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool UpdateSources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.UpdateSources" />
      <MemberSignature Language="VB.NET" Value="Public Function UpdateSources () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool UpdateSources();" />
      <MemberSignature Language="F#" Value="member this.UpdateSources : unit -&gt; bool" Usage="bindingGroup.UpdateSources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="353a6-247">如果所有验证规则都成功，则对绑定和将 <see cref="T:System.Windows.Controls.ValidationRule" /> 属性设置为 <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" />、<see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> 或 <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" /> 的 <see cref="F:System.Windows.Controls.ValidationStep.UpdatedValue" /> 对象运行转换器，并将目标值保存到源对象。</span><span class="sxs-lookup"><span data-stu-id="353a6-247">Runs the converter on the binding and the <see cref="T:System.Windows.Controls.ValidationRule" /> objects that have the <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> property set to <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" />, <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" />, or <see cref="F:System.Windows.Controls.ValidationStep.UpdatedValue" /> and saves the values of the targets to the source objects if all the validation rules succeed.</span></span></summary>
        <returns><span data-ttu-id="353a6-248">如果所有验证规则都成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="353a6-248"><see langword="true" /> if all validation rules succeed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="353a6-249">如果每个成功，则此方法会更新源 <xref:System.Windows.Controls.ValidationRule> ，但不会导致源提交挂起的更改并结束编辑事务。</span><span class="sxs-lookup"><span data-stu-id="353a6-249">This method updates the source if every <xref:System.Windows.Controls.ValidationRule> succeeds, but it does not cause the sources to commit the pending changes and end the edit transaction.</span></span> <span data-ttu-id="353a6-250">也就是说，如果源对象实现，则为 <xref:System.ComponentModel.IEditableObject> 。</span><span class="sxs-lookup"><span data-stu-id="353a6-250">That is, if the source object implements <xref:System.ComponentModel.IEditableObject>.</span></span> <span data-ttu-id="353a6-251">调用此方法不会导致 <xref:System.ComponentModel.IEditableObject.EndEdit%2A> 调用。</span><span class="sxs-lookup"><span data-stu-id="353a6-251">Calling this method does not cause <xref:System.ComponentModel.IEditableObject.EndEdit%2A> to be called.</span></span> <span data-ttu-id="353a6-252">使用 <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> 方法让源提交挂起的更改。</span><span class="sxs-lookup"><span data-stu-id="353a6-252">Use the <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> method to have the sources commit the pending changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="353a6-253">下面的示例是一个应用程序的一部分，该应用程序提示用户输入多个客户，并为每个客户分配一个销售代表。</span><span class="sxs-lookup"><span data-stu-id="353a6-253">The following example is part of an application that prompts the user to enter multiple customers and assign a sales representative to each customer.</span></span> <span data-ttu-id="353a6-254">应用程序将检查销售代表和客户是否属于同一区域。</span><span class="sxs-lookup"><span data-stu-id="353a6-254">The application checks that the sales representative and the customer belong to the same region.</span></span> <span data-ttu-id="353a6-255"><xref:System.Windows.Data.BindingGroup.UpdateSources%2A>如果所有验证规则都成功，则示例将调用来验证绑定并将值保存到源。</span><span class="sxs-lookup"><span data-stu-id="353a6-255">The example calls <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> to validate the bindings and save the values to the source if all the validation rules succeed.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#UpdateSources](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml.cs#updatesources)]
 [!code-vb[BindingGroupSnippets#UpdateSources](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window2.xaml.vb#updatesources)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnNotifyDataError">
      <MemberSignature Language="C#" Value="public bool ValidatesOnNotifyDataError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnNotifyDataError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnNotifyDataError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnNotifyDataError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnNotifyDataError : bool with get, set" Usage="System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="353a6-256">获取或设置一个值，该值指示是否包含 <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />。</span><span class="sxs-lookup"><span data-stu-id="353a6-256">Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />.</span></span></summary>
        <value><span data-ttu-id="353a6-257">如果包含 <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="353a6-257"><see langword="true" /> to include the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="353a6-258">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="353a6-258">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="353a6-259">当 <xref:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError%2A> 为时 `true` ，绑定将检查并报告实现的数据源引发的错误 <xref:System.ComponentModel.INotifyDataErrorInfo> 。</span><span class="sxs-lookup"><span data-stu-id="353a6-259">When <xref:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError%2A> is `true`, the binding checks for and reports errors that are raised by a data source that implements <xref:System.ComponentModel.INotifyDataErrorInfo>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateWithoutUpdate">
      <MemberSignature Language="C#" Value="public bool ValidateWithoutUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValidateWithoutUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.ValidateWithoutUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateWithoutUpdate () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValidateWithoutUpdate();" />
      <MemberSignature Language="F#" Value="member this.ValidateWithoutUpdate : unit -&gt; bool" Usage="bindingGroup.ValidateWithoutUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="353a6-260">对绑定和将 <see cref="T:System.Windows.Controls.ValidationRule" /> 属性设置为 <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> 或 <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> 的 <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" /> 对象运行转换器。</span><span class="sxs-lookup"><span data-stu-id="353a6-260">Runs the converter on the binding and the <see cref="T:System.Windows.Controls.ValidationRule" /> objects that have the <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> property set to <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> or <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" />.</span></span></summary>
        <returns><span data-ttu-id="353a6-261">如果验证规则成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="353a6-261"><see langword="true" /> if the validation rules succeed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="353a6-262">调用此方法时，源不会更新。</span><span class="sxs-lookup"><span data-stu-id="353a6-262">The sources are not updated when you call this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationErrors">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt; ValidationErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Controls.ValidationError&gt; ValidationErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidationErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationErrors As ReadOnlyCollection(Of ValidationError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Controls::ValidationError ^&gt; ^ ValidationErrors { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Controls::ValidationError ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidationErrors : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt;" Usage="System.Windows.Data.BindingGroup.ValidationErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="353a6-263">获取促使 <see cref="T:System.Windows.Controls.ValidationError" /> 有效的 <see cref="T:System.Windows.Data.BindingGroup" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="353a6-263">Gets a collection of <see cref="T:System.Windows.Controls.ValidationError" /> objects that caused the <see cref="T:System.Windows.Data.BindingGroup" /> to be invalid.</span></span></summary>
        <value><span data-ttu-id="353a6-264">导致 <see cref="T:System.Windows.Controls.ValidationError" /> 无效的 <see cref="T:System.Windows.Data.BindingGroup" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="353a6-264">A collection of <see cref="T:System.Windows.Controls.ValidationError" /> objects that caused <see cref="T:System.Windows.Data.BindingGroup" /> to be invalid.</span></span>  <span data-ttu-id="353a6-265">如果没有错误，此值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="353a6-265">The value is <see langword="null" /> if there are no errors.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationRules">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt; ValidationRules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Controls.ValidationRule&gt; ValidationRules" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationRules As Collection(Of ValidationRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ ValidationRules { System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidationRules : System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;" Usage="System.Windows.Data.BindingGroup.ValidationRules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="353a6-266">获取 <see cref="T:System.Windows.Controls.ValidationRule" /> 对象的集合，这些对象验证 <see cref="T:System.Windows.Data.BindingGroup" /> 中的源对象。</span><span class="sxs-lookup"><span data-stu-id="353a6-266">Gets a collection of <see cref="T:System.Windows.Controls.ValidationRule" /> objects that validate the source objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></summary>
        <value><span data-ttu-id="353a6-267"><see cref="T:System.Windows.Controls.ValidationRule" /> 对象的集合，这些对象验证 <see cref="T:System.Windows.Data.BindingGroup" /> 中的源对象。</span><span class="sxs-lookup"><span data-stu-id="353a6-267">A collection of <see cref="T:System.Windows.Controls.ValidationRule" /> objects that validate the source objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="353a6-268">当 <xref:System.Windows.Controls.ValidationRule> 添加到时，将 <xref:System.Windows.Data.BindingGroup> <xref:System.Windows.Data.BindingGroup> 传入作为方法的第一个参数 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 。</span><span class="sxs-lookup"><span data-stu-id="353a6-268">When a <xref:System.Windows.Controls.ValidationRule> is added to a <xref:System.Windows.Data.BindingGroup>, the <xref:System.Windows.Data.BindingGroup> is passed in as the first parameter of the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method.</span></span> <span data-ttu-id="353a6-269">您可以通过使用或方法获取对象的建议值 <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> 。</span><span class="sxs-lookup"><span data-stu-id="353a6-269">You can get the proposed values of the object by using the <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> or <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> method.</span></span> <span data-ttu-id="353a6-270">可以从属性获取作为绑定源的对象 <xref:System.Windows.Data.BindingGroup.Items%2A> 。</span><span class="sxs-lookup"><span data-stu-id="353a6-270">You can get the objects that are the sources of the bindings from the <xref:System.Windows.Data.BindingGroup.Items%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="353a6-271">下面的示例将自定义 <xref:System.Windows.Controls.ValidationRule> 添加 `ValidateDateAndPrice` 到 <xref:System.Windows.Data.BindingGroup> 。</span><span class="sxs-lookup"><span data-stu-id="353a6-271">The following example adds the custom <xref:System.Windows.Controls.ValidationRule>, `ValidateDateAndPrice`, to the <xref:System.Windows.Data.BindingGroup>.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#BindingGroup](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#bindinggroup)]  
  
 <span data-ttu-id="353a6-272">下面的示例展示了 `ValidateDateAndPrice` 类。</span><span class="sxs-lookup"><span data-stu-id="353a6-272">The following example shows the `ValidateDateAndPrice` class.</span></span> <span data-ttu-id="353a6-273"><xref:System.Windows.Controls.ValidationRule.Validate%2A>方法使用 <xref:System.Windows.Data.BindingGroup> 来获取用户在窗体中输入的值，并检查项是否超过100美元，此值至少可用于七天。</span><span class="sxs-lookup"><span data-stu-id="353a6-273">The <xref:System.Windows.Controls.ValidationRule.Validate%2A> method uses the <xref:System.Windows.Data.BindingGroup> to get the values the user entered into the form, and checks that if an item is over 100 dollars, it will be available for at least seven days.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
