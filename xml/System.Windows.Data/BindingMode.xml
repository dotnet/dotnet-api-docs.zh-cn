<Type Name="BindingMode" FullName="System.Windows.Data.BindingMode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="83ff8d3920cb2583624393b15ead7819f238f121" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89697196" /></Metadata><TypeSignature Language="C#" Value="public enum BindingMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed BindingMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum BindingMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class BindingMode" />
  <TypeSignature Language="F#" Value="type BindingMode = " />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="5be7f-101">描述绑定中数据流的方向。</span><span class="sxs-lookup"><span data-stu-id="5be7f-101">Describes the direction of the data flow in a binding.</span></span></summary>
    <remarks>To be added.</remarks>
    <altmember cref="P:System.Windows.Data.Binding.Mode" />
    <altmember cref="T:System.Windows.Data.Binding" />
  </Docs>
  <Members>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Data.BindingMode Default = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.BindingMode.Default" />
      <MemberSignature Language="VB.NET" Value="Default" />
      <MemberSignature Language="C++ CLI" Value="Default" />
      <MemberSignature Language="F#" Value="Default = 4" Usage="System.Windows.Data.BindingMode.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingMode</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5be7f-102">使用绑定目标的默认 <see cref="P:System.Windows.Data.Binding.Mode" /> 值。</span><span class="sxs-lookup"><span data-stu-id="5be7f-102">Uses the default <see cref="P:System.Windows.Data.Binding.Mode" /> value of the binding target.</span></span> <span data-ttu-id="5be7f-103">每个依赖属性的默认值都不同。</span><span class="sxs-lookup"><span data-stu-id="5be7f-103">The default value varies for each dependency property.</span></span> <span data-ttu-id="5be7f-104">通常，用户可编辑的控件属性（如文本框和复选框的控件属性）默认为双向绑定，而其他大多数属性默认为单向绑定。</span><span class="sxs-lookup"><span data-stu-id="5be7f-104">In general, user-editable control properties, such as those of text boxes and check boxes, default to two-way bindings, whereas most other properties default to one-way bindings.</span></span> <span data-ttu-id="5be7f-105">确定依赖属性绑定在默认情况下是单向还是双向的编程方法是：使用 <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> 获取属性的属性元数据，然后检查 <see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /> 属性的布尔值。</span><span class="sxs-lookup"><span data-stu-id="5be7f-105">A programmatic way to determine whether a dependency property binds one-way or two-way by default is to get the property metadata of the property using <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> and then check the Boolean value of the <see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /> property.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="OneTime">
      <MemberSignature Language="C#" Value="OneTime" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Data.BindingMode OneTime = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.BindingMode.OneTime" />
      <MemberSignature Language="VB.NET" Value="OneTime" />
      <MemberSignature Language="C++ CLI" Value="OneTime" />
      <MemberSignature Language="F#" Value="OneTime = 2" Usage="System.Windows.Data.BindingMode.OneTime" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5be7f-106">在应用程序启动或数据上下文更改时，更新绑定目标。</span><span class="sxs-lookup"><span data-stu-id="5be7f-106">Updates the binding target when the application starts or when the data context changes.</span></span> <span data-ttu-id="5be7f-107">如果你在适合使用当前状态的快照或数据实际为静态数据的位置使用数据，则此类型的绑定适合。</span><span class="sxs-lookup"><span data-stu-id="5be7f-107">This type of binding is appropriate if you are using data where either a snapshot of the current state is appropriate to use or the data is truly static.</span></span> <span data-ttu-id="5be7f-108">如果你想使用源属性中的某个值来初始化目标属性，且提前不知道数据上下文，则此类型的绑定也有用。</span><span class="sxs-lookup"><span data-stu-id="5be7f-108">This type of binding is also useful if you want to initialize your target property with some value from a source property and the data context is not known in advance.</span></span> <span data-ttu-id="5be7f-109">这是实质上是 <see cref="F:System.Windows.Data.BindingMode.OneWay" /> 绑定的一种简化形式，它在源值不更改的情况下提供更好的性能。</span><span class="sxs-lookup"><span data-stu-id="5be7f-109">This is essentially a simpler form of <see cref="F:System.Windows.Data.BindingMode.OneWay" /> binding that provides better performance in cases where the source value does not change.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="OneWay">
      <MemberSignature Language="C#" Value="OneWay" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Data.BindingMode OneWay = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.BindingMode.OneWay" />
      <MemberSignature Language="VB.NET" Value="OneWay" />
      <MemberSignature Language="C++ CLI" Value="OneWay" />
      <MemberSignature Language="F#" Value="OneWay = 1" Usage="System.Windows.Data.BindingMode.OneWay" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5be7f-110">在更改绑定源（源）时更新绑定目标（目标）。</span><span class="sxs-lookup"><span data-stu-id="5be7f-110">Updates the binding target (target) property when the binding source (source) changes.</span></span> <span data-ttu-id="5be7f-111">如果绑定的控件为隐式只读，则此类型的绑定适用。</span><span class="sxs-lookup"><span data-stu-id="5be7f-111">This type of binding is appropriate if the control being bound is implicitly read-only.</span></span> <span data-ttu-id="5be7f-112">例如，你可能绑定到股票代码等源。</span><span class="sxs-lookup"><span data-stu-id="5be7f-112">For instance, you may bind to a source such as a stock ticker.</span></span> <span data-ttu-id="5be7f-113">或者可能是未向目标属性提供控件接口来进行更改，例如表的数据绑定背景色。</span><span class="sxs-lookup"><span data-stu-id="5be7f-113">Or perhaps your target property has no control interface provided for making changes, such as a data-bound background color of a table.</span></span> <span data-ttu-id="5be7f-114">如果无需监视目标属性的更改，则使用 <see cref="F:System.Windows.Data.BindingMode.OneWay" /> 绑定模式可避免 <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> 绑定模式的系统开销。</span><span class="sxs-lookup"><span data-stu-id="5be7f-114">If there is no need to monitor the changes of the target property, using the <see cref="F:System.Windows.Data.BindingMode.OneWay" /> binding mode avoids the overhead of the <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> binding mode.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="OneWayToSource">
      <MemberSignature Language="C#" Value="OneWayToSource" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Data.BindingMode OneWayToSource = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.BindingMode.OneWayToSource" />
      <MemberSignature Language="VB.NET" Value="OneWayToSource" />
      <MemberSignature Language="C++ CLI" Value="OneWayToSource" />
      <MemberSignature Language="F#" Value="OneWayToSource = 3" Usage="System.Windows.Data.BindingMode.OneWayToSource" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5be7f-115">在目标属性更改时，更新源属性。</span><span class="sxs-lookup"><span data-stu-id="5be7f-115">Updates the source property when the target property changes.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="TwoWay">
      <MemberSignature Language="C#" Value="TwoWay" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Data.BindingMode TwoWay = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.BindingMode.TwoWay" />
      <MemberSignature Language="VB.NET" Value="TwoWay" />
      <MemberSignature Language="C++ CLI" Value="TwoWay" />
      <MemberSignature Language="F#" Value="TwoWay = 0" Usage="System.Windows.Data.BindingMode.TwoWay" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5be7f-116">导致更改源属性或目标属性时自动更新另一方。</span><span class="sxs-lookup"><span data-stu-id="5be7f-116">Causes changes to either the source property or the target property to automatically update the other.</span></span> <span data-ttu-id="5be7f-117">此类型的绑定适用于可编辑窗体或其他完整交互式的 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 方案。</span><span class="sxs-lookup"><span data-stu-id="5be7f-117">This type of binding is appropriate for editable forms or other fully-interactive [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] scenarios.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
