<Type Name="ChainedConfigurationProvider" FullName="Microsoft.Extensions.Configuration.ChainedConfigurationProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b4a66850784b21cf0ef7597e82d5998a75dddd6e" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89748849" /></Metadata><TypeSignature Language="C#" Value="public class ChainedConfigurationProvider : Microsoft.Extensions.Configuration.IConfigurationProvider" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChainedConfigurationProvider extends System.Object implements class Microsoft.Extensions.Configuration.IConfigurationProvider" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Configuration.ChainedConfigurationProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class ChainedConfigurationProvider&#xA;Implements IConfigurationProvider" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChainedConfigurationProvider : Microsoft::Extensions::Configuration::IConfigurationProvider" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
  <TypeSignature Language="F#" Value="type ChainedConfigurationProvider = class&#xA;    interface IConfigurationProvider" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
  <TypeSignature Language="C#" Value="public class ChainedConfigurationProvider : IDisposable, Microsoft.Extensions.Configuration.IConfigurationProvider" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChainedConfigurationProvider extends System.Object implements class Microsoft.Extensions.Configuration.IConfigurationProvider, class System.IDisposable" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
  <TypeSignature Language="VB.NET" Value="Public Class ChainedConfigurationProvider&#xA;Implements IConfigurationProvider, IDisposable" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChainedConfigurationProvider : IDisposable, Microsoft::Extensions::Configuration::IConfigurationProvider" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
  <TypeSignature Language="F#" Value="type ChainedConfigurationProvider = class&#xA;    interface IConfigurationProvider&#xA;    interface IDisposable" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Configuration</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.Configuration.IConfigurationProvider</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0">
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="44ec6-101"><see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" /> 的链接实现</span><span class="sxs-lookup"><span data-stu-id="44ec6-101">Chained implementation of <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" /></span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChainedConfigurationProvider (Microsoft.Extensions.Configuration.ChainedConfigurationSource source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Configuration.ChainedConfigurationSource source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Configuration.ChainedConfigurationProvider.#ctor(Microsoft.Extensions.Configuration.ChainedConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (source As ChainedConfigurationSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChainedConfigurationProvider(Microsoft::Extensions::Configuration::ChainedConfigurationSource ^ source);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Configuration.ChainedConfigurationProvider : Microsoft.Extensions.Configuration.ChainedConfigurationSource -&gt; Microsoft.Extensions.Configuration.ChainedConfigurationProvider" Usage="new Microsoft.Extensions.Configuration.ChainedConfigurationProvider source" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Configuration</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Extensions.Configuration.ChainedConfigurationSource" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="44ec6-102">源配置。</span><span class="sxs-lookup"><span data-stu-id="44ec6-102">The source configuration.</span></span></param>
        <summary><span data-ttu-id="44ec6-103">从源配置初始化新实例。</span><span class="sxs-lookup"><span data-stu-id="44ec6-103">Initialize a new instance from the source configuration.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Configuration.ChainedConfigurationProvider.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="chainedConfigurationProvider.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Configuration</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="44ec6-104">执行与释放或重置非托管资源关联的应用程序定义的任务。</span><span class="sxs-lookup"><span data-stu-id="44ec6-104">Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</span></span></summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetChildKeys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;string&gt; GetChildKeys (System.Collections.Generic.IEnumerable&lt;string&gt; earlierKeys, string parentPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; GetChildKeys(class System.Collections.Generic.IEnumerable`1&lt;string&gt; earlierKeys, string parentPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Configuration.ChainedConfigurationProvider.GetChildKeys(System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildKeys (earlierKeys As IEnumerable(Of String), parentPath As String) As IEnumerable(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ GetChildKeys(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ earlierKeys, System::String ^ parentPath);" />
      <MemberSignature Language="F#" Value="abstract member GetChildKeys : seq&lt;string&gt; * string -&gt; seq&lt;string&gt;&#xA;override this.GetChildKeys : seq&lt;string&gt; * string -&gt; seq&lt;string&gt;" Usage="chainedConfigurationProvider.GetChildKeys (earlierKeys, parentPath)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Configuration.IConfigurationProvider.GetChildKeys(System.Collections.Generic.IEnumerable{System.String},System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Configuration</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="earlierKeys" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="parentPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="earlierKeys"><span data-ttu-id="44ec6-105">前述提供程序为同一父级路径返回的子键。</span><span class="sxs-lookup"><span data-stu-id="44ec6-105">The child keys returned by the preceding providers for the same parent path.</span></span></param>
        <param name="parentPath"><span data-ttu-id="44ec6-106">父级路径。</span><span class="sxs-lookup"><span data-stu-id="44ec6-106">The parent path.</span></span></param>
        <summary><span data-ttu-id="44ec6-107">基于此 <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" /> 数据和所有前述 <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" /> 返回的键集，返回给定父级路径的直接后代配置键。</span><span class="sxs-lookup"><span data-stu-id="44ec6-107">Returns the immediate descendant configuration keys for a given parent path based on this <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" />s data and the set of keys returned by all the preceding <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" />s.</span></span></summary>
        <returns><span data-ttu-id="44ec6-108">子键。</span><span class="sxs-lookup"><span data-stu-id="44ec6-108">The child keys.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReloadToken">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.IChangeToken GetReloadToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.Primitives.IChangeToken GetReloadToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Configuration.ChainedConfigurationProvider.GetReloadToken" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReloadToken () As IChangeToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Extensions::Primitives::IChangeToken ^ GetReloadToken();" />
      <MemberSignature Language="F#" Value="abstract member GetReloadToken : unit -&gt; Microsoft.Extensions.Primitives.IChangeToken&#xA;override this.GetReloadToken : unit -&gt; Microsoft.Extensions.Primitives.IChangeToken" Usage="chainedConfigurationProvider.GetReloadToken " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Configuration.IConfigurationProvider.GetReloadToken</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Configuration</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.IChangeToken</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="44ec6-109">如果此提供程序支持更改跟踪，则返回更改令牌，否则返回 null。</span><span class="sxs-lookup"><span data-stu-id="44ec6-109">Returns a change token if this provider supports change tracking, null otherwise.</span></span></summary>
        <returns><span data-ttu-id="44ec6-110">更改令牌。</span><span class="sxs-lookup"><span data-stu-id="44ec6-110">The change token.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Configuration.ChainedConfigurationProvider.Load" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Load();" />
      <MemberSignature Language="F#" Value="abstract member Load : unit -&gt; unit&#xA;override this.Load : unit -&gt; unit" Usage="chainedConfigurationProvider.Load " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Configuration.IConfigurationProvider.Load</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Configuration</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="44ec6-111">从此 <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" /> 表示的源加载配置值。</span><span class="sxs-lookup"><span data-stu-id="44ec6-111">Loads configuration values from the source represented by this <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public void Set (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Configuration.ChainedConfigurationProvider.Set(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Set (key As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Set(System::String ^ key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Set : string * string -&gt; unit&#xA;override this.Set : string * string -&gt; unit" Usage="chainedConfigurationProvider.Set (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Configuration.IConfigurationProvider.Set(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Configuration</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="44ec6-112">键。</span><span class="sxs-lookup"><span data-stu-id="44ec6-112">The key.</span></span></param>
        <param name="value"><span data-ttu-id="44ec6-113">值。</span><span class="sxs-lookup"><span data-stu-id="44ec6-113">The value.</span></span></param>
        <summary><span data-ttu-id="44ec6-114">为指定键设置配置值。</span><span class="sxs-lookup"><span data-stu-id="44ec6-114">Sets a configuration value for the specified key.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGet">
      <MemberSignature Language="C#" Value="public bool TryGet (string key, out string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGet(string key, [out] string&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Configuration.ChainedConfigurationProvider.TryGet(System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGet (key As String, ByRef value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGet(System::String ^ key, [Runtime::InteropServices::Out] System::String ^ % value);" />
      <MemberSignature Language="F#" Value="abstract member TryGet : string * string -&gt; bool&#xA;override this.TryGet : string * string -&gt; bool" Usage="chainedConfigurationProvider.TryGet (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Configuration.IConfigurationProvider.TryGet(System.String,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Configuration</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="44ec6-115">键。</span><span class="sxs-lookup"><span data-stu-id="44ec6-115">The key.</span></span></param>
        <param name="value"><span data-ttu-id="44ec6-116">值。</span><span class="sxs-lookup"><span data-stu-id="44ec6-116">The value.</span></span></param>
        <summary><span data-ttu-id="44ec6-117">尝试获取指定键的配置值。</span><span class="sxs-lookup"><span data-stu-id="44ec6-117">Tries to get a configuration value for the specified key.</span></span></summary>
        <returns><span data-ttu-id="44ec6-118">如果找到指定键的值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="44ec6-118"><see langword="true" /> if a value for the specified key was found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
