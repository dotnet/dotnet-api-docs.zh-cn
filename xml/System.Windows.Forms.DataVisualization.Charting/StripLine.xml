<Type Name="StripLine" FullName="System.Windows.Forms.DataVisualization.Charting.StripLine">
  <Metadata><Meta Name="ms.openlocfilehash" Value="baf765c771180ae3a56c0c5115ae42ff8737d1d1" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86821031" /></Metadata><TypeSignature Language="C#" Value="public class StripLine : System.Windows.Forms.DataVisualization.Charting.ChartElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StripLine extends System.Windows.Forms.DataVisualization.Charting.ChartElement" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.StripLine" />
  <TypeSignature Language="VB.NET" Value="Public Class StripLine&#xA;Inherits ChartElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class StripLine : System::Windows::Forms::DataVisualization::Charting::ChartElement" />
  <TypeSignature Language="F#" Value="type StripLine = class&#xA;    inherit ChartElement" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataVisualization.Charting.ChartElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DefaultProperty("IntervalOffset")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultProperty("IntervalOffset")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6712f-101">表示图表上的带状线。</span><span class="sxs-lookup"><span data-stu-id="6712f-101">Represents the strip lines on a chart.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6712f-102">条带线（或条带）是水平或垂直的范围，用常规或自定义间隔对图表的背景进行着色。</span><span class="sxs-lookup"><span data-stu-id="6712f-102">Strip lines, or strips, are horizontal or vertical ranges that shade the background of a chart in regular or custom intervals.</span></span> <span data-ttu-id="6712f-103">可以使用条带线执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="6712f-103">You can use strip lines to:</span></span>  
  
-   <span data-ttu-id="6712f-104">提高在图表上查找各个值时的可读性。</span><span class="sxs-lookup"><span data-stu-id="6712f-104">Improve readability for looking up individual values on the chart.</span></span>  
  
-   <span data-ttu-id="6712f-105">读取图表时单独的数据点。</span><span class="sxs-lookup"><span data-stu-id="6712f-105">Separate data points when reading the chart.</span></span>  
  
-   <span data-ttu-id="6712f-106">突出显示定期出现的日期，例如，用于标识周末数据点。</span><span class="sxs-lookup"><span data-stu-id="6712f-106">Highlight dates that occur at regular intervals, for example, to identify weekend data points.</span></span>  
  
-   <span data-ttu-id="6712f-107">突出显示特定键范围内的数据。</span><span class="sxs-lookup"><span data-stu-id="6712f-107">Highlight a specific key range of data.</span></span>  
  
-   <span data-ttu-id="6712f-108">在特定常量值处添加阈值行。</span><span class="sxs-lookup"><span data-stu-id="6712f-108">Add a threshold line at a specific constant value.</span></span>  
  
 <span data-ttu-id="6712f-109"><xref:System.Windows.Forms.DataVisualization.Charting.StripLine>对于给定的时间间隔，可以一次或多次绘制单个对象。</span><span class="sxs-lookup"><span data-stu-id="6712f-109">A single <xref:System.Windows.Forms.DataVisualization.Charting.StripLine> object can either be drawn once, or repeatedly, for a given interval.</span></span> <span data-ttu-id="6712f-110">此操作由 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.Interval%2A> 属性控制。</span><span class="sxs-lookup"><span data-stu-id="6712f-110">This action is controlled by the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.Interval%2A> property.</span></span> <span data-ttu-id="6712f-111">如果将零值分配给该 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.Interval%2A> 属性，则将绘制一个条带线。</span><span class="sxs-lookup"><span data-stu-id="6712f-111">When a value of zero is assigned to the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.Interval%2A> property, one strip line will be drawn.</span></span> <span data-ttu-id="6712f-112">如果为属性分配非零值 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.Interval%2A> ，则会在每个给定的时间间隔重复绘制条带线。</span><span class="sxs-lookup"><span data-stu-id="6712f-112">When a non-zero value is assigned to the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.Interval%2A> property, a strip line will be drawn repeatedly at each given interval.</span></span> <span data-ttu-id="6712f-113">条带线的绘制位置也受 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalOffset%2A> <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalOffsetType%2A> 条带线的和属性的影响。</span><span class="sxs-lookup"><span data-stu-id="6712f-113">The location where a strip line is drawn is also affected by the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalOffset%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalOffsetType%2A> properties of the strip line.</span></span>  
  
 <span data-ttu-id="6712f-114">条带线始终与对象相关联 <xref:System.Windows.Forms.DataVisualization.Charting.Axis> 。</span><span class="sxs-lookup"><span data-stu-id="6712f-114">Strip lines are always associated with an <xref:System.Windows.Forms.DataVisualization.Charting.Axis> object.</span></span> <span data-ttu-id="6712f-115">可以在设计时和运行时添加它们。</span><span class="sxs-lookup"><span data-stu-id="6712f-115">They can be added at both design time and run time.</span></span>  
  
 <span data-ttu-id="6712f-116">若要添加水平或垂直线条以显示阈值，请将 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> 属性设置为值0.0。</span><span class="sxs-lookup"><span data-stu-id="6712f-116">To add a horizontal or vertical line to display a threshold, set the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> property to a value of 0.0.</span></span> <span data-ttu-id="6712f-117">这将导致绘制线条。</span><span class="sxs-lookup"><span data-stu-id="6712f-117">This will result in a line being drawn.</span></span> <span data-ttu-id="6712f-118"><xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BorderColor%2A> <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BorderDashStyle%2A> <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BorderWidth%2A> 对于线条的颜色、宽度和样式，可以使用、和属性。</span><span class="sxs-lookup"><span data-stu-id="6712f-118">You can use the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BorderColor%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BorderDashStyle%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BorderWidth%2A> properties for the color, width and style of the line.</span></span> <span data-ttu-id="6712f-119">`Back*`当 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> 属性设置为0.0 时，不使用 () 的图表背景属性。</span><span class="sxs-lookup"><span data-stu-id="6712f-119">No chart background properties (`Back*`) are used when the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> property is set to 0.0.</span></span>  
  
 <span data-ttu-id="6712f-120">使用 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.Text%2A> 条带线的属性将文本与条带线关联。</span><span class="sxs-lookup"><span data-stu-id="6712f-120">Use the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.Text%2A> property of the strip line to associate text with a strip line.</span></span> <span data-ttu-id="6712f-121">此文本的位置和方向可以通过属性进行控制 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.TextAlignment%2A> 。</span><span class="sxs-lookup"><span data-stu-id="6712f-121">The placement and orientation of this text can be controlled by the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.TextAlignment%2A> property.</span></span>  
  
 <span data-ttu-id="6712f-122">为同一轴定义多条带线时，条带线可能会重叠。</span><span class="sxs-lookup"><span data-stu-id="6712f-122">When multiple strip lines are defined for the same axis, it is possible that the strip lines will overlap.</span></span> <span data-ttu-id="6712f-123">对象的 Z 顺序由 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine> 其在对象中的出现顺序确定 <xref:System.Windows.Forms.DataVisualization.Charting.StripLinesCollection> 。</span><span class="sxs-lookup"><span data-stu-id="6712f-123">The Z-order of <xref:System.Windows.Forms.DataVisualization.Charting.StripLine> objects is determined by their order of occurrence in the <xref:System.Windows.Forms.DataVisualization.Charting.StripLinesCollection> object.</span></span> <span data-ttu-id="6712f-124">这意味着首先绘制第一个匹配项;第二次出现第二个，依此类推。</span><span class="sxs-lookup"><span data-stu-id="6712f-124">This means that the first occurrence is drawn first; the second occurrence is drawn second, and so on.</span></span>  
  
 <span data-ttu-id="6712f-125">以下图表类型不支持条带线：饼图、圆环图、漏斗图、棱锥图、卡吉、ThreeLineBreak、点数、极坐标和雷达图。</span><span class="sxs-lookup"><span data-stu-id="6712f-125">Strip lines are not supported for the following chart types: Pie, Doughnut, Funnel, Pyramid, Kagi, ThreeLineBreak, PointAndFigure, Polar and Radar.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StripLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StripLine.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StripLine();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6712f-126">初始化 <see cref="T:System.Windows.Forms.DataVisualization.Charting.StripLine" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="6712f-126">Initializes a new instance of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.StripLine" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.StripLine.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.StripLine.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6712f-127">获取或设置带状线的背景色。</span><span class="sxs-lookup"><span data-stu-id="6712f-127">Gets or sets the background color of the strip line.</span></span></summary>
        <value><span data-ttu-id="6712f-128"><see cref="T:System.Drawing.Color" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="6712f-128">A <see cref="T:System.Drawing.Color" /> structure.</span></span> <span data-ttu-id="6712f-129">默认颜色为 <see cref="P:System.Drawing.Color.White" />。</span><span class="sxs-lookup"><span data-stu-id="6712f-129">The default color is <see cref="P:System.Drawing.Color.White" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6712f-130">可将此属性设置为任何有效的 ARGB (alpha、红色、绿色、蓝色) 值。</span><span class="sxs-lookup"><span data-stu-id="6712f-130">You can set this property to any valid ARGB (alpha, red, green, blue) value.</span></span>  
  
 <span data-ttu-id="6712f-131">若要设置条带线的渐变，请设置 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackColor%2A> 和 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackSecondaryColor%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="6712f-131">To set a gradient for the strip line, set the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackColor%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackSecondaryColor%2A> properties.</span></span>  
  
 <span data-ttu-id="6712f-132">如果将此颜色设置为 "透明"，则将该颜色设置为 0-不会将颜色分配给该元素的背景。</span><span class="sxs-lookup"><span data-stu-id="6712f-132">If you set this color to "transparent" - in other words, set the alpha value to 0 - no color will be assigned to the background of the element.</span></span> <span data-ttu-id="6712f-133">因此，背景将是透明的。</span><span class="sxs-lookup"><span data-stu-id="6712f-133">As a result, the background will be transparent.</span></span>  
  
 <span data-ttu-id="6712f-134">如果该 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> 属性设置为0.0，则将绘制一条线，并且该 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BorderColor%2A> 属性将确定线条的颜色，而不是此属性。</span><span class="sxs-lookup"><span data-stu-id="6712f-134">If the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> property is set to 0.0, a line will be drawn and the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BorderColor%2A> property will determine the color of the line, not this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackGradientStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.GradientStyle BackGradientStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.GradientStyle BackGradientStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.StripLine.BackGradientStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BackGradientStyle As GradientStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::GradientStyle BackGradientStyle { System::Windows::Forms::DataVisualization::Charting::GradientStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::GradientStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BackGradientStyle : System.Windows.Forms.DataVisualization.Charting.GradientStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.StripLine.BackGradientStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.GradientEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.GradientEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.GradientEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.GradientEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.GradientStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6712f-135">获取或设置带状线的渐变样式。</span><span class="sxs-lookup"><span data-stu-id="6712f-135">Gets or sets the gradient style of the strip line.</span></span></summary>
        <value><span data-ttu-id="6712f-136">一个 <see cref="T:System.Windows.Forms.DataVisualization.Charting.GradientStyle" /> 枚举。</span><span class="sxs-lookup"><span data-stu-id="6712f-136">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.GradientStyle" /> enumeration.</span></span> <span data-ttu-id="6712f-137">默认值为 <see cref="F:System.Windows.Forms.DataVisualization.Charting.GradientStyle.None" />。</span><span class="sxs-lookup"><span data-stu-id="6712f-137">The default value is <see cref="F:System.Windows.Forms.DataVisualization.Charting.GradientStyle.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6712f-138"><xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackGradientStyle%2A>属性确定图表元素是否将显示渐变以及渐变的方向（如果使用）。</span><span class="sxs-lookup"><span data-stu-id="6712f-138">The <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackGradientStyle%2A> property determines whether a chart element will display a gradient, as well as the orientation of the gradient, if used.</span></span>  
  
 <span data-ttu-id="6712f-139">使用渐变颜色：</span><span class="sxs-lookup"><span data-stu-id="6712f-139">To use gradient colors:</span></span>  
  
-   <span data-ttu-id="6712f-140">使用 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackColor%2A> 属性设置主色。</span><span class="sxs-lookup"><span data-stu-id="6712f-140">Use the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackColor%2A> property to set the primary color.</span></span>  
  
-   <span data-ttu-id="6712f-141">使用 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackSecondaryColor%2A> 属性设置辅助颜色。</span><span class="sxs-lookup"><span data-stu-id="6712f-141">Use the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackSecondaryColor%2A> property to set the secondary color.</span></span>  
  
-   <span data-ttu-id="6712f-142">将 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackGradientStyle%2A> chart 元素的此属性设置为所需的渐变样式。</span><span class="sxs-lookup"><span data-stu-id="6712f-142">Set this <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackGradientStyle%2A> property of the chart element to the desired gradient style.</span></span>  
  
 <span data-ttu-id="6712f-143">如果将 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> 属性设置为值0.0，则此属性不适用。</span><span class="sxs-lookup"><span data-stu-id="6712f-143">This property is not applicable if the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> property is set to a value of 0.0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackHatchStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle BackHatchStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle BackHatchStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.StripLine.BackHatchStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BackHatchStyle As ChartHatchStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartHatchStyle BackHatchStyle { System::Windows::Forms::DataVisualization::Charting::ChartHatchStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartHatchStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BackHatchStyle : System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.StripLine.BackHatchStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.HatchStyleEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.HatchStyleEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.HatchStyleEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.HatchStyleEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6712f-144">获取或设置带状线的阴影样式。</span><span class="sxs-lookup"><span data-stu-id="6712f-144">Gets or sets the hatching style of the strip line.</span></span></summary>
        <value><span data-ttu-id="6712f-145">一个 <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle" /> 枚举。</span><span class="sxs-lookup"><span data-stu-id="6712f-145">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle" /> enumeration.</span></span> <span data-ttu-id="6712f-146">默认值为 <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle.None" />。</span><span class="sxs-lookup"><span data-stu-id="6712f-146">The default value is <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6712f-147">阴影模式包含纯色背景色和在背景上绘制的线条。</span><span class="sxs-lookup"><span data-stu-id="6712f-147">The hatch pattern consists of a solid background color and lines drawn over the background.</span></span> <span data-ttu-id="6712f-148">阴影样式中使用的两种颜色由 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackColor%2A> 和 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackSecondaryColor%2A> 属性设置。</span><span class="sxs-lookup"><span data-stu-id="6712f-148">The two colors used in the hatch style are set by the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackColor%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackSecondaryColor%2A> properties.</span></span> <span data-ttu-id="6712f-149">如果将 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> 属性设置为值0.0，则此属性不适用。</span><span class="sxs-lookup"><span data-stu-id="6712f-149">This property is not applicable if the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> property is set to a value of 0.0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImage">
      <MemberSignature Language="C#" Value="public string BackImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.StripLine.BackImage" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BackImage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackImage : string with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.StripLine.BackImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ImageValueEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ImageValueEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ImageValueEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ImageValueEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6712f-150">获取或设置带状线的背景图像。</span><span class="sxs-lookup"><span data-stu-id="6712f-150">Gets or sets the background image of the strip line.</span></span></summary>
        <value><span data-ttu-id="6712f-151">一个 <see langword="string" /> 值，该值表示图像文件的 URL。</span><span class="sxs-lookup"><span data-stu-id="6712f-151">A <see langword="string" /> value that represents an image file's URL.</span></span> <span data-ttu-id="6712f-152">默认值为空字符串。</span><span class="sxs-lookup"><span data-stu-id="6712f-152">The default is an empty string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6712f-153"><xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackImage%2A>属性为多个图表元素定义背景图像的路径，是绝对或相对 URL。</span><span class="sxs-lookup"><span data-stu-id="6712f-153">The <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackImage%2A> property defines a path to a background image for many chart elements, and is an absolute or relative URL.</span></span>  
  
 <span data-ttu-id="6712f-154">若要定位此图像，请使用 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageAlignment%2A> 和 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageWrapMode%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="6712f-154">To position this image, use the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageAlignment%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageWrapMode%2A> properties.</span></span>  
  
 <span data-ttu-id="6712f-155">你还可以通过设置属性，将图像显示的一种颜色指定为 "透明" <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageTransparentColor%2A> 。</span><span class="sxs-lookup"><span data-stu-id="6712f-155">You can also specify that one color will be displayed by the image as "transparent" by setting the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageTransparentColor%2A> property.</span></span>  
  
 <span data-ttu-id="6712f-156">图像可以是 .NET Framework 支持的任何有效图形文件，包括图标。</span><span class="sxs-lookup"><span data-stu-id="6712f-156">An image can be any valid graphics file supported by .NET Framework, including icons.</span></span>  
  
 <span data-ttu-id="6712f-157">如果将 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> 属性设置为值0.0，则此属性不适用。</span><span class="sxs-lookup"><span data-stu-id="6712f-157">This property is not applicable if the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> property is set to a value of 0.0.</span></span>  
  
 <span data-ttu-id="6712f-158">背景图像优先于其他背景属性，如渐变颜色。</span><span class="sxs-lookup"><span data-stu-id="6712f-158">Background images take precedence over other background properties, such as gradient colors.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle BackImageAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle BackImageAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImageAlignment As ChartImageAlignmentStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartImageAlignmentStyle BackImageAlignment { System::Windows::Forms::DataVisualization::Charting::ChartImageAlignmentStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartImageAlignmentStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BackImageAlignment : System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6712f-159">获取或设置背景图像对齐方式。</span><span class="sxs-lookup"><span data-stu-id="6712f-159">Gets or sets the background image alignment.</span></span></summary>
        <value><span data-ttu-id="6712f-160">一个 <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="6712f-160">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle" /> enumeration value.</span></span> <span data-ttu-id="6712f-161">默认值为 <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle.TopLeft" />。</span><span class="sxs-lookup"><span data-stu-id="6712f-161">The default value is <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle.TopLeft" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6712f-162">此属性确定条带线的背景图像的对齐方式;仅当属性设置为时才应用此 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageWrapMode%2A> 设置 <xref:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode.Unscaled> 。</span><span class="sxs-lookup"><span data-stu-id="6712f-162">This property determines the alignment of the background image for strip lines; it is only applied when the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageWrapMode%2A> property is set to <xref:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode.Unscaled>.</span></span>  
  
 <span data-ttu-id="6712f-163">有关可用对齐方式的详细信息，请参阅 <xref:System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle> 枚举主题。</span><span class="sxs-lookup"><span data-stu-id="6712f-163">For more information about available alignments, see the <xref:System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle> enumeration topic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageTransparentColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackImageTransparentColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackImageTransparentColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageTransparentColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImageTransparentColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackImageTransparentColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackImageTransparentColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageTransparentColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6712f-164">获取或设置在绘制背景图像时，将替换为透明色的颜色。</span><span class="sxs-lookup"><span data-stu-id="6712f-164">Gets or sets a color which will be replaced with a transparent color when the background image is drawn.</span></span></summary>
        <value><span data-ttu-id="6712f-165">一个将显示为透明效果的 <see cref="T:System.Drawing.Color" /> 值。</span><span class="sxs-lookup"><span data-stu-id="6712f-165">A <see cref="T:System.Drawing.Color" /> value that will be displayed as transparent.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6712f-166">如果将 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> 属性设置为值0.0，则此属性不适用。</span><span class="sxs-lookup"><span data-stu-id="6712f-166">This property is not applicable if the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> property is set to a value of 0.0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageWrapMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode BackImageWrapMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode BackImageWrapMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageWrapMode" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImageWrapMode As ChartImageWrapMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartImageWrapMode BackImageWrapMode { System::Windows::Forms::DataVisualization::Charting::ChartImageWrapMode get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartImageWrapMode value); };" />
      <MemberSignature Language="F#" Value="member this.BackImageWrapMode : System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageWrapMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6712f-167">获取或设置带状线的背景图像的绘制模式。</span><span class="sxs-lookup"><span data-stu-id="6712f-167">Gets or sets the drawing mode of the background image of the strip line.</span></span></summary>
        <value><span data-ttu-id="6712f-168">一个 <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode" /> 整数枚举。</span><span class="sxs-lookup"><span data-stu-id="6712f-168">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode" /> integer enumeration.</span></span> <span data-ttu-id="6712f-169">默认为 <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode.Tile" />。</span><span class="sxs-lookup"><span data-stu-id="6712f-169">The default is <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode.Tile" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6712f-170">此属性确定图像的显示方式;即平铺、缩放等。</span><span class="sxs-lookup"><span data-stu-id="6712f-170">This property determines how the image is displayed; that is, tiled, scaled, and so forth.</span></span>  
  
 <span data-ttu-id="6712f-171">如果缩放图像，则会拉伸该图像以适合边界条带线。</span><span class="sxs-lookup"><span data-stu-id="6712f-171">If an image is scaled, it will be stretched to fit within the bounding strip line.</span></span> <span data-ttu-id="6712f-172">如果图像已平铺，则从左上角开始重复绘制。</span><span class="sxs-lookup"><span data-stu-id="6712f-172">If the image is tiled, it is repeatedly drawn, starting from the top-left corner.</span></span>  
  
 <span data-ttu-id="6712f-173">有关可用包装模式的详细信息，请参阅 <xref:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode> 枚举主题。</span><span class="sxs-lookup"><span data-stu-id="6712f-173">For more information concerning the available wrapping modes, see the <xref:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode> enumeration topic.</span></span>  
  
 <span data-ttu-id="6712f-174">如果将 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageWrapMode%2A> 属性设置为 <xref:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode.Unscaled> ，则绘制图像的位置将由 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageAlignment%2A> 属性设置确定。</span><span class="sxs-lookup"><span data-stu-id="6712f-174">If the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageWrapMode%2A> property is set to <xref:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode.Unscaled>, the location where the image is drawn will be determined by the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackImageAlignment%2A> property setting.</span></span>  
  
 <span data-ttu-id="6712f-175">如果的 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> 值设置为0.0，则此属性不适用。</span><span class="sxs-lookup"><span data-stu-id="6712f-175">This property is not applicable if <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> is set to a value of 0.0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackSecondaryColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackSecondaryColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackSecondaryColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.StripLine.BackSecondaryColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackSecondaryColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackSecondaryColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackSecondaryColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.StripLine.BackSecondaryColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6712f-176">获取或设置带状线背景的辅助颜色。</span><span class="sxs-lookup"><span data-stu-id="6712f-176">Gets or sets the secondary color of the strip line background.</span></span></summary>
        <value><span data-ttu-id="6712f-177">一个 <see cref="T:System.Drawing.Color" /> 值，该值用于带阴影或渐变填充的背景的辅助颜色。</span><span class="sxs-lookup"><span data-stu-id="6712f-177">A <see cref="T:System.Drawing.Color" /> value used for the secondary color of a background with hatching or gradient fill.</span></span> <span data-ttu-id="6712f-178">默认颜色为 <see cref="F:System.Drawing.Color.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="6712f-178">The default color is <see cref="F:System.Drawing.Color.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6712f-179">此属性确定多个图表对象的辅助背景色，并在应用渐变颜色时使用。</span><span class="sxs-lookup"><span data-stu-id="6712f-179">This property determines the secondary background color of many chart objects, and is used when gradient colors are being applied.</span></span>  
  
 <span data-ttu-id="6712f-180">可以将背景辅助颜色设置为任何有效的 ARGB (alpha、红色、绿色、蓝色) 值。</span><span class="sxs-lookup"><span data-stu-id="6712f-180">You can set background secondary color to any valid ARGB (alpha, red, green, blue) value.</span></span>  
  
 <span data-ttu-id="6712f-181">如果使用影线，则 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackSecondaryColor%2A> 属性将确定阴影线的颜色。</span><span class="sxs-lookup"><span data-stu-id="6712f-181">If hatching is used, the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackSecondaryColor%2A> property determines the color of the hatching lines.</span></span>  
  
 <span data-ttu-id="6712f-182">若要对图表元素的背景使用渐变颜色：</span><span class="sxs-lookup"><span data-stu-id="6712f-182">To use gradient colors for the background of a chart element:</span></span>  
  
-   <span data-ttu-id="6712f-183">使用 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackColor%2A> 属性设置主色。</span><span class="sxs-lookup"><span data-stu-id="6712f-183">Use the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackColor%2A> property to set the primary color.</span></span>  
  
-   <span data-ttu-id="6712f-184">使用此 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackSecondaryColor%2A> 属性设置辅助颜色。</span><span class="sxs-lookup"><span data-stu-id="6712f-184">Use this <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackSecondaryColor%2A> property to set the secondary color.</span></span>  
  
-   <span data-ttu-id="6712f-185">将 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackGradientStyle%2A> 属性设置为所需的渐变样式。</span><span class="sxs-lookup"><span data-stu-id="6712f-185">Set the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackGradientStyle%2A> property to the desired gradient style.</span></span>  
  
 <span data-ttu-id="6712f-186">如果将 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> 属性设置为值0.0，则此属性不适用。</span><span class="sxs-lookup"><span data-stu-id="6712f-186">This property is not applicable if the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> property is set to a value of 0.0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.StripLine.BorderColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BorderColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BorderColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.StripLine.BorderColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6712f-187">获取或设置带状线的边框颜色。</span><span class="sxs-lookup"><span data-stu-id="6712f-187">Gets or sets the border color of a strip line.</span></span></summary>
        <value><span data-ttu-id="6712f-188">一个 <see cref="T:System.Drawing.Color" /> 值。</span><span class="sxs-lookup"><span data-stu-id="6712f-188">A <see cref="T:System.Drawing.Color" /> value.</span></span> <span data-ttu-id="6712f-189">默认颜色为 <see cref="F:System.Drawing.Color.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="6712f-189">The default color is <see cref="F:System.Drawing.Color.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6712f-190">可将此属性设置为任何有效的 ARGB (alpha、红色、绿色、蓝色) 值。</span><span class="sxs-lookup"><span data-stu-id="6712f-190">You can set this property to any valid ARGB (alpha, red, green, blue) value.</span></span>  
  
 <span data-ttu-id="6712f-191">如果 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> 对象的属性 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine> 设置为0.0，则将绘制一条线条，它是此属性，而不是 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackColor%2A> 将确定线条颜色的属性设置。</span><span class="sxs-lookup"><span data-stu-id="6712f-191">If the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> property of a <xref:System.Windows.Forms.DataVisualization.Charting.StripLine> object is set to 0.0, a line will be drawn, and it is this property and not the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BackColor%2A> property setting that will determine the color of the line.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderDashStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartDashStyle BorderDashStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartDashStyle BorderDashStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.StripLine.BorderDashStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderDashStyle As ChartDashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartDashStyle BorderDashStyle { System::Windows::Forms::DataVisualization::Charting::ChartDashStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartDashStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderDashStyle : System.Windows.Forms.DataVisualization.Charting.ChartDashStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.StripLine.BorderDashStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartDashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6712f-192">获取或设置带状线的边框样式。</span><span class="sxs-lookup"><span data-stu-id="6712f-192">Gets or sets the border style of the strip line.</span></span></summary>
        <value><span data-ttu-id="6712f-193">一个 <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartDashStyle" /> 枚举值，该值决定了带状线的边框样式。</span><span class="sxs-lookup"><span data-stu-id="6712f-193">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartDashStyle" /> enumeration value that determines the border style of the strip line.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6712f-194">此属性指定用于边框的线条样式。</span><span class="sxs-lookup"><span data-stu-id="6712f-194">This property specifies the line style used for a border.</span></span> <span data-ttu-id="6712f-195">线条可以是纯色、点线或某种形式的实线和虚线。</span><span class="sxs-lookup"><span data-stu-id="6712f-195">The line can be solid, dotted or some variation of solid and dotted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public int BorderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.StripLine.BorderWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BorderWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BorderWidth : int with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.StripLine.BorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6712f-196">获取或设置带状线的边框宽度。</span><span class="sxs-lookup"><span data-stu-id="6712f-196">Gets or sets the border width of the strip line.</span></span></summary>
        <value><span data-ttu-id="6712f-197">一个 <see langword="integer" /> 值，该值确定带状线的边框宽度（以像素为单位）。</span><span class="sxs-lookup"><span data-stu-id="6712f-197">An <see langword="integer" /> value that determines the width of the strip line's border, in pixels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6712f-198">此属性以像素为单位进行度量。</span><span class="sxs-lookup"><span data-stu-id="6712f-198">This property is measured in pixels.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StripLine.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="stripLine.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="6712f-199">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6712f-199"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="6712f-200">释放由 <see cref="T:System.Windows.Forms.DataVisualization.Charting.StripLine" /> 占用的非托管资源，还可以另外再释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="6712f-200">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.DataVisualization.Charting.StripLine" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.StripLine.Font" />
      <MemberSignature Language="VB.NET" Value="Public Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Drawing.Font with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.StripLine.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(typeof(System.Drawing.Font), "Microsoft Sans Serif, 8pt")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(typeof(System.Drawing.Font), "Microsoft Sans Serif, 8pt")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6712f-201">获取或设置用于带状线文本的字体。</span><span class="sxs-lookup"><span data-stu-id="6712f-201">Gets or sets the font used for the strip line text.</span></span></summary>
        <value><span data-ttu-id="6712f-202">一个 <see cref="T:System.Drawing.Font" /> 值，该值表示带状线文本的字体。</span><span class="sxs-lookup"><span data-stu-id="6712f-202">A <see cref="T:System.Drawing.Font" /> value that represents the font of the strip line text.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.StripLine.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.StripLine.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6712f-203">获取或设置带状线文本的颜色。</span><span class="sxs-lookup"><span data-stu-id="6712f-203">Gets or sets the color of the strip line text.</span></span></summary>
        <value><span data-ttu-id="6712f-204">一个 <see cref="T:System.Drawing.Color" /> 值，该值表示带状线的文本颜色。</span><span class="sxs-lookup"><span data-stu-id="6712f-204">A <see cref="T:System.Drawing.Color" /> value that represents the text color of a strip line.</span></span> <span data-ttu-id="6712f-205">默认值为 <see cref="P:System.Drawing.Color.Black" />。</span><span class="sxs-lookup"><span data-stu-id="6712f-205">The default value is <see cref="P:System.Drawing.Color.Black" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6712f-206">您可以为此属性指定任何有效的 ARGB 颜色。</span><span class="sxs-lookup"><span data-stu-id="6712f-206">You can specify any valid ARGB color for this property.</span></span> <span data-ttu-id="6712f-207">仅当为条带线指定了文本值时，此属性才适用。</span><span class="sxs-lookup"><span data-stu-id="6712f-207">This property is only applicable when a text value is specified for the strip line.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public double Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Interval" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.StripLine.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Interval { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Interval : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.StripLine.Interval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(0)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6712f-208">获取或设置带状线的间隔，并确定带状线是绘制一次还是重复绘制。</span><span class="sxs-lookup"><span data-stu-id="6712f-208">Gets or sets the interval for a strip line, and determines if the strip line is drawn once or repeatedly.</span></span></summary>
        <value><span data-ttu-id="6712f-209">一个 <see langword="double" /> 值，该值表示带状线之间的间隔。</span><span class="sxs-lookup"><span data-stu-id="6712f-209">A <see langword="double" /> value that represents the interval between strip lines.</span></span> <span data-ttu-id="6712f-210">默认值为零。</span><span class="sxs-lookup"><span data-stu-id="6712f-210">The default value is zero.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6712f-211">如果将属性的 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.Interval%2A> 值设置为零，则将显示一条条带线，并使用属性指定宽度 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> 。</span><span class="sxs-lookup"><span data-stu-id="6712f-211">When you set the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.Interval%2A> property to a value of zero, one strip line will be displayed, with a width specified by the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> property.</span></span> <span data-ttu-id="6712f-212">如果将设置 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.Interval%2A> 为非零值，则将显示多条带线。</span><span class="sxs-lookup"><span data-stu-id="6712f-212">When you set <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.Interval%2A> to a value of other than zero, multiple strip lines will be shown.</span></span> <span data-ttu-id="6712f-213">用于属性的单位由 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.Interval%2A> <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalType%2A> 属性定义。</span><span class="sxs-lookup"><span data-stu-id="6712f-213">The unit that is used for the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.Interval%2A> property is defined by the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalType%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalOffset">
      <MemberSignature Language="C#" Value="public double IntervalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 IntervalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double IntervalOffset { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.IntervalOffset : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(0)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.AxisLabelDateValueConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.AxisLabelDateValueConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6712f-214">获取或设置网格线、刻度线、带状线和轴标签的偏移量。</span><span class="sxs-lookup"><span data-stu-id="6712f-214">Gets or sets the offset of grid lines, tick marks, strip lines and axis labels.</span></span></summary>
        <value><span data-ttu-id="6712f-215">一个 <see langword="double" /> 值，该值表示间隔偏移量。</span><span class="sxs-lookup"><span data-stu-id="6712f-215">A <see langword="double" /> value that represents the interval offset.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6712f-216">次要刻度线和网格线的间隔偏移量从不受对象属性的值的影响 <xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffset%2A> <xref:System.Windows.Forms.DataVisualization.Charting.Axis> 。</span><span class="sxs-lookup"><span data-stu-id="6712f-216">The interval offset of minor tick marks and grid lines is never affected by the value of the <xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffset%2A> property of the <xref:System.Windows.Forms.DataVisualization.Charting.Axis> object.</span></span>  
  
 <span data-ttu-id="6712f-217"><xref:System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalOffset%2A>属性设置定义偏移量的度量单位。</span><span class="sxs-lookup"><span data-stu-id="6712f-217">The <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalOffset%2A> property setting defines the units of measurement of the offset.</span></span>  
  
 <span data-ttu-id="6712f-218"><xref:System.Windows.Forms.DataVisualization.Charting.StripLine.Interval%2A>可以为负值。</span><span class="sxs-lookup"><span data-stu-id="6712f-218">The <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.Interval%2A> can be a negative value.</span></span>  
  
 <span data-ttu-id="6712f-219">默认值为 `Auto` (`0`) 。</span><span class="sxs-lookup"><span data-stu-id="6712f-219">The default value is `Auto` (`0`).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalOffsetType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalOffsetType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalOffsetType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalOffsetType" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalOffsetType As DateTimeIntervalType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType IntervalOffsetType { System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType get(); void set(System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType value); };" />
      <MemberSignature Language="F#" Value="member this.IntervalOffsetType : System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalOffsetType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6712f-220">获取或设置带状线的间隔偏移量类型。</span><span class="sxs-lookup"><span data-stu-id="6712f-220">Gets or sets the interval offset type of the strip line.</span></span></summary>
        <value><span data-ttu-id="6712f-221">一个 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType" /> 枚举值，该值指示间隔类型。</span><span class="sxs-lookup"><span data-stu-id="6712f-221">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType" /> enumeration value that indicates the interval type.</span></span> <span data-ttu-id="6712f-222">默认值为 <see cref="F:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto" />。</span><span class="sxs-lookup"><span data-stu-id="6712f-222">The default value is <see cref="F:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6712f-223">默认情况下，此属性设置为 <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto> ; 此属性的实际值由 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalType%2A> 属性确定。</span><span class="sxs-lookup"><span data-stu-id="6712f-223">By default, this property is set to <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto>; the actual value of this property is determined by the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalType%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalType" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalType As DateTimeIntervalType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType IntervalType { System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType get(); void set(System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType value); };" />
      <MemberSignature Language="F#" Value="member this.IntervalType : System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6712f-224">获取或设置 <see cref="T:System.Windows.Forms.DataVisualization.Charting.StripLine" /> 对象的间隔类型。</span><span class="sxs-lookup"><span data-stu-id="6712f-224">Gets or sets the interval type of a <see cref="T:System.Windows.Forms.DataVisualization.Charting.StripLine" /> object.</span></span></summary>
        <value><span data-ttu-id="6712f-225">一个 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType" /> 枚举值，该值指示间隔类型。</span><span class="sxs-lookup"><span data-stu-id="6712f-225">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType" /> enumeration value that indicates the interval type.</span></span> <span data-ttu-id="6712f-226">默认值为 <see cref="F:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto" />。</span><span class="sxs-lookup"><span data-stu-id="6712f-226">The default value is <see cref="F:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6712f-227">间隔类型可以设置为 <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto> ，在这种情况下，类型依赖于：绘制对象的 X 值或 Y 值类型， <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> 具体取决于 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine> 对象所属的轴和轴刻度。</span><span class="sxs-lookup"><span data-stu-id="6712f-227">Interval types can be set to <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto>, in which case the type depends on: the X-value or Y-value types of the plotted <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> objects - depending on which axis the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine> objects belong to - and the axis scale.</span></span>  
  
 <span data-ttu-id="6712f-228"><xref:System.Windows.Forms.DataVisualization.Charting.StripLine.Interval%2A>属性确定条带或线条的绘制频率。</span><span class="sxs-lookup"><span data-stu-id="6712f-228">The <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.Interval%2A> property determines how often a strip or line is drawn.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.StripLine.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Windows.Forms.DataVisualization.Charting.StripLine.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("StripLine")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("StripLine")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6712f-229">获取带状线的名称。</span><span class="sxs-lookup"><span data-stu-id="6712f-229">Gets the name of the strip line.</span></span></summary>
        <value><span data-ttu-id="6712f-230">一个 <see langword="string" /> 值，该值表示带状线的名称。</span><span class="sxs-lookup"><span data-stu-id="6712f-230">A <see langword="string" /> value that represents the name of the strip line.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StripWidth">
      <MemberSignature Language="C#" Value="public double StripWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 StripWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property StripWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double StripWidth { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.StripWidth : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(0)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6712f-231">获取或设置带状线的宽度。</span><span class="sxs-lookup"><span data-stu-id="6712f-231">Gets or sets the width of a strip line.</span></span></summary>
        <value><span data-ttu-id="6712f-232">一个 <see langword="double" /> 值，该值确定是绘制条带还是线条。</span><span class="sxs-lookup"><span data-stu-id="6712f-232">A <see langword="double" /> value that determines whether a strip or a line is drawn.</span></span> <span data-ttu-id="6712f-233">默认值为 0.0。</span><span class="sxs-lookup"><span data-stu-id="6712f-233">The default value is 0.0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6712f-234">此属性不能设置为小于零的值，否则将引发异常。</span><span class="sxs-lookup"><span data-stu-id="6712f-234">This property cannot be set to a value less than zero, otherwise an exception will be raised.</span></span>  
  
 <span data-ttu-id="6712f-235">设置为0.0 将导致绘制一行;此行将使用的 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BorderColor%2A> 、 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BorderDashStyle%2A> 和 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BorderWidth%2A> 属性设置的颜色、宽度和样式。</span><span class="sxs-lookup"><span data-stu-id="6712f-235">A setting of 0.0 will result in a line being drawn; this line will use the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BorderColor%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BorderDashStyle%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BorderWidth%2A> property settings for its color, width and style.</span></span> <span data-ttu-id="6712f-236">`Back*`当的值为0.0 时，不使用此类中的任何属性 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> 。</span><span class="sxs-lookup"><span data-stu-id="6712f-236">None of the `Back*` properties in this class are utilized when the value of <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> is 0.0.</span></span>  
  
 <span data-ttu-id="6712f-237">如果将属性设置 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> 为大于零的值，则将创建一个条带。</span><span class="sxs-lookup"><span data-stu-id="6712f-237">If you set the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> property to a value greater than zero, a strip will be created.</span></span> <span data-ttu-id="6712f-238"><xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BorderColor%2A>、 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BorderDashStyle%2A> 和 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BorderWidth%2A> 属性仅适用于条纹的边框; 然后，所有 `Back*` 属性都用于条带的背景属性。</span><span class="sxs-lookup"><span data-stu-id="6712f-238">The <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BorderColor%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BorderDashStyle%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.BorderWidth%2A> properties only apply to the border of the strip; all of the `Back*` properties are then used for the background properties of the strip.</span></span>  
  
 <span data-ttu-id="6712f-239">如果属性的值 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> 大于0.0，则单位取决于相关轴刻度。</span><span class="sxs-lookup"><span data-stu-id="6712f-239">If the value of the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> property is greater than 0.0, the units are determined by the relevant axis scale.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StripWidthType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType StripWidthType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType StripWidthType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidthType" />
      <MemberSignature Language="VB.NET" Value="Public Property StripWidthType As DateTimeIntervalType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType StripWidthType { System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType get(); void set(System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType value); };" />
      <MemberSignature Language="F#" Value="member this.StripWidthType : System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidthType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6712f-240">获取或设置 <see cref="P:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth" /> 属性的度量单位。</span><span class="sxs-lookup"><span data-stu-id="6712f-240">Gets or sets the unit of measurement for the <see cref="P:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth" /> property.</span></span></summary>
        <value><span data-ttu-id="6712f-241">一个 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType" /> 枚举值，该值指示宽度类型。</span><span class="sxs-lookup"><span data-stu-id="6712f-241">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType" /> enumeration value that indicates the width type.</span></span> <span data-ttu-id="6712f-242">默认值为 <see cref="F:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto" />。</span><span class="sxs-lookup"><span data-stu-id="6712f-242">The default value is <see cref="F:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6712f-243">此属性确定用于属性的单位 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> 。</span><span class="sxs-lookup"><span data-stu-id="6712f-243">This property determines the units used for the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> property.</span></span> <span data-ttu-id="6712f-244">例如，若要设置条带线以表示 "一周"，则可以将此属性设置为， <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Weeks> 并将 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> 属性设置为一 (1.0) 。</span><span class="sxs-lookup"><span data-stu-id="6712f-244">For example, to set a strip line to represent "one week", you could set this property to <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Weeks> and set the <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.StripWidth%2A> property to one (1.0).</span></span>  
  
 <span data-ttu-id="6712f-245"><xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto> <xref:System.DateTime> 当相关轴刻度使用值时，可以将此属性的值从更改为值 <xref:System.DateTime> 。</span><span class="sxs-lookup"><span data-stu-id="6712f-245">You can change the value of this property from <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto> to a <xref:System.DateTime> value when the relevant axis scale uses a <xref:System.DateTime> value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.StripLine.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.StripLine.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6712f-246">获取或设置带状线的文本。</span><span class="sxs-lookup"><span data-stu-id="6712f-246">Gets or sets the text of the strip line.</span></span></summary>
        <value><span data-ttu-id="6712f-247">一个 <see langword="string" /> 值，该值表示带状线的文本。</span><span class="sxs-lookup"><span data-stu-id="6712f-247">A <see langword="string" /> value that represents the text of a strip line.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6712f-248">使用此属性可将文本添加到条带线。</span><span class="sxs-lookup"><span data-stu-id="6712f-248">Use this property to add text to a strip line.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAlignment">
      <MemberSignature Language="C#" Value="public System.Drawing.StringAlignment TextAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.StringAlignment TextAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.StripLine.TextAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAlignment As StringAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::StringAlignment TextAlignment { System::Drawing::StringAlignment get(); void set(System::Drawing::StringAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.TextAlignment : System.Drawing.StringAlignment with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.StripLine.TextAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(typeof(System.Drawing.StringAlignment), "Far")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(typeof(System.Drawing.StringAlignment), "Far")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.StringAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6712f-249">获取或设置带状线的文本对齐方式。</span><span class="sxs-lookup"><span data-stu-id="6712f-249">Gets or sets the text alignment of the strip line.</span></span></summary>
        <value><span data-ttu-id="6712f-250">一个 <see cref="T:System.Drawing.StringAlignment" /> 值，该值表示带状线文本的对齐方式。</span><span class="sxs-lookup"><span data-stu-id="6712f-250">A <see cref="T:System.Drawing.StringAlignment" /> value that represents the alignment of the strip line text.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextLineAlignment">
      <MemberSignature Language="C#" Value="public System.Drawing.StringAlignment TextLineAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.StringAlignment TextLineAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.StripLine.TextLineAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property TextLineAlignment As StringAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::StringAlignment TextLineAlignment { System::Drawing::StringAlignment get(); void set(System::Drawing::StringAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.TextLineAlignment : System.Drawing.StringAlignment with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.StripLine.TextLineAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(typeof(System.Drawing.StringAlignment), "Near")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(typeof(System.Drawing.StringAlignment), "Near")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.StringAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6712f-251">获取或设置带状线的文本行对齐方式。</span><span class="sxs-lookup"><span data-stu-id="6712f-251">Gets or sets the text line alignment of the strip line.</span></span></summary>
        <value><span data-ttu-id="6712f-252">一个 <see cref="T:System.Drawing.StringAlignment" /> 值，该值表示文本行的对齐方式。</span><span class="sxs-lookup"><span data-stu-id="6712f-252">A <see cref="T:System.Drawing.StringAlignment" /> value that represents the alignment of the text line.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextOrientation">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.TextOrientation TextOrientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.TextOrientation TextOrientation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.StripLine.TextOrientation" />
      <MemberSignature Language="VB.NET" Value="Public Property TextOrientation As TextOrientation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::TextOrientation TextOrientation { System::Windows::Forms::DataVisualization::Charting::TextOrientation get(); void set(System::Windows::Forms::DataVisualization::Charting::TextOrientation value); };" />
      <MemberSignature Language="F#" Value="member this.TextOrientation : System.Windows.Forms.DataVisualization.Charting.TextOrientation with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.StripLine.TextOrientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.TextOrientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6712f-253">获取或设置文本方向。</span><span class="sxs-lookup"><span data-stu-id="6712f-253">Gets or sets the text orientation.</span></span></summary>
        <value><span data-ttu-id="6712f-254">一个 <see cref="P:System.Windows.Forms.DataVisualization.Charting.StripLine.TextOrientation" /> 值，该值表示文本方向的对齐方式。</span><span class="sxs-lookup"><span data-stu-id="6712f-254">A <see cref="P:System.Windows.Forms.DataVisualization.Charting.StripLine.TextOrientation" /> value that represents the alignment of the text orientation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6712f-255">如果将此属性设置为值 <xref:System.Windows.Forms.DataVisualization.Charting.TextOrientation.Auto> ，则将基于图表类型对文本进行定向。</span><span class="sxs-lookup"><span data-stu-id="6712f-255">When this property is set to a value of <xref:System.Windows.Forms.DataVisualization.Charting.TextOrientation.Auto>, the text is oriented based on the chart type.</span></span> <span data-ttu-id="6712f-256">对于条形图之外的所有 X-y 图表类型，X 轴条带线文本在条带线的底部从左至右方向上沿水平方向。</span><span class="sxs-lookup"><span data-stu-id="6712f-256">For all X-Y chart types other than Bar, X-axis strip line text is oriented horizontally from left to right on the bottom of the strip line.</span></span> <span data-ttu-id="6712f-257">对于条形图，X 轴条带线文本在条带线的顶部向下垂直方向。</span><span class="sxs-lookup"><span data-stu-id="6712f-257">For Bar charts, X-axis strip line text is oriented vertically from top to bottom to the right of the strip line.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public string ToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.StripLine.ToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTip : string with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.StripLine.ToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6712f-258">获取或设置带状线的工具提示。</span><span class="sxs-lookup"><span data-stu-id="6712f-258">Gets or sets the tooltip of a strip line.</span></span></summary>
        <value><span data-ttu-id="6712f-259">一个 <see langword="string" /> 值，该值表示带状线的工具提示。</span><span class="sxs-lookup"><span data-stu-id="6712f-259">A <see langword="string" /> value that represents the tooltip of the strip line.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
