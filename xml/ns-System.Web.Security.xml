<Namespace Name="System.Web.Security">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ca4ee96c86c02ef976b88e3349e8817b0d912057" /><Meta Name="ms.sourcegitcommit" Value="02dd069b9696eb4eee675b6541f86b2602076448" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/20/2020" /><Meta Name="ms.locfileid" Value="92231810" /></Metadata><Docs>
    <summary>包含用于在 Web 服务器应用程序中实现 ASP.NET 安全的类。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Security.Membership>ASP.NET 应用程序使用该类来验证用户凭据并管理用户设置（如密码和电子邮件地址）。 <xref:System.Web.Security.Roles>利用类，你可以根据分配给 Web 应用程序中的角色的用户组来管理你的应用程序的授权。

 <xref:System.Web.Security.Membership>类和 <xref:System.Web.Security.Roles> 类都与提供程序一起使用，这些类用于访问应用程序的数据存储区以检索成员身份和角色信息。 成员身份和角色信息可以使用和类存储在 Microsoft SQL Server 数据库 <xref:System.Web.Security.SqlMembershipProvider> 中 <xref:System.Web.Security.SqlRoleProvider> ; 在使用和类的 Active Directory <xref:System.Web.Security.ActiveDirectoryMembershipProvider> 中 <xref:System.Web.Security.AuthorizationStoreRoleProvider> ，或使用和类的实现在自定义数据源中存储 <xref:System.Web.Security.MembershipProvider> <xref:System.Web.Security.RoleProvider> 。

 您可以使用 [ (ASP.NET Settings Schema) 的成员身份元素 ](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v=vs.100))配置 ASP.NET 成员身份。 在访问使用成员身份的应用程序时，ASP.NET <xref:System.Web.Security.Membership> 会创建可用于查询成员身份信息的类的实例。 类的特定于提供程序的实现 <xref:System.Web.Security.MembershipUser> 包含有关访问该页的用户的信息。 您可以为应用程序创建类的自定义实现 <xref:System.Web.Security.MembershipUser> 。

 使用 [RoleManager 元素 (ASP.NET Settings Schema) ](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164660(v=vs.100))配置 ASP.NET 角色。 ASP.NET 创建类的一个实例 <xref:System.Web.Security.Roles> ，该实例包含有关当前用户的角色成员身份的信息。

 ASP.NET 提供与类和类交互的服务器控件 <xref:System.Web.Security.Membership> <xref:System.Web.Security.Roles> 。 <xref:System.Web.UI.WebControls.Login>、 <xref:System.Web.UI.WebControls.CreateUserWizard> 和 <xref:System.Web.UI.WebControls.ChangePassword> 控件与类结合使用 <xref:System.Web.Security.Membership> 来简化已通过身份验证的 Web 应用程序，而 <xref:System.Web.UI.WebControls.LoginView> 控件使用特定于角色的模板为特定的用户组自定义网页。

 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">成员资格简介</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/5k850zwb(v=vs.100)">了解角色管理</related>
  </Docs>
</Namespace>
