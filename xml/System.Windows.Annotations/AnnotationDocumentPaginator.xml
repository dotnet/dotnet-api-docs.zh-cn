<Type Name="AnnotationDocumentPaginator" FullName="System.Windows.Annotations.AnnotationDocumentPaginator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e4adb58db0af9ff0d5739123b46e5267c1464d43" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89930339" /></Metadata><TypeSignature Language="C#" Value="public sealed class AnnotationDocumentPaginator : System.Windows.Documents.DocumentPaginator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AnnotationDocumentPaginator extends System.Windows.Documents.DocumentPaginator" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Annotations.AnnotationDocumentPaginator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AnnotationDocumentPaginator&#xA;Inherits DocumentPaginator" />
  <TypeSignature Language="C++ CLI" Value="public ref class AnnotationDocumentPaginator sealed : System::Windows::Documents::DocumentPaginator" />
  <TypeSignature Language="F#" Value="type AnnotationDocumentPaginator = class&#xA;    inherit DocumentPaginator" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.DocumentPaginator</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0a97c-101">提供一个 <see cref="T:System.Windows.Documents.DocumentPaginator" />，用于打印文档及其关联的批注。</span><span class="sxs-lookup"><span data-stu-id="0a97c-101">Provides a <see cref="T:System.Windows.Documents.DocumentPaginator" /> for printing a document together with its associated annotations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a97c-102"><xref:System.Windows.Annotations.AnnotationDocumentPaginator>类将指定的包装到 <xref:System.Windows.Documents.DocumentPaginator> <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> 构造函数，以将用户批注添加到要打印的页面。</span><span class="sxs-lookup"><span data-stu-id="0a97c-102">The <xref:System.Windows.Annotations.AnnotationDocumentPaginator> class wraps the <xref:System.Windows.Documents.DocumentPaginator> specified to the <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> constructor to add the user annotations to the pages for printing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a97c-103">下面的示例演示如何使用 <xref:System.Windows.Annotations.AnnotationDocumentPaginator> 类。</span><span class="sxs-lookup"><span data-stu-id="0a97c-103">The following example shows use of the <xref:System.Windows.Annotations.AnnotationDocumentPaginator> class.</span></span>  
  
 [!code-csharp[DocViewerAnnotationsXps#DocViewAnnXpsPrint](~/samples/snippets/csharp/VS_Snippets_Wpf/DocViewerAnnotationsXps/CSharp/Window1.xaml.cs#docviewannxpsprint)]
 [!code-vb[DocViewerAnnotationsXps#DocViewAnnXpsPrint](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DocViewerAnnotationsXps/visualbasic/window1.xaml.vb#docviewannxpsprint)]  
  
 [!code-csharp[DocViewerAnnotationsXps#DocViewAnnXpsDocPaginator](~/samples/snippets/csharp/VS_Snippets_Wpf/DocViewerAnnotationsXps/CSharp/AnnotationsHelperXps.cs#docviewannxpsdocpaginator)]
 [!code-vb[DocViewerAnnotationsXps#DocViewAnnXpsDocPaginator](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DocViewerAnnotationsXps/visualbasic/annotationshelperxps.vb#docviewannxpsdocpaginator)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a97c-104">初始化 <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0a97c-104">Initializes a new instance of the <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a97c-105"><xref:System.Windows.Annotations.AnnotationDocumentPaginator>类将指定的包装到 <xref:System.Windows.Documents.DocumentPaginator> <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> 构造函数，以将用户批注添加到要打印的页面。</span><span class="sxs-lookup"><span data-stu-id="0a97c-105">The <xref:System.Windows.Annotations.AnnotationDocumentPaginator> class wraps the <xref:System.Windows.Documents.DocumentPaginator> specified to the <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> constructor to add the user annotations to the pages for printing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnnotationDocumentPaginator (System.Windows.Documents.DocumentPaginator originalPaginator, System.IO.Stream annotationStore);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Documents.DocumentPaginator originalPaginator, class System.IO.Stream annotationStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.AnnotationDocumentPaginator.#ctor(System.Windows.Documents.DocumentPaginator,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (originalPaginator As DocumentPaginator, annotationStore As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnnotationDocumentPaginator(System::Windows::Documents::DocumentPaginator ^ originalPaginator, System::IO::Stream ^ annotationStore);" />
      <MemberSignature Language="F#" Value="new System.Windows.Annotations.AnnotationDocumentPaginator : System.Windows.Documents.DocumentPaginator * System.IO.Stream -&gt; System.Windows.Annotations.AnnotationDocumentPaginator" Usage="new System.Windows.Annotations.AnnotationDocumentPaginator (originalPaginator, annotationStore)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="originalPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="annotationStore" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="originalPaginator"><span data-ttu-id="0a97c-106">要添加打印批注的文档。</span><span class="sxs-lookup"><span data-stu-id="0a97c-106">The document to add the printed annotations to.</span></span></param>
        <param name="annotationStore"><span data-ttu-id="0a97c-107">要从中检索批注的批注存储流。</span><span class="sxs-lookup"><span data-stu-id="0a97c-107">The annotation storage stream to retrieve the annotations from.</span></span></param>
        <summary><span data-ttu-id="0a97c-108">基于指定的 <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" /> 和批注存储 <see cref="T:System.Windows.Documents.DocumentPaginator" /> 初始化 <see cref="T:System.IO.Stream" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0a97c-108">Initializes a new instance of the <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" /> class based on a specified <see cref="T:System.Windows.Documents.DocumentPaginator" /> and annotation storage <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a97c-109">默认情况下，此构造函数将文本流方向设置为 <xref:System.Windows.FlowDirection.LeftToRight> 。</span><span class="sxs-lookup"><span data-stu-id="0a97c-109">By default this constructor sets the text flow direction to <xref:System.Windows.FlowDirection.LeftToRight>.</span></span>  <span data-ttu-id="0a97c-110">如果需要，可以使用备用 <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> 构造函数重载之一将文本设置 <xref:System.Windows.FlowDirection> 为其他设置。</span><span class="sxs-lookup"><span data-stu-id="0a97c-110">If needed you can use one of the alternate <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> constructor overloads to set the text <xref:System.Windows.FlowDirection> to a different setting.</span></span>  
  
 <span data-ttu-id="0a97c-111"><xref:System.Windows.Annotations.AnnotationDocumentPaginator>类将指定的包装到 <xref:System.Windows.Documents.DocumentPaginator> <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> 构造函数，以将用户批注添加到要打印的页面。</span><span class="sxs-lookup"><span data-stu-id="0a97c-111">The <xref:System.Windows.Annotations.AnnotationDocumentPaginator> class wraps the <xref:System.Windows.Documents.DocumentPaginator> specified to the <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> constructor to add the user annotations to the pages for printing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnnotationDocumentPaginator (System.Windows.Documents.DocumentPaginator originalPaginator, System.Windows.Annotations.Storage.AnnotationStore annotationStore);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Documents.DocumentPaginator originalPaginator, class System.Windows.Annotations.Storage.AnnotationStore annotationStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.AnnotationDocumentPaginator.#ctor(System.Windows.Documents.DocumentPaginator,System.Windows.Annotations.Storage.AnnotationStore)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (originalPaginator As DocumentPaginator, annotationStore As AnnotationStore)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnnotationDocumentPaginator(System::Windows::Documents::DocumentPaginator ^ originalPaginator, System::Windows::Annotations::Storage::AnnotationStore ^ annotationStore);" />
      <MemberSignature Language="F#" Value="new System.Windows.Annotations.AnnotationDocumentPaginator : System.Windows.Documents.DocumentPaginator * System.Windows.Annotations.Storage.AnnotationStore -&gt; System.Windows.Annotations.AnnotationDocumentPaginator" Usage="new System.Windows.Annotations.AnnotationDocumentPaginator (originalPaginator, annotationStore)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="originalPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="annotationStore" Type="System.Windows.Annotations.Storage.AnnotationStore" />
      </Parameters>
      <Docs>
        <param name="originalPaginator"><span data-ttu-id="0a97c-112">要添加打印批注的文档。</span><span class="sxs-lookup"><span data-stu-id="0a97c-112">The document to add the printed annotations to.</span></span></param>
        <param name="annotationStore"><span data-ttu-id="0a97c-113">要从中检索批注的存储区。</span><span class="sxs-lookup"><span data-stu-id="0a97c-113">The store to retrieve the annotations from.</span></span></param>
        <summary><span data-ttu-id="0a97c-114">基于指定的 <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" /> 和 <see cref="T:System.Windows.Documents.DocumentPaginator" /> 初始化 <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0a97c-114">Initializes a new instance of the <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" /> class based on a specified <see cref="T:System.Windows.Documents.DocumentPaginator" /> and <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a97c-115">默认情况下，此构造函数将文本流方向设置为 <xref:System.Windows.FlowDirection.LeftToRight> 。</span><span class="sxs-lookup"><span data-stu-id="0a97c-115">By default this constructor sets the text flow direction to <xref:System.Windows.FlowDirection.LeftToRight>.</span></span>  <span data-ttu-id="0a97c-116">如果需要，可以使用备用 <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> 构造函数重载之一将文本设置 <xref:System.Windows.FlowDirection> 为其他设置。</span><span class="sxs-lookup"><span data-stu-id="0a97c-116">If needed you can use one of the alternate <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> constructor overloads to set the text <xref:System.Windows.FlowDirection> to a different setting.</span></span>  
  
 <span data-ttu-id="0a97c-117"><xref:System.Windows.Annotations.AnnotationDocumentPaginator>类将指定的包装到 <xref:System.Windows.Documents.DocumentPaginator> <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> 构造函数，以将用户批注添加到要打印的页面。</span><span class="sxs-lookup"><span data-stu-id="0a97c-117">The <xref:System.Windows.Annotations.AnnotationDocumentPaginator> class wraps the <xref:System.Windows.Documents.DocumentPaginator> specified to the <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> constructor to add the user annotations to the pages for printing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a97c-118">下面的示例演示如何使用 <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> 构造函数。</span><span class="sxs-lookup"><span data-stu-id="0a97c-118">The following example shows use of the <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> constructor.</span></span>  
  
 [!code-csharp[DocViewerAnnotationsXps#DocViewAnnXpsPrint](~/samples/snippets/csharp/VS_Snippets_Wpf/DocViewerAnnotationsXps/CSharp/Window1.xaml.cs#docviewannxpsprint)]
 [!code-vb[DocViewerAnnotationsXps#DocViewAnnXpsPrint](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DocViewerAnnotationsXps/visualbasic/window1.xaml.vb#docviewannxpsprint)]  
  
 [!code-csharp[DocViewerAnnotationsXps#DocViewAnnXpsDocPaginator](~/samples/snippets/csharp/VS_Snippets_Wpf/DocViewerAnnotationsXps/CSharp/AnnotationsHelperXps.cs#docviewannxpsdocpaginator)]
 [!code-vb[DocViewerAnnotationsXps#DocViewAnnXpsDocPaginator](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DocViewerAnnotationsXps/visualbasic/annotationshelperxps.vb#docviewannxpsdocpaginator)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnnotationDocumentPaginator (System.Windows.Documents.DocumentPaginator originalPaginator, System.IO.Stream annotationStore, System.Windows.FlowDirection flowDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Documents.DocumentPaginator originalPaginator, class System.IO.Stream annotationStore, valuetype System.Windows.FlowDirection flowDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.AnnotationDocumentPaginator.#ctor(System.Windows.Documents.DocumentPaginator,System.IO.Stream,System.Windows.FlowDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (originalPaginator As DocumentPaginator, annotationStore As Stream, flowDirection As FlowDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnnotationDocumentPaginator(System::Windows::Documents::DocumentPaginator ^ originalPaginator, System::IO::Stream ^ annotationStore, System::Windows::FlowDirection flowDirection);" />
      <MemberSignature Language="F#" Value="new System.Windows.Annotations.AnnotationDocumentPaginator : System.Windows.Documents.DocumentPaginator * System.IO.Stream * System.Windows.FlowDirection -&gt; System.Windows.Annotations.AnnotationDocumentPaginator" Usage="new System.Windows.Annotations.AnnotationDocumentPaginator (originalPaginator, annotationStore, flowDirection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="originalPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="annotationStore" Type="System.IO.Stream" />
        <Parameter Name="flowDirection" Type="System.Windows.FlowDirection" />
      </Parameters>
      <Docs>
        <param name="originalPaginator"><span data-ttu-id="0a97c-119">要添加打印批注的文档。</span><span class="sxs-lookup"><span data-stu-id="0a97c-119">The document to add the printed annotations to.</span></span></param>
        <param name="annotationStore"><span data-ttu-id="0a97c-120">要从中检索批注的批注存储流。</span><span class="sxs-lookup"><span data-stu-id="0a97c-120">The annotation storage stream to retrieve the annotations from.</span></span></param>
        <param name="flowDirection"><span data-ttu-id="0a97c-121">文本流方向：<see cref="F:System.Windows.FlowDirection.LeftToRight" /> 或 <see cref="F:System.Windows.FlowDirection.RightToLeft" />。</span><span class="sxs-lookup"><span data-stu-id="0a97c-121">The text flow direction, <see cref="F:System.Windows.FlowDirection.LeftToRight" /> or <see cref="F:System.Windows.FlowDirection.RightToLeft" />.</span></span></param>
        <summary><span data-ttu-id="0a97c-122">基于指定的 <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" />、批注存储 <see cref="T:System.Windows.Documents.DocumentPaginator" /> 和文本 <see cref="T:System.IO.Stream" /> 初始化 <see cref="T:System.Windows.FlowDirection" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0a97c-122">Initializes a new instance of the <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" /> class based on a specified <see cref="T:System.Windows.Documents.DocumentPaginator" />, annotation storage <see cref="T:System.IO.Stream" />, and text <see cref="T:System.Windows.FlowDirection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a97c-123"><xref:System.Windows.Annotations.AnnotationDocumentPaginator>类将指定的包装到 <xref:System.Windows.Documents.DocumentPaginator> <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> 构造函数，以将用户批注添加到要打印的页面。</span><span class="sxs-lookup"><span data-stu-id="0a97c-123">The <xref:System.Windows.Annotations.AnnotationDocumentPaginator> class wraps the <xref:System.Windows.Documents.DocumentPaginator> specified to the <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> constructor to add the user annotations to the pages for printing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnnotationDocumentPaginator (System.Windows.Documents.DocumentPaginator originalPaginator, System.Windows.Annotations.Storage.AnnotationStore annotationStore, System.Windows.FlowDirection flowDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Documents.DocumentPaginator originalPaginator, class System.Windows.Annotations.Storage.AnnotationStore annotationStore, valuetype System.Windows.FlowDirection flowDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.AnnotationDocumentPaginator.#ctor(System.Windows.Documents.DocumentPaginator,System.Windows.Annotations.Storage.AnnotationStore,System.Windows.FlowDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (originalPaginator As DocumentPaginator, annotationStore As AnnotationStore, flowDirection As FlowDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnnotationDocumentPaginator(System::Windows::Documents::DocumentPaginator ^ originalPaginator, System::Windows::Annotations::Storage::AnnotationStore ^ annotationStore, System::Windows::FlowDirection flowDirection);" />
      <MemberSignature Language="F#" Value="new System.Windows.Annotations.AnnotationDocumentPaginator : System.Windows.Documents.DocumentPaginator * System.Windows.Annotations.Storage.AnnotationStore * System.Windows.FlowDirection -&gt; System.Windows.Annotations.AnnotationDocumentPaginator" Usage="new System.Windows.Annotations.AnnotationDocumentPaginator (originalPaginator, annotationStore, flowDirection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="originalPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="annotationStore" Type="System.Windows.Annotations.Storage.AnnotationStore" />
        <Parameter Name="flowDirection" Type="System.Windows.FlowDirection" />
      </Parameters>
      <Docs>
        <param name="originalPaginator"><span data-ttu-id="0a97c-124">要添加打印批注的文档。</span><span class="sxs-lookup"><span data-stu-id="0a97c-124">The document to add the printed annotations to.</span></span></param>
        <param name="annotationStore"><span data-ttu-id="0a97c-125">要从中检索批注的存储区。</span><span class="sxs-lookup"><span data-stu-id="0a97c-125">The store to retrieve the annotations from.</span></span></param>
        <param name="flowDirection"><span data-ttu-id="0a97c-126">文本流方向：<see cref="F:System.Windows.FlowDirection.LeftToRight" /> 或 <see cref="F:System.Windows.FlowDirection.RightToLeft" />。</span><span class="sxs-lookup"><span data-stu-id="0a97c-126">The text flow direction, <see cref="F:System.Windows.FlowDirection.LeftToRight" /> or <see cref="F:System.Windows.FlowDirection.RightToLeft" />.</span></span></param>
        <summary><span data-ttu-id="0a97c-127">基于指定的 <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" />、<see cref="T:System.Windows.Documents.DocumentPaginator" /> 和文本 <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> 初始化 <see cref="T:System.Windows.FlowDirection" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0a97c-127">Initializes a new instance of the <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" /> class based on a specified <see cref="T:System.Windows.Documents.DocumentPaginator" />, <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" />, and text <see cref="T:System.Windows.FlowDirection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a97c-128"><xref:System.Windows.Annotations.AnnotationDocumentPaginator>类将指定的包装到 <xref:System.Windows.Documents.DocumentPaginator> <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> 构造函数，以将用户批注添加到要打印的页面。</span><span class="sxs-lookup"><span data-stu-id="0a97c-128">The <xref:System.Windows.Annotations.AnnotationDocumentPaginator> class wraps the <xref:System.Windows.Documents.DocumentPaginator> specified to the <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> constructor to add the user annotations to the pages for printing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public override void CancelAsync (object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CancelAsync(object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.AnnotationDocumentPaginator.CancelAsync(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CancelAsync (userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CancelAsync(System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="override this.CancelAsync : obj -&gt; unit" Usage="annotationDocumentPaginator.CancelAsync userState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userState"><span data-ttu-id="0a97c-129">在用于启动异步操作的调用中传递的由应用程序定义的唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="0a97c-129">The unique application-defined identifier passed in the call to start the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="0a97c-130">取消使用给定 <paramref name="userState" /> 对象启动的所有异步操作。</span><span class="sxs-lookup"><span data-stu-id="0a97c-130">Cancels all asynchronous operations initiated with a given <paramref name="userState" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Annotations.AnnotationDocumentPaginator.ComputePageCountAsync(System.Object)" />
        <altmember cref="M:System.Windows.Annotations.AnnotationDocumentPaginator.GetPageAsync(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ComputePageCount">
      <MemberSignature Language="C#" Value="public override void ComputePageCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ComputePageCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.AnnotationDocumentPaginator.ComputePageCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ComputePageCount ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ComputePageCount();" />
      <MemberSignature Language="F#" Value="override this.ComputePageCount : unit -&gt; unit" Usage="annotationDocumentPaginator.ComputePageCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a97c-131">强制对内容进行分页，用新的总页数更新 <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" />，并将 <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" /> 设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="0a97c-131">Forces a pagination of the content, updates <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" /> with the new total, and sets <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" /> to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a97c-132">返回后 <xref:System.Windows.Annotations.AnnotationDocumentPaginator.ComputePageCount%2A> ， <xref:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid%2A> 将为， `true` 并且 <xref:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount%2A> 属性将反映总页数。</span><span class="sxs-lookup"><span data-stu-id="0a97c-132">Immediately after <xref:System.Windows.Annotations.AnnotationDocumentPaginator.ComputePageCount%2A> returns, <xref:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid%2A> will be `true` and the <xref:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount%2A> property will reflect the total number of pages.</span></span>  
  
 <span data-ttu-id="0a97c-133">如果批注内容被修改或更改，页数可能会更改 <xref:System.Windows.Annotations.AnnotationDocumentPaginator.PageSize%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0a97c-133">The number of pages may change if the annotation content is modified or the <xref:System.Windows.Annotations.AnnotationDocumentPaginator.PageSize%2A> is changed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Annotations.AnnotationDocumentPaginator.ComputePageCountAsync(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ComputePageCountAsync">
      <MemberSignature Language="C#" Value="public override void ComputePageCountAsync (object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ComputePageCountAsync(object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.AnnotationDocumentPaginator.ComputePageCountAsync(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ComputePageCountAsync (userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ComputePageCountAsync(System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="override this.ComputePageCountAsync : obj -&gt; unit" Usage="annotationDocumentPaginator.ComputePageCountAsync userState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userState"><span data-ttu-id="0a97c-134">用于标识异步操作的应用程序定义的对象。</span><span class="sxs-lookup"><span data-stu-id="0a97c-134">An application-defined object for identifying the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="0a97c-135">启动内容的异步分页，使用新的总计更新 <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" />，然后在完成时将 <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" /> 设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="0a97c-135">Starts an asynchronous pagination of the content, updates <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" /> with the new total, and sets <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" /> to <see langword="true" /> when it is finished.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a97c-136">`userState` <xref:System.Windows.Annotations.AnnotationDocumentPaginator.CancelAsync%2A> 如果应用程序希望在完成前取消异步操作，则该参数将用于方法。</span><span class="sxs-lookup"><span data-stu-id="0a97c-136">The `userState` parameter is intended for use with <xref:System.Windows.Annotations.AnnotationDocumentPaginator.CancelAsync%2A> method if the application wishes to cancel the asynchronous operation before completion.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Annotations.AnnotationDocumentPaginator.CancelAsync(System.Object)" />
        <altmember cref="E:System.Windows.Documents.DocumentPaginator.ComputePageCountCompleted" />
        <altmember cref="M:System.Windows.Documents.DocumentPaginator.OnComputePageCountCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.AnnotationDocumentPaginator.ComputePageCount" />
      </Docs>
    </Member>
    <Member MemberName="GetPage">
      <MemberSignature Language="C#" Value="public override System.Windows.Documents.DocumentPage GetPage (int pageNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Windows.Documents.DocumentPage GetPage(int32 pageNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.AnnotationDocumentPaginator.GetPage(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPage (pageNumber As Integer) As DocumentPage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Windows::Documents::DocumentPage ^ GetPage(int pageNumber);" />
      <MemberSignature Language="F#" Value="override this.GetPage : int -&gt; System.Windows.Documents.DocumentPage" Usage="annotationDocumentPaginator.GetPage pageNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.DocumentPage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pageNumber"><span data-ttu-id="0a97c-137">要返回的从零开始的 <see cref="T:System.Windows.Documents.DocumentPage" /> 页码。</span><span class="sxs-lookup"><span data-stu-id="0a97c-137">The zero-based page number of the <see cref="T:System.Windows.Documents.DocumentPage" /> to return.</span></span></param>
        <summary><span data-ttu-id="0a97c-138">返回 <see cref="T:System.Windows.Documents.DocumentPage" /> 以及指定页码的关联用户批注。</span><span class="sxs-lookup"><span data-stu-id="0a97c-138">Returns a <see cref="T:System.Windows.Documents.DocumentPage" /> together with associated user-annotations for a specified page number.</span></span></summary>
        <returns><span data-ttu-id="0a97c-139">指定的 <paramref name="pageNumber" /> 的 <see cref="T:System.Windows.Documents.DocumentPage" />；如果指定的 <paramref name="pageNumber" /> 不存在，则为 <see cref="F:System.Windows.Documents.DocumentPage.Missing" />。</span><span class="sxs-lookup"><span data-stu-id="0a97c-139">The <see cref="T:System.Windows.Documents.DocumentPage" /> for the specified <paramref name="pageNumber" />; or <see cref="F:System.Windows.Documents.DocumentPage.Missing" />, if the specified <paramref name="pageNumber" /> does not exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Annotations.AnnotationDocumentPaginator.GetPageAsync(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetPageAsync">
      <MemberSignature Language="C#" Value="public override void GetPageAsync (int pageNumber, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetPageAsync(int32 pageNumber, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.AnnotationDocumentPaginator.GetPageAsync(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetPageAsync (pageNumber As Integer, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetPageAsync(int pageNumber, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="override this.GetPageAsync : int * obj -&gt; unit" Usage="annotationDocumentPaginator.GetPageAsync (pageNumber, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageNumber" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pageNumber"><span data-ttu-id="0a97c-140">要检索的 <see cref="T:System.Windows.Documents.DocumentPage" /> 的从零开始的页码。</span><span class="sxs-lookup"><span data-stu-id="0a97c-140">The zero-based page number of the <see cref="T:System.Windows.Documents.DocumentPage" /> to retrieve.</span></span></param>
        <param name="userState"><span data-ttu-id="0a97c-141">用于标识异步操作的应用程序定义的对象。</span><span class="sxs-lookup"><span data-stu-id="0a97c-141">An application-defined object that is used to identify the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="0a97c-142">异步返回 <see cref="T:System.Windows.Documents.DocumentPage" /> 以及指定页码的关联用户批注。</span><span class="sxs-lookup"><span data-stu-id="0a97c-142">Asynchronously returns a <see cref="T:System.Windows.Documents.DocumentPage" /> together with associated user-annotations for a specified page number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a97c-143">`userState` <xref:System.Windows.Annotations.AnnotationDocumentPaginator.CancelAsync%2A> 如果应用程序希望在完成前取消异步操作，则该参数将用于方法。</span><span class="sxs-lookup"><span data-stu-id="0a97c-143">The `userState` parameter is intended for use with <xref:System.Windows.Annotations.AnnotationDocumentPaginator.CancelAsync%2A> method if the application wishes to cancel the asynchronous operation before completion.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Annotations.AnnotationDocumentPaginator.CancelAsync(System.Object)" />
        <altmember cref="E:System.Windows.Documents.DocumentPaginator.GetPageCompleted" />
        <altmember cref="M:System.Windows.Documents.DocumentPaginator.OnGetPageCompleted(System.Windows.Documents.GetPageCompletedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.AnnotationDocumentPaginator.GetPage(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsPageCountValid">
      <MemberSignature Language="C#" Value="public override bool IsPageCountValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPageCountValid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsPageCountValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsPageCountValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPageCountValid : bool" Usage="System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a97c-144">获取一个值，该值指示 <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" /> 是否为总页数。</span><span class="sxs-lookup"><span data-stu-id="0a97c-144">Gets a value that indicates whether <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" /> is the total number of pages.</span></span></summary>
        <value><span data-ttu-id="0a97c-145">如果分页已完成，且 <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" /> 表示总页数，则为 <see langword="true" />；如果正在进行分页，且 <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" /> 表示当前设置了格式的页数，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0a97c-145"><see langword="true" /> if pagination is complete and <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" /> represents the total number of pages; otherwise, <see langword="false" /> if pagination is in process and <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" /> represents the number of pages currently formatted.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a97c-146"><xref:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid%2A>`true` `false` <xref:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount%2A> 如果对内容的更改或 <xref:System.Windows.Annotations.AnnotationDocumentPaginator.PageSize%2A> 触发器重新分页，则可以从切换到并重新计算。</span><span class="sxs-lookup"><span data-stu-id="0a97c-146"><xref:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid%2A> may switch from `true` to `false` and <xref:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount%2A> recomputed if a change to the content or <xref:System.Windows.Annotations.AnnotationDocumentPaginator.PageSize%2A> triggers repagination.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageCount">
      <MemberSignature Language="C#" Value="public override int PageCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PageCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PageCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PageCount : int" Usage="System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a97c-147">获取一个值，该值指示当前设置了格式的页数。</span><span class="sxs-lookup"><span data-stu-id="0a97c-147">Gets a value that indicates the number of pages currently formatted.</span></span></summary>
        <value><span data-ttu-id="0a97c-148">如果 <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" /> 为 <see langword="true" />，则为批注页的总数；如果 <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" /> 为 <see langword="false" />，则为当前设置了格式的页数（正在进行分页）。</span><span class="sxs-lookup"><span data-stu-id="0a97c-148">If <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" /> is <see langword="true" />, the total number of annotation pages; otherwise if <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" /> is <see langword="false" />, the number of pages currently formatted (pagination in process).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a97c-149"><xref:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid%2A>`true` `false` <xref:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount%2A> 如果内容更改或触发器重新分页，则可能会从更改为，并重新计算 <xref:System.Windows.Annotations.AnnotationDocumentPaginator.PageSize%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0a97c-149"><xref:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid%2A> may change from `true` to `false` and <xref:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount%2A> recomputed if a change to the content or <xref:System.Windows.Annotations.AnnotationDocumentPaginator.PageSize%2A> triggers repagination.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageSize">
      <MemberSignature Language="C#" Value="public override System.Windows.Size PageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size PageSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property PageSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Size PageSize { System::Windows::Size get(); void set(System::Windows::Size value); };" />
      <MemberSignature Language="F#" Value="member this.PageSize : System.Windows.Size with get, set" Usage="System.Windows.Annotations.AnnotationDocumentPaginator.PageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a97c-150">获取或设置每页的建议宽度和高度。</span><span class="sxs-lookup"><span data-stu-id="0a97c-150">Gets or sets the suggested width and height of each page.</span></span></summary>
        <value><span data-ttu-id="0a97c-151">用于设置页格式的建议宽度和高度。</span><span class="sxs-lookup"><span data-stu-id="0a97c-151">The suggested width and height for formatting pages.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a97c-152"><xref:System.Windows.Annotations.AnnotationDocumentPaginator.PageSize%2A> 获取或设置格式设置页面的 *建议* 大小。</span><span class="sxs-lookup"><span data-stu-id="0a97c-152"><xref:System.Windows.Annotations.AnnotationDocumentPaginator.PageSize%2A> gets or sets the *suggested* size for formatting pages.</span></span>  <span data-ttu-id="0a97c-153">使用 <xref:System.Windows.Documents.DocumentPage.Size%2A> 属性获取页面的实际大小 (如果需要，可以从建议的) 中裁剪实际大小 <xref:System.Windows.Annotations.AnnotationDocumentPaginator.PageSize%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0a97c-153">Use the <xref:System.Windows.Documents.DocumentPage.Size%2A> property to get the actual size of the page (if it is required the actual size may be cropped from the suggested <xref:System.Windows.Annotations.AnnotationDocumentPaginator.PageSize%2A>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public override System.Windows.Documents.IDocumentPaginatorSource Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.IDocumentPaginatorSource Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Annotations.AnnotationDocumentPaginator.Source" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Source As IDocumentPaginatorSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Documents::IDocumentPaginatorSource ^ Source { System::Windows::Documents::IDocumentPaginatorSource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Source : System.Windows.Documents.IDocumentPaginatorSource" Usage="System.Windows.Annotations.AnnotationDocumentPaginator.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.IDocumentPaginatorSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a97c-154">获取正在分页的源文档。</span><span class="sxs-lookup"><span data-stu-id="0a97c-154">Gets the source document that is being paginated.</span></span></summary>
        <value><span data-ttu-id="0a97c-155">正在分页的源文档。</span><span class="sxs-lookup"><span data-stu-id="0a97c-155">The source document that is being paginated.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
