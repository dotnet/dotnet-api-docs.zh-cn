<Type Name="PartConventionBuilder" FullName="System.Composition.Convention.PartConventionBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6623a61bc0a18414853751885027ead1bb0553d0" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89729741" /></Metadata><TypeSignature Language="C#" Value="public class PartConventionBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PartConventionBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Composition.Convention.PartConventionBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class PartConventionBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class PartConventionBuilder" />
  <TypeSignature Language="F#" Value="type PartConventionBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Composition.Convention</AssemblyName>
    <AssemblyVersion>1.0.31.0</AssemblyVersion>
    <AssemblyVersion>1.0.32.0</AssemblyVersion>
    <AssemblyVersion>1.0.33.0</AssemblyVersion>
    <AssemblyVersion>1.0.34.0</AssemblyVersion>
    <AssemblyVersion>1.0.35.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c4bc6-101">将一个类型配置为 Managed Extensibility Framework (MEF) 部件。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-101">Configures a type as a Managed Extensibility Framework (MEF) part.</span></span></summary>
    <remarks></remarks>
  </Docs>
  <Members>
    <Member MemberName="AddPartMetadata">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder AddPartMetadata (string name, Func&lt;Type,object&gt; getValueFromPartType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder AddPartMetadata(string name, class System.Func`2&lt;class System.Type, object&gt; getValueFromPartType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.AddPartMetadata(System.String,System.Func{System.Type,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddPartMetadata (name As String, getValueFromPartType As Func(Of Type, Object)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ AddPartMetadata(System::String ^ name, Func&lt;Type ^, System::Object ^&gt; ^ getValueFromPartType);" />
      <MemberSignature Language="F#" Value="member this.AddPartMetadata : string * Func&lt;Type, obj&gt; -&gt; System.Composition.Convention.PartConventionBuilder" Usage="partConventionBuilder.AddPartMetadata (name, getValueFromPartType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
        <AssemblyVersion>1.0.34.0</AssemblyVersion>
        <AssemblyVersion>1.0.35.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="getValueFromPartType" Type="System.Func&lt;System.Type,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c4bc6-102">要添加的元数据的名称。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-102">The name of the metadata to add.</span></span></param>
        <param name="getValueFromPartType"><span data-ttu-id="c4bc6-103">返回部件类型上元数据值的函数。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-103">A function that returns the metadata value on the part type.</span></span></param>
        <summary><span data-ttu-id="c4bc6-104">将具有指定名称和值的元数据添加到部件中。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-104">Adds metadata that has the specified name and value to the part.</span></span> <span data-ttu-id="c4bc6-105">该值由将部件类型映射到元数据值的函数返回。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-105">The value is returned by a function that maps the part type to the metadata value.</span></span></summary>
        <returns><span data-ttu-id="c4bc6-106">一个部件生成器，可用于进一步配置部件。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-106">A part builder that can be used to further configure the part.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPartMetadata">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder AddPartMetadata (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder AddPartMetadata(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.AddPartMetadata(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddPartMetadata (name As String, value As Object) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ AddPartMetadata(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddPartMetadata : string * obj -&gt; System.Composition.Convention.PartConventionBuilder" Usage="partConventionBuilder.AddPartMetadata (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
        <AssemblyVersion>1.0.34.0</AssemblyVersion>
        <AssemblyVersion>1.0.35.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c4bc6-107">元数据名称。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-107">The metadata name.</span></span></param>
        <param name="value"><span data-ttu-id="c4bc6-108">元数据的值。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-108">The metadata value.</span></span></param>
        <summary><span data-ttu-id="c4bc6-109">将具有指定名称和值的元数据添加到部件中。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-109">Adds metadata that has the specified name and value to the part.</span></span></summary>
        <returns><span data-ttu-id="c4bc6-110">一个部件生成器，可用于进一步配置部件。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-110">A part builder that can be used to further configure the part.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder Export ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder Export() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.Export" />
      <MemberSignature Language="VB.NET" Value="Public Function Export () As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ Export();" />
      <MemberSignature Language="F#" Value="member this.Export : unit -&gt; System.Composition.Convention.PartConventionBuilder" Usage="partConventionBuilder.Export " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
        <AssemblyVersion>1.0.34.0</AssemblyVersion>
        <AssemblyVersion>1.0.35.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4bc6-111">将其具体类型作为协定类型导出部件。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-111">Exports the part with its concrete type as the contract type.</span></span></summary>
        <returns><span data-ttu-id="c4bc6-112">一个部件生成器，可用于进一步配置部件。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-112">A part builder that can be used to further configure the part.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder Export (Action&lt;System.Composition.Convention.ExportConventionBuilder&gt; exportConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder Export(class System.Action`1&lt;class System.Composition.Convention.ExportConventionBuilder&gt; exportConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.Export(System.Action{System.Composition.Convention.ExportConventionBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function Export (exportConfiguration As Action(Of ExportConventionBuilder)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ Export(Action&lt;System::Composition::Convention::ExportConventionBuilder ^&gt; ^ exportConfiguration);" />
      <MemberSignature Language="F#" Value="member this.Export : Action&lt;System.Composition.Convention.ExportConventionBuilder&gt; -&gt; System.Composition.Convention.PartConventionBuilder" Usage="partConventionBuilder.Export exportConfiguration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
        <AssemblyVersion>1.0.34.0</AssemblyVersion>
        <AssemblyVersion>1.0.35.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exportConfiguration" Type="System.Action&lt;System.Composition.Convention.ExportConventionBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="exportConfiguration"><span data-ttu-id="c4bc6-113">配置部件的操作。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-113">An action that configures the part.</span></span></param>
        <summary><span data-ttu-id="c4bc6-114">导出具有指定配置的部件。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-114">Exports the part that has the specified configuration.</span></span></summary>
        <returns><span data-ttu-id="c4bc6-115">一个部件生成器，可用于进一步配置部件。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-115">A part builder that can be used to further configure the part.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Export&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder Export&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder Export&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.Export``1" />
      <MemberSignature Language="VB.NET" Value="Public Function Export(Of T) () As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Composition::Convention::PartConventionBuilder ^ Export();" />
      <MemberSignature Language="F#" Value="member this.Export : unit -&gt; System.Composition.Convention.PartConventionBuilder" Usage="partConventionBuilder.Export " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
        <AssemblyVersion>1.0.34.0</AssemblyVersion>
        <AssemblyVersion>1.0.35.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="c4bc6-116">协定类型。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-116">The contract type.</span></span></typeparam>
        <summary><span data-ttu-id="c4bc6-117">导出具有指定协定类型的部件。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-117">Exports the part that has the specified contract type.</span></span></summary>
        <returns><span data-ttu-id="c4bc6-118">一个部件生成器，可用于进一步配置部件。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-118">A part builder that can be used to further configure the part.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Export&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder Export&lt;T&gt; (Action&lt;System.Composition.Convention.ExportConventionBuilder&gt; exportConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder Export&lt;T&gt;(class System.Action`1&lt;class System.Composition.Convention.ExportConventionBuilder&gt; exportConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.Export``1(System.Action{System.Composition.Convention.ExportConventionBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function Export(Of T) (exportConfiguration As Action(Of ExportConventionBuilder)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Composition::Convention::PartConventionBuilder ^ Export(Action&lt;System::Composition::Convention::ExportConventionBuilder ^&gt; ^ exportConfiguration);" />
      <MemberSignature Language="F#" Value="member this.Export : Action&lt;System.Composition.Convention.ExportConventionBuilder&gt; -&gt; System.Composition.Convention.PartConventionBuilder" Usage="partConventionBuilder.Export exportConfiguration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
        <AssemblyVersion>1.0.34.0</AssemblyVersion>
        <AssemblyVersion>1.0.35.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="exportConfiguration" Type="System.Action&lt;System.Composition.Convention.ExportConventionBuilder&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="c4bc6-119">协定类型。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-119">The contract type.</span></span></typeparam>
        <param name="exportConfiguration"><span data-ttu-id="c4bc6-120">配置部件的操作。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-120">An action that configures the part.</span></span></param>
        <summary><span data-ttu-id="c4bc6-121">用指定的配置，导出一个具有指定协定类型的部件。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-121">Exports the part that has the specified contract type by using the specified configuration.</span></span></summary>
        <returns><span data-ttu-id="c4bc6-122">一个部件生成器，可用于进一步配置部件。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-122">A part builder that can be used to further configure the part.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportInterfaces">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder ExportInterfaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder ExportInterfaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.ExportInterfaces" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportInterfaces () As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ ExportInterfaces();" />
      <MemberSignature Language="F#" Value="member this.ExportInterfaces : unit -&gt; System.Composition.Convention.PartConventionBuilder" Usage="partConventionBuilder.ExportInterfaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
        <AssemblyVersion>1.0.34.0</AssemblyVersion>
        <AssemblyVersion>1.0.35.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4bc6-123">选择部件类型上将要导出的所有接口。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-123">Selects all interfaces on the part type to be exported.</span></span></summary>
        <returns><span data-ttu-id="c4bc6-124">一个部件生成器，可用于进一步配置部件。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-124">A part builder that can be used to further configure the part.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportInterfaces">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder ExportInterfaces (Predicate&lt;Type&gt; interfaceFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder ExportInterfaces(class System.Predicate`1&lt;class System.Type&gt; interfaceFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.ExportInterfaces(System.Predicate{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportInterfaces (interfaceFilter As Predicate(Of Type)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ ExportInterfaces(Predicate&lt;Type ^&gt; ^ interfaceFilter);" />
      <MemberSignature Language="F#" Value="member this.ExportInterfaces : Predicate&lt;Type&gt; -&gt; System.Composition.Convention.PartConventionBuilder" Usage="partConventionBuilder.ExportInterfaces interfaceFilter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
        <AssemblyVersion>1.0.34.0</AssemblyVersion>
        <AssemblyVersion>1.0.35.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interfaceFilter" Type="System.Predicate&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="interfaceFilter"><span data-ttu-id="c4bc6-125">一个谓词，指定要选择的接口。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-125">A predicate that specifies the interfaces to be selected.</span></span></param>
        <summary><span data-ttu-id="c4bc6-126">选择部件类型上要根据指定的筛选器导出的接口。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-126">Selects interfaces on the part type to be exported according to the specified filter.</span></span></summary>
        <returns><span data-ttu-id="c4bc6-127">一个部件生成器，可用于进一步配置部件。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-127">A part builder that can be used to further configure the part.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportInterfaces">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder ExportInterfaces (Predicate&lt;Type&gt; interfaceFilter, Action&lt;Type,System.Composition.Convention.ExportConventionBuilder&gt; exportConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder ExportInterfaces(class System.Predicate`1&lt;class System.Type&gt; interfaceFilter, class System.Action`2&lt;class System.Type, class System.Composition.Convention.ExportConventionBuilder&gt; exportConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.ExportInterfaces(System.Predicate{System.Type},System.Action{System.Type,System.Composition.Convention.ExportConventionBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportInterfaces (interfaceFilter As Predicate(Of Type), exportConfiguration As Action(Of Type, ExportConventionBuilder)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ ExportInterfaces(Predicate&lt;Type ^&gt; ^ interfaceFilter, Action&lt;Type ^, System::Composition::Convention::ExportConventionBuilder ^&gt; ^ exportConfiguration);" />
      <MemberSignature Language="F#" Value="member this.ExportInterfaces : Predicate&lt;Type&gt; * Action&lt;Type, System.Composition.Convention.ExportConventionBuilder&gt; -&gt; System.Composition.Convention.PartConventionBuilder" Usage="partConventionBuilder.ExportInterfaces (interfaceFilter, exportConfiguration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
        <AssemblyVersion>1.0.34.0</AssemblyVersion>
        <AssemblyVersion>1.0.35.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interfaceFilter" Type="System.Predicate&lt;System.Type&gt;" />
        <Parameter Name="exportConfiguration" Type="System.Action&lt;System.Type,System.Composition.Convention.ExportConventionBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="interfaceFilter"><span data-ttu-id="c4bc6-128">一个谓词，指定要选择的接口。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-128">A predicate that specifies the interfaces to be selected.</span></span></param>
        <param name="exportConfiguration"><span data-ttu-id="c4bc6-129">配置导出的操作。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-129">An action that configures the exports.</span></span></param>
        <summary><span data-ttu-id="c4bc6-130">使用指定的导出配置，选择部件类型上要根据指定的筛选器导出的接口。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-130">Selects interfaces on the part type to be exported according to the specified filter, using the specified export configuration.</span></span></summary>
        <returns><span data-ttu-id="c4bc6-131">一个部件生成器，可用于进一步配置部件。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-131">A part builder that can be used to further configure the part.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportProperties">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder ExportProperties (Predicate&lt;System.Reflection.PropertyInfo&gt; propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder ExportProperties(class System.Predicate`1&lt;class System.Reflection.PropertyInfo&gt; propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportProperties (propertyFilter As Predicate(Of PropertyInfo)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ ExportProperties(Predicate&lt;System::Reflection::PropertyInfo ^&gt; ^ propertyFilter);" />
      <MemberSignature Language="F#" Value="member this.ExportProperties : Predicate&lt;System.Reflection.PropertyInfo&gt; -&gt; System.Composition.Convention.PartConventionBuilder" Usage="partConventionBuilder.ExportProperties propertyFilter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
        <AssemblyVersion>1.0.34.0</AssemblyVersion>
        <AssemblyVersion>1.0.35.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Predicate&lt;System.Reflection.PropertyInfo&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyFilter"><span data-ttu-id="c4bc6-132">一个谓词，指定要导出的属性。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-132">A predicate that specifies the properites to export.</span></span></param>
        <summary><span data-ttu-id="c4bc6-133">选择部件上要根据指定的谓词导出的属性。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-133">Selects the properties on the part to export according to the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="c4bc6-134">一个部件生成器，可用于进一步配置部件。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-134">A part builder that can be used to further configure the part.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportProperties">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder ExportProperties (Predicate&lt;System.Reflection.PropertyInfo&gt; propertyFilter, Action&lt;System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder&gt; exportConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder ExportProperties(class System.Predicate`1&lt;class System.Reflection.PropertyInfo&gt; propertyFilter, class System.Action`2&lt;class System.Reflection.PropertyInfo, class System.Composition.Convention.ExportConventionBuilder&gt; exportConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportProperties (propertyFilter As Predicate(Of PropertyInfo), exportConfiguration As Action(Of PropertyInfo, ExportConventionBuilder)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ ExportProperties(Predicate&lt;System::Reflection::PropertyInfo ^&gt; ^ propertyFilter, Action&lt;System::Reflection::PropertyInfo ^, System::Composition::Convention::ExportConventionBuilder ^&gt; ^ exportConfiguration);" />
      <MemberSignature Language="F#" Value="member this.ExportProperties : Predicate&lt;System.Reflection.PropertyInfo&gt; * Action&lt;System.Reflection.PropertyInfo, System.Composition.Convention.ExportConventionBuilder&gt; -&gt; System.Composition.Convention.PartConventionBuilder" Usage="partConventionBuilder.ExportProperties (propertyFilter, exportConfiguration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
        <AssemblyVersion>1.0.34.0</AssemblyVersion>
        <AssemblyVersion>1.0.35.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Predicate&lt;System.Reflection.PropertyInfo&gt;" />
        <Parameter Name="exportConfiguration" Type="System.Action&lt;System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyFilter"><span data-ttu-id="c4bc6-135">一个谓词，指定要导出的属性。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-135">A predicate that specifies the properites to export.</span></span></param>
        <param name="exportConfiguration"><span data-ttu-id="c4bc6-136">配置导出的操作。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-136">An action that configures the exports.</span></span></param>
        <summary><span data-ttu-id="c4bc6-137">使用指定的导出配置，选择部件上要根据指定的谓词导出的属性。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-137">Selects the properties on the part to export according to the specified predicate, using the specified export configuration.</span></span></summary>
        <returns><span data-ttu-id="c4bc6-138">一个部件生成器，可用于进一步配置部件。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-138">A part builder that can be used to further configure the part.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportProperties&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder ExportProperties&lt;T&gt; (Predicate&lt;System.Reflection.PropertyInfo&gt; propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder ExportProperties&lt;T&gt;(class System.Predicate`1&lt;class System.Reflection.PropertyInfo&gt; propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportProperties(Of T) (propertyFilter As Predicate(Of PropertyInfo)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Composition::Convention::PartConventionBuilder ^ ExportProperties(Predicate&lt;System::Reflection::PropertyInfo ^&gt; ^ propertyFilter);" />
      <MemberSignature Language="F#" Value="member this.ExportProperties : Predicate&lt;System.Reflection.PropertyInfo&gt; -&gt; System.Composition.Convention.PartConventionBuilder" Usage="partConventionBuilder.ExportProperties propertyFilter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
        <AssemblyVersion>1.0.34.0</AssemblyVersion>
        <AssemblyVersion>1.0.35.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Predicate&lt;System.Reflection.PropertyInfo&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="c4bc6-139">协定类型。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-139">The contract type.</span></span></typeparam>
        <param name="propertyFilter"><span data-ttu-id="c4bc6-140">一个谓词，指定要导出的属性。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-140">A predicate that specifies the properites to export.</span></span></param>
        <summary><span data-ttu-id="c4bc6-141">使用指定的协定类型，选择部件上要根据指定的谓词导出的属性。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-141">Selects the properties on the part to export according to the specified predicate, using the specified contract type.</span></span></summary>
        <returns><span data-ttu-id="c4bc6-142">一个部件生成器，可用于进一步配置部件。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-142">A part builder that can be used to further configure the part.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportProperties&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder ExportProperties&lt;T&gt; (Predicate&lt;System.Reflection.PropertyInfo&gt; propertyFilter, Action&lt;System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder&gt; exportConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder ExportProperties&lt;T&gt;(class System.Predicate`1&lt;class System.Reflection.PropertyInfo&gt; propertyFilter, class System.Action`2&lt;class System.Reflection.PropertyInfo, class System.Composition.Convention.ExportConventionBuilder&gt; exportConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportProperties(Of T) (propertyFilter As Predicate(Of PropertyInfo), exportConfiguration As Action(Of PropertyInfo, ExportConventionBuilder)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Composition::Convention::PartConventionBuilder ^ ExportProperties(Predicate&lt;System::Reflection::PropertyInfo ^&gt; ^ propertyFilter, Action&lt;System::Reflection::PropertyInfo ^, System::Composition::Convention::ExportConventionBuilder ^&gt; ^ exportConfiguration);" />
      <MemberSignature Language="F#" Value="member this.ExportProperties : Predicate&lt;System.Reflection.PropertyInfo&gt; * Action&lt;System.Reflection.PropertyInfo, System.Composition.Convention.ExportConventionBuilder&gt; -&gt; System.Composition.Convention.PartConventionBuilder" Usage="partConventionBuilder.ExportProperties (propertyFilter, exportConfiguration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
        <AssemblyVersion>1.0.34.0</AssemblyVersion>
        <AssemblyVersion>1.0.35.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Predicate&lt;System.Reflection.PropertyInfo&gt;" />
        <Parameter Name="exportConfiguration" Type="System.Action&lt;System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="c4bc6-143">协定类型。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-143">The contract type.</span></span></typeparam>
        <param name="propertyFilter"><span data-ttu-id="c4bc6-144">一个谓词，指定要导出的属性。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-144">A predicate that specifies the properites to export.</span></span></param>
        <param name="exportConfiguration"><span data-ttu-id="c4bc6-145">配置导出的操作。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-145">An action that configures the exports.</span></span></param>
        <summary><span data-ttu-id="c4bc6-146">使用指定的协定类型和导出配置，选择部件上要根据指定的谓词导出的属性。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-146">Selects the properties on the part to export according to the specified predicate, using the specified contract type and export configuration.</span></span></summary>
        <returns><span data-ttu-id="c4bc6-147">一个部件生成器，可用于进一步配置部件。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-147">A part builder that can be used to further configure the part.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportProperties">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder ImportProperties (Predicate&lt;System.Reflection.PropertyInfo&gt; propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder ImportProperties(class System.Predicate`1&lt;class System.Reflection.PropertyInfo&gt; propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportProperties (propertyFilter As Predicate(Of PropertyInfo)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ ImportProperties(Predicate&lt;System::Reflection::PropertyInfo ^&gt; ^ propertyFilter);" />
      <MemberSignature Language="F#" Value="member this.ImportProperties : Predicate&lt;System.Reflection.PropertyInfo&gt; -&gt; System.Composition.Convention.PartConventionBuilder" Usage="partConventionBuilder.ImportProperties propertyFilter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
        <AssemblyVersion>1.0.34.0</AssemblyVersion>
        <AssemblyVersion>1.0.35.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Predicate&lt;System.Reflection.PropertyInfo&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyFilter"><span data-ttu-id="c4bc6-148">一个谓词，指定要导入的属性。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-148">A predicate that specifies the properites to import.</span></span></param>
        <summary><span data-ttu-id="c4bc6-149">选择部件上要根据指定的谓词导入的属性。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-149">Selects the properties on the part to import according to the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="c4bc6-150">一个部件生成器，可用于进一步配置部件。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-150">A part builder that can be used to further configure the part.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportProperties">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder ImportProperties (Predicate&lt;System.Reflection.PropertyInfo&gt; propertyFilter, Action&lt;System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder&gt; importConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder ImportProperties(class System.Predicate`1&lt;class System.Reflection.PropertyInfo&gt; propertyFilter, class System.Action`2&lt;class System.Reflection.PropertyInfo, class System.Composition.Convention.ImportConventionBuilder&gt; importConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportProperties (propertyFilter As Predicate(Of PropertyInfo), importConfiguration As Action(Of PropertyInfo, ImportConventionBuilder)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ ImportProperties(Predicate&lt;System::Reflection::PropertyInfo ^&gt; ^ propertyFilter, Action&lt;System::Reflection::PropertyInfo ^, System::Composition::Convention::ImportConventionBuilder ^&gt; ^ importConfiguration);" />
      <MemberSignature Language="F#" Value="member this.ImportProperties : Predicate&lt;System.Reflection.PropertyInfo&gt; * Action&lt;System.Reflection.PropertyInfo, System.Composition.Convention.ImportConventionBuilder&gt; -&gt; System.Composition.Convention.PartConventionBuilder" Usage="partConventionBuilder.ImportProperties (propertyFilter, importConfiguration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
        <AssemblyVersion>1.0.34.0</AssemblyVersion>
        <AssemblyVersion>1.0.35.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Predicate&lt;System.Reflection.PropertyInfo&gt;" />
        <Parameter Name="importConfiguration" Type="System.Action&lt;System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyFilter"><span data-ttu-id="c4bc6-151">一个谓词，指定要导入的属性。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-151">A predicate that specifies the properites to import.</span></span></param>
        <param name="importConfiguration"><span data-ttu-id="c4bc6-152">配置导入的操作。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-152">An action that configures the imports.</span></span></param>
        <summary><span data-ttu-id="c4bc6-153">使用指定的导入配置，选择部件上要根据指定的谓词导入的属性。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-153">Selects the properties on the part to import according to the specified predicate, using the specified import configuration.</span></span></summary>
        <returns><span data-ttu-id="c4bc6-154">一个部件生成器，可用于进一步配置部件。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-154">A part builder that can be used to further configure the part.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportProperties&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder ImportProperties&lt;T&gt; (Predicate&lt;System.Reflection.PropertyInfo&gt; propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder ImportProperties&lt;T&gt;(class System.Predicate`1&lt;class System.Reflection.PropertyInfo&gt; propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportProperties(Of T) (propertyFilter As Predicate(Of PropertyInfo)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Composition::Convention::PartConventionBuilder ^ ImportProperties(Predicate&lt;System::Reflection::PropertyInfo ^&gt; ^ propertyFilter);" />
      <MemberSignature Language="F#" Value="member this.ImportProperties : Predicate&lt;System.Reflection.PropertyInfo&gt; -&gt; System.Composition.Convention.PartConventionBuilder" Usage="partConventionBuilder.ImportProperties propertyFilter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
        <AssemblyVersion>1.0.34.0</AssemblyVersion>
        <AssemblyVersion>1.0.35.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Predicate&lt;System.Reflection.PropertyInfo&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="c4bc6-155">协定类型。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-155">The contract type.</span></span></typeparam>
        <param name="propertyFilter"><span data-ttu-id="c4bc6-156">一个谓词，指定要导入的属性。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-156">A predicate that specifies the properties to import.</span></span></param>
        <summary><span data-ttu-id="c4bc6-157">使用指定的协定类型，选择部件上要根据指定的谓词导入的属性。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-157">Selects the properties on the part to import according to the specified predicate, using the specified contract type.</span></span></summary>
        <returns><span data-ttu-id="c4bc6-158">一个部件生成器，可用于进一步配置部件。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-158">A part builder that can be used to further configure the part.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportProperties&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder ImportProperties&lt;T&gt; (Predicate&lt;System.Reflection.PropertyInfo&gt; propertyFilter, Action&lt;System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder&gt; importConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder ImportProperties&lt;T&gt;(class System.Predicate`1&lt;class System.Reflection.PropertyInfo&gt; propertyFilter, class System.Action`2&lt;class System.Reflection.PropertyInfo, class System.Composition.Convention.ImportConventionBuilder&gt; importConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportProperties(Of T) (propertyFilter As Predicate(Of PropertyInfo), importConfiguration As Action(Of PropertyInfo, ImportConventionBuilder)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Composition::Convention::PartConventionBuilder ^ ImportProperties(Predicate&lt;System::Reflection::PropertyInfo ^&gt; ^ propertyFilter, Action&lt;System::Reflection::PropertyInfo ^, System::Composition::Convention::ImportConventionBuilder ^&gt; ^ importConfiguration);" />
      <MemberSignature Language="F#" Value="member this.ImportProperties : Predicate&lt;System.Reflection.PropertyInfo&gt; * Action&lt;System.Reflection.PropertyInfo, System.Composition.Convention.ImportConventionBuilder&gt; -&gt; System.Composition.Convention.PartConventionBuilder" Usage="partConventionBuilder.ImportProperties (propertyFilter, importConfiguration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
        <AssemblyVersion>1.0.34.0</AssemblyVersion>
        <AssemblyVersion>1.0.35.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Predicate&lt;System.Reflection.PropertyInfo&gt;" />
        <Parameter Name="importConfiguration" Type="System.Action&lt;System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="c4bc6-159">协定类型。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-159">The contract type.</span></span></typeparam>
        <param name="propertyFilter"><span data-ttu-id="c4bc6-160">一个谓词，指定要导入的属性。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-160">A predicate that specifies the properties to import.</span></span></param>
        <param name="importConfiguration"><span data-ttu-id="c4bc6-161">配置导入的操作。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-161">An action that configures the imports.</span></span></param>
        <summary><span data-ttu-id="c4bc6-162">使用指定的协定类型和导入配置，选择部件上要根据指定的谓词导入的属性。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-162">Selects the properties on the part to import according to the specified predicate, using the specified contract type and import configuration.</span></span></summary>
        <returns><span data-ttu-id="c4bc6-163">一个部件生成器，可用于进一步配置部件。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-163">A part builder that can be used to further configure the part.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyImportsSatisfied">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder NotifyImportsSatisfied (Predicate&lt;System.Reflection.MethodInfo&gt; methodFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder NotifyImportsSatisfied(class System.Predicate`1&lt;class System.Reflection.MethodInfo&gt; methodFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.NotifyImportsSatisfied(System.Predicate{System.Reflection.MethodInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Function NotifyImportsSatisfied (methodFilter As Predicate(Of MethodInfo)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ NotifyImportsSatisfied(Predicate&lt;System::Reflection::MethodInfo ^&gt; ^ methodFilter);" />
      <MemberSignature Language="F#" Value="member this.NotifyImportsSatisfied : Predicate&lt;System.Reflection.MethodInfo&gt; -&gt; System.Composition.Convention.PartConventionBuilder" Usage="partConventionBuilder.NotifyImportsSatisfied methodFilter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
        <AssemblyVersion>1.0.34.0</AssemblyVersion>
        <AssemblyVersion>1.0.35.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodFilter" Type="System.Predicate&lt;System.Reflection.MethodInfo&gt;" />
      </Parameters>
      <Docs>
        <param name="methodFilter"><span data-ttu-id="c4bc6-164">选择方法的谓词。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-164">A predicate that selects the methods.</span></span></param>
        <summary><span data-ttu-id="c4bc6-165">选择当完成组合时用作通知的方法。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-165">Select methods to be used as a notification when composition is complete.</span></span></summary>
        <returns><span data-ttu-id="c4bc6-166">一个部件生成器，可用于进一步配置部件。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-166">A part builder that can be used to further configure the part.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectConstructor">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder SelectConstructor (Func&lt;System.Collections.Generic.IEnumerable&lt;System.Reflection.ConstructorInfo&gt;,System.Reflection.ConstructorInfo&gt; constructorSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder SelectConstructor(class System.Func`2&lt;class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.ConstructorInfo&gt;, class System.Reflection.ConstructorInfo&gt; constructorSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.SelectConstructor(System.Func{System.Collections.Generic.IEnumerable{System.Reflection.ConstructorInfo},System.Reflection.ConstructorInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectConstructor (constructorSelector As Func(Of IEnumerable(Of ConstructorInfo), ConstructorInfo)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ SelectConstructor(Func&lt;System::Collections::Generic::IEnumerable&lt;System::Reflection::ConstructorInfo ^&gt; ^, System::Reflection::ConstructorInfo ^&gt; ^ constructorSelector);" />
      <MemberSignature Language="F#" Value="member this.SelectConstructor : Func&lt;seq&lt;System.Reflection.ConstructorInfo&gt;, System.Reflection.ConstructorInfo&gt; -&gt; System.Composition.Convention.PartConventionBuilder" Usage="partConventionBuilder.SelectConstructor constructorSelector" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
        <AssemblyVersion>1.0.34.0</AssemblyVersion>
        <AssemblyVersion>1.0.35.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constructorSelector" Type="System.Func&lt;System.Collections.Generic.IEnumerable&lt;System.Reflection.ConstructorInfo&gt;,System.Reflection.ConstructorInfo&gt;" />
      </Parameters>
      <Docs>
        <param name="constructorSelector"><span data-ttu-id="c4bc6-167">返回单个构造函数的函数。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-167">A function that returns a single constructor.</span></span></param>
        <summary><span data-ttu-id="c4bc6-168">使用指定的函数，选择用于初始化部件的构造函数。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-168">Selects the constructor used to initialize the part by using the specified function.</span></span></summary>
        <returns><span data-ttu-id="c4bc6-169">一个部件生成器，可用于进一步配置部件。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-169">A part builder that can be used to further configure the part.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectConstructor">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder SelectConstructor (Func&lt;System.Collections.Generic.IEnumerable&lt;System.Reflection.ConstructorInfo&gt;,System.Reflection.ConstructorInfo&gt; constructorSelector, Action&lt;System.Reflection.ParameterInfo,System.Composition.Convention.ImportConventionBuilder&gt; importConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder SelectConstructor(class System.Func`2&lt;class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.ConstructorInfo&gt;, class System.Reflection.ConstructorInfo&gt; constructorSelector, class System.Action`2&lt;class System.Reflection.ParameterInfo, class System.Composition.Convention.ImportConventionBuilder&gt; importConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.SelectConstructor(System.Func{System.Collections.Generic.IEnumerable{System.Reflection.ConstructorInfo},System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.Composition.Convention.ImportConventionBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectConstructor (constructorSelector As Func(Of IEnumerable(Of ConstructorInfo), ConstructorInfo), importConfiguration As Action(Of ParameterInfo, ImportConventionBuilder)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ SelectConstructor(Func&lt;System::Collections::Generic::IEnumerable&lt;System::Reflection::ConstructorInfo ^&gt; ^, System::Reflection::ConstructorInfo ^&gt; ^ constructorSelector, Action&lt;System::Reflection::ParameterInfo ^, System::Composition::Convention::ImportConventionBuilder ^&gt; ^ importConfiguration);" />
      <MemberSignature Language="F#" Value="member this.SelectConstructor : Func&lt;seq&lt;System.Reflection.ConstructorInfo&gt;, System.Reflection.ConstructorInfo&gt; * Action&lt;System.Reflection.ParameterInfo, System.Composition.Convention.ImportConventionBuilder&gt; -&gt; System.Composition.Convention.PartConventionBuilder" Usage="partConventionBuilder.SelectConstructor (constructorSelector, importConfiguration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
        <AssemblyVersion>1.0.34.0</AssemblyVersion>
        <AssemblyVersion>1.0.35.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constructorSelector" Type="System.Func&lt;System.Collections.Generic.IEnumerable&lt;System.Reflection.ConstructorInfo&gt;,System.Reflection.ConstructorInfo&gt;" />
        <Parameter Name="importConfiguration" Type="System.Action&lt;System.Reflection.ParameterInfo,System.Composition.Convention.ImportConventionBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="constructorSelector"><span data-ttu-id="c4bc6-170">返回单个构造函数的函数。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-170">A function that returns a single constructor.</span></span></param>
        <param name="importConfiguration"><span data-ttu-id="c4bc6-171">配置构造函数的导入的方法。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-171">A method that configures the constructor's imports.</span></span></param>
        <summary><span data-ttu-id="c4bc6-172">使用指定的函数和导入配置，选择用于初始化部件的构造函数。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-172">Selects the constructor used to initialize the part by using the specified function and import configuration.</span></span></summary>
        <returns><span data-ttu-id="c4bc6-173">一个部件生成器，可用于进一步配置部件。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-173">A part builder that can be used to further configure the part.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Shared">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder Shared ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder Shared() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.Shared" />
      <MemberSignature Language="VB.NET" Value="Public Function Shared () As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ Shared();" />
      <MemberSignature Language="F#" Value="member this.Shared : unit -&gt; System.Composition.Convention.PartConventionBuilder" Usage="partConventionBuilder.Shared " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
        <AssemblyVersion>1.0.34.0</AssemblyVersion>
        <AssemblyVersion>1.0.35.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4bc6-174">将部件标记为在整个组合中共享。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-174">Marks the part as being shared throughout the entire composition.</span></span></summary>
        <returns><span data-ttu-id="c4bc6-175">一个部件生成器，可用于进一步配置部件。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-175">A part builder that can be used to further configure the part.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Shared">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder Shared (string sharingBoundary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder Shared(string sharingBoundary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.Shared(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Shared (sharingBoundary As String) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ Shared(System::String ^ sharingBoundary);" />
      <MemberSignature Language="F#" Value="member this.Shared : string -&gt; System.Composition.Convention.PartConventionBuilder" Usage="partConventionBuilder.Shared sharingBoundary" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
        <AssemblyVersion>1.0.34.0</AssemblyVersion>
        <AssemblyVersion>1.0.35.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sharingBoundary" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sharingBoundary"><span data-ttu-id="c4bc6-176">边界。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-176">The boundary.</span></span></param>
        <summary><span data-ttu-id="c4bc6-177">将部件标记为在指定的边界内共享。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-177">Marks the part as being shared within the specified boundary.</span></span></summary>
        <returns><span data-ttu-id="c4bc6-178">一个部件生成器，可用于进一步配置部件。</span><span class="sxs-lookup"><span data-stu-id="c4bc6-178">A part builder that can be used to further configure the part.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
