<Type Name="MatrixAnimationUsingPath" FullName="System.Windows.Media.Animation.MatrixAnimationUsingPath">
  <Metadata><Meta Name="ms.openlocfilehash" Value="106edd5f8741937d021abd62daa7eb8d4c54a682" /><Meta Name="ms.sourcegitcommit" Value="9506e50ec7beb4fa30206b9840dc546b035a6600" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/23/2020" /><Meta Name="ms.locfileid" Value="86993078" /></Metadata><TypeSignature Language="C#" Value="public class MatrixAnimationUsingPath : System.Windows.Media.Animation.MatrixAnimationBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MatrixAnimationUsingPath extends System.Windows.Media.Animation.MatrixAnimationBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" />
  <TypeSignature Language="VB.NET" Value="Public Class MatrixAnimationUsingPath&#xA;Inherits MatrixAnimationBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class MatrixAnimationUsingPath : System::Windows::Media::Animation::MatrixAnimationBase" />
  <TypeSignature Language="F#" Value="type MatrixAnimationUsingPath = class&#xA;    inherit MatrixAnimationBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.MatrixAnimationBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d3eb7-101">通过使用 <see cref="T:System.Windows.Media.PathGeometry" /> 动画处理 <see cref="T:System.Windows.Media.Matrix" /> 属性的值以生成具有动画效果的值。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-101">Animates the value of a <see cref="T:System.Windows.Media.Matrix" /> property by using a <see cref="T:System.Windows.Media.PathGeometry" /> to generate the animated values.</span></span> <span data-ttu-id="d3eb7-102">此动画可用于沿路径移动可视对象。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-102">This animation can be used to move a visual object along a path.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eb7-103"><xref:System.Windows.Media.Animation.MatrixAnimationUsingPath> 使您能够使用单个动画和对对象的角度和位置进行动画处理 <xref:System.Windows.Media.MatrixTransform> 。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-103"><xref:System.Windows.Media.Animation.MatrixAnimationUsingPath> enables you to animate the angle and position of an object with a single animation and <xref:System.Windows.Media.MatrixTransform>.</span></span>  
  
 <span data-ttu-id="d3eb7-104"><xref:System.Windows.Media.Animation.PointAnimationUsingPath>通过在指定的上使用线性内插来动画处理其目标 <xref:System.Windows.Media.Animation.Timeline.Duration%2A> 。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-104">A <xref:System.Windows.Media.Animation.PointAnimationUsingPath> animates its target by using linear interpolation over the specified <xref:System.Windows.Media.Animation.Timeline.Duration%2A>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.PathGeometry" />
    <altmember cref="T:System.Windows.Media.Animation.PointAnimationUsingPath" />
    <altmember cref="T:System.Windows.Media.Animation.DoubleAnimationUsingPath" />
    <altmember cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MatrixAnimationUsingPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.MatrixAnimationUsingPath.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MatrixAnimationUsingPath();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d3eb7-105">初始化 <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-105">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eb7-106">没有默认值 <xref:System.Windows.Media.PathGeometry> ，因此用户必须指定一个。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-106">There is no default <xref:System.Windows.Media.PathGeometry>, so the user must specify one.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.MatrixAnimationUsingPath Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.MatrixAnimationUsingPath Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.MatrixAnimationUsingPath.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As MatrixAnimationUsingPath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::MatrixAnimationUsingPath ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.Animation.MatrixAnimationUsingPath" Usage="matrixAnimationUsingPath.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.MatrixAnimationUsingPath</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d3eb7-107">创建此 <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" /> 的可修改克隆，从而深度复制此对象的值。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-107">Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" />, making deep copies of this object's values.</span></span> <span data-ttu-id="d3eb7-108">在复制依赖项属性时，此方法会复制资源引用和数据绑定（但可能不再解析），但不复制动画或其当前值。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-108">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span></span></summary>
        <returns><span data-ttu-id="d3eb7-109">当前对象的可修改复本。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-109">A modifiable clone of the current object.</span></span> <span data-ttu-id="d3eb7-110">即使源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 <see langword="true" />，所克隆的对象的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性也将为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-110">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eb7-111">此方法用于生成冻结 <xref:System.Windows.Freezable> 对象 (或任何对象) 的可修改副本 <xref:System.Windows.Freezable> 。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-111">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="d3eb7-112">为方便起见，此方法使用强类型实现隐藏了继承的版本。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-112">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="d3eb7-113">有关详细信息，请参阅 <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-113">For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.MatrixAnimationUsingPath.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="matrixAnimationUsingPath.CreateInstanceCore " FrameworkAlternate="net-5.0" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="matrixAnimationUsingPath.CreateInstanceCore " FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d3eb7-114">创建 <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" /> 的新实例。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-114">Creates a new instance of the <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" />.</span></span></summary>
        <returns><span data-ttu-id="d3eb7-115">新实例。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-115">The new instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.CreateInstanceCore" />
      </Docs>
    </Member>
    <Member MemberName="DoesRotateWithTangent">
      <MemberSignature Language="C#" Value="public bool DoesRotateWithTangent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoesRotateWithTangent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent" />
      <MemberSignature Language="VB.NET" Value="Public Property DoesRotateWithTangent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DoesRotateWithTangent { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DoesRotateWithTangent : bool with get, set" Usage="System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3eb7-116">获取或设置一个值，该值指示对象是否沿该路径的切线旋转。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-116">Gets or sets a value indicating whether the object rotates along the tangent of the path.</span></span></summary>
        <value><span data-ttu-id="d3eb7-117">如果该对象将沿该路径的切线旋转，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-117"><see langword="true" /> if the object will rotate along the tangent of the path; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d3eb7-118">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-118">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eb7-119">如果希望动画对象沿着动画路径显示为 "滑动"，请使用 "属性"。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-119">Use property when you want the animated object to appear to "slide" along the animation path.</span></span>  
  
<a name="dependencyPropertyInfo_DoesRotateWithTangent"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="d3eb7-120">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="d3eb7-120">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="d3eb7-121">标识符字段</span><span class="sxs-lookup"><span data-stu-id="d3eb7-121">Identifier field</span></span>|<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangentProperty>|  
|<span data-ttu-id="d3eb7-122">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="d3eb7-122">Metadata properties set to `true`</span></span>|<span data-ttu-id="d3eb7-123">无</span><span class="sxs-lookup"><span data-stu-id="d3eb7-123">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoesRotateWithTangentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DoesRotateWithTangentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DoesRotateWithTangentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DoesRotateWithTangentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DoesRotateWithTangentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DoesRotateWithTangentProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3eb7-124">标识 <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-124">Identifies the <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.Matrix GetCurrentValueCore (System.Windows.Media.Matrix defaultOriginValue, System.Windows.Media.Matrix defaultDestinationValue, System.Windows.Media.Animation.AnimationClock animationClock);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Media.Matrix GetCurrentValueCore(valuetype System.Windows.Media.Matrix defaultOriginValue, valuetype System.Windows.Media.Matrix defaultDestinationValue, class System.Windows.Media.Animation.AnimationClock animationClock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.MatrixAnimationUsingPath.GetCurrentValueCore(System.Windows.Media.Matrix,System.Windows.Media.Matrix,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetCurrentValueCore (defaultOriginValue As Matrix, defaultDestinationValue As Matrix, animationClock As AnimationClock) As Matrix" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::Matrix GetCurrentValueCore(System::Windows::Media::Matrix defaultOriginValue, System::Windows::Media::Matrix defaultDestinationValue, System::Windows::Media::Animation::AnimationClock ^ animationClock);" />
      <MemberSignature Language="F#" Value="override this.GetCurrentValueCore : System.Windows.Media.Matrix * System.Windows.Media.Matrix * System.Windows.Media.Animation.AnimationClock -&gt; System.Windows.Media.Matrix" Usage="matrixAnimationUsingPath.GetCurrentValueCore (defaultOriginValue, defaultDestinationValue, animationClock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Matrix</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultOriginValue" Type="System.Windows.Media.Matrix" />
        <Parameter Name="defaultDestinationValue" Type="System.Windows.Media.Matrix" />
        <Parameter Name="animationClock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="defaultOriginValue"><span data-ttu-id="d3eb7-125">建议使用的原始值。如果动画没有自己显式设置的起始值，则使用该值。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-125">The suggested origin value, used if the animation does not have its own explicitly set start value.</span></span></param>
        <param name="defaultDestinationValue"><span data-ttu-id="d3eb7-126">建议使用的目标值。如果动画没有自己显式设置的结束值，则使用该值。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-126">The suggested destination value, used if the animation does not have its own explicitly set end value.</span></span></param>
        <param name="animationClock"><span data-ttu-id="d3eb7-127">一个 <see cref="T:System.Windows.Media.Animation.AnimationClock" />，用来生成动画所使用的 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 或 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" />。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-127">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the animation.</span></span></param>
        <summary><span data-ttu-id="d3eb7-128">计算一个值，该值表示正在进行动画处理的属性的当前值，并由 <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" /> 确定。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-128">Calculates a value that represents the current value of the property being animated, as determined by the <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" />.</span></span></summary>
        <returns><span data-ttu-id="d3eb7-129">计算得出的属性值，该值由当前动画确定。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-129">The calculated value of the property, as determined by the current animation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eb7-130">如果 `defaultOriginValue` 是组合链中的第一个，则此值将为快照值 (如果有可用) 或基属性值，则该值将是链中前一个动画返回的值，该值 <xref:System.Windows.Media.Animation.AnimationClock> 不是 <xref:System.Windows.Media.Animation.Clock.Stopped%2A> 。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-130">If the `defaultOriginValue` is the first in the composition chain, this value will be the snapshot value (if one is available) or the base property value; otherwise this value will be the value returned by the previous animation in the chain with an <xref:System.Windows.Media.Animation.AnimationClock> that is not <xref:System.Windows.Media.Animation.Clock.Stopped%2A>.</span></span>  
  
 <span data-ttu-id="d3eb7-131">`defaultDestinationValue`如果动画位于属性上动画的第一个组合层中，则为基值; 否则，该值为属性的上一组合动画的输出值。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-131">The `defaultDestinationValue` is the base value if the animation is in the first composition layer of animations on a property; otherwise the value is the output value from the previous composition layer of animations for the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.MatrixAnimationBase.GetCurrentValueCore(System.Windows.Media.Matrix,System.Windows.Media.Matrix,System.Windows.Media.Animation.AnimationClock)" />
      </Docs>
    </Member>
    <Member MemberName="IsAdditive">
      <MemberSignature Language="C#" Value="public bool IsAdditive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAdditive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAdditive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAdditive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsAdditive : bool with get, set" Usage="System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3eb7-132">获取或设置一个值，该值指示是否应将目标属性的当前值添加到此动画的起始值。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-132">Gets or sets a value that indicates whether the target property's current value should be added to this animation's starting value.</span></span></summary>
        <value><span data-ttu-id="d3eb7-133">如果应将目标属性的当前值添加到此动画的起始值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-133"><see langword="true" /> if the target property's current value should be added to this animation's starting value; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d3eb7-134">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-134">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsAdditive"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="d3eb7-135">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="d3eb7-135">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="d3eb7-136">标识符字段</span><span class="sxs-lookup"><span data-stu-id="d3eb7-136">Identifier field</span></span>|<xref:System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty>|  
|<span data-ttu-id="d3eb7-137">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="d3eb7-137">Metadata properties set to `true`</span></span>|<span data-ttu-id="d3eb7-138">无</span><span class="sxs-lookup"><span data-stu-id="d3eb7-138">None</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="d3eb7-139">此依赖属性是不常见的，因为它的标识符字段来自于 <xref:System.Windows.Media.Animation.AnimationTimeline> 并由各种派生类共享。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-139">This dependency property is unusual because the identifier field for it comes from <xref:System.Windows.Media.Animation.AnimationTimeline> and is shared by various derived classes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3eb7-140">下面的示例使用两个相似 <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath> 的动画对同一矩形进行动画处理。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-140">The following example uses two similar <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath> animations to animate the same rectangle.</span></span> <span data-ttu-id="d3eb7-141">第一个动画的 <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A> 属性设置为 `false` ，因此它始终从 (0，0) ，动画的起始值开始对矩形进行动画处理。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-141">The first animation's <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A> property is set to `false`, so it always animates the rectangle from (0,0), the animation's starting value.</span></span> <span data-ttu-id="d3eb7-142">第二个动画具有相同的目标值 (其 <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry%2A> 设置完全相同) ，但其 <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A> 属性设置为 `true` ; 因此，它将在应用动画时的任意位置对矩形进行动画处理。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-142">The second animation has the same target values (their <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry%2A> settings are identical), but its <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A> property is set to `true`; as a result, it animates the rectangle from whatever position it is at when the animation is applied.</span></span>  
  
 [!code-xaml[PathAnimationGallery_snippet#MatrixAnimationUsingPathIsAdditiveExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/PathAnimationGallery_snippet/CS/matrixanimationusingpathisadditiveexample.xaml#matrixanimationusingpathisadditiveexamplewholepage)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAngleCumulative">
      <MemberSignature Language="C#" Value="public bool IsAngleCumulative { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAngleCumulative" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAngleCumulative As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAngleCumulative { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsAngleCumulative : bool with get, set" Usage="System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3eb7-143">获取或设置一个值，该值指定动画矩阵的旋转角度是否应随着重复累计。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-143">Gets or sets a value that specifies whether the rotation angle of the animated matrix should accumulate over repetitions.</span></span></summary>
        <value><span data-ttu-id="d3eb7-144">如果动画的旋转角度应随着重复累计，则为<see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-144"><see langword="true" /> if the animation's rotation angle should accumulate over repetitions; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d3eb7-145">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-145">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eb7-146">如果将此属性设置为 `true` ，则动画矩阵的旋转角度将随着动画的重复而累积。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-146">If this property is set to `true`, the rotation angle of the animated matrix will accumulate as the animation repeats.</span></span>  <span data-ttu-id="d3eb7-147">如果路径为小弧线，则累计角度将导致对象每次重复旋转，而不是重启旋转。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-147">If your path is a small arc, a cumulative angle will cause your object to continuously rotate with each repeat instead of restarting the rotation.</span></span>  <span data-ttu-id="d3eb7-148">当与的结合使用时 <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative%2A> `true` ，您的对象在 (弹跳时可能会显示为 tumble，具体取决于您指定的路径) 。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-148">When combined with an <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative%2A> of `true`, your object might appear to tumble while it bounces (depending on the path you specify).</span></span> <span data-ttu-id="d3eb7-149">有关相关信息，请参阅<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative%2A>。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-149">For related information, see <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative%2A>.</span></span>  
  
 <span data-ttu-id="d3eb7-150">如果为，则设置此属性不起作用 <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent%2A> `false` 。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-150">Setting this property has no effect if <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent%2A> is `false`.</span></span>  
  
 <span data-ttu-id="d3eb7-151">此属性用于确定动画在动画重复时是否累计，因为它的 <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> 设置不会导致偏移量在动画重新启动时累计。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-151">This property determines whether the animation matrix's angle accumulates when the animation repeats because of its <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> setting; it does not cause the offset to accumulate when the animation is restarted.</span></span> <span data-ttu-id="d3eb7-152">有关如何使动画生成以前动画的值的信息，请参阅 <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A> 。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-152">For information on how to make an animation build off a previous animation's values, see <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A>.</span></span>  
  
<a name="dependencyPropertyInfo_IsAngleCumulative"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="d3eb7-153">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="d3eb7-153">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="d3eb7-154">标识符字段</span><span class="sxs-lookup"><span data-stu-id="d3eb7-154">Identifier field</span></span>|<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulativeProperty>|  
|<span data-ttu-id="d3eb7-155">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="d3eb7-155">Metadata properties set to `true`</span></span>|<span data-ttu-id="d3eb7-156">无</span><span class="sxs-lookup"><span data-stu-id="d3eb7-156">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="d3eb7-157">下面的示例使用两个相似 <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath> 的动画对同一矩形进行动画处理。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-157">The following example uses two similar <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath> animations to animate the same rectangle.</span></span> <span data-ttu-id="d3eb7-158">这两个动画具有相同的 <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry%2A> 设置，这会使矩形在屏幕上向右移动时旋转，同时两个动画都设置为重复四次。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-158">Both animations have the same <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry%2A> setting, which causes the rectangle to rotate as it moves along the screen to the right, and both animations are set to repeat four times.</span></span> <span data-ttu-id="d3eb7-159">第一个动画的 <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative%2A> 属性设置为 `false` ，因此当动画重复时，矩形将跳回其原始角。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-159">The first animation's <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative%2A> property is set to `false`, so the rectangle jumps back to its original angle when the animation repeats.</span></span> <span data-ttu-id="d3eb7-160">第二个动画的 <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative%2A> 属性设置为 `true` ; 因此，当动画重复时，矩形角度会显得增加，而不是跳回其原始值。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-160">The second animation's <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative%2A> property is set to `true`; as a result, the rectangle angle appears to increase when the animation repeats, rather than jumping back to its original value.</span></span>  
  
 [!code-xaml[PathAnimationGallery_snippet#MatrixAnimationUsingPathIsAngleCumulativeExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/PathAnimationGallery_snippet/CS/matrixanimationusingpathisanglecumulativeexample.xaml#matrixanimationusingpathisanglecumulativeexamplewholepage)]   
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent" />
        <altmember cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative" />
      </Docs>
    </Member>
    <Member MemberName="IsAngleCumulativeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsAngleCumulativeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsAngleCumulativeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulativeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsAngleCumulativeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsAngleCumulativeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsAngleCumulativeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulativeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3eb7-161">标识 <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-161">Identifies the <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOffsetCumulative">
      <MemberSignature Language="C#" Value="public bool IsOffsetCumulative { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOffsetCumulative" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative" />
      <MemberSignature Language="VB.NET" Value="Public Property IsOffsetCumulative As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOffsetCumulative { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsOffsetCumulative : bool with get, set" Usage="System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3eb7-162">获取或设置一个值，该值指示动画矩阵产生的偏移量是否会因重复而累积。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-162">Gets or sets a value indicating whether the offset produced by the animated matrix will accumulate over repetitions.</span></span></summary>
        <value><span data-ttu-id="d3eb7-163">如果该对象将因动画的重复而累积，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-163"><see langword="true" /> if the object will accumulate over repeats of the animation; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d3eb7-164">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-164">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eb7-165">如果将此属性设置为 `true` ，则动画矩阵的偏移量将随着动画的重复而累积。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-165">If this property is set to `true`, the offset of the animated matrix will accumulate as the animation repeats.</span></span> <span data-ttu-id="d3eb7-166">例如，如果路径为小弧线，动画设置为重复，则累计偏移量会使对象在屏幕上出现弹跳。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-166">For example, if the path is a small arc and the animation is set to repeat, a cumulative offset will cause the object to appear to bounce across the screen.</span></span>  
  
 <span data-ttu-id="d3eb7-167">此属性决定动画在动画重复时是否累计，因为它的 <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> 设置是; 它不会导致偏移重启动画时累计偏移量。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-167">This property determines whether the animation matrix's offset accumulates when the animation repeats because of its <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> setting; it does not cause the offset to accumulate when the animation is restarted.</span></span> <span data-ttu-id="d3eb7-168">有关如何使动画生成以前动画的值的信息，请参阅 <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A> 。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-168">For information on how to make an animation build off a previous animation's values, see <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A>.</span></span>  
  
<a name="dependencyPropertyInfo_IsOffsetCumulative"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="d3eb7-169">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="d3eb7-169">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="d3eb7-170">标识符字段</span><span class="sxs-lookup"><span data-stu-id="d3eb7-170">Identifier field</span></span>|<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulativeProperty>|  
|<span data-ttu-id="d3eb7-171">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="d3eb7-171">Metadata properties set to `true`</span></span>|<span data-ttu-id="d3eb7-172">无</span><span class="sxs-lookup"><span data-stu-id="d3eb7-172">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative" />
        <altmember cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive" />
      </Docs>
    </Member>
    <Member MemberName="IsOffsetCumulativeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsOffsetCumulativeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsOffsetCumulativeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulativeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsOffsetCumulativeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsOffsetCumulativeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsOffsetCumulativeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulativeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3eb7-173">标识 <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-173">Identifies the <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChanged">
      <MemberSignature Language="C#" Value="protected override void OnChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.MatrixAnimationUsingPath.OnChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnChanged();" />
      <MemberSignature Language="F#" Value="abstract member OnChanged : unit -&gt; unit&#xA;override this.OnChanged : unit -&gt; unit" Usage="matrixAnimationUsingPath.OnChanged " FrameworkAlternate="net-5.0" />
      <MemberSignature Language="F#" Value="override this.OnChanged : unit -&gt; unit" Usage="matrixAnimationUsingPath.OnChanged " FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d3eb7-174">当修改此 <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" /> 时调用。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-174">Called when this <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" /> is modified.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d3eb7-175">有关重写此方法的信息，请参见 <see cref="M:System.Windows.Freezable.OnChanged" /> 。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-175">For information about overriding this method, see <see cref="M:System.Windows.Freezable.OnChanged" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="PathGeometry">
      <MemberSignature Language="C#" Value="public System.Windows.Media.PathGeometry PathGeometry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.PathGeometry PathGeometry" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry" />
      <MemberSignature Language="VB.NET" Value="Public Property PathGeometry As PathGeometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::PathGeometry ^ PathGeometry { System::Windows::Media::PathGeometry ^ get(); void set(System::Windows::Media::PathGeometry ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PathGeometry : System.Windows.Media.PathGeometry with get, set" Usage="System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.PathGeometry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3eb7-176">获取或设置用于生成此动画输出值的几何图形。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-176">Gets or sets the geometry used to generate this animation's output values.</span></span></summary>
        <value><span data-ttu-id="d3eb7-177">用于生成此动画输出值的几何图形。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-177">The geometry used to generate this animation's output values.</span></span> <span data-ttu-id="d3eb7-178">默认为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-178">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eb7-179"><xref:System.Windows.Media.PathGeometry>可以描述包含曲线和弧线的复杂形状，从而为动画输入指定复杂形状。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-179">A <xref:System.Windows.Media.PathGeometry> can describe complex shapes that contain curves and arcs, enabling you specify complex shapes for your animation input.</span></span> <span data-ttu-id="d3eb7-180">有关详细信息，请参阅 [几何概述](/dotnet/framework/wpf/graphics-multimedia/geometry-overview)。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-180">For more information, see [Geometry Overview](/dotnet/framework/wpf/graphics-multimedia/geometry-overview).</span></span>  
  
<a name="dependencyPropertyInfo_PathGeometry"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="d3eb7-181">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="d3eb7-181">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="d3eb7-182">标识符字段</span><span class="sxs-lookup"><span data-stu-id="d3eb7-182">Identifier field</span></span>|<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometryProperty>|  
|<span data-ttu-id="d3eb7-183">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="d3eb7-183">Metadata properties set to `true`</span></span>|<span data-ttu-id="d3eb7-184">无</span><span class="sxs-lookup"><span data-stu-id="d3eb7-184">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.PathGeometry" />
      </Docs>
    </Member>
    <Member MemberName="PathGeometryProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PathGeometryProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PathGeometryProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometryProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PathGeometryProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PathGeometryProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PathGeometryProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometryProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3eb7-185">标识 <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="d3eb7-185">Identifies the <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
