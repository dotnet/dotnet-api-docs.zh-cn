<Type Name="IAnimatable" FullName="System.Windows.Media.Animation.IAnimatable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ec77f42791023ad030238e1bfbc87222f4591e24" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83921546" /></Metadata><TypeSignature Language="C#" Value="public interface IAnimatable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAnimatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAnimatable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAnimatable" />
  <TypeSignature Language="F#" Value="type IAnimatable = interface" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b0507-101">此类型支持 WPF 基础结构，但不可直接在代码中使用。</span><span class="sxs-lookup"><span data-stu-id="b0507-101">This type supports the WPF infrastructure and is not intended to be used directly from your code.</span></span> <span data-ttu-id="b0507-102">若要使某个类可进行动画处理，它应该从 <see cref="T:System.Windows.UIElement" />、<see cref="T:System.Windows.ContentElement" /> 或 <see cref="T:System.Windows.Media.Animation.Animatable" /> 派生。</span><span class="sxs-lookup"><span data-stu-id="b0507-102">To make a class animatable, it should derive from <see cref="T:System.Windows.UIElement" />, <see cref="T:System.Windows.ContentElement" />, or <see cref="T:System.Windows.Media.Animation.Animatable" />.</span></span></summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:System.Windows.UIElement" />
    <altmember cref="T:System.Windows.ContentElement" />
    <altmember cref="T:System.Windows.Media.Animation.Animatable" />
  </Docs>
  <Members>
    <MemberGroup MemberName="ApplyAnimationClock">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b0507-103">将给定 <see cref="T:System.Windows.Media.Animation.AnimationClock" /> 的效果应用于给定的依赖属性。</span><span class="sxs-lookup"><span data-stu-id="b0507-103">Applies the effect of a given <see cref="T:System.Windows.Media.Animation.AnimationClock" /> to a given dependency property.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyAnimationClock (dp As DependencyProperty, clock As AnimationClock)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock);" />
      <MemberSignature Language="F#" Value="abstract member ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock -&gt; unit" Usage="iAnimatable.ApplyAnimationClock (dp, clock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="b0507-104">要进行动画处理的 <see cref="T:System.Windows.DependencyProperty" />。</span><span class="sxs-lookup"><span data-stu-id="b0507-104">The <see cref="T:System.Windows.DependencyProperty" /> to animate.</span></span></param>
        <param name="clock"><span data-ttu-id="b0507-105">对属性进行动画处理的 <see cref="T:System.Windows.Media.Animation.AnimationClock" />。</span><span class="sxs-lookup"><span data-stu-id="b0507-105">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that animates the property.</span></span></param>
        <summary><span data-ttu-id="b0507-106">将给定 <see cref="T:System.Windows.Media.Animation.AnimationClock" /> 的效果应用于给定的依赖属性。</span><span class="sxs-lookup"><span data-stu-id="b0507-106">Applies the effect of a given <see cref="T:System.Windows.Media.Animation.AnimationClock" /> to a given dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Media.Animation.AnimationClock" />
        <altmember cref="T:System.Windows.Media.Animation.Clock" />
      </Docs>
    </Member>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyAnimationClock (dp As DependencyProperty, clock As AnimationClock, handoffBehavior As HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="abstract member ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="iAnimatable.ApplyAnimationClock (dp, clock, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="b0507-107">要进行动画处理的 <see cref="T:System.Windows.DependencyProperty" />。</span><span class="sxs-lookup"><span data-stu-id="b0507-107">The <see cref="T:System.Windows.DependencyProperty" /> to animate.</span></span></param>
        <param name="clock"><span data-ttu-id="b0507-108">对属性进行动画处理的 <see cref="T:System.Windows.Media.Animation.AnimationClock" />。</span><span class="sxs-lookup"><span data-stu-id="b0507-108">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that animates the property.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="b0507-109">确定新 <see cref="T:System.Windows.Media.Animation.AnimationClock" /> 如何从属性上的任何当前的动画进行转换，或者对这些动画有何影响。</span><span class="sxs-lookup"><span data-stu-id="b0507-109">Determines how the new <see cref="T:System.Windows.Media.Animation.AnimationClock" /> will transition from or affect any current animations on the property.</span></span></param>
        <summary><span data-ttu-id="b0507-110">将给定 <see cref="T:System.Windows.Media.Animation.AnimationClock" /> 的效果应用于给定的依赖属性。</span><span class="sxs-lookup"><span data-stu-id="b0507-110">Applies the effect of a given <see cref="T:System.Windows.Media.Animation.AnimationClock" /> to a given dependency property.</span></span> <span data-ttu-id="b0507-111">新 <see cref="T:System.Windows.Media.Animation.AnimationClock" /> 对任何当前的动画所产生的效果均由 <paramref name="handoffBehavior" /> 参数值确定。</span><span class="sxs-lookup"><span data-stu-id="b0507-111">The effect of the new <see cref="T:System.Windows.Media.Animation.AnimationClock" /> on any current animations is determined by the value of the <paramref name="handoffBehavior" /> parameter.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Media.Animation.AnimationClock" />
        <altmember cref="T:System.Windows.Media.Animation.HandoffBehavior" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAnimation">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b0507-112">启动此实例的动画序列。</span><span class="sxs-lookup"><span data-stu-id="b0507-112">Initiates an animation sequence for this instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0507-113">呈现下一帧后，将触发动画序列。</span><span class="sxs-lookup"><span data-stu-id="b0507-113">The animation sequence is triggered once the next frame is rendered.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginAnimation (dp As DependencyProperty, animation As AnimationTimeline)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation);" />
      <MemberSignature Language="F#" Value="abstract member BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline -&gt; unit" Usage="iAnimatable.BeginAnimation (dp, animation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="b0507-114">要进行动画处理的对象。</span><span class="sxs-lookup"><span data-stu-id="b0507-114">The object to animate.</span></span></param>
        <param name="animation"><span data-ttu-id="b0507-115">具有对属性进行动画处理所需功能的时间线。</span><span class="sxs-lookup"><span data-stu-id="b0507-115">The timeline with the necessary functionality to animate the property.</span></span></param>
        <summary><span data-ttu-id="b0507-116">基于指定的 <see cref="T:System.Windows.Media.Animation.AnimationTimeline" /> 为 <see cref="T:System.Windows.DependencyProperty" /> 对象初始化动画序列。</span><span class="sxs-lookup"><span data-stu-id="b0507-116">Initiates an animation sequence for the <see cref="T:System.Windows.DependencyProperty" /> object, based on the specified <see cref="T:System.Windows.Media.Animation.AnimationTimeline" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0507-117">呈现下一帧后，将触发动画序列。</span><span class="sxs-lookup"><span data-stu-id="b0507-117">The animation sequence is triggered once the next frame is rendered.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginAnimation (dp As DependencyProperty, animation As AnimationTimeline, handoffBehavior As HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="abstract member BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="iAnimatable.BeginAnimation (dp, animation, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="b0507-118">要进行动画处理的对象。</span><span class="sxs-lookup"><span data-stu-id="b0507-118">The object to animate.</span></span></param>
        <param name="animation"><span data-ttu-id="b0507-119">具有调整新动画所需功能的时间线。</span><span class="sxs-lookup"><span data-stu-id="b0507-119">The timeline with the necessary functionality to tailor the new animation.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="b0507-120">一个对象，它指定用来与所有相关动画序列进行交互的方式。</span><span class="sxs-lookup"><span data-stu-id="b0507-120">The object specifying the manner in which to interact with all relevant animation sequences.</span></span></param>
        <summary><span data-ttu-id="b0507-121">根据指定的 <see cref="T:System.Windows.DependencyProperty" /> 和 <see cref="T:System.Windows.Media.Animation.AnimationTimeline" /> 启动 <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> 对象的动画序列。</span><span class="sxs-lookup"><span data-stu-id="b0507-121">Initiates an animation sequence for the <see cref="T:System.Windows.DependencyProperty" />.object, based on both the specified <see cref="T:System.Windows.Media.Animation.AnimationTimeline" /> and <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0507-122">呈现下一帧后，将触发动画序列。</span><span class="sxs-lookup"><span data-stu-id="b0507-122">The animation sequence is triggered once the next frame is rendered.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAnimationBaseValue">
      <MemberSignature Language="C#" Value="public object GetAnimationBaseValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetAnimationBaseValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAnimationBaseValue (dp As DependencyProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetAnimationBaseValue(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="abstract member GetAnimationBaseValue : System.Windows.DependencyProperty -&gt; obj" Usage="iAnimatable.GetAnimationBaseValue dp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="b0507-123">要请求其基值的对象。</span><span class="sxs-lookup"><span data-stu-id="b0507-123">The object for which the base value is being requested.</span></span></param>
        <summary><span data-ttu-id="b0507-124">检索指定 <see cref="T:System.Windows.DependencyProperty" /> 对象的基值。</span><span class="sxs-lookup"><span data-stu-id="b0507-124">Retrieves the base value of the specified <see cref="T:System.Windows.DependencyProperty" /> object.</span></span></summary>
        <returns><span data-ttu-id="b0507-125">一个表示 <paramref name="Dp" /> 的基值的对象。</span><span class="sxs-lookup"><span data-stu-id="b0507-125">The object representing the base value of <paramref name="Dp" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0507-126">如果要检索动画属性的非动画值，请使用此方法而不是 <xref:System.Windows.DependencyObject.GetValue%2A>。</span><span class="sxs-lookup"><span data-stu-id="b0507-126">Use this method instead of <xref:System.Windows.DependencyObject.GetValue%2A> when you want to retrieve the non-animated value of an animated property.</span></span> <span data-ttu-id="b0507-127">此方法利用 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 动画不会删除目标属性的原始值这一事实。</span><span class="sxs-lookup"><span data-stu-id="b0507-127">This method takes advantage of the fact that [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] animations do not remove the target property's original value.</span></span> <span data-ttu-id="b0507-128">有关详细信息，请参阅[依赖属性值优先级](/dotnet/framework/wpf/advanced/dependency-property-value-precedence)。</span><span class="sxs-lookup"><span data-stu-id="b0507-128">For more information, see [Dependency Property Value Precedence](/dotnet/framework/wpf/advanced/dependency-property-value-precedence).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="HasAnimatedProperties">
      <MemberSignature Language="C#" Value="public bool HasAnimatedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAnimatedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAnimatedProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAnimatedProperties { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAnimatedProperties : bool" Usage="System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0507-129">获取一个值，该值指示此实例是否具有任何经过动画处理的属性。</span><span class="sxs-lookup"><span data-stu-id="b0507-129">Gets a value that indicates whether this instance has any animated properties.</span></span></summary>
        <value><span data-ttu-id="b0507-130">如果 <see cref="T:System.Windows.Media.Animation.Clock" /> 与当前对象的至少一个属性相关联，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b0507-130"><see langword="true" /> if a <see cref="T:System.Windows.Media.Animation.Clock" /> is associated with at least one of the current object's properties; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0507-131">请注意，即使关联的动画 <xref:System.Windows.Media.Animation.ClockState.Stopped> 或 <xref:System.Windows.Media.Animation.ClockState.Filling>，此属性也会返回 `true`。</span><span class="sxs-lookup"><span data-stu-id="b0507-131">Note that this property returns `true` even if the associated animation is <xref:System.Windows.Media.Animation.ClockState.Stopped> or <xref:System.Windows.Media.Animation.ClockState.Filling>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Animation.Clock" />
      </Docs>
    </Member>
  </Members>
</Type>
