<Type Name="Storyboard" FullName="System.Windows.Media.Animation.Storyboard">
  <Metadata><Meta Name="ms.openlocfilehash" Value="67d4284e8db2a1c509f4770c27506fa0b513252e" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89764631" /></Metadata><TypeSignature Language="C#" Value="public class Storyboard : System.Windows.Media.Animation.ParallelTimeline" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Storyboard extends System.Windows.Media.Animation.ParallelTimeline" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.Storyboard" />
  <TypeSignature Language="VB.NET" Value="Public Class Storyboard&#xA;Inherits ParallelTimeline" />
  <TypeSignature Language="C++ CLI" Value="public ref class Storyboard : System::Windows::Media::Animation::ParallelTimeline" />
  <TypeSignature Language="F#" Value="type Storyboard = class&#xA;    inherit ParallelTimeline" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Storyboard extends System.Windows.Media.Animation.ParallelTimeline" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.ParallelTimeline</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0a4fb-101">一个容器时间线，该时间线为子动画提供对象和属性确定信息。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-101">A container timeline that provides object and property targeting information for its child animations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="interactively-controlling-storyboards"></a><span data-ttu-id="0a4fb-102">以交互方式控制情节提要</span><span class="sxs-lookup"><span data-stu-id="0a4fb-102">Interactively Controlling Storyboards</span></span>  
 <span data-ttu-id="0a4fb-103">可控制的情节提要可以暂停、恢复、查找、停止和删除。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-103">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="0a4fb-104">若要使 storyboard 能够控制标记，请指定 <xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A> <xref:System.Windows.Media.Animation.BeginStoryboard> 创建它的对象的属性; 有关示例，请参阅 [如何：在演示图板启动之后使用事件触发器控制情节提要](/dotnet/framework/wpf/graphics-multimedia/how-to-use-event-triggers-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-104">To make a storyboard controllable in markup, you specify the <xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A> property of the <xref:System.Windows.Media.Animation.BeginStoryboard> object that creates it; for an example, see [How to: Use Event Triggers to Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-use-event-triggers-to-control-a-storyboard-after-it-starts).</span></span> <span data-ttu-id="0a4fb-105">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-105">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-106">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-106">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
## <a name="data-binding-and-animating-timelines"></a><span data-ttu-id="0a4fb-107">数据绑定和动画处理时间线</span><span class="sxs-lookup"><span data-stu-id="0a4fb-107">Data Binding and Animating Timelines</span></span>  
 <span data-ttu-id="0a4fb-108">大多数时间线属性可以是数据绑定的或动态的;但是，由于计时系统的工作方式，数据绑定或动画时间线的行为与其他数据绑定或动画对象的行为不同。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-108">Most timeline properties can be data bound or animated; however, because of the way the timing system works, data bound or animated timelines do not behave like other data bound or animated objects.</span></span> <span data-ttu-id="0a4fb-109">若要了解其行为，有助于理解激活时间线的方式。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-109">To understand their behavior, it helps to understand what it means to activate a timeline.</span></span>  
  
 <span data-ttu-id="0a4fb-110">激活时间线时，将生成时间线及其子时间线。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-110">When a timeline is activated, copies are made of the timeline and its child timelines.</span></span> <span data-ttu-id="0a4fb-111">这些副本将冻结 (使其成为只读) 并且 <xref:System.Windows.Media.Animation.Clock> 从它们创建对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-111">These copies are frozen (made read-only) and <xref:System.Windows.Media.Animation.Clock> objects are created from them.</span></span> <span data-ttu-id="0a4fb-112">这些时钟将执行对目标属性进行动画处理的实际工作。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-112">These clocks do the actual work of animating the targeted properties.</span></span> <span data-ttu-id="0a4fb-113">如果时间线是数据绑定的或动态的，则在创建其时钟时，将生成其当前值的快照。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-113">If a timeline is data bound or animated, a snapshot of its current values is made when its clock is created.</span></span> <span data-ttu-id="0a4fb-114">即使原始时间线可能会继续更改，时钟也不会更改。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-114">Even though the original timeline might continue to change, its clock does not.</span></span>  
  
 <span data-ttu-id="0a4fb-115">对于反映数据绑定或动画更改的时间线，必须重新创建其时钟。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-115">For a timeline to reflect data binding or animation changes, its clock must be re-created.</span></span> <span data-ttu-id="0a4fb-116">不会自动为您重新创建时钟。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-116">Clocks are not re-created for you automatically.</span></span> <span data-ttu-id="0a4fb-117">以下是应用时间线更改的几种方法：</span><span class="sxs-lookup"><span data-stu-id="0a4fb-117">The following are several ways to apply timeline changes:</span></span>  
  
-   <span data-ttu-id="0a4fb-118">如果时间线是或属于 <xref:System.Windows.Media.Animation.Storyboard> ，则可以通过使用或方法重新应用它的情节提要，使其反映更改 <xref:System.Windows.Media.Animation.BeginStoryboard> <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-118">If the timeline is or belongs to a <xref:System.Windows.Media.Animation.Storyboard>, you can make it reflect changes by reapplying its storyboard using a <xref:System.Windows.Media.Animation.BeginStoryboard> or the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method.</span></span> <span data-ttu-id="0a4fb-119">这还会产生重新启动动画的附带影响。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-119">This has the side effect of also restarting the animation.</span></span> <span data-ttu-id="0a4fb-120">在代码中，可以使用 <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> 方法将演示图板前进到其之前的位置。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-120">In code, you can use the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> method to advance the storyboard back to its previous position.</span></span>  
  
-   <span data-ttu-id="0a4fb-121">如果使用方法将动画直接应用到属性 <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> ，请 <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> 再次调用方法并向其传递已修改的动画。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-121">If you applied an animation directly to a property using the <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> method, call the <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> method again and pass it the animation that has been modified.</span></span>  
  
-   <span data-ttu-id="0a4fb-122">如果正在直接使用时钟级别，请创建并应用新的时钟集，并使用它们来替换以前创建的时钟集。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-122">If you are working directly at the clock level, create and apply a new set of clocks and use them to replace the previous set of created clocks.</span></span>  
  
 <span data-ttu-id="0a4fb-123">有关数据绑定动画的示例，请参阅 [主要曲线动画示例](https://go.microsoft.com/fwlink/?LinkID=160011) 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-123">For an example of a data bound animation, see [Key Spline Animation Sample](https://go.microsoft.com/fwlink/?LinkID=160011) .</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Storyboard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Storyboard();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a4fb-124">初始化 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-124">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Storyboard" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Begin">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a4fb-125">启动与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的那组动画。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-125">Initiates the set of animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-126">可控制的情节提要可以暂停、恢复、查找、停止和删除。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-126">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="0a4fb-127">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-127">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-128">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-128">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin();" />
      <MemberSignature Language="F#" Value="member this.Begin : unit -&gt; unit" Usage="storyboard.Begin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a4fb-129">将与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的动画应用到其目标并启动它们。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-129">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Begin containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="0a4fb-130">包含在与此情节提要的动画目标相同的名称范围内的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-130">An object contained within the same name scope as the targets of this storyboard's animations.</span></span> <span data-ttu-id="0a4fb-131">将无 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画应用于 <paramref name="containingObject" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-131">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span></span></param>
        <summary><span data-ttu-id="0a4fb-132">将与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的动画应用到其目标并启动它们。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-132">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-133">如果目标属性已进行动画处理，则使用 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> 切换行为替换它们。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-133">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="0a4fb-134">无法暂停、恢复或以其他方式在启动后以交互方式控制通过此方法启动的情节提要。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-134">Storyboards started with this method cannot be paused, resumed, or otherwise interactively controlled after they are started.</span></span> <span data-ttu-id="0a4fb-135">若要使情节提要可控制，请使用 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 或 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-135">To make a storyboard controllable, use the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> or <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method.</span></span>  
  
 <span data-ttu-id="0a4fb-136">开始情节提要会触发 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 和 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 事件。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-136">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fb-137">下面的示例使用情节提要对进行动画处理 <xref:System.Windows.Media.TextEffect> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-137">The following example uses a storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="0a4fb-138"><xref:System.Windows.Media.TextEffect>包含在 <xref:System.Windows.FrameworkContentElement> 的名称作用域内。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-138">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementStoryboardExample.cs#frameworkcontentelementstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementstoryboardexample.vb#frameworkcontentelementstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Begin containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="0a4fb-139">包含在与此情节提要的动画目标相同的名称范围内的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-139">An object contained within the same name scope as the targets of this storyboard's animations.</span></span> <span data-ttu-id="0a4fb-140">将无 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画应用于 <paramref name="containingObject" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-140">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span></span></param>
        <summary><span data-ttu-id="0a4fb-141">将与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的动画应用到其目标并启动它们。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-141">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-142">如果目标属性已进行动画处理，则使用 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> 切换行为替换它们。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-142">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="0a4fb-143">无法暂停、恢复或以其他方式在启动后以交互方式控制通过此方法启动的情节提要。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-143">Storyboards started with this method cannot be paused, resumed, or otherwise interactively controlled after they are started.</span></span> <span data-ttu-id="0a4fb-144">若要使情节提要可控制，请使用 <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Boolean%29> 或 <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Windows.Media.Animation.HandoffBehavior%2CSystem.Boolean%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-144">To make a storyboard controllable, use the <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Boolean%29> or <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Windows.Media.Animation.HandoffBehavior%2CSystem.Boolean%29> method.</span></span>  
  
 <span data-ttu-id="0a4fb-145">开始情节提要会触发 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 和 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 事件。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-145">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkContentElement, isControllable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkContentElement * bool -&gt; unit" Usage="storyboard.Begin (containingObject, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="0a4fb-146">包含在与此情节提要的动画目标相同的名称范围内的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-146">An object contained within the same name scope as the targets of this storyboard's animations.</span></span> <span data-ttu-id="0a4fb-147">将无 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画应用于 <paramref name="containingObject" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-147">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span></span></param>
        <param name="isControllable"><span data-ttu-id="0a4fb-148">如果情节提要可以以交互方式控制，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-148"><see langword="true" /> if the storyboard should be interactively controllable; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="0a4fb-149">将与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的动画应用到其目标并启动它们。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-149">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-150">如果目标属性已进行动画处理，则使用 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> 切换行为替换它们。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-150">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="0a4fb-151">若要以交互方式控制此情节提要，必须在 `containingObject` 调用用于开始情节提要的交互式方法时指定相同的</span><span class="sxs-lookup"><span data-stu-id="0a4fb-151">To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="0a4fb-152">调用此方法时， <xref:System.Windows.Media.Animation.Clock> 将为情节提要及其包含的任何时间线创建对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-152">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="0a4fb-153">这些时钟与一起存储 `containingObject` 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-153">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="0a4fb-154">开始情节提要会触发 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 和 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 事件。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-154">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fb-155">下面的示例使用可控制的情节提要对进行动画处理 <xref:System.Windows.Media.TextEffect> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-155">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="0a4fb-156"><xref:System.Windows.Media.TextEffect>包含在 <xref:System.Windows.FrameworkContentElement> 的名称作用域内。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-156">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkContentElement, handoffBehavior As HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkContentElement * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="storyboard.Begin (containingObject, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="0a4fb-157">包含在与此情节提要的动画目标相同的名称范围内的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-157">An object contained within the same name scope as the targets of this storyboard's animations.</span></span> <span data-ttu-id="0a4fb-158">将无 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画应用于 <paramref name="containingObject" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-158">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="0a4fb-159">新动画应该用来与任何当前动画进行交互的行为。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-159">The behavior the new animation should use to interact with any current animations.</span></span></param>
        <summary><span data-ttu-id="0a4fb-160">使用指定的 <see cref="T:System.Windows.Media.Animation.Storyboard" />，将与此 <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> 关联的动画应用到它们的目标并启动它们。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-160">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them, using the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-161"><xref:System.Windows.Media.Animation.Storyboard>使用将、或应用 <xref:System.Windows.Media.Animation.AnimationTimeline> <xref:System.Windows.Media.Animation.AnimationClock> 到属性时 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> ， <xref:System.Windows.Media.Animation.Clock> 以前与该属性关联的任何对象将继续使用系统资源; 计时系统不会自动删除这些时钟。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-161">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="0a4fb-162">若要避免在使用应用大量时钟时出现性能问题 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> ，应在完成后从动画属性中删除组合时钟。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-162">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="0a4fb-163">删除时钟有多种方法。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-163">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="0a4fb-164">若要从属性中删除所有时钟，请 <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> 使用 <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> 动画对象的或方法。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-164">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="0a4fb-165">将要进行动画处理的属性指定为第一个参数，并将指定 `null` 为第二个参数。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-165">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="0a4fb-166">这将从属性中移除所有动画时钟。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-166">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="0a4fb-167">若要从时钟列表中删除特定的 <xref:System.Windows.Media.Animation.AnimationClock> ，请使用 <xref:System.Windows.Media.Animation.Clock.Controller%2A> 的属性 <xref:System.Windows.Media.Animation.AnimationClock> 来检索 <xref:System.Windows.Media.Animation.ClockController> ，然后调用的 <xref:System.Windows.Media.Animation.ClockController.Remove%2A> 方法 <xref:System.Windows.Media.Animation.ClockController> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-167">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="0a4fb-168">通常在 <xref:System.Windows.Media.Animation.Clock.Completed> 时钟的事件处理程序中完成此操作。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-168">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="0a4fb-169">请注意，只能通过控制根时钟， <xref:System.Windows.Media.Animation.ClockController> <xref:System.Windows.Media.Animation.Clock.Controller%2A> 子时钟的属性返回 `null` 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-169">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="0a4fb-170">另请注意， <xref:System.Windows.Media.Animation.Clock.Completed> 如果时钟的有效持续时间是永久性的，则不会调用此事件。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-170">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="0a4fb-171">在这种情况下，用户必须确定何时调用 <xref:System.Windows.Media.Animation.ClockController.Remove%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-171">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="0a4fb-172">此动画问题主要出现在生存期较长的对象上。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-172">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="0a4fb-173">当对对象进行垃圾回收时，还会断开其时钟的连接并对其进行垃圾回收。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-173">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="0a4fb-174">有关时钟对象的详细信息，请参阅 [动画和计时系统概述](/dotnet/framework/wpf/graphics-multimedia/animation-and-timing-system-overview)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-174">For more information about clock objects, see [Animation and Timing System Overview](/dotnet/framework/wpf/graphics-multimedia/animation-and-timing-system-overview).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fb-175">下面的示例使用在 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> 用户左键单击时进行动画处理， <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> 当用户单击鼠标右键时使用。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-175">The following example uses the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> to animate when the user left-clicks, and the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> when the user right-clicks.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementStoryboardWithHandoffBehaviorExample.cs#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementstoryboardwithhandoffbehaviorexample.vb#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkElement, isControllable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * bool -&gt; unit" Usage="storyboard.Begin (containingObject, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="0a4fb-176">包含在与此情节提要的动画目标相同的名称范围内的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-176">An object contained within the same name scope as the targets of this storyboard's animations.</span></span> <span data-ttu-id="0a4fb-177">将无 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画应用于 <paramref name="containingObject" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-177">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span></span></param>
        <param name="isControllable"><span data-ttu-id="0a4fb-178">如果情节提要可以以交互方式控制，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-178"><see langword="true" /> if the storyboard should be interactively controllable; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="0a4fb-179">将与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的动画应用到其目标并启动它们。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-179">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-180">如果目标属性已进行动画处理，则使用 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> 切换行为替换它们。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-180">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="0a4fb-181">若要以交互方式控制此情节提要，在 `containingObject` 调用用于启动情节提要的交互式方法时必须使用相同的参数</span><span class="sxs-lookup"><span data-stu-id="0a4fb-181">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="0a4fb-182">调用此方法时， <xref:System.Windows.Media.Animation.Clock> 将为情节提要及其包含的任何时间线创建对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-182">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="0a4fb-183">这些时钟与一起存储 `containingObject` 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-183">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="0a4fb-184">开始情节提要会触发 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 和 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 事件。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-184">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkElement, frameworkTemplate As FrameworkTemplate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.FrameworkTemplate -&gt; unit" Usage="storyboard.Begin (containingObject, frameworkTemplate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="0a4fb-185">指定的 <paramref name="frameworkTemplate" /> 已应用到的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-185">The object to which the specified <paramref name="frameworkTemplate" /> has been applied.</span></span> <span data-ttu-id="0a4fb-186">将无 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画应用于 <paramref name="containingObject" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-186">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span></span></param>
        <param name="frameworkTemplate"><span data-ttu-id="0a4fb-187">要进行动画处理的模板。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-187">The template to animate.</span></span></param>
        <summary><span data-ttu-id="0a4fb-188">将与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的动画应用到它们在指定模板内的目标并启动它们。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-188">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-189">如果目标属性已进行动画处理，则使用 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> 切换行为替换它们。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-189">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="0a4fb-190">调用此方法时， <xref:System.Windows.Media.Animation.Clock> 将为情节提要及其包含的任何时间线创建对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-190">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="0a4fb-191">这些时钟与一起存储 `containingObject` 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-191">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="0a4fb-192">开始情节提要会触发 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 和 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 事件。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-192">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkElement, handoffBehavior As HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="storyboard.Begin (containingObject, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="0a4fb-193">包含在与此情节提要的动画目标相同的名称范围内的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-193">An object contained within the same name scope as the targets of this storyboard's animations.</span></span> <span data-ttu-id="0a4fb-194">没有指定的 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画将应用到 <paramref name="containingObject" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-194">Animations without a specified <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="0a4fb-195">新动画应该用来与任何当前动画进行交互的行为。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-195">The behavior the new animation should use to interact with any current animations.</span></span></param>
        <summary><span data-ttu-id="0a4fb-196">使用指定的 <see cref="T:System.Windows.Media.Animation.Storyboard" />，将与此 <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> 关联的动画应用到它们的目标并启动它们。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-196">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them, using the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0a4fb-197">下面的示例使用在 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> 用户左键单击时进行动画处理， <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> 当用户单击鼠标右键时使用。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-197">The following example uses the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> to animate when the user left-clicks, and the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> when the user right-clicks.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkElementStoryboardHandoffBehaviorExample.cs#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkelementstoryboardhandoffbehaviorexample.vb#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkContentElement, handoffBehavior As HandoffBehavior, isControllable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkContentElement * System.Windows.Media.Animation.HandoffBehavior * bool -&gt; unit" Usage="storyboard.Begin (containingObject, handoffBehavior, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="0a4fb-198">包含在与此情节提要的动画目标相同的名称范围内的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-198">An object contained within the same name scope as the targets of this storyboard's animations.</span></span> <span data-ttu-id="0a4fb-199">没有指定的 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画将应用到 <paramref name="containingObject" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-199">Animations without a specified <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="0a4fb-200">新动画应该用来与任何当前动画进行交互的行为。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-200">The behavior the new animation should use to interact with any current animations.</span></span></param>
        <param name="isControllable"><span data-ttu-id="0a4fb-201">声明在动画启动后是否可以控制（可以暂停）动画。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-201">Declares whether the animation is controllable (can be paused) once started.</span></span></param>
        <summary><span data-ttu-id="0a4fb-202">使用指定的 <see cref="T:System.Windows.Media.Animation.Storyboard" />，将与此 <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> 关联的动画应用到它们的目标并启动它们。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-202">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them, using the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-203">如果目标属性已进行动画处理，则使用指定的移交行为替换它们。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-203">If the targeted properties are already animated, they are replaced using the specified handoff behavior.</span></span>  
  
 <span data-ttu-id="0a4fb-204">若要以交互方式控制此情节提要，必须在 `containingObject` 调用用于开始情节提要的交互式方法时指定相同的</span><span class="sxs-lookup"><span data-stu-id="0a4fb-204">To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="0a4fb-205">调用此方法时， <xref:System.Windows.Media.Animation.Clock> 将为情节提要及其包含的任何时间线创建对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-205">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="0a4fb-206">这些时钟与一起存储 `containingObject` 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-206">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="0a4fb-207">开始情节提要会触发 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 和 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 事件。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-207">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="0a4fb-208">使用撰写 HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="0a4fb-208">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="0a4fb-209"><xref:System.Windows.Media.Animation.Storyboard>使用将、或应用 <xref:System.Windows.Media.Animation.AnimationTimeline> <xref:System.Windows.Media.Animation.AnimationClock> 到属性时 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> ， <xref:System.Windows.Media.Animation.Clock> 以前与该属性关联的任何对象将继续使用系统资源; 计时系统不会自动删除这些时钟。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-209">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="0a4fb-210">若要避免在使用应用大量时钟时出现性能问题 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> ，应在完成后从动画属性中删除组合时钟。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-210">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="0a4fb-211">删除时钟有多种方法。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-211">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="0a4fb-212">若要从属性中删除所有时钟，请 <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> 使用 <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> 动画对象的或方法。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-212">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="0a4fb-213">将要进行动画处理的属性指定为第一个参数，并将指定 `null` 为第二个参数。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-213">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="0a4fb-214">这将从属性中移除所有动画时钟。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-214">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="0a4fb-215">若要从时钟列表中删除特定的 <xref:System.Windows.Media.Animation.AnimationClock> ，请使用 <xref:System.Windows.Media.Animation.Clock.Controller%2A> 的属性 <xref:System.Windows.Media.Animation.AnimationClock> 来检索 <xref:System.Windows.Media.Animation.ClockController> ，然后调用的 <xref:System.Windows.Media.Animation.ClockController.Remove%2A> 方法 <xref:System.Windows.Media.Animation.ClockController> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-215">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="0a4fb-216">通常在 <xref:System.Windows.Media.Animation.Clock.Completed> 时钟的事件处理程序中完成此操作。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-216">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="0a4fb-217">请注意，只能通过控制根时钟， <xref:System.Windows.Media.Animation.ClockController> <xref:System.Windows.Media.Animation.Clock.Controller%2A> 子时钟的属性返回 `null` 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-217">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="0a4fb-218">另请注意， <xref:System.Windows.Media.Animation.Clock.Completed> 如果时钟的有效持续时间是永久性的，则不会调用此事件。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-218">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="0a4fb-219">在这种情况下，用户必须确定何时调用 <xref:System.Windows.Media.Animation.ClockController.Remove%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-219">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="0a4fb-220">此动画问题主要出现在生存期较长的对象上。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-220">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="0a4fb-221">当对对象进行垃圾回收时，还会断开其时钟的连接并对其进行垃圾回收。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-221">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="0a4fb-222">有关时钟对象的详细信息，请参阅 [动画和计时系统概述](/dotnet/framework/wpf/graphics-multimedia/animation-and-timing-system-overview)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-222">For more information about clock objects, see [Animation and Timing System Overview](/dotnet/framework/wpf/graphics-multimedia/animation-and-timing-system-overview).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fb-223">下面的示例使用可控制的情节提要对进行动画处理 <xref:System.Windows.Media.TextEffect> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-223">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="0a4fb-224"><xref:System.Windows.Media.TextEffect>包含在 <xref:System.Windows.FrameworkContentElement> 的名称作用域内。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-224">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 <span data-ttu-id="0a4fb-225">下一个示例使用在 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> 用户左键单击时进行动画处理， <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> 当用户单击鼠标右键时使用。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-225">The next example uses the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> to animate when the user left-clicks, and the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> when the user right-clicks.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementStoryboardWithHandoffBehaviorExample.cs#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementstoryboardwithhandoffbehaviorexample.vb#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkElement, frameworkTemplate As FrameworkTemplate, isControllable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.FrameworkTemplate * bool -&gt; unit" Usage="storyboard.Begin (containingObject, frameworkTemplate, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="0a4fb-226">指定的 <paramref name="frameworkTemplate" /> 已应用到的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-226">The object to which the specified <paramref name="frameworkTemplate" /> has been applied.</span></span>  <span data-ttu-id="0a4fb-227">将无 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画应用于 <paramref name="containingObject" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-227">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span></span></param>
        <param name="frameworkTemplate"><span data-ttu-id="0a4fb-228">要进行动画处理的模板。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-228">The template to animate.</span></span></param>
        <param name="isControllable"><span data-ttu-id="0a4fb-229">如果情节提要可以以交互方式控制，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-229"><see langword="true" /> if the storyboard should be interactively controllable; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="0a4fb-230">将与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的动画应用到它们在指定模板内的目标并启动它们。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-230">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-231">如果目标属性已进行动画处理，则使用 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> 切换行为替换它们。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-231">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="0a4fb-232">若要以交互方式控制此情节提要，必须在 `containingObject` 调用用于开始情节提要的交互式方法时指定相同的</span><span class="sxs-lookup"><span data-stu-id="0a4fb-232">To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="0a4fb-233">调用此方法时， <xref:System.Windows.Media.Animation.Clock> 将为情节提要及其包含的任何时间线创建对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-233">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="0a4fb-234">这些时钟与一起存储 `containingObject` 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-234">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="0a4fb-235">开始情节提要会触发 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 和 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 事件。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-235">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkElement, frameworkTemplate As FrameworkTemplate, handoffBehavior As HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.FrameworkTemplate * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="storyboard.Begin (containingObject, frameworkTemplate, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="0a4fb-236">指定的 <paramref name="frameworkTemplate" /> 已应用到的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-236">The object to which the specified <paramref name="frameworkTemplate" /> has been applied.</span></span> <span data-ttu-id="0a4fb-237">将无 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画应用于 <paramref name="containingObject" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-237">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span></span></param>
        <param name="frameworkTemplate"><span data-ttu-id="0a4fb-238">要进行动画处理的模板。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-238">The template to animate.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="0a4fb-239">新动画应该用来与任何当前动画进行交互的行为。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-239">The behavior the new animation should use to interact with any current animations.</span></span></param>
        <summary><span data-ttu-id="0a4fb-240">将与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的动画应用到它们在指定模板内的目标并启动它们。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-240">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-241">调用此方法时， <xref:System.Windows.Media.Animation.Clock> 将为情节提要及其包含的任何时间线创建对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-241">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="0a4fb-242">这些时钟与一起存储 `containingObject` 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-242">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="0a4fb-243">开始情节提要会触发 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 和 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 事件。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-243">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="0a4fb-244">使用撰写 HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="0a4fb-244">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="0a4fb-245"><xref:System.Windows.Media.Animation.Storyboard>使用将、或应用 <xref:System.Windows.Media.Animation.AnimationTimeline> <xref:System.Windows.Media.Animation.AnimationClock> 到属性时 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> ， <xref:System.Windows.Media.Animation.Clock> 以前与该属性关联的任何对象将继续使用系统资源; 计时系统不会自动删除这些时钟。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-245">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="0a4fb-246">若要避免在使用应用大量时钟时出现性能问题 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> ，应在完成后从动画属性中删除组合时钟。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-246">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="0a4fb-247">删除时钟有多种方法。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-247">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="0a4fb-248">若要从属性中删除所有时钟，请 <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> 使用 <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> 动画对象的或方法。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-248">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="0a4fb-249">将要进行动画处理的属性指定为第一个参数，并将指定 `null` 为第二个参数。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-249">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="0a4fb-250">这将从属性中移除所有动画时钟。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-250">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="0a4fb-251">若要从时钟列表中删除特定的 <xref:System.Windows.Media.Animation.AnimationClock> ，请使用 <xref:System.Windows.Media.Animation.Clock.Controller%2A> 的属性 <xref:System.Windows.Media.Animation.AnimationClock> 来检索 <xref:System.Windows.Media.Animation.ClockController> ，然后调用的 <xref:System.Windows.Media.Animation.ClockController.Remove%2A> 方法 <xref:System.Windows.Media.Animation.ClockController> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-251">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="0a4fb-252">通常在 <xref:System.Windows.Media.Animation.Clock.Completed> 时钟的事件处理程序中完成此操作。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-252">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="0a4fb-253">请注意，只能通过控制根时钟， <xref:System.Windows.Media.Animation.ClockController> <xref:System.Windows.Media.Animation.Clock.Controller%2A> 子时钟的属性返回 `null` 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-253">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="0a4fb-254">另请注意， <xref:System.Windows.Media.Animation.Clock.Completed> 如果时钟的有效持续时间是永久性的，则不会调用此事件。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-254">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="0a4fb-255">在这种情况下，用户必须确定何时调用 <xref:System.Windows.Media.Animation.ClockController.Remove%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-255">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="0a4fb-256">此动画问题主要出现在生存期较长的对象上。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-256">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="0a4fb-257">当对对象进行垃圾回收时，还会断开其时钟的连接并对其进行垃圾回收。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-257">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="0a4fb-258">有关时钟对象的详细信息，请参阅 [动画和计时系统概述](/dotnet/framework/wpf/graphics-multimedia/animation-and-timing-system-overview)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-258">For more information about clock objects, see [Animation and Timing System Overview](/dotnet/framework/wpf/graphics-multimedia/animation-and-timing-system-overview).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkElement, handoffBehavior As HandoffBehavior, isControllable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.Media.Animation.HandoffBehavior * bool -&gt; unit" Usage="storyboard.Begin (containingObject, handoffBehavior, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="0a4fb-259">包含在与此情节提要的动画目标相同的名称范围内的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-259">An object contained within the same name scope as the targets of this storyboard's animations.</span></span> <span data-ttu-id="0a4fb-260">没有指定的 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画将应用到 <paramref name="containingObject" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-260">Animations without a specified <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="0a4fb-261">新动画应该用来与任何当前动画进行交互的行为。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-261">The behavior the new animation should use to interact with any current animations.</span></span></param>
        <param name="isControllable"><span data-ttu-id="0a4fb-262">声明在动画启动后是否可以控制（可以暂停）动画。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-262">Declares whether the animation is controllable (can be paused) once started.</span></span></param>
        <summary><span data-ttu-id="0a4fb-263">将与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的动画应用到其目标并启动它们。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-263">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-264">若要以交互方式控制此情节提要，在 `containingObject` 调用用于启动情节提要的交互式方法时必须使用相同的参数</span><span class="sxs-lookup"><span data-stu-id="0a4fb-264">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="0a4fb-265">调用此方法时， <xref:System.Windows.Media.Animation.Clock> 将为情节提要及其包含的任何时间线创建对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-265">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="0a4fb-266">这些时钟与一起存储 `containingObject` 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-266">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="0a4fb-267">开始情节提要会触发 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 和 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 事件。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-267">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="0a4fb-268">使用撰写 HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="0a4fb-268">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="0a4fb-269"><xref:System.Windows.Media.Animation.Storyboard>使用将、或应用 <xref:System.Windows.Media.Animation.AnimationTimeline> <xref:System.Windows.Media.Animation.AnimationClock> 到属性时 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> ， <xref:System.Windows.Media.Animation.Clock> 以前与该属性关联的任何对象将继续使用系统资源; 计时系统不会自动删除这些时钟。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-269">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="0a4fb-270">若要避免在使用应用大量时钟时出现性能问题 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> ，应在完成后从动画属性中删除组合时钟。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-270">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="0a4fb-271">删除时钟有多种方法。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-271">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="0a4fb-272">若要从属性中删除所有时钟，请 <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> 使用 <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> 动画对象的或方法。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-272">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="0a4fb-273">将要进行动画处理的属性指定为第一个参数，并将指定 `null` 为第二个参数。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-273">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="0a4fb-274">这将从属性中移除所有动画时钟。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-274">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="0a4fb-275">若要从时钟列表中删除特定的 <xref:System.Windows.Media.Animation.AnimationClock> ，请使用 <xref:System.Windows.Media.Animation.Clock.Controller%2A> 的属性 <xref:System.Windows.Media.Animation.AnimationClock> 来检索 <xref:System.Windows.Media.Animation.ClockController> ，然后调用的 <xref:System.Windows.Media.Animation.ClockController.Remove%2A> 方法 <xref:System.Windows.Media.Animation.ClockController> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-275">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="0a4fb-276">通常在 <xref:System.Windows.Media.Animation.Clock.Completed> 时钟的事件处理程序中完成此操作。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-276">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="0a4fb-277">请注意，只能通过控制根时钟， <xref:System.Windows.Media.Animation.ClockController> <xref:System.Windows.Media.Animation.Clock.Controller%2A> 子时钟的属性返回 `null` 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-277">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="0a4fb-278">另请注意， <xref:System.Windows.Media.Animation.Clock.Completed> 如果时钟的有效持续时间是永久性的，则不会调用此事件。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-278">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="0a4fb-279">在这种情况下，用户必须确定何时调用 <xref:System.Windows.Media.Animation.ClockController.Remove%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-279">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="0a4fb-280">此动画问题主要出现在生存期较长的对象上。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-280">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="0a4fb-281">当对对象进行垃圾回收时，还会断开其时钟的连接并对其进行垃圾回收。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-281">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="0a4fb-282">有关时钟对象的详细信息，请参阅 [动画和计时系统概述](/dotnet/framework/wpf/graphics-multimedia/animation-and-timing-system-overview)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-282">For more information about clock objects, see [Animation and Timing System Overview](/dotnet/framework/wpf/graphics-multimedia/animation-and-timing-system-overview).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fb-283">下面的示例演示如何创建可控制的情节提要。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-283">The following example shows how to create a controllable storyboard.</span></span>  
  
 [!code-csharp[animation_ovws_procedural_snip#ControllableStoryboardExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/animation_ovws_procedural_snip/CSharp/ControllableStoryboardExample.cs#controllablestoryboardexamplewholepage)]
 [!code-vb[animation_ovws_procedural_snip#ControllableStoryboardExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/animation_ovws_procedural_snip/visualbasic/controllablestoryboardexample.vb#controllablestoryboardexamplewholepage)]  
  
 <span data-ttu-id="0a4fb-284">下一个示例使用在 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> 用户左键单击时进行动画处理， <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> 当用户单击鼠标右键时使用。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-284">The next example uses the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> to animate when the user left-clicks, and the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> when the user right-clicks.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkElementStoryboardHandoffBehaviorExample.cs#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkelementstoryboardhandoffbehaviorexample.vb#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkElement, frameworkTemplate As FrameworkTemplate, handoffBehavior As HandoffBehavior, isControllable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate, System::Windows::Media::Animation::HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.FrameworkTemplate * System.Windows.Media.Animation.HandoffBehavior * bool -&gt; unit" Usage="storyboard.Begin (containingObject, frameworkTemplate, handoffBehavior, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="0a4fb-285">指定的 <paramref name="frameworkTemplate" /> 已应用到的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-285">The object to which the specified <paramref name="frameworkTemplate" /> has been applied.</span></span> <span data-ttu-id="0a4fb-286">将无 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画应用于 <paramref name="containingObject" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-286">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span></span></param>
        <param name="frameworkTemplate"><span data-ttu-id="0a4fb-287">要进行动画处理的模板。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-287">The template to animate.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="0a4fb-288">新动画应该用来与任何当前动画进行交互的行为。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-288">The behavior the new animation should use to interact with any current animations.</span></span></param>
        <param name="isControllable"><span data-ttu-id="0a4fb-289">如果情节提要可以以交互方式控制，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-289"><see langword="true" /> if the storyboard should be interactively controllable; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="0a4fb-290">将与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的动画应用到它们在指定模板内的目标并启动它们。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-290">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-291">若要以交互方式控制此情节提要，必须在 `containingObject` 调用用于开始情节提要的交互式方法时指定相同的</span><span class="sxs-lookup"><span data-stu-id="0a4fb-291">To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="0a4fb-292">调用此方法时， <xref:System.Windows.Media.Animation.Clock> 将为情节提要及其包含的任何时间线创建对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-292">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="0a4fb-293">这些时钟与一起存储 `containingObject` 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-293">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="0a4fb-294">开始情节提要会触发 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 和 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 事件。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-294">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="0a4fb-295">使用撰写 HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="0a4fb-295">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="0a4fb-296"><xref:System.Windows.Media.Animation.Storyboard>使用将、或应用 <xref:System.Windows.Media.Animation.AnimationTimeline> <xref:System.Windows.Media.Animation.AnimationClock> 到属性时 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> ， <xref:System.Windows.Media.Animation.Clock> 以前与该属性关联的任何对象将继续使用系统资源; 计时系统不会自动删除这些时钟。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-296">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="0a4fb-297">若要避免在使用应用大量时钟时出现性能问题 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> ，应在完成后从动画属性中删除组合时钟。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-297">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="0a4fb-298">删除时钟有多种方法。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-298">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="0a4fb-299">若要从属性中删除所有时钟，请 <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> 使用 <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> 动画对象的或方法。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-299">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="0a4fb-300">将要进行动画处理的属性指定为第一个参数，并将指定 `null` 为第二个参数。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-300">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="0a4fb-301">这将从属性中移除所有动画时钟。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-301">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="0a4fb-302">若要从时钟列表中删除特定的 <xref:System.Windows.Media.Animation.AnimationClock> ，请使用 <xref:System.Windows.Media.Animation.Clock.Controller%2A> 的属性 <xref:System.Windows.Media.Animation.AnimationClock> 来检索 <xref:System.Windows.Media.Animation.ClockController> ，然后调用的 <xref:System.Windows.Media.Animation.ClockController.Remove%2A> 方法 <xref:System.Windows.Media.Animation.ClockController> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-302">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="0a4fb-303">通常在 <xref:System.Windows.Media.Animation.Clock.Completed> 时钟的事件处理程序中完成此操作。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-303">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="0a4fb-304">请注意，只能通过控制根时钟， <xref:System.Windows.Media.Animation.ClockController> <xref:System.Windows.Media.Animation.Clock.Controller%2A> 子时钟的属性返回 `null` 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-304">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="0a4fb-305">另请注意， <xref:System.Windows.Media.Animation.Clock.Completed> 如果时钟的有效持续时间是永久性的，则不会调用此事件。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-305">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="0a4fb-306">在这种情况下，用户必须确定何时调用 <xref:System.Windows.Media.Animation.ClockController.Remove%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-306">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="0a4fb-307">此动画问题主要出现在生存期较长的对象上。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-307">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="0a4fb-308">当对对象进行垃圾回收时，还会断开其时钟的连接并对其进行垃圾回收。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-308">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="0a4fb-309">有关时钟对象的详细信息，请参阅 [动画和计时系统概述](/dotnet/framework/wpf/graphics-multimedia/animation-and-timing-system-overview)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-309">For more information about clock objects, see [Animation and Timing System Overview](/dotnet/framework/wpf/graphics-multimedia/animation-and-timing-system-overview).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Storyboard Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Storyboard Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Storyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Storyboard ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.Animation.Storyboard" Usage="storyboard.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Storyboard</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a4fb-310">创建此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的可修改克隆，从而深度复制此对象的值。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-310">Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Storyboard" />, making deep copies of this object's values.</span></span> <span data-ttu-id="0a4fb-311">在复制依赖项属性时，此方法会复制资源引用和数据绑定（但可能不再解析），但不复制动画或其当前值。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-311">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span></span></summary>
        <returns><span data-ttu-id="0a4fb-312">当前对象的可修改复本。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-312">A modifiable clone of the current object.</span></span> <span data-ttu-id="0a4fb-313">即使源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 <see langword="false" />，所克隆对象的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性也为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-313">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-314">此方法用于生成冻结 <xref:System.Windows.Freezable> 对象 (或任何对象) 的可修改副本 <xref:System.Windows.Freezable> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-314">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="0a4fb-315">为方便起见，此方法使用强类型实现隐藏了继承的版本。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-315">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="0a4fb-316">有关详细信息，请参阅 <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-316">For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="storyboard.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a4fb-317">创建 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-317">Creates a new instance of the <see cref="T:System.Windows.Media.Animation.Storyboard" /> class.</span></span></summary>
        <returns><span data-ttu-id="0a4fb-318">新 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-318">A new <see cref="T:System.Windows.Media.Animation.Storyboard" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-319">在创建类的新实例时，将在内部调用此方法， <xref:System.Windows.Freezable.CreateInstance%2A> <xref:System.Windows.Media.Animation.Storyboard> (例如 <xref:System.Windows.Freezable.Clone%2A> 和 <xref:System.Windows.Freezable.CloneCurrentValue%2A>) 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-319">This method is called internally by <xref:System.Windows.Freezable.CreateInstance%2A> when creating new instances of the <xref:System.Windows.Media.Animation.Storyboard> class for the various cloning methods (such as <xref:System.Windows.Freezable.Clone%2A> and <xref:System.Windows.Freezable.CloneCurrentValue%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fb-320">下面的示例演示的典型实现 <xref:System.Windows.Freezable.CreateInstanceCore%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-320">The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.</span></span>  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="0a4fb-321">每个 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 子类必须实现此方法。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-321">Every <see cref="T:System.Windows.Media.Animation.Storyboard" /> subclass must implement this method.</span></span> <span data-ttu-id="0a4fb-322">典型的实现是只调用类的无参数构造函数并返回结果。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-322">Typical implementation is to simply call the class parameterless constructor and return the result.</span></span></para></block>
        <altmember cref="M:System.Windows.Freezable.CreateInstanceCore" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentGlobalSpeed">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a4fb-323">检索为此 <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-323">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-324">时钟的 <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> 速度是其时间当前正在前进的速度，与实际时间相比。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-324">A clock's <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> speed is the rate at which its time is currently progressing, compared to real-world time.</span></span>  
  
 <span data-ttu-id="0a4fb-325">若要使用此方法检索有关情节提要时钟的信息，情节提要必须可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-325">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="0a4fb-326">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-326">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-327">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-327">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentGlobalSpeed">
      <MemberSignature Language="C#" Value="public double GetCurrentGlobalSpeed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetCurrentGlobalSpeed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentGlobalSpeed () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetCurrentGlobalSpeed();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentGlobalSpeed : unit -&gt; double" Usage="storyboard.GetCurrentGlobalSpeed " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a4fb-328">检索为此 <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-328">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="0a4fb-329">当前全局速度，或者为 0（如果时钟停止）。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-329">The current global speed, or 0 if the clock is stopped.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentGlobalSpeed">
      <MemberSignature Language="C#" Value="public double? GetCurrentGlobalSpeed (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentGlobalSpeed(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentGlobalSpeed (containingObject As FrameworkContentElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentGlobalSpeed(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentGlobalSpeed : System.Windows.FrameworkContentElement -&gt; Nullable&lt;double&gt;" Usage="storyboard.GetCurrentGlobalSpeed containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="0a4fb-330">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-330">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="0a4fb-331">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-331">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="0a4fb-332">检索为此 <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-332">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="0a4fb-333">当前全局速度，或者为 <see langword="null" />（如果时钟停止）。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-333">The current global speed, or <see langword="null" /> if the clock is stopped.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-334">时钟的 <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> 速度是其时间当前正在前进的速度，与实际时间相比。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-334">A clock's <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> speed is the rate at which its time is currently progressing, compared to real-world time.</span></span>  
  
 <span data-ttu-id="0a4fb-335">若要使用此方法检索有关情节提要时钟的信息，情节提要必须可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-335">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="0a4fb-336">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-336">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-337">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-337">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentGlobalSpeed">
      <MemberSignature Language="C#" Value="public double? GetCurrentGlobalSpeed (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentGlobalSpeed(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentGlobalSpeed (containingObject As FrameworkElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentGlobalSpeed(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentGlobalSpeed : System.Windows.FrameworkElement -&gt; Nullable&lt;double&gt;" Usage="storyboard.GetCurrentGlobalSpeed containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="0a4fb-338">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-338">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="0a4fb-339">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-339">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="0a4fb-340">检索为此 <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-340">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="0a4fb-341">当前全局速度，或者为 <see langword="null" />（如果时钟停止）。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-341">The current global speed, or <see langword="null" /> if the clock is stopped.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-342">时钟的 <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> 速度是其时间当前正在前进的速度，与实际时间相比。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-342">A clock's <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> speed is the rate at which its time is currently progressing, compared to real-world time.</span></span>  
  
 <span data-ttu-id="0a4fb-343">若要使用此方法检索有关情节提要时钟的信息，情节提要必须可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-343">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="0a4fb-344">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-344">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-345">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-345">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentIteration">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a4fb-346">检索为此 <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-346">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentIteration">
      <MemberSignature Language="C#" Value="public int GetCurrentIteration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCurrentIteration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentIteration () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCurrentIteration();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentIteration : unit -&gt; int" Usage="storyboard.GetCurrentIteration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a4fb-347">检索为此 <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-347">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="0a4fb-348">此时钟在其当前活动期中的当前迭代，如果此时钟已停止，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-348">This clock's current iteration within its current active period, or <see langword="null" /> if this clock is stopped.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-349">时钟的第一个迭代的值为1。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-349">A clock's first iteration has a value of 1.</span></span>  
  
 <span data-ttu-id="0a4fb-350">如果此情节提要的 <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> 设置为 `true` ，则完整迭代包含正向反向对，而不只是这些段中的一个。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-350">If this storyboard has a <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments.</span></span>  
  
 <span data-ttu-id="0a4fb-351">若要使用此方法检索有关情节提要时钟的信息，情节提要必须可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-351">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="0a4fb-352">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-352">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-353">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-353">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentIteration">
      <MemberSignature Language="C#" Value="public int? GetCurrentIteration (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;int32&gt; GetCurrentIteration(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentIteration (containingObject As FrameworkContentElement) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;int&gt; GetCurrentIteration(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentIteration : System.Windows.FrameworkContentElement -&gt; Nullable&lt;int&gt;" Usage="storyboard.GetCurrentIteration containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="0a4fb-354">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-354">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="0a4fb-355">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-355">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="0a4fb-356">检索为此 <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-356">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="0a4fb-357">此时钟在其当前活动期中的当前迭代，如果此时钟已停止，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-357">This clock's current iteration within its current active period, or <see langword="null" /> if this clock is stopped.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-358">时钟的第一个迭代的值为1。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-358">A clock's first iteration has a value of 1.</span></span>  
  
 <span data-ttu-id="0a4fb-359">如果此情节提要的 <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> 设置为 `true` ，则完整迭代包含正向反向对，而不只是这些段中的一个。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-359">If this storyboard has a <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments.</span></span>  
  
 <span data-ttu-id="0a4fb-360">若要使用此方法检索有关情节提要时钟的信息，情节提要必须可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-360">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="0a4fb-361">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-361">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-362">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-362">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentIteration">
      <MemberSignature Language="C#" Value="public int? GetCurrentIteration (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;int32&gt; GetCurrentIteration(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentIteration (containingObject As FrameworkElement) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;int&gt; GetCurrentIteration(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentIteration : System.Windows.FrameworkElement -&gt; Nullable&lt;int&gt;" Usage="storyboard.GetCurrentIteration containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="0a4fb-363">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-363">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="0a4fb-364">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-364">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="0a4fb-365">检索为此 <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-365">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="0a4fb-366">此时钟在其当前活动期中的当前迭代，如果此时钟已停止，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-366">This clock's current iteration within its current active period, or <see langword="null" /> if this clock is stopped.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-367">时钟的第一个迭代的值为1。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-367">A clock's first iteration has a value of 1.</span></span>  
  
 <span data-ttu-id="0a4fb-368">如果此时钟的时间线的 <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> 设置为 `true` ，则完整迭代包含正向反向对，而不只是这些段中的一个。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-368">If this clock's timeline has an <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments.</span></span>  
  
 <span data-ttu-id="0a4fb-369">无论其当前迭代如何，查找时钟都会将其当前迭代返回1。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-369">Regardless of its current iteration, seeking a clock returns its current iteration to 1.</span></span> <span data-ttu-id="0a4fb-370">重新启动时钟还会将其当前迭代返回1。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-370">Restarting a clock also returns its current iteration to 1.</span></span>  
  
 <span data-ttu-id="0a4fb-371">若要使用此方法检索有关情节提要时钟的信息，情节提要必须可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-371">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="0a4fb-372">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-372">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-373">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-373">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentProgress">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a4fb-374">检索为此 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-374">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentProgress">
      <MemberSignature Language="C#" Value="public double GetCurrentProgress ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetCurrentProgress() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentProgress () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetCurrentProgress();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentProgress : unit -&gt; double" Usage="storyboard.GetCurrentProgress " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a4fb-375">检索为此 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-375">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="0a4fb-376">如果此时钟为 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />，则为 <see langword="null" />；如果此时钟处于活动状态并且其 <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> 的 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 为 <see cref="P:System.Windows.Duration.Forever" />，则为 0.0；在其他情况下为一个介于 0.0 和 1.0 之间的值，此值指示此时钟在其当前迭代中的当前进度。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-376"><see langword="null" /> if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, or 0.0 if this clock is active and its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> has a <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of <see cref="P:System.Windows.Duration.Forever" />; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration.</span></span> <span data-ttu-id="0a4fb-377">值为 0.0 时表示没有进度，值为 1.0 时表示此时钟处于其当前迭代的末尾。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-377">A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-378">若要使用此方法检索有关情节提要时钟的信息，情节提要必须可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-378">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="0a4fb-379">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-379">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-380">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-380">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentProgress">
      <MemberSignature Language="C#" Value="public double? GetCurrentProgress (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentProgress(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentProgress (containingObject As FrameworkContentElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentProgress(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentProgress : System.Windows.FrameworkContentElement -&gt; Nullable&lt;double&gt;" Usage="storyboard.GetCurrentProgress containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="0a4fb-381">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-381">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="0a4fb-382">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-382">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="0a4fb-383">检索为此 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-383">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="0a4fb-384">如果此时钟为 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />，则为 <see langword="null" />；如果此时钟处于活动状态并且其 <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> 的 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 为 <see cref="P:System.Windows.Duration.Forever" />，则为 0.0；在其他情况下为一个介于 0.0 和 1.0 之间的值，此值指示此时钟在其当前迭代中的当前进度。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-384"><see langword="null" /> if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, or 0.0 if this clock is active and its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> has a <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of <see cref="P:System.Windows.Duration.Forever" />; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration.</span></span> <span data-ttu-id="0a4fb-385">值为 0.0 时表示没有进度，值为 1.0 时表示此时钟处于其当前迭代的末尾。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-385">A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-386">若要使用此方法检索有关情节提要时钟的信息，情节提要必须可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-386">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="0a4fb-387">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-387">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-388">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-388">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentProgress">
      <MemberSignature Language="C#" Value="public double? GetCurrentProgress (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentProgress(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentProgress (containingObject As FrameworkElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentProgress(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentProgress : System.Windows.FrameworkElement -&gt; Nullable&lt;double&gt;" Usage="storyboard.GetCurrentProgress containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="0a4fb-389">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-389">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="0a4fb-390">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-390">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="0a4fb-391">检索为此 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-391">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="0a4fb-392">如果此时钟为 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />，则为 <see langword="null" />；如果此时钟处于活动状态并且其 <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> 的 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 为 <see cref="P:System.Windows.Duration.Forever" />，则为 0.0；在其他情况下为一个介于 0.0 和 1.0 之间的值，此值指示此时钟在其当前迭代中的当前进度。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-392"><see langword="null" /> if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, or 0.0 if this clock is active and its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> has a <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of <see cref="P:System.Windows.Duration.Forever" />; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration.</span></span> <span data-ttu-id="0a4fb-393">值为 0.0 时表示没有进度，值为 1.0 时表示此时钟处于其当前迭代的末尾。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-393">A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-394">若要使用此方法检索有关情节提要时钟的信息，情节提要必须可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-394">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="0a4fb-395">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-395">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-396">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-396">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentState">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a4fb-397">检索为此 <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-397">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockState GetCurrentState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.Animation.ClockState GetCurrentState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentState" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentState () As ClockState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ClockState GetCurrentState();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentState : unit -&gt; System.Windows.Media.Animation.ClockState" Usage="storyboard.GetCurrentState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockState</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a4fb-398">检索为此 <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-398">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="0a4fb-399">为此演示图板创建的时钟的当前状态：<see cref="F:System.Windows.Media.Animation.ClockState.Active" />、<see cref="F:System.Windows.Media.Animation.ClockState.Filling" /> 或 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-399">The current state of the clock created for this storyboard: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-400">此方法不告知情节提要是否已暂停。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-400">This method does not tell you whether a storyboard is paused.</span></span> <span data-ttu-id="0a4fb-401">若要确定情节提要是否已暂停，请使用 <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-401">To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method.</span></span>  
  
 <span data-ttu-id="0a4fb-402">若要使用此方法检索有关情节提要时钟的信息，情节提要必须可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-402">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="0a4fb-403">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-403">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-404">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-404">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockState GetCurrentState (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.Animation.ClockState GetCurrentState(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentState (containingObject As FrameworkContentElement) As ClockState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ClockState GetCurrentState(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentState : System.Windows.FrameworkContentElement -&gt; System.Windows.Media.Animation.ClockState" Usage="storyboard.GetCurrentState containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="0a4fb-405">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-405">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="0a4fb-406">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-406">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="0a4fb-407">检索为此 <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-407">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="0a4fb-408">为此演示图板创建的时钟的当前状态：<see cref="F:System.Windows.Media.Animation.ClockState.Active" />、<see cref="F:System.Windows.Media.Animation.ClockState.Filling" /> 或 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-408">The current state of the clock created for this storyboard: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-409">此方法不告知情节提要是否已暂停。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-409">This method does not tell you whether a storyboard is paused.</span></span> <span data-ttu-id="0a4fb-410">若要确定情节提要是否已暂停，请使用 <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-410">To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method.</span></span>  
  
 <span data-ttu-id="0a4fb-411">若要使用此方法检索有关情节提要时钟的信息，情节提要必须可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-411">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="0a4fb-412">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-412">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-413">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-413">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockState GetCurrentState (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.Animation.ClockState GetCurrentState(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentState (containingObject As FrameworkElement) As ClockState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ClockState GetCurrentState(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentState : System.Windows.FrameworkElement -&gt; System.Windows.Media.Animation.ClockState" Usage="storyboard.GetCurrentState containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="0a4fb-414">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-414">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="0a4fb-415">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-415">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="0a4fb-416">检索为此 <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-416">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="0a4fb-417">为此演示图板创建的时钟的当前状态：<see cref="F:System.Windows.Media.Animation.ClockState.Active" />、<see cref="F:System.Windows.Media.Animation.ClockState.Filling" /> 或 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-417">The current state of the clock created for this storyboard: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-418">此方法不告知情节提要是否已暂停。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-418">This method does not tell you whether a storyboard is paused.</span></span> <span data-ttu-id="0a4fb-419">若要确定情节提要是否已暂停，请使用 <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-419">To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method.</span></span>  
  
 <span data-ttu-id="0a4fb-420">若要使用此方法检索有关情节提要时钟的信息，情节提要必须可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-420">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="0a4fb-421">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-421">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-422">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-422">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentTime">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a4fb-423">检索为此 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-423">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentTime">
      <MemberSignature Language="C#" Value="public TimeSpan GetCurrentTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan GetCurrentTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentTime () As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan GetCurrentTime();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentTime : unit -&gt; TimeSpan" Usage="storyboard.GetCurrentTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a4fb-424">检索为此 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-424">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="0a4fb-425">如果此演示图板的时钟为 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />，则为 <see langword="null" />；否则为此演示图板的时钟的当前时间。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-425"><see langword="null" /> if this storyboard's clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; otherwise, the current time of the storyboard's clock.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-426">若要使用此方法检索有关情节提要时钟的信息，情节提要必须可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-426">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="0a4fb-427">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-427">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-428">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-428">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentTime">
      <MemberSignature Language="C#" Value="public TimeSpan? GetCurrentTime (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; GetCurrentTime(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentTime (containingObject As FrameworkContentElement) As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;TimeSpan&gt; GetCurrentTime(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentTime : System.Windows.FrameworkContentElement -&gt; Nullable&lt;TimeSpan&gt;" Usage="storyboard.GetCurrentTime containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="0a4fb-429">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-429">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="0a4fb-430">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-430">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="0a4fb-431">检索为此 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-431">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="0a4fb-432">如果此演示图板的时钟为 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />，则为 <see langword="null" />；否则为此演示图板的时钟的当前时间。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-432"><see langword="null" /> if this storyboard's clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; otherwise, the current time of the storyboard's clock.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-433">若要使用此方法检索有关情节提要时钟的信息，情节提要必须可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-433">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="0a4fb-434">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-434">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-435">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-435">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentTime">
      <MemberSignature Language="C#" Value="public TimeSpan? GetCurrentTime (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; GetCurrentTime(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentTime (containingObject As FrameworkElement) As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;TimeSpan&gt; GetCurrentTime(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentTime : System.Windows.FrameworkElement -&gt; Nullable&lt;TimeSpan&gt;" Usage="storyboard.GetCurrentTime containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="0a4fb-436">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-436">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="0a4fb-437">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-437">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="0a4fb-438">检索为此 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-438">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="0a4fb-439">如果此演示图板的时钟为 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />，则为 <see langword="null" />；否则为此演示图板的时钟的当前时间。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-439"><see langword="null" /> if this storyboard's clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; otherwise, the current time of the storyboard's clock.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-440">若要使用此方法检索有关情节提要时钟的信息，情节提要必须可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-440">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="0a4fb-441">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-441">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-442">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-442">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetIsPaused">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a4fb-443">检索一个值，该值指示为此 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 是否已暂停。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-443">Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetIsPaused">
      <MemberSignature Language="C#" Value="public bool GetIsPaused ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetIsPaused() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetIsPaused" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsPaused () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsPaused();" />
      <MemberSignature Language="F#" Value="member this.GetIsPaused : unit -&gt; bool" Usage="storyboard.GetIsPaused " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a4fb-444">检索一个值，该值指示为此 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 是否已暂停。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-444">Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</span></span></summary>
        <returns><span data-ttu-id="0a4fb-445">如果为此 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 已暂停，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-445"><see langword="true" /> if the <see cref="T:System.Windows.Media.Animation.Clock" /> created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-446">若要使用此方法检索有关情节提要时钟的信息，情节提要必须可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-446">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="0a4fb-447">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-447">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-448">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-448">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="GetIsPaused">
      <MemberSignature Language="C#" Value="public bool GetIsPaused (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetIsPaused(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsPaused (containingObject As FrameworkContentElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsPaused(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetIsPaused : System.Windows.FrameworkContentElement -&gt; bool" Usage="storyboard.GetIsPaused containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="0a4fb-449">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-449">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="0a4fb-450">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-450">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="0a4fb-451">检索一个值，该值指示为此 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 是否已暂停。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-451">Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</span></span></summary>
        <returns><span data-ttu-id="0a4fb-452">如果为此 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 已暂停，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-452"><see langword="true" /> if the <see cref="T:System.Windows.Media.Animation.Clock" /> created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-453">若要使用此方法检索有关情节提要时钟的信息，情节提要必须可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-453">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="0a4fb-454">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-454">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-455">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-455">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="GetIsPaused">
      <MemberSignature Language="C#" Value="public bool GetIsPaused (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetIsPaused(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsPaused (containingObject As FrameworkElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsPaused(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetIsPaused : System.Windows.FrameworkElement -&gt; bool" Usage="storyboard.GetIsPaused containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="0a4fb-456">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-456">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="0a4fb-457">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-457">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="0a4fb-458">检索一个值，该值指示为此 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 是否已暂停。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-458">Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</span></span></summary>
        <returns><span data-ttu-id="0a4fb-459">如果为此 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 已暂停，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-459"><see langword="true" /> if the <see cref="T:System.Windows.Media.Animation.Clock" /> created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-460">若要使用此方法检索有关情节提要时钟的信息，情节提要必须可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-460">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="0a4fb-461">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-461">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-462">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-462">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="GetTarget">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetTarget (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetTarget(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetTarget(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTarget (element As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetTarget(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetTarget : System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="System.Windows.Media.Animation.Storyboard.GetTarget element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="0a4fb-463">要从其中检索 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的时间线。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-463">The timeline from which to retrieve the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />.</span></span></param>
        <summary><span data-ttu-id="0a4fb-464">检索指定的 <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> 的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 值。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-464">Retrieves the <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> value of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span></summary>
        <returns><span data-ttu-id="0a4fb-465">作为 <paramref name="element" /> 的目标的依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-465">The dependency object targeted by <paramref name="element" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-466">使用 <xref:System.Windows.Media.Animation.Storyboard.Target%2A> 带有动画时间线的附加属性来指示其目标对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-466">Use the <xref:System.Windows.Media.Animation.Storyboard.Target%2A> attached property with animation timelines to indicate the object that they target.</span></span> <span data-ttu-id="0a4fb-467">有关演示图板目标如何工作的详细信息，请参阅 <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-467">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>.</span></span> <span data-ttu-id="0a4fb-468">有关附加属性的工作方式的详细信息，请参阅 [附加属性概述](/dotnet/framework/wpf/advanced/attached-properties-overview)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-468">For more information about how attached properties work, see [Attached Properties Overview](/dotnet/framework/wpf/advanced/attached-properties-overview).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="GetTargetName">
      <MemberSignature Language="C#" Value="public static string GetTargetName (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTargetName(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetTargetName(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTargetName (element As DependencyObject) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTargetName(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetTargetName : System.Windows.DependencyObject -&gt; string" Usage="System.Windows.Media.Animation.Storyboard.GetTargetName element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="0a4fb-469">要从其中检索 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的时间线。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-469">The timeline from which to retrieve the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />.</span></span></param>
        <summary><span data-ttu-id="0a4fb-470">检索指定的 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 值。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-470">Retrieves the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> value of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span></summary>
        <returns><span data-ttu-id="0a4fb-471">作为 <paramref name="element" /> 的目标的依赖项对象的名称。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-471">The name of the dependency object targeted by <paramref name="element" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-472">此方法获取 <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> 指定对象上的附加属性。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-472">This method gets the <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> attached property on the specified object.</span></span> <span data-ttu-id="0a4fb-473">有关演示图板目标如何工作的详细信息，请参阅 <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-473">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>.</span></span> <span data-ttu-id="0a4fb-474">有关附加属性的工作方式的详细信息，请参阅 [附加属性概述](/dotnet/framework/wpf/advanced/attached-properties-overview)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-474">For more information about how attached properties work, see [Attached Properties Overview](/dotnet/framework/wpf/advanced/attached-properties-overview).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="GetTargetProperty">
      <MemberSignature Language="C#" Value="public static System.Windows.PropertyPath GetTargetProperty (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.PropertyPath GetTargetProperty(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetTargetProperty(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTargetProperty (element As DependencyObject) As PropertyPath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::PropertyPath ^ GetTargetProperty(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetTargetProperty : System.Windows.DependencyObject -&gt; System.Windows.PropertyPath" Usage="System.Windows.Media.Animation.Storyboard.GetTargetProperty element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.PropertyPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="0a4fb-475">要从中获取 <see cref="F:System.Windows.Media.Animation.Storyboard.TargetProperty" /> 的依赖项对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-475">The dependency object from which to get the <see cref="F:System.Windows.Media.Animation.Storyboard.TargetProperty" />.</span></span></param>
        <summary><span data-ttu-id="0a4fb-476">检索指定的 <see cref="F:System.Windows.Media.Animation.Storyboard.TargetProperty" /> 的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 值。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-476">Retrieves the <see cref="F:System.Windows.Media.Animation.Storyboard.TargetProperty" /> value of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span></summary>
        <returns><span data-ttu-id="0a4fb-477">作为 <paramref name="element" /> 的目标的属性。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-477">The property targeted by <paramref name="element" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-478">此方法获取 <xref:System.Windows.Media.Animation.Storyboard.TargetProperty> 指定对象上的附加属性。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-478">This method gets the <xref:System.Windows.Media.Animation.Storyboard.TargetProperty> attached property on the specified object.</span></span> <span data-ttu-id="0a4fb-479">有关演示图板目标如何工作的详细信息，请参阅 <xref:System.Windows.Media.Animation.Storyboard.TargetProperty> 附加属性。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-479">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetProperty> attached property.</span></span> <span data-ttu-id="0a4fb-480">有关附加属性的工作方式的详细信息，请参阅 [附加属性概述](/dotnet/framework/wpf/advanced/attached-properties-overview)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-480">For more information about how attached properties work, see [Attached Properties Overview](/dotnet/framework/wpf/advanced/attached-properties-overview).</span></span>  
  
 <span data-ttu-id="0a4fb-481">请注意，如果 <xref:System.Windows.Media.Animation.Storyboard.TargetProperty> 是在标记中设置的，则此方法将返回一个空 <xref:System.Windows.PropertyPath> 的，因为属性引用在分析后会在内部解析并存储。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-481">Note that if the <xref:System.Windows.Media.Animation.Storyboard.TargetProperty> was set in markup, this method returns an empty <xref:System.Windows.PropertyPath> because the property reference is resolved and stored internally when it is parsed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Pause">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a4fb-482">暂停为此 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-482">Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberSignature Language="F#" Value="member this.Pause : unit -&gt; unit" Usage="storyboard.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a4fb-483">暂停为此 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-483">Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-484">此方法将暂停情节提要，但如果它未处于活动状态或当前已暂停，则没有任何明显的效果。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-484">This method pauses the storyboard, but has no discernible effect if it is not active or currently paused.</span></span> <span data-ttu-id="0a4fb-485">作为副作用，所有关联的子级也会暂停。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-485">As a side effect, all associated children are also paused.</span></span>  
  
 <span data-ttu-id="0a4fb-486">可控制的情节提要可以暂停、恢复、查找、停止和删除。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-486">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="0a4fb-487">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-487">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-488">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-488">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
## <a name="beginning-a-paused-storyboard"></a><span data-ttu-id="0a4fb-489">开始暂停的情节提要</span><span class="sxs-lookup"><span data-stu-id="0a4fb-489">Beginning a Paused Storyboard</span></span>  
 <span data-ttu-id="0a4fb-490">当 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 已暂停的情节提要时，它似乎会恢复并重新启动。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-490">When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart.</span></span> <span data-ttu-id="0a4fb-491">但是，这并不是实际发生的情况。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-491">However, that is not what actually happens.</span></span> <span data-ttu-id="0a4fb-492">此 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 方法会将暂停的替换为新的 <xref:System.Windows.Media.Animation.Storyboard> 未暂停版本。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-492">The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces the paused <xref:System.Windows.Media.Animation.Storyboard> with a new unpaused version.</span></span> <span data-ttu-id="0a4fb-493">每次 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 调用方法时，都会为情节提要创建时钟对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-493">Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard.</span></span> <span data-ttu-id="0a4fb-494">这些时钟会分配给它们的动画属性。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-494">These clocks are distributed to the properties they animate.</span></span> <span data-ttu-id="0a4fb-495">因此，当 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 再次调用该方法时，它不会重新启动其时钟，而是将其替换为新的时钟。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-495">So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Pause : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Pause containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="0a4fb-496">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-496">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="0a4fb-497">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-497">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="0a4fb-498">暂停与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的指定 <see cref="T:System.Windows.FrameworkContentElement" /> 的 <see cref="T:System.Windows.Media.Animation.Clock" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-498">Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> of the specified <see cref="T:System.Windows.FrameworkContentElement" /> associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-499">此方法将暂停情节提要，但如果它未处于活动状态或当前已暂停，则没有任何明显的效果。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-499">This method pauses the storyboard, but has no discernible effect if it is not active or currently paused.</span></span> <span data-ttu-id="0a4fb-500">作为副作用，所有关联的子级也会暂停。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-500">As a side effect, all associated children are also paused.</span></span>  
  
 <span data-ttu-id="0a4fb-501">查找已暂停的情节提要不会将其恢复。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-501">Seeking a paused storyboard does not resume it.</span></span> <span data-ttu-id="0a4fb-502">恢复暂停的情节提要的唯一方法是使用 <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-502">The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method.</span></span> <span data-ttu-id="0a4fb-503">再次调用 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 方法会将暂停的情节提要替换为新的情节提要，这具有恢复它的外观。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-503">Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method again replaces the paused storyboard with a new one, which has the appearance of resuming it.</span></span>  
  
 <span data-ttu-id="0a4fb-504">若要以交互方式控制此情节提要，在 `containingObject` 调用用于开始情节提要的交互式方法时，必须使用相同的参数。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-504">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="0a4fb-505">可控制的情节提要可以暂停、恢复、查找、停止和删除。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-505">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="0a4fb-506">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-506">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-507">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-507">Fro an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
 <span data-ttu-id="0a4fb-508">暂停演示图板的时钟会触发 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 事件。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-508">Pausing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
## <a name="beginning-a-paused-storyboard"></a><span data-ttu-id="0a4fb-509">开始暂停的情节提要</span><span class="sxs-lookup"><span data-stu-id="0a4fb-509">Beginning a Paused Storyboard</span></span>  
 <span data-ttu-id="0a4fb-510">当 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 已暂停的情节提要时，它似乎会恢复并重新启动。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-510">When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart.</span></span> <span data-ttu-id="0a4fb-511">但是，这并不是实际发生的情况。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-511">However, that is not what actually happens.</span></span> <span data-ttu-id="0a4fb-512">此 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 方法实际会将自身替换为未暂停版本。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-512">The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces itself with an unpaused version.</span></span> <span data-ttu-id="0a4fb-513">每次 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 调用方法时，都会为情节提要创建时钟对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-513">Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard.</span></span> <span data-ttu-id="0a4fb-514">这些时钟会分配给它们的动画属性。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-514">These clocks are distributed to the properties they animate.</span></span> <span data-ttu-id="0a4fb-515">因此，当 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 再次调用该方法时，它不会重新启动其时钟，而是将其替换为新的时钟。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-515">So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fb-516">下面的示例使用可控制的情节提要对进行动画处理 <xref:System.Windows.Media.TextEffect> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-516">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="0a4fb-517"><xref:System.Windows.Media.TextEffect>包含在 <xref:System.Windows.FrameworkContentElement> 的名称作用域内。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-517">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)" />
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Pause : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Pause containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="0a4fb-518">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-518">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="0a4fb-519">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-519">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="0a4fb-520">暂停与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的指定 <see cref="T:System.Windows.FrameworkElement" /> 的 <see cref="T:System.Windows.Media.Animation.Clock" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-520">Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> of the specified <see cref="T:System.Windows.FrameworkElement" /> associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-521">此方法将暂停情节提要，但如果它未处于活动状态或当前已暂停，则没有任何明显的效果。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-521">This method pauses the storyboard, but has no discernible effect if it is not active or currently paused.</span></span> <span data-ttu-id="0a4fb-522">作为副作用，所有关联的子级也会暂停。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-522">As a side effect, all associated children are also paused.</span></span>  
  
 <span data-ttu-id="0a4fb-523">查找已暂停的情节提要不会将其恢复。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-523">Seeking a paused storyboard does not resume it.</span></span> <span data-ttu-id="0a4fb-524">恢复暂停的情节提要的唯一方法是使用 <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-524">The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method.</span></span> <span data-ttu-id="0a4fb-525">再次调用 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 方法会将暂停的情节提要替换为新的情节提要，这具有恢复它的外观。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-525">Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method again replaces the paused storyboard with a new one, which has the appearance of resuming it.</span></span>  
  
 <span data-ttu-id="0a4fb-526">若要以交互方式控制此情节提要，在 `containingObject` 调用用于开始情节提要的交互式方法时，必须使用相同的参数。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-526">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="0a4fb-527">可控制的情节提要可以暂停、恢复、查找、停止和删除。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-527">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="0a4fb-528">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-528">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-529">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-529">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
 <span data-ttu-id="0a4fb-530">暂停演示图板的时钟会触发 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 事件。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-530">Pausing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
## <a name="beginning-a-paused-storyboard"></a><span data-ttu-id="0a4fb-531">开始暂停的情节提要</span><span class="sxs-lookup"><span data-stu-id="0a4fb-531">Beginning a Paused Storyboard</span></span>  
 <span data-ttu-id="0a4fb-532">当 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 已暂停的情节提要时，它似乎会恢复并重新启动。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-532">When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart.</span></span> <span data-ttu-id="0a4fb-533">但是，这并不是实际发生的情况。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-533">However, that is not what actually happens.</span></span> <span data-ttu-id="0a4fb-534">此 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 方法实际会将自身替换为未暂停版本。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-534">The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces itself with an unpaused version.</span></span> <span data-ttu-id="0a4fb-535">每次 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 调用方法时，都会为情节提要创建时钟对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-535">Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard.</span></span> <span data-ttu-id="0a4fb-536">这些时钟会分配给它们的动画属性。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-536">These clocks are distributed to the properties they animate.</span></span> <span data-ttu-id="0a4fb-537">因此，当 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 再次调用该方法时，它不会重新启动其时钟，而是将其替换为新的时钟。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-537">So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a4fb-538">删除为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象</span><span class="sxs-lookup"><span data-stu-id="0a4fb-538">Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span> <span data-ttu-id="0a4fb-539">无论其 <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> 设置如何，属于此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的动画将不再影响曾尤其进行动画处理的属性。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-539">Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove();" />
      <MemberSignature Language="F#" Value="member this.Remove : unit -&gt; unit" Usage="storyboard.Remove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a4fb-540">删除为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象</span><span class="sxs-lookup"><span data-stu-id="0a4fb-540">Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span> <span data-ttu-id="0a4fb-541">无论其 <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> 设置如何，属于此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的动画将不再影响曾尤其进行动画处理的属性。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-541">Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-542">可控制的情节提要可以暂停、恢复、查找、停止和删除。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-542">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="0a4fb-543">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-543">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-544">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-544">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
 <span data-ttu-id="0a4fb-545">对执行的所有交互式操作 <xref:System.Windows.Media.Animation.Clock> ，因此也 <xref:System.Windows.Media.Animation.Storyboard> 会出现在计时引擎的下一个时钟周期内，这会在下一次呈现之前发生。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-545">All interactive actions taken on a <xref:System.Windows.Media.Animation.Clock>, and therefore also on a <xref:System.Windows.Media.Animation.Storyboard>, occur on the next tick of the timing engine, which happens shortly before the next render.</span></span> <span data-ttu-id="0a4fb-546">这意味着该 <xref:System.Windows.Media.Animation.Storyboard.Remove%2A> 方法在此之前仍会影响动画属性。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-546">This means that the <xref:System.Windows.Media.Animation.Storyboard.Remove%2A> method still affects the animated properties until this time.</span></span> <span data-ttu-id="0a4fb-547">换句话说，下一次显示帧时，将删除该情节提要。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-547">In other words, the next time the frame is displayed, the storyboard is removed.</span></span> <span data-ttu-id="0a4fb-548">如果需要在此时间之前将动画与属性解除关联，请将 <xref:System.Windows.UIElement.BeginAnimation%2A> 方法与 `animation` 参数值一起使用 `null` 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-548">If you need to disassociate an animation from a property before this time, use the <xref:System.Windows.UIElement.BeginAnimation%2A> method with an `animation` parameter value of `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Remove containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="0a4fb-549">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-549">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="0a4fb-550">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-550">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="0a4fb-551">删除为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象</span><span class="sxs-lookup"><span data-stu-id="0a4fb-551">Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span> <span data-ttu-id="0a4fb-552">无论其 <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> 设置如何，属于此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的动画将不再影响曾尤其进行动画处理的属性。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-552">Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-553">若要以交互方式控制此情节提要，在 `containingObject` 调用用于开始情节提要的交互式方法时，必须使用相同的参数。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-553">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="0a4fb-554">可控制的情节提要可以暂停、恢复、查找、停止和删除。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-554">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="0a4fb-555">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-555">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-556">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-556">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
 <span data-ttu-id="0a4fb-557">删除情节提要的时钟会触发该 <xref:System.Windows.Media.Animation.Timeline.RemoveRequested> 事件。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-557">Removing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.RemoveRequested> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Remove containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="0a4fb-558">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-558">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="0a4fb-559">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-559">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="0a4fb-560">删除为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象</span><span class="sxs-lookup"><span data-stu-id="0a4fb-560">Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span> <span data-ttu-id="0a4fb-561">无论其 <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> 设置如何，属于此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的动画将不再影响曾尤其进行动画处理的属性。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-561">Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-562">若要以交互方式控制此情节提要，在 `containingObject` 调用用于开始情节提要的交互式方法时，必须使用相同的参数。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-562">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="0a4fb-563">可控制的情节提要可以暂停、恢复、查找、停止和删除。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-563">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="0a4fb-564">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-564">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-565">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-565">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
 <span data-ttu-id="0a4fb-566">删除情节提要的时钟会触发该 <xref:System.Windows.Media.Animation.Timeline.RemoveRequested> 事件。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-566">Removing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.RemoveRequested> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resume">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a4fb-567">恢复为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-567">Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="storyboard.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a4fb-568">恢复为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-568">Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-569">可控制的情节提要可以暂停、恢复、查找、停止和删除。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-569">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="0a4fb-570">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-570">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-571">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-571">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Resume : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Resume containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="0a4fb-572">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-572">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="0a4fb-573">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-573">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="0a4fb-574">恢复为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-574">Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-575">恢复未暂停的情节提要不起作用。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-575">Resuming a storyboard that is not paused has no effect.</span></span>  
  
 <span data-ttu-id="0a4fb-576">若要以交互方式控制此情节提要，在 `containingObject` 调用用于开始情节提要的交互式方法时，必须使用相同的参数。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-576">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="0a4fb-577">可控制的情节提要可以暂停、恢复、查找、停止和删除。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-577">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="0a4fb-578">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-578">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-579">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-579">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
 <span data-ttu-id="0a4fb-580">查找已暂停的情节提要不会将其恢复。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-580">Seeking a paused storyboard does not resume it.</span></span> <span data-ttu-id="0a4fb-581">恢复暂停的情节提要的唯一方法是使用 <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-581">The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method.</span></span> <span data-ttu-id="0a4fb-582">在 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 情节提要启动后调用方法会替换旧的情节提要，这看起来是恢复它的外观。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-582">Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method after the storyboard has started replaces the old storyboard, which has the appearance of resuming it.</span></span>  
  
 <span data-ttu-id="0a4fb-583">恢复暂停的情节提要的时钟会触发 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 事件。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-583">Resuming a paused a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fb-584">下面的示例使用可控制的情节提要对进行动画处理 <xref:System.Windows.Media.TextEffect> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-584">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="0a4fb-585"><xref:System.Windows.Media.TextEffect>包含在 <xref:System.Windows.FrameworkContentElement> 的名称作用域内。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-585">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)" />
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Resume : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Resume containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="0a4fb-586">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-586">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="0a4fb-587">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-587">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="0a4fb-588">恢复为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-588">Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-589">恢复未暂停的情节提要不起作用。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-589">Resuming a storyboard that is not paused has no effect.</span></span>  
  
 <span data-ttu-id="0a4fb-590">若要以交互方式控制此情节提要，在 `containingObject` 调用用于开始情节提要的交互式方法时，必须使用相同的参数。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-590">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="0a4fb-591">可控制的情节提要可以暂停、恢复、查找、停止和删除。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-591">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="0a4fb-592">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-592">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-593">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-593">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
 <span data-ttu-id="0a4fb-594">查找已暂停的情节提要不会将其恢复。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-594">Seeking a paused storyboard does not resume it.</span></span> <span data-ttu-id="0a4fb-595">恢复暂停的情节提要的唯一方法是使用 <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-595">The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method.</span></span> <span data-ttu-id="0a4fb-596">在 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 情节提要启动后调用方法会替换旧的情节提要，这看起来是恢复它的外观。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-596">Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method after the storyboard has started replaces the old storyboard, which has the appearance of resuming it.</span></span>  
  
 <span data-ttu-id="0a4fb-597">恢复暂停的情节提要的时钟会触发 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 事件。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-597">Resuming a paused a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Seek">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a4fb-598">在时钟下一次走动时将此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 定位到新位置。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-598">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position when the next clock tick occurs.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (offset As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(TimeSpan offset);" />
      <MemberSignature Language="F#" Value="member this.Seek : TimeSpan -&gt; unit" Usage="storyboard.Seek offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="0a4fb-599">一个正值或负值，用来描述时间线应向前或向后移动的量。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-599">A positive or negative value that describes the amount by which the timeline should move forward or backward.</span></span></param>
        <summary><span data-ttu-id="0a4fb-600">将此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 定位到指定位置。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-600">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position.</span></span> <span data-ttu-id="0a4fb-601"><see cref="T:System.Windows.Media.Animation.Storyboard" /> 在时钟下一次走动时执行请求的定位操作。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-601">The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-602">请注意，查找操作不会考虑情节提要的 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 或 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 设置。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-602">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="0a4fb-603">将该情节提要视为具有 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 和 no 的 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-603">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="0a4fb-604">若要以交互方式控制此情节提要，在 `containingObject` 调用用于开始情节提要的交互式方法时，必须使用相同的参数。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-604">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="0a4fb-605">可控制的情节提要可以暂停、恢复、查找、停止和删除。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-605">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="0a4fb-606">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-606">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-607">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-607">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.Seek : TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="0a4fb-608">一个正值或负值，它表示时间线应从指定的 <paramref name="origin" /> 向前或向后移动的量。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-608">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <paramref name="origin" />.</span></span></param>
        <param name="origin"><span data-ttu-id="0a4fb-609">从此处应用 <paramref name="offset" /> 的位置。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-609">The position from which <paramref name="offset" /> is applied.</span></span></param>
        <summary><span data-ttu-id="0a4fb-610">将此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 定位到指定位置。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-610">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position.</span></span> <span data-ttu-id="0a4fb-611"><see cref="T:System.Windows.Media.Animation.Storyboard" /> 在时钟下一次走动时执行请求的定位操作。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-611">The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-612">请注意，查找操作不会考虑情节提要的 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 或 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 设置。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-612">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="0a4fb-613">将该情节提要视为具有 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 和 no 的 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-613">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="0a4fb-614">若要以交互方式控制此情节提要，在 `containingObject` 调用用于开始情节提要的交互式方法时，必须使用相同的参数。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-614">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="0a4fb-615">可控制的情节提要可以暂停、恢复、查找、停止和删除。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-615">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="0a4fb-616">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-616">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-617">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-617">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (System.Windows.FrameworkContentElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(class System.Windows.FrameworkContentElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (containingObject As FrameworkContentElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(System::Windows::FrameworkContentElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.Seek : System.Windows.FrameworkContentElement * TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.Seek (containingObject, offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="0a4fb-618">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-618">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="0a4fb-619">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-619">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <param name="offset"><span data-ttu-id="0a4fb-620">一个正值或负值，它表示时间线应从指定的 <paramref name="origin" /> 向前或向后移动的量。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-620">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <paramref name="origin" />.</span></span></param>
        <param name="origin"><span data-ttu-id="0a4fb-621">从此处应用 <paramref name="offset" /> 的位置。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-621">The position from which <paramref name="offset" /> is applied.</span></span></param>
        <summary><span data-ttu-id="0a4fb-622">将此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 定位到指定位置。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-622">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position.</span></span> <span data-ttu-id="0a4fb-623"><see cref="T:System.Windows.Media.Animation.Storyboard" /> 在时钟下一次走动时执行请求的定位操作。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-623">The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-624">请注意，查找操作不会考虑情节提要的 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 或 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 设置。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-624">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="0a4fb-625">将该情节提要视为具有 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 和 no 的 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-625">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="0a4fb-626">此方法将情节提要时钟的更改 <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> 为 <xref:System.Windows.Media.Animation.ClockState.Active> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-626">This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to <xref:System.Windows.Media.Animation.ClockState.Active>.</span></span> <span data-ttu-id="0a4fb-627">直到下一次处理计时周期时，此方法才会对计时树产生任何影响。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-627">This method has no effect on the timing tree until the next time a tick is processed.</span></span> <span data-ttu-id="0a4fb-628">副作用是，在此之前，也不会引发相应的事件。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-628">As a side-effect, the appropriate events are also not raised until then.</span></span>  
  
 <span data-ttu-id="0a4fb-629">若要以交互方式控制此情节提要，在 `containingObject` 调用用于开始情节提要的交互式方法时，必须使用相同的参数。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-629">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="0a4fb-630">可控制的情节提要可以暂停、恢复、查找、停止和删除。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-630">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="0a4fb-631">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-631">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-632">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-632">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
 <span data-ttu-id="0a4fb-633">查找情节提要会触发 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 和 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 事件。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-633">Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fb-634">下面的示例演示了 <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> 和 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-634">The following example shows both the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> and <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> methods.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementSeekExample.cs#frameworkcontentelementseekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementseekexample.vb#frameworkcontentelementseekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (System.Windows.FrameworkElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(class System.Windows.FrameworkElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (containingObject As FrameworkElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(System::Windows::FrameworkElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.Seek : System.Windows.FrameworkElement * TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.Seek (containingObject, offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="0a4fb-635">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-635">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="0a4fb-636">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-636">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <param name="offset"><span data-ttu-id="0a4fb-637">一个正值或负值，它表示时间线应从指定的 <paramref name="origin" /> 向前或向后移动的量。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-637">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <paramref name="origin" />.</span></span></param>
        <param name="origin"><span data-ttu-id="0a4fb-638">从此处应用 <paramref name="offset" /> 的位置。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-638">The position from which <paramref name="offset" /> is applied.</span></span></param>
        <summary><span data-ttu-id="0a4fb-639">将此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 定位到指定位置。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-639">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position.</span></span> <span data-ttu-id="0a4fb-640"><see cref="T:System.Windows.Media.Animation.Storyboard" /> 在时钟下一次走动时执行请求的定位操作。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-640">The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-641">请注意，查找操作不会考虑情节提要的 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 或 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 设置。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-641">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="0a4fb-642">将该情节提要视为具有 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 和 no 的 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-642">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="0a4fb-643">此方法将情节提要时钟的更改 <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> 为 <xref:System.Windows.Media.Animation.ClockState.Active> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-643">This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to <xref:System.Windows.Media.Animation.ClockState.Active>.</span></span> <span data-ttu-id="0a4fb-644">直到下一次处理计时周期时，此方法才会对计时树产生任何影响。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-644">This method has no effect on the timing tree until the next time a tick is processed.</span></span> <span data-ttu-id="0a4fb-645">副作用是，在此之前，也不会引发相应的事件。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-645">As a side-effect, the appropriate events are also not raised until then.</span></span>  
  
 <span data-ttu-id="0a4fb-646">若要以交互方式控制此情节提要，在 `containingObject` 调用用于开始情节提要的交互式方法时，必须使用相同的参数。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-646">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="0a4fb-647">可控制的情节提要可以暂停、恢复、查找、停止和删除，如果它可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-647">A controllable storyboard can pause, resume, seek, stop, and be removed if it is made controllable.</span></span> <span data-ttu-id="0a4fb-648">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-648">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-649">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-649">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
 <span data-ttu-id="0a4fb-650">查找情节提要会触发 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 和 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 事件。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-650">Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fb-651">下面的示例演示如何在情节提要开始后查找 (skip) 到一秒钟。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-651">The following example shows how to seek (skip) to one second after a Storyboard begins.</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#SeekStoryboardExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/SeekStoryboardExample.cs#seekstoryboardexamplewholepage)]
 [!code-vb[timingbehaviors_procedural_snip#SeekStoryboardExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/seekstoryboardexample.vb#seekstoryboardexamplewholepage)]  
  
 <span data-ttu-id="0a4fb-652">下一个示例显示 <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> 和 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-652">The next example shows both the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> and <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> methods.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/SeekExample.cs#seekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/seekexample.vb#seekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SeekAlignedToLastTick">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a4fb-653">立即将此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 指定到新位置（同步）。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-653">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (offset As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(TimeSpan offset);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : TimeSpan -&gt; unit" Usage="storyboard.SeekAlignedToLastTick offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="0a4fb-654">一个正值或负值，用来描述时间线应向前或向后移动的量。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-654">A positive or negative value that describes the amount by which the timeline should move forward or backward.</span></span></param>
        <summary><span data-ttu-id="0a4fb-655">立即将此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 指定到新位置（同步）。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-655">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-656"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> 将的 seeked 时间 <xref:System.Windows.Media.Animation.Storyboard> 与上一个时钟周期进行对齐。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-656"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick.</span></span> <span data-ttu-id="0a4fb-657">值会立即更新以反映所做的更改 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> ，即使屏幕更新后屏幕不会反映这些更改。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-657">Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.</span></span>  
  
 <span data-ttu-id="0a4fb-658">请注意，查找操作不会考虑情节提要的 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 或 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 设置。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-658">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="0a4fb-659">将该情节提要视为具有 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 和 no 的 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-659">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="0a4fb-660">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-660">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-661">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-661">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.SeekAlignedToLastTick (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="0a4fb-662">一个正值或负值，它表示时间线应从指定的 <paramref name="origin" /> 向前或向后移动的量。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-662">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <paramref name="origin" />.</span></span></param>
        <param name="origin"><span data-ttu-id="0a4fb-663">从此处应用 <paramref name="offset" /> 的位置。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-663">The position from which <paramref name="offset" /> is applied.</span></span></param>
        <summary><span data-ttu-id="0a4fb-664">立即将此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 指定到新位置（同步）。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-664">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-665"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> 将的 seeked 时间 <xref:System.Windows.Media.Animation.Storyboard> 与上一个时钟周期进行对齐。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-665"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick.</span></span> <span data-ttu-id="0a4fb-666">值会立即更新以反映所做的更改 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> ，即使屏幕更新后屏幕不会反映这些更改。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-666">Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.</span></span>  
  
 <span data-ttu-id="0a4fb-667">请注意，查找操作不会考虑情节提要的 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 或 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 设置。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-667">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="0a4fb-668">将该情节提要视为具有 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 和 no 的 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-668">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="0a4fb-669">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-669">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-670">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-670">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (System.Windows.FrameworkContentElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(class System.Windows.FrameworkContentElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (containingObject As FrameworkContentElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(System::Windows::FrameworkContentElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : System.Windows.FrameworkContentElement * TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.SeekAlignedToLastTick (containingObject, offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="0a4fb-671">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-671">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="0a4fb-672">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-672">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <param name="offset"><span data-ttu-id="0a4fb-673">一个正值或负值，它表示时间线应从指定的 <paramref name="origin" /> 向前或向后移动的量。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-673">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <paramref name="origin" />.</span></span></param>
        <param name="origin"><span data-ttu-id="0a4fb-674">从此处应用 <paramref name="offset" /> 的位置。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-674">The position from which <paramref name="offset" /> is applied.</span></span></param>
        <summary><span data-ttu-id="0a4fb-675">立即将此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 指定到新位置（同步）。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-675">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-676"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> 将的 seeked 时间 <xref:System.Windows.Media.Animation.Storyboard> 与上一个时钟周期进行对齐。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-676"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick.</span></span> <span data-ttu-id="0a4fb-677">值会立即更新以反映所做的更改 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> ，即使屏幕更新后屏幕不会反映这些更改。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-677">Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.</span></span>  
  
 <span data-ttu-id="0a4fb-678">请注意，查找操作不会考虑情节提要的 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 或 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 设置。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-678">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="0a4fb-679">将该情节提要视为具有 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 和 no 的 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-679">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="0a4fb-680">此方法将情节提要时钟的更改 <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> 为</span><span class="sxs-lookup"><span data-stu-id="0a4fb-680">This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to</span></span>  
  
 <span data-ttu-id="0a4fb-681"><xref:System.Windows.Media.Animation.ClockState.Active>.</span><span class="sxs-lookup"><span data-stu-id="0a4fb-681"><xref:System.Windows.Media.Animation.ClockState.Active>.</span></span>  
  
 <span data-ttu-id="0a4fb-682">查找情节提要会触发 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 和 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 事件。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-682">Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
 <span data-ttu-id="0a4fb-683">若要以交互方式控制此情节提要，在 `containingObject` 调用用于开始情节提要的交互式方法时，必须使用相同的参数。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-683">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="0a4fb-684">可控制的情节提要可以暂停、恢复、查找、停止和删除。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-684">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="0a4fb-685">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-685">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-686">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-686">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fb-687">下面的示例演示了 <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> 和 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-687">The following example shows both the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> and <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> methods.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementSeekExample.cs#frameworkcontentelementseekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementseekexample.vb#frameworkcontentelementseekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (System.Windows.FrameworkElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(class System.Windows.FrameworkElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (containingObject As FrameworkElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(System::Windows::FrameworkElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : System.Windows.FrameworkElement * TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.SeekAlignedToLastTick (containingObject, offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="0a4fb-688">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-688">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="0a4fb-689">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-689">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <param name="offset"><span data-ttu-id="0a4fb-690">一个正值或负值，它表示时间线应从指定的 <paramref name="origin" /> 向前或向后移动的量。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-690">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <paramref name="origin" />.</span></span></param>
        <param name="origin"><span data-ttu-id="0a4fb-691">从此处应用 <paramref name="offset" /> 的位置。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-691">The position from which <paramref name="offset" /> is applied.</span></span></param>
        <summary><span data-ttu-id="0a4fb-692">立即将此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 指定到新位置（同步）。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-692">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-693"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> 将的 seeked 时间 <xref:System.Windows.Media.Animation.Storyboard> 与上一个时钟周期进行对齐。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-693"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick.</span></span> <span data-ttu-id="0a4fb-694">值会立即更新以反映所做的更改 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> ，即使屏幕更新后屏幕不会反映这些更改。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-694">Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.</span></span>  
  
 <span data-ttu-id="0a4fb-695">请注意，查找操作不会考虑情节提要的 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 或 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 设置。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-695">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="0a4fb-696">将该情节提要视为具有 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 和 no 的 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-696">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="0a4fb-697">此方法将情节提要时钟的更改 <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> 为</span><span class="sxs-lookup"><span data-stu-id="0a4fb-697">This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to</span></span>  
  
 <span data-ttu-id="0a4fb-698"><xref:System.Windows.Media.Animation.ClockState.Active>.</span><span class="sxs-lookup"><span data-stu-id="0a4fb-698"><xref:System.Windows.Media.Animation.ClockState.Active>.</span></span>  
  
 <span data-ttu-id="0a4fb-699">查找情节提要会触发 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 和 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 事件。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-699">Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
 <span data-ttu-id="0a4fb-700">若要以交互方式控制此情节提要，在 `containingObject` 调用用于开始情节提要的交互式方法时，必须使用相同的参数。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-700">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="0a4fb-701">可控制的情节提要可以暂停、恢复、查找、停止和删除。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-701">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="0a4fb-702">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-702">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-703">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-703">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fb-704">下面的示例演示了 <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> 和 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-704">The following example shows both the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> and <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> methods.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/SeekExample.cs#seekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/seekexample.vb#seekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetSpeedRatio">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a4fb-705">设置为此 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的交互速度比。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-705">Sets the interactive speed ratio for the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetSpeedRatio">
      <MemberSignature Language="C#" Value="public void SetSpeedRatio (double speedRatio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSpeedRatio(float64 speedRatio) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSpeedRatio (speedRatio As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSpeedRatio(double speedRatio);" />
      <MemberSignature Language="F#" Value="member this.SetSpeedRatio : double -&gt; unit" Usage="storyboard.SetSpeedRatio speedRatio" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="speedRatio" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="speedRatio"><span data-ttu-id="0a4fb-706">大于零的有限值，该值为 storyboard 的新的交互式速比。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-706">A finite value greater than zero that is the new interactive speed ratio of the storyboard.</span></span> <span data-ttu-id="0a4fb-707">该值乘以 storyboard 的 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 值可确定 storyboard 的有效速度。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-707">This value is multiplied against the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> value to determine the storyboard's effective speed.</span></span> <span data-ttu-id="0a4fb-708">该值不会覆盖 storyboard 的 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-708">This value does not overwrite the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> property.</span></span> <span data-ttu-id="0a4fb-709">例如，调用该方法，并且为 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 值为 0.5 的 storyboard 指定交互式速比 3，则 storyboard 的有效速度为 1.5。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-709">For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> of 0.5 gives the storyboard an effective speed of 1.5.</span></span></param>
        <summary><span data-ttu-id="0a4fb-710">设置为此 <see cref="T:System.Windows.Media.Animation.Clock" /> 创建的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的交互速度比。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-710">Sets the interactive speed ratio for the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-711">可控制的情节提要可以暂停、恢复、查找、停止和删除。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-711">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="0a4fb-712">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-712">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-713">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-713">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSpeedRatio">
      <MemberSignature Language="C#" Value="public void SetSpeedRatio (System.Windows.FrameworkContentElement containingObject, double speedRatio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSpeedRatio(class System.Windows.FrameworkContentElement containingObject, float64 speedRatio) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkContentElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSpeedRatio (containingObject As FrameworkContentElement, speedRatio As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSpeedRatio(System::Windows::FrameworkContentElement ^ containingObject, double speedRatio);" />
      <MemberSignature Language="F#" Value="member this.SetSpeedRatio : System.Windows.FrameworkContentElement * double -&gt; unit" Usage="storyboard.SetSpeedRatio (containingObject, speedRatio)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="speedRatio" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="0a4fb-714">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-714">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="0a4fb-715">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-715">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <param name="speedRatio"><span data-ttu-id="0a4fb-716">大于零的有限值，该值为 storyboard 的新的交互式速比。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-716">A finite value greater than zero that is the new interactive speed ratio of the storyboard.</span></span> <span data-ttu-id="0a4fb-717">该值乘以 storyboard 的 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 值可确定 storyboard 的有效速度。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-717">This value is multiplied against the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> value to determine the storyboard's effective speed.</span></span> <span data-ttu-id="0a4fb-718">该值不会覆盖 storyboard 的 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-718">This value does not overwrite the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> property.</span></span> <span data-ttu-id="0a4fb-719">例如，调用该方法，并且为 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 值为 0.5 的 storyboard 指定交互式速比 3，则 storyboard 的有效速度为 1.5。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-719">For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> of 0.5 gives the storyboard an effective speed of 1.5.</span></span></param>
        <summary><span data-ttu-id="0a4fb-720">设置为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的交互式速比。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-720">Sets the interactive speed ratio of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-721">若要以交互方式控制此情节提要，在 `containingObject` 调用用于开始情节提要的交互式方法时，必须使用相同的参数。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-721">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="0a4fb-722">可控制的情节提要可以暂停、恢复、查找、停止和删除。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-722">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="0a4fb-723">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-723">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-724">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-724">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
 <span data-ttu-id="0a4fb-725">调用此方法将触发 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 事件。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-725">Calling this method triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fb-726">下面的示例使用可控制的情节提要对进行动画处理 <xref:System.Windows.Media.TextEffect> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-726">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="0a4fb-727"><xref:System.Windows.Media.TextEffect>包含在 <xref:System.Windows.FrameworkContentElement> 的名称作用域内。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-727">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSpeedRatio">
      <MemberSignature Language="C#" Value="public void SetSpeedRatio (System.Windows.FrameworkElement containingObject, double speedRatio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSpeedRatio(class System.Windows.FrameworkElement containingObject, float64 speedRatio) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSpeedRatio (containingObject As FrameworkElement, speedRatio As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSpeedRatio(System::Windows::FrameworkElement ^ containingObject, double speedRatio);" />
      <MemberSignature Language="F#" Value="member this.SetSpeedRatio : System.Windows.FrameworkElement * double -&gt; unit" Usage="storyboard.SetSpeedRatio (containingObject, speedRatio)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="speedRatio" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="0a4fb-728">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-728">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="0a4fb-729">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-729">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <param name="speedRatio"><span data-ttu-id="0a4fb-730">大于零的有限值，该值为 storyboard 的新的交互式速比。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-730">A finite value greater than zero that is the new interactive speed ratio of the storyboard.</span></span> <span data-ttu-id="0a4fb-731">该值乘以 storyboard 的 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 值可确定 storyboard 的有效速度。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-731">This value is multiplied against the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> value to determine the storyboard's effective speed.</span></span> <span data-ttu-id="0a4fb-732">该值不会覆盖 storyboard 的 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-732">This value does not overwrite the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> property.</span></span> <span data-ttu-id="0a4fb-733">例如，调用该方法，并且为 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 值为 0.5 的 storyboard 指定交互式速比 3，则 storyboard 的有效速度为 1.5。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-733">For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> of 0.5 gives the storyboard an effective speed of 1.5.</span></span></param>
        <summary><span data-ttu-id="0a4fb-734">设置为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的交互式速比。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-734">Sets the interactive speed ratio of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-735">若要以交互方式控制此情节提要，在 `containingObject` 调用用于开始情节提要的交互式方法时，必须使用相同的参数。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-735">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="0a4fb-736">可控制的情节提要可以暂停、恢复、查找、停止和删除。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-736">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="0a4fb-737">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-737">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-738">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-738">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
 <span data-ttu-id="0a4fb-739">调用此方法将触发 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 事件。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-739">Calling this method triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTarget">
      <MemberSignature Language="C#" Value="public static void SetTarget (System.Windows.DependencyObject element, System.Windows.DependencyObject value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTarget(class System.Windows.DependencyObject element, class System.Windows.DependencyObject value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetTarget(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTarget (element As DependencyObject, value As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTarget(System::Windows::DependencyObject ^ element, System::Windows::DependencyObject ^ value);" />
      <MemberSignature Language="F#" Value="static member SetTarget : System.Windows.DependencyObject * System.Windows.DependencyObject -&gt; unit" Usage="System.Windows.Media.Animation.Storyboard.SetTarget (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="0a4fb-740">应面向指定依赖对象的 <see cref="T:System.Windows.Media.Animation.Timeline" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-740">The <see cref="T:System.Windows.Media.Animation.Timeline" /> that should target the specified dependency object.</span></span></param>
        <param name="value"><span data-ttu-id="0a4fb-741">要作为目标的依赖项对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-741">The dependency object to target.</span></span></param>
        <summary><span data-ttu-id="0a4fb-742">使指定的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 以此依赖项对象为目标。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-742">Makes the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> target the dependency object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-743">此方法设置 <xref:System.Windows.Media.Animation.Storyboard.Target%2A> 指定对象上的附加属性。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-743">This method sets the <xref:System.Windows.Media.Animation.Storyboard.Target%2A> attached property on the specified object.</span></span> <span data-ttu-id="0a4fb-744">有关演示图板目标如何工作的详细信息，请参阅 <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-744">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>.</span></span> <span data-ttu-id="0a4fb-745">有关附加属性的工作方式的详细信息，请参阅 [附加属性概述](/dotnet/framework/wpf/advanced/attached-properties-overview)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-745">For more information about how attached properties work, see [Attached Properties Overview](/dotnet/framework/wpf/advanced/attached-properties-overview).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a4fb-746"><xref:System.Windows.Media.Animation.Storyboard.Target%2A>属性不可序列化，因为它可以设置为 any <xref:System.Windows.DependencyObject> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-746">The <xref:System.Windows.Media.Animation.Storyboard.Target%2A> property is not serializable, because it can be set to any <xref:System.Windows.DependencyObject>.</span></span> <span data-ttu-id="0a4fb-747">不保证可以从 XAML 正确引用此对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-747">It is not guaranteed that this object can be correctly referenced from XAML.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="SetTargetName">
      <MemberSignature Language="C#" Value="public static void SetTargetName (System.Windows.DependencyObject element, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTargetName(class System.Windows.DependencyObject element, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetTargetName(System.Windows.DependencyObject,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTargetName (element As DependencyObject, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTargetName(System::Windows::DependencyObject ^ element, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member SetTargetName : System.Windows.DependencyObject * string -&gt; unit" Usage="System.Windows.Media.Animation.Storyboard.SetTargetName (element, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="0a4fb-748">应面向指定依赖对象的 <see cref="T:System.Windows.Media.Animation.Timeline" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-748">The <see cref="T:System.Windows.Media.Animation.Timeline" /> that should target the specified dependency object.</span></span></param>
        <param name="name"><span data-ttu-id="0a4fb-749">要面向的依赖对象的名称。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-749">The name of the dependency object to target.</span></span></param>
        <summary><span data-ttu-id="0a4fb-750">使指定的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 面向具有指定名称的依赖属性。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-750">Makes the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> target the dependency object with the specified name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-751">此方法设置 <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> 指定对象上的附加属性。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-751">This method sets the <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> attached property on the specified object.</span></span> <span data-ttu-id="0a4fb-752">有关演示图板目标如何工作的详细信息，请参阅 <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-752">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>.</span></span> <span data-ttu-id="0a4fb-753">有关附加属性的工作方式的详细信息，请参阅 [附加属性概述](/dotnet/framework/wpf/advanced/attached-properties-overview)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-753">For more information about how attached properties work, see [Attached Properties Overview](/dotnet/framework/wpf/advanced/attached-properties-overview).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="SetTargetProperty">
      <MemberSignature Language="C#" Value="public static void SetTargetProperty (System.Windows.DependencyObject element, System.Windows.PropertyPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTargetProperty(class System.Windows.DependencyObject element, class System.Windows.PropertyPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetTargetProperty(System.Windows.DependencyObject,System.Windows.PropertyPath)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTargetProperty (element As DependencyObject, path As PropertyPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTargetProperty(System::Windows::DependencyObject ^ element, System::Windows::PropertyPath ^ path);" />
      <MemberSignature Language="F#" Value="static member SetTargetProperty : System.Windows.DependencyObject * System.Windows.PropertyPath -&gt; unit" Usage="System.Windows.Media.Animation.Storyboard.SetTargetProperty (element, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="path" Type="System.Windows.PropertyPath" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="0a4fb-754">要与指定的依赖属性关联的 <see cref="T:System.Windows.Media.Animation.Timeline" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-754">The <see cref="T:System.Windows.Media.Animation.Timeline" /> with which to associate the specified dependency property.</span></span></param>
        <param name="path"><span data-ttu-id="0a4fb-755">描述要进行动画处理的依赖属性的路径。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-755">A path that describe the dependency property to be animated.</span></span></param>
        <summary><span data-ttu-id="0a4fb-756">使指定的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 目标成为指定的依赖属性。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-756">Makes the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> target the specified dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-757">此方法设置 <xref:System.Windows.Media.Animation.Storyboard.TargetProperty> 指定对象上的附加属性。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-757">This method sets the <xref:System.Windows.Media.Animation.Storyboard.TargetProperty> attached property on the specified object.</span></span> <span data-ttu-id="0a4fb-758">有关演示图板目标如何工作的详细信息，请参阅 <xref:System.Windows.Media.Animation.Storyboard.TargetProperty> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-758">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetProperty>.</span></span> <span data-ttu-id="0a4fb-759">有关附加属性的工作方式的详细信息，请参阅 [附加属性概述](/dotnet/framework/wpf/advanced/attached-properties-overview)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-759">For more information about how attached properties work, see [Attached Properties Overview](/dotnet/framework/wpf/advanced/attached-properties-overview).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SkipToFill">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a4fb-760">将此情节提要的 <see cref="T:System.Windows.Media.Animation.Clock" /> 当前时间提前到其有效期的末尾。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-760">Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SkipToFill" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill();" />
      <MemberSignature Language="F#" Value="member this.SkipToFill : unit -&gt; unit" Usage="storyboard.SkipToFill " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a4fb-761">将此情节提要的 <see cref="T:System.Windows.Media.Animation.Clock" /> 当前时间提前到其有效期的末尾。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-761">Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-762">可控制的情节提要可以暂停、恢复、查找、停止和删除。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-762">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="0a4fb-763">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-763">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-764">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-764">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.SkipToFill : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.SkipToFill containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="0a4fb-765">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-765">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="0a4fb-766">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-766">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="0a4fb-767">将此情节提要的 <see cref="T:System.Windows.Media.Animation.Clock" /> 当前时间提前到其有效期的末尾。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-767">Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-768">此方法使情节提要的当前时间前进到其活动周期的结束时间;此时情节提要的行为由其设置来指定 <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-768">This method advances the storyboard's current time to the end of its active period; the storyboard's behavior at this point is specified by its <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> setting.</span></span> <span data-ttu-id="0a4fb-769">如果 <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> 设置为 <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd> ，则情节提要将填充; 如果属性设置为 <xref:System.Windows.Media.Animation.FillBehavior.Stop> ，则情节提要将停止。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-769">If <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> is set to <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, the storyboard fills; if the property is set to <xref:System.Windows.Media.Animation.FillBehavior.Stop>, the storyboard stops.</span></span>  
  
 <span data-ttu-id="0a4fb-770">在持续时间无限的情节提要上调用此方法不会产生任何影响。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-770">Calling this method on a storyboard with an infinite duration, an infinite number of repetitions has no effect.</span></span> <span data-ttu-id="0a4fb-771">对非活动情节提要调用此方法不起任何作用。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-771">Calling this method on an inactive storyboard has no effect.</span></span>  
  
 <span data-ttu-id="0a4fb-772">将时钟前进到其填充期会触发 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 和 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 事件。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-772">Advancing a clock to its fill period triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
 <span data-ttu-id="0a4fb-773">若要以交互方式控制此情节提要，在 `containingObject` 调用用于开始情节提要的交互式方法时，必须使用相同的参数。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-773">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="0a4fb-774">可控制的情节提要可以暂停、恢复、查找、停止和删除。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-774">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="0a4fb-775">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-775">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-776">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-776">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fb-777">下面的示例使用可控制的情节提要对进行动画处理 <xref:System.Windows.Media.TextEffect> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-777">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="0a4fb-778"><xref:System.Windows.Media.TextEffect>包含在 <xref:System.Windows.FrameworkContentElement> 的名称作用域内。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-778">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.SkipToFill : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.SkipToFill containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="0a4fb-779">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-779">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="0a4fb-780">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-780">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="0a4fb-781">将此情节提要的 <see cref="T:System.Windows.Media.Animation.Clock" /> 当前时间提前到其有效期的末尾。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-781">Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-782">此方法使情节提要的当前时间前进到其活动周期的结束时间;此时情节提要的行为由其设置来指定 <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-782">This method advances the storyboard's current time to the end of its active period; the storyboard's behavior at this point is specified by its <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> setting.</span></span> <span data-ttu-id="0a4fb-783">如果 <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> 设置为 <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd> ，则情节提要将填充; 如果属性设置为 <xref:System.Windows.Media.Animation.FillBehavior.Stop> ，则情节提要将停止。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-783">If <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> is set to <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, the storyboard fills; if the property is set to <xref:System.Windows.Media.Animation.FillBehavior.Stop>, the storyboard stops.</span></span>  
  
 <span data-ttu-id="0a4fb-784">在持续时间无限的情节提要上调用此方法不会产生任何影响。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-784">Calling this method on a storyboard with an infinite duration, an infinite number of repetitions has no effect.</span></span> <span data-ttu-id="0a4fb-785">对非活动情节提要调用此方法不起任何作用。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-785">Calling this method on an inactive storyboard has no effect.</span></span>  
  
 <span data-ttu-id="0a4fb-786">将时钟前进到其填充期会触发 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 和 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 事件。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-786">Advancing a clock to its fill period triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
 <span data-ttu-id="0a4fb-787">若要以交互方式控制此情节提要，在 `containingObject` 调用用于开始情节提要的交互式方法时，必须使用相同的参数。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-787">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="0a4fb-788">可控制的情节提要可以暂停、恢复、查找、停止和删除。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-788">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="0a4fb-789">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-789">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-790">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-790">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Stop">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a4fb-791">停止为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-791">Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="storyboard.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a4fb-792">停止为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-792">Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-793">请注意，停止情节提要不会引发 <xref:System.Windows.Media.Animation.Timeline.Completed> 事件。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-793">Note that stopping a storyboard does not fire the <xref:System.Windows.Media.Animation.Timeline.Completed> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Stop : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Stop containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="0a4fb-794">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-794">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="0a4fb-795">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-795">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="0a4fb-796">停止为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-796">Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-797"><xref:System.Windows.Media.Animation.ClockState.Stopped>情节提要不再影响其目标属性：已进行动画处理的属性将恢复为其以前的值。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-797">A <xref:System.Windows.Media.Animation.ClockState.Stopped> storyboard no longer affects its target properties: properties that were animated revert to their previous values.</span></span>  
  
 <span data-ttu-id="0a4fb-798">停止时钟 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 会触发和 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 事件，但不会触发 <xref:System.Windows.Media.Animation.Timeline.Completed> 事件。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-798">Stopping a clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events, but not the <xref:System.Windows.Media.Animation.Timeline.Completed> event.</span></span>  
  
 <span data-ttu-id="0a4fb-799">若要以交互方式控制此情节提要，在 `containingObject` 调用用于开始情节提要的交互式方法时，必须使用相同的参数。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-799">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="0a4fb-800">可控制的情节提要可以暂停、恢复、查找、停止和删除。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-800">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="0a4fb-801">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-801">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-802">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-802">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a4fb-803">下面的示例使用可控制的情节提要对进行动画处理 <xref:System.Windows.Media.TextEffect> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-803">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="0a4fb-804"><xref:System.Windows.Media.TextEffect>包含在 <xref:System.Windows.FrameworkContentElement> 的名称作用域内。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-804">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Stop : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Stop containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="0a4fb-805">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-805">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="0a4fb-806">此对象包含为此情节提要及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-806">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="0a4fb-807">停止为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-807">Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-808"><xref:System.Windows.Media.Animation.ClockState.Stopped>情节提要不再影响其目标属性：已进行动画处理的属性将恢复为其以前的值。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-808">A <xref:System.Windows.Media.Animation.ClockState.Stopped> storyboard no longer affects its target properties: properties that were animated revert to their previous values.</span></span>  
  
 <span data-ttu-id="0a4fb-809">停止时钟 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 会触发和 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 事件，但不会触发 <xref:System.Windows.Media.Animation.Timeline.Completed> 事件。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-809">Stopping a clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events, but not the <xref:System.Windows.Media.Animation.Timeline.Completed> event.</span></span>  
  
 <span data-ttu-id="0a4fb-810">若要以交互方式控制此情节提要，在 `containingObject` 调用用于开始情节提要的交互式方法时，必须使用相同的参数。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-810">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="0a4fb-811">可控制的情节提要可以暂停、恢复、查找、停止和删除。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-811">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="0a4fb-812">若要使 storyboard 能够控制代码，必须使用情节提要的方法的适当重载， <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 并指定 `true` 以使其可控制。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-812">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="0a4fb-813">有关示例，请参阅 [如何：在演示图板启动后对其进行控制](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts)。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-813">For an example, see [How to: Control a Storyboard After It Starts](/dotnet/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="see GetTarget, and SetTarget" />
      <MemberSignature Language="ILAsm" Value="see GetTarget, and SetTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Storyboard.Target" />
      <MemberSignature Language="VB.NET" Value="see GetTarget, and SetTarget" />
      <MemberSignature Language="F#" Value="see GetTarget, and SetTarget" Usage="see GetTarget, and SetTarget" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a4fb-814">获取或设置应进行动画处理的对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-814">Gets or sets the object that should be animated.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-815">目标对象必须是依赖对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-815">The target object must be a dependency object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a4fb-816"><xref:System.Windows.Media.Animation.Storyboard.Target%2A>属性不可序列化，因为它可以设置为 any <xref:System.Windows.DependencyObject> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-816">The <xref:System.Windows.Media.Animation.Storyboard.Target%2A> property is not serializable, because it can be set to any <xref:System.Windows.DependencyObject>.</span></span> <span data-ttu-id="0a4fb-817">不保证可以在 XAML 中正确地引用此对象。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-817">There is no guaranteed that this object can be correctly referenced in XAML.</span></span>  
  
<a name="dependencyPropertyInfo_Target"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="0a4fb-818">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="0a4fb-818">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="0a4fb-819">标识符字段</span><span class="sxs-lookup"><span data-stu-id="0a4fb-819">Identifier field</span></span>|<xref:System.Windows.Media.Animation.Storyboard.TargetProperty>|  
|<span data-ttu-id="0a4fb-820">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="0a4fb-820">Metadata properties set to `true`</span></span>|<span data-ttu-id="0a4fb-821">无</span><span class="sxs-lookup"><span data-stu-id="0a4fb-821">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetName">
      <MemberSignature Language="C#" Value="see GetTargetName, and SetTargetName" />
      <MemberSignature Language="ILAsm" Value="see GetTargetName, and SetTargetName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      <MemberSignature Language="VB.NET" Value="see GetTargetName, and SetTargetName" />
      <MemberSignature Language="F#" Value="see GetTargetName, and SetTargetName" Usage="see GetTargetName, and SetTargetName" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a4fb-822">获取或设置要进行动画处理的对象的名称。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-822">Gets or sets the name of the object to animate.</span></span> <span data-ttu-id="0a4fb-823">该对象必须是 <see cref="T:System.Windows.FrameworkElement" />、<see cref="T:System.Windows.FrameworkContentElement" /> 或 <see cref="T:System.Windows.Freezable" />。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-823">The object must be a <see cref="T:System.Windows.FrameworkElement" />, <see cref="T:System.Windows.FrameworkContentElement" />, or <see cref="T:System.Windows.Freezable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a4fb-824">设置此属性是可选的。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-824">Setting this property is optional.</span></span> <span data-ttu-id="0a4fb-825">如果 <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> 未指定，演示图板的动画将应用于以下项之一：</span><span class="sxs-lookup"><span data-stu-id="0a4fb-825">If the <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> is not specified, a storyboard's animations are applied to one of the following:</span></span>  
  
-   <span data-ttu-id="0a4fb-826">如果动画所属的情节提要是使用启动的，则 <xref:System.Windows.Media.Animation.BeginStoryboard> 将拥有 <xref:System.Windows.Media.Animation.BeginStoryboard> 触发情节提要的操作的元素作为目标。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-826">If the storyboard to which the animation belongs was started using a <xref:System.Windows.Media.Animation.BeginStoryboard>, the element that owns the <xref:System.Windows.Media.Animation.BeginStoryboard> action that triggers the storyboard is targeted.</span></span>  
  
-   <span data-ttu-id="0a4fb-827">如果使用方法启动了情节提要，则为，在使用 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> <xref:System.Windows.FrameworkElement> <xref:System.Windows.FrameworkContentElement> 方法启动情节提要时指定或 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-827">If the storyboard was started using the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method, the <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> specified when the storyboard was started with the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is targeted.</span></span>  
  
 <span data-ttu-id="0a4fb-828">如果在具有子级的时间线上设置此属性，则这些子时间线会 "继承" 父项， <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> 除非它们指定自己的。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-828">When this property is set on a timeline with children, those child timelines "inherit" the parent's <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> unless they specify their own.</span></span>  
  
## <a name="making-an-object-targetable"></a><span data-ttu-id="0a4fb-829">使对象不再</span><span class="sxs-lookup"><span data-stu-id="0a4fb-829">Making an Object Targetable</span></span>  
 <span data-ttu-id="0a4fb-830">使用时 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] ，可以执行以下两项操作之一，使不再的对象成为情节提要的一个对象：</span><span class="sxs-lookup"><span data-stu-id="0a4fb-830">When using [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], you perform one of the following two actions to make an object targetable by a storyboard:</span></span>  
  
-   <span data-ttu-id="0a4fb-831">如果对象为 <xref:System.Windows.FrameworkElement> 或 <xref:System.Windows.FrameworkContentElement> ，则设置其 <xref:System.Windows.FrameworkElement.Name%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-831">If the object is a <xref:System.Windows.FrameworkElement> or a <xref:System.Windows.FrameworkContentElement>, set its <xref:System.Windows.FrameworkElement.Name%2A> property.</span></span>  
  
-   <span data-ttu-id="0a4fb-832">如果对象是 <xref:System.Windows.Freezable> 或自定义的 <xref:System.Windows.FrameworkContentElement> 或 <xref:System.Windows.FrameworkContentElement> ，则使用 [x：Name 指令](/dotnet/framework/xaml-services/x-name-directive) 标记扩展为其分配一个名称。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-832">If the object is a <xref:System.Windows.Freezable> or a custom <xref:System.Windows.FrameworkContentElement> or <xref:System.Windows.FrameworkContentElement>, assign it a name using the [x:Name Directive](/dotnet/framework/xaml-services/x-name-directive) markup extension.</span></span>  
  
 <span data-ttu-id="0a4fb-833">使用代码时，通过使用方法将对象命名为不再 <xref:System.Windows.NameScope.RegisterName%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-833">When using code, you make an object targetable by using the <xref:System.Windows.NameScope.RegisterName%2A> method to assign the object a name.</span></span>  
  
<a name="dependencyPropertyInfo_TargetName"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="0a4fb-834">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="0a4fb-834">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="0a4fb-835">标识符字段</span><span class="sxs-lookup"><span data-stu-id="0a4fb-835">Identifier field</span></span>|<xref:System.Windows.Media.Animation.Storyboard.TargetNameProperty>|  
|<span data-ttu-id="0a4fb-836">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="0a4fb-836">Metadata properties set to `true`</span></span>|<span data-ttu-id="0a4fb-837">无</span><span class="sxs-lookup"><span data-stu-id="0a4fb-837">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetNameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetNameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetNameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Storyboard.TargetNameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetNameProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TargetNameProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TargetNameProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Storyboard.TargetNameProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fb-838">标识 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 附加属性。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-838">Identifies the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="TargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TargetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TargetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Storyboard.TargetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fb-839">标识 <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> 附加属性。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-839">Identifies the <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="TargetPropertyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetPropertyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetPropertyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Storyboard.TargetPropertyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetPropertyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TargetPropertyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TargetPropertyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Storyboard.TargetPropertyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a4fb-840">标识 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> 附加属性。</span><span class="sxs-lookup"><span data-stu-id="0a4fb-840">Identifies the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      </Docs>
    </Member>
  </Members>
</Type>
