<Type Name="StringAnimationBase" FullName="System.Windows.Media.Animation.StringAnimationBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b76c4344c0e44cd8c856fe01bb4675a843b9aa0a" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86646631" /></Metadata><TypeSignature Language="C#" Value="public abstract class StringAnimationBase : System.Windows.Media.Animation.AnimationTimeline" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit StringAnimationBase extends System.Windows.Media.Animation.AnimationTimeline" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.StringAnimationBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class StringAnimationBase&#xA;Inherits AnimationTimeline" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringAnimationBase abstract : System::Windows::Media::Animation::AnimationTimeline" />
  <TypeSignature Language="F#" Value="type StringAnimationBase = class&#xA;    inherit AnimationTimeline" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.AnimationTimeline</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>当实现时，对 <see cref="T:System.String" /> 值进行动画处理的抽象类。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何在中使用派生 <xref:System.Windows.Media.Animation.StringAnimationUsingKeyFrames> 类 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 。  
  
 [!code-xaml[keyframes_ovw_snippet#StringAnimationUsingKeyFramesWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/keyframes_ovw_snippet/CS/StringAnimationUsingKeyFramesExample.xaml#stringanimationusingkeyframeswholepage)]   
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>有关扩展动画类的信息，请参阅 [自定义动画概述](/dotnet/framework/wpf/graphics-multimedia/custom-animations-overview) 。</para></block>
    <altmember cref="T:System.Windows.Media.Animation.StringAnimationUsingKeyFrames" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected StringAnimationBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.StringAnimationBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; StringAnimationBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Media.Animation.StringAnimationBase" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.StringAnimationBase Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.StringAnimationBase Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.StringAnimationBase.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As StringAnimationBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::StringAnimationBase ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.Animation.StringAnimationBase" Usage="stringAnimationBase.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.StringAnimationBase</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建此 <see cref="T:System.Windows.Media.Animation.StringAnimationBase" /> 的可修改克隆，从而深度复制此对象的值。 在复制依赖项属性时，此方法会复制资源引用和数据绑定（但可能不再解析），但不复制动画或其当前值。</summary>
        <returns>当前对象的可修改复本。 即使源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 <see langword="true" />，所克隆的对象的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性也将为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法用于生成冻结 <xref:System.Windows.Freezable> 对象 (或任何对象) 的可修改副本 <xref:System.Windows.Freezable> 。 为方便起见，此方法使用强类型实现隐藏了继承的版本。  
  
 有关详细信息，请参阅 <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentValue">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>获取动画的当前值。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentValue">
      <MemberSignature Language="C#" Value="public override sealed object GetCurrentValue (object defaultOriginValue, object defaultDestinationValue, System.Windows.Media.Animation.AnimationClock animationClock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetCurrentValue(object defaultOriginValue, object defaultDestinationValue, class System.Windows.Media.Animation.AnimationClock animationClock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.StringAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function GetCurrentValue (defaultOriginValue As Object, defaultDestinationValue As Object, animationClock As AnimationClock) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetCurrentValue(System::Object ^ defaultOriginValue, System::Object ^ defaultDestinationValue, System::Windows::Media::Animation::AnimationClock ^ animationClock);" />
      <MemberSignature Language="F#" Value="override this.GetCurrentValue : obj * obj * System.Windows.Media.Animation.AnimationClock -&gt; obj" Usage="stringAnimationBase.GetCurrentValue (defaultOriginValue, defaultDestinationValue, animationClock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultOriginValue" Type="System.Object" />
        <Parameter Name="defaultDestinationValue" Type="System.Object" />
        <Parameter Name="animationClock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="defaultOriginValue">如果动画不具有其自己的起始值，则为动画提供原始值。</param>
        <param name="defaultDestinationValue">如果动画没有自己的目标值，则为提供给动画的目标值。</param>
        <param name="animationClock">动画将使用可以生成 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 或 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 值的 <see cref="T:System.Windows.Media.Animation.AnimationClock" /> 来生成其输出值。</param>
        <summary>获取动画的当前值。</summary>
        <returns>动画的当前值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 参数的值 `defaultOriginValue` 取决于动画在组合链中的位置：  
  
-   如果动画位于组合链中的第一个位置并替换另一个动画， `defaultOriginValue` 则是该动画在被替换时的输出。  
  
-   如果动画位于组合链中的第一个位置，并且不存在要替换的动画， `defaultOriginValue` 则是已进行动画处理的属性的基值。  
  
-   如果此动画不在组合链的第一个位置，则 `defaultOriginValue` 是组合链中的前一个动画返回的值，此值 <xref:System.Windows.Media.Animation.AnimationClock> 不是 <xref:System.Windows.Media.Animation.Clock.Stopped%2A> 。  
  
 参数的值 `defaultDestinationValue` 取决于是否有以前的属性 <xref:System.Windows.Trigger> 组合层。  
  
-   如果有上一个属性 <xref:System.Windows.Trigger> 组合层， `defaultDestinationValue` 则为该层的输出。  
  
-   如果没有上一个组合层， `defaultDestinationValue` 则是要进行动画处理的属性的基值。  
  
 有关动画组合的详细信息，请参阅 [动画和计时系统概述](/dotnet/framework/wpf/graphics-multimedia/animation-and-timing-system-overview)。 有关创建自定义动画类型的详细信息，请参阅 [自定义动画概述](/dotnet/framework/wpf/graphics-multimedia/custom-animations-overview)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValue">
      <MemberSignature Language="C#" Value="public string GetCurrentValue (string defaultOriginValue, string defaultDestinationValue, System.Windows.Media.Animation.AnimationClock animationClock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCurrentValue(string defaultOriginValue, string defaultDestinationValue, class System.Windows.Media.Animation.AnimationClock animationClock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.StringAnimationBase.GetCurrentValue(System.String,System.String,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentValue (defaultOriginValue As String, defaultDestinationValue As String, animationClock As AnimationClock) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCurrentValue(System::String ^ defaultOriginValue, System::String ^ defaultDestinationValue, System::Windows::Media::Animation::AnimationClock ^ animationClock);" />
      <MemberSignature Language="F#" Value="override this.GetCurrentValue : string * string * System.Windows.Media.Animation.AnimationClock -&gt; string" Usage="stringAnimationBase.GetCurrentValue (defaultOriginValue, defaultDestinationValue, animationClock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultOriginValue" Type="System.String" />
        <Parameter Name="defaultDestinationValue" Type="System.String" />
        <Parameter Name="animationClock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="defaultOriginValue">如果动画不具有其自己的起始值，则为动画提供原始值。</param>
        <param name="defaultDestinationValue">如果动画没有自己的目标值，则为提供给动画的目标值。</param>
        <param name="animationClock">动画将使用可以生成 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 或 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 值的 <see cref="T:System.Windows.Media.Animation.AnimationClock" /> 来生成其输出值。</param>
        <summary>获取动画的当前值。</summary>
        <returns>此动画的当前值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 参数的值 `defaultOriginValue` 取决于动画在组合链中的位置：  
  
-   如果动画位于组合链中的第一个位置并替换另一个动画， `defaultOriginValue` 则是该动画在被替换时的输出。  
  
-   如果动画位于组合链中的第一个位置，并且不存在要替换的动画， `defaultOriginValue` 则是已进行动画处理的属性的基值。  
  
-   如果此动画不在组合链的第一个位置，则 `defaultOriginValue` 是组合链中的前一个动画返回的值，此值 <xref:System.Windows.Media.Animation.AnimationClock> 不是 <xref:System.Windows.Media.Animation.Clock.Stopped%2A> 。  
  
 参数的值 `defaultDestinationValue` 取决于是否有以前的属性 <xref:System.Windows.Trigger> 组合层。  
  
-   如果有上一个属性 <xref:System.Windows.Trigger> 组合层， `defaultDestinationValue` 则为该层的输出。  
  
-   如果没有上一个组合层， `defaultDestinationValue` 则是要进行动画处理的属性的基值。  
  
 有关动画组合的详细信息，请参阅 [动画和计时系统概述](/dotnet/framework/wpf/graphics-multimedia/animation-and-timing-system-overview)。 有关创建自定义动画类型的详细信息，请参阅 [自定义动画概述](/dotnet/framework/wpf/graphics-multimedia/custom-animations-overview)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueCore">
      <MemberSignature Language="C#" Value="protected abstract string GetCurrentValueCore (string defaultOriginValue, string defaultDestinationValue, System.Windows.Media.Animation.AnimationClock animationClock);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetCurrentValueCore(string defaultOriginValue, string defaultDestinationValue, class System.Windows.Media.Animation.AnimationClock animationClock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.StringAnimationBase.GetCurrentValueCore(System.String,System.String,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetCurrentValueCore (defaultOriginValue As String, defaultDestinationValue As String, animationClock As AnimationClock) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GetCurrentValueCore(System::String ^ defaultOriginValue, System::String ^ defaultDestinationValue, System::Windows::Media::Animation::AnimationClock ^ animationClock);" />
      <MemberSignature Language="F#" Value="abstract member GetCurrentValueCore : string * string * System.Windows.Media.Animation.AnimationClock -&gt; string" Usage="stringAnimationBase.GetCurrentValueCore (defaultOriginValue, defaultDestinationValue, animationClock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultOriginValue" Type="System.String" />
        <Parameter Name="defaultDestinationValue" Type="System.String" />
        <Parameter Name="animationClock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="defaultOriginValue">建议使用的原始值。如果动画没有自己显式设置的起始值，则使用该值。</param>
        <param name="defaultDestinationValue">建议使用的目标值。如果动画没有自己显式设置的结束值，则使用该值。</param>
        <param name="animationClock">一个 <see cref="T:System.Windows.Media.Animation.AnimationClock" />，用来生成主机动画所使用的 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 或 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" />。</param>
        <summary>计算一个值，该值表示正在进行动画处理的属性的当前值，并由主机动画确定。</summary>
        <returns>计算得出的属性值，该值由当前动画确定。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 参数的值 `defaultOriginValue` 取决于动画在组合链中的位置：  
  
-   如果动画位于组合链中的第一个位置并替换另一个动画， `defaultOriginValue` 则是该动画在被替换时的输出。  
  
-   如果动画位于组合链中的第一个位置，并且不存在要替换的动画， `defaultOriginValue` 则是已进行动画处理的属性的基值。  
  
-   如果此动画不在组合链的第一个位置，则 `defaultOriginValue` 是组合链中的前一个动画返回的值，此值 <xref:System.Windows.Media.Animation.AnimationClock> 不是 <xref:System.Windows.Media.Animation.Clock.Stopped%2A> 。  
  
 参数的值 `defaultDestinationValue` 取决于是否有以前的属性 <xref:System.Windows.Trigger> 组合层。  
  
-   如果有上一个属性 <xref:System.Windows.Trigger> 组合层， `defaultDestinationValue` 则为该层的输出。  
  
-   如果没有上一个组合层， `defaultDestinationValue` 则是要进行动画处理的属性的基值。  
  
 有关动画组合的详细信息，请参阅 [动画和计时系统概述](/dotnet/framework/wpf/graphics-multimedia/animation-and-timing-system-overview)。 有关创建自定义动画类型的详细信息，请参阅 [自定义动画概述](/dotnet/framework/wpf/graphics-multimedia/custom-animations-overview)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Animation.AnimationClock" />
      </Docs>
    </Member>
    <Member MemberName="TargetPropertyType">
      <MemberSignature Language="C#" Value="public override sealed Type TargetPropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TargetPropertyType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.StringAnimationBase.TargetPropertyType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property TargetPropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TargetPropertyType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetPropertyType : Type" Usage="System.Windows.Media.Animation.StringAnimationBase.TargetPropertyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此动画生成的值的类型。</summary>
        <value>此动画生成的值的类型。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
