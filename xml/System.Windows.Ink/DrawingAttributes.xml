<Type Name="DrawingAttributes" FullName="System.Windows.Ink.DrawingAttributes">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8c48afa51118a1535ea51c0ac49b40a90ea2a0ae" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89934855" /></Metadata><TypeSignature Language="C#" Value="public class DrawingAttributes : System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DrawingAttributes extends System.Object implements class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Ink.DrawingAttributes" />
  <TypeSignature Language="VB.NET" Value="Public Class DrawingAttributes&#xA;Implements INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class DrawingAttributes : System::ComponentModel::INotifyPropertyChanged" />
  <TypeSignature Language="F#" Value="type DrawingAttributes = class&#xA;    interface INotifyPropertyChanged" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>指定 <see cref="T:System.Windows.Ink.Stroke" /> 的外观</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Windows.Ink.Stroke.DrawingAttributes%2A> 属性可以指定设置，如颜色、宽度、透明度和触笔笔尖的形状 <xref:System.Windows.Ink.Stroke> 。  
  
 使用 <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> 属性指定添加到中的笔画的绘制特性 <xref:System.Windows.Controls.InkCanvas> 。 只有在 "经历更改" 后添加的笔划才会 <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> 显示更新后的属性。 中已存在的笔画的外观 <xref:System.Windows.Controls.InkCanvas> 不会改变。  
  
 有关 <xref:System.Windows.Ink.DrawingAttributes> 类的实例的初始属性值列表，请参见 <xref:System.Windows.Ink.DrawingAttributes> 构造函数。  
  
<a name="xamlTextUsage_DrawingAttributes"></a>   
## <a name="xaml-text-usage"></a>XAML 文本用法  
 此类通常不在 XAML 中使用。  
  
   
  
## Examples  
 下面的示例演示如何使用两个 <xref:System.Windows.Ink.DrawingAttributes> 对象来模拟在同一上使用笔和荧光笔 <xref:System.Windows.Controls.InkCanvas> 。 该示例假设 XAML 文件中的根元素是一个被 <xref:System.Windows.Controls.DockPanel> 调用的 `root` 。 它还假设有一个被 <xref:System.Windows.Controls.Button> 调用的 `switchHighlighter` ，并且该 <xref:System.Windows.Controls.Primitives.ButtonBase.Click> 事件已连接到此示例中定义的事件处理程序。  
  
 [!code-csharp[DrawingAttributes#3](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#3)]
 [!code-vb[DrawingAttributes#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawingAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DrawingAttributes();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Ink.DrawingAttributes" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表显示了 <xref:System.Windows.Ink.DrawingAttributes> 类的某个实例的初始属性值。  
  
|properties|初始值|  
|--------------|-------------------|  
|<xref:System.Windows.Ink.DrawingAttributes.Color%2A>|黑色|  
|<xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A>|`false`|  
|<xref:System.Windows.Ink.DrawingAttributes.Height%2A>|2个与设备无关的像素 (DIP) |  
|<xref:System.Windows.Ink.DrawingAttributes.IgnorePressure%2A>|`false`|  
|<xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A>|`false`|  
|<xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A>|<xref:System.Windows.Ink.StylusTip.Ellipse?displayProperty=nameWithType>|  
|<xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A>|<xref:System.Windows.Media.Matrix.Identity%2A?displayProperty=nameWithType>|  
|<xref:System.Windows.Ink.DrawingAttributes.Width%2A>|2 DIP|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPropertyData">
      <MemberSignature Language="C#" Value="public void AddPropertyData (Guid propertyDataId, object propertyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPropertyData(valuetype System.Guid propertyDataId, object propertyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.AddPropertyData(System.Guid,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPropertyData (propertyDataId As Guid, propertyData As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPropertyData(Guid propertyDataId, System::Object ^ propertyData);" />
      <MemberSignature Language="F#" Value="member this.AddPropertyData : Guid * obj -&gt; unit" Usage="drawingAttributes.AddPropertyData (propertyDataId, propertyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDataId" Type="System.Guid" />
        <Parameter Name="propertyData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="propertyDataId">要与自定义属性关联的 <see cref="T:System.Guid" />。</param>
        <param name="propertyData">此自定义属性的值。 <paramref name="propertyData" /> 必须为 <see cref="T:System.Char" />、<see cref="T:System.Byte" />、<see cref="T:System.Int16" />、<see cref="T:System.UInt16" />、<see cref="T:System.Int32" />、<see cref="T:System.UInt32" />、<see cref="T:System.Int64" />、<see cref="T:System.UInt64" />、<see cref="T:System.Single" />、<see cref="T:System.Double" />、<see cref="T:System.DateTime" />、<see cref="T:System.Boolean" />、<see cref="T:System.String" />、<see cref="T:System.Decimal" /> 类型或这些数据类型的数组，但它不能为 <see cref="T:System.String" /> 类型的数组。</param>
        <summary>将一个自定义属性添加到 <see cref="T:System.Windows.Ink.DrawingAttributes" /> 对象中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Windows.Ink.DrawingAttributes.AddPropertyData%2A> 方法可以将自定义属性添加到 <xref:System.Windows.Ink.DrawingAttributes> 对象。 当你呈现自己的笔划并想要提供额外的信息时，这非常有用。  
  
   
  
## Examples  
 下面的示例演示如何从对象中添加和检索自定义属性 <xref:System.Windows.Ink.DrawingAttributes> 。 该示例添加一个属性，该属性指示 <xref:System.Windows.Ink.DrawingAttributes> 对象是笔还是荧光笔。 事件处理程序中的代码在 `ChangeColors_Click` 使用对象的上为笔画呈现新的颜色 <xref:System.Windows.Controls.InkCanvas> <xref:System.Windows.Ink.DrawingAttributes> `inkDA` 。 此示例假设有一个名为 <xref:System.Windows.Controls.InkCanvas> 的 `inkCanvas1` ，并且有两个 <xref:System.Windows.Ink.DrawingAttributes> 对象名为 `inkDA` ， `highlighterDA.`  
  
 [!code-csharp[DrawingAttributes#5](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#5)]
 [!code-vb[DrawingAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="propertyData" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="propertyDataId" /> 是一个空的 <see cref="T:System.Guid" />。  
  
- 或 - 
 <paramref name="propertyData" /> 不是 <see langword="Parameters" /> 部分列出的允许数据类型之一。</exception>
      </Docs>
    </Member>
    <Member MemberName="AttributeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Ink.PropertyDataChangedEventHandler AttributeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Ink.PropertyDataChangedEventHandler AttributeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Ink.DrawingAttributes.AttributeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AttributeChanged As PropertyDataChangedEventHandler " FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Ink::PropertyDataChangedEventHandler ^ AttributeChanged;" />
      <MemberSignature Language="F#" Value="member this.AttributeChanged : System.Windows.Ink.PropertyDataChangedEventHandler " Usage="member this.AttributeChanged : System.Windows.Ink.PropertyDataChangedEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event AttributeChanged As PropertyDataChangedEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.PropertyDataChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当更改 <see cref="T:System.Windows.Ink.DrawingAttributes" /> 对象的属性时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例处理 <xref:System.Windows.Ink.DrawingAttributes.AttributeChanged> 事件。 此示例假定存在一个名为的对象，该 <xref:System.Windows.Ink.DrawingAttributes> `inkDA` <xref:System.Windows.Ink.DrawingAttributes.AttributeChanged> 事件已连接到此示例中定义的事件处理程序。  
  
 [!code-csharp[DrawingAttributes#6](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#6)]
 [!code-vb[DrawingAttributes#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Ink.DrawingAttributes Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Ink.DrawingAttributes Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As DrawingAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Ink::DrawingAttributes ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Windows.Ink.DrawingAttributes&#xA;override this.Clone : unit -&gt; System.Windows.Ink.DrawingAttributes" Usage="drawingAttributes.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.DrawingAttributes</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>复制 <see cref="T:System.Windows.Ink.DrawingAttributes" /> 对象。</summary>
        <returns><see cref="T:System.Windows.Ink.DrawingAttributes" /> 对象的副本。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.DrawingAttributes.Clone%2A>方法创建一个新的 <xref:System.Windows.Ink.DrawingAttributes> 对象，并使用与当前对象相同的值填充该对象。 还会复制所有自定义属性。  
  
   
  
## Examples  
 下面的示例演示如何复制 <xref:System.Windows.Ink.DrawingAttributes> 对象。  
  
 [!code-csharp[DrawingAttributes#8](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#8)]
 [!code-vb[DrawingAttributes#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Ink.DrawingAttributes.AddPropertyData(System.Guid,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Color">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Color Color { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Color Color" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Ink.DrawingAttributes.Color" />
      <MemberSignature Language="VB.NET" Value="Public Property Color As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Color Color { System::Windows::Media::Color get(); void set(System::Windows::Media::Color value); };" />
      <MemberSignature Language="F#" Value="member this.Color : System.Windows.Media.Color with get, set" Usage="System.Windows.Ink.DrawingAttributes.Color" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Ink.Stroke" /> 的颜色。</summary>
        <value><see cref="T:System.Windows.Ink.Stroke" /> 的颜色。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_Color"></a>   
## <a name="xaml-text-usage"></a>XAML 文本用法  
 此属性通常不在 XAML 中使用。  
  
   
  
## Examples  
 下面的示例演示如何设置 <xref:System.Windows.Ink.DrawingAttributes.Color%2A> 属性。 该示例假设你的应用程序具有一个名为的 <xref:System.Windows.Controls.InkCanvas> `inkCanvas1` 和两个 <xref:System.Windows.Ink.DrawingAttributes> 名为和的对象 `inkDA` `highlighterDA` 。 有关完整的示例，请参阅 <xref:System.Windows.Ink.DrawingAttributes> 类概述。  
  
 [!code-csharp[DrawingAttributes#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#1)]
 [!code-vb[DrawingAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsPropertyData">
      <MemberSignature Language="C#" Value="public bool ContainsPropertyData (Guid propertyDataId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsPropertyData(valuetype System.Guid propertyDataId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.ContainsPropertyData(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsPropertyData (propertyDataId As Guid) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsPropertyData(Guid propertyDataId);" />
      <MemberSignature Language="F#" Value="member this.ContainsPropertyData : Guid -&gt; bool" Usage="drawingAttributes.ContainsPropertyData propertyDataId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDataId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyDataId">要在 <see cref="T:System.Windows.Ink.DrawingAttributes" /> 对象中查找的 <see cref="T:System.Guid" />。</param>
        <summary>返回一个值，该值指示指定的属性数据标识符是否在 <see cref="T:System.Windows.Ink.DrawingAttributes" /> 对象中。</summary>
        <returns>如果指定的属性数据标识符在 <see cref="T:System.Windows.Ink.DrawingAttributes" /> 对象中，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例演示如何从对象中添加和检索自定义属性 <xref:System.Windows.Ink.DrawingAttributes> 。 该示例添加一个属性，该属性指示 <xref:System.Windows.Ink.DrawingAttributes> 对象是笔还是荧光笔。 `ChangeColors_Click`事件处理程序将使用调用的的所有笔画更改 <xref:System.Windows.Controls.InkCanvas> <xref:System.Windows.Ink.DrawingAttributes> `inkDA` 为新颜色。 此示例假设有一个名为 <xref:System.Windows.Controls.InkCanvas> 的 `inkCanvas1` ，并且有两个 <xref:System.Windows.Ink.DrawingAttributes> 对象名为 `inkDA` ， `highlighterDA.`  
  
 [!code-csharp[DrawingAttributes#5](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#5)]
 [!code-vb[DrawingAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="drawingAttributes.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">要与当前 <see cref="T:System.Windows.Ink.DrawingAttributes" /> 对象进行比较的 <see cref="T:System.Windows.Ink.DrawingAttributes" /> 对象。</param>
        <summary>确定指定的 <see cref="T:System.Windows.Ink.DrawingAttributes" /> 对象是否等同于当前的 <see cref="T:System.Windows.Ink.DrawingAttributes" />。</summary>
        <returns>如果对象相同，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.DrawingAttributes>如果以下属性相等，则两个对象相等：  
  
-   <xref:System.Windows.Ink.DrawingAttributes.Color%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.Width%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.Height%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.IgnorePressure%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A>  
  
> [!NOTE]
>  <xref:System.Windows.Ink.DrawingAttributes.Equals%2A>方法不检查自定义属性是否相等。  
  
   
  
## Examples  
 下面的示例比较两个 <xref:System.Windows.Ink.DrawingAttributes> 对象是否相等。 由于 <xref:System.Windows.Ink.DrawingAttributes.Color%2A> 和上的、、 <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A> <xref:System.Windows.Ink.DrawingAttributes.Height%2A> 和 <xref:System.Windows.Ink.DrawingAttributes.Width%2A> 属性 `attributes1` `attributes2` 被设置为相同的值，因此将显示 "DrawingAttributes 等于" 消息。  
  
 [!code-csharp[DrawingAttributes#10](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#10)]
 [!code-vb[DrawingAttributes#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#10)]  
[!code-csharp[DrawingAttributes#12](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#12)]
[!code-vb[DrawingAttributes#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Ink.DrawingAttributes.AddPropertyData(System.Guid,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="FitToCurve">
      <MemberSignature Language="C#" Value="public bool FitToCurve { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FitToCurve" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Ink.DrawingAttributes.FitToCurve" />
      <MemberSignature Language="VB.NET" Value="Public Property FitToCurve As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FitToCurve { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FitToCurve : bool with get, set" Usage="System.Windows.Ink.DrawingAttributes.FitToCurve" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否使用贝塞尔曲线平滑法来呈现 <see cref="T:System.Windows.Ink.Stroke" />。</summary>
        <value>如果使用贝塞尔曲线平滑法来呈现 <see cref="T:System.Windows.Ink.Stroke" />，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_FitToCurve"></a>   
## <a name="xaml-text-usage"></a>XAML 文本用法  
 此属性通常不在 XAML 中使用。  
  
   
  
## Examples  
 下面的示例演示如何设置 <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> 属性。 该示例假设你的应用程序具有一个名为的 <xref:System.Windows.Controls.InkCanvas> `inkCanvas1` 和两个 <xref:System.Windows.Ink.DrawingAttributes> 名为和的对象 `inkDA` `highlighterDA` 。 有关完整的示例，请参阅 <xref:System.Windows.Ink.DrawingAttributes> 类概述。  
  
 [!code-csharp[DrawingAttributes#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#1)]
 [!code-vb[DrawingAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="drawingAttributes.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>用作特定类型的哈希函数。</summary>
        <returns>当前 <see cref="T:System.Object" /> 的哈希代码。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyData">
      <MemberSignature Language="C#" Value="public object GetPropertyData (Guid propertyDataId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetPropertyData(valuetype System.Guid propertyDataId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.GetPropertyData(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyData (propertyDataId As Guid) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPropertyData(Guid propertyDataId);" />
      <MemberSignature Language="F#" Value="member this.GetPropertyData : Guid -&gt; obj" Usage="drawingAttributes.GetPropertyData propertyDataId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDataId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyDataId">与要获取的自定义属性关联的 <see cref="T:System.Guid" />。</param>
        <summary>获取与指定 <see cref="T:System.Guid" /> 关联的自定义属性的值。</summary>
        <returns>与指定 <see cref="T:System.Guid" /> 关联的自定义属性的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Windows.Ink.DrawingAttributes.GetPropertyData%2A> 方法可访问添加到对象的自定义属性 <xref:System.Windows.Ink.DrawingAttributes> 。 <xref:System.Windows.Ink.DrawingAttributes.GetPropertyData%2A> 如果尚未设置值，则返回内置属性的默认值。  
  
   
  
## Examples  
 下面的示例演示如何从对象中添加和检索自定义属性 <xref:System.Windows.Ink.DrawingAttributes> 。 该示例添加一个属性，该属性指示 <xref:System.Windows.Ink.DrawingAttributes> 对象是笔还是荧光笔。 事件处理程序中的代码在 `ChangeColors_Click` 使用对象的上为笔画呈现新的颜色 <xref:System.Windows.Controls.InkCanvas> <xref:System.Windows.Ink.DrawingAttributes> `inkDA` 。 此示例假设有一个名为 <xref:System.Windows.Controls.InkCanvas> 的 `inkCanvas1` ，并且有两个 <xref:System.Windows.Ink.DrawingAttributes> 对象名为 `inkDA` ， `highlighterDA.`  
  
 [!code-csharp[DrawingAttributes#5](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#5)]
 [!code-vb[DrawingAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="propertyDataId" /> 不与 <see cref="T:System.Windows.Ink.DrawingAttributes" /> 对象的自定义属性关联。</exception>
        <altmember cref="M:System.Windows.Ink.DrawingAttributes.AddPropertyData(System.Guid,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyDataIds">
      <MemberSignature Language="C#" Value="public Guid[] GetPropertyDataIds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Guid[] GetPropertyDataIds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.GetPropertyDataIds" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyDataIds () As Guid()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Guid&gt; ^ GetPropertyDataIds();" />
      <MemberSignature Language="F#" Value="member this.GetPropertyDataIds : unit -&gt; Guid[]" Usage="drawingAttributes.GetPropertyDataIds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回与 <see cref="T:System.Windows.Ink.StrokeCollection" /> 关联的任何自定义属性的 GUID。</summary>
        <returns><see cref="T:System.Guid" /> 类型的数组，表示属性数据的标识符。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 类的内置属性的 Guid 位于 <xref:System.Windows.Ink.DrawingAttributes> <xref:System.Windows.Ink.DrawingAttributeIds> 类中。  
  
   
  
## Examples  
 下面的示例演示如何从对象获取属性数据标识符 <xref:System.Windows.Ink.DrawingAttributes> 。 此示例假设已声明了一个 <xref:System.Windows.Ink.DrawingAttributes> 已调用的 `inkDA` 。  
  
 [!code-csharp[DrawingAttributes#7](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#7)]
 [!code-vb[DrawingAttributes#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Ink.DrawingAttributes.AddPropertyData(System.Guid,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Ink.DrawingAttributes.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Height : double with get, set" Usage="System.Windows.Ink.DrawingAttributes.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于绘制 <see cref="T:System.Windows.Ink.Stroke" /> 的触笔的高度。</summary>
        <value>表示用于绘制 <see cref="T:System.Windows.Ink.Stroke" /> 的触笔高度的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当呈现时，以下因素会影响的高度和宽度 <xref:System.Windows.Ink.Stroke> ，而不会影响属性的值 <xref:System.Windows.Ink.DrawingAttributes.Height%2A> 。  
  
-   绘制时应用于触笔的压力量 <xref:System.Windows.Ink.Stroke> 。  
  
-   <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A> 属性的值。  
  
 如果将属性设置 <xref:System.Windows.Ink.DrawingAttributes.Height%2A> 为0与设备无关的像素 (dip) ，则将其更改为2个 dip。  
  
<a name="xamlTextUsage_Height"></a>   
## <a name="xaml-text-usage"></a>XAML 文本用法  
 此属性通常不在 XAML 中使用。  
  
   
  
## Examples  
 下面的示例演示如何设置 <xref:System.Windows.Ink.DrawingAttributes.Height%2A> 属性。 该示例假设你的应用程序具有一个名为的 <xref:System.Windows.Controls.InkCanvas> `inkCanvas1` 和两个 <xref:System.Windows.Ink.DrawingAttributes> 名为和的对象 `inkDA` `highlighterDA` 。 有关完整的示例，请参阅 <xref:System.Windows.Ink.DrawingAttributes> 类概述。  
  
 [!code-csharp[DrawingAttributes#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#1)]
 [!code-vb[DrawingAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Windows.Ink.DrawingAttributes.Height" /> 属性小于 <see cref="F:System.Double.Epsilon" /> 或 <see cref="F:System.Double.NaN" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="IgnorePressure">
      <MemberSignature Language="C#" Value="public bool IgnorePressure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnorePressure" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Ink.DrawingAttributes.IgnorePressure" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnorePressure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnorePressure { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnorePressure : bool with get, set" Usage="System.Windows.Ink.DrawingAttributes.IgnorePressure" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示呈现的 <see cref="T:System.Windows.Ink.Stroke" /> 的粗细是否会随应用的压力而更改。</summary>
        <value>如果是 <see langword="true" />，则表示笔画的粗细是相同的；如果是 <see langword="false" />，则表示呈现的 <see cref="T:System.Windows.Ink.Stroke" /> 的粗细会随着压力增大而变粗。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_IgnorePressure"></a>   
## <a name="xaml-text-usage"></a>XAML 文本用法  
 此属性通常不在 XAML 中使用。  
  
   
  
## Examples  
 下面的示例演示如何设置 <xref:System.Windows.Ink.DrawingAttributes.IgnorePressure%2A> 属性。 该示例假设你的应用程序具有一个名为的 <xref:System.Windows.Controls.InkCanvas> `inkCanvas1` 和两个 <xref:System.Windows.Ink.DrawingAttributes> 名为和的对象 `inkDA` `highlighterDA` 。 有关完整的示例，请参阅 <xref:System.Windows.Ink.DrawingAttributes> 类概述。  
  
 [!code-csharp[DrawingAttributes#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#1)]
 [!code-vb[DrawingAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHighlighter">
      <MemberSignature Language="C#" Value="public bool IsHighlighter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHighlighter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Ink.DrawingAttributes.IsHighlighter" />
      <MemberSignature Language="VB.NET" Value="Public Property IsHighlighter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHighlighter { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsHighlighter : bool with get, set" Usage="System.Windows.Ink.DrawingAttributes.IsHighlighter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Ink.Stroke" /> 看起来是否像一支荧光笔。</summary>
        <value>如果 <see cref="T:System.Windows.Ink.Stroke" /> 作为荧光笔呈现，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当 <xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A> 属性设置为时 `true` ，将 <xref:System.Windows.Ink.Stroke> 稍微透明，这允许显示下面的笔画。  
  
<a name="xamlTextUsage_IsHighlighter"></a>   
## <a name="xaml-text-usage"></a>XAML 文本用法  
 此属性通常不在 XAML 中使用。  
  
   
  
## Examples  
 下面的示例演示如何设置 <xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A> 属性。 该示例假设你的应用程序具有一个名为的 <xref:System.Windows.Controls.InkCanvas> `inkCanvas1` 和两个 <xref:System.Windows.Ink.DrawingAttributes> 名为和的对象 `inkDA` `highlighterDA` 。 有关完整的示例，请参阅 <xref:System.Windows.Ink.DrawingAttributes> 类概述。  
  
 [!code-csharp[DrawingAttributes#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#1)]
 [!code-vb[DrawingAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxHeight">
      <MemberSignature Language="C#" Value="public static readonly double MaxHeight;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly float64 MaxHeight" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Ink.DrawingAttributes.MaxHeight" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxHeight As Double " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly double MaxHeight;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxHeight : double" Usage="System.Windows.Ink.DrawingAttributes.MaxHeight" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 <see cref="P:System.Windows.Ink.DrawingAttributes.Height" /> 属性所允许的最大值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Windows.Ink.DrawingAttributes.MaxHeight> 字段检查某个值是否在属性允许的限制内 <xref:System.Windows.Ink.DrawingAttributes.Height%2A> 。 当值来自未知源（如不受约束的用户输入）时，请执行此操作。  
  
   
  
## Examples  
 下面的示例确保将 <xref:System.Windows.Ink.DrawingAttributes.Height%2A> 的属性 <xref:System.Windows.Ink.DrawingAttributes> 设置为合法值。 此示例假定存在一个名为 <xref:System.Windows.Controls.InkCanvas> 的 `inkCanvas1` 。  
  
 [!code-csharp[DrawingAttributes#14](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#14)]
 [!code-vb[DrawingAttributes#14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxWidth">
      <MemberSignature Language="C#" Value="public static readonly double MaxWidth;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly float64 MaxWidth" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Ink.DrawingAttributes.MaxWidth" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxWidth As Double " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly double MaxWidth;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxWidth : double" Usage="System.Windows.Ink.DrawingAttributes.MaxWidth" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 <see cref="P:System.Windows.Ink.DrawingAttributes.Width" /> 属性所允许的最大值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Windows.Ink.DrawingAttributes.MaxWidth> 字段检查某个值是否在属性允许的限制内 <xref:System.Windows.Ink.DrawingAttributes.Width%2A> 。 当值来自未知源（如不受约束的用户输入）时，请执行此操作。  
  
   
  
## Examples  
 下面的示例确保将 <xref:System.Windows.Ink.DrawingAttributes.Width%2A> 的属性 <xref:System.Windows.Ink.DrawingAttributes> 设置为合法值。 此示例假定存在一个名为 <xref:System.Windows.Controls.InkCanvas> 的 `inkCanvas1` 。  
  
 [!code-csharp[DrawingAttributes#15](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#15)]
 [!code-vb[DrawingAttributes#15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinHeight">
      <MemberSignature Language="C#" Value="public static readonly double MinHeight;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly float64 MinHeight" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Ink.DrawingAttributes.MinHeight" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinHeight As Double " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly double MinHeight;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinHeight : double" Usage="System.Windows.Ink.DrawingAttributes.MinHeight" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 <see cref="P:System.Windows.Ink.DrawingAttributes.Height" /> 属性所允许的最小值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Windows.Ink.DrawingAttributes.MinHeight> 字段检查某个值是否在属性允许的限制内 <xref:System.Windows.Ink.DrawingAttributes.Height%2A> 。 当值来自未知源（如不受约束的用户输入）时，请执行此操作。  
  
   
  
## Examples  
 下面的示例确保将 <xref:System.Windows.Ink.DrawingAttributes.Height%2A> 的属性 <xref:System.Windows.Ink.DrawingAttributes> 设置为合法值。 此示例假定存在一个名为 <xref:System.Windows.Controls.InkCanvas> 的 `inkCanvas1` 。  
  
 [!code-csharp[DrawingAttributes#14](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#14)]
 [!code-vb[DrawingAttributes#14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinWidth">
      <MemberSignature Language="C#" Value="public static readonly double MinWidth;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly float64 MinWidth" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Ink.DrawingAttributes.MinWidth" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinWidth As Double " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly double MinWidth;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinWidth : double" Usage="System.Windows.Ink.DrawingAttributes.MinWidth" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 <see cref="P:System.Windows.Ink.DrawingAttributes.Width" /> 属性所允许的最小值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Windows.Ink.DrawingAttributes.MinWidth> 字段检查某个值是否在属性允许的限制内 <xref:System.Windows.Ink.DrawingAttributes.Width%2A> 。 当值来自未知源（如不受约束的用户输入）时，请执行此操作。  
  
   
  
## Examples  
 下面的示例确保将 <xref:System.Windows.Ink.DrawingAttributes.Width%2A> 的属性 <xref:System.Windows.Ink.DrawingAttributes> 设置为合法值。 此示例假定存在一个名为 <xref:System.Windows.Controls.InkCanvas> 的 `inkCanvas1` 。  
  
 [!code-csharp[DrawingAttributes#15](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#15)]
 [!code-vb[DrawingAttributes#15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAttributeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAttributeChanged (System.Windows.Ink.PropertyDataChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAttributeChanged(class System.Windows.Ink.PropertyDataChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.OnAttributeChanged(System.Windows.Ink.PropertyDataChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAttributeChanged (e As PropertyDataChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAttributeChanged(System::Windows::Ink::PropertyDataChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAttributeChanged : System.Windows.Ink.PropertyDataChangedEventArgs -&gt; unit&#xA;override this.OnAttributeChanged : System.Windows.Ink.PropertyDataChangedEventArgs -&gt; unit" Usage="drawingAttributes.OnAttributeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Ink.PropertyDataChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Windows.Ink.PropertyDataChangedEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Windows.Ink.DrawingAttributes.AttributeChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。  
  
 <xref:System.Windows.Ink.DrawingAttributes.OnAttributeChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="e" /> 为 <see langword="null" />。</exception>
        <block subset="none" type="overrides"><para>当 <see cref="M:System.Windows.Ink.DrawingAttributes.OnAttributeChanged(System.Windows.Ink.PropertyDataChangedEventArgs)" /> 在派生类中重写时， <see cref="M:System.Windows.Ink.DrawingAttributes.OnAttributeChanged(System.Windows.Ink.PropertyDataChangedEventArgs)" /> 为基类调用方法，以确保注册的委托接收事件。</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (System.ComponentModel.PropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(class System.ComponentModel.PropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanged (e As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanged(System::ComponentModel::PropertyChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyChanged : System.ComponentModel.PropertyChangedEventArgs -&gt; unit&#xA;override this.OnPropertyChanged : System.ComponentModel.PropertyChangedEventArgs -&gt; unit" Usage="drawingAttributes.OnPropertyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">EventArgs</param>
        <summary>在任何 <see cref="T:System.Windows.Ink.DrawingAttributes" /> 属性更改时发生。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyDataChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyDataChanged (System.Windows.Ink.PropertyDataChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyDataChanged(class System.Windows.Ink.PropertyDataChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyDataChanged (e As PropertyDataChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyDataChanged(System::Windows::Ink::PropertyDataChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyDataChanged : System.Windows.Ink.PropertyDataChangedEventArgs -&gt; unit&#xA;override this.OnPropertyDataChanged : System.Windows.Ink.PropertyDataChangedEventArgs -&gt; unit" Usage="drawingAttributes.OnPropertyDataChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Ink.PropertyDataChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Windows.Ink.PropertyDataChangedEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Windows.Ink.DrawingAttributes.PropertyDataChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。  
  
 <xref:System.Windows.Ink.DrawingAttributes.OnPropertyDataChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="e" /> 为 <see langword="null" />。</exception>
        <block subset="none" type="overrides"><para>当 <see cref="M:System.Windows.Ink.DrawingAttributes.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)" /> 在派生类中重写时， <see cref="M:System.Windows.Ink.DrawingAttributes.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)" /> 为基类调用方法，以确保注册的委托接收事件。</para></block>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Ink.DrawingAttributes first, System.Windows.Ink.DrawingAttributes second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Windows.Ink.DrawingAttributes first, class System.Windows.Ink.DrawingAttributes second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.op_Equality(System.Windows.Ink.DrawingAttributes,System.Windows.Ink.DrawingAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (first As DrawingAttributes, second As DrawingAttributes) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Ink::DrawingAttributes ^ first, System::Windows::Ink::DrawingAttributes ^ second);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Ink.DrawingAttributes * System.Windows.Ink.DrawingAttributes -&gt; bool" Usage="first = second" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.Windows.Ink.DrawingAttributes" />
        <Parameter Name="second" Type="System.Windows.Ink.DrawingAttributes" />
      </Parameters>
      <Docs>
        <param name="first">要比较的第一个 <see cref="T:System.Windows.Ink.DrawingAttributes" /> 对象。</param>
        <param name="second">要比较的第二个 <see cref="T:System.Windows.Ink.DrawingAttributes" /> 对象。</param>
        <summary>确定指定的 <see cref="T:System.Windows.Ink.DrawingAttributes" /> 对象是否相等。</summary>
        <returns>如果对象相同，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.DrawingAttributes>如果以下属性相等，则两个对象相等：  
  
-   <xref:System.Windows.Ink.DrawingAttributes.Color%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.Height%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.IgnorePressure%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.Width%2A>  
  
> [!NOTE]
>  <xref:System.Windows.Ink.DrawingAttributes.op_Equality%2A>方法不检查自定义属性是否相等。  
  
 此运算符的等效方法为 <xref:System.Windows.Ink.DrawingAttributes.Equals%2A?displayProperty=nameWithType> 。  
  
## Examples  
 下面的示例比较两个 <xref:System.Windows.Ink.DrawingAttributes> 对象是否相等。 由于 <xref:System.Windows.Ink.DrawingAttributes.Color%2A> 和上的、、 <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A> <xref:System.Windows.Ink.DrawingAttributes.Height%2A> 和 <xref:System.Windows.Ink.DrawingAttributes.Width%2A> 属性 `attributes1` `attributes2` 被设置为相同的值，因此将显示 "DrawingAttributes 等于" 消息。  
  
 [!code-csharp[DrawingAttributes#10](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#10)]
 [!code-vb[DrawingAttributes#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#10)]  
[!code-csharp[DrawingAttributes#11](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#11)]
[!code-vb[DrawingAttributes#11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Ink.DrawingAttributes first, System.Windows.Ink.DrawingAttributes second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Windows.Ink.DrawingAttributes first, class System.Windows.Ink.DrawingAttributes second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.op_Inequality(System.Windows.Ink.DrawingAttributes,System.Windows.Ink.DrawingAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (first As DrawingAttributes, second As DrawingAttributes) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Ink::DrawingAttributes ^ first, System::Windows::Ink::DrawingAttributes ^ second);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Ink.DrawingAttributes * System.Windows.Ink.DrawingAttributes -&gt; bool" Usage="System.Windows.Ink.DrawingAttributes.op_Inequality (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.Windows.Ink.DrawingAttributes" />
        <Parameter Name="second" Type="System.Windows.Ink.DrawingAttributes" />
      </Parameters>
      <Docs>
        <param name="first">要比较的第一个 <see cref="T:System.Windows.Ink.DrawingAttributes" /> 对象。</param>
        <param name="second">要比较的第二个 <see cref="T:System.Windows.Ink.DrawingAttributes" /> 对象。</param>
        <summary>确定指定的 <see cref="T:System.Windows.Ink.DrawingAttributes" /> 对象是否不相等。</summary>
        <returns>如果对象不相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.DrawingAttributes>如果以下属性不相等，则两个对象不相等：  
  
-   <xref:System.Windows.Ink.DrawingAttributes.Color%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.Height%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.IgnorePressure%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.Width%2A>  
  
> [!NOTE]
>  <xref:System.Windows.Ink.DrawingAttributes.op_Inequality%2A>方法不检查自定义属性是否相等。  
  
 此运算符的等效方法是的求反 <xref:System.Windows.Ink.DrawingAttributes.Equals%2A?displayProperty=nameWithType> 。  
  
## Examples  
 下面的示例比较两个 <xref:System.Windows.Ink.DrawingAttributes> 对象是否不相等。 由于 <xref:System.Windows.Ink.DrawingAttributes.Color%2A> 和上的、、 <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A> <xref:System.Windows.Ink.DrawingAttributes.Height%2A> 和 <xref:System.Windows.Ink.DrawingAttributes.Width%2A> 属性 `attributes1` `attributes2` 被设置为相同的值，因此将显示 "DrawingAttributes 等于" 消息。  
  
 [!code-csharp[DrawingAttributes#10](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#10)]
 [!code-vb[DrawingAttributes#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#10)]  
[!code-csharp[DrawingAttributes#13](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#13)]
[!code-vb[DrawingAttributes#13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyDataChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Ink.PropertyDataChangedEventHandler PropertyDataChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Ink.PropertyDataChangedEventHandler PropertyDataChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Ink.DrawingAttributes.PropertyDataChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PropertyDataChanged As PropertyDataChangedEventHandler " FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Ink::PropertyDataChangedEventHandler ^ PropertyDataChanged;" />
      <MemberSignature Language="F#" Value="member this.PropertyDataChanged : System.Windows.Ink.PropertyDataChangedEventHandler " Usage="member this.PropertyDataChanged : System.Windows.Ink.PropertyDataChangedEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event PropertyDataChanged As PropertyDataChangedEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.PropertyDataChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在属性数据添加至 <see cref="T:System.Windows.Ink.StrokeCollection" /> 或从其中移除时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例是可绘制三维效果的自定义笔划的一部分。 笔划定义并存储一个名为的自定义属性 `Shadowed` ，该属性属于 <xref:System.Windows.Ink.Stroke.DrawingAttributes%2A> 。 当 `Shadowed` 属性更改时， <xref:System.Windows.Ink.DrawingAttributes.PropertyDataChanged> 事件处理程序会调用 <xref:System.Windows.Ink.Stroke.OnInvalidated%2A> 方法，这将导致重绘笔画。  
  
 [!code-csharp[StrokeCollectionShadow#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionShadow/CSharp/CustomRenderedStroke.cs#1)]
 [!code-vb[StrokeCollectionShadow#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionShadow/VisualBasic/CustomRenderedStroke.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePropertyData">
      <MemberSignature Language="C#" Value="public void RemovePropertyData (Guid propertyDataId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemovePropertyData(valuetype System.Guid propertyDataId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.RemovePropertyData(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemovePropertyData (propertyDataId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemovePropertyData(Guid propertyDataId);" />
      <MemberSignature Language="F#" Value="member this.RemovePropertyData : Guid -&gt; unit" Usage="drawingAttributes.RemovePropertyData propertyDataId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDataId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyDataId">与要移除的自定义属性相关联的 <see cref="T:System.Guid" />。</param>
        <summary>移除与指定 <see cref="T:System.Guid" /> 关联的自定义属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例演示如何从对象中删除自定义属性 <xref:System.Windows.Ink.DrawingAttributes> 。  
  
 [!code-csharp[DrawingAttributes#9](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#9)]
 [!code-vb[DrawingAttributes#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="propertyDataId" /> 不与 <see cref="T:System.Windows.Ink.DrawingAttributes" /> 对象的自定义属性关联。</exception>
        <altmember cref="M:System.Windows.Ink.DrawingAttributes.AddPropertyData(System.Guid,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="StylusTip">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StylusTip StylusTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Ink.StylusTip StylusTip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Ink.DrawingAttributes.StylusTip" />
      <MemberSignature Language="VB.NET" Value="Public Property StylusTip As StylusTip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Ink::StylusTip StylusTip { System::Windows::Ink::StylusTip get(); void set(System::Windows::Ink::StylusTip value); };" />
      <MemberSignature Language="F#" Value="member this.StylusTip : System.Windows.Ink.StylusTip with get, set" Usage="System.Windows.Ink.DrawingAttributes.StylusTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StylusTip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于绘制 <see cref="T:System.Windows.Ink.Stroke" /> 的触笔的形状。</summary>
        <value><see cref="T:System.Windows.Ink.StylusShape" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_StylusTip"></a>   
## <a name="xaml-text-usage"></a>XAML 文本用法  
 此属性通常不在 XAML 中使用。  
  
   
  
## Examples  
 下面的示例演示如何设置 <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A> 属性。 该示例假设你的应用程序具有一个名为的 <xref:System.Windows.Controls.InkCanvas> `inkCanvas1` 和两个 <xref:System.Windows.Ink.DrawingAttributes> 名为和的对象 `inkDA` `highlighterDA` 。 有关完整的示例，请参阅 <xref:System.Windows.Ink.DrawingAttributes> 类概述。  
  
 [!code-csharp[DrawingAttributes#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#1)]
 [!code-vb[DrawingAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusTipTransform">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Matrix StylusTipTransform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Matrix StylusTipTransform" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Ink.DrawingAttributes.StylusTipTransform" />
      <MemberSignature Language="VB.NET" Value="Public Property StylusTipTransform As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Matrix StylusTipTransform { System::Windows::Media::Matrix get(); void set(System::Windows::Media::Matrix value); };" />
      <MemberSignature Language="F#" Value="member this.StylusTipTransform : System.Windows.Media.Matrix with get, set" Usage="System.Windows.Ink.DrawingAttributes.StylusTipTransform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Matrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Media.Matrix" />，它指定要在触笔笔尖上执行的变换。</summary>
        <value>一个 <see cref="T:System.Windows.Media.Matrix" />，用于指定要在触笔笔尖上执行的变换。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A> 属性来旋转、倾斜或缩放触笔笔尖。  
  
<a name="xamlTextUsage_StylusTipTransform"></a>   
## <a name="xaml-text-usage"></a>XAML 文本用法  
 此属性通常不在 XAML 中使用。  
  
   
  
## Examples  
 下面的示例演示如何设置 <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A> 属性。 该示例假设你的应用程序具有一个名为的 <xref:System.Windows.Controls.InkCanvas> `inkCanvas1` 和两个 <xref:System.Windows.Ink.DrawingAttributes> 名为和的对象 `inkDA` `highlighterDA` 。 有关完整的示例，请参阅 <xref:System.Windows.Ink.DrawingAttributes> 类概述。  
  
 [!code-csharp[DrawingAttributes#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#1)]
 [!code-vb[DrawingAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">设置为 <see cref="P:System.Windows.Ink.DrawingAttributes.StylusTipTransform" /> 的矩阵不是可逆矩阵。  
  
- 或 - 
矩阵的 <see cref="P:System.Windows.Media.Matrix.OffsetX" /> 或 <see cref="P:System.Windows.Media.Matrix.OffsetY" /> 属性不为零。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
      <MemberSignature Language="C#" Value="event System.ComponentModel.PropertyChangedEventHandler System.ComponentModel.INotifyPropertyChanged.PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Ink.DrawingAttributes.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Custom Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged" />
      <MemberSignature Language="F#" Value="member this.System.ComponentModel.INotifyPropertyChanged.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " Usage="member this.System.ComponentModel.INotifyPropertyChanged.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在任何 <see cref="T:System.Windows.Ink.DrawingAttributes" /> 属性的值更改时发生。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Ink.DrawingAttributes.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Width : double with get, set" Usage="System.Windows.Ink.DrawingAttributes.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于绘制 <see cref="T:System.Windows.Ink.Stroke" /> 的触笔的宽度。</summary>
        <value>用于绘制 <see cref="T:System.Windows.Ink.Stroke" /> 的触笔的宽度。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当呈现时，以下因素会影响的高度和宽度 <xref:System.Windows.Ink.Stroke> ，而不会影响属性的值 <xref:System.Windows.Ink.DrawingAttributes.Width%2A> 。  
  
-   绘制时应用于触笔的压力量 <xref:System.Windows.Ink.Stroke> 。  
  
-   <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A> 属性的值。  
  
 如果将属性设置 <xref:System.Windows.Ink.DrawingAttributes.Width%2A> 为0与设备无关的像素 (dip) ，则将其更改为2个 dip。  
  
<a name="xamlTextUsage_Width"></a>   
## <a name="xaml-text-usage"></a>XAML 文本用法  
 此属性通常不在 XAML 中使用。  
  
   
  
## Examples  
 下面的示例演示如何设置 <xref:System.Windows.Ink.DrawingAttributes.Width%2A> 属性。 该示例假设你的应用程序具有一个名为的 <xref:System.Windows.Controls.InkCanvas> `inkCanvas1` 和两个 <xref:System.Windows.Ink.DrawingAttributes> 名为和的对象 `inkDA` `highlighterDA` 。 有关完整的示例，请参阅 <xref:System.Windows.Ink.DrawingAttributes> 类概述。  
  
 [!code-csharp[DrawingAttributes#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#1)]
 [!code-vb[DrawingAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Windows.Ink.DrawingAttributes.Width" /> 属性小于 <see cref="F:System.Double.Epsilon" /> 或 <see cref="F:System.Double.NaN" />。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
