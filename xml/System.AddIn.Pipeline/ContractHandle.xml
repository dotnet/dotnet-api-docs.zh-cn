<Type Name="ContractHandle" FullName="System.AddIn.Pipeline.ContractHandle">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2f6a51783201136c3d5d3e2464b1311f90af3baa" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86595905" /></Metadata><TypeSignature Language="C#" Value="public class ContractHandle : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContractHandle extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Pipeline.ContractHandle" />
  <TypeSignature Language="VB.NET" Value="Public Class ContractHandle&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContractHandle : IDisposable" />
  <TypeSignature Language="F#" Value="type ContractHandle = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>提供控制外接程序生存期的方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 由于外接程序模型提供外接程序在应用程序域和进程之间进行通信的功能，因此它不能依赖于垃圾回收器来回收它们。 此类通过将生存期标记获取到其协定，为外接程序提供引用计数机制。  
  
 <xref:System.AddIn.Pipeline.ContractHandle>构造对象时，它将对 <xref:System.AddIn.Pipeline.ContractBase.AcquireLifetimeToken%2A> 传递给构造函数的协定调用方法。 当 <xref:System.AddIn.Pipeline.ContractHandle> 释放或定稿对象时，它将对 <xref:System.AddIn.Pipeline.ContractBase.RevokeLifetimeToken%2A> 协定调用方法，这会删除其对协定的保留。  
  
 适配器实现协定。 <xref:System.AddIn.Pipeline.ContractHandle>类设计为在协定到视图的适配器中使用，以帮助管道开发人员管理正在改编的协定的生存期。 通常，此类的实例在构造适配器类的过程中实例化，并存储在适配器的实例字段中。 当适配器类被垃圾回收时，还将 <xref:System.AddIn.Pipeline.ContractHandle> 收集该对象，并且该 <xref:System.AddIn.Pipeline.ContractHandle> 对象将在协定上撤消生存期标记。  
  
 建议从类继承视图到协定适配器 <xref:System.AddIn.Pipeline.ContractBase> 。 然后，你可以使用的成员的默认实现 <xref:System.AddIn.Contract.IContract> ，这意味着你只需实现特定协定的成员。  
  
   
  
## Examples  
 下面的示例演示如何在管道外接程序端的协定到视图适配器中设置生存期标记句柄。  
  
 [!code-csharp[AddinP2HostSideAdapters#2](~/samples/snippets/csharp/VS_Snippets_CLR/AddInP2HostSideAdapters/cs/Calc2ContractToViewHostSideAdapter.cs#2)]
 [!code-vb[AddinP2HostSideAdapters#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AddInP2HostSideAdapters/vb/Calc2ContractToViewHostSideAdapter.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContractHandle (System.AddIn.Contract.IContract contract);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.AddIn.Contract.IContract contract) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.#ctor(System.AddIn.Contract.IContract)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contract As IContract)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContractHandle(System::AddIn::Contract::IContract ^ contract);" />
      <MemberSignature Language="F#" Value="new System.AddIn.Pipeline.ContractHandle : System.AddIn.Contract.IContract -&gt; System.AddIn.Pipeline.ContractHandle" Usage="new System.AddIn.Pipeline.ContractHandle contract" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contract" Type="System.AddIn.Contract.IContract" />
      </Parameters>
      <Docs>
        <param name="contract">要在管线中使用的协定。</param>
        <summary>初始化 <see cref="T:System.AddIn.Pipeline.ContractHandle" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="contract" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="AppDomainOwner">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.IContract AppDomainOwner (AppDomain domain);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Contract.IContract AppDomainOwner(class System.AppDomain domain) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.AppDomainOwner(System.AppDomain)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AppDomainOwner (domain As AppDomain) As IContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::AddIn::Contract::IContract ^ AppDomainOwner(AppDomain ^ domain);" />
      <MemberSignature Language="F#" Value="static member AppDomainOwner : AppDomain -&gt; System.AddIn.Contract.IContract" Usage="System.AddIn.Pipeline.ContractHandle.AppDomainOwner domain" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
      </Parameters>
      <Docs>
        <param name="domain">要检查的应用程序域。</param>
        <summary>创建应用程序域时获取外接程序端适配器的实例。</summary>
        <returns>一个 <see cref="T:System.AddIn.Contract.IContract" /> 对象，表示应用程序域的所有者。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 外接程序端适配器的类型为 <xref:System.AddIn.Contract.IContract> 。  
  
 如果应用程序域之前是由用户创建的，则没有所有者。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="domain" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Contract">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.IContract Contract { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.AddIn.Contract.IContract Contract" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Pipeline.ContractHandle.Contract" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Contract As IContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::AddIn::Contract::IContract ^ Contract { System::AddIn::Contract::IContract ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Contract : System.AddIn.Contract.IContract" Usage="System.AddIn.Pipeline.ContractHandle.Contract" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IContract</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取管线使用的协定。</summary>
        <value>派生自 <see cref="T:System.AddIn.Contract.IContract" /> 的协定。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractOwnsAppDomain">
      <MemberSignature Language="C#" Value="public static bool ContractOwnsAppDomain (System.AddIn.Contract.IContract contract, AppDomain domain);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContractOwnsAppDomain(class System.AddIn.Contract.IContract contract, class System.AppDomain domain) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.ContractOwnsAppDomain(System.AddIn.Contract.IContract,System.AppDomain)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContractOwnsAppDomain (contract As IContract, domain As AppDomain) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContractOwnsAppDomain(System::AddIn::Contract::IContract ^ contract, AppDomain ^ domain);" />
      <MemberSignature Language="F#" Value="static member ContractOwnsAppDomain : System.AddIn.Contract.IContract * AppDomain -&gt; bool" Usage="System.AddIn.Pipeline.ContractHandle.ContractOwnsAppDomain (contract, domain)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.AddIn.Contract.IContract" />
        <Parameter Name="domain" Type="System.AppDomain" />
      </Parameters>
      <Docs>
        <param name="contract">要检查的协定。</param>
        <param name="domain">要检查的应用程序域。</param>
        <summary>确定指定的协定是否拥有应用程序域。</summary>
        <returns>如果协定拥有应用程序域，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="contract" /> 或 <paramref name="domain" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>对协定调用生存期标记。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="contractHandle.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>无论输入什么内容，均对协定调用生存期标记。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="contractHandle.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
        <summary>对协定调用生存期标记（无论输入什么内容）并可以选择释放托管资源。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ContractHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ContractHandle ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="contractHandle.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>释放与 <see cref="T:System.AddIn.Pipeline.ContractHandle" /> 实例关联的资源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法重写 <xref:System.Object.Finalize%2A?displayProperty=nameWithType>。 应用程序代码不应调用此方法; <xref:System.AddIn.Pipeline.ContractHandle.Finalize%2A> 在垃圾回收过程中会自动调用对象的方法，除非已通过调用方法禁用了垃圾回收器终止 <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> 。  
  
 当垃圾回收器调用此方法时，此方法将调用 <xref:System.AddIn.Pipeline.ContractHandle.Dispose%28System.Boolean%29> 方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
