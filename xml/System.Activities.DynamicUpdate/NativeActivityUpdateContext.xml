<Type Name="NativeActivityUpdateContext" FullName="System.Activities.DynamicUpdate.NativeActivityUpdateContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="11c6313a794514d4664fd2b16b968a37da77f4da" /><Meta Name="ms.sourcegitcommit" Value="9f423345753728e8cad38d4a22663a109e69ea91" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/04/2021" /><Meta Name="ms.locfileid" Value="102076377" /></Metadata><TypeSignature Language="C#" Value="public class NativeActivityUpdateContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NativeActivityUpdateContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.DynamicUpdate.NativeActivityUpdateContext" />
  <TypeSignature Language="VB.NET" Value="Public Class NativeActivityUpdateContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class NativeActivityUpdateContext" />
  <TypeSignature Language="F#" Value="type NativeActivityUpdateContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示本机活动更新上下文。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此类支持 Windows Workflow Foundation 的版本控制和动态更新功能。 有关工作流版本控制、工作流标识和动态更新的详细信息，请参阅以下主题。  
  
 [工作流版本控制](/dotnet/framework/windows-workflow-foundation/whats-new-in-wf-in-dotnet)  
 介绍 .NET Framework 4.5 中引入的工作流版本控制功能。  
  
 [动态更新](/dotnet/framework/windows-workflow-foundation/dynamic-update)  
 介绍如何使用动态更新来更新持久工作流实例的工作流定义。  
  
 [使用 WorkflowApplication 标识和版本控制](/dotnet/framework/windows-workflow-foundation/using-workflowidentity-and-versioning)  
 介绍如何使用 <xref:System.Activities.WorkflowIdentity> 并行承载工作流的多个版本。  
  
 [WorkflowServiceHost 中的并行版本控制](/dotnet/framework/wcf/feature-details/side-by-side-versioning-in-workflowservicehost)  
 介绍如何在单个终结点上托管多个版本的工作流。  
  
 [如何：并行承载多个版本的工作流](/dotnet/framework/windows-workflow-foundation/how-to-host-multiple-versions-of-a-workflow-side-by-side)  
 [入门教程](/dotnet/framework/windows-workflow-foundation/getting-started-tutorial)中的此步骤演示如何更新工作流定义，并同时使用旧定义和新定义来承载工作流。  
  
 [如何：更新正在运行的工作流实例的定义](/dotnet/framework/windows-workflow-foundation/how-to-update-the-definition-of-a-running-workflow-instance)  
 [入门教程](/dotnet/framework/windows-workflow-foundation/getting-started-tutorial)中的此步骤演示如何更新持久性工作流实例以使用新的工作流定义。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ActivityInstanceId">
      <MemberSignature Language="C#" Value="public string ActivityInstanceId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ActivityInstanceId" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ActivityInstanceId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActivityInstanceId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ActivityInstanceId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActivityInstanceId : string" Usage="System.Activities.DynamicUpdate.NativeActivityUpdateContext.ActivityInstanceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取当前正在执行的活动实例的唯一标识符。</summary>
        <value>当前正在执行的活动实例的唯一标识符。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateBookmark">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>创建一个点，以便 NativeActivity 能够在该点被动等待恢复。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.Bookmark CreateBookmark ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Bookmark CreateBookmark() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.CreateBookmark" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBookmark () As Bookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Bookmark ^ CreateBookmark();" />
      <MemberSignature Language="F#" Value="member this.CreateBookmark : unit -&gt; System.Activities.Bookmark" Usage="nativeActivityUpdateContext.CreateBookmark " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建一个点，以便 NativeActivity 能够在该点被动等待恢复。</summary>
        <returns>一个书签。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.Bookmark CreateBookmark (System.Activities.BookmarkCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Bookmark CreateBookmark(class System.Activities.BookmarkCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.CreateBookmark(System.Activities.BookmarkCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBookmark (callback As BookmarkCallback) As Bookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Bookmark ^ CreateBookmark(System::Activities::BookmarkCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.CreateBookmark : System.Activities.BookmarkCallback -&gt; System.Activities.Bookmark" Usage="nativeActivityUpdateContext.CreateBookmark callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Activities.BookmarkCallback" />
      </Parameters>
      <Docs>
        <param name="callback">通知指示 NativeActivity 恢复时要调用的方法。</param>
        <summary>创建一个点，以便 NativeActivity 能够在该点被动等待恢复，并计划在通知恢复操作完成时要执行的指定方法。</summary>
        <returns>回调方法</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.Bookmark CreateBookmark (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Bookmark CreateBookmark(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.CreateBookmark(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBookmark (name As String) As Bookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Bookmark ^ CreateBookmark(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.CreateBookmark : string -&gt; System.Activities.Bookmark" Usage="nativeActivityUpdateContext.CreateBookmark name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">书签的名称。</param>
        <summary>创建具有指定名称的点，以便 NativeActivity 能够在该点被动等待恢复。</summary>
        <returns>包括书签名称的书签。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.Bookmark CreateBookmark (System.Activities.BookmarkCallback callback, System.Activities.BookmarkOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Bookmark CreateBookmark(class System.Activities.BookmarkCallback callback, valuetype System.Activities.BookmarkOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.CreateBookmark(System.Activities.BookmarkCallback,System.Activities.BookmarkOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBookmark (callback As BookmarkCallback, options As BookmarkOptions) As Bookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Bookmark ^ CreateBookmark(System::Activities::BookmarkCallback ^ callback, System::Activities::BookmarkOptions options);" />
      <MemberSignature Language="F#" Value="member this.CreateBookmark : System.Activities.BookmarkCallback * System.Activities.BookmarkOptions -&gt; System.Activities.Bookmark" Usage="nativeActivityUpdateContext.CreateBookmark (callback, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Activities.BookmarkCallback" />
        <Parameter Name="options" Type="System.Activities.BookmarkOptions" />
      </Parameters>
      <Docs>
        <param name="callback">通知指示 NativeActivity 恢复时要调用的方法。</param>
        <param name="options">在当前 NativeActivity 的执行过程中控制书签运行方式（相对于其他线程）的枚举设置。</param>
        <summary>创建一个点，以便 NativeActivity 能够在该点被动等待恢复，提供在通知恢复操作完成时要执行的指定方法，以及在当前 NativeActivity 的执行过程中控制书签使用方式的指定选项。</summary>
        <returns>包括回调方法和书签执行选项的书签。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.Bookmark CreateBookmark (string name, System.Activities.BookmarkCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Bookmark CreateBookmark(string name, class System.Activities.BookmarkCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.CreateBookmark(System.String,System.Activities.BookmarkCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBookmark (name As String, callback As BookmarkCallback) As Bookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Bookmark ^ CreateBookmark(System::String ^ name, System::Activities::BookmarkCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.CreateBookmark : string * System.Activities.BookmarkCallback -&gt; System.Activities.Bookmark" Usage="nativeActivityUpdateContext.CreateBookmark (name, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="callback" Type="System.Activities.BookmarkCallback" />
      </Parameters>
      <Docs>
        <param name="name">书签的名称。</param>
        <param name="callback">通知指示 NativeActivity 恢复时要调用的方法。</param>
        <summary>创建一个点，以便 NativeActivity 能够在该点被动等待恢复，该点具有指定名称，还提供在通知恢复操作完成时要执行的指定方法。</summary>
        <returns>包括书签名称和回调方法的书签。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.Bookmark CreateBookmark (string name, System.Activities.BookmarkCallback callback, System.Activities.BookmarkOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Bookmark CreateBookmark(string name, class System.Activities.BookmarkCallback callback, valuetype System.Activities.BookmarkOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBookmark (name As String, callback As BookmarkCallback, options As BookmarkOptions) As Bookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Bookmark ^ CreateBookmark(System::String ^ name, System::Activities::BookmarkCallback ^ callback, System::Activities::BookmarkOptions options);" />
      <MemberSignature Language="F#" Value="member this.CreateBookmark : string * System.Activities.BookmarkCallback * System.Activities.BookmarkOptions -&gt; System.Activities.Bookmark" Usage="nativeActivityUpdateContext.CreateBookmark (name, callback, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="callback" Type="System.Activities.BookmarkCallback" />
        <Parameter Name="options" Type="System.Activities.BookmarkOptions" />
      </Parameters>
      <Docs>
        <param name="name">书签的名称。</param>
        <param name="callback">通知指示 NativeActivity 恢复时要调用的方法。</param>
        <param name="options">在当前 NativeActivity 的执行过程中控制书签使用方式的书签选项。</param>
        <summary>创建一个点，以便 NativeActivity 能够在该点被动等待恢复，该点具有指定名称，提供在通知恢复操作完成时要执行的指定方法，以及在当前 NativeActivity 的执行过程中控制书签使用方式的指定选项。</summary>
        <returns>该书签包括书签名称、回调方法和书签执行选项。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.Bookmark CreateBookmark (string name, System.Activities.BookmarkCallback callback, System.Activities.BookmarkScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Bookmark CreateBookmark(string name, class System.Activities.BookmarkCallback callback, class System.Activities.BookmarkScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkScope)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBookmark (name As String, callback As BookmarkCallback, scope As BookmarkScope) As Bookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Bookmark ^ CreateBookmark(System::String ^ name, System::Activities::BookmarkCallback ^ callback, System::Activities::BookmarkScope ^ scope);" />
      <MemberSignature Language="F#" Value="member this.CreateBookmark : string * System.Activities.BookmarkCallback * System.Activities.BookmarkScope -&gt; System.Activities.Bookmark" Usage="nativeActivityUpdateContext.CreateBookmark (name, callback, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="callback" Type="System.Activities.BookmarkCallback" />
        <Parameter Name="scope" Type="System.Activities.BookmarkScope" />
      </Parameters>
      <Docs>
        <param name="name">书签的名称。</param>
        <param name="callback">通知指示 NativeActivity 恢复时要调用的方法。</param>
        <param name="scope">工作流运行时期间在同一协议下运行的一组书签所应用的标识符。</param>
        <summary>创建一个点，以便 NativeActivity 能够在该点被动等待恢复，该点具有指定名称，提供在通知恢复操作完成时要执行的指定方法，以及书签的指定范围。</summary>
        <returns>该书签包括书签名称、回调方法和书签范围。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.Bookmark CreateBookmark (string name, System.Activities.BookmarkCallback callback, System.Activities.BookmarkScope scope, System.Activities.BookmarkOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Bookmark CreateBookmark(string name, class System.Activities.BookmarkCallback callback, class System.Activities.BookmarkScope scope, valuetype System.Activities.BookmarkOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkScope,System.Activities.BookmarkOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBookmark (name As String, callback As BookmarkCallback, scope As BookmarkScope, options As BookmarkOptions) As Bookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Bookmark ^ CreateBookmark(System::String ^ name, System::Activities::BookmarkCallback ^ callback, System::Activities::BookmarkScope ^ scope, System::Activities::BookmarkOptions options);" />
      <MemberSignature Language="F#" Value="member this.CreateBookmark : string * System.Activities.BookmarkCallback * System.Activities.BookmarkScope * System.Activities.BookmarkOptions -&gt; System.Activities.Bookmark" Usage="nativeActivityUpdateContext.CreateBookmark (name, callback, scope, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="callback" Type="System.Activities.BookmarkCallback" />
        <Parameter Name="scope" Type="System.Activities.BookmarkScope" />
        <Parameter Name="options" Type="System.Activities.BookmarkOptions" />
      </Parameters>
      <Docs>
        <param name="name">书签的名称。</param>
        <param name="callback">通知指示 NativeActivity 恢复时要调用的方法。</param>
        <param name="scope">工作流运行时期间在同一协议下运行的一组书签所应用的标识符。</param>
        <param name="options">在当前 NativeActivity 的执行过程中控制书签使用方式的书签选项。</param>
        <summary>创建一个点，以便 NativeActivity 能够在该点被动等待恢复，该点具有指定名称，提供在通知恢复操作完成时要执行的指定方法，还提供书签的指定范围，以及在当前 NativeActivity 的执行过程中控制书签使用方式的指定选项。</summary>
        <returns>该书签包括书签名称、回调方法、书签范围和书签执行选项。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultBookmarkScope">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkScope DefaultBookmarkScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.BookmarkScope DefaultBookmarkScope" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DynamicUpdate.NativeActivityUpdateContext.DefaultBookmarkScope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultBookmarkScope As BookmarkScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::BookmarkScope ^ DefaultBookmarkScope { System::Activities::BookmarkScope ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultBookmarkScope : System.Activities.BookmarkScope" Usage="System.Activities.DynamicUpdate.NativeActivityUpdateContext.DefaultBookmarkScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与工作流的根关联的书签范围。</summary>
        <value>与工作流的根关联的书签范围。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisallowUpdate">
      <MemberSignature Language="C#" Value="public void DisallowUpdate (string reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DisallowUpdate(string reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.DisallowUpdate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisallowUpdate (reason As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DisallowUpdate(System::String ^ reason);" />
      <MemberSignature Language="F#" Value="member this.DisallowUpdate : string -&gt; unit" Usage="nativeActivityUpdateContext.DisallowUpdate reason" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reason">不允许上下文原因。</param>
        <summary>禁止更新 <see cref="T:System.Activities.DynamicUpdate.NativeActivityUpdateContext" />。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindExecutionProperty">
      <MemberSignature Language="C#" Value="public object FindExecutionProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object FindExecutionProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.FindExecutionProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindExecutionProperty (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FindExecutionProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.FindExecutionProperty : string -&gt; obj" Usage="nativeActivityUpdateContext.FindExecutionProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">工作流执行属性的名称。</param>
        <summary>查找具有指定名称的工作流执行属性。</summary>
        <returns>具有指定名称的工作流执行属性。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLocation&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.Location&lt;T&gt; GetLocation&lt;T&gt; (System.Activities.Variable variable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Location`1&lt;!!T&gt; GetLocation&lt;T&gt;(class System.Activities.Variable variable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.GetLocation``1(System.Activities.Variable)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLocation(Of T) (variable As Variable) As Location(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Activities::Location&lt;T&gt; ^ GetLocation(System::Activities::Variable ^ variable);" />
      <MemberSignature Language="F#" Value="member this.GetLocation : System.Activities.Variable -&gt; System.Activities.Location&lt;'T&gt;" Usage="nativeActivityUpdateContext.GetLocation variable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Location&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable" />
      </Parameters>
      <Docs>
        <typeparam name="T">要返回的位置的类型。</typeparam>
        <param name="variable">来自该位置的变量。</param>
        <summary>返回指定引用的位置的类型位置。</summary>
        <returns>指定的引用的位置的类型位置。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSavedOriginalValue">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指示是否要为当前活动保存初始值的对象。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSavedOriginalValue">
      <MemberSignature Language="C#" Value="public object GetSavedOriginalValue (System.Activities.Activity childActivity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetSavedOriginalValue(class System.Activities.Activity childActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.GetSavedOriginalValue(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSavedOriginalValue (childActivity As Activity) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetSavedOriginalValue(System::Activities::Activity ^ childActivity);" />
      <MemberSignature Language="F#" Value="member this.GetSavedOriginalValue : System.Activities.Activity -&gt; obj" Usage="nativeActivityUpdateContext.GetSavedOriginalValue childActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childActivity" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="childActivity">子活动。</param>
        <summary>指示是否要为当前活动保存初始值的对象。</summary>
        <returns>用于当前活动保存原始值的对象。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSavedOriginalValue">
      <MemberSignature Language="C#" Value="public object GetSavedOriginalValue (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetSavedOriginalValue(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.GetSavedOriginalValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSavedOriginalValue (propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetSavedOriginalValue(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.GetSavedOriginalValue : string -&gt; obj" Usage="nativeActivityUpdateContext.GetSavedOriginalValue propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">属性的名称。</param>
        <summary>指示是否要为当前活动保存初始值的对象。</summary>
        <returns>用于当前活动保存原始值的对象。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValue">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>获取指定对象的值。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (System.Activities.Argument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(class System.Activities.Argument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.GetValue(System.Activities.Argument)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (argument As Argument) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Activities::Argument ^ argument);" />
      <MemberSignature Language="F#" Value="member this.GetValue : System.Activities.Argument -&gt; obj" Usage="nativeActivityUpdateContext.GetValue argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Activities.Argument" />
      </Parameters>
      <Docs>
        <param name="argument">要检查的参数。</param>
        <summary>获取指定“参数”的值。</summary>
        <returns>指定参数的值。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (System.Activities.RuntimeArgument runtimeArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(class System.Activities.RuntimeArgument runtimeArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.GetValue(System.Activities.RuntimeArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (runtimeArgument As RuntimeArgument) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Activities::RuntimeArgument ^ runtimeArgument);" />
      <MemberSignature Language="F#" Value="member this.GetValue : System.Activities.RuntimeArgument -&gt; obj" Usage="nativeActivityUpdateContext.GetValue runtimeArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="runtimeArgument" Type="System.Activities.RuntimeArgument" />
      </Parameters>
      <Docs>
        <param name="runtimeArgument">要检查的参数。</param>
        <summary>获取指定 RuntimeArgument 的值。</summary>
        <returns>指定的 RuntimeArgument 的值。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (System.Activities.Variable variable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(class System.Activities.Variable variable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.GetValue(System.Activities.Variable)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (variable As Variable) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Activities::Variable ^ variable);" />
      <MemberSignature Language="F#" Value="member this.GetValue : System.Activities.Variable -&gt; obj" Usage="nativeActivityUpdateContext.GetValue variable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable" />
      </Parameters>
      <Docs>
        <param name="variable">在当前 NativeActivity 实例的执行过程中要检索其值的变量。</param>
        <summary>获取当前 NativeActivity 实例中指定变量的值。</summary>
        <returns>当前 NativeActivity 实例中指定变量的值。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetValue&lt;T&gt; (System.Activities.Variable&lt;T&gt; variable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetValue&lt;T&gt;(class System.Activities.Variable`1&lt;!!T&gt; variable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.GetValue``1(System.Activities.Variable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue(Of T) (variable As Variable(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T GetValue(System::Activities::Variable&lt;T&gt; ^ variable);" />
      <MemberSignature Language="F#" Value="member this.GetValue : System.Activities.Variable&lt;'T&gt; -&gt; 'T" Usage="nativeActivityUpdateContext.GetValue variable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">要检索其值的变量的类型。</typeparam>
        <param name="variable">值在执行当前 NativeActivity 实例期间需检索的泛型变量。</param>
        <summary>返回当前 NativeActivity 实例中指定泛型变量的值。</summary>
        <returns>当前 NativeActivity 实例中指定泛型变量的值。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCancellationRequested">
      <MemberSignature Language="C#" Value="public bool IsCancellationRequested { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCancellationRequested" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DynamicUpdate.NativeActivityUpdateContext.IsCancellationRequested" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCancellationRequested As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCancellationRequested { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCancellationRequested : bool" Usage="System.Activities.DynamicUpdate.NativeActivityUpdateContext.IsCancellationRequested" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于指示是否要取消当前正在执行的 NativeActivity 实例的值。</summary>
        <value>如果要取消当前正在执行的 NativeActivity 实例，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNewlyAdded">
      <MemberSignature Language="C#" Value="public bool IsNewlyAdded (System.Activities.Activity childActivity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNewlyAdded(class System.Activities.Activity childActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.IsNewlyAdded(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNewlyAdded (childActivity As Activity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNewlyAdded(System::Activities::Activity ^ childActivity);" />
      <MemberSignature Language="F#" Value="member this.IsNewlyAdded : System.Activities.Activity -&gt; bool" Usage="nativeActivityUpdateContext.IsNewlyAdded childActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childActivity" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="childActivity">子活动。</param>
        <summary>初始化 <see cref="T:System.Activities.DynamicUpdate.NativeActivityUpdateContext" /> 是否已新添加。</summary>
        <returns>如果新增 <see cref="T:System.Activities.DynamicUpdate.NativeActivityUpdateContext" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllBookmarks">
      <MemberSignature Language="C#" Value="public void RemoveAllBookmarks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAllBookmarks() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.RemoveAllBookmarks" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAllBookmarks ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAllBookmarks();" />
      <MemberSignature Language="F#" Value="member this.RemoveAllBookmarks : unit -&gt; unit" Usage="nativeActivityUpdateContext.RemoveAllBookmarks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>移除与当前正在执行的 NativeActivity 实例关联的所有书签。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveBookmark">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>移除指定书签。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveBookmark">
      <MemberSignature Language="C#" Value="public bool RemoveBookmark (System.Activities.Bookmark bookmark);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveBookmark(class System.Activities.Bookmark bookmark) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.RemoveBookmark(System.Activities.Bookmark)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveBookmark (bookmark As Bookmark) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveBookmark(System::Activities::Bookmark ^ bookmark);" />
      <MemberSignature Language="F#" Value="member this.RemoveBookmark : System.Activities.Bookmark -&gt; bool" Usage="nativeActivityUpdateContext.RemoveBookmark bookmark" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
      </Parameters>
      <Docs>
        <param name="bookmark">NativeActivity 实例可以被动等待恢复的点。</param>
        <summary>从当前正在执行的 NativeActivity 实例中移除指定书签。</summary>
        <returns>如果从当前执行的 NativeActivity 事例中移除指定书签，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveBookmark">
      <MemberSignature Language="C#" Value="public bool RemoveBookmark (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveBookmark(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.RemoveBookmark(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveBookmark (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveBookmark(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.RemoveBookmark : string -&gt; bool" Usage="nativeActivityUpdateContext.RemoveBookmark name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">书签的名称。</param>
        <summary>移除具有指定名称的书签。</summary>
        <returns>如果已移除具有指定名称的书签，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveBookmark">
      <MemberSignature Language="C#" Value="public bool RemoveBookmark (string name, System.Activities.BookmarkScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveBookmark(string name, class System.Activities.BookmarkScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.RemoveBookmark(System.String,System.Activities.BookmarkScope)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveBookmark (name As String, scope As BookmarkScope) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveBookmark(System::String ^ name, System::Activities::BookmarkScope ^ scope);" />
      <MemberSignature Language="F#" Value="member this.RemoveBookmark : string * System.Activities.BookmarkScope -&gt; bool" Usage="nativeActivityUpdateContext.RemoveBookmark (name, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="scope" Type="System.Activities.BookmarkScope" />
      </Parameters>
      <Docs>
        <param name="name">书签的名称。</param>
        <param name="scope">在同一协议下运行的一组“书签”对象的唯一 GUID 标识符。</param>
        <summary>移除具有指定名称和指定书签范围的书签。</summary>
        <returns>如果移除具有指定名称和指定书签范围的书签，则为 <see langword="true" />，否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction">
      <MemberSignature Language="C#" Value="public void ScheduleAction (System.Activities.ActivityAction activityAction, System.Activities.CompletionCallback onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction(class System.Activities.ActivityAction activityAction, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction(System.Activities.ActivityAction,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction (activityAction As ActivityAction, Optional onCompleted As CompletionCallback = Nothing, Optional onFaulted As FaultCallback = Nothing)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <param name="activityAction">在父活动中发生特定事件时执行的操作。</param>
        <param name="onCompleted">一个书签，用于指示 ActivityAction 完成后恢复父活动执行的位置。</param>
        <param name="onFaulted">一个书签，用于指示在错误导致 ActivityAction 终止的情况下将恢复父活动执行的位置。</param>
        <summary>计划指定的 ActivityAction 的执行，该操作没有参数，并在 ActivityAction 完成后恢复父进程的指定回调位置标记书签。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T&gt; (System.Activities.ActivityAction&lt;T&gt; activityAction, T argument, System.Activities.CompletionCallback onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T&gt;(class System.Activities.ActivityAction`1&lt;!!T&gt; activityAction, !!T argument, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``1(System.Activities.ActivityAction{``0},``0,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T) (activityAction As ActivityAction(Of T), argument As T, Optional onCompleted As CompletionCallback = Nothing, Optional onFaulted As FaultCallback = Nothing)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T&gt; * 'T * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T&gt;" />
        <Parameter Name="argument" Type="T" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T">传送到活动中的数据。</typeparam>
        <param name="activityAction">在父活动中发生特定事件时执行的操作。</param>
        <param name="argument">将数据传送到活动中的自变量。</param>
        <param name="onCompleted">一个书签，用于指示 ActivityAction&lt;T&gt; 完成后恢复父活动执行的位置。</param>
        <param name="onFaulted">一个书签，用于指示在错误导致 ActivityAction&lt;T&gt; 终止的情况下恢复父活动执行的位置。</param>
        <summary>计划指定的 ActivityAction&lt;T&gt; 的执行，该操作的 in 实参具有一个形参，并在 ActivityAction&lt;T&gt; 完成后恢复父进程的指定回调位置标记书签。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2&gt; (System.Activities.ActivityAction&lt;T1,T2&gt; activityAction, T1 argument1, T2 argument2, System.Activities.CompletionCallback onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2&gt;(class System.Activities.ActivityAction`2&lt;!!T1, !!T2&gt; activityAction, !!T1 argument1, !!T2 argument2, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``2(System.Activities.ActivityAction{``0,``1},``0,``1,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2) (activityAction As ActivityAction(Of T1, T2), argument1 As T1, argument2 As T2, Optional onCompleted As CompletionCallback = Nothing, Optional onFaulted As FaultCallback = Nothing)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2&gt; * 'T1 * 'T2 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">传送到活动中的数据。</typeparam>
        <typeparam name="T2">传送到活动中的数据。</typeparam>
        <param name="activityAction">在父活动中发生特定事件时执行的操作。</param>
        <param name="argument1">将数据传送到活动中的自变量。</param>
        <param name="argument2">将数据传送到活动中的自变量。</param>
        <param name="onCompleted">一个书签，用于指示 ActivityAction&lt;T1, T2&gt; 完成后恢复父活动执行的位置。</param>
        <param name="onFaulted">一个书签，用于指示在错误导致 ActivityAction&lt;T1, T2&gt; 终止的情况下恢复父活动执行的位置。</param>
        <summary>计划指定的 ActivityAction&lt;T1, T2&gt; 的执行，该操作的 in 实参具有两个形参，并在 ActivityAction&lt;T1, T2&gt; 完成后恢复父进程的指定回调位置标记书签。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3&gt; (System.Activities.ActivityAction&lt;T1,T2,T3&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, System.Activities.CompletionCallback onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3&gt;(class System.Activities.ActivityAction`3&lt;!!T1, !!T2, !!T3&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``3(System.Activities.ActivityAction{``0,``1,``2},``0,``1,``2,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3) (activityAction As ActivityAction(Of T1, T2, T3), argument1 As T1, argument2 As T2, argument3 As T3, Optional onCompleted As CompletionCallback = Nothing, Optional onFaulted As FaultCallback = Nothing)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3&gt; * 'T1 * 'T2 * 'T3 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">传送到活动中的数据。</typeparam>
        <typeparam name="T2">传送到活动中的数据。</typeparam>
        <typeparam name="T3">传送到活动中的数据。</typeparam>
        <param name="activityAction">在父活动中发生特定事件时执行的操作。</param>
        <param name="argument1">将数据传送到活动中的自变量。</param>
        <param name="argument2">将数据传送到活动中的自变量。</param>
        <param name="argument3">将数据传送到活动中的自变量。</param>
        <param name="onCompleted">一个书签，用于指示 ActivityAction&lt;T1, T2, T3&gt; 完成后恢复父活动执行的位置。</param>
        <param name="onFaulted">一个书签，用于指示在错误导致 ActivityAction&lt;T1, T2, T3&gt; 终止的情况下恢复父活动执行的位置。</param>
        <summary>计划指定的 ActivityAction&lt;T1, T2, T3&gt; 的执行，该操作的 in 实参具有 3 个形参，并在 ActivityAction&lt;T1, T2, T3&gt; 完成后恢复父进程的指定回调位置标记书签。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3,T4&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, System.Activities.CompletionCallback onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3, T4&gt;(class System.Activities.ActivityAction`4&lt;!!T1, !!T2, !!T3, !!T4&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``4(System.Activities.ActivityAction{``0,``1,``2,``3},``0,``1,``2,``3,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3, T4) (activityAction As ActivityAction(Of T1, T2, T3, T4), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, Optional onCompleted As CompletionCallback = Nothing, Optional onFaulted As FaultCallback = Nothing)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4&gt; * 'T1 * 'T2 * 'T3 * 'T4 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">传送到活动中的数据。</typeparam>
        <typeparam name="T2">传送到活动中的数据。</typeparam>
        <typeparam name="T3">传送到活动中的数据。</typeparam>
        <typeparam name="T4">传送到活动中的数据。</typeparam>
        <param name="activityAction">在父活动中发生特定事件时执行的操作。</param>
        <param name="argument1">将数据传送到活动中的自变量。</param>
        <param name="argument2">将数据传送到活动中的自变量。</param>
        <param name="argument3">将数据传送到活动中的自变量。</param>
        <param name="argument4">将数据传送到活动中的自变量。</param>
        <param name="onCompleted">一个书签，用于指示 ActivityAction&lt;T1, T2, T3, T4&gt; 完成后恢复父活动执行的位置。</param>
        <param name="onFaulted">一个书签，用于指示在错误导致 ActivityAction&lt;T1, T2, T3, T4&gt; 终止的情况下恢复父活动执行的位置。</param>
        <summary>计划指定的 ActivityAction&lt;T1, T2, T3, T4&gt; 的执行，该操作的 in 实参具有 4 个形参，并在 ActivityAction&lt;T1, T2, T3, T4&gt; 完成后恢复父进程的指定回调位置标记书签。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3,T4,T5&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, System.Activities.CompletionCallback onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3, T4, T5&gt;(class System.Activities.ActivityAction`5&lt;!!T1, !!T2, !!T3, !!T4, !!T5&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``5(System.Activities.ActivityAction{``0,``1,``2,``3,``4},``0,``1,``2,``3,``4,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3, T4, T5) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, Optional onCompleted As CompletionCallback = Nothing, Optional onFaulted As FaultCallback = Nothing)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">传送到活动中的数据。</typeparam>
        <typeparam name="T2">传送到活动中的数据。</typeparam>
        <typeparam name="T3">传送到活动中的数据。</typeparam>
        <typeparam name="T4">传送到活动中的数据。</typeparam>
        <typeparam name="T5">传送到活动中的数据。</typeparam>
        <param name="activityAction">在父活动中发生特定事件时执行的操作。</param>
        <param name="argument1">将数据传送到活动中的自变量。</param>
        <param name="argument2">将数据传送到活动中的自变量。</param>
        <param name="argument3">将数据传送到活动中的自变量。</param>
        <param name="argument4">将数据传送到活动中的自变量。</param>
        <param name="argument5">将数据传送到活动中的自变量。</param>
        <param name="onCompleted">一个书签，用于指示 ActivityAction&lt;T1, T2, T3, T4, T5&gt; 完成后恢复父活动执行的位置。</param>
        <param name="onFaulted">一个书签，用于指示在错误导致 ActivityAction&lt;T1, T2, T3, T4, T5&gt; 终止的情况下恢复父活动执行的位置。</param>
        <summary>计划指定的 ActivityAction&lt;T1, T2, T3, T4, T5&gt; 的执行，该操作的 in 实参具有 5 个形参，并在 ActivityAction&lt;T1, T2, T3, T4, T5&gt; 完成后恢复父进程的指定回调位置标记书签。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3,T4,T5,T6&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, System.Activities.CompletionCallback onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3, T4, T5, T6&gt;(class System.Activities.ActivityAction`6&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``6(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3, T4, T5, T6) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, Optional onCompleted As CompletionCallback = Nothing, Optional onFaulted As FaultCallback = Nothing)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">传送到活动中的数据。</typeparam>
        <typeparam name="T2">传送到活动中的数据。</typeparam>
        <typeparam name="T3">传送到活动中的数据。</typeparam>
        <typeparam name="T4">传送到活动中的数据。</typeparam>
        <typeparam name="T5">传送到活动中的数据。</typeparam>
        <typeparam name="T6">传送到活动中的数据。</typeparam>
        <param name="activityAction">在父活动中发生特定事件时执行的操作。</param>
        <param name="argument1">将数据传送到活动中的自变量。</param>
        <param name="argument2">将数据传送到活动中的自变量。</param>
        <param name="argument3">将数据传送到活动中的自变量。</param>
        <param name="argument4">将数据传送到活动中的自变量。</param>
        <param name="argument5">将数据传送到活动中的自变量。</param>
        <param name="argument6">将数据传送到活动中的自变量。</param>
        <param name="onCompleted">一个书签，用于指示 ActivityAction&lt;T1, T2, T3, T4, T5, T6&gt; 完成后恢复父活动执行的位置。</param>
        <param name="onFaulted">一个书签，用于指示在错误导致 ActivityAction&lt;T1, T2, T3, T4, T5, T6&gt; 终止的情况下恢复父活动执行的位置。</param>
        <summary>计划指定的 ActivityAction&lt;T1, T2, T3, T4, T5, T6&gt; 的执行，该操作的 in 实参具有 6 个形参，并在 ActivityAction&lt;T1, T2, T3, T4, T5, T6&gt; 完成后恢复父进程的指定回调位置标记书签。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, System.Activities.CompletionCallback onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7&gt;(class System.Activities.ActivityAction`7&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``7(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, Optional onCompleted As CompletionCallback = Nothing, Optional onFaulted As FaultCallback = Nothing)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, argument7, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">传送到活动中的数据。</typeparam>
        <typeparam name="T2">传送到活动中的数据。</typeparam>
        <typeparam name="T3">传送到活动中的数据。</typeparam>
        <typeparam name="T4">传送到活动中的数据。</typeparam>
        <typeparam name="T5">传送到活动中的数据。</typeparam>
        <typeparam name="T6">传送到活动中的数据。</typeparam>
        <typeparam name="T7">传送到活动中的数据。</typeparam>
        <param name="activityAction">在父活动中发生特定事件时执行的操作。</param>
        <param name="argument1">将数据传送到活动中的自变量。</param>
        <param name="argument2">将数据传送到活动中的自变量。</param>
        <param name="argument3">将数据传送到活动中的自变量。</param>
        <param name="argument4">将数据传送到活动中的自变量。</param>
        <param name="argument5">将数据传送到活动中的自变量。</param>
        <param name="argument6">将数据传送到活动中的自变量。</param>
        <param name="argument7">将数据传送到活动中的自变量。</param>
        <param name="onCompleted">一个书签，用于指示 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7&gt; 完成后恢复父活动执行的位置。</param>
        <param name="onFaulted">一个书签，用于指示在错误导致 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7&gt; 终止的情况下恢复父活动执行的位置。</param>
        <summary>计划指定的 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7&gt; 的执行，该操作的 in 实参具有 7 个形参，并在 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7&gt; 完成后恢复父进程的指定回调位置标记书签。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, System.Activities.CompletionCallback onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;(class System.Activities.ActivityAction`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``8(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, Optional onCompleted As CompletionCallback = Nothing, Optional onFaulted As FaultCallback = Nothing)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">传送到活动中的数据。</typeparam>
        <typeparam name="T2">传送到活动中的数据。</typeparam>
        <typeparam name="T3">传送到活动中的数据。</typeparam>
        <typeparam name="T4">传送到活动中的数据。</typeparam>
        <typeparam name="T5">传送到活动中的数据。</typeparam>
        <typeparam name="T6">传送到活动中的数据。</typeparam>
        <typeparam name="T7">传送到活动中的数据。</typeparam>
        <typeparam name="T8">传送到活动中的数据。</typeparam>
        <param name="activityAction">在父活动中发生特定事件时执行的操作。</param>
        <param name="argument1">将数据传送到活动中的自变量。</param>
        <param name="argument2">将数据传送到活动中的自变量。</param>
        <param name="argument3">将数据传送到活动中的自变量。</param>
        <param name="argument4">将数据传送到活动中的自变量。</param>
        <param name="argument5">将数据传送到活动中的自变量。</param>
        <param name="argument6">将数据传送到活动中的自变量。</param>
        <param name="argument7">将数据传送到活动中的自变量。</param>
        <param name="argument8">将数据传送到活动中的自变量。</param>
        <param name="onCompleted">一个书签，用于指示 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt; 完成后恢复父活动执行的位置。</param>
        <param name="onFaulted">一个书签，用于指示在错误导致 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt; 终止的情况下恢复父活动执行的位置。</param>
        <summary>计划指定的 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt; 的执行，该操作的 in 实参具有 8 个形参，并在 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt; 完成后恢复父进程的指定回调位置标记书签。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, System.Activities.CompletionCallback onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;(class System.Activities.ActivityAction`9&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``9(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, Optional onCompleted As CompletionCallback = Nothing, Optional onFaulted As FaultCallback = Nothing)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">传送到活动中的数据。</typeparam>
        <typeparam name="T2">传送到活动中的数据。</typeparam>
        <typeparam name="T3">传送到活动中的数据。</typeparam>
        <typeparam name="T4">传送到活动中的数据。</typeparam>
        <typeparam name="T5">传送到活动中的数据。</typeparam>
        <typeparam name="T6">传送到活动中的数据。</typeparam>
        <typeparam name="T7">传送到活动中的数据。</typeparam>
        <typeparam name="T8">传送到活动中的数据。</typeparam>
        <typeparam name="T9">传送到活动中的数据。</typeparam>
        <param name="activityAction">在父活动中发生特定事件时执行的操作。</param>
        <param name="argument1">将数据传送到活动中的自变量。</param>
        <param name="argument2">将数据传送到活动中的自变量。</param>
        <param name="argument3">将数据传送到活动中的自变量。</param>
        <param name="argument4">将数据传送到活动中的自变量。</param>
        <param name="argument5">将数据传送到活动中的自变量。</param>
        <param name="argument6">将数据传送到活动中的自变量。</param>
        <param name="argument7">将数据传送到活动中的自变量。</param>
        <param name="argument8">将数据传送到活动中的自变量。</param>
        <param name="argument9">将数据传送到活动中的自变量。</param>
        <param name="onCompleted">一个书签，用于指示 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt; 完成后恢复父活动执行的位置。</param>
        <param name="onFaulted">一个书签，用于指示在错误导致 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt; 终止的情况下恢复父活动执行的位置。</param>
        <summary>计划指定的 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt; 的执行，该操作的 in 实参具有 9 个形参，并在 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt; 完成后恢复父进程的指定回调位置标记书签。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, System.Activities.CompletionCallback onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;(class System.Activities.ActivityAction`10&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``10(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, Optional onCompleted As CompletionCallback = Nothing, Optional onFaulted As FaultCallback = Nothing)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">传送到活动中的数据。</typeparam>
        <typeparam name="T2">传送到活动中的数据。</typeparam>
        <typeparam name="T3">传送到活动中的数据。</typeparam>
        <typeparam name="T4">传送到活动中的数据。</typeparam>
        <typeparam name="T5">传送到活动中的数据。</typeparam>
        <typeparam name="T6">传送到活动中的数据。</typeparam>
        <typeparam name="T7">传送到活动中的数据。</typeparam>
        <typeparam name="T8">传送到活动中的数据。</typeparam>
        <typeparam name="T9">传送到活动中的数据。</typeparam>
        <typeparam name="T10">传送到活动中的数据。</typeparam>
        <param name="activityAction">在父活动中发生特定事件时执行的操作。</param>
        <param name="argument1">将数据传送到活动中的自变量。</param>
        <param name="argument2">将数据传送到活动中的自变量。</param>
        <param name="argument3">将数据传送到活动中的自变量。</param>
        <param name="argument4">将数据传送到活动中的自变量。</param>
        <param name="argument5">将数据传送到活动中的自变量。</param>
        <param name="argument6">将数据传送到活动中的自变量。</param>
        <param name="argument7">将数据传送到活动中的自变量。</param>
        <param name="argument8">将数据传送到活动中的自变量。</param>
        <param name="argument9">将数据传送到活动中的自变量。</param>
        <param name="argument10">将数据传送到活动中的自变量。</param>
        <param name="onCompleted">一个书签，用于指示 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt; 完成后恢复父活动执行的位置。</param>
        <param name="onFaulted">一个书签，用于指示在错误导致 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt; 终止的情况下恢复父活动执行的位置。</param>
        <summary>计划指定的 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt; 的执行，该操作的 in 实参具有 10 个形参，并在 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt; 完成后恢复父进程的指定回调位置标记书签。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, System.Activities.CompletionCallback onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt;(class System.Activities.ActivityAction`11&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``11(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, Optional onCompleted As CompletionCallback = Nothing, Optional onFaulted As FaultCallback = Nothing)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">传送到活动中的数据。</typeparam>
        <typeparam name="T2">传送到活动中的数据。</typeparam>
        <typeparam name="T3">传送到活动中的数据。</typeparam>
        <typeparam name="T4">传送到活动中的数据。</typeparam>
        <typeparam name="T5">传送到活动中的数据。</typeparam>
        <typeparam name="T6">传送到活动中的数据。</typeparam>
        <typeparam name="T7">传送到活动中的数据。</typeparam>
        <typeparam name="T8">传送到活动中的数据。</typeparam>
        <typeparam name="T9">传送到活动中的数据。</typeparam>
        <typeparam name="T10">传送到活动中的数据。</typeparam>
        <typeparam name="T11">传送到活动中的数据。</typeparam>
        <param name="activityAction">在父活动中发生特定事件时执行的操作。</param>
        <param name="argument1">将数据传送到活动中的自变量。</param>
        <param name="argument2">将数据传送到活动中的自变量。</param>
        <param name="argument3">将数据传送到活动中的自变量。</param>
        <param name="argument4">将数据传送到活动中的自变量。</param>
        <param name="argument5">将数据传送到活动中的自变量。</param>
        <param name="argument6">将数据传送到活动中的自变量。</param>
        <param name="argument7">将数据传送到活动中的自变量。</param>
        <param name="argument8">将数据传送到活动中的自变量。</param>
        <param name="argument9">将数据传送到活动中的自变量。</param>
        <param name="argument10">将数据传送到活动中的自变量。</param>
        <param name="argument11">将数据传送到活动中的自变量。</param>
        <param name="onCompleted">一个书签，用于指示 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt; 完成后恢复父活动执行的位置。</param>
        <param name="onFaulted">一个书签，用于指示在错误导致 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt; 终止的情况下恢复父活动执行的位置。</param>
        <summary>计划指定的 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt; 的执行，该操作的 in 实参具有 11 个形参，并在 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt; 完成后恢复父进程的指定回调位置标记书签。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, System.Activities.CompletionCallback onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt;(class System.Activities.ActivityAction`12&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, Optional onCompleted As CompletionCallback = Nothing, Optional onFaulted As FaultCallback = Nothing)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, argument12, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">传送到活动中的数据。</typeparam>
        <typeparam name="T2">传送到活动中的数据。</typeparam>
        <typeparam name="T3">传送到活动中的数据。</typeparam>
        <typeparam name="T4">传送到活动中的数据。</typeparam>
        <typeparam name="T5">传送到活动中的数据。</typeparam>
        <typeparam name="T6">传送到活动中的数据。</typeparam>
        <typeparam name="T7">传送到活动中的数据。</typeparam>
        <typeparam name="T8">传送到活动中的数据。</typeparam>
        <typeparam name="T9">传送到活动中的数据。</typeparam>
        <typeparam name="T10">传送到活动中的数据。</typeparam>
        <typeparam name="T11">传送到活动中的数据。</typeparam>
        <typeparam name="T12">传送到活动中的数据。</typeparam>
        <param name="activityAction">在父活动中发生特定事件时执行的操作。</param>
        <param name="argument1">将数据传送到活动中的自变量。</param>
        <param name="argument2">将数据传送到活动中的自变量。</param>
        <param name="argument3">将数据传送到活动中的自变量。</param>
        <param name="argument4">将数据传送到活动中的自变量。</param>
        <param name="argument5">将数据传送到活动中的自变量。</param>
        <param name="argument6">将数据传送到活动中的自变量。</param>
        <param name="argument7">将数据传送到活动中的自变量。</param>
        <param name="argument8">将数据传送到活动中的自变量。</param>
        <param name="argument9">将数据传送到活动中的自变量。</param>
        <param name="argument10">将数据传送到活动中的自变量。</param>
        <param name="argument11">将数据传送到活动中的自变量。</param>
        <param name="argument12">将数据传送到活动中的自变量。</param>
        <param name="onCompleted">一个书签，用于指示 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt; 完成后恢复父活动执行的位置。</param>
        <param name="onFaulted">一个书签，用于指示在错误导致 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt; 终止的情况下恢复父活动执行的位置。</param>
        <summary>计划指定的 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt; 的执行，该操作的 in 实参具有 12 个形参，并在 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt; 完成后恢复父进程的指定回调位置标记书签。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, T13 argument13, System.Activities.CompletionCallback onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt;(class System.Activities.ActivityAction`13&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, !!T13 argument13, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, argument13 As T13, Optional onCompleted As CompletionCallback = Nothing, Optional onFaulted As FaultCallback = Nothing)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, argument12, argument13, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="argument13" Type="T13" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">传送到活动中的数据。</typeparam>
        <typeparam name="T2">传送到活动中的数据。</typeparam>
        <typeparam name="T3">传送到活动中的数据。</typeparam>
        <typeparam name="T4">传送到活动中的数据。</typeparam>
        <typeparam name="T5">传送到活动中的数据。</typeparam>
        <typeparam name="T6">传送到活动中的数据。</typeparam>
        <typeparam name="T7">传送到活动中的数据。</typeparam>
        <typeparam name="T8">传送到活动中的数据。</typeparam>
        <typeparam name="T9">传送到活动中的数据。</typeparam>
        <typeparam name="T10">传送到活动中的数据。</typeparam>
        <typeparam name="T11">传送到活动中的数据。</typeparam>
        <typeparam name="T12">传送到活动中的数据。</typeparam>
        <typeparam name="T13">传送到活动中的数据。</typeparam>
        <param name="activityAction">在父活动中发生特定事件时执行的操作。</param>
        <param name="argument1">将数据传送到活动中的自变量。</param>
        <param name="argument2">将数据传送到活动中的自变量。</param>
        <param name="argument3">将数据传送到活动中的自变量。</param>
        <param name="argument4">将数据传送到活动中的自变量。</param>
        <param name="argument5">将数据传送到活动中的自变量。</param>
        <param name="argument6">将数据传送到活动中的自变量。</param>
        <param name="argument7">将数据传送到活动中的自变量。</param>
        <param name="argument8">将数据传送到活动中的自变量。</param>
        <param name="argument9">将数据传送到活动中的自变量。</param>
        <param name="argument10">将数据传送到活动中的自变量。</param>
        <param name="argument11">将数据传送到活动中的自变量。</param>
        <param name="argument12">将数据传送到活动中的自变量。</param>
        <param name="argument13">将数据传送到活动中的自变量。</param>
        <param name="onCompleted">一个书签，用于指示 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt; 完成后恢复父活动执行的位置。</param>
        <param name="onFaulted">一个书签，用于指示在错误导致 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt; 终止的情况下恢复父活动执行的位置。</param>
        <summary>计划指定的 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt; 的执行，该操作的 in 实参具有 13 个形参，并在 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt; 完成后恢复父进程的指定回调位置标记书签。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, T13 argument13, T14 argument14, System.Activities.CompletionCallback onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt;(class System.Activities.ActivityAction`14&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, !!T13 argument13, !!T14 argument14, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, argument13 As T13, argument14 As T14, Optional onCompleted As CompletionCallback = Nothing, Optional onFaulted As FaultCallback = Nothing)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, argument12, argument13, argument14, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="argument13" Type="T13" />
        <Parameter Name="argument14" Type="T14" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">传送到活动中的数据。</typeparam>
        <typeparam name="T2">传送到活动中的数据。</typeparam>
        <typeparam name="T3">传送到活动中的数据。</typeparam>
        <typeparam name="T4">传送到活动中的数据。</typeparam>
        <typeparam name="T5">传送到活动中的数据。</typeparam>
        <typeparam name="T6">传送到活动中的数据。</typeparam>
        <typeparam name="T7">传送到活动中的数据。</typeparam>
        <typeparam name="T8">传送到活动中的数据。</typeparam>
        <typeparam name="T9">传送到活动中的数据。</typeparam>
        <typeparam name="T10">传送到活动中的数据。</typeparam>
        <typeparam name="T11">传送到活动中的数据。</typeparam>
        <typeparam name="T12">传送到活动中的数据。</typeparam>
        <typeparam name="T13">传送到活动中的数据。</typeparam>
        <typeparam name="T14">传送到活动中的数据。</typeparam>
        <param name="activityAction">在父活动中发生特定事件时执行的操作。</param>
        <param name="argument1">将数据传送到活动中的自变量。</param>
        <param name="argument2">将数据传送到活动中的自变量。</param>
        <param name="argument3">将数据传送到活动中的自变量。</param>
        <param name="argument4">将数据传送到活动中的自变量。</param>
        <param name="argument5">将数据传送到活动中的自变量。</param>
        <param name="argument6">将数据传送到活动中的自变量。</param>
        <param name="argument7">将数据传送到活动中的自变量。</param>
        <param name="argument8">将数据传送到活动中的自变量。</param>
        <param name="argument9">将数据传送到活动中的自变量。</param>
        <param name="argument10">将数据传送到活动中的自变量。</param>
        <param name="argument11">将数据传送到活动中的自变量。</param>
        <param name="argument12">将数据传送到活动中的自变量。</param>
        <param name="argument13">将数据传送到活动中的自变量。</param>
        <param name="argument14">将数据传送到活动中的自变量。</param>
        <param name="onCompleted">一个书签，用于指示 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt; 完成后恢复父活动执行的位置。</param>
        <param name="onFaulted">一个书签，用于指示在错误导致 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt; 终止的情况下恢复父活动执行的位置。</param>
        <summary>计划指定的 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt; 的执行，该操作的 in 实参具有 14 个形参，并在 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt; 完成后恢复父进程的指定回调位置标记书签。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, T13 argument13, T14 argument14, T15 argument15, System.Activities.CompletionCallback onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt;(class System.Activities.ActivityAction`15&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, !!T15&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, !!T13 argument13, !!T14 argument14, !!T15 argument15, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, argument13 As T13, argument14 As T14, argument15 As T15, Optional onCompleted As CompletionCallback = Nothing, Optional onFaulted As FaultCallback = Nothing)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, 'T15&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, argument12, argument13, argument14, argument15, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="argument13" Type="T13" />
        <Parameter Name="argument14" Type="T14" />
        <Parameter Name="argument15" Type="T15" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">传送到活动中的数据。</typeparam>
        <typeparam name="T2">传送到活动中的数据。</typeparam>
        <typeparam name="T3">传送到活动中的数据。</typeparam>
        <typeparam name="T4">传送到活动中的数据。</typeparam>
        <typeparam name="T5">传送到活动中的数据。</typeparam>
        <typeparam name="T6">传送到活动中的数据。</typeparam>
        <typeparam name="T7">传送到活动中的数据。</typeparam>
        <typeparam name="T8">传送到活动中的数据。</typeparam>
        <typeparam name="T9">传送到活动中的数据。</typeparam>
        <typeparam name="T10">传送到活动中的数据。</typeparam>
        <typeparam name="T11">传送到活动中的数据。</typeparam>
        <typeparam name="T12">传送到活动中的数据。</typeparam>
        <typeparam name="T13">传送到活动中的数据。</typeparam>
        <typeparam name="T14">传送到活动中的数据。</typeparam>
        <typeparam name="T15">传送到活动中的数据。</typeparam>
        <param name="activityAction">在父活动中发生特定事件时执行的操作。</param>
        <param name="argument1">将数据传送到活动中的自变量。</param>
        <param name="argument2">将数据传送到活动中的自变量。</param>
        <param name="argument3">将数据传送到活动中的自变量。</param>
        <param name="argument4">将数据传送到活动中的自变量。</param>
        <param name="argument5">将数据传送到活动中的自变量。</param>
        <param name="argument6">将数据传送到活动中的自变量。</param>
        <param name="argument7">将数据传送到活动中的自变量。</param>
        <param name="argument8">将数据传送到活动中的自变量。</param>
        <param name="argument9">将数据传送到活动中的自变量。</param>
        <param name="argument10">将数据传送到活动中的自变量。</param>
        <param name="argument11">将数据传送到活动中的自变量。</param>
        <param name="argument12">将数据传送到活动中的自变量。</param>
        <param name="argument13">将数据传送到活动中的自变量。</param>
        <param name="argument14">将数据传送到活动中的自变量。</param>
        <param name="argument15">将数据传送到活动中的自变量。</param>
        <param name="onCompleted">一个书签，用于指示 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt; 完成后恢复父活动执行的位置。</param>
        <param name="onFaulted">一个书签，用于指示在错误导致 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt; 终止的情况下恢复父活动执行的位置。</param>
        <summary>计划指定的 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt; 的执行，该操作的 in 实参具有 15 个形参，并在 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt; 完成后恢复父进程的指定回调位置标记书签。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, T13 argument13, T14 argument14, T15 argument15, T16 argument16, System.Activities.CompletionCallback onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt;(class System.Activities.ActivityAction`16&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, !!T15, !!T16&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, !!T13 argument13, !!T14 argument14, !!T15 argument15, !!T16 argument16, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, argument13 As T13, argument14 As T14, argument15 As T15, argument16 As T16, Optional onCompleted As CompletionCallback = Nothing, Optional onFaulted As FaultCallback = Nothing)" />
      <MemberSignature Language="F#" Value="member this.ScheduleAction : System.Activities.ActivityAction&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, 'T15, 'T16&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * 'T16 * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleAction (activityAction, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, argument12, argument13, argument14, argument15, argument16, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="argument13" Type="T13" />
        <Parameter Name="argument14" Type="T14" />
        <Parameter Name="argument15" Type="T15" />
        <Parameter Name="argument16" Type="T16" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">传送到活动中的数据。</typeparam>
        <typeparam name="T2">传送到活动中的数据。</typeparam>
        <typeparam name="T3">传送到活动中的数据。</typeparam>
        <typeparam name="T4">传送到活动中的数据。</typeparam>
        <typeparam name="T5">传送到活动中的数据。</typeparam>
        <typeparam name="T6">传送到活动中的数据。</typeparam>
        <typeparam name="T7">传送到活动中的数据。</typeparam>
        <typeparam name="T8">传送到活动中的数据。</typeparam>
        <typeparam name="T9">传送到活动中的数据。</typeparam>
        <typeparam name="T10">传送到活动中的数据。</typeparam>
        <typeparam name="T11">传送到活动中的数据。</typeparam>
        <typeparam name="T12">传送到活动中的数据。</typeparam>
        <typeparam name="T13">传送到活动中的数据。</typeparam>
        <typeparam name="T14">传送到活动中的数据。</typeparam>
        <typeparam name="T15">传送到活动中的数据。</typeparam>
        <typeparam name="T16">传送到活动中的数据。</typeparam>
        <param name="activityAction">在父活动中发生特定事件时执行的操作。</param>
        <param name="argument1">将数据传送到活动中的自变量。</param>
        <param name="argument2">将数据传送到活动中的自变量。</param>
        <param name="argument3">将数据传送到活动中的自变量。</param>
        <param name="argument4">将数据传送到活动中的自变量。</param>
        <param name="argument5">将数据传送到活动中的自变量。</param>
        <param name="argument6">将数据传送到活动中的自变量。</param>
        <param name="argument7">将数据传送到活动中的自变量。</param>
        <param name="argument8">将数据传送到活动中的自变量。</param>
        <param name="argument9">将数据传送到活动中的自变量。</param>
        <param name="argument10">将数据传送到活动中的自变量。</param>
        <param name="argument11">将数据传送到活动中的自变量。</param>
        <param name="argument12">将数据传送到活动中的自变量。</param>
        <param name="argument13">将数据传送到活动中的自变量。</param>
        <param name="argument14">将数据传送到活动中的自变量。</param>
        <param name="argument15">将数据传送到活动中的自变量。</param>
        <param name="argument16">将数据传送到活动中的自变量。</param>
        <param name="onCompleted">一个书签，用于指示 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt; 完成后恢复父活动执行的位置。</param>
        <param name="onFaulted">一个书签，用于指示在错误导致 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt; 终止的情况下恢复父活动执行的位置。</param>
        <summary>计划指定的 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt; 的执行，该操作的 in 实参具有 16 个形参，并在 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt; 完成后恢复父进程的指定回调位置标记书签。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ScheduleActivity">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>计划指定的 NativeActivity。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ScheduleActivity">
      <MemberSignature Language="C#" Value="public void ScheduleActivity (System.Activities.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleActivity(class System.Activities.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleActivity(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleActivity (activity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScheduleActivity(System::Activities::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="member this.ScheduleActivity : System.Activities.Activity -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleActivity activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">该子活动是由在父 NativeActivity 的执行过程中发生的事件触发。</param>
        <summary>计划指定的 NativeActivity 子活动的执行。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleActivity">
      <MemberSignature Language="C#" Value="public void ScheduleActivity (System.Activities.Activity activity, System.Activities.CompletionCallback onCompleted);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleActivity(class System.Activities.Activity activity, class System.Activities.CompletionCallback onCompleted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleActivity(System.Activities.Activity,System.Activities.CompletionCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleActivity (activity As Activity, onCompleted As CompletionCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScheduleActivity(System::Activities::Activity ^ activity, System::Activities::CompletionCallback ^ onCompleted);" />
      <MemberSignature Language="F#" Value="member this.ScheduleActivity : System.Activities.Activity * System.Activities.CompletionCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleActivity (activity, onCompleted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.Activity" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
      </Parameters>
      <Docs>
        <param name="activity">该子活动是由在父 NativeActivity 的执行过程中发生的事件触发。</param>
        <param name="onCompleted">一个书签，用于指示 ActivityAction 完成后恢复父活动执行的位置。</param>
        <summary>计划指定的 NativeActivity 子活动的执行，使用指定的完成回调位置，活动完成后在该位置恢复父进程。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleActivity">
      <MemberSignature Language="C#" Value="public void ScheduleActivity (System.Activities.Activity activity, System.Activities.FaultCallback onFaulted);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleActivity(class System.Activities.Activity activity, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleActivity(System.Activities.Activity,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleActivity (activity As Activity, onFaulted As FaultCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScheduleActivity(System::Activities::Activity ^ activity, System::Activities::FaultCallback ^ onFaulted);" />
      <MemberSignature Language="F#" Value="member this.ScheduleActivity : System.Activities.Activity * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleActivity (activity, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.Activity" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <param name="activity">该子活动是由在父 NativeActivity 的执行过程中发生的事件触发。</param>
        <param name="onFaulted">一个书签，用于指示在错误导致 ActivityAction 终止的情况下将恢复 NativeActivity 执行的位置。</param>
        <summary>计划指定的 NativeActivity 子活动的执行，使用指定的错误回调位置，当活动进入错误状态时，在该位置恢复父进程。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleActivity">
      <MemberSignature Language="C#" Value="public void ScheduleActivity (System.Activities.Activity activity, System.Activities.CompletionCallback onCompleted, System.Activities.FaultCallback onFaulted);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleActivity(class System.Activities.Activity activity, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleActivity(System.Activities.Activity,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleActivity (activity As Activity, onCompleted As CompletionCallback, onFaulted As FaultCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScheduleActivity(System::Activities::Activity ^ activity, System::Activities::CompletionCallback ^ onCompleted, System::Activities::FaultCallback ^ onFaulted);" />
      <MemberSignature Language="F#" Value="member this.ScheduleActivity : System.Activities.Activity * System.Activities.CompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleActivity (activity, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.Activity" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <param name="activity">该子活动是由在父 NativeActivity 的执行过程中发生的事件触发。</param>
        <param name="onCompleted">一个书签，用于指示 ActivityAction 完成后恢复父活动执行的位置。</param>
        <param name="onFaulted">一个书签，用于指示在错误导致 ActivityAction 终止的情况下将恢复 NativeActivity 执行的位置。</param>
        <summary>计划指定的 NativeActivity 子活动的执行，使用指定的错误回调位置，当活动进入错误状态时，在该位置恢复父进程。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleActivity&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleActivity&lt;TResult&gt; (System.Activities.Activity&lt;TResult&gt; activity, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleActivity&lt;TResult&gt;(class System.Activities.Activity`1&lt;!!TResult&gt; activity, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleActivity``1(System.Activities.Activity{``0},System.Activities.CompletionCallback{``0},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleActivity(Of TResult) (activity As Activity(Of TResult), Optional onCompleted As CompletionCallback(Of TResult) = Nothing, Optional onFaulted As FaultCallback = Nothing)" />
      <MemberSignature Language="F#" Value="member this.ScheduleActivity : System.Activities.Activity&lt;'Result&gt; * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleActivity (activity, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.Activity&lt;TResult&gt;" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"> NativeActivity 子活动 out 参数的类型。</typeparam>
        <param name="activity">该子活动是由在父 NativeActivity 的执行过程中发生的事件触发。</param>
        <param name="onCompleted">一个书签，用于指示 ActivityAction&lt;T&gt; 完成后恢复 NativeActivity 执行的位置。</param>
        <param name="onFaulted">一个书签，用于指示在错误导致 ActivityAction 终止的情况下将恢复 NativeActivity 执行的位置。</param>
        <summary>计划指定的 NativeActivity 子活动的执行，in 实参具有一个形参，并在 ActivityAction&lt;T&gt; 完成后恢复父进程的指定回调位置标记书签。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleDelegate">
      <MemberSignature Language="C#" Value="public void ScheduleDelegate (System.Activities.ActivityDelegate activityDelegate, System.Collections.Generic.IDictionary&lt;string,object&gt; inputParameters, System.Activities.DelegateCompletionCallback onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleDelegate(class System.Activities.ActivityDelegate activityDelegate, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; inputParameters, class System.Activities.DelegateCompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleDelegate(System.Activities.ActivityDelegate,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.DelegateCompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleDelegate (activityDelegate As ActivityDelegate, inputParameters As IDictionary(Of String, Object), Optional onCompleted As DelegateCompletionCallback = Nothing, Optional onFaulted As FaultCallback = Nothing)" />
      <MemberSignature Language="F#" Value="member this.ScheduleDelegate : System.Activities.ActivityDelegate * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Activities.DelegateCompletionCallback * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleDelegate (activityDelegate, inputParameters, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityDelegate" Type="System.Activities.ActivityDelegate" />
        <Parameter Name="inputParameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="onCompleted" Type="System.Activities.DelegateCompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <param name="activityDelegate">当指定的活动操作完成时，活动返回到的回调方法。</param>
        <param name="inputParameters">活动自变量名称和值的字典列表。</param>
        <param name="onCompleted">一个书签，用于指示 ActivityAction 完成后恢复父活动执行的位置。</param>
        <param name="onFaulted">一个书签，用于指示在错误导致 ActivityAction 终止的情况下将恢复父活动执行的位置。</param>
        <summary>将活动的回调方法推送到工作项池中。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;TResult&gt; (System.Activities.ActivityFunc&lt;TResult&gt; activityFunc, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;TResult&gt;(class System.Activities.ActivityFunc`1&lt;!!TResult&gt; activityFunc, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``1(System.Activities.ActivityFunc{``0},System.Activities.CompletionCallback{``0},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of TResult) (activityFunc As ActivityFunc(Of TResult), Optional onCompleted As CompletionCallback(Of TResult) = Nothing, Optional onFaulted As FaultCallback = Nothing)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'Result&gt; * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;TResult&gt;" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"> NativeActivity 子活动 out 参数的类型。</typeparam>
        <param name="activityFunc">在父活动中发生特定事件并返回值时运行的子活动。</param>
        <param name="onCompleted">一个书签，用于指示 ActivityFunc&lt;TResult&gt; 完成后恢复父活动执行的位置。</param>
        <param name="onFaulted">一个书签，用于指示在错误导致 ActivityFunc&lt;TResult&gt; 终止的情况下恢复父活动执行的位置。</param>
        <summary>计划指定的 ActivityFunc&lt;TResult&gt; 的执行，该函数具有一个用于保存返回值的参数，并在 ActivityFunc&lt;TResult&gt; 完成后恢复父进程的指定回调位置标记书签。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T,TResult&gt; (System.Activities.ActivityFunc&lt;T,TResult&gt; activityFunc, T argument, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T, TResult&gt;(class System.Activities.ActivityFunc`2&lt;!!T, !!TResult&gt; activityFunc, !!T argument, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``2(System.Activities.ActivityFunc{``0,``1},``0,System.Activities.CompletionCallback{``1},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T, TResult) (activityFunc As ActivityFunc(Of T, TResult), argument As T, Optional onCompleted As CompletionCallback(Of TResult) = Nothing, Optional onFaulted As FaultCallback = Nothing)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T, 'Result&gt; * 'T * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T,TResult&gt;" />
        <Parameter Name="argument" Type="T" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T">传送到活动中的数据。</typeparam>
        <typeparam name="TResult"> NativeActivity 子活动 out 参数的类型。</typeparam>
        <param name="activityFunc">在父活动中发生特定事件并返回值时运行的子活动。</param>
        <param name="argument">将数据传送到活动中的自变量。</param>
        <param name="onCompleted">一个书签，用于指示 ActivityFunc&lt;T, TResult&gt; 完成后恢复父活动执行的位置。</param>
        <param name="onFaulted">一个书签，用于指示在错误导致 ActivityFunc&lt;T, TResult&gt; 终止的情况下恢复父活动执行的位置。</param>
        <summary>计划指定的 ActivityFunc&lt;T, TResult&gt; 的执行，该函数的 in 实参具有两个形参，用于保存返回值，并在 ActivityFunc&lt;T, TResult&gt; 完成后恢复父进程的指定回调位置标记书签。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,TResult&gt; activityFunc, T1 argument1, T2 argument2, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, TResult&gt;(class System.Activities.ActivityFunc`3&lt;!!T1, !!T2, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``3(System.Activities.ActivityFunc{``0,``1,``2},``0,``1,System.Activities.CompletionCallback{``2},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, TResult) (activityFunc As ActivityFunc(Of T1, T2, TResult), argument1 As T1, argument2 As T2, Optional onCompleted As CompletionCallback(Of TResult) = Nothing, Optional onFaulted As FaultCallback = Nothing)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'Result&gt; * 'T1 * 'T2 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">传送到活动中的数据。</typeparam>
        <typeparam name="T2">传送到活动中的数据。</typeparam>
        <typeparam name="TResult"> NativeActivity 子活动 out 参数的类型。</typeparam>
        <param name="activityFunc">在父活动中发生特定事件并返回值时运行的子活动。</param>
        <param name="argument1">将数据传送到活动中的自变量。</param>
        <param name="argument2">将数据传送到活动中的自变量。</param>
        <param name="onCompleted">一个书签，用于指示 ActivityFunc&lt;T1, T2, TResult&gt; 完成后恢复父活动执行的位置。</param>
        <param name="onFaulted">一个书签，用于指示在错误导致 ActivityFunc&lt;T1, T2, TResult&gt; 终止的情况下恢复父活动执行的位置。</param>
        <summary>计划指定的 ActivityFunc&lt;T1, T2, TResult&gt; 的执行，该函数的 in 实参具有 3 个形参，用于保存返回值，并在 ActivityFunc&lt;T1, T2, TResult&gt; 完成后恢复父进程的指定回调位置标记书签。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, TResult&gt;(class System.Activities.ActivityFunc`4&lt;!!T1, !!T2, !!T3, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``4(System.Activities.ActivityFunc{``0,``1,``2,``3},``0,``1,``2,System.Activities.CompletionCallback{``3},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, TResult), argument1 As T1, argument2 As T2, argument3 As T3, Optional onCompleted As CompletionCallback(Of TResult) = Nothing, Optional onFaulted As FaultCallback = Nothing)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'Result&gt; * 'T1 * 'T2 * 'T3 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">传送到活动中的数据。</typeparam>
        <typeparam name="T2">传送到活动中的数据。</typeparam>
        <typeparam name="T3">传送到活动中的数据。</typeparam>
        <typeparam name="TResult"> NativeActivity 子活动 out 参数的类型。</typeparam>
        <param name="activityFunc">在父活动中发生特定事件并返回值时运行的子活动。</param>
        <param name="argument1">将数据传送到活动中的自变量。</param>
        <param name="argument2">将数据传送到活动中的自变量。</param>
        <param name="argument3">将数据传送到活动中的自变量。</param>
        <param name="onCompleted">一个书签，用于指示 ActivityFunc&lt;T1, T2, T3, TResult&gt; 完成后恢复父活动执行的位置。</param>
        <param name="onFaulted">一个书签，用于指示在错误导致 ActivityFunc&lt;T1, T2, T3, TResult&gt; 终止的情况下恢复父活动执行的位置。</param>
        <summary>计划指定的 ActivityFunc&lt;T1, T2, T3, TResult&gt; 的执行，该函数的 in 实参具有 4 个形参，用于保存返回值，并在 ActivityFunc&lt;T1, T2, T3, TResult&gt; 完成后恢复父进程的指定回调位置标记书签。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,T4,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, T4, TResult&gt;(class System.Activities.ActivityFunc`5&lt;!!T1, !!T2, !!T3, !!T4, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``5(System.Activities.ActivityFunc{``0,``1,``2,``3,``4},``0,``1,``2,``3,System.Activities.CompletionCallback{``4},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, T4, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, Optional onCompleted As CompletionCallback(Of TResult) = Nothing, Optional onFaulted As FaultCallback = Nothing)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">传送到活动中的数据。</typeparam>
        <typeparam name="T2">传送到活动中的数据。</typeparam>
        <typeparam name="T3">传送到活动中的数据。</typeparam>
        <typeparam name="T4">传送到活动中的数据。</typeparam>
        <typeparam name="TResult"> NativeActivity 子活动 out 参数的类型。</typeparam>
        <param name="activityFunc">在父活动中发生特定事件并返回值时运行的子活动。</param>
        <param name="argument1">将数据传送到活动中的自变量。</param>
        <param name="argument2">将数据传送到活动中的自变量。</param>
        <param name="argument3">将数据传送到活动中的自变量。</param>
        <param name="argument4">将数据传送到活动中的自变量。</param>
        <param name="onCompleted">一个书签，用于指示 ActivityFunc&lt;T1, T2, T3, T4, TResult&gt; 完成后恢复父活动执行的位置。</param>
        <param name="onFaulted">一个书签，用于指示在错误导致 ActivityFunc&lt;T1, T2, T3, T4, TResult&gt; 终止的情况下恢复父活动执行的位置。</param>
        <summary>计划指定的 ActivityFunc&lt;T1, T2, T3, T4, TResult&gt; 的执行，该函数的 in 实参具有 5 个形参，用于保存返回值，并在 ActivityFunc&lt;T1, T2, T3, T4, TResult&gt; 完成后恢复父进程的指定回调位置标记书签。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,T4,T5,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, T4, T5, TResult&gt;(class System.Activities.ActivityFunc`6&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``6(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,System.Activities.CompletionCallback{``5},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, T4, T5, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, Optional onCompleted As CompletionCallback(Of TResult) = Nothing, Optional onFaulted As FaultCallback = Nothing)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">传送到活动中的数据。</typeparam>
        <typeparam name="T2">传送到活动中的数据。</typeparam>
        <typeparam name="T3">传送到活动中的数据。</typeparam>
        <typeparam name="T4">传送到活动中的数据。</typeparam>
        <typeparam name="T5">传送到活动中的数据。</typeparam>
        <typeparam name="TResult"> NativeActivity 子活动 out 参数的类型。</typeparam>
        <param name="activityFunc">在父活动中发生特定事件并返回值时运行的子活动。</param>
        <param name="argument1">将数据传送到活动中的自变量。</param>
        <param name="argument2">将数据传送到活动中的自变量。</param>
        <param name="argument3">将数据传送到活动中的自变量。</param>
        <param name="argument4">将数据传送到活动中的自变量。</param>
        <param name="argument5">将数据传送到活动中的自变量。</param>
        <param name="onCompleted">一个书签，用于指示 ActivityFunc&lt;T1, T2, T3, T4, T5, TResult&gt; 完成后恢复父活动执行的位置。</param>
        <param name="onFaulted">一个书签，用于指示在错误导致 ActivityFunc&lt;T1, T2, T3, T4, T5, TResult&gt; 终止的情况下恢复父活动执行的位置。</param>
        <summary>计划指定的 ActivityFunc&lt;T1, T2, T3, T4, T5, TResult&gt; 的执行，该函数的 in 实参具有 6 个形参，用于保存返回值，并在 ActivityFunc&lt;T1, T2, T3, T4, T5, TResult&gt; 完成后恢复父进程的指定回调位置标记书签。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, TResult&gt;(class System.Activities.ActivityFunc`7&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``7(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback{``6},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, T4, T5, T6, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, Optional onCompleted As CompletionCallback(Of TResult) = Nothing, Optional onFaulted As FaultCallback = Nothing)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">传送到活动中的数据。</typeparam>
        <typeparam name="T2">传送到活动中的数据。</typeparam>
        <typeparam name="T3">传送到活动中的数据。</typeparam>
        <typeparam name="T4">传送到活动中的数据。</typeparam>
        <typeparam name="T5">传送到活动中的数据。</typeparam>
        <typeparam name="T6">传送到活动中的数据。</typeparam>
        <typeparam name="TResult"> NativeActivity 子活动 out 参数的类型。</typeparam>
        <param name="activityFunc">在父活动中发生特定事件并返回值时运行的子活动。</param>
        <param name="argument1">将数据传送到活动中的自变量。</param>
        <param name="argument2">将数据传送到活动中的自变量。</param>
        <param name="argument3">将数据传送到活动中的自变量。</param>
        <param name="argument4">将数据传送到活动中的自变量。</param>
        <param name="argument5">将数据传送到活动中的自变量。</param>
        <param name="argument6">将数据传送到活动中的自变量。</param>
        <param name="onCompleted">一个书签，用于指示 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, TResult&gt; 完成后恢复父活动执行的位置。</param>
        <param name="onFaulted">一个书签，用于指示在错误导致 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, TResult&gt; 终止的情况下恢复父活动执行的位置。</param>
        <summary>计划指定的 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7&gt; 的执行，该操作的 in 实参具有 7 个形参，并在 ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7&gt; 完成后恢复父进程的指定回调位置标记书签。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, TResult&gt;(class System.Activities.ActivityFunc`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``8(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback{``7},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, Optional onCompleted As CompletionCallback(Of TResult) = Nothing, Optional onFaulted As FaultCallback = Nothing)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, argument7, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">传送到活动中的数据。</typeparam>
        <typeparam name="T2">传送到活动中的数据。</typeparam>
        <typeparam name="T3">传送到活动中的数据。</typeparam>
        <typeparam name="T4">传送到活动中的数据。</typeparam>
        <typeparam name="T5">传送到活动中的数据。</typeparam>
        <typeparam name="T6">传送到活动中的数据。</typeparam>
        <typeparam name="T7">传送到活动中的数据。</typeparam>
        <typeparam name="TResult"> NativeActivity 子活动 out 参数的类型。</typeparam>
        <param name="activityFunc">在父活动中发生特定事件并返回值时运行的子活动。</param>
        <param name="argument1">将数据传送到活动中的自变量。</param>
        <param name="argument2">将数据传送到活动中的自变量。</param>
        <param name="argument3">将数据传送到活动中的自变量。</param>
        <param name="argument4">将数据传送到活动中的自变量。</param>
        <param name="argument5">将数据传送到活动中的自变量。</param>
        <param name="argument6">将数据传送到活动中的自变量。</param>
        <param name="argument7">将数据传送到活动中的自变量。</param>
        <param name="onCompleted">一个书签，用于指示 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, TResult&gt; 完成后恢复父活动执行的位置。</param>
        <param name="onFaulted">一个书签，用于指示在错误导致 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, TResult&gt; 终止的情况下恢复父活动执行的位置。</param>
        <summary>计划指定的 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, TResult&gt; 的执行，该函数的 in 实参具有 8 个形参，用于保存返回值，并在 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, TResult&gt; 完成后恢复父进程的指定回调位置标记书签。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, TResult&gt;(class System.Activities.ActivityFunc`9&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``9(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback{``8},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, Optional onCompleted As CompletionCallback(Of TResult) = Nothing, Optional onFaulted As FaultCallback = Nothing)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">传送到活动中的数据。</typeparam>
        <typeparam name="T2">传送到活动中的数据。</typeparam>
        <typeparam name="T3">传送到活动中的数据。</typeparam>
        <typeparam name="T4">传送到活动中的数据。</typeparam>
        <typeparam name="T5">传送到活动中的数据。</typeparam>
        <typeparam name="T6">传送到活动中的数据。</typeparam>
        <typeparam name="T7">传送到活动中的数据。</typeparam>
        <typeparam name="T8">传送到活动中的数据。</typeparam>
        <typeparam name="TResult"> NativeActivity 子活动 out 参数的类型。</typeparam>
        <param name="activityFunc">在父活动中发生特定事件并返回值时运行的子活动。</param>
        <param name="argument1">将数据传送到活动中的自变量。</param>
        <param name="argument2">将数据传送到活动中的自变量。</param>
        <param name="argument3">将数据传送到活动中的自变量。</param>
        <param name="argument4">将数据传送到活动中的自变量。</param>
        <param name="argument5">将数据传送到活动中的自变量。</param>
        <param name="argument6">将数据传送到活动中的自变量。</param>
        <param name="argument7">将数据传送到活动中的自变量。</param>
        <param name="argument8">将数据传送到活动中的自变量。</param>
        <param name="onCompleted">一个书签，用于指示 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, TResult&gt; 完成后恢复父活动执行的位置。</param>
        <param name="onFaulted">一个书签，用于指示在错误导致 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, TResult&gt; 终止的情况下恢复父活动执行的位置。</param>
        <summary>计划指定的 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, TResult&gt; 的执行，该函数的 in 实参具有 9 个形参，用于保存返回值，并在 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, TResult&gt; 完成后恢复父进程的指定回调位置标记书签。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult&gt;(class System.Activities.ActivityFunc`10&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``10(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback{``9},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, Optional onCompleted As CompletionCallback(Of TResult) = Nothing, Optional onFaulted As FaultCallback = Nothing)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">传送到活动中的数据。</typeparam>
        <typeparam name="T2">传送到活动中的数据。</typeparam>
        <typeparam name="T3">传送到活动中的数据。</typeparam>
        <typeparam name="T4">传送到活动中的数据。</typeparam>
        <typeparam name="T5">传送到活动中的数据。</typeparam>
        <typeparam name="T6">传送到活动中的数据。</typeparam>
        <typeparam name="T7">传送到活动中的数据。</typeparam>
        <typeparam name="T8">传送到活动中的数据。</typeparam>
        <typeparam name="T9">传送到活动中的数据。</typeparam>
        <typeparam name="TResult"> NativeActivity 子活动 out 参数的类型。</typeparam>
        <param name="activityFunc">在父活动中发生特定事件并返回值时运行的子活动。</param>
        <param name="argument1">将数据传送到活动中的自变量。</param>
        <param name="argument2">将数据传送到活动中的自变量。</param>
        <param name="argument3">将数据传送到活动中的自变量。</param>
        <param name="argument4">将数据传送到活动中的自变量。</param>
        <param name="argument5">将数据传送到活动中的自变量。</param>
        <param name="argument6">将数据传送到活动中的自变量。</param>
        <param name="argument7">将数据传送到活动中的自变量。</param>
        <param name="argument8">将数据传送到活动中的自变量。</param>
        <param name="argument9">将数据传送到活动中的自变量。</param>
        <param name="onCompleted">一个书签，用于指示 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult&gt; 完成后恢复父活动执行的位置。</param>
        <param name="onFaulted">一个书签，用于指示在错误导致 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult&gt; 终止的情况下恢复父活动执行的位置。</param>
        <summary>计划指定的 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult&gt; 的执行，该函数的 in 实参具有 10 个形参，用于保存返回值，并在 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult&gt; 完成后恢复父进程的指定回调位置标记书签。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult&gt;(class System.Activities.ActivityFunc`11&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``11(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback{``10},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, Optional onCompleted As CompletionCallback(Of TResult) = Nothing, Optional onFaulted As FaultCallback = Nothing)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">传送到活动中的数据。</typeparam>
        <typeparam name="T2">传送到活动中的数据。</typeparam>
        <typeparam name="T3">传送到活动中的数据。</typeparam>
        <typeparam name="T4">传送到活动中的数据。</typeparam>
        <typeparam name="T5">传送到活动中的数据。</typeparam>
        <typeparam name="T6">传送到活动中的数据。</typeparam>
        <typeparam name="T7">传送到活动中的数据。</typeparam>
        <typeparam name="T8">传送到活动中的数据。</typeparam>
        <typeparam name="T9">传送到活动中的数据。</typeparam>
        <typeparam name="T10">传送到活动中的数据。</typeparam>
        <typeparam name="TResult"> NativeActivity 子活动 out 参数的类型。</typeparam>
        <param name="activityFunc">在父活动中发生特定事件并返回值时运行的子活动。</param>
        <param name="argument1">将数据传送到活动中的自变量。</param>
        <param name="argument2">将数据传送到活动中的自变量。</param>
        <param name="argument3">将数据传送到活动中的自变量。</param>
        <param name="argument4">将数据传送到活动中的自变量。</param>
        <param name="argument5">将数据传送到活动中的自变量。</param>
        <param name="argument6">将数据传送到活动中的自变量。</param>
        <param name="argument7">将数据传送到活动中的自变量。</param>
        <param name="argument8">将数据传送到活动中的自变量。</param>
        <param name="argument9">将数据传送到活动中的自变量。</param>
        <param name="argument10">将数据传送到活动中的自变量。</param>
        <param name="onCompleted">一个书签，用于指示 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult&gt; 完成后恢复父活动执行的位置。</param>
        <param name="onFaulted">一个书签，用于指示在错误导致 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult&gt; 终止的情况下恢复父活动执行的位置。</param>
        <summary>计划指定的 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult&gt; 的执行，该函数的 in 实参具有 11 个形参，用于保存返回值，并在 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult&gt; 完成后恢复父进程的指定回调位置标记书签。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult&gt;(class System.Activities.ActivityFunc`12&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, Optional onCompleted As CompletionCallback(Of TResult) = Nothing, Optional onFaulted As FaultCallback = Nothing)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">传送到活动中的数据。</typeparam>
        <typeparam name="T2">传送到活动中的数据。</typeparam>
        <typeparam name="T3">传送到活动中的数据。</typeparam>
        <typeparam name="T4">传送到活动中的数据。</typeparam>
        <typeparam name="T5">传送到活动中的数据。</typeparam>
        <typeparam name="T6">传送到活动中的数据。</typeparam>
        <typeparam name="T7">传送到活动中的数据。</typeparam>
        <typeparam name="T8">传送到活动中的数据。</typeparam>
        <typeparam name="T9">传送到活动中的数据。</typeparam>
        <typeparam name="T10">传送到活动中的数据。</typeparam>
        <typeparam name="T11">传送到活动中的数据。</typeparam>
        <typeparam name="TResult"> NativeActivity 子活动 out 参数的类型。</typeparam>
        <param name="activityFunc">在父活动中发生特定事件并返回值时运行的子活动。</param>
        <param name="argument1">将数据传送到活动中的自变量。</param>
        <param name="argument2">将数据传送到活动中的自变量。</param>
        <param name="argument3">将数据传送到活动中的自变量。</param>
        <param name="argument4">将数据传送到活动中的自变量。</param>
        <param name="argument5">将数据传送到活动中的自变量。</param>
        <param name="argument6">将数据传送到活动中的自变量。</param>
        <param name="argument7">将数据传送到活动中的自变量。</param>
        <param name="argument8">将数据传送到活动中的自变量。</param>
        <param name="argument9">将数据传送到活动中的自变量。</param>
        <param name="argument10">将数据传送到活动中的自变量。</param>
        <param name="argument11">将数据传送到活动中的自变量。</param>
        <param name="onCompleted">一个书签，用于指示 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult&gt; 完成后恢复父活动执行的位置。</param>
        <param name="onFaulted">一个书签，用于指示在错误导致 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult&gt; 终止的情况下恢复父活动执行的位置。</param>
        <summary>计划指定的 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult&gt; 的执行，该函数的 in 实参具有 12 个形参，用于保存返回值，并在 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult&gt; 完成后恢复父进程的指定回调位置标记书签。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult&gt;(class System.Activities.ActivityFunc`13&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, Optional onCompleted As CompletionCallback(Of TResult) = Nothing, Optional onFaulted As FaultCallback = Nothing)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, argument12, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">传送到活动中的数据。</typeparam>
        <typeparam name="T2">传送到活动中的数据。</typeparam>
        <typeparam name="T3">传送到活动中的数据。</typeparam>
        <typeparam name="T4">传送到活动中的数据。</typeparam>
        <typeparam name="T5">传送到活动中的数据。</typeparam>
        <typeparam name="T6">传送到活动中的数据。</typeparam>
        <typeparam name="T7">传送到活动中的数据。</typeparam>
        <typeparam name="T8">传送到活动中的数据。</typeparam>
        <typeparam name="T9">传送到活动中的数据。</typeparam>
        <typeparam name="T10">传送到活动中的数据。</typeparam>
        <typeparam name="T11">传送到活动中的数据。</typeparam>
        <typeparam name="T12">传送到活动中的数据。</typeparam>
        <typeparam name="TResult"> NativeActivity 子活动 out 参数的类型。</typeparam>
        <param name="activityFunc">在父活动中发生特定事件并返回值时运行的子活动。</param>
        <param name="argument1">将数据传送到活动中的自变量。</param>
        <param name="argument2">将数据传送到活动中的自变量。</param>
        <param name="argument3">将数据传送到活动中的自变量。</param>
        <param name="argument4">将数据传送到活动中的自变量。</param>
        <param name="argument5">将数据传送到活动中的自变量。</param>
        <param name="argument6">将数据传送到活动中的自变量。</param>
        <param name="argument7">将数据传送到活动中的自变量。</param>
        <param name="argument8">将数据传送到活动中的自变量。</param>
        <param name="argument9">将数据传送到活动中的自变量。</param>
        <param name="argument10">将数据传送到活动中的自变量。</param>
        <param name="argument11">将数据传送到活动中的自变量。</param>
        <param name="argument12">将数据传送到活动中的自变量。</param>
        <param name="onCompleted">一个书签，用于指示 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult&gt; 完成后恢复父活动执行的位置。</param>
        <param name="onFaulted">一个书签，用于指示在错误导致 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult&gt; 终止的情况下恢复父活动执行的位置。</param>
        <summary>计划指定的 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult&gt; 的执行，该函数的 in 实参具有 13 个形参，用于保存返回值，并在 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult&gt; 完成后恢复父进程的指定回调位置标记书签。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, T13 argument13, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult&gt;(class System.Activities.ActivityFunc`14&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, !!T13 argument13, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, argument13 As T13, Optional onCompleted As CompletionCallback(Of TResult) = Nothing, Optional onFaulted As FaultCallback = Nothing)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, argument12, argument13, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="argument13" Type="T13" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">传送到活动中的数据。</typeparam>
        <typeparam name="T2">传送到活动中的数据。</typeparam>
        <typeparam name="T3">传送到活动中的数据。</typeparam>
        <typeparam name="T4">传送到活动中的数据。</typeparam>
        <typeparam name="T5">传送到活动中的数据。</typeparam>
        <typeparam name="T6">传送到活动中的数据。</typeparam>
        <typeparam name="T7">传送到活动中的数据。</typeparam>
        <typeparam name="T8">传送到活动中的数据。</typeparam>
        <typeparam name="T9">传送到活动中的数据。</typeparam>
        <typeparam name="T10">传送到活动中的数据。</typeparam>
        <typeparam name="T11">传送到活动中的数据。</typeparam>
        <typeparam name="T12">传送到活动中的数据。</typeparam>
        <typeparam name="T13">传送到活动中的数据。</typeparam>
        <typeparam name="TResult"> NativeActivity 子活动 out 参数的类型。</typeparam>
        <param name="activityFunc">在父活动中发生特定事件并返回值时运行的子活动。</param>
        <param name="argument1">将数据传送到活动中的自变量。</param>
        <param name="argument2">将数据传送到活动中的自变量。</param>
        <param name="argument3">将数据传送到活动中的自变量。</param>
        <param name="argument4">将数据传送到活动中的自变量。</param>
        <param name="argument5">将数据传送到活动中的自变量。</param>
        <param name="argument6">将数据传送到活动中的自变量。</param>
        <param name="argument7">将数据传送到活动中的自变量。</param>
        <param name="argument8">将数据传送到活动中的自变量。</param>
        <param name="argument9">将数据传送到活动中的自变量。</param>
        <param name="argument10">将数据传送到活动中的自变量。</param>
        <param name="argument11">将数据传送到活动中的自变量。</param>
        <param name="argument12">将数据传送到活动中的自变量。</param>
        <param name="argument13">将数据传送到活动中的自变量。</param>
        <param name="onCompleted">一个书签，用于指示 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult&gt; 完成后恢复父活动执行的位置。</param>
        <param name="onFaulted">一个书签，用于指示在错误导致 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult&gt; 终止的情况下恢复父活动执行的位置。</param>
        <summary>计划指定的 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult&gt; 的执行，该函数的 in 实参具有 14 个形参，用于保存返回值，并在 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult&gt; 完成后恢复父进程的指定回调位置标记书签。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, T13 argument13, T14 argument14, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult&gt;(class System.Activities.ActivityFunc`15&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, !!T13 argument13, !!T14 argument14, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, argument13 As T13, argument14 As T14, Optional onCompleted As CompletionCallback(Of TResult) = Nothing, Optional onFaulted As FaultCallback = Nothing)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, argument12, argument13, argument14, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="argument13" Type="T13" />
        <Parameter Name="argument14" Type="T14" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">传送到活动中的数据。</typeparam>
        <typeparam name="T2">传送到活动中的数据。</typeparam>
        <typeparam name="T3">传送到活动中的数据。</typeparam>
        <typeparam name="T4">传送到活动中的数据。</typeparam>
        <typeparam name="T5">传送到活动中的数据。</typeparam>
        <typeparam name="T6">传送到活动中的数据。</typeparam>
        <typeparam name="T7">传送到活动中的数据。</typeparam>
        <typeparam name="T8">传送到活动中的数据。</typeparam>
        <typeparam name="T9">传送到活动中的数据。</typeparam>
        <typeparam name="T10">传送到活动中的数据。</typeparam>
        <typeparam name="T11">传送到活动中的数据。</typeparam>
        <typeparam name="T12">传送到活动中的数据。</typeparam>
        <typeparam name="T13">传送到活动中的数据。</typeparam>
        <typeparam name="T14">传送到活动中的数据。</typeparam>
        <typeparam name="TResult"> NativeActivity 子活动 out 参数的类型。</typeparam>
        <param name="activityFunc">在父活动中发生特定事件并返回值时运行的子活动。</param>
        <param name="argument1">将数据传送到活动中的自变量。</param>
        <param name="argument2">将数据传送到活动中的自变量。</param>
        <param name="argument3">将数据传送到活动中的自变量。</param>
        <param name="argument4">将数据传送到活动中的自变量。</param>
        <param name="argument5">将数据传送到活动中的自变量。</param>
        <param name="argument6">将数据传送到活动中的自变量。</param>
        <param name="argument7">将数据传送到活动中的自变量。</param>
        <param name="argument8">将数据传送到活动中的自变量。</param>
        <param name="argument9">将数据传送到活动中的自变量。</param>
        <param name="argument10">将数据传送到活动中的自变量。</param>
        <param name="argument11">将数据传送到活动中的自变量。</param>
        <param name="argument12">将数据传送到活动中的自变量。</param>
        <param name="argument13">将数据传送到活动中的自变量。</param>
        <param name="argument14">将数据传送到活动中的自变量。</param>
        <param name="onCompleted">一个书签，用于指示 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult&gt; 完成后恢复父活动执行的位置。</param>
        <param name="onFaulted">一个书签，用于指示在错误导致 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult&gt; 终止的情况下恢复父活动执行的位置。</param>
        <summary>计划指定的 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult&gt; 的执行，该函数的 in 实参具有 15 个形参，用于保存返回值，并在 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult&gt; 完成后恢复父进程的指定回调位置标记书签。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, T13 argument13, T14 argument14, T15 argument15, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult&gt;(class System.Activities.ActivityFunc`16&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, !!T15, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, !!T13 argument13, !!T14 argument14, !!T15 argument15, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, argument13 As T13, argument14 As T14, argument15 As T15, Optional onCompleted As CompletionCallback(Of TResult) = Nothing, Optional onFaulted As FaultCallback = Nothing)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, 'T15, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, argument12, argument13, argument14, argument15, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="argument13" Type="T13" />
        <Parameter Name="argument14" Type="T14" />
        <Parameter Name="argument15" Type="T15" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">传送到活动中的数据。</typeparam>
        <typeparam name="T2">传送到活动中的数据。</typeparam>
        <typeparam name="T3">传送到活动中的数据。</typeparam>
        <typeparam name="T4">传送到活动中的数据。</typeparam>
        <typeparam name="T5">传送到活动中的数据。</typeparam>
        <typeparam name="T6">传送到活动中的数据。</typeparam>
        <typeparam name="T7">传送到活动中的数据。</typeparam>
        <typeparam name="T8">传送到活动中的数据。</typeparam>
        <typeparam name="T9">传送到活动中的数据。</typeparam>
        <typeparam name="T10">传送到活动中的数据。</typeparam>
        <typeparam name="T11">传送到活动中的数据。</typeparam>
        <typeparam name="T12">传送到活动中的数据。</typeparam>
        <typeparam name="T13">传送到活动中的数据。</typeparam>
        <typeparam name="T14">传送到活动中的数据。</typeparam>
        <typeparam name="T15">传送到活动中的数据。</typeparam>
        <typeparam name="TResult"> NativeActivity 子活动 out 参数的类型。</typeparam>
        <param name="activityFunc">在父活动中发生特定事件并返回值时运行的子活动。</param>
        <param name="argument1">将数据传送到活动中的自变量。</param>
        <param name="argument2">将数据传送到活动中的自变量。</param>
        <param name="argument3">将数据传送到活动中的自变量。</param>
        <param name="argument4">将数据传送到活动中的自变量。</param>
        <param name="argument5">将数据传送到活动中的自变量。</param>
        <param name="argument6">将数据传送到活动中的自变量。</param>
        <param name="argument7">将数据传送到活动中的自变量。</param>
        <param name="argument8">将数据传送到活动中的自变量。</param>
        <param name="argument9">将数据传送到活动中的自变量。</param>
        <param name="argument10">将数据传送到活动中的自变量。</param>
        <param name="argument11">将数据传送到活动中的自变量。</param>
        <param name="argument12">将数据传送到活动中的自变量。</param>
        <param name="argument13">将数据传送到活动中的自变量。</param>
        <param name="argument14">将数据传送到活动中的自变量。</param>
        <param name="argument15">将数据传送到活动中的自变量。</param>
        <param name="onCompleted">一个书签，用于指示 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult&gt; 完成后恢复父活动执行的位置。</param>
        <param name="onFaulted">一个书签，用于指示在错误导致 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult&gt; 终止的情况下恢复父活动执行的位置。</param>
        <summary>计划指定的 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult&gt; 的执行，该函数的 in 实参具有 16 个形参，用于保存返回值，并在 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult&gt; 完成后恢复父进程的指定回调位置标记书签。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult&gt;">
      <MemberSignature Language="C#" Value="public void ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, T13 argument13, T14 argument14, T15 argument15, T16 argument16, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = default, System.Activities.FaultCallback onFaulted = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult&gt;(class System.Activities.ActivityFunc`17&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, !!T15, !!T16, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, !!T13 argument13, !!T14 argument14, !!T15 argument15, !!T16 argument16, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, argument13 As T13, argument14 As T14, argument15 As T15, argument16 As T16, Optional onCompleted As CompletionCallback(Of TResult) = Nothing, Optional onFaulted As FaultCallback = Nothing)" />
      <MemberSignature Language="F#" Value="member this.ScheduleFunc : System.Activities.ActivityFunc&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, 'T15, 'T16, 'Result&gt; * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * 'T16 * System.Activities.CompletionCallback&lt;'Result&gt; * System.Activities.FaultCallback -&gt; unit" Usage="nativeActivityUpdateContext.ScheduleFunc (activityFunc, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8, argument9, argument10, argument11, argument12, argument13, argument14, argument15, argument16, onCompleted, onFaulted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="argument13" Type="T13" />
        <Parameter Name="argument14" Type="T14" />
        <Parameter Name="argument15" Type="T15" />
        <Parameter Name="argument16" Type="T16" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">传送到活动中的数据。</typeparam>
        <typeparam name="T2">传送到活动中的数据。</typeparam>
        <typeparam name="T3">传送到活动中的数据。</typeparam>
        <typeparam name="T4">传送到活动中的数据。</typeparam>
        <typeparam name="T5">传送到活动中的数据。</typeparam>
        <typeparam name="T6">传送到活动中的数据。</typeparam>
        <typeparam name="T7">传送到活动中的数据。</typeparam>
        <typeparam name="T8">传送到活动中的数据。</typeparam>
        <typeparam name="T9">传送到活动中的数据。</typeparam>
        <typeparam name="T10">传送到活动中的数据。</typeparam>
        <typeparam name="T11">传送到活动中的数据。</typeparam>
        <typeparam name="T12">传送到活动中的数据。</typeparam>
        <typeparam name="T13">传送到活动中的数据。</typeparam>
        <typeparam name="T14">传送到活动中的数据。</typeparam>
        <typeparam name="T15">传送到活动中的数据。</typeparam>
        <typeparam name="T16">传送到活动中的数据。</typeparam>
        <typeparam name="TResult"> NativeActivity 子活动 out 参数的类型。</typeparam>
        <param name="activityFunc">在父活动中发生特定事件并返回值时运行的子活动。</param>
        <param name="argument1">将数据传送到活动中的自变量。</param>
        <param name="argument2">将数据传送到活动中的自变量。</param>
        <param name="argument3">将数据传送到活动中的自变量。</param>
        <param name="argument4">将数据传送到活动中的自变量。</param>
        <param name="argument5">将数据传送到活动中的自变量。</param>
        <param name="argument6">将数据传送到活动中的自变量。</param>
        <param name="argument7">将数据传送到活动中的自变量。</param>
        <param name="argument8">将数据传送到活动中的自变量。</param>
        <param name="argument9">将数据传送到活动中的自变量。</param>
        <param name="argument10">将数据传送到活动中的自变量。</param>
        <param name="argument11">将数据传送到活动中的自变量。</param>
        <param name="argument12">将数据传送到活动中的自变量。</param>
        <param name="argument13">将数据传送到活动中的自变量。</param>
        <param name="argument14">将数据传送到活动中的自变量。</param>
        <param name="argument15">将数据传送到活动中的自变量。</param>
        <param name="argument16">将数据传送到活动中的自变量。</param>
        <param name="onCompleted">一个书签，用于指示 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult&gt; 完成后恢复父活动执行的位置。</param>
        <param name="onFaulted">一个书签，用于指示在错误导致 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult&gt; 终止的情况下恢复父活动执行的位置。</param>
        <summary>计划指定的 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult&gt; 的执行，该函数的 in 实参具有 17 个形参，用于保存返回值，并在 ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult&gt; 完成后恢复父进程的指定回调位置标记书签。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>为指定的对象赋值。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (System.Activities.Argument argument, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(class System.Activities.Argument argument, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.SetValue(System.Activities.Argument,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (argument As Argument, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Activities::Argument ^ argument, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetValue : System.Activities.Argument * obj -&gt; unit" Usage="nativeActivityUpdateContext.SetValue (argument, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Activities.Argument" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="argument">要接收新值的参数。</param>
        <param name="value">参数的新值。</param>
        <summary>为指定的参数赋值。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (System.Activities.Variable variable, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(class System.Activities.Variable variable, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.SetValue(System.Activities.Variable,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (variable As Variable, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Activities::Variable ^ variable, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetValue : System.Activities.Variable * obj -&gt; unit" Usage="nativeActivityUpdateContext.SetValue (variable, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="variable">可以分配给值对象的没有指定类型的变量对象。</param>
        <param name="value">可以分配给变量对象的没有指定类型的对象。</param>
        <summary>将指定值对象分配给指定变量对象。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void SetValue&lt;T&gt; (System.Activities.Variable&lt;T&gt; variable, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue&lt;T&gt;(class System.Activities.Variable`1&lt;!!T&gt; variable, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.SetValue``1(System.Activities.Variable{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue(Of T) (variable As Variable(Of T), value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void SetValue(System::Activities::Variable&lt;T&gt; ^ variable, T value);" />
      <MemberSignature Language="F#" Value="member this.SetValue : System.Activities.Variable&lt;'T&gt; * 'T -&gt; unit" Usage="nativeActivityUpdateContext.SetValue (variable, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable&lt;T&gt;" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">变量的类型。</typeparam>
        <param name="variable">可以分配给值对象的具有指定类型的变量对象。</param>
        <param name="value">可以分配给变量对象的具有指定类型的对象。</param>
        <summary>将指定泛型值对象分配给泛型变量对象。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
