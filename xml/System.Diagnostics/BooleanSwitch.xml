<Type Name="BooleanSwitch" FullName="System.Diagnostics.BooleanSwitch">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7f29d486629dfd46b0e959c7b0600b516926f4c6" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83912401" /></Metadata><TypeSignature Language="C#" Value="public class BooleanSwitch : System.Diagnostics.Switch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BooleanSwitch extends System.Diagnostics.Switch" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.BooleanSwitch" />
  <TypeSignature Language="VB.NET" Value="Public Class BooleanSwitch&#xA;Inherits Switch" />
  <TypeSignature Language="C++ CLI" Value="public ref class BooleanSwitch : System::Diagnostics::Switch" />
  <TypeSignature Language="F#" Value="type BooleanSwitch = class&#xA;    inherit Switch" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Diagnostics.TraceSource" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Diagnostics.Switch</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
      <AttributeName>System.Diagnostics.SwitchLevel(typeof(System.Boolean))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f0f23-101">提供简单的打开/关闭开关来控制调试和跟踪输出。</span><span class="sxs-lookup"><span data-stu-id="f0f23-101">Provides a simple on/off switch that controls debugging and tracing output.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0f23-102">可以根据消息的重要性，使用布尔跟踪开关来启用或禁用消息。</span><span class="sxs-lookup"><span data-stu-id="f0f23-102">You can use a Boolean trace switch to enable or disable messages based on their importance.</span></span> <span data-ttu-id="f0f23-103">使用 <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> 属性可获取开关的当前值。</span><span class="sxs-lookup"><span data-stu-id="f0f23-103">Use the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> property to get the current value of the switch.</span></span>  
  
 <span data-ttu-id="f0f23-104">你可以通过应用程序配置文件启用或禁用 <xref:System.Diagnostics.BooleanSwitch>，然后在你的应用程序中使用配置的 <xref:System.Diagnostics.BooleanSwitch> 值。</span><span class="sxs-lookup"><span data-stu-id="f0f23-104">You can enable or disable a <xref:System.Diagnostics.BooleanSwitch> through the application configuration file and then use the configured <xref:System.Diagnostics.BooleanSwitch> value in your application.</span></span> <span data-ttu-id="f0f23-105">或者，您可以在代码中创建 <xref:System.Diagnostics.BooleanSwitch>，并直接设置 <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> 属性以检测特定的代码段。</span><span class="sxs-lookup"><span data-stu-id="f0f23-105">Alternately, you can create a <xref:System.Diagnostics.BooleanSwitch> in your code and set the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> property directly to instrument a specific section of code.</span></span>  
  
 <span data-ttu-id="f0f23-106">若要配置 <xref:System.Diagnostics.BooleanSwitch>，请编辑与应用程序名称对应的配置文件。</span><span class="sxs-lookup"><span data-stu-id="f0f23-106">To configure a <xref:System.Diagnostics.BooleanSwitch>, edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="f0f23-107">在此文件中，可以添加或删除开关、设置开关的值，或者清除以前由应用程序设置的所有开关。</span><span class="sxs-lookup"><span data-stu-id="f0f23-107">Within this file, you can add or remove a switch, set a switch's value, or clear all the switches previously set by the application.</span></span> <span data-ttu-id="f0f23-108">配置文件的格式应与下面的示例类似。</span><span class="sxs-lookup"><span data-stu-id="f0f23-108">The configuration file should be formatted like the following example.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="1"/>  
    </switches>  
  </system.diagnostics>  
</configuration>  
```  
  
 <span data-ttu-id="f0f23-109">此示例配置节定义 <xref:System.Diagnostics.BooleanSwitch>，并将 <xref:System.Diagnostics.Switch.DisplayName%2A> 属性设置为 `mySwitch`，并将 <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> 值设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="f0f23-109">This example configuration section defines a <xref:System.Diagnostics.BooleanSwitch> with the <xref:System.Diagnostics.Switch.DisplayName%2A> property set to `mySwitch` and the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> value set to `true`.</span></span> <span data-ttu-id="f0f23-110">在应用程序中，可以通过创建一个具有相同名称的 <xref:System.Diagnostics.BooleanSwitch> 来使用已配置的开关值，如下面的代码示例中所示。</span><span class="sxs-lookup"><span data-stu-id="f0f23-110">Within your application, you can use the configured switch value by creating a <xref:System.Diagnostics.BooleanSwitch> with the same name, as shown in the following code example.</span></span>  
  
 [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CPP/remarks.cpp#2)]
 [!code-csharp[Classic BooleanSwitch.BooleanSwitch Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CS/remarks.cs#2)]
 [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/VB/remarks.vb#2)]  
  
 <span data-ttu-id="f0f23-111">默认情况下，使用配置文件中指定的值设置 <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="f0f23-111">By default, the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> property is set using the value specified in the configuration file.</span></span> <span data-ttu-id="f0f23-112">使用值0将开关配置为将 <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> 属性设置为 `false`;将开关配置为一个非零值，以将 <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> 属性设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="f0f23-112">Configure the switch with a value of 0 to set the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> property to `false`; configure the switch with a nonzero value to set the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> property to `true`.</span></span> <span data-ttu-id="f0f23-113">如果 <xref:System.Diagnostics.BooleanSwitch> 构造函数在配置文件中找不到初始交换机设置，则默认情况下新开关的 <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> 属性将设置为 "`false`"。</span><span class="sxs-lookup"><span data-stu-id="f0f23-113">If the <xref:System.Diagnostics.BooleanSwitch> constructor cannot find initial switch settings in the configuration file, the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> property of the new switch is set to `false` by default.</span></span>  
  
 <span data-ttu-id="f0f23-114">您必须启用跟踪或调试才能使用交换机。</span><span class="sxs-lookup"><span data-stu-id="f0f23-114">You must enable tracing or debugging to use a switch.</span></span> <span data-ttu-id="f0f23-115">以下语法是编译器特定的。</span><span class="sxs-lookup"><span data-stu-id="f0f23-115">The following syntax is compiler specific.</span></span> <span data-ttu-id="f0f23-116">如果使用C#或 Visual Basic 以外的编译器，请参阅编译器的文档。</span><span class="sxs-lookup"><span data-stu-id="f0f23-116">If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</span></span>  
  
-   <span data-ttu-id="f0f23-117">若要在中C#启用调试，请在编译代码时将 `/d:DEBUG` 标志添加到编译器命令行，也可以将 `#define DEBUG` 添加到文件的顶部。</span><span class="sxs-lookup"><span data-stu-id="f0f23-117">To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or you can add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="f0f23-118">在 Visual Basic 中，将 `/d:DEBUG=True` 标志添加到编译器命令行。</span><span class="sxs-lookup"><span data-stu-id="f0f23-118">In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.</span></span>  
  
-   <span data-ttu-id="f0f23-119">若要启用跟踪C#，请在编译代码时将 `/d:TRACE` 标志添加到编译器命令行，或将 `#define TRACE` 添加到文件的顶部。</span><span class="sxs-lookup"><span data-stu-id="f0f23-119">To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="f0f23-120">在 Visual Basic 中，将 `/d:TRACE=True` 标志添加到编译器命令行。</span><span class="sxs-lookup"><span data-stu-id="f0f23-120">In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f0f23-121">当单独使用 <xref:System.Diagnostics.BooleanSwitch> 类时，不需要这些调试和跟踪编译器开关。</span><span class="sxs-lookup"><span data-stu-id="f0f23-121">These debug and trace compiler switches are not required when using the <xref:System.Diagnostics.BooleanSwitch> class in isolation.</span></span> <span data-ttu-id="f0f23-122">它们仅与有条件编译 <xref:System.Diagnostics.Trace> 或 <xref:System.Diagnostics.Debug> 方法一起需要。</span><span class="sxs-lookup"><span data-stu-id="f0f23-122">They are only required in conjunction with <xref:System.Diagnostics.Trace> or <xref:System.Diagnostics.Debug> methods that are conditionally compiled.</span></span>  
  
 <span data-ttu-id="f0f23-123">有关检测应用程序的详细信息，请参阅 <xref:System.Diagnostics.Debug> 和 <xref:System.Diagnostics.Trace>。</span><span class="sxs-lookup"><span data-stu-id="f0f23-123">For more information on instrumenting your application, see <xref:System.Diagnostics.Debug> and <xref:System.Diagnostics.Trace>.</span></span> <span data-ttu-id="f0f23-124">有关配置和使用跟踪开关的详细信息，请参阅[跟踪开关](/dotnet/framework/debug-trace-profile/trace-switches)。</span><span class="sxs-lookup"><span data-stu-id="f0f23-124">For more information about configuring and using trace switches, see [Trace Switches](/dotnet/framework/debug-trace-profile/trace-switches).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f0f23-125">若要提高性能，可以在类中使 <xref:System.Diagnostics.BooleanSwitch> 成员 `static`。</span><span class="sxs-lookup"><span data-stu-id="f0f23-125">To improve performance, you can make <xref:System.Diagnostics.BooleanSwitch> members `static` in your class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0f23-126">下面的示例创建一个 <xref:System.Diagnostics.BooleanSwitch>，并使用开关来确定是否打印错误消息。</span><span class="sxs-lookup"><span data-stu-id="f0f23-126">The following example creates a <xref:System.Diagnostics.BooleanSwitch> and uses the switch to determine whether to print an error message.</span></span> <span data-ttu-id="f0f23-127">在类级别创建开关。</span><span class="sxs-lookup"><span data-stu-id="f0f23-127">You create the switch at the class level.</span></span> <span data-ttu-id="f0f23-128">`Main` 方法将其位置传递到 `MyMethod`，这会打印错误消息以及错误发生的位置。</span><span class="sxs-lookup"><span data-stu-id="f0f23-128">The `Main` method passes its location to `MyMethod`, which prints an error message and where the error occurred.</span></span>  
  
 [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CS/source.cs#1)]
 [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.Switch" />
    <altmember cref="T:System.Diagnostics.TraceSwitch" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f0f23-129">初始化 <see cref="T:System.Diagnostics.BooleanSwitch" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f0f23-129">Initializes a new instance of the <see cref="T:System.Diagnostics.BooleanSwitch" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BooleanSwitch (string displayName, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string displayName, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (displayName As String, description As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BooleanSwitch(System::String ^ displayName, System::String ^ description);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.BooleanSwitch : string * string -&gt; System.Diagnostics.BooleanSwitch" Usage="new System.Diagnostics.BooleanSwitch (displayName, description)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="displayName"><span data-ttu-id="f0f23-130">要在用户界面上显示的名称。</span><span class="sxs-lookup"><span data-stu-id="f0f23-130">The name to display on a user interface.</span></span></param>
        <param name="description"><span data-ttu-id="f0f23-131">切换描述。</span><span class="sxs-lookup"><span data-stu-id="f0f23-131">The description of the switch.</span></span></param>
        <summary><span data-ttu-id="f0f23-132">使用指定的显示名称和说明初始化 <see cref="T:System.Diagnostics.BooleanSwitch" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f0f23-132">Initializes a new instance of the <see cref="T:System.Diagnostics.BooleanSwitch" /> class with the specified display name and description.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0f23-133">创建 <xref:System.Diagnostics.BooleanSwitch>时，`displayName` 参数用于查找初始交换机设置。</span><span class="sxs-lookup"><span data-stu-id="f0f23-133">When you create a <xref:System.Diagnostics.BooleanSwitch>, the `displayName` parameter is used to find initial switch settings.</span></span> <span data-ttu-id="f0f23-134">如果构造函数找不到初始设置，则 <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> 属性设置为 `false` （禁用）。</span><span class="sxs-lookup"><span data-stu-id="f0f23-134">If the constructor cannot find initial settings, the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> property is set to `false` (disabled).</span></span>  
  
 <span data-ttu-id="f0f23-135">若要设置 <xref:System.Diagnostics.BooleanSwitch>的级别，请编辑与应用程序名称对应的配置文件。</span><span class="sxs-lookup"><span data-stu-id="f0f23-135">To set the level of your <xref:System.Diagnostics.BooleanSwitch>, edit the configuration file corresponding to the name of your application.</span></span> <span data-ttu-id="f0f23-136">在此文件中，你可以添加开关并设置其值、删除开关或清除之前由应用程序设置的所有开关。</span><span class="sxs-lookup"><span data-stu-id="f0f23-136">Within this file, you can add a switch and set its value, remove a switch, or clear all switches previously set by the application.</span></span> <span data-ttu-id="f0f23-137">配置文件的格式应类似于以下示例：</span><span class="sxs-lookup"><span data-stu-id="f0f23-137">The configuration file should be formatted like the following example:</span></span>  
  
```xml  
<configuration>  
    <system.diagnostics>  
       <switches>  
          <add name="mySwitch" value="10" />  
          <add name="myNewSwitch" value="20" />  
          <remove name="mySwitch" />  
          <clear/>  
       </switches>  
    </system.diagnostics>  
 </configuration>  
```  
  
> [!NOTE]
>  <span data-ttu-id="f0f23-138">你创建的交换机应 `static`。</span><span class="sxs-lookup"><span data-stu-id="f0f23-138">The switches you created should be `static`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0f23-139">下面的示例创建一个 <xref:System.Diagnostics.BooleanSwitch>，并使用开关来确定是否打印错误消息。</span><span class="sxs-lookup"><span data-stu-id="f0f23-139">The following example creates a <xref:System.Diagnostics.BooleanSwitch> and uses the switch to determine whether to print an error message.</span></span> <span data-ttu-id="f0f23-140">在类级别创建开关。</span><span class="sxs-lookup"><span data-stu-id="f0f23-140">The switch is created at the class level.</span></span> <span data-ttu-id="f0f23-141">`Main` 方法将其位置传递到 `MyMethod`，这会打印错误消息以及错误发生的位置。</span><span class="sxs-lookup"><span data-stu-id="f0f23-141">The `Main` method passes its location to `MyMethod`, which prints an error message and where the error occurred.</span></span>  
  
 [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CS/source.cs#1)]
 [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BooleanSwitch (string displayName, string description, string defaultSwitchValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string displayName, string description, string defaultSwitchValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (displayName As String, description As String, defaultSwitchValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BooleanSwitch(System::String ^ displayName, System::String ^ description, System::String ^ defaultSwitchValue);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.BooleanSwitch : string * string * string -&gt; System.Diagnostics.BooleanSwitch" Usage="new System.Diagnostics.BooleanSwitch (displayName, description, defaultSwitchValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="description" Type="System.String" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="defaultSwitchValue" Type="System.String" Index="2" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="displayName"><span data-ttu-id="f0f23-142">要显示在用户界面上的名称。</span><span class="sxs-lookup"><span data-stu-id="f0f23-142">The name to display on the user interface.</span></span></param>
        <param name="description"><span data-ttu-id="f0f23-143">切换描述。</span><span class="sxs-lookup"><span data-stu-id="f0f23-143">The description of the switch.</span></span></param>
        <param name="defaultSwitchValue"><span data-ttu-id="f0f23-144">开关的默认值。</span><span class="sxs-lookup"><span data-stu-id="f0f23-144">The default value of the switch.</span></span></param>
        <summary><span data-ttu-id="f0f23-145">用指定的显示名称、说明和默认开关值初始化 <see cref="T:System.Diagnostics.BooleanSwitch" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f0f23-145">Initializes a new instance of the <see cref="T:System.Diagnostics.BooleanSwitch" /> class with the specified display name, description, and default switch value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0f23-146">`displayName` 参数用于设置 <xref:System.Diagnostics.Switch.DisplayName%2A> 属性的值，而 `description` 参数用于设置 <xref:System.Diagnostics.Switch.Description%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="f0f23-146">The `displayName` parameter is used to set the value of the <xref:System.Diagnostics.Switch.DisplayName%2A> property, and the `description` parameter is use to set the value of the <xref:System.Diagnostics.Switch.Description%2A> property.</span></span> <span data-ttu-id="f0f23-147">`defaultSwitchValue` 参数将另存为字段，并用于初始化第一次引用的 <xref:System.Diagnostics.Switch.Value%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="f0f23-147">The `defaultSwitchValue` parameter is saved as a field and used to initialize the <xref:System.Diagnostics.Switch.Value%2A> property on first reference.</span></span> <span data-ttu-id="f0f23-148">有关构造函数使用的详细信息，请参阅 <xref:System.Diagnostics.BooleanSwitch.%23ctor%28System.String%2CSystem.String%29> 构造函数。</span><span class="sxs-lookup"><span data-stu-id="f0f23-148">For more information about constructor use, see the <xref:System.Diagnostics.BooleanSwitch.%23ctor%28System.String%2CSystem.String%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.BooleanSwitch.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Diagnostics.BooleanSwitch.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0f23-149">获取或设置一个指示开关已启用还是已禁用的值。</span><span class="sxs-lookup"><span data-stu-id="f0f23-149">Gets or sets a value indicating whether the switch is enabled or disabled.</span></span></summary>
        <value><span data-ttu-id="f0f23-150">如果开关已启用，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f0f23-150"><see langword="true" /> if the switch is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="f0f23-151">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f0f23-151">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0f23-152">默认情况下，此字段设置为 `false` （disabled）。</span><span class="sxs-lookup"><span data-stu-id="f0f23-152">By default, this field is set to `false` (disabled).</span></span> <span data-ttu-id="f0f23-153">若要启用交换机，请为此字段分配 `true`的值。</span><span class="sxs-lookup"><span data-stu-id="f0f23-153">To enable the switch, assign this field the value of `true`.</span></span> <span data-ttu-id="f0f23-154">若要禁用此开关，请将值分配给 `false`。</span><span class="sxs-lookup"><span data-stu-id="f0f23-154">To disable the switch, assign the value to `false`.</span></span>  <span data-ttu-id="f0f23-155">此属性的值由 <xref:System.Diagnostics.Switch.SwitchSetting%2A>的 "基类" 属性的值确定。</span><span class="sxs-lookup"><span data-stu-id="f0f23-155">The value of this property is determined by the value of the base class property <xref:System.Diagnostics.Switch.SwitchSetting%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f0f23-156">此方法使用 <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> 标志来阻止从不受信任的代码调用;只有直接调用方才需要具有 <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=nameWithType> 权限。</span><span class="sxs-lookup"><span data-stu-id="f0f23-156">This method uses the <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> flag to prevent being called from untrusted code; only the immediate caller is required to have <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=nameWithType> permission.</span></span> <span data-ttu-id="f0f23-157">如果你的代码可从部分受信任的代码调用，则不要将用户输入传递给 <xref:System.Runtime.InteropServices.Marshal> 类方法，无需验证。</span><span class="sxs-lookup"><span data-stu-id="f0f23-157">If your code can be called from partially trusted code, do not pass the user input to <xref:System.Runtime.InteropServices.Marshal> class methods without validation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0f23-158">下面的代码示例创建一个 <xref:System.Diagnostics.BooleanSwitch>，并使用开关来确定是否打印错误消息。</span><span class="sxs-lookup"><span data-stu-id="f0f23-158">The following code example creates a <xref:System.Diagnostics.BooleanSwitch> and uses the switch to determine whether to print an error message.</span></span> <span data-ttu-id="f0f23-159">在类级别创建开关。</span><span class="sxs-lookup"><span data-stu-id="f0f23-159">The switch is created at the class level.</span></span> <span data-ttu-id="f0f23-160">`Main` 方法将其位置传递到 `MyMethod`，这会打印错误消息和发生错误的位置。</span><span class="sxs-lookup"><span data-stu-id="f0f23-160">The `Main` method passes its location to `MyMethod`, which prints an error message and the location where the error occurred.</span></span>  
  
 [!code-cpp[Classic BooleanSwitch.Enabled Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BooleanSwitch.Enabled Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BooleanSwitch.Enabled Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BooleanSwitch.Enabled Example/CS/source.cs#1)]
 [!code-vb[Classic BooleanSwitch.Enabled Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BooleanSwitch.Enabled Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f0f23-161">调用方没有正确的权限。</span><span class="sxs-lookup"><span data-stu-id="f0f23-161">The caller does not have the correct permission.</span></span></exception>
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="OnValueChanged">
      <MemberSignature Language="C#" Value="protected override void OnValueChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValueChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.BooleanSwitch.OnValueChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnValueChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnValueChanged();" />
      <MemberSignature Language="F#" Value="override this.OnValueChanged : unit -&gt; unit" Usage="booleanSwitch.OnValueChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f0f23-162">确定 <see cref="P:System.Diagnostics.Switch.Value" /> 属性的新值是否可以被解析为一个布尔值。</span><span class="sxs-lookup"><span data-stu-id="f0f23-162">Determines whether the new value of the <see cref="P:System.Diagnostics.Switch.Value" /> property can be parsed as a Boolean value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0f23-163"><xref:System.Diagnostics.BooleanSwitch.OnValueChanged%2A> 方法确定新值是否为布尔值的有效字符串表示形式（"false" 或 "true"）。</span><span class="sxs-lookup"><span data-stu-id="f0f23-163">The <xref:System.Diagnostics.BooleanSwitch.OnValueChanged%2A> method determines whether the new value is a valid string representation of a Boolean value ("false" or "true").</span></span> <span data-ttu-id="f0f23-164">如果是这样，则该方法将 <xref:System.Diagnostics.Switch.SwitchSetting%2A> 属性设置为0或1。</span><span class="sxs-lookup"><span data-stu-id="f0f23-164">If so, the method sets the <xref:System.Diagnostics.Switch.SwitchSetting%2A> property to 0 or 1.</span></span>  <span data-ttu-id="f0f23-165">否则，将调用基方法，该方法将字符串值转换为整数值，然后使用该整数值设置 <xref:System.Diagnostics.Switch.SwitchSetting%2A> 的属性。</span><span class="sxs-lookup"><span data-stu-id="f0f23-165">Otherwise, the base method is called, which converts the string value to an integer value, which is then used to set the <xref:System.Diagnostics.Switch.SwitchSetting%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
