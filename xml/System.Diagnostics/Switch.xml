<Type Name="Switch" FullName="System.Diagnostics.Switch">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8f11177e9bcbe52b020724a14ac1cf98a0aff6e5" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83965320" /></Metadata><TypeSignature Language="C#" Value="public abstract class Switch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Switch extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Switch" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Switch" />
  <TypeSignature Language="C++ CLI" Value="public ref class Switch abstract" />
  <TypeSignature Language="F#" Value="type Switch = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Diagnostics.TraceSource" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e9391-101">提供一个用于创建新的调试和跟踪开关的抽象基类。</span><span class="sxs-lookup"><span data-stu-id="e9391-101">Provides an abstract base class to create new debugging and tracing switches.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9391-102">开关提供一种有效的机制，用于在运行时使用外部设置控制跟踪和调试输出。</span><span class="sxs-lookup"><span data-stu-id="e9391-102">A switch provides an efficient mechanism for controlling tracing and debugging output at run time using external settings.</span></span> <span data-ttu-id="e9391-103"><xref:System.Diagnostics.Switch> 类实现了开关的默认行为，从而使你可以在运行时更改交换机级别。</span><span class="sxs-lookup"><span data-stu-id="e9391-103">The <xref:System.Diagnostics.Switch> class implements default behavior for switches, allowing you to change the switch level at run time.</span></span>  
  
 <span data-ttu-id="e9391-104">此类是 <xref:System.Diagnostics.BooleanSwitch>、<xref:System.Diagnostics.SourceSwitch> 和 <xref:System.Diagnostics.TraceSwitch> 类的基类。</span><span class="sxs-lookup"><span data-stu-id="e9391-104">This class is the base class for the <xref:System.Diagnostics.BooleanSwitch>, <xref:System.Diagnostics.SourceSwitch> and the <xref:System.Diagnostics.TraceSwitch> classes.</span></span> <span data-ttu-id="e9391-105">这些开关满足大多数调试和跟踪需求。</span><span class="sxs-lookup"><span data-stu-id="e9391-105">These switches meet most debugging and tracing needs.</span></span> <span data-ttu-id="e9391-106">有关跟踪开关的详细信息，请参阅[跟踪开关](/dotnet/framework/debug-trace-profile/trace-switches)。</span><span class="sxs-lookup"><span data-stu-id="e9391-106">For more information about trace switches, see [Trace Switches](/dotnet/framework/debug-trace-profile/trace-switches).</span></span>  
  
 <span data-ttu-id="e9391-107">您必须启用跟踪或调试才能使用交换机。</span><span class="sxs-lookup"><span data-stu-id="e9391-107">You must enable tracing or debugging to use a switch.</span></span> <span data-ttu-id="e9391-108">以下语法是编译器特定的。</span><span class="sxs-lookup"><span data-stu-id="e9391-108">The following syntax is compiler specific.</span></span> <span data-ttu-id="e9391-109">如果使用C#或 Visual Basic 以外的编译器，请参阅编译器的文档。</span><span class="sxs-lookup"><span data-stu-id="e9391-109">If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</span></span>  
  
-   <span data-ttu-id="e9391-110">若要在中C#启用调试，请在编译代码时将 `/d:DEBUG` 标志添加到编译器命令行，也可以将 `#define DEBUG` 添加到文件的顶部。</span><span class="sxs-lookup"><span data-stu-id="e9391-110">To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or you can add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="e9391-111">在 Visual Basic 中，将 `/d:DEBUG=True` 标志添加到编译器命令行。</span><span class="sxs-lookup"><span data-stu-id="e9391-111">In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.</span></span>  
  
-   <span data-ttu-id="e9391-112">若要使用中的C#启用跟踪，请在编译代码时将 `/d:TRACE` 标志添加到编译器命令行，或将 `#define TRACE` 添加到文件的顶部。</span><span class="sxs-lookup"><span data-stu-id="e9391-112">To enable tracing using in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="e9391-113">在 Visual Basic 中，将 `/d:TRACE=True` 标志添加到编译器命令行。</span><span class="sxs-lookup"><span data-stu-id="e9391-113">In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.</span></span>  
  
 <span data-ttu-id="e9391-114">若要设置交换机的级别，请编辑与应用程序名称对应的配置文件。</span><span class="sxs-lookup"><span data-stu-id="e9391-114">To set the level of your switch, edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="e9391-115">在此文件中，你可以添加开关并设置其值、删除开关或清除之前由应用程序设置的所有开关。</span><span class="sxs-lookup"><span data-stu-id="e9391-115">Within this file, you can add a switch and set its value, remove a switch, or clear all the switches previously set by the application.</span></span> <span data-ttu-id="e9391-116">配置文件的格式应类似于以下示例：</span><span class="sxs-lookup"><span data-stu-id="e9391-116">The configuration file should be formatted like the following example:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="true" />  
    </switches>  
  </system.diagnostics>  
</configuration>  
```  
  
 <span data-ttu-id="e9391-117">此示例配置节定义 <xref:System.Diagnostics.BooleanSwitch>，并将 <xref:System.Diagnostics.Switch.DisplayName%2A> 属性设置为 `mySwitch`，并将 <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> 值设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="e9391-117">This example configuration section defines a <xref:System.Diagnostics.BooleanSwitch> with the <xref:System.Diagnostics.Switch.DisplayName%2A> property set to `mySwitch` and the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> value set to `true`.</span></span> <span data-ttu-id="e9391-118">在应用程序中，可以通过创建一个具有相同名称的 <xref:System.Diagnostics.BooleanSwitch> 来使用已配置的开关值，如下面的代码示例中所示。</span><span class="sxs-lookup"><span data-stu-id="e9391-118">Within your application, you can use the configured switch value by creating a <xref:System.Diagnostics.BooleanSwitch> with the same name, as shown in the following code example.</span></span>  
  
 [!code-cpp[Classic Switch Example#4](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Switch Example/CPP/remarks.cpp#4)]
 [!code-csharp[Classic Switch Example#4](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Switch Example/CS/remarks.cs#4)]  
  
   
  
## Examples  
 <span data-ttu-id="e9391-119">下面的示例演示如何定义一个具有四个跟踪级别的新 <xref:System.Diagnostics.Switch> 类，这些跟踪可用于跟踪调用堆栈。</span><span class="sxs-lookup"><span data-stu-id="e9391-119">The following example shows how to define a new <xref:System.Diagnostics.Switch> class with four levels of tracing that can be used to trace a call stack.</span></span> <span data-ttu-id="e9391-120">您可以使用开关来检测您的应用程序，以便在每次输入或退出该方法时进行记录。</span><span class="sxs-lookup"><span data-stu-id="e9391-120">You can use the switch to instrument your application to log each time the method is entered or exited.</span></span>  
  
 <span data-ttu-id="e9391-121">第一个示例创建用于设置交换机级别的枚举。</span><span class="sxs-lookup"><span data-stu-id="e9391-121">The first example creates the enumeration used to set the level of the switch.</span></span>  
  
 [!code-cpp[Classic Switch Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Switch Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Switch Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Switch Example/CS/source.cs#1)]
 [!code-vb[Classic Switch Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Switch Example/VB/source.vb#1)]  
  
 <span data-ttu-id="e9391-122">下面的示例创建新的开关。</span><span class="sxs-lookup"><span data-stu-id="e9391-122">The following example creates the new switch.</span></span> <span data-ttu-id="e9391-123">此代码实现 `Level` 属性以设置新开关的值。</span><span class="sxs-lookup"><span data-stu-id="e9391-123">The code implements a `Level` property to set the value of the new switch.</span></span> <span data-ttu-id="e9391-124">`Level` 调用受保护的属性 <xref:System.Diagnostics.Switch.SwitchSetting%2A> 将值分配给新的开关。</span><span class="sxs-lookup"><span data-stu-id="e9391-124">`Level` calls the protected property <xref:System.Diagnostics.Switch.SwitchSetting%2A> that assigns the value to the new switch.</span></span> <span data-ttu-id="e9391-125">此示例还实现了两个取值函数属性以获取开关的分配值。</span><span class="sxs-lookup"><span data-stu-id="e9391-125">This example also implements two assessor properties to get the assigned value of the switch.</span></span>  
  
 [!code-cpp[Classic Switch Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Switch Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Switch Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Switch Example/CS/source.cs#2)]
 [!code-vb[Classic Switch Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Switch Example/VB/source.vb#2)]  
  
 <span data-ttu-id="e9391-126">下面的示例在 `Main`中创建新的开关。</span><span class="sxs-lookup"><span data-stu-id="e9391-126">The following example creates a new switch in `Main`.</span></span> <span data-ttu-id="e9391-127">它将创建一个新的开关，并为其分配一个值。</span><span class="sxs-lookup"><span data-stu-id="e9391-127">It creates a new switch and assigns it a value.</span></span> <span data-ttu-id="e9391-128">然后，它会输出用于输入和离开方法的调试消息，具体取决于开关设置。</span><span class="sxs-lookup"><span data-stu-id="e9391-128">Then, depending on the switch settings, it outputs debugging messages for entering and leaving the method.</span></span>  
  
 [!code-cpp[Classic Switch Example#3](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Switch Example/CPP/source.cpp#3)]
 [!code-csharp[Classic Switch Example#3](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Switch Example/CS/source.cs#3)]
 [!code-vb[Classic Switch Example#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Switch Example/VB/source.vb#3)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="e9391-129">如果需要跟踪级别，或设置不同于 <see cref="T:System.Diagnostics.BooleanSwitch" />所提供的交换机级别的机制 <see cref="T:System.Diagnostics.SourceSwitch" /> 和 <see cref="T:System.Diagnostics.TraceSwitch" />，则可以从 <see cref="T:System.Diagnostics.Switch" />继承。</span><span class="sxs-lookup"><span data-stu-id="e9391-129">If you need trace levels, or mechanisms for setting switch levels different from those provided by <see cref="T:System.Diagnostics.BooleanSwitch" />, <see cref="T:System.Diagnostics.SourceSwitch" /> and <see cref="T:System.Diagnostics.TraceSwitch" />, you can inherit from <see cref="T:System.Diagnostics.Switch" />.</span></span> <span data-ttu-id="e9391-130">从此类继承时，必须实现 <see cref="P:System.Diagnostics.Switch.SwitchSetting" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="e9391-130">When inheriting from this class, you must implement the <see cref="P:System.Diagnostics.Switch.SwitchSetting" /> method.</span></span></para></block>
    <altmember cref="T:System.Diagnostics.BooleanSwitch" />
    <altmember cref="T:System.Diagnostics.TraceSwitch" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
    <related type="Article" href="https://msdn.microsoft.com/library/8ab913aa-f400-4406-9436-f45bc6e54fbe"><span data-ttu-id="e9391-131">跟踪开关</span><span class="sxs-lookup"><span data-stu-id="e9391-131">Trace Switches</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e9391-132">初始化 <see cref="T:System.Diagnostics.Switch" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="e9391-132">Initializes a new instance of the <see cref="T:System.Diagnostics.Switch" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Switch (string displayName, string description);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string displayName, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Switch.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (displayName As String, description As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Switch(System::String ^ displayName, System::String ^ description);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Switch : string * string -&gt; System.Diagnostics.Switch" Usage="new System.Diagnostics.Switch (displayName, description)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="displayName"><span data-ttu-id="e9391-133">开关的名称。</span><span class="sxs-lookup"><span data-stu-id="e9391-133">The name of the switch.</span></span></param>
        <param name="description"><span data-ttu-id="e9391-134">开关说明。</span><span class="sxs-lookup"><span data-stu-id="e9391-134">The description for the switch.</span></span></param>
        <summary><span data-ttu-id="e9391-135">初始化 <see cref="T:System.Diagnostics.Switch" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="e9391-135">Initializes a new instance of the <see cref="T:System.Diagnostics.Switch" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9391-136">创建新的 <xref:System.Diagnostics.Switch> 对象时，`displayName` 参数的值用于查找初始开关设置。</span><span class="sxs-lookup"><span data-stu-id="e9391-136">When you create a new <xref:System.Diagnostics.Switch> object, the value of the `displayName` parameter is used to find initial switch settings.</span></span> <span data-ttu-id="e9391-137">默认值为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="e9391-137">The default value is an empty string ("").</span></span>  
  
 <span data-ttu-id="e9391-138">在 XML 配置文件中，可以添加开关并设置其值、删除开关或清除以前由应用程序设置的所有开关。</span><span class="sxs-lookup"><span data-stu-id="e9391-138">Within the XML configuration file, you can add a switch and set its value, remove a switch, or clear all the switches previously set by the application.</span></span> <span data-ttu-id="e9391-139">在应用程序执行过程中，不会检测到配置文件的动态更改。</span><span class="sxs-lookup"><span data-stu-id="e9391-139">Dynamic changes to the configuration file are not detected while the application is executing.</span></span> <span data-ttu-id="e9391-140">必须停止并重新启动应用程序，然后对配置文件所做的更改才会生效。</span><span class="sxs-lookup"><span data-stu-id="e9391-140">You must stop and restart an application before changes to the configuration file take effect.</span></span> <span data-ttu-id="e9391-141">配置文件的格式应类似于以下示例：</span><span class="sxs-lookup"><span data-stu-id="e9391-141">The configuration file should be formatted like the following example:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="10" />  
      <add name="myNewSwitch" value="20" />  
      <remove name="mySwitch" />  
      <clear/>  
    </switches>  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="e9391-142">若要设置开关的值，请在构造函数中设置 <see cref="P:System.Diagnostics.Switch.SwitchSetting" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="e9391-142">To set the value of the switch, set the <see cref="P:System.Diagnostics.Switch.SwitchSetting" /> property in the constructor.</span></span></para></block>
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.SourceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Switch (string displayName, string description, string defaultSwitchValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string displayName, string description, string defaultSwitchValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Switch.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (displayName As String, description As String, defaultSwitchValue As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Switch(System::String ^ displayName, System::String ^ description, System::String ^ defaultSwitchValue);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Switch : string * string * string -&gt; System.Diagnostics.Switch" Usage="new System.Diagnostics.Switch (displayName, description, defaultSwitchValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="description" Type="System.String" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="defaultSwitchValue" Type="System.String" Index="2" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="displayName"><span data-ttu-id="e9391-143">开关的名称。</span><span class="sxs-lookup"><span data-stu-id="e9391-143">The name of the switch.</span></span></param>
        <param name="description"><span data-ttu-id="e9391-144">切换描述。</span><span class="sxs-lookup"><span data-stu-id="e9391-144">The description of the switch.</span></span></param>
        <param name="defaultSwitchValue"><span data-ttu-id="e9391-145">开关的默认值。</span><span class="sxs-lookup"><span data-stu-id="e9391-145">The default value for the switch.</span></span></param>
        <summary><span data-ttu-id="e9391-146">通过指定开关的显示名称、说明和默认值来初始化 <see cref="T:System.Diagnostics.Switch" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="e9391-146">Initializes a new instance of the <see cref="T:System.Diagnostics.Switch" /> class, specifying the display name, description, and default value for the switch.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9391-147">`displayName` 参数用于设置 <xref:System.Diagnostics.Switch.DisplayName%2A> 属性的值，而 `description` 参数用于设置 <xref:System.Diagnostics.Switch.Description%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="e9391-147">The `displayName` parameter is used to set the value of the <xref:System.Diagnostics.Switch.DisplayName%2A> property, and the `description` parameter is use to set the value of the <xref:System.Diagnostics.Switch.Description%2A> property.</span></span> <span data-ttu-id="e9391-148">如果未通过代码或配置文件属性设置 <xref:System.Diagnostics.Switch.Value%2A> 属性，则 `defaultSwitchValue` 参数是开关的值。</span><span class="sxs-lookup"><span data-stu-id="e9391-148">The `defaultSwitchValue` parameter is the value for the switch if the <xref:System.Diagnostics.Switch.Value%2A> property is not set by code or by the configuration file attribute.</span></span> <span data-ttu-id="e9391-149">有关其他信息，请参阅 <xref:System.Diagnostics.Switch.%23ctor%28System.String%2CSystem.String%29> 重载。</span><span class="sxs-lookup"><span data-stu-id="e9391-149">See the <xref:System.Diagnostics.Switch.%23ctor%28System.String%2CSystem.String%29> overload for additional information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringDictionary Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Switch.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringDictionary ^ Attributes { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Collections.Specialized.StringDictionary" Usage="System.Diagnostics.Switch.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e9391-150">获取在应用程序配置文件中定义的自定义开关特性。</span><span class="sxs-lookup"><span data-stu-id="e9391-150">Gets the custom switch attributes defined in the application configuration file.</span></span></summary>
        <value><span data-ttu-id="e9391-151">一个 <see cref="T:System.Collections.Specialized.StringDictionary" />，包含跟踪开关的自定义特性（不区分大小写）。</span><span class="sxs-lookup"><span data-stu-id="e9391-151">A <see cref="T:System.Collections.Specialized.StringDictionary" /> containing the case-insensitive custom attributes for the trace switch.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9391-152"><xref:System.Diagnostics.Switch.Attributes%2A> 属性标识应用程序的配置文件中引用的自定义属性。</span><span class="sxs-lookup"><span data-stu-id="e9391-152">The <xref:System.Diagnostics.Switch.Attributes%2A> property identifies the custom attributes referenced in the application's configuration file.</span></span> <span data-ttu-id="e9391-153">未引用的自定义特性不会被枚举。</span><span class="sxs-lookup"><span data-stu-id="e9391-153">Unreferenced custom attributes are not enumerated.</span></span> <span data-ttu-id="e9391-154">从 <xref:System.Diagnostics.Switch> 类继承的类可以通过重写 <xref:System.Diagnostics.Switch.GetSupportedAttributes%2A> 方法并返回自定义特性名称的字符串数组，来添加自定义特性。</span><span class="sxs-lookup"><span data-stu-id="e9391-154">Classes that inherit from the <xref:System.Diagnostics.Switch> class can add custom attributes by overriding the <xref:System.Diagnostics.Switch.GetSupportedAttributes%2A> method and returning a string array of custom attribute names.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9391-155">下面的代码示例演示如何为自定义开关显示无法识别的特性。</span><span class="sxs-lookup"><span data-stu-id="e9391-155">The following code sample shows how to display the unrecognized attributes for a custom switch.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceSource#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/CS/program.cs#15)]
 [!code-vb[System.Diagnostics.TraceSource#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/VB/program.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Switch.Description" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="System.Diagnostics.Switch.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e9391-156">获取开关说明。</span><span class="sxs-lookup"><span data-stu-id="e9391-156">Gets a description of the switch.</span></span></summary>
        <value><span data-ttu-id="e9391-157">切换描述。</span><span class="sxs-lookup"><span data-stu-id="e9391-157">The description of the switch.</span></span> <span data-ttu-id="e9391-158">默认值为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="e9391-158">The default value is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9391-159">此属性应指示开关的功能；例如，“为目录观察程序组件启用跟踪”。</span><span class="sxs-lookup"><span data-stu-id="e9391-159">This property should indicate the function of the switch; for example, "Enables tracing for a directory watcher component."</span></span> <span data-ttu-id="e9391-160">此值由 `descriptor` 构造函数中的 <xref:System.Diagnostics.Switch.%23ctor%2A> 参数设置。</span><span class="sxs-lookup"><span data-stu-id="e9391-160">The value is set by the `descriptor` parameter in the <xref:System.Diagnostics.Switch.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Switch.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.Diagnostics.Switch.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e9391-161">获取用于标识该开关的名称。</span><span class="sxs-lookup"><span data-stu-id="e9391-161">Gets a name used to identify the switch.</span></span></summary>
        <value><span data-ttu-id="e9391-162">用于标识该开关的名称。</span><span class="sxs-lookup"><span data-stu-id="e9391-162">The name used to identify the switch.</span></span> <span data-ttu-id="e9391-163">默认值为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="e9391-163">The default value is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9391-164">创建新的 <xref:System.Diagnostics.Switch> 对象时，<xref:System.Diagnostics.Switch.DisplayName%2A> 将查找初始交换机设置。</span><span class="sxs-lookup"><span data-stu-id="e9391-164">When you create a new <xref:System.Diagnostics.Switch> object, the <xref:System.Diagnostics.Switch.DisplayName%2A> finds initial switch settings.</span></span> <span data-ttu-id="e9391-165">有关详细信息，请参阅 Visual Studio 文档中的 <xref:System.Diagnostics.Switch.%23ctor%2A> 构造函数和[如何：创建、初始化和配置跟踪开关](/dotnet/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches)。</span><span class="sxs-lookup"><span data-stu-id="e9391-165">For more information, see the <xref:System.Diagnostics.Switch.%23ctor%2A> constructor and [How to: Create, Initialize and Configure Trace Switches](/dotnet/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches) in the Visual Studio documentation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9391-166">下面的代码示例显示了跟踪源正在使用的开关的显示名称。</span><span class="sxs-lookup"><span data-stu-id="e9391-166">The following code example displays the display name for the switch in use by a trace source.</span></span>  <span data-ttu-id="e9391-167">此代码示例摘自一个更大的示例，该示例可在 <xref:System.Diagnostics.TraceSource> 类摘要中找到。</span><span class="sxs-lookup"><span data-stu-id="e9391-167">This code example is part of a larger example that can be found in the <xref:System.Diagnostics.TraceSource> class summary.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceSource#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/CS/program.cs#10)]
 [!code-vb[System.Diagnostics.TraceSource#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/VB/program.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected virtual string[] GetSupportedAttributes ();" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string[] GetSupportedAttributes() cil managed" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Switch.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSupportedAttributes () As String()" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="F#" Value="abstract member GetSupportedAttributes : unit -&gt; string[]&#xA;override this.GetSupportedAttributes : unit -&gt; string[]" Usage="switch.GetSupportedAttributes " />
      <MemberSignature Language="C#" Value="protected internal virtual string[] GetSupportedAttributes ();" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string[] GetSupportedAttributes() cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetSupportedAttributes () As String()" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e9391-168">获取开关支持的自定义特性。</span><span class="sxs-lookup"><span data-stu-id="e9391-168">Gets the custom attributes supported by the switch.</span></span></summary>
        <returns><span data-ttu-id="e9391-169">一个字符串数组，包含开关所支持的自定义特性的名称；如果该开关不支持任何自定义特性，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e9391-169">A string array that contains the names of the custom attributes supported by the switch, or <see langword="null" /> if there no custom attributes are supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9391-170"><xref:System.Diagnostics.Switch.GetSupportedAttributes%2A> 方法的默认实现将返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="e9391-170">The default implementation for the <xref:System.Diagnostics.Switch.GetSupportedAttributes%2A> method returns `null`.</span></span> <span data-ttu-id="e9391-171">如果在配置文件中添加了一个开关并且指定了未包含在 <xref:System.Diagnostics.Switch.GetSupportedAttributes%2A>返回的字符串数组中的自定义特性，则在加载该开关时会引发 <xref:System.Configuration.ConfigurationException>。</span><span class="sxs-lookup"><span data-stu-id="e9391-171">If a switch is added in a configuration file and custom attributes are specified that are not included in the string array returned by <xref:System.Diagnostics.Switch.GetSupportedAttributes%2A>, a <xref:System.Configuration.ConfigurationException> is thrown when the switch is loaded.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9391-172">下面的代码示例演示了如何重写自定义开关的 <xref:System.Diagnostics.Switch.GetSupportedAttributes%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="e9391-172">The following code sample shows an override of the <xref:System.Diagnostics.Switch.GetSupportedAttributes%2A> method for a custom switch.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceSource#34](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/CS/program.cs#34)]
 [!code-vb[System.Diagnostics.TraceSource#34](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/VB/program.vb#34)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="e9391-173">从 <see cref="T:System.Diagnostics.Switch" /> 类或派生类继承时，可以重写 <see cref="M:System.Diagnostics.Switch.GetSupportedAttributes" /> 方法以为类提供自定义特性。</span><span class="sxs-lookup"><span data-stu-id="e9391-173">When inheriting from the <see cref="T:System.Diagnostics.Switch" /> class or a derived class, you can override the <see cref="M:System.Diagnostics.Switch.GetSupportedAttributes" /> method to provide custom attributes for your class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSwitchSettingChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSwitchSettingChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSwitchSettingChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Switch.OnSwitchSettingChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSwitchSettingChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSwitchSettingChanged();" />
      <MemberSignature Language="F#" Value="abstract member OnSwitchSettingChanged : unit -&gt; unit&#xA;override this.OnSwitchSettingChanged : unit -&gt; unit" Usage="switch.OnSwitchSettingChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e9391-174">当 <see cref="P:System.Diagnostics.Switch.SwitchSetting" /> 属性更改时调用。</span><span class="sxs-lookup"><span data-stu-id="e9391-174">Invoked when the <see cref="P:System.Diagnostics.Switch.SwitchSetting" /> property is changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9391-175">首次从配置文件中读取 <xref:System.Diagnostics.Switch.SwitchSetting%2A> 值时，将调用 <xref:System.Diagnostics.Switch.OnSwitchSettingChanged%2A>，并在每次更改开关的值时再次调用。</span><span class="sxs-lookup"><span data-stu-id="e9391-175"><xref:System.Diagnostics.Switch.OnSwitchSettingChanged%2A> is invoked the first time a switch reads the <xref:System.Diagnostics.Switch.SwitchSetting%2A> value from the configuration file and is invoked again each time the switch's value is changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnValueChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnValueChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValueChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Switch.OnValueChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValueChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValueChanged();" />
      <MemberSignature Language="F#" Value="abstract member OnValueChanged : unit -&gt; unit&#xA;override this.OnValueChanged : unit -&gt; unit" Usage="switch.OnValueChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e9391-176">当 <see cref="P:System.Diagnostics.Switch.Value" /> 属性更改时调用。</span><span class="sxs-lookup"><span data-stu-id="e9391-176">Invoked when the <see cref="P:System.Diagnostics.Switch.Value" /> property is changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9391-177">默认实现会将 <xref:System.Diagnostics.Switch.Value%2A> 属性的新值分析为一个整数值，该值将用于设置 <xref:System.Diagnostics.Switch.SwitchSetting%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="e9391-177">The default implementation parses the new value of the <xref:System.Diagnostics.Switch.Value%2A> property to an integer value which it uses to set the <xref:System.Diagnostics.Switch.SwitchSetting%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="e9391-178">应重写此方法，并使用转换设置开关的适当 <see cref="P:System.Diagnostics.Switch.SwitchSetting" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e9391-178">You should override this method and use a conversion that sets the appropriate <see cref="P:System.Diagnostics.Switch.SwitchSetting" /> value for your switch.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="SwitchSetting">
      <MemberSignature Language="C#" Value="protected int SwitchSetting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SwitchSetting" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Switch.SwitchSetting" />
      <MemberSignature Language="VB.NET" Value="Protected Property SwitchSetting As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int SwitchSetting { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SwitchSetting : int with get, set" Usage="System.Diagnostics.Switch.SwitchSetting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e9391-179">获取或设置此开关的当前设置。</span><span class="sxs-lookup"><span data-stu-id="e9391-179">Gets or sets the current setting for this switch.</span></span></summary>
        <value><span data-ttu-id="e9391-180">此开关的当前设置。</span><span class="sxs-lookup"><span data-stu-id="e9391-180">The current setting for this switch.</span></span> <span data-ttu-id="e9391-181">默认值为 0。</span><span class="sxs-lookup"><span data-stu-id="e9391-181">The default is zero.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="protected string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Switch.Value" />
      <MemberSignature Language="VB.NET" Value="Protected Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Diagnostics.Switch.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e9391-182">获取或设置开关的值。</span><span class="sxs-lookup"><span data-stu-id="e9391-182">Gets or sets the value of the switch.</span></span></summary>
        <value><span data-ttu-id="e9391-183">一个表示开关的值的字符串。</span><span class="sxs-lookup"><span data-stu-id="e9391-183">A string representing the value of the switch.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9391-184">当 <xref:System.Diagnostics.Switch.Value%2A> 属性的值发生更改时，将调用 <xref:System.Diagnostics.Switch.OnValueChanged%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="e9391-184">The <xref:System.Diagnostics.Switch.OnValueChanged%2A> method is called when the value of the <xref:System.Diagnostics.Switch.Value%2A> property is changed.</span></span> <span data-ttu-id="e9391-185"><xref:System.Diagnostics.Switch.OnValueChanged%2A> 方法分析此属性的值，并将其转换为整数值，然后使用该值设置 <xref:System.Diagnostics.Switch.SwitchSetting%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="e9391-185">The <xref:System.Diagnostics.Switch.OnValueChanged%2A> method parses the value of this property and converts it to an integer value, which is then used to set the <xref:System.Diagnostics.Switch.SwitchSetting%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="e9391-186">该值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e9391-186">The value is <see langword="null" />.</span></span>  
  
<span data-ttu-id="e9391-187">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e9391-187">-or-</span></span> 
<span data-ttu-id="e9391-188">该值不是仅由一个可选负号后跟一系列从 0 到 9 的数字组成的。</span><span class="sxs-lookup"><span data-stu-id="e9391-188">The value does not consist solely of an optional negative sign followed by a sequence of digits ranging from 0 to 9.</span></span>  
  
<span data-ttu-id="e9391-189">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e9391-189">-or-</span></span> 
<span data-ttu-id="e9391-190">该值表示小于 <see cref="F:System.Int32.MinValue" /> 或大于 <see cref="F:System.Int32.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="e9391-190">The value represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="e9391-191">应该重写 <see cref="M:System.Diagnostics.Switch.OnValueChanged" /> 方法，并提供一个转换操作，用于为你的开关设置适当的 <see cref="P:System.Diagnostics.Switch.SwitchSetting" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e9391-191">You should override the <see cref="M:System.Diagnostics.Switch.OnValueChanged" /> method and provide a conversion operation that sets the appropriate <see cref="P:System.Diagnostics.Switch.SwitchSetting" /> value for your switch.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>
