<Type Name="TextWriterTraceListener" FullName="System.Diagnostics.TextWriterTraceListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4c5a7c98c12947315491694a5721f4e939eb9119" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89820215" /></Metadata><TypeSignature Language="C#" Value="public class TextWriterTraceListener : System.Diagnostics.TraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextWriterTraceListener extends System.Diagnostics.TraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class TextWriterTraceListener&#xA;Inherits TraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextWriterTraceListener : System::Diagnostics::TraceListener" />
  <TypeSignature Language="F#" Value="type TextWriterTraceListener = class&#xA;    inherit TraceListener" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Diagnostics.TextWriterTraceListener" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Diagnostics.TraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2f8f5-101">将跟踪或调试输出定向到 <see cref="T:System.IO.TextWriter" /> 或 <see cref="T:System.IO.Stream" />，如 <see cref="T:System.IO.FileStream" />。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-101">Directs tracing or debugging output to a <see cref="T:System.IO.TextWriter" /> or to a <see cref="T:System.IO.Stream" />, such as <see cref="T:System.IO.FileStream" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f8f5-102"><xref:System.Diagnostics.TextWriterTraceListener>类提供 <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> 用于获取或设置接收跟踪或调试输出的文本编写器的属性。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-102">The <xref:System.Diagnostics.TextWriterTraceListener> class provides the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> property to get or set the text writer that receives the tracing or debugging output.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2f8f5-103">此类型实现 <xref:System.IDisposable> 接口。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-103">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="2f8f5-104">在使用完类型后，您应直接或间接释放类型。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-104">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="2f8f5-105">若要直接释放类型，请在 `try`/`catch` 块中调用其 <xref:System.IDisposable.Dispose%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-105">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="2f8f5-106">若要间接释放类型，请使用 `using`（在 C# 中）或 `Using`（在 Visual Basic 中）等语言构造。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-106">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="2f8f5-107">有关详细信息，请参阅 <xref:System.IDisposable> 接口主题中的“使用实现 IDisposable 的对象”一节。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-107">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="2f8f5-108">此类还向提供方法 <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> ， <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> 使其不再接收跟踪或调试输出，将发送到的 <xref:System.Diagnostics.TextWriterTraceListener.Flush%2A> 输出缓冲区， <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> 以及发送到 <xref:System.Diagnostics.TextWriterTraceListener.Write%2A> 的消息 <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> 。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-108">This class also provides methods to <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> so that it no longer receives tracing or debugging output, to <xref:System.Diagnostics.TextWriterTraceListener.Flush%2A> the output buffer for the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>, and to <xref:System.Diagnostics.TextWriterTraceListener.Write%2A> a message to the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>.</span></span>  
  
 <span data-ttu-id="2f8f5-109">您必须启用跟踪或调试才能使用跟踪侦听器。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-109">You must enable tracing or debugging to use a trace listener.</span></span> <span data-ttu-id="2f8f5-110">以下语法是编译器特定的。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-110">The following syntax is compiler specific.</span></span> <span data-ttu-id="2f8f5-111">如果使用 c # 或 Visual Basic 以外的编译器，请参阅编译器的文档。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-111">If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</span></span>  
  
-   <span data-ttu-id="2f8f5-112">若要在 c # 中启用调试，请在 `/d:DEBUG` 编译代码时将标志添加到编译器命令行，或者将添加 `#define DEBUG` 到文件的顶部。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-112">To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or you can add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="2f8f5-113">在 Visual Basic 中，将 `/d:DEBUG=True` 标志添加到编译器命令行。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-113">In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.</span></span>  
  
-   <span data-ttu-id="2f8f5-114">若要在 c # 中启用跟踪，请在 `/d:TRACE` 编译代码时将标志添加到编译器命令行，或将添加 `#define TRACE` 到文件的顶部。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-114">To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="2f8f5-115">在 Visual Basic 中，将 `/d:TRACE=True` 标志添加到编译器命令行。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-115">In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.</span></span>  
  
 <span data-ttu-id="2f8f5-116">若要添加跟踪侦听器，请编辑与应用程序名称对应的配置文件。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-116">To add a trace listener, edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="2f8f5-117">在此文件中，您可以添加一个侦听器，设置其类型并设置其参数，删除侦听器，或者清除之前由应用程序设置的所有侦听器。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-117">Within this file, you can add a listener, set its type and set its parameter, remove a listener, or clear all the listeners previously set by the application.</span></span> <span data-ttu-id="2f8f5-118">配置文件的格式应与下面的示例类似。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-118">The configuration file should be formatted like the following example.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="4">  
      <listeners>  
        <add name="myListener"   
          type="System.Diagnostics.TextWriterTraceListener"   
          initializeData="TextWriterOutput.log" />  
        <remove name="Default" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
```  
  
> [!NOTE]
>  <span data-ttu-id="2f8f5-119">如果尝试写入正在使用或不可用的文件，则该文件名将自动以 GUID 为前缀。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-119">If an attempt is made to write to a file that is in use or unavailable, the file name is automatically prefixed by a GUID.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f8f5-120">下面的示例实现 <xref:System.Diagnostics.TextWriterTraceListener> 类的实例，该实例使用 <xref:System.IO.StreamWriter> 调用的 `myOutputWriter` 来写入名为的文件 `TestFile.txt` 。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-120">The following example implements an instance of the <xref:System.Diagnostics.TextWriterTraceListener> class that uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="2f8f5-121">首先，该示例将创建一个输出文件。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-121">First the example creates a file for output.</span></span> <span data-ttu-id="2f8f5-122">然后 <xref:System.IO.StreamWriter> ，它为第一个文本编写器创建，并为其分配输出文件，并将其添加到中 <xref:System.Diagnostics.Trace.Listeners%2A> 。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-122">Then it creates the <xref:System.IO.StreamWriter> for the first text writer, assigns it the output file, and adds it to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="2f8f5-123">然后，代码将一行文本输出到该文件。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-123">Then, the code outputs one line of text to the file.</span></span> <span data-ttu-id="2f8f5-124">最后，此示例刷新输出缓冲区。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-124">Finally, the example flushes the output buffer.</span></span>  
  
 <span data-ttu-id="2f8f5-125">运行此示例后，您可以打开该 `TestFile.txt` 文件以查看输出。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-125">After running this sample, you can open the `TestFile.txt` file to see the output.</span></span>  
  
 [!code-cpp[Classic TextWriterTraceListener Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextWriterTraceListener Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener Example/CS/source.cs#1)]
 [!code-vb[Classic TextWriterTraceListener Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
    <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
    <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
    <altmember cref="T:System.IO.Stream" />
    <altmember cref="T:System.IO.TextWriter" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f8f5-126">初始化 <see cref="T:System.Diagnostics.TextWriterTraceListener" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-126">Initializes a new instance of the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextWriterTraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextWriterTraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f8f5-127">用 <see cref="T:System.IO.TextWriter" /> 作为输出接收者来初始化 <see cref="T:System.Diagnostics.TextWriterTraceListener" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-127">Initializes a new instance of the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> class with <see cref="T:System.IO.TextWriter" /> as the output recipient.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f8f5-128">此构造函数使用 <xref:System.IO.TextWriter> 流作为跟踪或调试输出的接收方。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-128">This constructor uses the <xref:System.IO.TextWriter> stream as the recipient of the tracing or debugging output.</span></span> <span data-ttu-id="2f8f5-129">其 <xref:System.Diagnostics.TraceListener.Name%2A> 属性初始化为空字符串 ( "" 或 <xref:System.String.Empty?displayProperty=nameWithType>) 。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-129">Its <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string ("", or <xref:System.String.Empty?displayProperty=nameWithType>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f8f5-130">下面的示例 <xref:System.Diagnostics.TextWriterTraceListener> 使用 <xref:System.Diagnostics.TextWriterTraceListener.%23ctor> 构造函数创建一个。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-130">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor> constructor.</span></span> <span data-ttu-id="2f8f5-131">它将 <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> 属性设置为控制台输出，然后将添加 <xref:System.Diagnostics.TextWriterTraceListener> 到 <xref:System.Diagnostics.TraceListenerCollection> 。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-131">It sets the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> property to console output, and then adds the <xref:System.Diagnostics.TextWriterTraceListener> to the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="2f8f5-132">它在两个段中写入一条消息，然后关闭 <xref:System.Diagnostics.TextWriterTraceListener> 。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-132">It writes a message in two segments, and then closes the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 [!code-cpp[Classic TextWriterTraceListener.WriteLine Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.WriteLine Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextWriterTraceListener.WriteLine Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.WriteLine Example/CS/source.cs#1)]
 [!code-vb[Classic TextWriterTraceListener.WriteLine Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.WriteLine Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextWriterTraceListener (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextWriterTraceListener(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TextWriterTraceListener : System.IO.Stream -&gt; System.Diagnostics.TextWriterTraceListener" Usage="new System.Diagnostics.TextWriterTraceListener stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="2f8f5-133">表示 <see cref="T:System.IO.Stream" /> 写入的流的 <see cref="T:System.Diagnostics.TextWriterTraceListener" />。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-133">A <see cref="T:System.IO.Stream" /> that represents the stream the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> writes to.</span></span></param>
        <summary><span data-ttu-id="2f8f5-134">用流作为调试和跟踪输出的接收者来初始化 <see cref="T:System.Diagnostics.TextWriterTraceListener" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-134">Initializes a new instance of the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> class, using the stream as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f8f5-135">此构造函数将 <xref:System.Diagnostics.TraceListener.Name%2A> 属性初始化为空字符串 ( "" ) 。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-135">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f8f5-136">下面的代码示例 <xref:System.Diagnostics.TextWriterTraceListener> 使用 <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.Stream%29> 构造函数创建一个，并将其添加到中 <xref:System.Diagnostics.TraceListenerCollection> 。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-136">The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.Stream%29> constructor and adds it to the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="2f8f5-137">然后，该示例将两条消息写入到此中 <xref:System.Diagnostics.TextWriterTraceListener> ，并向中的所有对象写入一条消息 <xref:System.Diagnostics.TraceListener> <xref:System.Diagnostics.TraceListenerCollection> 。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-137">The example then writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, and writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="2f8f5-138">最后，它会刷新并关闭 <xref:System.Diagnostics.TextWriterTraceListener> 。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-138">Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 [!code-csharp[System.Diagnostics.TextWriterTraceListener.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/CS/twtlconstream.cs#1)]
 [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/VB/twtlconstream.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2f8f5-139">此流为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-139">The stream is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextWriterTraceListener (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextWriterTraceListener(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TextWriterTraceListener : System.IO.TextWriter -&gt; System.Diagnostics.TextWriterTraceListener" Usage="new System.Diagnostics.TextWriterTraceListener writer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="2f8f5-140">接收来自 <see cref="T:System.IO.TextWriter" /> 的输出的 <see cref="T:System.Diagnostics.TextWriterTraceListener" />。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-140">A <see cref="T:System.IO.TextWriter" /> that receives the output from the <see cref="T:System.Diagnostics.TextWriterTraceListener" />.</span></span></param>
        <summary><span data-ttu-id="2f8f5-141">用指定的编写器作为跟踪或调试输出的接收者来初始化 <see cref="T:System.Diagnostics.TextWriterTraceListener" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-141">Initializes a new instance of the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> class using the specified writer as recipient of the tracing or debugging output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f8f5-142">此构造函数将 <xref:System.Diagnostics.TraceListener.Name%2A> 属性初始化为空字符串 ( "" ) 。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-142">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f8f5-143">下面的代码示例 <xref:System.Diagnostics.TextWriterTraceListener> 使用 <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.TextWriter%29> 构造函数创建一个。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-143">The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.TextWriter%29> constructor.</span></span> <span data-ttu-id="2f8f5-144">该示例创建一个 <xref:System.IO.StreamWriter> ，然后在 <xref:System.IO.StreamWriter> 创建时引用， <xref:System.Diagnostics.TextWriterTraceListener> 然后将其添加到中 <xref:System.Diagnostics.TraceListenerCollection> 。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-144">The example creates a <xref:System.IO.StreamWriter>, then references the <xref:System.IO.StreamWriter> when it creates the <xref:System.Diagnostics.TextWriterTraceListener>, which it then adds to the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="2f8f5-145">该示例向中的所有对象写入一条消息 <xref:System.Diagnostics.TraceListener> <xref:System.Diagnostics.TraceListenerCollection> ，然后关闭此 <xref:System.Diagnostics.TextWriterTraceListener> 。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-145">The example writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>, then closes this <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 [!code-cpp[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/CS/source.cs#1)]
 [!code-vb[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2f8f5-146">编写器为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-146">The writer is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextWriterTraceListener (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextWriterTraceListener(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TextWriterTraceListener : string -&gt; System.Diagnostics.TextWriterTraceListener" Usage="new System.Diagnostics.TextWriterTraceListener fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="2f8f5-147"><see cref="T:System.Diagnostics.TextWriterTraceListener" /> 写入的文件名。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-147">The name of the file the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> writes to.</span></span></param>
        <summary><span data-ttu-id="2f8f5-148">用文件作为调试和跟踪输出的接收者来初始化 <see cref="T:System.Diagnostics.TextWriterTraceListener" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-148">Initializes a new instance of the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> class, using the file as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f8f5-149">此构造函数将 <xref:System.Diagnostics.TraceListener.Name%2A> 属性初始化为空字符串 ( "" ) 。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-149">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f8f5-150">下面的代码示例 <xref:System.Diagnostics.TextWriterTraceListener> 使用 <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.String%29> 构造函数创建一个，然后将其添加到中 <xref:System.Diagnostics.TraceListenerCollection> 。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-150">The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.String%29> constructor, then adds it to the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="2f8f5-151">该示例向此写入两条消息 <xref:System.Diagnostics.TextWriterTraceListener> ，然后将消息写入 <xref:System.Diagnostics.TraceListener> 中的所有对象 <xref:System.Diagnostics.TraceListenerCollection> 。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-151">The example writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, then writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="2f8f5-152">最后，它会刷新并关闭 <xref:System.Diagnostics.TextWriterTraceListener> 。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-152">Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 [!code-csharp[System.Diagnostics.TextWriterTraceListener.Ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/CS/twtlconstring.cs#3)]
 [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/VB/twtlconstring.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2f8f5-153">该文件为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-153">The file is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextWriterTraceListener (System.IO.Stream stream, string? name);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stream As Stream, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextWriterTraceListener(System::IO::Stream ^ stream, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TextWriterTraceListener : System.IO.Stream * string -&gt; System.Diagnostics.TextWriterTraceListener" Usage="new System.Diagnostics.TextWriterTraceListener (stream, name)" />
      <MemberSignature Language="C#" Value="public TextWriterTraceListener (System.IO.Stream stream, string name);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="2f8f5-154">表示 <see cref="T:System.IO.Stream" /> 写入的流的 <see cref="T:System.Diagnostics.TextWriterTraceListener" />。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-154">A <see cref="T:System.IO.Stream" /> that represents the stream the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> writes to.</span></span></param>
        <param name="name"><span data-ttu-id="2f8f5-155">新实例的名称。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-155">The name of the new instance.</span></span></param>
        <summary><span data-ttu-id="2f8f5-156">用流作为调试和跟踪输出的接收者来初始化具有指定名称的 <see cref="T:System.Diagnostics.TextWriterTraceListener" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-156">Initializes a new instance of the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> class with the specified name, using the stream as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f8f5-157">如果参数为，则此构造函数将 <xref:System.Diagnostics.TraceListener.Name%2A> 属性初始化为 `name` 参数或空字符串 ( "" ) `name` `null` 。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-157">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the `name` parameter or to an empty string (""), if the `name` parameter is `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f8f5-158">下面的代码示例 <xref:System.Diagnostics.TextWriterTraceListener> 使用 <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.Stream%2CSystem.String%29> 构造函数创建一个，并将其添加到中 <xref:System.Diagnostics.TraceListenerCollection> 。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-158">The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.Stream%2CSystem.String%29> constructor and adds it to the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="2f8f5-159">然后，该示例向此写入两条消息 <xref:System.Diagnostics.TextWriterTraceListener> ，并向中的所有对象写入一条消息 <xref:System.Diagnostics.TraceListener> <xref:System.Diagnostics.TraceListenerCollection> 。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-159">The example then writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener> and writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="2f8f5-160">最后，它会刷新并关闭 <xref:System.Diagnostics.TextWriterTraceListener> 。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-160">Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 [!code-csharp[System.Diagnostics.TextWriterTraceListener.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/CS/twtlconstreamname.cs#2)]
 [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/VB/twtlconstreamname.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2f8f5-161">此流为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-161">The stream is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextWriterTraceListener (System.IO.TextWriter writer, string? name);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextWriterTraceListener(System::IO::TextWriter ^ writer, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TextWriterTraceListener : System.IO.TextWriter * string -&gt; System.Diagnostics.TextWriterTraceListener" Usage="new System.Diagnostics.TextWriterTraceListener (writer, name)" />
      <MemberSignature Language="C#" Value="public TextWriterTraceListener (System.IO.TextWriter writer, string name);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="2f8f5-162">接收来自 <see cref="T:System.IO.TextWriter" /> 的输出的 <see cref="T:System.Diagnostics.TextWriterTraceListener" />。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-162">A <see cref="T:System.IO.TextWriter" /> that receives the output from the <see cref="T:System.Diagnostics.TextWriterTraceListener" />.</span></span></param>
        <param name="name"><span data-ttu-id="2f8f5-163">新实例的名称。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-163">The name of the new instance.</span></span></param>
        <summary><span data-ttu-id="2f8f5-164">用指定的编写器作为跟踪或调试输出的接收者来初始化具有指定名称的 <see cref="T:System.Diagnostics.TextWriterTraceListener" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-164">Initializes a new instance of the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> class with the specified name, using the specified writer as recipient of the tracing or debugging output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f8f5-165">下面的代码示例 <xref:System.Diagnostics.TextWriterTraceListener> 使用 <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.TextWriter%2CSystem.String%29> 构造函数创建一个。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-165">The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.TextWriter%2CSystem.String%29> constructor.</span></span> <span data-ttu-id="2f8f5-166">该示例创建一个 <xref:System.IO.StreamWriter> ，然后在 <xref:System.IO.StreamWriter> 创建时引用， <xref:System.Diagnostics.TextWriterTraceListener> 然后将其添加到中 <xref:System.Diagnostics.TraceListenerCollection> 。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-166">The example creates a <xref:System.IO.StreamWriter>, then references the <xref:System.IO.StreamWriter> when it creates the <xref:System.Diagnostics.TextWriterTraceListener>, which it then adds to the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="2f8f5-167">该示例向此写入两条消息 <xref:System.Diagnostics.TextWriterTraceListener> ，然后将消息写入 <xref:System.Diagnostics.TraceListener> 中的所有对象 <xref:System.Diagnostics.TraceListenerCollection> 。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-167">The example writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, then writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="2f8f5-168">最后，它会刷新并关闭 <xref:System.Diagnostics.TextWriterTraceListener> 。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-168">Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 [!code-csharp[System.Diagnostics.TextWriterTraceListener.Ctor#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/CS/twtlconwritername.cs#5)]
 [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/VB/twtlconwritername.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2f8f5-169">编写器为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-169">The writer is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextWriterTraceListener (string fileName, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextWriterTraceListener(System::String ^ fileName, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TextWriterTraceListener : string * string -&gt; System.Diagnostics.TextWriterTraceListener" Usage="new System.Diagnostics.TextWriterTraceListener (fileName, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="2f8f5-170"><see cref="T:System.Diagnostics.TextWriterTraceListener" /> 写入的文件名。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-170">The name of the file the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> writes to.</span></span></param>
        <param name="name"><span data-ttu-id="2f8f5-171">新实例的名称。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-171">The name of the new instance.</span></span></param>
        <summary><span data-ttu-id="2f8f5-172">用文件作为调试和跟踪输出的接收者来初始化具有指定名称的 <see cref="T:System.Diagnostics.TextWriterTraceListener" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-172">Initializes a new instance of the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> class with the specified name, using the file as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f8f5-173">如果参数为，则此构造函数将 <xref:System.Diagnostics.TraceListener.Name%2A> 属性初始化为 `name` 参数或空字符串 ( "" ) `name` `null` 。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-173">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the `name` parameter or to an empty string (""), if the `name` parameter is `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f8f5-174">下面的代码示例 <xref:System.Diagnostics.TextWriterTraceListener> 使用 <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.String%2CSystem.String%29> 构造函数创建一个，然后将其添加到中 <xref:System.Diagnostics.TraceListenerCollection> 。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-174">The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.String%2CSystem.String%29> constructor, then adds it to the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="2f8f5-175">该示例向此写入两条消息 <xref:System.Diagnostics.TextWriterTraceListener> ，然后将消息写入 <xref:System.Diagnostics.TraceListener> 中的所有对象 <xref:System.Diagnostics.TraceListenerCollection> 。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-175">The example writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, then writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="2f8f5-176">最后，它会刷新并关闭 <xref:System.Diagnostics.TextWriterTraceListener> 。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-176">Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 [!code-csharp[System.Diagnostics.TextWriterTraceListener.Ctor#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/CS/twtlconstringname.cs#4)]
 [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/VB/twtlconstringname.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2f8f5-177">此流为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-177">The stream is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="textWriterTraceListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f8f5-178">关闭 <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" />，以使其不再接收跟踪或调试输出。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-178">Closes the <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /> so that it no longer receives tracing or debugging output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f8f5-179"><xref:System.Diagnostics.TextWriterTraceListener.Write%2A>调用后，调用或 <xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A> 方法 <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> 会自动重新打开流。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-179">Calling a <xref:System.Diagnostics.TextWriterTraceListener.Write%2A> or <xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A> method after calling <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> automatically reopens the stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f8f5-180">下面的示例实现一个 <xref:System.Diagnostics.TextWriterTraceListener> 名为的 `myTextListener` ，它使用调用的将 <xref:System.IO.StreamWriter> `myOutputWriter` 写入到名为的文件 `TestFile.txt` 。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-180">The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`, which uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="2f8f5-181">该示例创建文件、流和文本编写器，将一行文本写入文件，然后刷新并关闭流。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-181">The example creates the file, stream, and text writer, writes one line of text to the file, and then flushes and closes the stream.</span></span>  
  
 [!code-cpp[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/CS/source.cs#1)]
 [!code-vb[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="textWriterTraceListener.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="2f8f5-182">为 <see langword="true" />，则释放托管资源；为 <see langword="false" />，则 <see cref="M:System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-182"><see langword="true" /> to release managed resources; if <see langword="false" />, <see cref="M:System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)" /> has no effect.</span></span></param>
        <summary><span data-ttu-id="2f8f5-183">处置此 <see cref="T:System.Diagnostics.TextWriterTraceListener" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-183">Disposes this <see cref="T:System.Diagnostics.TextWriterTraceListener" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f8f5-184">使用 <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> 类的方法 <xref:System.Diagnostics.TextWriterTraceListener> 可释放对象的托管资源 <xref:System.Diagnostics.TextWriterTraceListener> 。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-184">Use the <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> method of the <xref:System.Diagnostics.TextWriterTraceListener> class to release the managed resources of a <xref:System.Diagnostics.TextWriterTraceListener> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="textWriterTraceListener.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f8f5-185">刷新 <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /> 的输出缓冲区。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-185">Flushes the output buffer for the <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f8f5-186">下面的示例实现一个 <xref:System.Diagnostics.TextWriterTraceListener> 名为的 `myTextListener` ，它使用调用的将 <xref:System.IO.StreamWriter> `myOutputWriter` 写入到名为的文件 `TestFile.txt` 。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-186">The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`, which uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="2f8f5-187">该示例创建文件、流和文本编写器，将一行文本写入文件，然后刷新并关闭流。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-187">The example creates the file, stream, and text writer, writes one line of text to the file, and then flushes and closes the stream.</span></span>  
  
 [!code-cpp[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/CS/source.cs#1)]
 [!code-vb[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.Write : string -&gt; unit" Usage="textWriterTraceListener.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="2f8f5-188">要写入的消息。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-188">A message to write.</span></span></param>
        <summary><span data-ttu-id="2f8f5-189">将一条消息写入此实例的 <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" />。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-189">Writes a message to this instance's <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f8f5-190">下面的示例实现一个 <xref:System.Diagnostics.TextWriterTraceListener> 名为的 `myWriter` ，以写入控制台屏幕。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-190">The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myWriter` to write to the console screen.</span></span> <span data-ttu-id="2f8f5-191">该示例在控制台屏幕上写入两行。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-191">The example writes two lines to the console screen.</span></span> <span data-ttu-id="2f8f5-192">请注意，第二个写入将与第一个写入出现在同一行上。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-192">Note the second write appears on the same line as the first write.</span></span> <span data-ttu-id="2f8f5-193">然后，该示例刷新并关闭流。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-193">The example then flushes and closes the stream.</span></span>  
  
 [!code-cpp[Classic TextWriterTraceListener.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextWriterTraceListener.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Write Example/CS/source.cs#1)]
 [!code-vb[Classic TextWriterTraceListener.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string -&gt; unit" Usage="textWriterTraceListener.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="2f8f5-194">要写入的消息。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-194">A message to write.</span></span></param>
        <summary><span data-ttu-id="2f8f5-195">将一条消息写入该实例的 <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" />，后跟行结束符。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-195">Writes a message to this instance's <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /> followed by a line terminator.</span></span> <span data-ttu-id="2f8f5-196">默认行结束符是回车符后接一个换行符 (\r\n)。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-196">The default line terminator is a carriage return followed by a line feed (\r\n).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f8f5-197">下面的示例实现一个 <xref:System.Diagnostics.TextWriterTraceListener> 名为的 `myWriter` ，以写入控制台屏幕。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-197">The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myWriter` to write to the console screen.</span></span> <span data-ttu-id="2f8f5-198">该示例在控制台屏幕上写入两行。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-198">The example writes two lines to the console screen.</span></span> <span data-ttu-id="2f8f5-199">请注意，第二个写入将与第一个写入出现在同一行上。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-199">Note the second write appears on the same line as the first write.</span></span> <span data-ttu-id="2f8f5-200">然后，该示例刷新并关闭流。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-200">The example then flushes and closes the stream.</span></span>  
  
 [!code-cpp[Classic TextWriterTraceListener.WriteLine Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.WriteLine Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextWriterTraceListener.WriteLine Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.WriteLine Example/CS/source.cs#1)]
 [!code-vb[Classic TextWriterTraceListener.WriteLine Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.WriteLine Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Writer">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter Writer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter Writer" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TextWriterTraceListener.Writer" />
      <MemberSignature Language="VB.NET" Value="Public Property Writer As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::TextWriter ^ Writer { System::IO::TextWriter ^ get(); void set(System::IO::TextWriter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Writer : System.IO.TextWriter with get, set" Usage="System.Diagnostics.TextWriterTraceListener.Writer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f8f5-201">获取或设置接收跟踪或调试输出的文本编写器。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-201">Gets or sets the text writer that receives the tracing or debugging output.</span></span></summary>
        <value><span data-ttu-id="2f8f5-202">表示接收跟踪或调试输出的编写器的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-202">A <see cref="T:System.IO.TextWriter" /> that represents the writer that receives the tracing or debugging output.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f8f5-203">下面的示例创建一个 <xref:System.Diagnostics.TextWriterTraceListener> 写入控制台屏幕的。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-203">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> that writes to the console screen.</span></span> <span data-ttu-id="2f8f5-204">然后，该代码将新的跟踪侦听器添加到 <xref:System.Diagnostics.Trace.Listeners%2A> trace 类中的。</span><span class="sxs-lookup"><span data-stu-id="2f8f5-204">Then the code adds the new trace listener to the <xref:System.Diagnostics.Trace.Listeners%2A> in the trace class.</span></span>  
  
 [!code-cpp[Classic TextWriterTraceListener.Writer Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Writer Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextWriterTraceListener.Writer Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Writer Example/CS/source.cs#1)]
 [!code-vb[Classic TextWriterTraceListener.Writer Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Writer Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
  </Members>
</Type>
