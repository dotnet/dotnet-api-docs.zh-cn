<Type Name="XmlWriterTraceListener" FullName="System.Diagnostics.XmlWriterTraceListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="723f202294303ffbf5246377273d7f592ec27aea" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89995358" /></Metadata><TypeSignature Language="C#" Value="public class XmlWriterTraceListener : System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlWriterTraceListener extends System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.XmlWriterTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlWriterTraceListener&#xA;Inherits TextWriterTraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlWriterTraceListener : System::Diagnostics::TextWriterTraceListener" />
  <TypeSignature Language="F#" Value="type XmlWriterTraceListener = class&#xA;    inherit TextWriterTraceListener" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TextWriterTraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b4702-101">将跟踪或调试输出作为 XML 编码的数据定向到 <see cref="T:System.IO.TextWriter" /> 或 <see cref="T:System.IO.Stream" />（如 <see cref="T:System.IO.FileStream" />）。</span><span class="sxs-lookup"><span data-stu-id="b4702-101">Directs tracing or debugging output as XML-encoded data to a <see cref="T:System.IO.TextWriter" /> or to a <see cref="T:System.IO.Stream" />, such as a <see cref="T:System.IO.FileStream" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b4702-102">您必须具有非托管代码权限才能创建类的实例 <xref:System.Diagnostics.XmlWriterTraceListener> 。</span><span class="sxs-lookup"><span data-stu-id="b4702-102">You must have unmanaged code permission to create an instance of the <xref:System.Diagnostics.XmlWriterTraceListener> class.</span></span>  
  
 <span data-ttu-id="b4702-103"><xref:System.Diagnostics.XmlWriterTraceListener>类将跟踪和调试信息转换为 XML 编码的文本流。</span><span class="sxs-lookup"><span data-stu-id="b4702-103">The <xref:System.Diagnostics.XmlWriterTraceListener> class converts tracing and debugging information into an XML-encoded text stream.</span></span> <span data-ttu-id="b4702-104">下面的表显示了 XML 输出的说明。</span><span class="sxs-lookup"><span data-stu-id="b4702-104">The description of the XML output is shown in the tables that follow.</span></span> <span data-ttu-id="b4702-105">您可以使用 [服务跟踪查看器工具 ( # A0) ](https://go.microsoft.com/fwlink/p/?LinkId=240129) 来显示 XML 输出。</span><span class="sxs-lookup"><span data-stu-id="b4702-105">You can use the [Service Trace Viewer Tool (SvcTraceViewer.exe)](https://go.microsoft.com/fwlink/p/?LinkId=240129) to display the XML output.</span></span>  
  
 <span data-ttu-id="b4702-106">你可以 <xref:System.Diagnostics.XmlWriterTraceListener> 通过应用程序配置文件启用或禁用，然后在 <xref:System.Diagnostics.XmlWriterTraceListener> 你的应用程序中使用配置的。</span><span class="sxs-lookup"><span data-stu-id="b4702-106">You can enable or disable an <xref:System.Diagnostics.XmlWriterTraceListener> through the application configuration file and then use the configured <xref:System.Diagnostics.XmlWriterTraceListener> in your application.</span></span> <span data-ttu-id="b4702-107">或者，您可以 <xref:System.Diagnostics.XmlWriterTraceListener> 在代码中创建。</span><span class="sxs-lookup"><span data-stu-id="b4702-107">Alternately, you can create an <xref:System.Diagnostics.XmlWriterTraceListener> in your code.</span></span>  
  
 <span data-ttu-id="b4702-108">若要配置 <xref:System.Diagnostics.XmlWriterTraceListener> ，请编辑与应用程序名称对应的配置文件。</span><span class="sxs-lookup"><span data-stu-id="b4702-108">To configure an <xref:System.Diagnostics.XmlWriterTraceListener>, edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="b4702-109">在此文件中，可以添加或删除侦听器，设置侦听器的属性，或删除侦听器。</span><span class="sxs-lookup"><span data-stu-id="b4702-109">In this file, you can add or remove a listener, set the properties for a listener, or remove listeners.</span></span> <span data-ttu-id="b4702-110">配置文件的格式应与下面的示例类似。</span><span class="sxs-lookup"><span data-stu-id="b4702-110">The configuration file should be formatted like the following example.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="4">  
      <listeners>  
        <add name="xmlListener"   
          type="System.Diagnostics.XmlWriterTraceListener"   
          initializeData="xmlOutput.xml"   
          traceOutputOptions="ProcessId, DateTime" />  
        <remove name="Default" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
```  
  
 <span data-ttu-id="b4702-111"><xref:System.Diagnostics.XmlWriterTraceListener>类 <xref:System.Diagnostics.TraceListener.Filter%2A> 从基类继承属性 <xref:System.Diagnostics.TraceListener> 。</span><span class="sxs-lookup"><span data-stu-id="b4702-111">The <xref:System.Diagnostics.XmlWriterTraceListener> class inherits the <xref:System.Diagnostics.TraceListener.Filter%2A> property from the base class <xref:System.Diagnostics.TraceListener>.</span></span>  <span data-ttu-id="b4702-112"><xref:System.Diagnostics.TraceListener.Filter%2A>属性允许侦听器上的其他级别的跟踪输出筛选。</span><span class="sxs-lookup"><span data-stu-id="b4702-112">The <xref:System.Diagnostics.TraceListener.Filter%2A> property allows an additional level of trace output filtering at the listener.</span></span>  <span data-ttu-id="b4702-113">如果存在筛选器，则 `Trace` 跟踪侦听器的方法将调用 <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> 筛选器的方法来确定是否发出跟踪。</span><span class="sxs-lookup"><span data-stu-id="b4702-113">If there is a filter present, the `Trace` methods of the trace listener call the <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> method of the filter to determine whether to emit the trace.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4702-114">如果尝试写入正在使用或不可用的文件，则该文件名将自动以 GUID 为前缀。</span><span class="sxs-lookup"><span data-stu-id="b4702-114">If an attempt is made to write to a file that is in use or unavailable, the file name is automatically prefixed by a GUID.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4702-115">侦听器方法旨在由 <xref:System.Diagnostics.Debug> 、和类的方法调用 <xref:System.Diagnostics.Trace> <xref:System.Diagnostics.TraceSource> 。</span><span class="sxs-lookup"><span data-stu-id="b4702-115">Listener methods are intended to be called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes.</span></span>  <span data-ttu-id="b4702-116">侦听器方法不应在应用程序代码中直接调用。</span><span class="sxs-lookup"><span data-stu-id="b4702-116">The listener methods are not intended to be called directly from application code.</span></span> <span data-ttu-id="b4702-117"><xref:System.Diagnostics.XmlWriterTraceListener>侦听器主要供 <xref:System.Diagnostics.TraceSource> 类使用。</span><span class="sxs-lookup"><span data-stu-id="b4702-117">The <xref:System.Diagnostics.XmlWriterTraceListener> listener is primarily intended for use by the <xref:System.Diagnostics.TraceSource> class.</span></span> <span data-ttu-id="b4702-118">和 <xref:System.Diagnostics.XmlWriterTraceListener.Write%2A> <xref:System.Diagnostics.XmlWriterTraceListener.WriteLine%2A> 方法可由 <xref:System.Diagnostics.Trace> 和类调用，并且 <xref:System.Diagnostics.Debug> 为 <xref:System.Diagnostics.Trace> 不提供值的 XML 元素提供默认值 <xref:System.Diagnostics.Debug> 。</span><span class="sxs-lookup"><span data-stu-id="b4702-118">The <xref:System.Diagnostics.XmlWriterTraceListener.Write%2A> and <xref:System.Diagnostics.XmlWriterTraceListener.WriteLine%2A> methods can be called by the <xref:System.Diagnostics.Trace> and <xref:System.Diagnostics.Debug> classes, and default values are provided for the XML elements that <xref:System.Diagnostics.Trace> and <xref:System.Diagnostics.Debug> do not supply values for.</span></span>  
  
 <span data-ttu-id="b4702-119">下表介绍了 XML 输出的元素和属性。</span><span class="sxs-lookup"><span data-stu-id="b4702-119">The following table describes the elements and attributes of the XML output.</span></span>  
  
|<span data-ttu-id="b4702-120">元素</span><span class="sxs-lookup"><span data-stu-id="b4702-120">Element</span></span>|<span data-ttu-id="b4702-121">属性</span><span class="sxs-lookup"><span data-stu-id="b4702-121">Attributes</span></span>|<span data-ttu-id="b4702-122">输出</span><span class="sxs-lookup"><span data-stu-id="b4702-122">Output</span></span>|<span data-ttu-id="b4702-123">说明</span><span class="sxs-lookup"><span data-stu-id="b4702-123">Notes</span></span>|  
|-------------|----------------|------------|-----------|  
|`CallStack`|<span data-ttu-id="b4702-124">无</span><span class="sxs-lookup"><span data-stu-id="b4702-124">None</span></span>|<span data-ttu-id="b4702-125">取决于属性中是否存在该 <xref:System.Diagnostics.TraceOptions.Callstack> 标志 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 。</span><span class="sxs-lookup"><span data-stu-id="b4702-125">Depends on the presence of the <xref:System.Diagnostics.TraceOptions.Callstack> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="b4702-126">特殊字符（如 > 或 <）将替换为转义序列。</span><span class="sxs-lookup"><span data-stu-id="b4702-126">Special characters such as > or < are replaced with escape sequences.</span></span> <span data-ttu-id="b4702-127">请参阅后面的转义字符转换表。</span><span class="sxs-lookup"><span data-stu-id="b4702-127">See the escaped character translation table that follows.</span></span>|  
|`Computer`|<span data-ttu-id="b4702-128">无</span><span class="sxs-lookup"><span data-stu-id="b4702-128">None</span></span>|<span data-ttu-id="b4702-129">始终显示。</span><span class="sxs-lookup"><span data-stu-id="b4702-129">Always present.</span></span>|<span data-ttu-id="b4702-130"><xref:System.Environment.MachineName%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="b4702-130">The value of the <xref:System.Environment.MachineName%2A> property.</span></span>|  
|`Correlation`|`ActivityID`|<span data-ttu-id="b4702-131">始终存在</span><span class="sxs-lookup"><span data-stu-id="b4702-131">Always present</span></span>|<span data-ttu-id="b4702-132">如果未指定，则默认值为空 GUID。</span><span class="sxs-lookup"><span data-stu-id="b4702-132">If not specified, the default is an empty GUID.</span></span>|  
||`RelatedActivityID`|<span data-ttu-id="b4702-133">取决于 `relatedActivityId` 跟踪方法调用中是否存在参数。</span><span class="sxs-lookup"><span data-stu-id="b4702-133">Depends on the presence of the `relatedActivityId` parameter in the Trace method call.</span></span>|<span data-ttu-id="b4702-134"><xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> 方法的 `relatedActivityId` 参数。</span><span class="sxs-lookup"><span data-stu-id="b4702-134">The `relatedActivityId` parameter of the <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> method.</span></span>|  
|`DataItem`|<span data-ttu-id="b4702-135">无</span><span class="sxs-lookup"><span data-stu-id="b4702-135">None</span></span>|<span data-ttu-id="b4702-136">取决于 `data` 方法的参数 <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> 。</span><span class="sxs-lookup"><span data-stu-id="b4702-136">Depends on the `data` parameter of the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method.</span></span>|<span data-ttu-id="b4702-137">此元素可以包含元素数组或一个元素，因此，这些值将作为一组 `DataItem` 节点在元素下写入 `TraceData` 。</span><span class="sxs-lookup"><span data-stu-id="b4702-137">This element can contain an array of elements or one element, so the values are written as a set of `DataItem` nodes under the `TraceData` element.</span></span><br /><br /> <span data-ttu-id="b4702-138">数据输出使用传入的 `ToString` 数据对象的方法。</span><span class="sxs-lookup"><span data-stu-id="b4702-138">The data output uses the `ToString` method of the passed-in data objects.</span></span>|  
|`EventID`|<span data-ttu-id="b4702-139">无</span><span class="sxs-lookup"><span data-stu-id="b4702-139">None</span></span>|<span data-ttu-id="b4702-140">始终显示。</span><span class="sxs-lookup"><span data-stu-id="b4702-140">Always present.</span></span>|<span data-ttu-id="b4702-141">参数输入 (`id`) 。</span><span class="sxs-lookup"><span data-stu-id="b4702-141">Parameter input (`id`).</span></span>|  
|`Execution`|`ProcessName`|<span data-ttu-id="b4702-142">始终显示。</span><span class="sxs-lookup"><span data-stu-id="b4702-142">Always present.</span></span>|<span data-ttu-id="b4702-143">中的 <xref:System.Diagnostics.TraceEventCache> 。</span><span class="sxs-lookup"><span data-stu-id="b4702-143">From the <xref:System.Diagnostics.TraceEventCache>.</span></span>|  
||`ProcessID`|<span data-ttu-id="b4702-144">始终显示。</span><span class="sxs-lookup"><span data-stu-id="b4702-144">Always present.</span></span>|<span data-ttu-id="b4702-145">中的 <xref:System.Diagnostics.TraceEventCache> 。</span><span class="sxs-lookup"><span data-stu-id="b4702-145">From the <xref:System.Diagnostics.TraceEventCache>.</span></span> <span data-ttu-id="b4702-146">在 Windows 98 和 Windows Me 操作系统上，如果 `ProcessID` 大于2147483647，则它是负数的正表示形式，应转换为获取正确的进程标识符。</span><span class="sxs-lookup"><span data-stu-id="b4702-146">On Windows 98 and Windows Me operating systems, if `ProcessID` is greater than 2,147,483,647 it is a positive representation of a negative number and should be converted to obtain the correct process identifier.</span></span>|  
||`ThreadID`|<span data-ttu-id="b4702-147">始终显示。</span><span class="sxs-lookup"><span data-stu-id="b4702-147">Always present.</span></span>|<span data-ttu-id="b4702-148">中的 <xref:System.Diagnostics.TraceEventCache> 。</span><span class="sxs-lookup"><span data-stu-id="b4702-148">From the <xref:System.Diagnostics.TraceEventCache>.</span></span>|  
|`Level`|<span data-ttu-id="b4702-149">无</span><span class="sxs-lookup"><span data-stu-id="b4702-149">None</span></span>|<span data-ttu-id="b4702-150">始终显示。</span><span class="sxs-lookup"><span data-stu-id="b4702-150">Always present.</span></span>|<span data-ttu-id="b4702-151">参数输入 () 的数值 `eventType` 。</span><span class="sxs-lookup"><span data-stu-id="b4702-151">Parameter input (the numeric value of `eventType`).</span></span> <span data-ttu-id="b4702-152">大于255的参数值输出为255。</span><span class="sxs-lookup"><span data-stu-id="b4702-152">Parameter values greater than 255 are output as 255.</span></span>|  
|`LogicalOperationStack`|<span data-ttu-id="b4702-153">无</span><span class="sxs-lookup"><span data-stu-id="b4702-153">None</span></span>|<span data-ttu-id="b4702-154">取决于属性中是否存在该 <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> 标志 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 。</span><span class="sxs-lookup"><span data-stu-id="b4702-154">Depends on the presence of the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="b4702-155">可以有多个逻辑操作，因此，这些值将作为 `LogicalOperation` 节点下的元素写入 `LogicalOperationStack` 。</span><span class="sxs-lookup"><span data-stu-id="b4702-155">There can be more than one logical operation, so the values are written as `LogicalOperation` nodes under the `LogicalOperationStack` element.</span></span>|  
|`Message`|<span data-ttu-id="b4702-156">无</span><span class="sxs-lookup"><span data-stu-id="b4702-156">None</span></span>|<span data-ttu-id="b4702-157">取决于跟踪方法调用中是否存在消息。</span><span class="sxs-lookup"><span data-stu-id="b4702-157">Depends on the presence of a message in the Trace method call.</span></span>|<span data-ttu-id="b4702-158">如果提供了格式设置参数，则此元素是已格式化的消息。</span><span class="sxs-lookup"><span data-stu-id="b4702-158">This element is a formatted message if formatting arguments are provided.</span></span>|  
|`Source`|`Name`|<span data-ttu-id="b4702-159">始终显示。</span><span class="sxs-lookup"><span data-stu-id="b4702-159">Always present.</span></span>|<span data-ttu-id="b4702-160">参数输入。</span><span class="sxs-lookup"><span data-stu-id="b4702-160">Parameter input.</span></span>|  
|`SubType`|`Name`|<span data-ttu-id="b4702-161">始终显示。</span><span class="sxs-lookup"><span data-stu-id="b4702-161">Always present.</span></span>|<span data-ttu-id="b4702-162">参数输入。</span><span class="sxs-lookup"><span data-stu-id="b4702-162">Parameter input.</span></span>|  
|`TimeCreated`|`SystemTime`|<span data-ttu-id="b4702-163">始终显示。</span><span class="sxs-lookup"><span data-stu-id="b4702-163">Always present.</span></span>|<span data-ttu-id="b4702-164">如果中不存在 <xref:System.Diagnostics.TraceEventCache> ，则默认为当前时间。</span><span class="sxs-lookup"><span data-stu-id="b4702-164">If not present in the <xref:System.Diagnostics.TraceEventCache>, the default is the current time.</span></span>|  
|`TimeStamp`|<span data-ttu-id="b4702-165">无</span><span class="sxs-lookup"><span data-stu-id="b4702-165">None</span></span>|<span data-ttu-id="b4702-166">取决于属性中是否存在该 <xref:System.Diagnostics.TraceOptions.Timestamp> 标志 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 。</span><span class="sxs-lookup"><span data-stu-id="b4702-166">Depends on the presence of the <xref:System.Diagnostics.TraceOptions.Timestamp> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="b4702-167">中的 <xref:System.Diagnostics.TraceEventCache> 。</span><span class="sxs-lookup"><span data-stu-id="b4702-167">From the <xref:System.Diagnostics.TraceEventCache>.</span></span>|  
|`Type`|<span data-ttu-id="b4702-168">无</span><span class="sxs-lookup"><span data-stu-id="b4702-168">None</span></span>|<span data-ttu-id="b4702-169">始终显示。</span><span class="sxs-lookup"><span data-stu-id="b4702-169">Always present.</span></span>|<span data-ttu-id="b4702-170">始终为值3。</span><span class="sxs-lookup"><span data-stu-id="b4702-170">Always the value 3.</span></span>|  
  
 <span data-ttu-id="b4702-171">下表显示了在 XML 输出中转义的字符。</span><span class="sxs-lookup"><span data-stu-id="b4702-171">The following table shows the characters that are escaped in the XML output.</span></span> <span data-ttu-id="b4702-172">转义发生在除元素之外的所有元素和属性中 `DataItem` ，如果传递给该方法的参数的对象 `data` <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> 是一个对象，则不会对其进行转义 <xref:System.Xml.XPath.XPathNavigator> 。</span><span class="sxs-lookup"><span data-stu-id="b4702-172">Escaping occurs in all the elements and attributes with the exception of the `DataItem` element, which is not escaped if the object passed to the `data` parameter of the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method is an <xref:System.Xml.XPath.XPathNavigator> object.</span></span> <span data-ttu-id="b4702-173">如果 <xref:System.Xml.XPath.XPathNavigator> 用于数据对象，则 <xref:System.Xml.XPath.XPathNavigator.MoveToRoot%2A> 调用方法，并将整个根节点视为非转义数据。</span><span class="sxs-lookup"><span data-stu-id="b4702-173">If an <xref:System.Xml.XPath.XPathNavigator> is used for the data object, the <xref:System.Xml.XPath.XPathNavigator.MoveToRoot%2A> method is called and the entire root node is traced as unescaped data.</span></span>  
  
|<span data-ttu-id="b4702-174">转义字符</span><span class="sxs-lookup"><span data-stu-id="b4702-174">Escaped character</span></span>|<span data-ttu-id="b4702-175">“值”</span><span class="sxs-lookup"><span data-stu-id="b4702-175">Value</span></span>|  
|-----------------------|-----------|  
|&|&amp;|  
|\<|&lt;|  
|>|&gt;|  
|<span data-ttu-id="b4702-176">"</span><span class="sxs-lookup"><span data-stu-id="b4702-176">"</span></span>|&quot;|  
|\|&apos;|  
|<span data-ttu-id="b4702-177">0xD</span><span class="sxs-lookup"><span data-stu-id="b4702-177">0xD</span></span>|<span data-ttu-id="b4702-178">&\#XD</span><span class="sxs-lookup"><span data-stu-id="b4702-178">&\#xD;</span></span>|  
|<span data-ttu-id="b4702-179">0xA</span><span class="sxs-lookup"><span data-stu-id="b4702-179">0xA</span></span>|<span data-ttu-id="b4702-180">&\#XA</span><span class="sxs-lookup"><span data-stu-id="b4702-180">&\#xA;</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b4702-181">下面的代码示例演示如何使用类将 <xref:System.Diagnostics.XmlWriterTraceListener> 转义和非转义的数据写入文件日志。</span><span class="sxs-lookup"><span data-stu-id="b4702-181">The following code example shows the use of the <xref:System.Diagnostics.XmlWriterTraceListener> class to write both escaped and non-escaped data to file logs.</span></span>  
  
 [!code-csharp[System.Diagnostics.XmlWriterTraceListener#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.XmlWriterTraceListener/CS/program.cs#1)]
 [!code-vb[System.Diagnostics.XmlWriterTraceListener#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.XmlWriterTraceListener/VB/module1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b4702-182">初始化 <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="b4702-182">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : System.IO.Stream -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="b4702-183"><see cref="T:System.IO.Stream" />，它表示跟踪侦听器写入的流。</span><span class="sxs-lookup"><span data-stu-id="b4702-183">A <see cref="T:System.IO.Stream" /> that represents the stream the trace listener writes to.</span></span></param>
        <summary><span data-ttu-id="b4702-184">通过将指定的流用作调试和跟踪输出的接收者来初始化 <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="b4702-184">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class, using the specified stream as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4702-185">将 <xref:System.Diagnostics.TraceListener.Name%2A> 属性初始化为空字符串 ( "" ) 。</span><span class="sxs-lookup"><span data-stu-id="b4702-185">The <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string ("").</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b4702-186"><paramref name="stream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b4702-186"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : System.IO.TextWriter -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener writer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="b4702-187"><see cref="T:System.IO.TextWriter" />，它接收来自跟踪侦听器的输出。</span><span class="sxs-lookup"><span data-stu-id="b4702-187">A <see cref="T:System.IO.TextWriter" /> that receives the output from the trace listener.</span></span></param>
        <summary><span data-ttu-id="b4702-188">通过将指定的编写器用作调试和跟踪输出的接收者来初始化 <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="b4702-188">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class using the specified writer as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4702-189">将 <xref:System.Diagnostics.TraceListener.Name%2A> 属性初始化为空字符串 ( "" ) 。</span><span class="sxs-lookup"><span data-stu-id="b4702-189">The <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string ("").</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b4702-190"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b4702-190"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : string -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener filename" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="b4702-191">要写入的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="b4702-191">The name of the file to write to.</span></span></param>
        <summary><span data-ttu-id="b4702-192">通过将指定的文件用作调试和跟踪输出的接收者来初始化 <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="b4702-192">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class, using the specified file as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4702-193">此构造函数 <xref:System.IO.StreamWriter> 使用编码为指定路径上的指定文件初始化类的新实例 <xref:System.Text.Encoding.UTF8%2A> 。</span><span class="sxs-lookup"><span data-stu-id="b4702-193">This constructor initializes a new instance of the <xref:System.IO.StreamWriter> class for the specified file on the specified path, using <xref:System.Text.Encoding.UTF8%2A> encoding.</span></span> <span data-ttu-id="b4702-194">如果文件存在，则将其追加到。</span><span class="sxs-lookup"><span data-stu-id="b4702-194">If the file exists, it is appended to.</span></span> <span data-ttu-id="b4702-195">如果该文件不存在，则创建一个新文件。</span><span class="sxs-lookup"><span data-stu-id="b4702-195">If the file does not exist, a new file is created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4702-196">若要减少异常的几率，任何可能使输出无效的字符都将替换为 "？" 字符。</span><span class="sxs-lookup"><span data-stu-id="b4702-196">To reduce the chance of an exception, any character that might invalidate the output is replaced with a "?" character.</span></span>  
  
 <span data-ttu-id="b4702-197">将 <xref:System.Diagnostics.TraceListener.Name%2A> 属性初始化为空字符串 ( "" ) 。</span><span class="sxs-lookup"><span data-stu-id="b4702-197">The <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string ("").</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b4702-198"><paramref name="filename" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b4702-198"><paramref name="filename" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (System.IO.Stream stream, string? name);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stream As Stream, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::IO::Stream ^ stream, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : System.IO.Stream * string -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener (stream, name)" />
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (System.IO.Stream stream, string name);" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="b4702-199"><see cref="T:System.IO.Stream" />，它表示跟踪侦听器写入的流。</span><span class="sxs-lookup"><span data-stu-id="b4702-199">A <see cref="T:System.IO.Stream" /> that represents the stream the trace listener writes to.</span></span></param>
        <param name="name"><span data-ttu-id="b4702-200">新实例的名称。</span><span class="sxs-lookup"><span data-stu-id="b4702-200">The name of the new instance.</span></span></param>
        <summary><span data-ttu-id="b4702-201">通过将指定的流用作调试和跟踪输出的接收者来初始化具有指定名称的 <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="b4702-201">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class with the specified name, using the specified stream as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4702-202">此构造函数将 <xref:System.Diagnostics.TraceListener.Name%2A> 属性初始化为 `name` 参数值; 如果参数为，则将属性初始化为空字符串 ( "" ) `name` `null` 。</span><span class="sxs-lookup"><span data-stu-id="b4702-202">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the `name` parameter value or to an empty string ("") if the `name` parameter is `null`.</span></span> <span data-ttu-id="b4702-203">该名称可用作集合中的索引 <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> ，以编程方式更改侦听器的属性。</span><span class="sxs-lookup"><span data-stu-id="b4702-203">The name can be used as an index into the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection to programmatically change the properties for the listener.</span></span> <span data-ttu-id="b4702-204">例如，下面的代码将设置 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> <xref:System.Diagnostics.XmlWriterTraceListener> 其 <xref:System.Diagnostics.TraceListener.Name%2A> 属性为 "xmlListener" 的实例的属性。</span><span class="sxs-lookup"><span data-stu-id="b4702-204">For example, the following code sets the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for an instance of <xref:System.Diagnostics.XmlWriterTraceListener> whose <xref:System.Diagnostics.TraceListener.Name%2A> property is "xmlListener".</span></span>  
  
```  
((XmlWriterTraceListener)Trace.Listeners["xmlListener"]).TraceOutputOptions =   
    TraceOptions.Timestamp  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b4702-205"><paramref name="stream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b4702-205"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (System.IO.TextWriter writer, string? name);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::IO::TextWriter ^ writer, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : System.IO.TextWriter * string -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener (writer, name)" />
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (System.IO.TextWriter writer, string name);" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="b4702-206"><see cref="T:System.IO.TextWriter" />，它接收来自跟踪侦听器的输出。</span><span class="sxs-lookup"><span data-stu-id="b4702-206">A <see cref="T:System.IO.TextWriter" /> that receives the output from the trace listener.</span></span></param>
        <param name="name"><span data-ttu-id="b4702-207">新实例的名称。</span><span class="sxs-lookup"><span data-stu-id="b4702-207">The name of the new instance.</span></span></param>
        <summary><span data-ttu-id="b4702-208">通过将指定的编写器用作调试和跟踪输出的接收者来初始化具有指定名称的 <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="b4702-208">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class with the specified name, using the specified writer as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4702-209">此构造函数将 <xref:System.Diagnostics.TraceListener.Name%2A> 属性初始化为 `name` 参数值; 如果参数为，则将属性初始化为空字符串 ( "" ) `name` `null` 。</span><span class="sxs-lookup"><span data-stu-id="b4702-209">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the `name` parameter value or to an empty string ("") if the `name` parameter is `null`.</span></span> <span data-ttu-id="b4702-210">该名称可用作集合中的索引 <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> ，以编程方式更改侦听器的属性。</span><span class="sxs-lookup"><span data-stu-id="b4702-210">The name can be used as an index into the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection to programmatically change the properties for the listener.</span></span> <span data-ttu-id="b4702-211">例如，下面的代码将设置 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> <xref:System.Diagnostics.XmlWriterTraceListener> 其 <xref:System.Diagnostics.TraceListener.Name%2A> 属性为 "xmlListener" 的实例的属性。</span><span class="sxs-lookup"><span data-stu-id="b4702-211">For example, the following code sets the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for an instance of <xref:System.Diagnostics.XmlWriterTraceListener> whose <xref:System.Diagnostics.TraceListener.Name%2A> property is "xmlListener".</span></span>  
  
```  
((XmlWriterTraceListener)Trace.Listeners["xmlListener"]).TraceOutputOptions =   
    TraceOptions.Timestamp.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b4702-212"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b4702-212"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (string filename, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::String ^ filename, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : string * string -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener (filename, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="b4702-213">要写入的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="b4702-213">The name of the file to write to.</span></span></param>
        <param name="name"><span data-ttu-id="b4702-214">新实例的名称。</span><span class="sxs-lookup"><span data-stu-id="b4702-214">The name of the new instance.</span></span></param>
        <summary><span data-ttu-id="b4702-215">通过将指定的文件用作调试和跟踪输出的接收者来初始化具有指定名称的 <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="b4702-215">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class with the specified name, using the specified file as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4702-216">此构造函数 <xref:System.IO.StreamWriter> 使用编码为指定路径上的指定文件初始化类的新实例 <xref:System.Text.Encoding.UTF8%2A> 。</span><span class="sxs-lookup"><span data-stu-id="b4702-216">This constructor initializes a new instance of the <xref:System.IO.StreamWriter> class for the specified file on the specified path, using <xref:System.Text.Encoding.UTF8%2A> encoding.</span></span> <span data-ttu-id="b4702-217">如果文件存在，则将其追加到。</span><span class="sxs-lookup"><span data-stu-id="b4702-217">If the file exists, it is appended to.</span></span> <span data-ttu-id="b4702-218">如果该文件不存在，则创建一个新文件。</span><span class="sxs-lookup"><span data-stu-id="b4702-218">If the file does not exist, a new file is created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4702-219">若要减少异常的几率，任何可能使输出无效的字符都将替换为 "？" 字符。</span><span class="sxs-lookup"><span data-stu-id="b4702-219">To reduce the chance of an exception, any character that might invalidate the output is replaced with a "?" character.</span></span>  
  
 <span data-ttu-id="b4702-220"><xref:System.Diagnostics.TraceListener.Name%2A>如果参数为，则将属性设置为 `name` 参数值或空字符串 ( "" ) `name` `null` 。</span><span class="sxs-lookup"><span data-stu-id="b4702-220">The <xref:System.Diagnostics.TraceListener.Name%2A> property is set to the `name` parameter value or to an empty string ("") if the `name` parameter is `null`.</span></span> <span data-ttu-id="b4702-221">该名称可用作集合中的索引 <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> ，以编程方式更改侦听器的属性。</span><span class="sxs-lookup"><span data-stu-id="b4702-221">The name can be used as an index into the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection to programmatically change the properties for the listener.</span></span> <span data-ttu-id="b4702-222">例如，下面的代码将设置 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> <xref:System.Diagnostics.XmlWriterTraceListener> 其 <xref:System.Diagnostics.TraceListener.Name%2A> 属性为 "xmlListener" 的实例的属性。</span><span class="sxs-lookup"><span data-stu-id="b4702-222">For example, the following code sets the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for an instance of <xref:System.Diagnostics.XmlWriterTraceListener> whose <xref:System.Diagnostics.TraceListener.Name%2A> property is "xmlListener".</span></span>  
  
```  
((XmlWriterTraceListener)Trace.Listeners["xmlListener"]).TraceOutputOptions =  
    TraceOptions.Timestamp.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b4702-223"><paramref name="stream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b4702-223"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="xmlWriterTraceListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4702-224">关闭该侦听器的 <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" />，以使其不再接收跟踪或调试输出。</span><span class="sxs-lookup"><span data-stu-id="b4702-224">Closes the <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /> for this listener so that it no longer receives tracing or debugging output.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public override void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="override this.Fail : string * string -&gt; unit" Usage="xmlWriterTraceListener.Fail (message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="b4702-225">要写入的错误信息。</span><span class="sxs-lookup"><span data-stu-id="b4702-225">The error message to write.</span></span></param>
        <param name="detailMessage"><span data-ttu-id="b4702-226">要追加到错误信息的详细错误信息。</span><span class="sxs-lookup"><span data-stu-id="b4702-226">The detailed error message to append to the error message.</span></span></param>
        <summary><span data-ttu-id="b4702-227">将包含错误信息和详细错误信息的跟踪信息写入文件或流中。</span><span class="sxs-lookup"><span data-stu-id="b4702-227">Writes trace information including an error message and a detailed error message to the file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4702-228">当应用程序在用户界面模式下运行时，默认行为是在消息框中显示消息和详细消息，并将其显示到 <xref:System.Diagnostics.TraceListener> 集合中的实例 <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="b4702-228">The default behavior is to display the message and detailed message in a message box when the application is running in user-interface mode, and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection.</span></span> <span data-ttu-id="b4702-229">默认情况下，集合包含的实例 <xref:System.Diagnostics.DefaultTraceListener> 。</span><span class="sxs-lookup"><span data-stu-id="b4702-229">By default, the collection contains an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="b4702-230">可以通过在集合中添加或删除来自定义此行为 <xref:System.Diagnostics.TraceListener> 。</span><span class="sxs-lookup"><span data-stu-id="b4702-230">You can customize this behavior by adding or removing a <xref:System.Diagnostics.TraceListener> from the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b4702-231">向输出文件或流中写入跟踪数据。</span><span class="sxs-lookup"><span data-stu-id="b4702-231">Writes trace data to the output file or stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string? source, System.Diagnostics.TraceEventType eventType, int id, object data);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="xmlWriterTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="b4702-232">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" />。</span><span class="sxs-lookup"><span data-stu-id="b4702-232">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="b4702-233">源名称。</span><span class="sxs-lookup"><span data-stu-id="b4702-233">The source name.</span></span></param>
        <param name="eventType"><span data-ttu-id="b4702-234"><see cref="T:System.Diagnostics.TraceEventType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="b4702-234">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values.</span></span></param>
        <param name="id"><span data-ttu-id="b4702-235">事件的数值标识符。</span><span class="sxs-lookup"><span data-stu-id="b4702-235">A numeric identifier for the event.</span></span></param>
        <param name="data"><span data-ttu-id="b4702-236">要发出的数据对象。</span><span class="sxs-lookup"><span data-stu-id="b4702-236">A data object to emit.</span></span></param>
        <summary><span data-ttu-id="b4702-237">将跟踪信息、数据对象和事件信息写入文件或流中。</span><span class="sxs-lookup"><span data-stu-id="b4702-237">Writes trace information, a data object, and event information to the file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4702-238">`eventCache`、、 `source` `eventType` 和 `id` 参数在跟踪的页眉和页脚中使用。</span><span class="sxs-lookup"><span data-stu-id="b4702-238">The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="b4702-239">在 `id` 写入之前，将参数转换为无符号整数，因此负值 `id` 将被写入为大正整数。</span><span class="sxs-lookup"><span data-stu-id="b4702-239">The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="b4702-240">`data`参数作为 `DataItem` 节点写入 `TraceData` 元素中。</span><span class="sxs-lookup"><span data-stu-id="b4702-240">The `data` parameter is written as a `DataItem` node in the `TraceData` element.</span></span> <span data-ttu-id="b4702-241">`ToString`数据对象的方法用于将对象转换为字符串。</span><span class="sxs-lookup"><span data-stu-id="b4702-241">The `ToString` method of the data object is used to convert the object to a string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b4702-242">此方法不应由应用程序代码直接调用。</span><span class="sxs-lookup"><span data-stu-id="b4702-242">This method is not intended to be called directly by application code.</span></span>  <span data-ttu-id="b4702-243">它由、和类的方法调用， <xref:System.Diagnostics.Debug> <xref:System.Diagnostics.Trace> <xref:System.Diagnostics.TraceSource> 用于写入跟踪数据。</span><span class="sxs-lookup"><span data-stu-id="b4702-243">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string? source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="xmlWriterTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="net-5.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="b4702-244">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" />。</span><span class="sxs-lookup"><span data-stu-id="b4702-244">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="b4702-245">源名称。</span><span class="sxs-lookup"><span data-stu-id="b4702-245">The source name.</span></span></param>
        <param name="eventType"><span data-ttu-id="b4702-246"><see cref="T:System.Diagnostics.TraceEventType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="b4702-246">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values.</span></span></param>
        <param name="id"><span data-ttu-id="b4702-247">事件的数值标识符。</span><span class="sxs-lookup"><span data-stu-id="b4702-247">A numeric identifier for the event.</span></span></param>
        <param name="data"><span data-ttu-id="b4702-248">要发出的数据对象的数组。</span><span class="sxs-lookup"><span data-stu-id="b4702-248">An array of data objects to emit.</span></span></param>
        <summary><span data-ttu-id="b4702-249">将跟踪信息、数据对象和事件信息写入文件或流中。</span><span class="sxs-lookup"><span data-stu-id="b4702-249">Writes trace information, data objects, and event information to the file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4702-250">`eventCache`、、 `source` `eventType` 和 `id` 参数在跟踪的页眉和页脚中使用。</span><span class="sxs-lookup"><span data-stu-id="b4702-250">The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="b4702-251">在 `id` 写入之前，将参数转换为无符号整数，因此负值 `id` 将被写入为大正整数。</span><span class="sxs-lookup"><span data-stu-id="b4702-251">The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="b4702-252">参数数组中的对象 `data` 作为 `DataItem` 元素中的节点写入 `TraceData` 。</span><span class="sxs-lookup"><span data-stu-id="b4702-252">The objects in the `data` parameter array are written as `DataItem` nodes in the `TraceData` element.</span></span> <span data-ttu-id="b4702-253">`ToString`每个数据对象的方法用于将对象转换为字符串。</span><span class="sxs-lookup"><span data-stu-id="b4702-253">The `ToString` method of each data object is used to convert the object to a string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b4702-254">此方法不应由应用程序代码直接调用。</span><span class="sxs-lookup"><span data-stu-id="b4702-254">This method is not intended to be called directly by application code.</span></span>  <span data-ttu-id="b4702-255">它由、和类的方法调用， <xref:System.Diagnostics.Debug> <xref:System.Diagnostics.Trace> <xref:System.Diagnostics.TraceSource> 用于写入跟踪数据。</span><span class="sxs-lookup"><span data-stu-id="b4702-255">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b4702-256">将事件跟踪信息写入输出文件或流中。</span><span class="sxs-lookup"><span data-stu-id="b4702-256">Writes event trace information to the output file or stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string? source, System.Diagnostics.TraceEventType eventType, int id, string message);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="xmlWriterTraceListener.TraceEvent (eventCache, source, eventType, id, message)" />
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="b4702-257">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" />。</span><span class="sxs-lookup"><span data-stu-id="b4702-257">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="b4702-258">源名称。</span><span class="sxs-lookup"><span data-stu-id="b4702-258">The source name.</span></span></param>
        <param name="eventType"><span data-ttu-id="b4702-259"><see cref="T:System.Diagnostics.TraceEventType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="b4702-259">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values.</span></span></param>
        <param name="id"><span data-ttu-id="b4702-260">事件的数值标识符。</span><span class="sxs-lookup"><span data-stu-id="b4702-260">A numeric identifier for the event.</span></span></param>
        <param name="message"><span data-ttu-id="b4702-261">要写入的消息。</span><span class="sxs-lookup"><span data-stu-id="b4702-261">The message to write.</span></span></param>
        <summary><span data-ttu-id="b4702-262">将跟踪信息、消息和事件信息写入文件或流中。</span><span class="sxs-lookup"><span data-stu-id="b4702-262">Writes trace information, a message, and event information to the file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4702-263">`eventCache`、、 `source` `eventType` 和 `id` 参数在跟踪的页眉和页脚中使用。</span><span class="sxs-lookup"><span data-stu-id="b4702-263">The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="b4702-264">在 `id` 写入之前，将参数转换为无符号整数，因此负值 `id` 将被写入为大正整数。</span><span class="sxs-lookup"><span data-stu-id="b4702-264">The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="b4702-265">`message`参数作为 `Message` 元素写入。</span><span class="sxs-lookup"><span data-stu-id="b4702-265">The `message` parameter is written as the `Message` element.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b4702-266">此方法不应由应用程序代码直接调用。</span><span class="sxs-lookup"><span data-stu-id="b4702-266">This method is not intended to be called directly by application code.</span></span>  <span data-ttu-id="b4702-267">它由、和类的方法调用， <xref:System.Diagnostics.Debug> <xref:System.Diagnostics.Trace> <xref:System.Diagnostics.TraceSource> 用于写入跟踪数据。</span><span class="sxs-lookup"><span data-stu-id="b4702-267">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache? eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[]? args);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="xmlWriterTraceListener.TraceEvent (eventCache, source, eventType, id, format, args)" />
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="net-5.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="b4702-268">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" />。</span><span class="sxs-lookup"><span data-stu-id="b4702-268">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="b4702-269">源名称。</span><span class="sxs-lookup"><span data-stu-id="b4702-269">The source name.</span></span></param>
        <param name="eventType"><span data-ttu-id="b4702-270"><see cref="T:System.Diagnostics.TraceEventType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="b4702-270">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values.</span></span></param>
        <param name="id"><span data-ttu-id="b4702-271">事件的数值标识符。</span><span class="sxs-lookup"><span data-stu-id="b4702-271">A numeric identifier for the event.</span></span></param>
        <param name="format"><span data-ttu-id="b4702-272">包含零个或多个格式项的格式字符串，这些项与 <paramref name="args" /> 数组中的对象相对应。</span><span class="sxs-lookup"><span data-stu-id="b4702-272">A format string that contains zero or more format items that correspond to objects in the <paramref name="args" /> array.</span></span></param>
        <param name="args"><span data-ttu-id="b4702-273">包含零个或多个要格式化的对象的对象数组。</span><span class="sxs-lookup"><span data-stu-id="b4702-273">An object array containing zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="b4702-274">将跟踪信息、格式化消息和事件信息写入文件或流中。</span><span class="sxs-lookup"><span data-stu-id="b4702-274">Writes trace information, a formatted message, and event information to the file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4702-275">`eventCache`、、 `source` `eventType` 和 `id` 参数在跟踪的页眉和页脚中使用。</span><span class="sxs-lookup"><span data-stu-id="b4702-275">The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="b4702-276">在 `id` 写入之前，将参数转换为无符号整数，因此负值 `id` 将被写入为大正整数。</span><span class="sxs-lookup"><span data-stu-id="b4702-276">The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="b4702-277"><xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>调用方法，将 `format` 字符串和 `args` 数组作为参数传递，以将对象数组的格式设置为 `args` `Message` 元素。</span><span class="sxs-lookup"><span data-stu-id="b4702-277">The <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method is called, passing in the `format` string and `args` array as parameters, to format the `args` object array as the `Message` element.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b4702-278">此方法不应由应用程序代码直接调用。</span><span class="sxs-lookup"><span data-stu-id="b4702-278">This method is not intended to be called directly by application code.</span></span>  <span data-ttu-id="b4702-279">它由、和类的方法调用， <xref:System.Diagnostics.Debug> <xref:System.Diagnostics.Trace> <xref:System.Diagnostics.TraceSource> 用于写入跟踪数据。</span><span class="sxs-lookup"><span data-stu-id="b4702-279">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceTransfer">
      <MemberSignature Language="C#" Value="public override void TraceTransfer (System.Diagnostics.TraceEventCache eventCache, string? source, int id, string message, Guid relatedActivityId);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceTransfer(class System.Diagnostics.TraceEventCache eventCache, string source, int32 id, string message, valuetype System.Guid relatedActivityId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceTransfer (eventCache As TraceEventCache, source As String, id As Integer, message As String, relatedActivityId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceTransfer(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, int id, System::String ^ message, Guid relatedActivityId);" />
      <MemberSignature Language="F#" Value="override this.TraceTransfer : System.Diagnostics.TraceEventCache * string * int * string * Guid -&gt; unit" Usage="xmlWriterTraceListener.TraceTransfer (eventCache, source, id, message, relatedActivityId)" />
      <MemberSignature Language="C#" Value="public override void TraceTransfer (System.Diagnostics.TraceEventCache eventCache, string source, int id, string message, Guid relatedActivityId);" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="relatedActivityId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="b4702-280">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" />。</span><span class="sxs-lookup"><span data-stu-id="b4702-280">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="b4702-281">源名称。</span><span class="sxs-lookup"><span data-stu-id="b4702-281">The source name.</span></span></param>
        <param name="id"><span data-ttu-id="b4702-282">事件的数值标识符。</span><span class="sxs-lookup"><span data-stu-id="b4702-282">A numeric identifier for the event.</span></span></param>
        <param name="message"><span data-ttu-id="b4702-283">要写入的跟踪消息。</span><span class="sxs-lookup"><span data-stu-id="b4702-283">A trace message to write.</span></span></param>
        <param name="relatedActivityId"><span data-ttu-id="b4702-284">标识相关活动的 <see cref="T:System.Guid" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="b4702-284">A <see cref="T:System.Guid" /> structure that identifies a related activity.</span></span></param>
        <summary><span data-ttu-id="b4702-285">将跟踪信息（包括相关活动的标识）、消息和事件信息写入文件或流中。</span><span class="sxs-lookup"><span data-stu-id="b4702-285">Writes trace information including the identity of a related activity, a message, and event information to the file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4702-286"><xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A>方法用于关联相关跟踪。</span><span class="sxs-lookup"><span data-stu-id="b4702-286">The <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> method is used for the correlation of related traces.</span></span> <span data-ttu-id="b4702-287">`eventCache`、、 `source` `id` 和 `relatedActivityId` 参数在跟踪的页眉和页脚中使用。</span><span class="sxs-lookup"><span data-stu-id="b4702-287">The `eventCache`, `source`, `id`, and `relatedActivityId` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="b4702-288">在 `id` 写入之前，将参数转换为无符号整数，因此负值 `id` 将被写入为大正整数。</span><span class="sxs-lookup"><span data-stu-id="b4702-288">The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="b4702-289">`message`参数作为 `Message` 元素写入。</span><span class="sxs-lookup"><span data-stu-id="b4702-289">The `message` parameter is written as the `Message` element.</span></span> <span data-ttu-id="b4702-290"><xref:System.Guid.ToString%28System.String%29?displayProperty=nameWithType>调用方法将 `relatedActivityId` 值转换为标头中显示的 "B" 格式字符串。</span><span class="sxs-lookup"><span data-stu-id="b4702-290">The <xref:System.Guid.ToString%28System.String%29?displayProperty=nameWithType> method is called to convert the `relatedActivityId`value to a "B" formatted string, which appears in the header.</span></span> <span data-ttu-id="b4702-291">`SubTypeName`页脚中的元素将跟踪事件类型标识为 <xref:System.Diagnostics.TraceEventType.Transfer> 。</span><span class="sxs-lookup"><span data-stu-id="b4702-291">The `SubTypeName` element in the footer identifies the trace event type as a <xref:System.Diagnostics.TraceEventType.Transfer>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b4702-292"><xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A>方法不应由应用程序代码调用。</span><span class="sxs-lookup"><span data-stu-id="b4702-292">The <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> method is not intended to be called by application code.</span></span>  <span data-ttu-id="b4702-293">它旨在由 <xref:System.Diagnostics.TraceSource> 对象调用，以便为其方法发出跟踪信息 <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> 。</span><span class="sxs-lookup"><span data-stu-id="b4702-293">It is intended to be called by a <xref:System.Diagnostics.TraceSource> object to emit the trace information for its <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.Write : string -&gt; unit" Usage="xmlWriterTraceListener.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="b4702-294">要写入的消息。</span><span class="sxs-lookup"><span data-stu-id="b4702-294">The message to write.</span></span></param>
        <summary><span data-ttu-id="b4702-295">将不包含任何其他上下文信息的原义消息写入文件或流中。</span><span class="sxs-lookup"><span data-stu-id="b4702-295">Writes a verbatim message without any additional context information to the file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4702-296">使用 <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> 方法在日志输出中包含上下文信息。</span><span class="sxs-lookup"><span data-stu-id="b4702-296">Use the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method to include context information in the log output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string -&gt; unit" Usage="xmlWriterTraceListener.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="b4702-297">要写入的消息。</span><span class="sxs-lookup"><span data-stu-id="b4702-297">The message to write.</span></span></param>
        <summary><span data-ttu-id="b4702-298">将不包含任何其他上下文信息且后跟当前行结束符的原义消息写入文件或流中。</span><span class="sxs-lookup"><span data-stu-id="b4702-298">Writes a verbatim message without any additional context information followed by the current line terminator to the file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4702-299">使用 <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> 方法在日志输出中包含上下文信息。</span><span class="sxs-lookup"><span data-stu-id="b4702-299">Use the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method to include context information in the log output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
