<Type Name="SourceSwitch" FullName="System.Diagnostics.SourceSwitch">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a40c602bbd711e2b57f54e954a8ca80e8d316288" /><Meta Name="ms.sourcegitcommit" Value="9506e50ec7beb4fa30206b9840dc546b035a6600" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/23/2020" /><Meta Name="ms.locfileid" Value="83543782" /></Metadata><TypeSignature Language="C#" Value="public class SourceSwitch : System.Diagnostics.Switch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SourceSwitch extends System.Diagnostics.Switch" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.SourceSwitch" />
  <TypeSignature Language="VB.NET" Value="Public Class SourceSwitch&#xA;Inherits Switch" />
  <TypeSignature Language="C++ CLI" Value="public ref class SourceSwitch : System::Diagnostics::Switch" />
  <TypeSignature Language="F#" Value="type SourceSwitch = class&#xA;    inherit Switch" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Diagnostics.TraceSource" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Diagnostics.Switch</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供多级开关，用于控制跟踪和调试输出，而无需重新编译代码。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.Switch%2A>类的属性 <xref:System.Diagnostics.TraceSource> 是一个 <xref:System.Diagnostics.SourceSwitch> 对象。 <xref:System.Diagnostics.SourceSwitch>类提供了一个 <xref:System.Diagnostics.SourceSwitch.Level%2A> 属性来测试交换机的事件级别。 <xref:System.Diagnostics.SourceSwitch.Level%2A>属性获取或设置开关的 <xref:System.Diagnostics.TraceLevel> 值。  
  
 您可以 <xref:System.Diagnostics.SourceSwitch> 通过应用程序配置文件设置的事件级别，然后 <xref:System.Diagnostics.SourceSwitch> 在您的应用程序中使用配置的级别。 或者，您可以 <xref:System.Diagnostics.SourceSwitch> 在代码中创建并直接设置级别，以检测代码的特定部分。  
  
 若要配置 <xref:System.Diagnostics.SourceSwitch> ，请编辑与应用程序名称对应的配置文件。 在此文件中，可以设置开关的值，也可以清除以前由应用程序设置的所有开关。 应设置配置文件的格式，如以下示例中所示。  
  
```xml  
<switches>  
  <add name="SourceSwitch" value="Verbose"></add>  
</switches>  
```  
  
 开关用于检查是否应传播或忽略跟踪。 每个 <xref:System.Diagnostics.TraceSource> 跟踪方法 <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> 在调用侦听器之前都调用方法。 如果该 <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> 方法返回 `false` ，则将忽略该跟踪并退出跟踪方法。 如果该 <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> 方法返回 `true` ，则跟踪会传递到侦听器。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Diagnostics.SourceSwitch" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SourceSwitch (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SourceSwitch.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SourceSwitch(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.SourceSwitch : string -&gt; System.Diagnostics.SourceSwitch" Usage="new System.Diagnostics.SourceSwitch name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">源的名称。</param>
        <summary>初始化 <see cref="T:System.Diagnostics.SourceSwitch" /> 类的新实例，并且指定源的名称。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `name`参数用于设置属性的值 <xref:System.Diagnostics.Switch.DisplayName%2A> 。  
  
 若要设置的级别 <xref:System.Diagnostics.SourceSwitch> ，请编辑与应用程序名称对应的配置文件。 在此文件中，你可以添加开关并设置其值、删除开关或清除之前由应用程序设置的所有开关。 若要添加源交换机，应设置配置文件的格式，如以下示例中所示。  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="SourceSwitch" value="Verbose" ></add>  
    </switches>  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SourceSwitch (string displayName, string defaultSwitchValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string displayName, string defaultSwitchValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SourceSwitch.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (displayName As String, defaultSwitchValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SourceSwitch(System::String ^ displayName, System::String ^ defaultSwitchValue);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.SourceSwitch : string * string -&gt; System.Diagnostics.SourceSwitch" Usage="new System.Diagnostics.SourceSwitch (displayName, defaultSwitchValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="defaultSwitchValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="displayName">源开关的名称。</param>
        <param name="defaultSwitchValue">开关的默认值。</param>
        <summary>初始化 <see cref="T:System.Diagnostics.SourceSwitch" /> 类的新实例，并且指定源开关的显示名称和默认值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `displayName`参数用于设置属性的值 <xref:System.Diagnostics.Switch.DisplayName%2A> ; `defaultSwitchValue` 参数将另存为字段，并用于 <xref:System.Diagnostics.Switch.Value%2A> 在第一次引用时初始化属性。  
  
> [!NOTE]
>  如果在配置文件中定义了开关并指定了 `value` 特性，则配置文件值优先，并 `defaultSwitchValue` 忽略。  
  
 若要设置的级别 <xref:System.Diagnostics.SourceSwitch> ，请编辑与应用程序名称对应的配置文件。 在此文件中，你可以添加开关并设置其值、删除开关或清除之前由应用程序设置的所有开关。 若要添加源交换机，应设置配置文件的格式，如以下示例中所示。  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="SourceSwitch" value="Verbose" ></add>  
    </switches>  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 下面的代码示例创建一个 <xref:System.Diagnostics.SourceSwitch> 名为 "SourceSwitch" 的，并使用默认值 <xref:System.Diagnostics.SourceLevels.Verbose> 。 此代码示例是为类提供的更大示例的一部分 <xref:System.Diagnostics.TraceSource> 。  
  
 [!code-csharp[System.Diagnostics.TraceSource#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/CS/program.cs#7)]
 [!code-vb[System.Diagnostics.TraceSource#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/VB/program.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Level">
      <MemberSignature Language="C#" Value="public System.Diagnostics.SourceLevels Level { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.SourceLevels Level" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.SourceSwitch.Level" />
      <MemberSignature Language="VB.NET" Value="Public Property Level As SourceLevels" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::SourceLevels Level { System::Diagnostics::SourceLevels get(); void set(System::Diagnostics::SourceLevels value); };" />
      <MemberSignature Language="F#" Value="member this.Level : System.Diagnostics.SourceLevels with get, set" Usage="System.Diagnostics.SourceSwitch.Level" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SourceLevels</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置开关级别。</summary>
        <value><see cref="T:System.Diagnostics.SourceLevels" /> 值之一，表示开关的事件级别。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性从属性中获取其值 <xref:System.Diagnostics.Switch.SwitchSetting%2A> 。 设置此属性还会修改 <xref:System.Diagnostics.Switch.SwitchSetting%2A> 属性。  
  
> [!NOTE]
>  对于扩展性， <xref:System.Diagnostics.SourceSwitch.Level%2A> 可将属性设置为任意整数，而不是限制为 <xref:System.Diagnostics.SourceLevels> 枚举值。  
  
   
  
## Examples  
 下面的代码示例显示 <xref:System.Diagnostics.SourceSwitch.Level%2A> 了源开关的属性的值。 此代码示例是为类提供的更大示例的一部分 <xref:System.Diagnostics.TraceSource> 。  
  
 [!code-csharp[System.Diagnostics.TraceSource#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/CS/program.cs#8)]
 [!code-vb[System.Diagnostics.TraceSource#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/VB/program.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnValueChanged">
      <MemberSignature Language="C#" Value="protected override void OnValueChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValueChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SourceSwitch.OnValueChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnValueChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnValueChanged();" />
      <MemberSignature Language="F#" Value="override this.OnValueChanged : unit -&gt; unit" Usage="sourceSwitch.OnValueChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>当 <see cref="P:System.Diagnostics.Switch.Value" /> 属性的值发生更改时调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.SourceSwitch.OnValueChanged%2A>方法将属性的新值转换 <xref:System.Diagnostics.Switch.Value%2A> 为枚举中的匹配字段的整数表示形式 <xref:System.Diagnostics.SourceLevels> ，然后使用此整数设置 <xref:System.Diagnostics.Switch.SwitchSetting%2A> 属性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Diagnostics.Switch.Value" /> 的新值不是 <see cref="T:System.Diagnostics.SourceLevels" /> 值之一。</exception>
      </Docs>
    </Member>
    <Member MemberName="ShouldTrace">
      <MemberSignature Language="C#" Value="public bool ShouldTrace (System.Diagnostics.TraceEventType eventType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldTrace(valuetype System.Diagnostics.TraceEventType eventType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SourceSwitch.ShouldTrace(System.Diagnostics.TraceEventType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldTrace (eventType As TraceEventType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldTrace(System::Diagnostics::TraceEventType eventType);" />
      <MemberSignature Language="F#" Value="member this.ShouldTrace : System.Diagnostics.TraceEventType -&gt; bool" Usage="sourceSwitch.ShouldTrace eventType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
      </Parameters>
      <Docs>
        <param name="eventType"><see cref="T:System.Diagnostics.TraceEventType" /> 值之一。</param>
        <summary>确定是否应该根据跟踪事件的类型调用跟踪侦听器。</summary>
        <returns>如果应该调用跟踪侦听器，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法由 `Trace` 类中的方法调用， <xref:System.Diagnostics.TraceSource> 以确定是否应调用侦听器来编写跟踪。  
  
> [!NOTE]
>  应用程序代码不应调用此方法;它仅用于类中的方法 <xref:System.Diagnostics.TraceSource> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
