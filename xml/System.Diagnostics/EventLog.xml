<Type Name="EventLog" FullName="System.Diagnostics.EventLog">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5a283854ef9bec7699832c342cb40753e3c6b591" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83947130" /></Metadata><TypeSignature Language="C#" Value="public class EventLog : System.ComponentModel.Component, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventLog extends System.ComponentModel.Component implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.EventLog" />
  <TypeSignature Language="VB.NET" Value="Public Class EventLog&#xA;Inherits Component&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventLog : System::ComponentModel::Component, System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type EventLog = class&#xA;    inherit Component&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0">
      <AttributeName>System.ComponentModel.DefaultEvent("EntryWritten")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.InstallerType(typeof(System.Diagnostics.EventLogInstaller))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.Diagnostics.MonitoringDescription("Represents an event log")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VisualStudio.Install.EventLogInstallableComponentDesigner, Microsoft.VisualStudio, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.InstallerType("System.Diagnostics.EventLogInstaller, System.Configuration.Install, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.InstallerType("System.Diagnostics.EventLogInstaller, System.Configuration.Install, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Diagnostics.MonitoringDescription("EventLogDesc")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.InstallerType("System.Diagnostics.EventLogInstaller, System.Configuration.Install, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6d836-101">提供与 Windows 事件日志的交互。</span><span class="sxs-lookup"><span data-stu-id="6d836-101">Provides interaction with Windows event logs.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-102"><xref:System.Diagnostics.EventLog> 允许你访问或自定义 Windows 事件日志，这些日志记录有关重要软件或硬件事件的信息。</span><span class="sxs-lookup"><span data-stu-id="6d836-102"><xref:System.Diagnostics.EventLog> lets you access or customize Windows event logs, which record information about important software or hardware events.</span></span> <span data-ttu-id="6d836-103">使用 <xref:System.Diagnostics.EventLog>，可以从现有日志读取、将条目写入日志、创建或删除事件源、删除日志以及响应日志条目。</span><span class="sxs-lookup"><span data-stu-id="6d836-103">Using <xref:System.Diagnostics.EventLog>, you can read from existing logs, write entries to logs, create or delete event sources, delete logs, and respond to log entries.</span></span> <span data-ttu-id="6d836-104">你还可以在创建事件源时创建新日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-104">You can also create new logs when creating an event source.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6d836-105">此类型实现 <xref:System.IDisposable> 接口。</span><span class="sxs-lookup"><span data-stu-id="6d836-105">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="6d836-106">在使用完类型后，您应直接或间接释放类型。</span><span class="sxs-lookup"><span data-stu-id="6d836-106">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="6d836-107">若要直接释放类型，请在 `try`/`catch` 块中调用其 <xref:System.IDisposable.Dispose%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="6d836-107">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="6d836-108">若要间接释放类型，请使用 `using`（在 C# 中）或 `Using`（在 Visual Basic 中）等语言构造。</span><span class="sxs-lookup"><span data-stu-id="6d836-108">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="6d836-109">有关详细信息，请参阅 <xref:System.IDisposable> 接口主题中的“使用实现 IDisposable 的对象”一节。</span><span class="sxs-lookup"><span data-stu-id="6d836-109">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="6d836-110">除了提供对单个事件日志及其条目的访问权限外，<xref:System.Diagnostics.EventLog> 类还允许您访问所有事件日志的集合。</span><span class="sxs-lookup"><span data-stu-id="6d836-110">In addition to providing access to individual event logs and their entries, the <xref:System.Diagnostics.EventLog> class lets you access the collection of all event logs.</span></span> <span data-ttu-id="6d836-111">您可以使用 <xref:System.Diagnostics.EventLog> 的 `static` 成员删除日志、获取日志列表、创建或删除源，或确定计算机是否已包含特定的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-111">You can use the `static` members of <xref:System.Diagnostics.EventLog> to delete logs, get log lists, create or delete a source, or determine if a computer already contains a particular source.</span></span>  
  
 <span data-ttu-id="6d836-112">有三个默认的事件日志：应用程序、系统和安全。</span><span class="sxs-lookup"><span data-stu-id="6d836-112">There are three default event logs: Application, System, and Security.</span></span> <span data-ttu-id="6d836-113">安全日志为只读。</span><span class="sxs-lookup"><span data-stu-id="6d836-113">A Security log is read-only.</span></span> <span data-ttu-id="6d836-114">安装的其他应用程序和服务（如 Active Directory）可能具有其他事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-114">Other applications and services you install, such as Active Directory, might have additional event logs.</span></span>  
  
 <span data-ttu-id="6d836-115">使用 <xref:System.Diagnostics.EventLog> 类时，有一些安全注意事项。</span><span class="sxs-lookup"><span data-stu-id="6d836-115">There are security considerations when using the <xref:System.Diagnostics.EventLog> class.</span></span> <span data-ttu-id="6d836-116"><xref:System.Diagnostics.EventLog> 要求 <xref:System.Diagnostics.EventLogPermission> 在 .NET Framework 2.0 及更高版本中执行特定操作的权限，或者 .NET Framework 1.0 和1.1 中的完全信任。</span><span class="sxs-lookup"><span data-stu-id="6d836-116"><xref:System.Diagnostics.EventLog> requires <xref:System.Diagnostics.EventLogPermission> permissions for specific actions in the .NET Framework 2.0 and later versions, or full trust in the .NET Framework 1.0 and 1.1.</span></span> <span data-ttu-id="6d836-117">建议不要将 <xref:System.Diagnostics.EventLogPermission> 授予部分受信任的代码。</span><span class="sxs-lookup"><span data-stu-id="6d836-117">We recommend that <xref:System.Diagnostics.EventLogPermission> not be granted to partially trusted code.</span></span>  <span data-ttu-id="6d836-118">绝不应将任何事件日志对象（包括 <xref:System.Diagnostics.EventLogEntryCollection> 和 <xref:System.Diagnostics.EventLogEntry> 对象）传递给不太受信任的代码。</span><span class="sxs-lookup"><span data-stu-id="6d836-118">You should never pass any event log object, including <xref:System.Diagnostics.EventLogEntryCollection> and <xref:System.Diagnostics.EventLogEntry> objects, to less trusted code.</span></span> <span data-ttu-id="6d836-119">例如，创建 <xref:System.Diagnostics.EventLog> 对象、写入项，然后将 <xref:System.Diagnostics.EventLog> 对象传递给部分受信任的代码可能会导致安全问题，因为读取和写入事件日志的功能允许代码执行一些操作，例如在另一个应用程序的名称中发出事件日志消息。</span><span class="sxs-lookup"><span data-stu-id="6d836-119">For example, creating an <xref:System.Diagnostics.EventLog> object, writing an entry, and then passing the <xref:System.Diagnostics.EventLog> object to partially trusted code can create a security issue, because the ability to read and write to the event log allows code to perform actions such as issuing event log messages in the name of another application.</span></span>  
  
 <span data-ttu-id="6d836-120">从 Windows Vista 开始，用户帐户控制（UAC）决定用户的凭据。</span><span class="sxs-lookup"><span data-stu-id="6d836-120">Starting with Windows Vista, User Account Control (UAC) determines the credentials of a user.</span></span> <span data-ttu-id="6d836-121">如果您是内置的 Administrators 组的成员，将为您分配两个运行时访问令牌：一个标准用户访问令牌和一个管理员访问令牌。</span><span class="sxs-lookup"><span data-stu-id="6d836-121">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="6d836-122">默认情况下，您拥有标准用户角色。</span><span class="sxs-lookup"><span data-stu-id="6d836-122">By default, you are in the standard user role.</span></span> <span data-ttu-id="6d836-123">若要运行访问安全日志的代码，必须首先将你的凭据从标准用户提升为管理员。</span><span class="sxs-lookup"><span data-stu-id="6d836-123">To run the code that accesses the Security log, you must first elevate your credentials from standard user to administrator.</span></span> <span data-ttu-id="6d836-124">你可以在启动应用程序时执行此操作（如果你使用的是鼠标，右键单击应用程序图标），并指示你希望以管理员身份运行。</span><span class="sxs-lookup"><span data-stu-id="6d836-124">You can do this when you start an application by opening the shortcut menu for the application (if you're using a mouse, right-click the application icon) and indicating that you want to run as an administrator.</span></span>  
  
 <span data-ttu-id="6d836-125">您可以使用 <xref:System.Diagnostics.EventLog> 来创建可通过服务器的事件查看器查看的自定义事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-125">You can use <xref:System.Diagnostics.EventLog> to create custom event logs that you can view through the server's Event Viewer.</span></span> <span data-ttu-id="6d836-126">使用 <xref:System.Diagnostics.EventLog.RegisterDisplayName%2A> 方法可在事件查看器中显示事件日志的本地化名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-126">Use the <xref:System.Diagnostics.EventLog.RegisterDisplayName%2A> method to display a localized name for your event log in the Event Viewer.</span></span> <span data-ttu-id="6d836-127">使用 <xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A> 方法可在事件日志达到其最大日志大小时配置其行为。</span><span class="sxs-lookup"><span data-stu-id="6d836-127">Use the <xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A> method to configure the behavior of your event log when it reaches its maximum log size.</span></span>  
  
 <span data-ttu-id="6d836-128">若要从事件日志中读取，请指定日志名称（<xref:System.Diagnostics.EventLog.Log%2A> 属性）和服务器计算机名称（事件日志的<xref:System.Diagnostics.EventLog.MachineName%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="6d836-128">To read from an event log, specify the log name (<xref:System.Diagnostics.EventLog.Log%2A> property) and server computer name (<xref:System.Diagnostics.EventLog.MachineName%2A> property for the event log.</span></span> <span data-ttu-id="6d836-129">如果未指定服务器计算机名称，则假定为本地计算机 "."。</span><span class="sxs-lookup"><span data-stu-id="6d836-129">If you don't specify the server computer name, the local computer, ".", is assumed.</span></span> <span data-ttu-id="6d836-130">不需要指定事件源（<xref:System.Diagnostics.EventLog.Source%2A> 属性），因为只需要将源写入日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-130">It's not necessary to specify the event source (<xref:System.Diagnostics.EventLog.Source%2A> property), because a source is required only for writing to logs.</span></span> <span data-ttu-id="6d836-131"><xref:System.Diagnostics.EventLog.Entries%2A> 属性会自动填充事件日志的条目列表。</span><span class="sxs-lookup"><span data-stu-id="6d836-131">The  <xref:System.Diagnostics.EventLog.Entries%2A> property is automatically populated with the event log's list of entries.</span></span>  
  
 <span data-ttu-id="6d836-132">若要写入事件日志，请指定或创建事件源（<xref:System.Diagnostics.EventLog.Source%2A> 属性）。</span><span class="sxs-lookup"><span data-stu-id="6d836-132">To write to an event log, specify or create an event source (<xref:System.Diagnostics.EventLog.Source%2A> property).</span></span> <span data-ttu-id="6d836-133">您必须具有计算机上的管理凭据才能创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-133">You must have administrative credentials on the computer to create a new event source.</span></span> <span data-ttu-id="6d836-134">事件源会将事件日志中的应用程序注册为条目的有效源。</span><span class="sxs-lookup"><span data-stu-id="6d836-134">The event source registers your application with the event log as a valid source of entries.</span></span> <span data-ttu-id="6d836-135">您可以使用事件源一次只写入一个日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-135">You can use the event source  to write to only one log at a time.</span></span> <span data-ttu-id="6d836-136"><xref:System.Diagnostics.EventLog.Source%2A> 属性可以是任意随机字符串，但该名称必须与计算机上的其他源不同。</span><span class="sxs-lookup"><span data-stu-id="6d836-136">The <xref:System.Diagnostics.EventLog.Source%2A> property can be any random string, but the name must be distinct from other sources on the computer.</span></span> <span data-ttu-id="6d836-137">事件源通常是应用程序的名称或其他标识字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-137">The event source is typically the name of the application or another identifying string.</span></span> <span data-ttu-id="6d836-138">尝试创建重复 <xref:System.Diagnostics.EventLog.Source%2A> 值会引发异常。</span><span class="sxs-lookup"><span data-stu-id="6d836-138">Trying to create a duplicate <xref:System.Diagnostics.EventLog.Source%2A> value throws an exception.</span></span> <span data-ttu-id="6d836-139">不过，单个事件日志可以与多个源关联。</span><span class="sxs-lookup"><span data-stu-id="6d836-139">However, a single event log can be associated with multiple sources.</span></span>  
  
 <span data-ttu-id="6d836-140">如果与 <xref:System.Diagnostics.EventLog> 实例关联的事件日志的事件源不存在，则将创建一个新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-140">If the event source for the event log associated with the <xref:System.Diagnostics.EventLog> instance doesn't exist, a new event source is created.</span></span> <span data-ttu-id="6d836-141">若要在 Windows Vista 和更高版本或 Windows Server 2003 中创建事件源，您必须具有管理凭据。</span><span class="sxs-lookup"><span data-stu-id="6d836-141">To create an event source in Windows Vista and later or Windows Server 2003, you must have administrative credentials.</span></span>  
  
 <span data-ttu-id="6d836-142">此要求是因为必须搜索所有事件日志（包括安全日志），才能确定事件源是否唯一。</span><span class="sxs-lookup"><span data-stu-id="6d836-142">This requirement is because all event logs, including Security logs, must be searched to determine whether the event source is unique.</span></span> <span data-ttu-id="6d836-143">从 Windows Vista 开始，用户没有访问安全日志的权限;因此，会引发 <xref:System.Security.SecurityException>。</span><span class="sxs-lookup"><span data-stu-id="6d836-143">Starting with Windows Vista, users do not have permission to access the Security log; therefore, a <xref:System.Security.SecurityException> is thrown.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6d836-144">创建或删除事件源需要使用已命名的 mutex 同步基础代码。</span><span class="sxs-lookup"><span data-stu-id="6d836-144">Creating or deleting an event source requires synchronization of the underlying code by using a named mutex.</span></span> <span data-ttu-id="6d836-145">如果高度特权的应用程序锁定了已命名的互斥体，则尝试创建或删除事件源会导致应用程序停止响应，直到锁被释放。</span><span class="sxs-lookup"><span data-stu-id="6d836-145">If a highly privileged application locks the named mutex, trying to create or delete an event source causes the application to stop responding until the lock is released.</span></span> <span data-ttu-id="6d836-146">若要帮助防止此问题，请不要向不受信任的代码授予 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> 权限。</span><span class="sxs-lookup"><span data-stu-id="6d836-146">To help prevent this problem, never grant <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> permission to untrusted code.</span></span> <span data-ttu-id="6d836-147">此外，<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> 权限可能会允许绕过其他权限，只应授予高度受信任的代码。</span><span class="sxs-lookup"><span data-stu-id="6d836-147">In addition, <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> permission potentially allows other permissions to be bypassed and should only be granted to highly trusted code.</span></span>  
  
 <span data-ttu-id="6d836-148">应用程序和服务应写入到应用程序日志或自定义日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-148">Applications and services should write to the Application log or to a custom log.</span></span> <span data-ttu-id="6d836-149">设备驱动程序应该写入系统日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-149">Device drivers should write to the System log.</span></span> <span data-ttu-id="6d836-150">如果未显式设置 <xref:System.Diagnostics.EventLog.Log%2A> 属性，则事件日志会默认为应用程序日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-150">If you do not explicitly set the <xref:System.Diagnostics.EventLog.Log%2A> property, the event log defaults to the Application log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-151">没有任何内容可以保护应用程序不会写入任何已注册的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-151">There is nothing to protect an application from writing as any registered source.</span></span>  <span data-ttu-id="6d836-152">如果向应用程序授予 <xref:System.Diagnostics.EventLogPermissionAccess.Write> 的权限，则它可以为在计算机上注册的任何有效源写入事件。</span><span class="sxs-lookup"><span data-stu-id="6d836-152">If an application is granted <xref:System.Diagnostics.EventLogPermissionAccess.Write> permission, it can write events for any valid source registered on the computer.</span></span>  
  
 <span data-ttu-id="6d836-153">使用 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 和 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 方法可将事件写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-153">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> and <xref:System.Diagnostics.EventLog.WriteEntry%2A> methods to write events to an event log.</span></span> <span data-ttu-id="6d836-154">您必须指定事件源以写入事件;在写入包含源的第一个条目之前，必须创建并配置事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-154">You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="6d836-155">在应用程序安装过程中创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-155">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="6d836-156">这样，操作系统就可以刷新其已注册的事件源的列表及其配置。</span><span class="sxs-lookup"><span data-stu-id="6d836-156">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="6d836-157">如果操作系统未刷新其事件源列表，而你尝试使用新源写入事件，则写入操作将失败。</span><span class="sxs-lookup"><span data-stu-id="6d836-157">If the operating system hasn't refreshed its list of event sources, and you try to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="6d836-158">您可以通过使用 <xref:System.Diagnostics.EventLogInstaller> 对象或 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法来配置新源。</span><span class="sxs-lookup"><span data-stu-id="6d836-158">You can configure a new source by using an <xref:System.Diagnostics.EventLogInstaller> object or the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="6d836-159">您必须具有计算机上的管理凭据才能创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-159">You must have administrative credentials on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="6d836-160">每个源一次只能写入一个事件日志;但是，应用程序可以使用多个源来写入多个事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-160">Each source can write to only one event log at a time; however, your application can use multiple sources to write to multiple event logs.</span></span> <span data-ttu-id="6d836-161">例如，你的应用程序可能需要为不同的事件日志或不同的资源文件配置多个源。</span><span class="sxs-lookup"><span data-stu-id="6d836-161">For example, your application might require multiple sources configured for different event logs or different resource files.</span></span> <span data-ttu-id="6d836-162">若要更改现有源的配置详细信息，必须删除该源，并使用新配置创建它。</span><span class="sxs-lookup"><span data-stu-id="6d836-162">To change the configuration details of an existing source, you must delete the source and then create it with the new configuration.</span></span> <span data-ttu-id="6d836-163">如果其他应用程序或组件使用现有源，请使用更新的配置创建新的源，而不是删除现有源。</span><span class="sxs-lookup"><span data-stu-id="6d836-163">If other applications or components use the existing source, create a new source with the updated configuration instead of deleting the existing source.</span></span>  
  
 <span data-ttu-id="6d836-164">可以向事件类别和消息字符串的本地化资源注册事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-164">You can register the event source with localized resources for your event category and message strings.</span></span> <span data-ttu-id="6d836-165">应用程序可以通过使用资源标识符而不是指定实际的字符串值来编写事件日志项。</span><span class="sxs-lookup"><span data-stu-id="6d836-165">Your application can write event log entries by using resource identifiers instead of specifying the actual string values.</span></span> <span data-ttu-id="6d836-166">有关配置源和资源文件的详细信息，请参阅 <xref:System.Diagnostics.EventLogInstaller> 和 <xref:System.Diagnostics.EventSourceCreationData> 类。</span><span class="sxs-lookup"><span data-stu-id="6d836-166">Refer to the <xref:System.Diagnostics.EventLogInstaller> and <xref:System.Diagnostics.EventSourceCreationData> classes for more information about configuring your source with resource files.</span></span>  
  
 <span data-ttu-id="6d836-167">如果你的应用程序将字符串值直接写入事件日志，则无需设置源的资源文件属性。</span><span class="sxs-lookup"><span data-stu-id="6d836-167">If your application writes string values directly to the event log, you do not have to set the resource file properties for the source.</span></span> <span data-ttu-id="6d836-168">源必须配置为写入本地化项或写入直接字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-168">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="6d836-169">如果应用程序使用资源标识符和字符串值写入条目，则必须注册两个不同的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-169">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="6d836-170">例如，将一个源配置为资源文件，然后在 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 方法中使用该源，将使用资源标识符的项写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-170">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="6d836-171">然后，创建一个没有资源文件的不同源，并在 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 方法中使用该源，使用该源直接向事件日志写入字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-171">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
 <span data-ttu-id="6d836-172">写入事件时，必须至少为消息字符串指定消息字符串或资源标识符。</span><span class="sxs-lookup"><span data-stu-id="6d836-172">When writing events, you must at least specify either a message string or the resource identifier for a message string.</span></span> <span data-ttu-id="6d836-173">其他事件属性是可选的。</span><span class="sxs-lookup"><span data-stu-id="6d836-173">Other event properties are optional.</span></span> <span data-ttu-id="6d836-174">可选事件设置的示例包括以下各项：</span><span class="sxs-lookup"><span data-stu-id="6d836-174">Examples of optional event settings include the following:</span></span>  
  
-   <span data-ttu-id="6d836-175">可以设置 <xref:System.Diagnostics.EventLogEntryType>，以指定事件查看器为项显示的图标。</span><span class="sxs-lookup"><span data-stu-id="6d836-175">You can set the <xref:System.Diagnostics.EventLogEntryType> to specify the icon that the Event Viewer displays for the entry.</span></span>  
  
-   <span data-ttu-id="6d836-176">如果你的应用程序使用类别来筛选事件，则可以为事件指定类别标识符。</span><span class="sxs-lookup"><span data-stu-id="6d836-176">You can specify a category identifier for the event, if your application uses categories for filtering the events.</span></span>  
  
-   <span data-ttu-id="6d836-177">如果要将其他信息与给定事件关联，可以将二进制数据附加到事件条目。</span><span class="sxs-lookup"><span data-stu-id="6d836-177">You can attach binary data to your event entry if you want to associate additional information with a given event.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6d836-178">事件日志记录会消耗磁盘空间、处理器时间和其他系统资源。</span><span class="sxs-lookup"><span data-stu-id="6d836-178">Event logging consumes disk space, processor time, and other system resources.</span></span> <span data-ttu-id="6d836-179">只记录重要信息非常重要。</span><span class="sxs-lookup"><span data-stu-id="6d836-179">It is important to log only essential information.</span></span> <span data-ttu-id="6d836-180">建议你将事件日志调用放置在错误路径中，而不是放在主代码路径中，因此它们不会对性能产生负面影响。</span><span class="sxs-lookup"><span data-stu-id="6d836-180">We recommend that you place event log calls in an error path, rather than in the main code path, so they don't adversely affect performance.</span></span>  
  
 <span data-ttu-id="6d836-181">有关 <xref:System.Diagnostics.EventLog>实例的初始属性值的列表，请参阅 <xref:System.Diagnostics.EventLog.%23ctor%2A> 构造函数。</span><span class="sxs-lookup"><span data-stu-id="6d836-181">For a list of initial property values for an instance of <xref:System.Diagnostics.EventLog>, see the <xref:System.Diagnostics.EventLog.%23ctor%2A> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d836-182">下面的示例创建事件源 `MySource` （如果它尚不存在），并将项写入事件日志 `MyNewLog`。</span><span class="sxs-lookup"><span data-stu-id="6d836-182">The following example creates the event source `MySource` if it doesn't already exist, and writes an entry to the event log `MyNewLog`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-183">从 Windows Vista 开始，你必须以管理员身份运行此应用程序。</span><span class="sxs-lookup"><span data-stu-id="6d836-183">Starting with Windows Vista, you must run this application as an administrator.</span></span>  
  
 [!code-cpp[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.EventLogInstaller" />
    <altmember cref="T:System.Diagnostics.EventLogEntry" />
    <altmember cref="T:System.Diagnostics.EntryWrittenEventArgs" />
    <altmember cref="T:System.ServiceProcess.ServiceBase" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6d836-184">初始化 <see cref="T:System.Diagnostics.EventLog" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="6d836-184">Initializes a new instance of the <see cref="T:System.Diagnostics.EventLog" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLog();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6d836-185">初始化 <see cref="T:System.Diagnostics.EventLog" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="6d836-185">Initializes a new instance of the <see cref="T:System.Diagnostics.EventLog" /> class.</span></span> <span data-ttu-id="6d836-186">不将该实例与任何日志关联。</span><span class="sxs-lookup"><span data-stu-id="6d836-186">Does not associate the instance with any log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-187">在调用 <xref:System.Diagnostics.EventLog.WriteEntry%2A>之前，指定 <xref:System.Diagnostics.EventLog> 实例的 <xref:System.Diagnostics.EventLog.Source%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="6d836-187">Before calling <xref:System.Diagnostics.EventLog.WriteEntry%2A>, specify the <xref:System.Diagnostics.EventLog.Source%2A> property of the <xref:System.Diagnostics.EventLog> instance.</span></span> <span data-ttu-id="6d836-188">如果只是从日志中读取 <xref:System.Diagnostics.EventLog.Entries%2A>，则可以另外指定 "<xref:System.Diagnostics.EventLog.Log%2A>" 和 "<xref:System.Diagnostics.EventLog.MachineName%2A>" 属性。</span><span class="sxs-lookup"><span data-stu-id="6d836-188">If you are only reading <xref:System.Diagnostics.EventLog.Entries%2A> from the log, you can alternatively specify only the <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.MachineName%2A> properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-189">如果未指定 <xref:System.Diagnostics.EventLog.MachineName%2A>，则假定使用本地计算机（"."）。</span><span class="sxs-lookup"><span data-stu-id="6d836-189">If you do not specify a <xref:System.Diagnostics.EventLog.MachineName%2A>, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="6d836-190">下表显示了 <xref:System.Diagnostics.EventLog>实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="6d836-190">The following table shows initial property values for an instance of <xref:System.Diagnostics.EventLog>.</span></span>  
  
|<span data-ttu-id="6d836-191">属性</span><span class="sxs-lookup"><span data-stu-id="6d836-191">Property</span></span>|<span data-ttu-id="6d836-192">初始值</span><span class="sxs-lookup"><span data-stu-id="6d836-192">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Diagnostics.EventLog.Source%2A>|<span data-ttu-id="6d836-193">空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="6d836-193">An empty string ("").</span></span>|  
|<xref:System.Diagnostics.EventLog.Log%2A>|<span data-ttu-id="6d836-194">空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="6d836-194">An empty string ("").</span></span>|  
|<xref:System.Diagnostics.EventLog.MachineName%2A>|<span data-ttu-id="6d836-195">本地计算机（"."）。</span><span class="sxs-lookup"><span data-stu-id="6d836-195">The local computer (".").</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="6d836-196">下面的示例创建源 `MySource` （如果它尚不存在），并将项写入事件日志 `MyNewLog`。</span><span class="sxs-lookup"><span data-stu-id="6d836-196">The following example creates the source `MySource` if it does not already exist, and writes an entry to the event log `MyNewLog`.</span></span>  
  
 [!code-cpp[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEntry" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
        <altmember cref="T:System.Diagnostics.EventLogEntry" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLog (string logName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string logName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLog(System::String ^ logName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.EventLog : string -&gt; System.Diagnostics.EventLog" Usage="new System.Diagnostics.EventLog logName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logName"><span data-ttu-id="6d836-197">本地计算机上日志的名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-197">The name of the log on the local computer.</span></span></param>
        <summary><span data-ttu-id="6d836-198">初始化 <see cref="T:System.Diagnostics.EventLog" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="6d836-198">Initializes a new instance of the <see cref="T:System.Diagnostics.EventLog" /> class.</span></span> <span data-ttu-id="6d836-199">将该实例与本地计算机上的日志关联。</span><span class="sxs-lookup"><span data-stu-id="6d836-199">Associates the instance with a log on the local computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-200">此重载将 <xref:System.Diagnostics.EventLog.Log%2A> 属性设置为 `logName` 参数。</span><span class="sxs-lookup"><span data-stu-id="6d836-200">This overload sets the <xref:System.Diagnostics.EventLog.Log%2A> property to the `logName` parameter.</span></span> <span data-ttu-id="6d836-201">在调用 <xref:System.Diagnostics.EventLog.WriteEntry%2A>之前，指定 <xref:System.Diagnostics.EventLog> 实例的 <xref:System.Diagnostics.EventLog.Source%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="6d836-201">Before calling <xref:System.Diagnostics.EventLog.WriteEntry%2A>, specify the <xref:System.Diagnostics.EventLog.Source%2A> property of the <xref:System.Diagnostics.EventLog> instance.</span></span> <span data-ttu-id="6d836-202">如果只是从日志中读取 <xref:System.Diagnostics.EventLog.Entries%2A>，则可以另外指定 "<xref:System.Diagnostics.EventLog.Log%2A>" 和 "<xref:System.Diagnostics.EventLog.MachineName%2A>" 属性。</span><span class="sxs-lookup"><span data-stu-id="6d836-202">If you are only reading <xref:System.Diagnostics.EventLog.Entries%2A> from the log, you can alternatively specify only the <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.MachineName%2A> properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-203">如果未指定 <xref:System.Diagnostics.EventLog.MachineName%2A>，则假定使用本地计算机（"."）。</span><span class="sxs-lookup"><span data-stu-id="6d836-203">If you do not specify a <xref:System.Diagnostics.EventLog.MachineName%2A>, the local computer (".") is assumed.</span></span> <span data-ttu-id="6d836-204">构造函数的此重载指定 <xref:System.Diagnostics.EventLog.Log%2A> 属性，但你可以在读取 <xref:System.Diagnostics.EventLog.Entries%2A> 属性之前更改此重载。</span><span class="sxs-lookup"><span data-stu-id="6d836-204">This overload of the constructor specifies the <xref:System.Diagnostics.EventLog.Log%2A> property, but you can change this before reading the <xref:System.Diagnostics.EventLog.Entries%2A> property.</span></span>  
  
 <span data-ttu-id="6d836-205">如果在 <xref:System.Diagnostics.EventLog.Source%2A> 属性中指定的源对于计算机上的其他源是唯一的，则对 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 的后续调用将创建具有指定名称的日志（如果它尚不存在）。</span><span class="sxs-lookup"><span data-stu-id="6d836-205">If the source you specify in the <xref:System.Diagnostics.EventLog.Source%2A> property is unique from other sources on the computer, a subsequent call to <xref:System.Diagnostics.EventLog.WriteEntry%2A> creates a log with the specified name, if it does not already exist.</span></span>  
  
 <span data-ttu-id="6d836-206">下表显示了 <xref:System.Diagnostics.EventLog>实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="6d836-206">The following table shows initial property values for an instance of <xref:System.Diagnostics.EventLog>.</span></span>  
  
|<span data-ttu-id="6d836-207">属性</span><span class="sxs-lookup"><span data-stu-id="6d836-207">Property</span></span>|<span data-ttu-id="6d836-208">初始值</span><span class="sxs-lookup"><span data-stu-id="6d836-208">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Diagnostics.EventLog.Source%2A>|<span data-ttu-id="6d836-209">空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="6d836-209">An empty string ("").</span></span>|  
|<xref:System.Diagnostics.EventLog.Log%2A>|<span data-ttu-id="6d836-210">`logName` 参数。</span><span class="sxs-lookup"><span data-stu-id="6d836-210">The `logName` parameter.</span></span>|  
|<xref:System.Diagnostics.EventLog.MachineName%2A>|<span data-ttu-id="6d836-211">本地计算机（"."）。</span><span class="sxs-lookup"><span data-stu-id="6d836-211">The local computer (".").</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="6d836-212">下面的示例读取本地计算机上的事件日志 "myNewLog" 中的条目。</span><span class="sxs-lookup"><span data-stu-id="6d836-212">The following example reads entries in the event log, "myNewLog", on the local computer.</span></span>  
  
 [!code-cpp[Classic EventLog.EventLog1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.EventLog1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.EventLog1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.EventLog1 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.EventLog1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.EventLog1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6d836-213">日志名称为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-213">The log name is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d836-214">日志名称无效。</span><span class="sxs-lookup"><span data-stu-id="6d836-214">The log name is invalid.</span></span></exception>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEntry" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
        <altmember cref="T:System.Diagnostics.EventLogEntry" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLog (string logName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string logName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logName As String, machineName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLog(System::String ^ logName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.EventLog : string * string -&gt; System.Diagnostics.EventLog" Usage="new System.Diagnostics.EventLog (logName, machineName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logName"><span data-ttu-id="6d836-215">指定算机上日志的名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-215">The name of the log on the specified computer.</span></span></param>
        <param name="machineName"><span data-ttu-id="6d836-216">日志所在的计算机。</span><span class="sxs-lookup"><span data-stu-id="6d836-216">The computer on which the log exists.</span></span></param>
        <summary><span data-ttu-id="6d836-217">初始化 <see cref="T:System.Diagnostics.EventLog" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="6d836-217">Initializes a new instance of the <see cref="T:System.Diagnostics.EventLog" /> class.</span></span> <span data-ttu-id="6d836-218">将该实例与指定计算机上的日志关联。</span><span class="sxs-lookup"><span data-stu-id="6d836-218">Associates the instance with a log on the specified computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-219">此重载将 <xref:System.Diagnostics.EventLog.Log%2A> 属性设置为 `logName` 参数，并将 <xref:System.Diagnostics.EventLog.MachineName%2A> 属性设置为 `machineName` 参数。</span><span class="sxs-lookup"><span data-stu-id="6d836-219">This overload sets the <xref:System.Diagnostics.EventLog.Log%2A> property to the `logName` parameter and the <xref:System.Diagnostics.EventLog.MachineName%2A> property to the `machineName` parameter.</span></span> <span data-ttu-id="6d836-220">在调用 <xref:System.Diagnostics.EventLog.WriteEntry%2A>之前，指定 <xref:System.Diagnostics.EventLog>的 <xref:System.Diagnostics.EventLog.Source%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="6d836-220">Before calling <xref:System.Diagnostics.EventLog.WriteEntry%2A>, specify the <xref:System.Diagnostics.EventLog.Source%2A> property of the <xref:System.Diagnostics.EventLog>.</span></span> <span data-ttu-id="6d836-221">如果只是从日志中读取 <xref:System.Diagnostics.EventLog.Entries%2A>，则可以另外指定 "<xref:System.Diagnostics.EventLog.Log%2A>" 和 "<xref:System.Diagnostics.EventLog.MachineName%2A>" 属性。</span><span class="sxs-lookup"><span data-stu-id="6d836-221">If you are only reading <xref:System.Diagnostics.EventLog.Entries%2A> from the log, you can alternatively specify only the <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.MachineName%2A> properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-222">构造函数的此重载指定 <xref:System.Diagnostics.EventLog.Log%2A> 和 <xref:System.Diagnostics.EventLog.MachineName%2A> 属性，但你可以在读取 <xref:System.Diagnostics.EventLog.Entries%2A> 属性之前更改。</span><span class="sxs-lookup"><span data-stu-id="6d836-222">This overload of the constructor specifies the <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.MachineName%2A> properties, but you can change either before reading the <xref:System.Diagnostics.EventLog.Entries%2A> property.</span></span>  
  
 <span data-ttu-id="6d836-223">下表显示了 <xref:System.Diagnostics.EventLog>实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="6d836-223">The following table shows initial property values for an instance of <xref:System.Diagnostics.EventLog>.</span></span>  
  
|<span data-ttu-id="6d836-224">属性</span><span class="sxs-lookup"><span data-stu-id="6d836-224">Property</span></span>|<span data-ttu-id="6d836-225">初始值</span><span class="sxs-lookup"><span data-stu-id="6d836-225">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Diagnostics.EventLog.Source%2A>|<span data-ttu-id="6d836-226">空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="6d836-226">An empty string ("").</span></span>|  
|<xref:System.Diagnostics.EventLog.Log%2A>|<span data-ttu-id="6d836-227">`logName` 参数。</span><span class="sxs-lookup"><span data-stu-id="6d836-227">The `logName` parameter.</span></span>|  
|<xref:System.Diagnostics.EventLog.MachineName%2A>|<span data-ttu-id="6d836-228">`machineName` 参数。</span><span class="sxs-lookup"><span data-stu-id="6d836-228">The `machineName` parameter.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="6d836-229">下面的示例读取计算机 "myServer" 上的事件日志 "myNewLog" 中的条目。</span><span class="sxs-lookup"><span data-stu-id="6d836-229">The following example reads entries in the event log, "myNewLog", on the computer "myServer".</span></span>  
  
 [!code-cpp[Classic EventLog.EventLog2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.EventLog2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.EventLog2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.EventLog2 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.EventLog2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.EventLog2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6d836-230">日志名称为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-230">The log name is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d836-231">日志名称无效。</span><span class="sxs-lookup"><span data-stu-id="6d836-231">The log name is invalid.</span></span>  
  
 <span data-ttu-id="6d836-232">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-232">-or-</span></span>  
  
 <span data-ttu-id="6d836-233">计算机名称无效。</span><span class="sxs-lookup"><span data-stu-id="6d836-233">The computer name is invalid.</span></span></exception>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEntry" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
        <altmember cref="T:System.Diagnostics.EventLogEntry" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLog (string logName, string machineName, string source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string logName, string machineName, string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logName As String, machineName As String, source As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLog(System::String ^ logName, System::String ^ machineName, System::String ^ source);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.EventLog : string * string * string -&gt; System.Diagnostics.EventLog" Usage="new System.Diagnostics.EventLog (logName, machineName, source)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logName"><span data-ttu-id="6d836-234">指定的计算机上日志的名称</span><span class="sxs-lookup"><span data-stu-id="6d836-234">The name of the log on the specified computer</span></span></param>
        <param name="machineName"><span data-ttu-id="6d836-235">日志所在的计算机。</span><span class="sxs-lookup"><span data-stu-id="6d836-235">The computer on which the log exists.</span></span></param>
        <param name="source"><span data-ttu-id="6d836-236">事件日志项的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-236">The source of event log entries.</span></span></param>
        <summary><span data-ttu-id="6d836-237">初始化 <see cref="T:System.Diagnostics.EventLog" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="6d836-237">Initializes a new instance of the <see cref="T:System.Diagnostics.EventLog" /> class.</span></span> <span data-ttu-id="6d836-238">将实例与指定的计算机上的日志关联，并为 <see cref="T:System.Diagnostics.EventLog" /> 实例创建或分配指定的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-238">Associates the instance with a log on the specified computer and creates or assigns the specified source to the <see cref="T:System.Diagnostics.EventLog" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-239">此构造函数将 <xref:System.Diagnostics.EventLog.Log%2A> 属性设置为 `logName` 参数，将 <xref:System.Diagnostics.EventLog.MachineName%2A> 属性设置为 `machineName` 参数，将 <xref:System.Diagnostics.EventLog.Source%2A> 属性设置为 `source` 参数。</span><span class="sxs-lookup"><span data-stu-id="6d836-239">This constructor sets the <xref:System.Diagnostics.EventLog.Log%2A> property to the `logName` parameter, the <xref:System.Diagnostics.EventLog.MachineName%2A> property to the `machineName` parameter, and the <xref:System.Diagnostics.EventLog.Source%2A> property to the `source` parameter.</span></span> <span data-ttu-id="6d836-240">写入事件日志时需要 <xref:System.Diagnostics.EventLog.Source%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="6d836-240">The <xref:System.Diagnostics.EventLog.Source%2A> property is required when writing to an event log.</span></span> <span data-ttu-id="6d836-241">但是，如果只是从事件日志中读取，则仅需要 <xref:System.Diagnostics.EventLog.Log%2A> 和 <xref:System.Diagnostics.EventLog.MachineName%2A> 属性（只要服务器上的事件日志已经有一个与其关联的源）。</span><span class="sxs-lookup"><span data-stu-id="6d836-241">However, if you are only reading from an event log, only the <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.MachineName%2A> properties are required (as long as the event log on the server has a source already associated with it).</span></span> <span data-ttu-id="6d836-242">如果仅从事件日志中读取，则构造函数的另一个重载可能满足要求。</span><span class="sxs-lookup"><span data-stu-id="6d836-242">If you are only reading from the event log, another overload of the constructor might suffice.</span></span>  
  
 <span data-ttu-id="6d836-243">下表显示了 <xref:System.Diagnostics.EventLog>实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="6d836-243">The following table shows initial property values for an instance of <xref:System.Diagnostics.EventLog>.</span></span>  
  
|<span data-ttu-id="6d836-244">属性</span><span class="sxs-lookup"><span data-stu-id="6d836-244">Property</span></span>|<span data-ttu-id="6d836-245">初始值</span><span class="sxs-lookup"><span data-stu-id="6d836-245">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Diagnostics.EventLog.Source%2A>|<span data-ttu-id="6d836-246">`source` 参数。</span><span class="sxs-lookup"><span data-stu-id="6d836-246">The `source` parameter.</span></span>|  
|<xref:System.Diagnostics.EventLog.Log%2A>|<span data-ttu-id="6d836-247">`logName` 参数。</span><span class="sxs-lookup"><span data-stu-id="6d836-247">The `logName` parameter.</span></span>|  
|<xref:System.Diagnostics.EventLog.MachineName%2A>|<span data-ttu-id="6d836-248">`machineName` 参数。</span><span class="sxs-lookup"><span data-stu-id="6d836-248">The `machineName` parameter.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="6d836-249">下面的示例使用源 "MySource" 将条目写入到本地计算机上的事件日志 "MyNewLog"。</span><span class="sxs-lookup"><span data-stu-id="6d836-249">The following example writes an entry to an event log, "MyNewLog", on the local computer, using the source "MySource".</span></span>  
  
 [!code-cpp[Classic EventLog.EventLog3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.EventLog3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.EventLog3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.EventLog3 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.EventLog3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.EventLog3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6d836-250">日志名称为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-250">The log name is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d836-251">日志名称无效。</span><span class="sxs-lookup"><span data-stu-id="6d836-251">The log name is invalid.</span></span>  
  
 <span data-ttu-id="6d836-252">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-252">-or-</span></span>  
  
 <span data-ttu-id="6d836-253">计算机名称无效。</span><span class="sxs-lookup"><span data-stu-id="6d836-253">The computer name is invalid.</span></span></exception>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEntry" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
        <altmember cref="T:System.Diagnostics.EventLogEntry" />
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="eventLog.BeginInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6d836-254">开始初始化用于窗体或由其他组件使用的 <see cref="T:System.Diagnostics.EventLog" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-254">Begins the initialization of an <see cref="T:System.Diagnostics.EventLog" /> used on a form or used by another component.</span></span> <span data-ttu-id="6d836-255">此初始化在运行时发生。</span><span class="sxs-lookup"><span data-stu-id="6d836-255">The initialization occurs at runtime.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-256">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] 设计环境使用此方法来启动窗体上使用或由另一个组件使用的组件的初始化。</span><span class="sxs-lookup"><span data-stu-id="6d836-256">The [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] design environment uses this method to start the initialization of a component used on a form or by another component.</span></span> <span data-ttu-id="6d836-257"><xref:System.Diagnostics.EventLog.EndInit%2A> 方法结束初始化。</span><span class="sxs-lookup"><span data-stu-id="6d836-257">The <xref:System.Diagnostics.EventLog.EndInit%2A> method ends the initialization.</span></span> <span data-ttu-id="6d836-258">使用 <xref:System.Diagnostics.EventLog.BeginInit%2A> 和 <xref:System.Diagnostics.EventLog.EndInit%2A> 方法可防止控件在完全初始化之前被使用。</span><span class="sxs-lookup"><span data-stu-id="6d836-258">Using the <xref:System.Diagnostics.EventLog.BeginInit%2A> and <xref:System.Diagnostics.EventLog.EndInit%2A> methods prevent the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6d836-259"><see cref="T:System.Diagnostics.EventLog" /> 已初始化完毕。</span><span class="sxs-lookup"><span data-stu-id="6d836-259"><see cref="T:System.Diagnostics.EventLog" /> is already initialized.</span></span></exception>
        <altmember cref="M:System.Diagnostics.EventLog.EndInit" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="eventLog.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6d836-260">从事件日志中移除所有项。</span><span class="sxs-lookup"><span data-stu-id="6d836-260">Removes all entries from the event log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-261">使用最大大小设置事件日志，以确定可以包含的条目数。</span><span class="sxs-lookup"><span data-stu-id="6d836-261">Event logs are set with a maximum size that determines how many entries they can contain.</span></span> <span data-ttu-id="6d836-262">当事件日志已满时，它会停止记录新的事件信息或开始覆盖以前的条目。</span><span class="sxs-lookup"><span data-stu-id="6d836-262">When an event log is full, it stops recording new event information or begins to overwrite earlier entries.</span></span> <span data-ttu-id="6d836-263">如果事件记录停止，则可以使用此方法清除现有条目的日志，并使其重新开始记录事件。</span><span class="sxs-lookup"><span data-stu-id="6d836-263">If event recording stops, you can use this method to clear the log of existing entries and allow it to start recording events again.</span></span> <span data-ttu-id="6d836-264">您必须对日志所在的计算机具有管理员权限，才能清除事件日志条目。</span><span class="sxs-lookup"><span data-stu-id="6d836-264">You must have administrator permissions to the computer on which the log resides to clear event log entries.</span></span>  
  
 <span data-ttu-id="6d836-265"><xref:System.Diagnostics.EventLog.Clear%2A> 关闭事件日志，释放事件句柄，检索新的读取和写入句柄，并重新打开事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-265"><xref:System.Diagnostics.EventLog.Clear%2A> closes the event log, releases the event handles, retrieves new read and write handles, and reopens the event log.</span></span> <span data-ttu-id="6d836-266">对方法的调用后收到的事件与现有事件不会被清除。</span><span class="sxs-lookup"><span data-stu-id="6d836-266">Events received after the call to the method are not cleared along with the existing events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d836-267">下面的示例将清除事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-267">The following example clears an event log.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="6d836-268">由于应用程序、系统、安全和其他非自定义日志可能包含重要信息，请确保在执行此示例代码之前指定自定义日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-268">Because Application, System, Security, and other non-custom logs can contain crucial information; be sure to specify a custom log before executing this example code.</span></span> <span data-ttu-id="6d836-269">此示例将删除自定义日志 `myNewLog`。</span><span class="sxs-lookup"><span data-stu-id="6d836-269">This example deletes the custom log `myNewLog`.</span></span>  
  
 [!code-cpp[Classic EventLog.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="6d836-270">未成功清除事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-270">The event log was not cleared successfully.</span></span>  
  
 <span data-ttu-id="6d836-271">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-271">-or-</span></span>  
  
 <span data-ttu-id="6d836-272">无法打开日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-272">The log cannot be opened.</span></span> <span data-ttu-id="6d836-273">一个 Windows 错误代码不可用。</span><span class="sxs-lookup"><span data-stu-id="6d836-273">A Windows error code is not available.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d836-274">没有为 <see cref="P:System.Diagnostics.EventLog.Log" /> 属性指定值。</span><span class="sxs-lookup"><span data-stu-id="6d836-274">A value is not specified for the <see cref="P:System.Diagnostics.EventLog.Log" /> property.</span></span> <span data-ttu-id="6d836-275">确保日志名称不是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-275">Make sure the log name is not an empty string.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6d836-276">该日志不存在。</span><span class="sxs-lookup"><span data-stu-id="6d836-276">The log does not exist.</span></span></exception>
        <altmember cref="M:System.Diagnostics.EventLog.Close" />
        <altmember cref="M:System.Diagnostics.EventLog.Delete(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="eventLog.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6d836-277">关闭事件日志并释放读写句柄。</span><span class="sxs-lookup"><span data-stu-id="6d836-277">Closes the event log and releases read and write handles.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-278"><xref:System.Diagnostics.EventLog.Close%2A> 方法由受保护的 <xref:System.ComponentModel.Component.Dispose%2A> 方法调用。</span><span class="sxs-lookup"><span data-stu-id="6d836-278">The <xref:System.Diagnostics.EventLog.Close%2A> method is called by the protected <xref:System.ComponentModel.Component.Dispose%2A> method.</span></span> <span data-ttu-id="6d836-279">在调用 <xref:System.ComponentModel.Component.Dispose%2A>之前，无需调用 <xref:System.Diagnostics.EventLog.Close%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d836-279">You do not need to invoke <xref:System.Diagnostics.EventLog.Close%2A> before calling <xref:System.ComponentModel.Component.Dispose%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="6d836-280">事件日志的读句柄或写句柄未成功释放。</span><span class="sxs-lookup"><span data-stu-id="6d836-280">The event log's read handle or write handle was not released successfully.</span></span></exception>
        <altmember cref="M:System.Diagnostics.EventLog.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.Clear" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateEventSource">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6d836-281">建立一个能够将事件信息写入到系统的特定日志中的应用程序。</span><span class="sxs-lookup"><span data-stu-id="6d836-281">Establishes an application as able to write event information to a particular log on the system.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateEventSource">
      <MemberSignature Language="C#" Value="public static void CreateEventSource (System.Diagnostics.EventSourceCreationData sourceData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateEventSource(class System.Diagnostics.EventSourceCreationData sourceData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.CreateEventSource(System.Diagnostics.EventSourceCreationData)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CreateEventSource (sourceData As EventSourceCreationData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateEventSource(System::Diagnostics::EventSourceCreationData ^ sourceData);" />
      <MemberSignature Language="F#" Value="static member CreateEventSource : System.Diagnostics.EventSourceCreationData -&gt; unit" Usage="System.Diagnostics.EventLog.CreateEventSource sourceData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoNotSupported("remote machine is not supported")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceData" Type="System.Diagnostics.EventSourceCreationData" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="sourceData"><span data-ttu-id="6d836-282">事件源及其目标事件日志的配置属性。</span><span class="sxs-lookup"><span data-stu-id="6d836-282">The configuration properties for the event source and its target event log.</span></span></param>
        <summary><span data-ttu-id="6d836-283">通过使用为该事件源和对应的事件日志指定的配置属性，建立一个写入本地化事件消息的有效事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-283">Establishes a valid event source for writing localized event messages, using the specified configuration properties for the event source and the corresponding event log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-284">此重载用于配置将条目写入到本地计算机或远程计算机上的事件日志的新源。</span><span class="sxs-lookup"><span data-stu-id="6d836-284">Use this overload to configure a new source for writing entries to an event log on the local computer or a remote computer.</span></span> <span data-ttu-id="6d836-285">不需要使用此方法从事件日志中读取。</span><span class="sxs-lookup"><span data-stu-id="6d836-285">It is not necessary to use this method to read from an event log.</span></span>  
  
 <span data-ttu-id="6d836-286"><xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法使用输入 `sourceData`<xref:System.Diagnostics.EventSourceCreationData.Source%2A>、<xref:System.Diagnostics.EventSourceCreationData.LogName%2A> 和 <xref:System.Diagnostics.EventSourceCreationData.MachineName%2A> 属性在目标计算机上为新源及其关联事件日志创建注册表值。</span><span class="sxs-lookup"><span data-stu-id="6d836-286">The <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method uses the input `sourceData`<xref:System.Diagnostics.EventSourceCreationData.Source%2A>, <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> and <xref:System.Diagnostics.EventSourceCreationData.MachineName%2A> properties to create registry values on the target computer for the new source and its associated event log.</span></span> <span data-ttu-id="6d836-287">新的源名称不能与目标计算机上的现有源名称或现有事件日志名称相匹配。</span><span class="sxs-lookup"><span data-stu-id="6d836-287">A new source name cannot match an existing source name or an existing event log name on the target computer.</span></span> <span data-ttu-id="6d836-288">如果未设置 <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> 属性，则会为应用程序事件日志注册源。</span><span class="sxs-lookup"><span data-stu-id="6d836-288">If the <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> property is not set, the source is registered for the Application event log.</span></span> <span data-ttu-id="6d836-289">如果未设置 <xref:System.Diagnostics.EventSourceCreationData.MachineName%2A>，则在本地计算机上注册源。</span><span class="sxs-lookup"><span data-stu-id="6d836-289">If the <xref:System.Diagnostics.EventSourceCreationData.MachineName%2A> is not set, the source is registered on the local computer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-290">若要在 Windows Vista 和更高版本或 Windows Server 2003 中创建事件源，您必须具有管理权限。</span><span class="sxs-lookup"><span data-stu-id="6d836-290">To create an event source in Windows Vista and later or Windows Server 2003, you must have administrative privileges.</span></span>  
>   
>  <span data-ttu-id="6d836-291">此要求的原因是必须搜索所有事件日志（包括安全性），以确定事件源是否唯一。</span><span class="sxs-lookup"><span data-stu-id="6d836-291">The reason for this requirement is that all event logs, including security, must be searched to determine whether the event source is unique.</span></span> <span data-ttu-id="6d836-292">从 Windows Vista 开始，用户没有访问安全日志的权限;因此，会引发 <xref:System.Security.SecurityException>。</span><span class="sxs-lookup"><span data-stu-id="6d836-292">Starting with Windows Vista, users do not have permission to access the security log; therefore, a <xref:System.Security.SecurityException> is thrown.</span></span>  
>   
>  <span data-ttu-id="6d836-293">从 Windows Vista 开始，用户帐户控制（UAC）决定用户的特权。</span><span class="sxs-lookup"><span data-stu-id="6d836-293">Starting with Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="6d836-294">如果您是内置的 Administrators 组的成员，将为您分配两个运行时访问令牌：一个标准用户访问令牌和一个管理员访问令牌。</span><span class="sxs-lookup"><span data-stu-id="6d836-294">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="6d836-295">默认情况下，您拥有标准用户角色。</span><span class="sxs-lookup"><span data-stu-id="6d836-295">By default, you are in the standard user role.</span></span> <span data-ttu-id="6d836-296">若要执行访问安全日志的代码，必须首先将你的特权从标准用户提升到管理员。</span><span class="sxs-lookup"><span data-stu-id="6d836-296">To execute the code that accesses the security log, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="6d836-297">你可以通过以下方式执行此操作：右键单击应用程序图标并指示需以管理员身份运行。</span><span class="sxs-lookup"><span data-stu-id="6d836-297">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 <span data-ttu-id="6d836-298">使用 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 和 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 将事件写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-298">Use <xref:System.Diagnostics.EventLog.WriteEvent%2A> and <xref:System.Diagnostics.EventLog.WriteEntry%2A> to write events to an event log.</span></span> <span data-ttu-id="6d836-299">您必须指定事件源以写入事件;在写入包含源的第一个条目之前，必须创建并配置事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-299">You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="6d836-300">在应用程序安装过程中创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-300">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="6d836-301">这样，操作系统就可以刷新其已注册的事件源的列表及其配置。</span><span class="sxs-lookup"><span data-stu-id="6d836-301">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="6d836-302">如果操作系统尚未刷新其事件源列表，而你尝试使用新源写入事件，则写入操作将失败。</span><span class="sxs-lookup"><span data-stu-id="6d836-302">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="6d836-303">您可以使用 <xref:System.Diagnostics.EventLogInstaller>或 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法来配置新源。</span><span class="sxs-lookup"><span data-stu-id="6d836-303">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="6d836-304">您必须对该计算机具有管理权限才能创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-304">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="6d836-305">可以为现有事件日志或新的事件日志创建事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-305">You can create an event source for an existing event log or a new event log.</span></span> <span data-ttu-id="6d836-306">为新的事件日志创建新源时，系统将为该日志注册源，但在向其中写入第一个条目之前，不会创建日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-306">When you create a new source for a new event log, the system registers the source for that log, but the log is not created until the first entry is written to it.</span></span>  
  
 <span data-ttu-id="6d836-307">操作系统将事件日志存储为文件。</span><span class="sxs-lookup"><span data-stu-id="6d836-307">The operating system stores event logs as files.</span></span> <span data-ttu-id="6d836-308">使用 <xref:System.Diagnostics.EventLogInstaller> 或 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 创建新的事件日志时，关联的文件将存储在指定计算机上的%SystemRoot%\System32\Config 目录中。</span><span class="sxs-lookup"><span data-stu-id="6d836-308">When you use <xref:System.Diagnostics.EventLogInstaller> or <xref:System.Diagnostics.EventLog.CreateEventSource%2A> to create a new event log, the associated file is stored in the %SystemRoot%\System32\Config directory on the specified computer.</span></span> <span data-ttu-id="6d836-309">文件名的设置方法是将 <xref:System.Diagnostics.EventLog.Log%2A> 属性的前8个字符追加到文件扩展名 ".evt"。</span><span class="sxs-lookup"><span data-stu-id="6d836-309">The file name is set by appending the first 8 characters of the <xref:System.Diagnostics.EventLog.Log%2A> property with the ".evt" file name extension.</span></span>  
  
 <span data-ttu-id="6d836-310">每个源一次只能写入一个事件日志;但是，应用程序可以使用多个源来写入多个事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-310">Each source can only write to only one event log at a time; however, your application can use multiple sources to write to multiple event logs.</span></span> <span data-ttu-id="6d836-311">例如，你的应用程序可能需要为不同的事件日志或不同的资源文件配置多个源。</span><span class="sxs-lookup"><span data-stu-id="6d836-311">For example, your application might require multiple sources configured for different event logs or different resource files.</span></span>  
  
 <span data-ttu-id="6d836-312">可以向事件类别和消息字符串的本地化资源文件注册事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-312">You can register the event source with localized resource file(s) for your event category and message strings.</span></span> <span data-ttu-id="6d836-313">应用程序可以使用资源标识符而不是指定实际字符串来编写事件日志项。</span><span class="sxs-lookup"><span data-stu-id="6d836-313">Your application can write event log entries using resource identifiers, rather than specifying the actual string.</span></span> <span data-ttu-id="6d836-314">事件查看器使用资源标识符从本地化的资源文件中查找并显示相应的字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-314">The Event Viewer uses the resource identifier to find and display the corresponding string from the localized resource file based on current language settings.</span></span> <span data-ttu-id="6d836-315">可以为事件类别、消息和参数插入字符串注册单独的文件，也可以为所有这三种类型的字符串注册同一资源文件。</span><span class="sxs-lookup"><span data-stu-id="6d836-315">You can register a separate file for event categories, messages and parameter insertion strings, or you can register the same resource file for all three types of strings.</span></span> <span data-ttu-id="6d836-316">使用 <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>、<xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>、<xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>和 <xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A> 属性可将源配置为将本地化项写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-316">Use the <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>, <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>, <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>, and <xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A> properties to configure the source to write localized entries to the event log.</span></span> <span data-ttu-id="6d836-317">如果你的应用程序将字符串值直接写入事件日志，则无需设置这些属性。</span><span class="sxs-lookup"><span data-stu-id="6d836-317">If your application writes strings values directly to the event log, you do not need to set these properties.</span></span>  
  
 <span data-ttu-id="6d836-318">源必须配置为写入本地化项或写入直接字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-318">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="6d836-319">如果应用程序使用资源标识符和字符串值写入条目，则必须注册两个不同的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-319">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="6d836-320">例如，将一个源配置为资源文件，然后在 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 方法中使用该源，将使用资源标识符的项写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-320">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="6d836-321">然后，创建一个没有资源文件的不同源，并在 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 方法中使用该源，使用该源直接向事件日志写入字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-321">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
 <span data-ttu-id="6d836-322">若要更改现有源的配置详细信息，必须删除该源，并使用新配置创建它。</span><span class="sxs-lookup"><span data-stu-id="6d836-322">To change the configuration details of an existing source, you must delete the source and then create it with the new configuration.</span></span> <span data-ttu-id="6d836-323">如果其他应用程序或组件使用现有源，请使用更新的配置创建新的源，而不是删除现有源。</span><span class="sxs-lookup"><span data-stu-id="6d836-323">If other applications or components use the existing source, create a new source with the updated configuration rather than deleting the existing source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-324">如果为事件日志配置了源，并为其他事件日志重新配置了源，则必须重新启动计算机才能使更改生效。</span><span class="sxs-lookup"><span data-stu-id="6d836-324">If a source is configured for an event log, and you reconfigure it for another event log, you must restart the computer for the changes to take effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d836-325">下面的示例确定是否在本地计算机上注册了名为 `SampleApplicationSource` 的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-325">The following example determines whether the event source named `SampleApplicationSource` is registered on the local computer.</span></span> <span data-ttu-id="6d836-326">如果事件源不存在，则此示例将为源设置消息资源文件并创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-326">If the event source does not exist, the example sets the message resource file for the source and creates the new event source.</span></span> <span data-ttu-id="6d836-327">最后，该示例使用 `DisplayNameMsgId` 中的资源标识符值和 `messageFile`中的资源文件路径，为事件日志设置本地化的显示名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-327">Finally, the example sets the localized display name for the event log, using the resource identifier value in `DisplayNameMsgId` and the resource file path in `messageFile`.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#6)]
 [!code-csharp[EventLog_WriteEvent#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#6)]
 [!code-vb[EventLog_WriteEvent#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#6)]  
  
 <span data-ttu-id="6d836-328">该示例使用资源库 EventLogMsgs 中内置的以下消息文本文件。</span><span class="sxs-lookup"><span data-stu-id="6d836-328">The example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="6d836-329">消息文本文件是从中创建消息资源文件的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-329">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="6d836-330">消息文本文件定义类别、事件消息和参数插入字符串的资源标识符和文本。</span><span class="sxs-lookup"><span data-stu-id="6d836-330">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span> <span data-ttu-id="6d836-331">具体而言，为事件日志的本地化名称定义了资源标识符5001。</span><span class="sxs-lookup"><span data-stu-id="6d836-331">Specifically, resource identifier 5001 is defined for the localized name of the event log.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d836-332">在 <paramref name="sourceData" /> 中指定的计算机名称无效。</span><span class="sxs-lookup"><span data-stu-id="6d836-332">The computer name specified in <paramref name="sourceData" /> is not valid.</span></span>  
  
<span data-ttu-id="6d836-333">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-333">-or-</span></span> 
<span data-ttu-id="6d836-334">在 <paramref name="sourceData" /> 中指定的源名称为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-334">The source name specified in <paramref name="sourceData" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="6d836-335">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-335">-or-</span></span> 
<span data-ttu-id="6d836-336">在 <paramref name="sourceData" /> 中指定的日志名称无效。</span><span class="sxs-lookup"><span data-stu-id="6d836-336">The log name specified in <paramref name="sourceData" /> is not valid.</span></span> <span data-ttu-id="6d836-337">事件日志名称必须由可打印字符组成，且不得包含字符“\*”、“?”或“\\”。</span><span class="sxs-lookup"><span data-stu-id="6d836-337">Event log names must consist of printable characters and cannot include the characters '\*', '?', or '\\'.</span></span>  
  
<span data-ttu-id="6d836-338">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-338">-or-</span></span> 
<span data-ttu-id="6d836-339">在 <paramref name="sourceData" /> 中指定的日志名称对用户日志创建无效。</span><span class="sxs-lookup"><span data-stu-id="6d836-339">The log name specified in <paramref name="sourceData" /> is not valid for user log creation.</span></span> <span data-ttu-id="6d836-340">事件日志名称 AppEvent、SysEvent 和 SecEvent 是保留为系统使用的。</span><span class="sxs-lookup"><span data-stu-id="6d836-340">The Event log names AppEvent, SysEvent, and SecEvent are reserved for system use.</span></span>  
  
<span data-ttu-id="6d836-341">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-341">-or-</span></span> 
<span data-ttu-id="6d836-342">该日志名称与一个现有事件源名称相匹配。</span><span class="sxs-lookup"><span data-stu-id="6d836-342">The log name matches an existing event source name.</span></span>  
  
<span data-ttu-id="6d836-343">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-343">-or-</span></span> 
<span data-ttu-id="6d836-344">在 <paramref name="sourceData" /> 中指定的源名称导致注册表项路径的长度超过 254 个字符。</span><span class="sxs-lookup"><span data-stu-id="6d836-344">The source name specified in <paramref name="sourceData" /> results in a registry key path longer than 254 characters.</span></span>  
  
<span data-ttu-id="6d836-345">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-345">-or-</span></span> 
<span data-ttu-id="6d836-346">在 <paramref name="sourceData" /> 中指定的日志名称的前 8 个字符不唯一。</span><span class="sxs-lookup"><span data-stu-id="6d836-346">The first 8 characters of the log name specified in <paramref name="sourceData" /> are not unique.</span></span>  
  
<span data-ttu-id="6d836-347">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-347">-or-</span></span> 
<span data-ttu-id="6d836-348">在 <paramref name="sourceData" /> 中指定的源名称已经注册过。</span><span class="sxs-lookup"><span data-stu-id="6d836-348">The source name specified in <paramref name="sourceData" /> is already registered.</span></span>  
  
<span data-ttu-id="6d836-349">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-349">-or-</span></span> 
<span data-ttu-id="6d836-350">在 <paramref name="sourceData" /> 中指定的源名称与一个现有事件日志名称相匹配。</span><span class="sxs-lookup"><span data-stu-id="6d836-350">The source name specified in <paramref name="sourceData" /> matches an existing event log name.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6d836-351">事件日志的注册表项未能打开。</span><span class="sxs-lookup"><span data-stu-id="6d836-351">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6d836-352"><paramref name="sourceData" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-352"><paramref name="sourceData" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Diagnostics.EventSourceCreationData" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="T:System.Diagnostics.EventLogInstaller" />
      </Docs>
    </Member>
    <Member MemberName="CreateEventSource">
      <MemberSignature Language="C#" Value="public static void CreateEventSource (string source, string logName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateEventSource(string source, string logName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.CreateEventSource(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CreateEventSource (source As String, logName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateEventSource(System::String ^ source, System::String ^ logName);" />
      <MemberSignature Language="F#" Value="static member CreateEventSource : string * string -&gt; unit" Usage="System.Diagnostics.EventLog.CreateEventSource (source, logName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="logName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="6d836-353">应用程序在本地计算机上注册时所采用的源名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-353">The source name by which the application is registered on the local computer.</span></span></param>
        <param name="logName"><span data-ttu-id="6d836-354">源的项写入的日志名。</span><span class="sxs-lookup"><span data-stu-id="6d836-354">The name of the log the source's entries are written to.</span></span> <span data-ttu-id="6d836-355">可能的值包括“应用程序”、“系统”或自定义事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-355">Possible values include Application, System, or a custom event log.</span></span></param>
        <summary><span data-ttu-id="6d836-356">建立指定的源名称作为向本地计算机上的日志中写入日志项的有效事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-356">Establishes the specified source name as a valid event source for writing entries to a log on the local computer.</span></span> <span data-ttu-id="6d836-357">此方法还可在本地计算机上创建一个新的自定义日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-357">This method can also create a new custom log on the local computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-358">使用此重载创建自定义日志，或创建 <xref:System.Diagnostics.EventLog.Source%2A>，并将其注册到本地计算机上的现有日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-358">Use this overload to create a custom log or to create and register a <xref:System.Diagnostics.EventLog.Source%2A> to an existing log on the local computer.</span></span>  
  
 <span data-ttu-id="6d836-359">如果在调用 <xref:System.Diagnostics.EventLog.CreateEventSource%2A>时 `null` `logName` 或空字符串（""），则日志默认为应用程序日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-359">If `logName` is `null` or an empty string ("") when you call <xref:System.Diagnostics.EventLog.CreateEventSource%2A>, the log defaults to the Application log.</span></span> <span data-ttu-id="6d836-360">如果本地计算机上不存在该日志，系统将创建一个自定义日志，并将应用程序注册为该日志的 <xref:System.Diagnostics.EventLog.Source%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d836-360">If the log does not exist on the local computer, the system creates a custom log and registers your application as a <xref:System.Diagnostics.EventLog.Source%2A> for that log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-361">若要在 Windows Vista 和更高版本或 Windows Server 2003 中创建事件源，您必须具有管理权限。</span><span class="sxs-lookup"><span data-stu-id="6d836-361">To create an event source in Windows Vista and later or Windows Server 2003, you must have administrative privileges.</span></span>  
>   
>  <span data-ttu-id="6d836-362">此要求的原因是必须搜索所有事件日志（包括安全性），以确定事件源是否唯一。</span><span class="sxs-lookup"><span data-stu-id="6d836-362">The reason for this requirement is that all event logs, including security, must be searched to determine whether the event source is unique.</span></span> <span data-ttu-id="6d836-363">从 Windows Vista 开始，用户没有访问安全日志的权限;因此，会引发 <xref:System.Security.SecurityException>。</span><span class="sxs-lookup"><span data-stu-id="6d836-363">Starting with Windows Vista, users do not have permission to access the security log; therefore, a <xref:System.Security.SecurityException> is thrown.</span></span>  
>   
>  <span data-ttu-id="6d836-364">在 Windows Vista 或更高版本中，用户帐户控制 (UAC) 决定用户的特权。</span><span class="sxs-lookup"><span data-stu-id="6d836-364">In Windows Vista and later, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="6d836-365">如果您是内置的 Administrators 组的成员，将为您分配两个运行时访问令牌：一个标准用户访问令牌和一个管理员访问令牌。</span><span class="sxs-lookup"><span data-stu-id="6d836-365">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="6d836-366">默认情况下，您拥有标准用户角色。</span><span class="sxs-lookup"><span data-stu-id="6d836-366">By default, you are in the standard user role.</span></span> <span data-ttu-id="6d836-367">若要执行访问安全日志的代码，必须首先将你的特权从标准用户提升到管理员。</span><span class="sxs-lookup"><span data-stu-id="6d836-367">To execute the code that accesses the security log, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="6d836-368">你可以通过以下方式执行此操作：右键单击应用程序图标并指示需以管理员身份运行。</span><span class="sxs-lookup"><span data-stu-id="6d836-368">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 <span data-ttu-id="6d836-369">只需在写入事件日志时创建事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-369">You only need to create an event source if you are writing to the event log.</span></span> <span data-ttu-id="6d836-370">向事件日志写入条目之前，必须将事件源作为事件的有效源注册到事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-370">Before writing an entry to an event log, you must register the event source with the event log as a valid source of events.</span></span> <span data-ttu-id="6d836-371">当你编写日志项时，系统会使用 <xref:System.Diagnostics.EventLog.Source%2A> 来查找适当的日志，以便在其中放置你的条目。</span><span class="sxs-lookup"><span data-stu-id="6d836-371">When you write a log entry, the system uses the <xref:System.Diagnostics.EventLog.Source%2A> to find the appropriate log in which to place your entry.</span></span> <span data-ttu-id="6d836-372">如果要读取事件日志，可以指定 <xref:System.Diagnostics.EventLog.Source%2A>或 <xref:System.Diagnostics.EventLog.Log%2A> 并 <xref:System.Diagnostics.EventLog.MachineName%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d836-372">If you are reading the event log, you can either specify the <xref:System.Diagnostics.EventLog.Source%2A>, or a <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.MachineName%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-373">如果要连接到本地计算机上的日志，则无需指定 <xref:System.Diagnostics.EventLog.MachineName%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d836-373">You are not required to specify the <xref:System.Diagnostics.EventLog.MachineName%2A> if you are connecting to a log on the local computer.</span></span> <span data-ttu-id="6d836-374">如果从日志中读取时未指定 <xref:System.Diagnostics.EventLog.MachineName%2A>，则假定使用本地计算机（"."）。</span><span class="sxs-lookup"><span data-stu-id="6d836-374">If you do not specify the <xref:System.Diagnostics.EventLog.MachineName%2A> when reading from a log, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="6d836-375">使用 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 和 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 将事件写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-375">Use <xref:System.Diagnostics.EventLog.WriteEvent%2A> and <xref:System.Diagnostics.EventLog.WriteEntry%2A> to write events to an event log.</span></span> <span data-ttu-id="6d836-376">您必须指定事件源以写入事件;在写入包含源的第一个条目之前，必须创建并配置事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-376">You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="6d836-377">在应用程序安装过程中创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-377">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="6d836-378">这样，操作系统就可以刷新其已注册的事件源的列表及其配置。</span><span class="sxs-lookup"><span data-stu-id="6d836-378">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="6d836-379">如果操作系统尚未刷新其事件源列表，而你尝试使用新源写入事件，则写入操作将失败。</span><span class="sxs-lookup"><span data-stu-id="6d836-379">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="6d836-380">您可以使用 <xref:System.Diagnostics.EventLogInstaller>或 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法来配置新源。</span><span class="sxs-lookup"><span data-stu-id="6d836-380">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="6d836-381">您必须对该计算机具有管理权限才能创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-381">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="6d836-382">可以为现有事件日志或新的事件日志创建事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-382">You can create an event source for an existing event log or a new event log.</span></span> <span data-ttu-id="6d836-383">为新的事件日志创建新源时，系统将为该日志注册源，但在向其中写入第一个条目之前，不会创建日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-383">When you create a new source for a new event log, the system registers the source for that log, but the log is not created until the first entry is written to it.</span></span>  
  
 <span data-ttu-id="6d836-384">操作系统将事件日志存储为文件。</span><span class="sxs-lookup"><span data-stu-id="6d836-384">The operating system stores event logs as files.</span></span> <span data-ttu-id="6d836-385">使用 <xref:System.Diagnostics.EventLogInstaller> 或 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 创建新的事件日志时，关联的文件将存储在指定计算机上的%SystemRoot%\System32\Config 目录中。</span><span class="sxs-lookup"><span data-stu-id="6d836-385">When you use <xref:System.Diagnostics.EventLogInstaller> or <xref:System.Diagnostics.EventLog.CreateEventSource%2A> to create a new event log, the associated file is stored in the %SystemRoot%\System32\Config directory on the specified computer.</span></span> <span data-ttu-id="6d836-386">文件名的设置方法是将 <xref:System.Diagnostics.EventLog.Log%2A> 属性的前8个字符追加到文件扩展名 ".evt"。</span><span class="sxs-lookup"><span data-stu-id="6d836-386">The file name is set by appending the first 8 characters of the <xref:System.Diagnostics.EventLog.Log%2A> property with the ".evt" file name extension.</span></span>  
  
 <span data-ttu-id="6d836-387">源在本地计算机上必须唯一;新的源名称不能与现有的源名称或现有的事件日志名称相匹配。</span><span class="sxs-lookup"><span data-stu-id="6d836-387">The source must be unique on the local computer; a new source name cannot match an existing source name or an existing event log name.</span></span> <span data-ttu-id="6d836-388">每个源一次只能写入一个事件日志;但是，应用程序可以使用多个源来写入多个事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-388">Each source can write to only one event log at a time; however, your application can use multiple sources to write to multiple event logs.</span></span> <span data-ttu-id="6d836-389">例如，你的应用程序可能需要为不同的事件日志或不同的资源文件配置多个源。</span><span class="sxs-lookup"><span data-stu-id="6d836-389">For example, your application might require multiple sources configured for different event logs or different resource files.</span></span>  
  
 <span data-ttu-id="6d836-390">源必须配置为写入本地化项或写入直接字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-390">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="6d836-391">如果应用程序使用资源标识符和字符串值写入条目，则必须注册两个不同的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-391">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="6d836-392">例如，将一个源配置为资源文件，然后在 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 方法中使用该源，将使用资源标识符的项写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-392">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="6d836-393">然后，创建一个没有资源文件的不同源，并在 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 方法中使用该源，使用该源直接向事件日志写入字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-393">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
 <span data-ttu-id="6d836-394">若要更改现有源的配置详细信息，必须删除该源，并使用新配置创建它。</span><span class="sxs-lookup"><span data-stu-id="6d836-394">To change the configuration details of an existing source, you must delete the source and then create it with the new configuration.</span></span> <span data-ttu-id="6d836-395">如果其他应用程序或组件使用现有源，请使用更新的配置创建新的源，而不是删除现有源。</span><span class="sxs-lookup"><span data-stu-id="6d836-395">If other applications or components use the existing source, create a new source with the updated configuration rather than deleting the existing source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-396">如果源已映射到日志，并将其重新映射到新日志，则必须重新启动计算机才能使更改生效。</span><span class="sxs-lookup"><span data-stu-id="6d836-396">If a source has already been mapped to a log and you remap it to a new log, you must restart the computer for the changes to take effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d836-397">下面的示例创建源 `MySource` （如果它尚不存在），并将项写入事件日志 `MyNewLog`。</span><span class="sxs-lookup"><span data-stu-id="6d836-397">The following example creates the source `MySource` if it does not already exist, and writes an entry to the event log `MyNewLog`.</span></span>  
  
 [!code-cpp[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d836-398"><paramref name="source" /> 为空字符串 ("") 或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-398"><paramref name="source" /> is an empty string ("") or <see langword="null" />.</span></span>  
  
<span data-ttu-id="6d836-399">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-399">-or-</span></span> 
 <span data-ttu-id="6d836-400"><paramref name="logName" /> 不是有效的事件日志名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-400"><paramref name="logName" /> is not a valid event log name.</span></span> <span data-ttu-id="6d836-401">事件日志名称必须由可打印字符组成，且不得包含字符“\*”、“?”或“\\”。</span><span class="sxs-lookup"><span data-stu-id="6d836-401">Event log names must consist of printable characters, and cannot include the characters '\*', '?', or '\\'.</span></span>  
  
<span data-ttu-id="6d836-402">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-402">-or-</span></span> 
 <span data-ttu-id="6d836-403"><paramref name="logName" />对用户日志创建无效。</span><span class="sxs-lookup"><span data-stu-id="6d836-403"><paramref name="logName" /> is not valid for user log creation.</span></span> <span data-ttu-id="6d836-404">事件日志名称 AppEvent、SysEvent 和 SecEvent 是保留为系统使用的。</span><span class="sxs-lookup"><span data-stu-id="6d836-404">The event log names AppEvent, SysEvent, and SecEvent are reserved for system use.</span></span>  
  
<span data-ttu-id="6d836-405">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-405">-or-</span></span> 
<span data-ttu-id="6d836-406">该日志名称与一个现有事件源名称相匹配。</span><span class="sxs-lookup"><span data-stu-id="6d836-406">The log name matches an existing event source name.</span></span>  
  
<span data-ttu-id="6d836-407">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-407">-or-</span></span> 
<span data-ttu-id="6d836-408">此源名称导致注册表项路径的长度超过 254 个字符。</span><span class="sxs-lookup"><span data-stu-id="6d836-408">The source name results in a registry key path longer than 254 characters.</span></span>  
  
<span data-ttu-id="6d836-409">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-409">-or-</span></span> 
<span data-ttu-id="6d836-410"><paramref name="logName" /> 的前 8 个字符与现有事件日志名称的前 8 个字符相匹配。</span><span class="sxs-lookup"><span data-stu-id="6d836-410">The first 8 characters of <paramref name="logName" /> match the first 8 characters of an existing event log name.</span></span>  
  
<span data-ttu-id="6d836-411">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-411">-or-</span></span> 
<span data-ttu-id="6d836-412">无法注册该源，因为它已存在于本地计算机上。</span><span class="sxs-lookup"><span data-stu-id="6d836-412">The source cannot be registered because it already exists on the local computer.</span></span>  
  
<span data-ttu-id="6d836-413">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-413">-or-</span></span> 
<span data-ttu-id="6d836-414">该源名称与一个现有事件日志名称相匹配。</span><span class="sxs-lookup"><span data-stu-id="6d836-414">The source name matches an existing event log name.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6d836-415">事件日志的注册表项未能在本地计算机上打开。</span><span class="sxs-lookup"><span data-stu-id="6d836-415">The registry key for the event log could not be opened on the local computer.</span></span></exception>
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="M:System.Diagnostics.EventLog.Delete(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateEventSource">
      <MemberSignature Language="C#" Value="public static void CreateEventSource (string source, string logName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateEventSource(string source, string logName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.CreateEventSource(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CreateEventSource (source As String, logName As String, machineName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateEventSource(System::String ^ source, System::String ^ logName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member CreateEventSource : string * string * string -&gt; unit" Usage="System.Diagnostics.EventLog.CreateEventSource (source, logName, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete("use CreateEventSource(EventSourceCreationData) instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0">
          <AttributeName>System.Obsolete("This method has been deprecated.  Please use System.Diagnostics.EventLog.CreateEventSource(EventSourceCreationData sourceData) instead.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="dotnet-plat-ext-3.0;netcore-3.0">
          <AttributeName>System.Obsolete("This method has been deprecated.  Please use System.Diagnostics.EventLog.CreateEventSource(EventSourceCreationData sourceData) instead.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This method has been deprecated.  Please use System.Diagnostics.EventLog.CreateEventSource(EventSourceCreationData sourceData) instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="logName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="6d836-416">应用程序在指定计算机上注册时所采用的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-416">The source by which the application is registered on the specified computer.</span></span></param>
        <param name="logName"><span data-ttu-id="6d836-417">源的项写入的日志名。</span><span class="sxs-lookup"><span data-stu-id="6d836-417">The name of the log the source's entries are written to.</span></span> <span data-ttu-id="6d836-418">可能的值包括“应用程序”、“系统”或自定义事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-418">Possible values include Application, System, or a custom event log.</span></span> <span data-ttu-id="6d836-419">如果不指定值，则 <paramref name="logName" /> 默认为应用程序。</span><span class="sxs-lookup"><span data-stu-id="6d836-419">If you do not specify a value, <paramref name="logName" /> defaults to Application.</span></span></param>
        <param name="machineName"><span data-ttu-id="6d836-420">用来注册此事件源的计算机名称，对于本地计算机则为“.”。</span><span class="sxs-lookup"><span data-stu-id="6d836-420">The name of the computer to register this event source with, or "." for the local computer.</span></span></param>
        <summary><span data-ttu-id="6d836-421">建立指定的源名称作为向指定计算机上的日志中写入项的有效事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-421">Establishes the specified source name as a valid event source for writing entries to a log on the specified computer.</span></span> <span data-ttu-id="6d836-422">此方法还可用于在指定计算机上创建一个新的自定义日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-422">This method can also be used to create a new custom log on the specified computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-423">使用此重载创建自定义日志，或创建 <xref:System.Diagnostics.EventLog.Source%2A>，并将其注册到指定计算机上的现有日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-423">Use this overload to create a custom log or to create and register a <xref:System.Diagnostics.EventLog.Source%2A> to an existing log on the specified computer.</span></span>  
  
 <span data-ttu-id="6d836-424">如果在调用 <xref:System.Diagnostics.EventLog.CreateEventSource%2A>时 `null` `logName` 或空字符串（""），则日志默认为应用程序日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-424">If `logName` is `null` or an empty string ("") when you call <xref:System.Diagnostics.EventLog.CreateEventSource%2A>, the log defaults to the Application log.</span></span> <span data-ttu-id="6d836-425">如果指定的计算机上不存在该日志，系统将创建一个自定义日志，并将应用程序注册为该日志的 <xref:System.Diagnostics.EventLog.Source%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d836-425">If the log does not exist on the specified computer, the system creates a custom log and registers your application as a <xref:System.Diagnostics.EventLog.Source%2A> for that log.</span></span>  
  
 <span data-ttu-id="6d836-426">只需在写入事件日志时创建事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-426">You only need to create an event source if you are writing to the event log.</span></span> <span data-ttu-id="6d836-427">向事件日志写入条目之前，必须将事件源作为事件的有效源注册到事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-427">Before writing an entry to an event log, you must register the event source with the event log as a valid source of events.</span></span> <span data-ttu-id="6d836-428">当你编写日志项时，系统会使用 <xref:System.Diagnostics.EventLog.Source%2A> 来查找适当的日志，以便在其中放置你的条目。</span><span class="sxs-lookup"><span data-stu-id="6d836-428">When you write a log entry, the system uses the <xref:System.Diagnostics.EventLog.Source%2A> to find the appropriate log in which to place your entry.</span></span> <span data-ttu-id="6d836-429">如果要读取事件日志，可以指定 <xref:System.Diagnostics.EventLog.Source%2A>或 <xref:System.Diagnostics.EventLog.Log%2A> 并 <xref:System.Diagnostics.EventLog.MachineName%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d836-429">If you are reading the event log, you can either specify the <xref:System.Diagnostics.EventLog.Source%2A>, or a <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.MachineName%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-430">若要在 Windows Vista 和更高版本或 Windows Server 2003 中创建事件源，您必须具有管理权限。</span><span class="sxs-lookup"><span data-stu-id="6d836-430">To create an event source in Windows Vista and later or Windows Server 2003, you must have administrative privileges.</span></span>  
>   
>  <span data-ttu-id="6d836-431">此要求的原因是必须搜索所有事件日志（包括安全性），以确定事件源是否唯一。</span><span class="sxs-lookup"><span data-stu-id="6d836-431">The reason for this requirement is that all event logs, including security, must be searched to determine whether the event source is unique.</span></span> <span data-ttu-id="6d836-432">在 Windows Vista 和更高版本中，用户没有访问安全日志的权限;因此，会引发 <xref:System.Security.SecurityException>。</span><span class="sxs-lookup"><span data-stu-id="6d836-432">In Windows Vista and later, users do not have permission to access the security log; therefore, a <xref:System.Security.SecurityException> is thrown.</span></span>  
>   
>  <span data-ttu-id="6d836-433">在 Windows Vista 或更高版本中，用户帐户控制 (UAC) 决定用户的特权。</span><span class="sxs-lookup"><span data-stu-id="6d836-433">In Windows Vista and later, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="6d836-434">如果您是内置的 Administrators 组的成员，将为您分配两个运行时访问令牌：一个标准用户访问令牌和一个管理员访问令牌。</span><span class="sxs-lookup"><span data-stu-id="6d836-434">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="6d836-435">默认情况下，您拥有标准用户角色。</span><span class="sxs-lookup"><span data-stu-id="6d836-435">By default, you are in the standard user role.</span></span> <span data-ttu-id="6d836-436">若要执行访问安全日志的代码，必须首先将你的特权从标准用户提升到管理员。</span><span class="sxs-lookup"><span data-stu-id="6d836-436">To execute the code that accesses the security log, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="6d836-437">你可以通过以下方式执行此操作：右键单击应用程序图标并指示需以管理员身份运行。</span><span class="sxs-lookup"><span data-stu-id="6d836-437">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 <span data-ttu-id="6d836-438">使用 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 和 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 将事件写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-438">Use <xref:System.Diagnostics.EventLog.WriteEvent%2A> and <xref:System.Diagnostics.EventLog.WriteEntry%2A> to write events to an event log.</span></span> <span data-ttu-id="6d836-439">您必须指定事件源以写入事件;在写入包含源的第一个条目之前，必须创建并配置事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-439">You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="6d836-440">在应用程序安装过程中创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-440">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="6d836-441">这样，操作系统就可以刷新其已注册的事件源的列表及其配置。</span><span class="sxs-lookup"><span data-stu-id="6d836-441">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="6d836-442">如果操作系统尚未刷新其事件源列表，而你尝试使用新源写入事件，则写入操作将失败。</span><span class="sxs-lookup"><span data-stu-id="6d836-442">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="6d836-443">您可以使用 <xref:System.Diagnostics.EventLogInstaller>或 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法来配置新源。</span><span class="sxs-lookup"><span data-stu-id="6d836-443">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="6d836-444">您必须对该计算机具有管理权限才能创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-444">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="6d836-445">可以为现有事件日志或新的事件日志创建事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-445">You can create an event source for an existing event log or a new event log.</span></span> <span data-ttu-id="6d836-446">为新的事件日志创建新源时，系统将为该日志注册源，但在向其中写入第一个条目之前，不会创建日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-446">When you create a new source for a new event log, the system registers the source for that log, but the log is not created until the first entry is written to it.</span></span>  
  
 <span data-ttu-id="6d836-447">操作系统将事件日志存储为文件。</span><span class="sxs-lookup"><span data-stu-id="6d836-447">The operating system stores event logs as files.</span></span> <span data-ttu-id="6d836-448">使用 <xref:System.Diagnostics.EventLogInstaller> 或 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 创建新的事件日志时，关联的文件将存储在指定计算机上的%SystemRoot%\System32\Config 目录中。</span><span class="sxs-lookup"><span data-stu-id="6d836-448">When you use <xref:System.Diagnostics.EventLogInstaller> or <xref:System.Diagnostics.EventLog.CreateEventSource%2A> to create a new event log, the associated file is stored in the %SystemRoot%\System32\Config directory on the specified computer.</span></span> <span data-ttu-id="6d836-449">文件名的设置方法是将 <xref:System.Diagnostics.EventLog.Log%2A> 属性的前8个字符追加到文件扩展名 ".evt"。</span><span class="sxs-lookup"><span data-stu-id="6d836-449">The file name is set by appending the first 8 characters of the <xref:System.Diagnostics.EventLog.Log%2A> property with the ".evt" file name extension.</span></span>  
  
 <span data-ttu-id="6d836-450">源在本地计算机上必须唯一;新的源名称不能与现有的源名称或现有的事件日志名称相匹配。</span><span class="sxs-lookup"><span data-stu-id="6d836-450">The source must be unique on the local computer; a new source name cannot match an existing source name or an existing event log name.</span></span> <span data-ttu-id="6d836-451">每个源一次只能写入一个事件日志;但是，应用程序可以使用多个源来写入多个事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-451">Each source can write to only one event log at a time; however, your application can use multiple sources to write to multiple event logs.</span></span> <span data-ttu-id="6d836-452">例如，你的应用程序可能需要为不同的事件日志或不同的资源文件配置多个源。</span><span class="sxs-lookup"><span data-stu-id="6d836-452">For example, your application might require multiple sources configured for different event logs or different resource files.</span></span>  
  
 <span data-ttu-id="6d836-453">源必须配置为写入本地化项或写入直接字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-453">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="6d836-454">如果应用程序使用资源标识符和字符串值写入条目，则必须注册两个不同的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-454">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="6d836-455">例如，将一个源配置为资源文件，然后在 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 方法中使用该源，将使用资源标识符的项写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-455">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="6d836-456">然后，创建一个没有资源文件的不同源，并在 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 方法中使用该源，使用该源直接向事件日志写入字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-456">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
 <span data-ttu-id="6d836-457">若要更改现有源的配置详细信息，必须删除该源，并使用新配置创建它。</span><span class="sxs-lookup"><span data-stu-id="6d836-457">To change the configuration details of an existing source, you must delete the source and then create it with the new configuration.</span></span> <span data-ttu-id="6d836-458">如果其他应用程序或组件使用现有源，请使用更新的配置创建新的源，而不是删除现有源。</span><span class="sxs-lookup"><span data-stu-id="6d836-458">If other applications or components use the existing source, create a new source with the updated configuration rather than deleting the existing source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-459">如果源已映射到日志，并将其重新映射到新日志，则必须重新启动计算机才能使更改生效。</span><span class="sxs-lookup"><span data-stu-id="6d836-459">If a source has already been mapped to a log and you remap it to a new log, you must restart the computer for the changes to take effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d836-460">下面的示例在计算机 `MyServer`上创建源 `MySource`，并向事件日志 `MyNewLog`写入一项。</span><span class="sxs-lookup"><span data-stu-id="6d836-460">The following example creates the source `MySource` on the computer `MyServer`, and writes an entry to the event log `MyNewLog`.</span></span>  
  
 [!code-cpp[Classic EventLog.SourceExists1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.SourceExists1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.SourceExists1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.SourceExists1 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.SourceExists1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.SourceExists1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d836-461"><paramref name="machineName" /> 不是有效的计算机名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-461">The <paramref name="machineName" /> is not a valid computer name.</span></span>  
  
<span data-ttu-id="6d836-462">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-462">-or-</span></span> 
 <span data-ttu-id="6d836-463"><paramref name="source" /> 为空字符串 ("") 或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-463"><paramref name="source" /> is an empty string ("") or <see langword="null" />.</span></span>  
  
<span data-ttu-id="6d836-464">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-464">-or-</span></span> 
 <span data-ttu-id="6d836-465"><paramref name="logName" /> 不是有效的事件日志名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-465"><paramref name="logName" /> is not a valid event log name.</span></span> <span data-ttu-id="6d836-466">事件日志名称必须由可打印字符组成，且不得包含字符“\*”、“?”或“\\”。</span><span class="sxs-lookup"><span data-stu-id="6d836-466">Event log names must consist of printable characters, and cannot include the characters '\*', '?', or '\\'.</span></span>  
  
<span data-ttu-id="6d836-467">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-467">-or-</span></span> 
 <span data-ttu-id="6d836-468"><paramref name="logName" />对用户日志创建无效。</span><span class="sxs-lookup"><span data-stu-id="6d836-468"><paramref name="logName" /> is not valid for user log creation.</span></span> <span data-ttu-id="6d836-469">事件日志名称 AppEvent、SysEvent 和 SecEvent 是保留为系统使用的。</span><span class="sxs-lookup"><span data-stu-id="6d836-469">The event log names AppEvent, SysEvent, and SecEvent are reserved for system use.</span></span>  
  
<span data-ttu-id="6d836-470">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-470">-or-</span></span> 
<span data-ttu-id="6d836-471">该日志名称与一个现有事件源名称相匹配。</span><span class="sxs-lookup"><span data-stu-id="6d836-471">The log name matches an existing event source name.</span></span>  
  
<span data-ttu-id="6d836-472">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-472">-or-</span></span> 
<span data-ttu-id="6d836-473">此源名称导致注册表项路径的长度超过 254 个字符。</span><span class="sxs-lookup"><span data-stu-id="6d836-473">The source name results in a registry key path longer than 254 characters.</span></span>  
  
<span data-ttu-id="6d836-474">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-474">-or-</span></span> 
<span data-ttu-id="6d836-475"><paramref name="logName" /> 的前 8 个字符与指定计算机上现有事件日志名称的前 8 个字符相匹配。</span><span class="sxs-lookup"><span data-stu-id="6d836-475">The first 8 characters of <paramref name="logName" /> match the first 8 characters of an existing event log name on the specified computer.</span></span>  
  
<span data-ttu-id="6d836-476">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-476">-or-</span></span> 
<span data-ttu-id="6d836-477">源无法注册，因为它已存在于指定的计算机上。</span><span class="sxs-lookup"><span data-stu-id="6d836-477">The source cannot be registered because it already exists on the specified computer.</span></span>  
  
<span data-ttu-id="6d836-478">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-478">-or-</span></span> 
<span data-ttu-id="6d836-479">该源名称与一个现有事件源名称相匹配。</span><span class="sxs-lookup"><span data-stu-id="6d836-479">The source name matches an existing event source name.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6d836-480">事件日志的注册表项未能在指定的计算机上打开。</span><span class="sxs-lookup"><span data-stu-id="6d836-480">The registry key for the event log could not be opened on the specified computer.</span></span></exception>
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="M:System.Diagnostics.EventLog.Delete(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Delete">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6d836-481">移除日志资源。</span><span class="sxs-lookup"><span data-stu-id="6d836-481">Removes a log resource.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static void Delete (string logName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Delete(string logName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.Delete(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Delete (logName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Delete(System::String ^ logName);" />
      <MemberSignature Language="F#" Value="static member Delete : string -&gt; unit" Usage="System.Diagnostics.EventLog.Delete logName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logName"><span data-ttu-id="6d836-482">要删除的日志的名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-482">The name of the log to delete.</span></span> <span data-ttu-id="6d836-483">可能的值包括：“应用程序”、“安全性”、“系统”和计算机上的任何自定义事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-483">Possible values include: Application, Security, System, and any custom event logs on the computer.</span></span></param>
        <summary><span data-ttu-id="6d836-484">从本地计算机上移除事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-484">Removes an event log from the local computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-485">如果要删除的日志在本地计算机上，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="6d836-485">Use this method when the log you want to delete is on the local computer.</span></span> <span data-ttu-id="6d836-486">您可以删除计算机上的任何日志，前提是您具有适当的注册表权限。</span><span class="sxs-lookup"><span data-stu-id="6d836-486">You can delete any log on the computer, provided you have the appropriate registry permissions.</span></span>  
  
 <span data-ttu-id="6d836-487"><xref:System.Diagnostics.EventLog.Delete%2A> 从本地计算机删除 `logName` 指定的日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-487"><xref:System.Diagnostics.EventLog.Delete%2A> removes the log specified by `logName` from the local computer.</span></span> <span data-ttu-id="6d836-488">如果只想删除注册到日志的源，请调用 <xref:System.Diagnostics.EventLog.DeleteEventSource%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d836-488">If you want to delete only the source registered to a log, call <xref:System.Diagnostics.EventLog.DeleteEventSource%2A>.</span></span> <span data-ttu-id="6d836-489">如果只想删除日志条目，请调用 <xref:System.Diagnostics.EventLog.Clear%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d836-489">If you only want to delete the log entries, call <xref:System.Diagnostics.EventLog.Clear%2A>.</span></span> <span data-ttu-id="6d836-490"><xref:System.Diagnostics.EventLog.Delete%2A> 和 <xref:System.Diagnostics.EventLog.DeleteEventSource%2A> 是 `static` 方法，因此它们可以在类本身上调用。</span><span class="sxs-lookup"><span data-stu-id="6d836-490"><xref:System.Diagnostics.EventLog.Delete%2A> and <xref:System.Diagnostics.EventLog.DeleteEventSource%2A> are `static` methods, so they can be called on the class itself.</span></span> <span data-ttu-id="6d836-491">不需要创建 <xref:System.Diagnostics.EventLog> 的新实例来调用这两种方法。</span><span class="sxs-lookup"><span data-stu-id="6d836-491">It is not necessary to create a new instance of <xref:System.Diagnostics.EventLog> to call either method.</span></span>  
  
 <span data-ttu-id="6d836-492"><xref:System.Diagnostics.EventLog.Delete%2A> 方法首先删除保存日志内容的文件。</span><span class="sxs-lookup"><span data-stu-id="6d836-492">The <xref:System.Diagnostics.EventLog.Delete%2A> method first deletes the file that holds the contents of the log.</span></span> <span data-ttu-id="6d836-493">然后，它将访问注册表，并删除为该日志注册的所有事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-493">It then accesses the registry and removes all the event sources registered for that log.</span></span> <span data-ttu-id="6d836-494">如果稍后再创建日志，则应再次注册事件源（如果要重复使用）。</span><span class="sxs-lookup"><span data-stu-id="6d836-494">If you recreate the log at a later point, you should register the event sources again, if they are to be reused.</span></span> <span data-ttu-id="6d836-495">如果未在指定日志名称的情况下将事件源和其他用户写入事件源，则将在应用程序事件日志中创建事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-495">If you do not register the event sources and other users write to an event source without specifying a log name, the event source will be created in the Application event log.</span></span> <span data-ttu-id="6d836-496">因此，以前能够向已删除并重新创建的日志写入条目的应用程序将改为写入应用程序日志，因为它现在包含事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-496">Therefore, applications that previously were able to write entries to the log you deleted and recreated will write to the Application log instead, because it now contains the event source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-497">重新创建事件日志可能会很困难。</span><span class="sxs-lookup"><span data-stu-id="6d836-497">Recreating an event log can be a difficult process.</span></span> <span data-ttu-id="6d836-498">避免删除任何系统创建的事件日志，例如应用程序日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-498">Avoid deleting any of the system-created event logs, such as the Application log.</span></span>  
  
 <span data-ttu-id="6d836-499">通过对的调用删除日志 <xref:System.Diagnostics.EventLog.Delete%2A> 会自动删除注册到该日志的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-499">Deleting a log through a call to <xref:System.Diagnostics.EventLog.Delete%2A> automatically deletes the sources registered to that log.</span></span> <span data-ttu-id="6d836-500">这会使其他使用该日志的应用程序不起作用。</span><span class="sxs-lookup"><span data-stu-id="6d836-500">This can make other applications using that log inoperative.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d836-501">以下示例从本地计算机中删除日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-501">The following example deletes a log from the local computer.</span></span> <span data-ttu-id="6d836-502">该示例从其源确定日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-502">The example determines the log from its source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-503">多个源可能会写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-503">More than one source might write to an event log.</span></span> <span data-ttu-id="6d836-504">删除自定义日志之前，请确保没有其他源写入该日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-504">Before deleting a custom log, make sure there are no other sources writing to that log.</span></span>  
  
 [!code-cpp[Classic EventLog.DeleteEventSource Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.DeleteEventSource Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.DeleteEventSource Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.DeleteEventSource Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.DeleteEventSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.DeleteEventSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d836-505"><paramref name="logName" /> 为空字符串 ("") 或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-505"><paramref name="logName" /> is an empty string ("") or <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6d836-506">事件日志的注册表项未能在本地计算机上打开。</span><span class="sxs-lookup"><span data-stu-id="6d836-506">The registry key for the event log could not be opened on the local computer.</span></span>  
  
<span data-ttu-id="6d836-507">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-507">-or-</span></span>
  
 <span data-ttu-id="6d836-508">本地计算机上不存在该日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-508">The log does not exist on the local computer.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="6d836-509">未成功清除事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-509">The event log was not cleared successfully.</span></span>  
  
 <span data-ttu-id="6d836-510">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-510">-or-</span></span>  
  
 <span data-ttu-id="6d836-511">无法打开日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-511">The log cannot be opened.</span></span> <span data-ttu-id="6d836-512">一个 Windows 错误代码不可用。</span><span class="sxs-lookup"><span data-stu-id="6d836-512">A Windows error code is not available.</span></span></exception>
        <altmember cref="M:System.Diagnostics.EventLog.Clear" />
        <altmember cref="M:System.Diagnostics.EventLog.Close" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static void Delete (string logName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Delete(string logName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.Delete(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Delete (logName As String, machineName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Delete(System::String ^ logName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member Delete : string * string -&gt; unit" Usage="System.Diagnostics.EventLog.Delete (logName, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoNotSupported("remote machine is not supported")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logName"><span data-ttu-id="6d836-513">要删除的日志的名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-513">The name of the log to delete.</span></span> <span data-ttu-id="6d836-514">可能的值包括：“应用程序”、“安全”、“系统”和指定计算机上的任何自定义事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-514">Possible values include: Application, Security, System, and any custom event logs on the specified computer.</span></span></param>
        <param name="machineName"><span data-ttu-id="6d836-515">要从中删除日志的计算机名称，对于本地计算机则为“.”。</span><span class="sxs-lookup"><span data-stu-id="6d836-515">The name of the computer to delete the log from, or "." for the local computer.</span></span></param>
        <summary><span data-ttu-id="6d836-516">从指定计算机上移除事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-516">Removes an event log from the specified computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-517">如果要删除的日志位于远程计算机上，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="6d836-517">Use this method when the log you want to delete is on a remote computer.</span></span> <span data-ttu-id="6d836-518">您可以删除计算机上的任何日志，前提是您具有适当的注册表权限。</span><span class="sxs-lookup"><span data-stu-id="6d836-518">You can delete any log on the computer, provided you have the appropriate registry permissions.</span></span>  
  
 <span data-ttu-id="6d836-519"><xref:System.Diagnostics.EventLog.Delete%2A> 从 `machineName`指定的计算机中删除 `logName` 指定的日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-519"><xref:System.Diagnostics.EventLog.Delete%2A> removes the log specified by `logName` from the computer specified by `machineName`.</span></span> <span data-ttu-id="6d836-520">如果只想删除注册到日志的源，请调用 <xref:System.Diagnostics.EventLog.DeleteEventSource%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d836-520">If you want to delete only the source registered to a log, call <xref:System.Diagnostics.EventLog.DeleteEventSource%2A>.</span></span> <span data-ttu-id="6d836-521">如果只想删除日志条目，请调用 <xref:System.Diagnostics.EventLog.Clear%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d836-521">If you only want to delete the log entries, call <xref:System.Diagnostics.EventLog.Clear%2A>.</span></span> <span data-ttu-id="6d836-522"><xref:System.Diagnostics.EventLog.Delete%2A> 和 <xref:System.Diagnostics.EventLog.DeleteEventSource%2A> 是 `static` 方法，因此它们可以在类本身上调用。</span><span class="sxs-lookup"><span data-stu-id="6d836-522"><xref:System.Diagnostics.EventLog.Delete%2A> and <xref:System.Diagnostics.EventLog.DeleteEventSource%2A> are `static` methods, so they can be called on the class itself.</span></span> <span data-ttu-id="6d836-523">不需要创建 <xref:System.Diagnostics.EventLog> 的实例来调用这两种方法。</span><span class="sxs-lookup"><span data-stu-id="6d836-523">It is not necessary to create an instance of <xref:System.Diagnostics.EventLog> to call either method.</span></span>  
  
 <span data-ttu-id="6d836-524">此方法首先删除保存日志内容的文件。</span><span class="sxs-lookup"><span data-stu-id="6d836-524">This method first deletes the file that holds the contents of the log.</span></span> <span data-ttu-id="6d836-525">然后，它将访问注册表，并删除为该日志注册的所有事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-525">It then accesses the registry and removes all the event sources registered for that log.</span></span> <span data-ttu-id="6d836-526">如果稍后再创建日志，则应再次注册事件源（如果要重复使用）。</span><span class="sxs-lookup"><span data-stu-id="6d836-526">If you recreate the log at a later point, you should register the event sources again, if they are to be reused.</span></span> <span data-ttu-id="6d836-527">如果未在指定日志名称的情况下将事件源和其他用户写入事件源，则将在应用程序事件日志中创建事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-527">If you do not register the event sources and other users write to an event source without specifying a log name, the event source will be created in the Application event log.</span></span> <span data-ttu-id="6d836-528">因此，以前能够向已删除并重新创建的日志写入条目的应用程序将改为写入应用程序日志，因为它现在包含事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-528">Therefore, applications that previously were able to write entries to the log you deleted and recreated will write to the Application log instead, because it now contains the event source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-529">重新创建事件日志可能会很困难。</span><span class="sxs-lookup"><span data-stu-id="6d836-529">Recreating an event log can be a difficult process.</span></span> <span data-ttu-id="6d836-530">避免删除任何系统创建的事件日志，例如应用程序日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-530">Avoid deleting any of the system-created event logs, such as the Application log.</span></span>  
  
 <span data-ttu-id="6d836-531">通过对的调用删除日志 <xref:System.Diagnostics.EventLog.Delete%2A> 会自动删除注册到该日志的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-531">Deleting a log through a call to <xref:System.Diagnostics.EventLog.Delete%2A> automatically deletes the sources registered to that log.</span></span> <span data-ttu-id="6d836-532">这会使其他使用该日志的应用程序不起作用。</span><span class="sxs-lookup"><span data-stu-id="6d836-532">This can make other applications using that log inoperative.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d836-533">以下示例从指定的计算机中删除日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-533">The following example deletes a log from the specified computer.</span></span> <span data-ttu-id="6d836-534">该示例从其源确定日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-534">The example determines the log from its source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-535">多个源可能会写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-535">More than one source might write to an event log.</span></span> <span data-ttu-id="6d836-536">删除自定义日志之前，请确保没有其他源写入该日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-536">Before deleting a custom log, make sure there are no other sources writing to that log.</span></span>  
  
 [!code-cpp[Classic EventLog.Delete1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.Delete1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.Delete1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.Delete1 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.Delete1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.Delete1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d836-537"><paramref name="logName" /> 为空字符串 ("") 或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-537"><paramref name="logName" /> is an empty string ("") or <see langword="null" />.</span></span>  
  
<span data-ttu-id="6d836-538">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-538">-or-</span></span> 
 <span data-ttu-id="6d836-539"><paramref name="machineName" /> 不是有效的计算机名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-539"><paramref name="machineName" /> is not a valid computer name.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6d836-540">事件日志的注册表项未能在指定的计算机上打开。</span><span class="sxs-lookup"><span data-stu-id="6d836-540">The registry key for the event log could not be opened on the specified computer.</span></span>  
  
<span data-ttu-id="6d836-541">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-541">-or-</span></span>
  
 <span data-ttu-id="6d836-542">指定的计算机上不存在该日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-542">The log does not exist on the specified computer.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="6d836-543">未成功清除事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-543">The event log was not cleared successfully.</span></span>  
  
 <span data-ttu-id="6d836-544">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-544">-or-</span></span>  
  
 <span data-ttu-id="6d836-545">无法打开日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-545">The log cannot be opened.</span></span> <span data-ttu-id="6d836-546">一个 Windows 错误代码不可用。</span><span class="sxs-lookup"><span data-stu-id="6d836-546">A Windows error code is not available.</span></span></exception>
        <altmember cref="M:System.Diagnostics.EventLog.Clear" />
        <altmember cref="M:System.Diagnostics.EventLog.Close" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteEventSource">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6d836-547">从事件日志中移除应用程序的事件源注册。</span><span class="sxs-lookup"><span data-stu-id="6d836-547">Removes an application's event source registration from the event log.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteEventSource">
      <MemberSignature Language="C#" Value="public static void DeleteEventSource (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteEventSource(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeleteEventSource (source As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteEventSource(System::String ^ source);" />
      <MemberSignature Language="F#" Value="static member DeleteEventSource : string -&gt; unit" Usage="System.Diagnostics.EventLog.DeleteEventSource source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="6d836-548">应用程序在事件日志系统中用来注册的名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-548">The name by which the application is registered in the event log system.</span></span></param>
        <summary><span data-ttu-id="6d836-549">从本地计算机的事件日志中移除事件源注册。</span><span class="sxs-lookup"><span data-stu-id="6d836-549">Removes the event source registration from the event log of the local computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-550">使用此方法可从本地计算机中删除 <xref:System.Diagnostics.EventLog.Source%2A> 的注册。</span><span class="sxs-lookup"><span data-stu-id="6d836-550">Use this method to remove the registration of a <xref:System.Diagnostics.EventLog.Source%2A> from the local computer.</span></span> <span data-ttu-id="6d836-551"><xref:System.Diagnostics.EventLog.DeleteEventSource%2A> 访问本地计算机上的注册表，并将应用程序注册为事件的有效源。</span><span class="sxs-lookup"><span data-stu-id="6d836-551"><xref:System.Diagnostics.EventLog.DeleteEventSource%2A> accesses the registry on the local computer and removes the registration of your application as a valid source of events.</span></span>  
  
 <span data-ttu-id="6d836-552">如果你不再需要将组件写入到该日志中，则可以将其作为事件的有效源删除。</span><span class="sxs-lookup"><span data-stu-id="6d836-552">You can remove your component as a valid source of events if you no longer need it to write entries to that log.</span></span> <span data-ttu-id="6d836-553">例如，如果需要将组件从一个日志更改为另一日志，则可以执行此操作。</span><span class="sxs-lookup"><span data-stu-id="6d836-553">For example, you might do this if you need to change your component from one log to another.</span></span> <span data-ttu-id="6d836-554">由于一次只能将一个源注册到一个日志，因此更改日志时需要删除当前注册。</span><span class="sxs-lookup"><span data-stu-id="6d836-554">Because a source can only be registered to one log at a time, changing the log requires you to remove the current registration.</span></span>  
  
 <span data-ttu-id="6d836-555"><xref:System.Diagnostics.EventLog.DeleteEventSource%2A> 仅删除注册到日志的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-555"><xref:System.Diagnostics.EventLog.DeleteEventSource%2A> removes only the source registered to a log.</span></span> <span data-ttu-id="6d836-556">如果要删除日志本身，请调用 <xref:System.Diagnostics.EventLog.Delete%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d836-556">If you want to remove the log itself, call <xref:System.Diagnostics.EventLog.Delete%2A>.</span></span> <span data-ttu-id="6d836-557">如果只想删除日志条目，请调用 <xref:System.Diagnostics.EventLog.Clear%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d836-557">If you only want to delete the log entries, call <xref:System.Diagnostics.EventLog.Clear%2A>.</span></span> <span data-ttu-id="6d836-558"><xref:System.Diagnostics.EventLog.Delete%2A> 和 <xref:System.Diagnostics.EventLog.DeleteEventSource%2A> 是 `static` 方法，因此它们可以在类本身上调用。</span><span class="sxs-lookup"><span data-stu-id="6d836-558"><xref:System.Diagnostics.EventLog.Delete%2A> and <xref:System.Diagnostics.EventLog.DeleteEventSource%2A> are `static` methods, so they can be called on the class itself.</span></span> <span data-ttu-id="6d836-559">不需要创建 <xref:System.Diagnostics.EventLog> 的实例来调用这两种方法。</span><span class="sxs-lookup"><span data-stu-id="6d836-559">It is not necessary to create an instance of <xref:System.Diagnostics.EventLog> to call either method.</span></span>  
  
 <span data-ttu-id="6d836-560">通过对的调用删除日志 <xref:System.Diagnostics.EventLog.Delete%2A> 会自动删除注册到该日志的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-560">Deleting a log through a call to <xref:System.Diagnostics.EventLog.Delete%2A> automatically deletes the sources registered to that log.</span></span> <span data-ttu-id="6d836-561">这会使其他使用该日志的应用程序不起作用。</span><span class="sxs-lookup"><span data-stu-id="6d836-561">This can make other applications using that log inoperative.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-562">如果源已映射到日志，并将其重新映射到新日志，则必须重新启动计算机才能使更改生效。</span><span class="sxs-lookup"><span data-stu-id="6d836-562">If a source has already been mapped to a log and you remap it to a new log, you must restart the computer for the changes to take effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d836-563">以下示例从本地计算机中删除源。</span><span class="sxs-lookup"><span data-stu-id="6d836-563">The following example deletes a source from the local computer.</span></span> <span data-ttu-id="6d836-564">该示例从其源确定日志，然后删除日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-564">The example determines the log from its source, and then deletes the log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-565">多个源可能会写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-565">More than one source might write to an event log.</span></span> <span data-ttu-id="6d836-566">删除自定义日志之前，请确保没有其他源写入该日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-566">Before deleting a custom log, make sure there are no other sources writing to that log.</span></span>  
  
 [!code-cpp[Classic EventLog.DeleteEventSource Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.DeleteEventSource Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.DeleteEventSource Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.DeleteEventSource Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.DeleteEventSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.DeleteEventSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d836-567">本地计算机的注册表中不存在 <paramref name="source" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="6d836-567">The <paramref name="source" /> parameter does not exist in the registry of the local computer.</span></span>  
  
<span data-ttu-id="6d836-568">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-568">-or-</span></span> 
<span data-ttu-id="6d836-569">您对事件日志的注册表项没有写访问权。</span><span class="sxs-lookup"><span data-stu-id="6d836-569">You do not have write access on the registry key for the event log.</span></span></exception>
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.Clear" />
      </Docs>
    </Member>
    <Member MemberName="DeleteEventSource">
      <MemberSignature Language="C#" Value="public static void DeleteEventSource (string source, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteEventSource(string source, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.DeleteEventSource(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeleteEventSource (source As String, machineName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteEventSource(System::String ^ source, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member DeleteEventSource : string * string -&gt; unit" Usage="System.Diagnostics.EventLog.DeleteEventSource (source, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoNotSupported("remote machine is not supported")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="6d836-570">应用程序在事件日志系统中用来注册的名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-570">The name by which the application is registered in the event log system.</span></span></param>
        <param name="machineName"><span data-ttu-id="6d836-571">要从中移除注册的计算机名，对于本地计算机则为“.”。</span><span class="sxs-lookup"><span data-stu-id="6d836-571">The name of the computer to remove the registration from, or "." for the local computer.</span></span></param>
        <summary><span data-ttu-id="6d836-572">从指定的计算机上移除应用程序的事件源注册。</span><span class="sxs-lookup"><span data-stu-id="6d836-572">Removes the application's event source registration from the specified computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-573">使用此重载从远程计算机中删除 <xref:System.Diagnostics.EventLog.Source%2A> 的注册。</span><span class="sxs-lookup"><span data-stu-id="6d836-573">Use this overload to remove the registration of a <xref:System.Diagnostics.EventLog.Source%2A> from a remote computer.</span></span> <span data-ttu-id="6d836-574"><xref:System.Diagnostics.EventLog.DeleteEventSource%2A> 访问 `machineName` 指定的计算机上的注册表，并将应用程序注册为事件的有效源。</span><span class="sxs-lookup"><span data-stu-id="6d836-574"><xref:System.Diagnostics.EventLog.DeleteEventSource%2A> accesses the registry on the computer specified by `machineName` and removes the registration of your application as a valid source of events.</span></span>  
  
 <span data-ttu-id="6d836-575">如果你不再需要将组件写入到该日志中，则可以将其作为事件的有效源删除。</span><span class="sxs-lookup"><span data-stu-id="6d836-575">You can remove your component as a valid source of events if you no longer need it to write entries to that log.</span></span> <span data-ttu-id="6d836-576">例如，如果需要将组件从一个日志更改为另一日志，则可以执行此操作。</span><span class="sxs-lookup"><span data-stu-id="6d836-576">For example, you might do this if you need to change your component from one log to another.</span></span> <span data-ttu-id="6d836-577">由于一次只能将一个源注册到一个日志，因此更改日志时需要删除当前注册。</span><span class="sxs-lookup"><span data-stu-id="6d836-577">Because a source can only be registered to one log at a time, changing the log requires you to remove the current registration.</span></span>  
  
 <span data-ttu-id="6d836-578"><xref:System.Diagnostics.EventLog.DeleteEventSource%2A> 仅删除注册到日志的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-578"><xref:System.Diagnostics.EventLog.DeleteEventSource%2A> removes only the source registered to a log.</span></span> <span data-ttu-id="6d836-579">如果要删除日志本身，请调用 <xref:System.Diagnostics.EventLog.Delete%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d836-579">If you want to remove the log itself, call <xref:System.Diagnostics.EventLog.Delete%2A>.</span></span> <span data-ttu-id="6d836-580">如果只想删除日志条目，请调用 <xref:System.Diagnostics.EventLog.Clear%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d836-580">If you only want to delete the log entries, call <xref:System.Diagnostics.EventLog.Clear%2A>.</span></span> <span data-ttu-id="6d836-581"><xref:System.Diagnostics.EventLog.Delete%2A> 和 <xref:System.Diagnostics.EventLog.DeleteEventSource%2A> 是 `static` 方法，因此它们可以在类本身上调用。</span><span class="sxs-lookup"><span data-stu-id="6d836-581"><xref:System.Diagnostics.EventLog.Delete%2A> and <xref:System.Diagnostics.EventLog.DeleteEventSource%2A> are `static` methods, so they can be called on the class itself.</span></span> <span data-ttu-id="6d836-582">不需要创建 <xref:System.Diagnostics.EventLog> 的实例来调用这两种方法。</span><span class="sxs-lookup"><span data-stu-id="6d836-582">It is not necessary to create an instance of <xref:System.Diagnostics.EventLog> to call either method.</span></span>  
  
 <span data-ttu-id="6d836-583">通过对的调用删除日志 <xref:System.Diagnostics.EventLog.Delete%2A> 会自动删除注册到该日志的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-583">Deleting a log through a call to <xref:System.Diagnostics.EventLog.Delete%2A> automatically deletes the sources registered to that log.</span></span> <span data-ttu-id="6d836-584">这会使其他使用该日志的应用程序不起作用。</span><span class="sxs-lookup"><span data-stu-id="6d836-584">This can make other applications using that log inoperative.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-585">如果源已映射到日志，并将其重新映射到新日志，则必须重新启动计算机才能使更改生效。</span><span class="sxs-lookup"><span data-stu-id="6d836-585">If a source has already been mapped to a log and you remap it to a new log, you must restart the computer for the changes to take effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d836-586">以下示例从指定的计算机中删除源。</span><span class="sxs-lookup"><span data-stu-id="6d836-586">The following example deletes a source from the specified computer.</span></span> <span data-ttu-id="6d836-587">该示例从其源确定日志，然后删除日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-587">The example determines the log from its source, and then deletes the log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-588">多个源可能会写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-588">More than one source might write to an event log.</span></span> <span data-ttu-id="6d836-589">删除自定义日志之前，请确保没有其他源写入该日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-589">Before deleting a custom log, make sure there are no other sources writing to that log.</span></span>  
  
 [!code-cpp[Classic EventLog.Delete1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.Delete1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.Delete1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.Delete1 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.Delete1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.Delete1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d836-590"><paramref name="machineName" /> 参数无效。</span><span class="sxs-lookup"><span data-stu-id="6d836-590">The <paramref name="machineName" /> parameter is invalid.</span></span>  
  
<span data-ttu-id="6d836-591">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-591">-or-</span></span> 
<span data-ttu-id="6d836-592">指定计算机的注册表中不存在 <paramref name="source" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="6d836-592">The <paramref name="source" /> parameter does not exist in the registry of the specified computer.</span></span>  
  
<span data-ttu-id="6d836-593">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-593">-or-</span></span> 
<span data-ttu-id="6d836-594">您对事件日志的注册表项没有写访问权。</span><span class="sxs-lookup"><span data-stu-id="6d836-594">You do not have write access on the registry key for the event log.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6d836-595">无法删除 <paramref name="source" />，原因是在注册表中，<paramref name="source" /> 的父注册表项不包含与其同名的子项。</span><span class="sxs-lookup"><span data-stu-id="6d836-595"><paramref name="source" /> cannot be deleted because in the registry, the parent registry key for <paramref name="source" /> does not contain a subkey with the same name.</span></span></exception>
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="eventLog.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="6d836-596">如果为 <see langword="true" />，则托管及非托管资源都释放；如果为 <see langword="false" />，则仅释放非托管资源。</span><span class="sxs-lookup"><span data-stu-id="6d836-596"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="6d836-597">释放由 <see cref="T:System.Diagnostics.EventLog" /> 占用的非托管资源，还可以另外再释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="6d836-597">Releases the unmanaged resources used by the <see cref="T:System.Diagnostics.EventLog" />, and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-598">此方法由 public `Dispose()` 方法和 <xref:System.Object.Finalize%2A> 方法调用。</span><span class="sxs-lookup"><span data-stu-id="6d836-598">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="6d836-599">`Dispose()` 调用受保护的 `Dispose(Boolean)` 方法，并将 `disposing` 参数设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="6d836-599">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="6d836-600"><xref:System.Object.Finalize%2A> 调用 `disposing` 设置为 `false`的 `Dispose`。</span><span class="sxs-lookup"><span data-stu-id="6d836-600"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="6d836-601">如果 `disposing` 参数为 true，则此方法将释放此 <xref:System.Diagnostics.EventLog> 引用的任何托管对象所持有的所有资源。</span><span class="sxs-lookup"><span data-stu-id="6d836-601">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Diagnostics.EventLog> references.</span></span> <span data-ttu-id="6d836-602">此方法将调用每个被引用对象的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="6d836-602">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="6d836-603">
            <see langword="Dispose" /> 可以由其他对象多次调用。</span><span class="sxs-lookup"><span data-stu-id="6d836-603">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="6d836-604"><see langword="Dispose(Boolean)" /> 重写时，请注意不要引用先前在调用 <see langword="Dispose" />之前已释放的对象。</span><span class="sxs-lookup"><span data-stu-id="6d836-604">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="6d836-605">有关如何实现 <see langword="Dispose(Boolean)" />的详细信息，请参阅[实现 Dispose 方法](/dotnet/standard/garbage-collection/implementing-dispose)。</span><span class="sxs-lookup"><span data-stu-id="6d836-605">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](/dotnet/standard/garbage-collection/implementing-dispose).</span></span>  
  
<span data-ttu-id="6d836-606">有关 <see langword="Dispose" /> 和 <see cref="M:System.Object.Finalize" />的详细信息，请参阅[清理非托管资源](/dotnet/standard/garbage-collection/unmanaged)。</span><span class="sxs-lookup"><span data-stu-id="6d836-606">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](/dotnet/standard/garbage-collection/unmanaged).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="EnableRaisingEvents">
      <MemberSignature Language="C#" Value="public bool EnableRaisingEvents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableRaisingEvents" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLog.EnableRaisingEvents" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableRaisingEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableRaisingEvents { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableRaisingEvents : bool with get, set" Usage="System.Diagnostics.EventLog.EnableRaisingEvents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("If enabled raises event when a log is written.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("LogMonitoring")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d836-607">获取或设置一个值，用以指示 <see cref="T:System.Diagnostics.EventLog" /> 是否接收 <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> 事件通知。</span><span class="sxs-lookup"><span data-stu-id="6d836-607">Gets or sets a value indicating whether the <see cref="T:System.Diagnostics.EventLog" /> receives <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> event notifications.</span></span></summary>
        <value><span data-ttu-id="6d836-608">如果 <see cref="T:System.Diagnostics.EventLog" /> 在有项写入日志时接收通知，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-608"><see langword="true" /> if the <see cref="T:System.Diagnostics.EventLog" /> receives notification when an entry is written to the log; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-609"><xref:System.Diagnostics.EventLog.EnableRaisingEvents%2A> 属性确定在将项写入日志时 <xref:System.Diagnostics.EventLog> 是否引发事件。</span><span class="sxs-lookup"><span data-stu-id="6d836-609">The <xref:System.Diagnostics.EventLog.EnableRaisingEvents%2A> property determines whether the <xref:System.Diagnostics.EventLog> raises events when entries are written to the log.</span></span> <span data-ttu-id="6d836-610">如果 `true`属性，则接收 <xref:System.Diagnostics.EventLog.EntryWritten> 事件的组件会在将条目写入 <xref:System.Diagnostics.EventLog.Log%2A> 属性中指定的日志时收到通知。</span><span class="sxs-lookup"><span data-stu-id="6d836-610">When the property is `true`, components that receive the <xref:System.Diagnostics.EventLog.EntryWritten> event will receive notification any time an entry is written to the log that is specified in the <xref:System.Diagnostics.EventLog.Log%2A> property.</span></span> <span data-ttu-id="6d836-611">如果 `false`<xref:System.Diagnostics.EventLog.EnableRaisingEvents%2A>，则不会引发任何事件。</span><span class="sxs-lookup"><span data-stu-id="6d836-611">If <xref:System.Diagnostics.EventLog.EnableRaisingEvents%2A> is `false`, no events are raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-612">仅当在本地计算机上写入条目时，才能接收事件通知。</span><span class="sxs-lookup"><span data-stu-id="6d836-612">You can receive event notifications only when entries are written on the local computer.</span></span> <span data-ttu-id="6d836-613">您无法接收到在远程计算机上写入的条目的通知。</span><span class="sxs-lookup"><span data-stu-id="6d836-613">You cannot receive notifications for entries written on remote computers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d836-614">下面的示例处理 <xref:System.Diagnostics.EventLog.EntryWritten> 事件。</span><span class="sxs-lookup"><span data-stu-id="6d836-614">The following example handles an <xref:System.Diagnostics.EventLog.EntryWritten> event.</span></span>  
  
 [!code-cpp[Classic EventLog.EnableRaisingEvents Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.EnableRaisingEvents Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.EnableRaisingEvents Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.EnableRaisingEvents Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.EnableRaisingEvents Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.EnableRaisingEvents Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6d836-615">事件日志位于远程计算机上。</span><span class="sxs-lookup"><span data-stu-id="6d836-615">The event log is on a remote computer.</span></span></exception>
        <altmember cref="E:System.Diagnostics.EventLog.EntryWritten" />
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="eventLog.EndInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6d836-616">结束用于窗体或由其他组件使用的 <see cref="T:System.Diagnostics.EventLog" /> 的初始化。</span><span class="sxs-lookup"><span data-stu-id="6d836-616">Ends the initialization of an <see cref="T:System.Diagnostics.EventLog" /> used on a form or by another component.</span></span> <span data-ttu-id="6d836-617">此初始化在运行时发生。</span><span class="sxs-lookup"><span data-stu-id="6d836-617">The initialization occurs at runtime.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-618">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] 设计环境使用此方法来结束在窗体上使用或由另一个组件使用的组件的初始化。</span><span class="sxs-lookup"><span data-stu-id="6d836-618">The [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] design environment uses this method to end the initialization of a component used on a form or by another component.</span></span> <span data-ttu-id="6d836-619"><xref:System.Diagnostics.EventLog.BeginInit%2A> 方法开始初始化。</span><span class="sxs-lookup"><span data-stu-id="6d836-619">The <xref:System.Diagnostics.EventLog.BeginInit%2A> method starts the initialization.</span></span> <span data-ttu-id="6d836-620">使用 <xref:System.Diagnostics.EventLog.BeginInit%2A> 和 <xref:System.Diagnostics.EventLog.EndInit%2A> 方法可防止控件在完全初始化之前被使用。</span><span class="sxs-lookup"><span data-stu-id="6d836-620">Using the <xref:System.Diagnostics.EventLog.BeginInit%2A> and <xref:System.Diagnostics.EventLog.EndInit%2A> methods prevents the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.EventLog.BeginInit" />
      </Docs>
    </Member>
    <Member MemberName="Entries">
      <MemberSignature Language="C#" Value="public System.Diagnostics.EventLogEntryCollection Entries { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.EventLogEntryCollection Entries" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLog.Entries" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Entries As EventLogEntryCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::EventLogEntryCollection ^ Entries { System::Diagnostics::EventLogEntryCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Entries : System.Diagnostics.EventLogEntryCollection" Usage="System.Diagnostics.EventLog.Entries" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;dotnet-plat-ext-5.0;net-5.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("The entries in the log.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("LogEntries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.EventLogEntryCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d836-621">获取事件日志的内容。</span><span class="sxs-lookup"><span data-stu-id="6d836-621">Gets the contents of the event log.</span></span></summary>
        <value><span data-ttu-id="6d836-622"><see cref="T:System.Diagnostics.EventLogEntryCollection" />，保留事件日志中的项。</span><span class="sxs-lookup"><span data-stu-id="6d836-622">An <see cref="T:System.Diagnostics.EventLogEntryCollection" /> holding the entries in the event log.</span></span> <span data-ttu-id="6d836-623">每个项均与 <see cref="T:System.Diagnostics.EventLogEntry" /> 类的一个实例关联。</span><span class="sxs-lookup"><span data-stu-id="6d836-623">Each entry is associated with an instance of the <see cref="T:System.Diagnostics.EventLogEntry" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-624">从事件日志中读取时，使用 <xref:System.Diagnostics.EventLog.Entries%2A> 成员。</span><span class="sxs-lookup"><span data-stu-id="6d836-624">Use the <xref:System.Diagnostics.EventLog.Entries%2A> member when reading from the event log.</span></span>  
  
 <span data-ttu-id="6d836-625">由于属性是只读的，因此不能使用 <xref:System.Diagnostics.EventLog.Entries%2A>修改条目或写入日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-625">Because the property is read-only, you cannot modify an entry or write to the log using <xref:System.Diagnostics.EventLog.Entries%2A>.</span></span> <span data-ttu-id="6d836-626">而应指定 <xref:System.Diagnostics.EventLog.Source%2A> 并调用 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 以写入新的日志条目。</span><span class="sxs-lookup"><span data-stu-id="6d836-626">Instead, specify a <xref:System.Diagnostics.EventLog.Source%2A> and call <xref:System.Diagnostics.EventLog.WriteEntry%2A> to write a new log entry.</span></span> <span data-ttu-id="6d836-627">您可以使用 <xref:System.Diagnostics.EventLog.Entries%2A> 来计算事件日志中的条目数，并查看集合中的每个 <xref:System.Diagnostics.EventLogEntry>。</span><span class="sxs-lookup"><span data-stu-id="6d836-627">You can use <xref:System.Diagnostics.EventLog.Entries%2A> to count the number of entries in the event log, and view each <xref:System.Diagnostics.EventLogEntry> in the collection.</span></span> <span data-ttu-id="6d836-628">使用索引 <xref:System.Diagnostics.EventLogEntryCollection.Item%2A> 成员可以检索有关特定条目的信息，如 <xref:System.Diagnostics.EventLogEntry.Message%2A>、<xref:System.Diagnostics.EventLogEntry.Category%2A>、<xref:System.Diagnostics.EventLogEntry.TimeWritten%2A>或 <xref:System.Diagnostics.EventLogEntry.EntryType%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d836-628">Use the indexed <xref:System.Diagnostics.EventLogEntryCollection.Item%2A> member to retrieve information about a specific entry, such as <xref:System.Diagnostics.EventLogEntry.Message%2A>, <xref:System.Diagnostics.EventLogEntry.Category%2A>, <xref:System.Diagnostics.EventLogEntry.TimeWritten%2A>, or <xref:System.Diagnostics.EventLogEntry.EntryType%2A>.</span></span>  
  
 <span data-ttu-id="6d836-629">仅从日志中读取时，无需指定 <xref:System.Diagnostics.EventLog.Source%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d836-629">It is not necessary to specify a <xref:System.Diagnostics.EventLog.Source%2A> when only reading from a log.</span></span> <span data-ttu-id="6d836-630">只能为 <xref:System.Diagnostics.EventLog> 实例指定 <xref:System.Diagnostics.EventLog.Log%2A> 名称和 <xref:System.Diagnostics.EventLog.MachineName%2A> （服务器计算机名称）属性。</span><span class="sxs-lookup"><span data-stu-id="6d836-630">You can specify only the <xref:System.Diagnostics.EventLog.Log%2A> name and <xref:System.Diagnostics.EventLog.MachineName%2A> (server computer name) properties for the <xref:System.Diagnostics.EventLog> instance.</span></span> <span data-ttu-id="6d836-631">在任一情况下，都将自动填充 "<xref:System.Diagnostics.EventLog.Entries%2A>" 成员以及事件日志的条目列表。</span><span class="sxs-lookup"><span data-stu-id="6d836-631">In either case, the <xref:System.Diagnostics.EventLog.Entries%2A> member is automatically populated with the event log's list of entries.</span></span> <span data-ttu-id="6d836-632">您可以为此列表中的项选择适当的索引以读取各个项。</span><span class="sxs-lookup"><span data-stu-id="6d836-632">You can select the appropriate index for an item in this list to read individual entries.</span></span>  
  
 <span data-ttu-id="6d836-633">读取和写入日志项之间的重要区别在于，无需显式调用读取方法。</span><span class="sxs-lookup"><span data-stu-id="6d836-633">An important distinction between reading and writing log entries is that it is not necessary to explicitly call a read method.</span></span> <span data-ttu-id="6d836-634">指定 <xref:System.Diagnostics.EventLog.Log%2A> 和 <xref:System.Diagnostics.EventLog.MachineName%2A> 后，<xref:System.Diagnostics.EventLog.Entries%2A> 属性会自动填充。</span><span class="sxs-lookup"><span data-stu-id="6d836-634">After the <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.MachineName%2A> are specified, the <xref:System.Diagnostics.EventLog.Entries%2A> property is automatically populated.</span></span> <span data-ttu-id="6d836-635">如果更改 <xref:System.Diagnostics.EventLog.Log%2A> 或 <xref:System.Diagnostics.EventLog.MachineName%2A> 属性的值，则在下次读取 <xref:System.Diagnostics.EventLog.Entries%2A> 属性时，将重新填充该属性。</span><span class="sxs-lookup"><span data-stu-id="6d836-635">If you change the value of the <xref:System.Diagnostics.EventLog.Log%2A> or <xref:System.Diagnostics.EventLog.MachineName%2A> property, the <xref:System.Diagnostics.EventLog.Entries%2A> property is repopulated the next time you read it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-636">如果要连接到日志，则无需指定 <xref:System.Diagnostics.EventLog.MachineName%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d836-636">You are not required to specify the <xref:System.Diagnostics.EventLog.MachineName%2A> if you are connecting to a log.</span></span> <span data-ttu-id="6d836-637">如果未指定 <xref:System.Diagnostics.EventLog.MachineName%2A>，则假定为本地计算机 "."。</span><span class="sxs-lookup"><span data-stu-id="6d836-637">If you do not specify the <xref:System.Diagnostics.EventLog.MachineName%2A>, the local computer, ".", is assumed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d836-638">下面的示例读取本地计算机上的事件日志 "MyNewLog" 中的条目。</span><span class="sxs-lookup"><span data-stu-id="6d836-638">The following example reads entries in the event log, "MyNewLog", on the local computer.</span></span>  
  
 [!code-cpp[Classic EventLog.Entries Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.Entries Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.Entries Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.Entries Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.Entries Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.Entries Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.EventLogEntryCollection" />
        <altmember cref="T:System.Diagnostics.EventLogEntry" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEntry" />
      </Docs>
    </Member>
    <Member MemberName="EntryWritten">
      <MemberSignature Language="C#" Value="public event System.Diagnostics.EntryWrittenEventHandler EntryWritten;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Diagnostics.EntryWrittenEventHandler EntryWritten" />
      <MemberSignature Language="DocId" Value="E:System.Diagnostics.EventLog.EntryWritten" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EntryWritten As EntryWrittenEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Diagnostics::EntryWrittenEventHandler ^ EntryWritten;" />
      <MemberSignature Language="F#" Value="member this.EntryWritten : System.Diagnostics.EntryWrittenEventHandler " Usage="member this.EntryWritten : System.Diagnostics.EntryWrittenEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("Raised for each EventLog entry written.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("LogEntryWritten")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.EntryWrittenEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d836-639">向本地计算机上的事件日志写入项时发生。</span><span class="sxs-lookup"><span data-stu-id="6d836-639">Occurs when an entry is written to an event log on the local computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-640">若要获取事件通知，必须将 <xref:System.Diagnostics.EventLog.EnableRaisingEvents%2A> 设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="6d836-640">To get event notifications, you must set <xref:System.Diagnostics.EventLog.EnableRaisingEvents%2A> to `true`.</span></span> <span data-ttu-id="6d836-641">仅当在本地计算机上写入条目时，才能接收事件通知。</span><span class="sxs-lookup"><span data-stu-id="6d836-641">You can only receive event notifications when entries are written on the local computer.</span></span> <span data-ttu-id="6d836-642">您无法接收到在远程计算机上写入的条目的通知。</span><span class="sxs-lookup"><span data-stu-id="6d836-642">You cannot receive notifications for entries written on remote computers.</span></span>  
  
 <span data-ttu-id="6d836-643">创建 <xref:System.Diagnostics.EventLog.EntryWritten> 委托时，需要标识将要处理该事件的方法。</span><span class="sxs-lookup"><span data-stu-id="6d836-643">When you create an <xref:System.Diagnostics.EventLog.EntryWritten> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="6d836-644">若要将事件与事件处理程序关联，请将该委托的一个实例添加到事件中。</span><span class="sxs-lookup"><span data-stu-id="6d836-644">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="6d836-645">事件发生时，将调用事件处理程序，直到删除委托。</span><span class="sxs-lookup"><span data-stu-id="6d836-645">The event handler is called whenever the event occurs, until you remove the delegate.</span></span> <span data-ttu-id="6d836-646">有关用委托处理事件的详细信息，请参阅[处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="6d836-646">For more information about handling events with delegates, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="6d836-647">仅当上一次写入事件至少发生六秒钟，系统才会响应 <xref:System.Diagnostics.EventLog.WriteEntry%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d836-647">The system responds to <xref:System.Diagnostics.EventLog.WriteEntry%2A> only if the last write event occurred at least six seconds previously.</span></span> <span data-ttu-id="6d836-648">这意味着，即使发生了多个事件日志更改，也只会在六秒钟的时间间隔内接收一个 <xref:System.Diagnostics.EventLog.EntryWritten> 事件通知。</span><span class="sxs-lookup"><span data-stu-id="6d836-648">This implies you will only receive one <xref:System.Diagnostics.EventLog.EntryWritten> event notification within a six-second interval, even if more than one event log change occurs.</span></span> <span data-ttu-id="6d836-649">如果在对 <xref:System.Diagnostics.EventLog.WriteEntry%2A>的调用之间插入足够长的睡眠间隔（大约10秒），则不可能丢失事件。</span><span class="sxs-lookup"><span data-stu-id="6d836-649">If you insert a sufficiently long sleep interval (around 10 seconds) between calls to <xref:System.Diagnostics.EventLog.WriteEntry%2A>, you are less likely to miss an event.</span></span> <span data-ttu-id="6d836-650">但是，如果写入事件的发生频率更高，则在下一个间隔之前，可能不会收到事件通知。</span><span class="sxs-lookup"><span data-stu-id="6d836-650">However, if write events occur more frequently, you might not receive the event notification until the next interval.</span></span> <span data-ttu-id="6d836-651">通常，丢失的事件通知不会丢失，但会延迟。</span><span class="sxs-lookup"><span data-stu-id="6d836-651">Typically, missed event notifications are not lost, but delayed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d836-652">下面的示例处理进入写入的事件。</span><span class="sxs-lookup"><span data-stu-id="6d836-652">The following example handles an entry written event.</span></span>  
  
 [!code-cpp[Classic EventLog.EntryWritten Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.EntryWritten Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.EntryWritten Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.EntryWritten Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.EntryWritten Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.EntryWritten Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLog.EnableRaisingEvents" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Exists">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6d836-653">确定指定的日志是否存在。</span><span class="sxs-lookup"><span data-stu-id="6d836-653">Determines whether the specified log exists.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static bool Exists (string logName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists(string logName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.Exists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exists (logName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Exists(System::String ^ logName);" />
      <MemberSignature Language="F#" Value="static member Exists : string -&gt; bool" Usage="System.Diagnostics.EventLog.Exists logName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logName"><span data-ttu-id="6d836-654">要搜索的日志的名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-654">The name of the log to search for.</span></span> <span data-ttu-id="6d836-655">可能的值包括：“应用程序”、“安全性”、“系统”、其他应用程序特定的日志（如与 Active Directory 关联的日志）或计算机上的任何自定义日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-655">Possible values include: Application, Security, System, other application-specific logs (such as those associated with Active Directory), or any custom log on the computer.</span></span></param>
        <summary><span data-ttu-id="6d836-656">确定该日志是否存在于本地计算机上。</span><span class="sxs-lookup"><span data-stu-id="6d836-656">Determines whether the log exists on the local computer.</span></span></summary>
        <returns><span data-ttu-id="6d836-657">如果该日志存在于本地计算机上，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-657"><see langword="true" /> if the log exists on the local computer; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-658">使用此方法来确定本地计算机上是否存在日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-658">Use this method to determine if a log exists on the local computer.</span></span> <span data-ttu-id="6d836-659">如果要确定本地计算机上是否存在源，请使用 <xref:System.Diagnostics.EventLog.SourceExists%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d836-659">If you want to determine whether a source exists on the local computer, use <xref:System.Diagnostics.EventLog.SourceExists%2A>.</span></span>  
  
 <span data-ttu-id="6d836-660">由于此方法访问注册表，因此你必须在本地计算机上具有相应的注册表权限;否则，查询将返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="6d836-660">Because this method accesses the registry, you must have the appropriate registry permissions on the local computer; otherwise, the query returns `false`.</span></span>  
  
 <span data-ttu-id="6d836-661">由于不能在同一台计算机上为新日志指定现有日志的名称，因此请在创建新日志之前使用此方法来确定本地计算机上是否已存在指定的 `logName`。</span><span class="sxs-lookup"><span data-stu-id="6d836-661">Because you cannot give a new log the name of an existing log on the same computer, use this method before creating a new log to determine if the specified `logName` already exists on the local computer.</span></span> <span data-ttu-id="6d836-662">`logName` 参数不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="6d836-662">The `logName` parameter is not case sensitive.</span></span>  
  
 <span data-ttu-id="6d836-663"><xref:System.Diagnostics.EventLog.Exists%2A> 是一种 `static` 方法，因此它可在类本身上调用。</span><span class="sxs-lookup"><span data-stu-id="6d836-663"><xref:System.Diagnostics.EventLog.Exists%2A> is a `static` method, so it can be called on the class itself.</span></span> <span data-ttu-id="6d836-664">不需要创建 <xref:System.Diagnostics.EventLog> 的实例来调用 <xref:System.Diagnostics.EventLog.Exists%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d836-664">It is not necessary to create an instance of <xref:System.Diagnostics.EventLog> to call <xref:System.Diagnostics.EventLog.Exists%2A>.</span></span>  
  
   
  
## Examples  
 [!code-cpp[EventLog_Exists_1#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_Exists_1/CPP/eventlog_exists_1.cpp#1)]
 [!code-csharp[EventLog_Exists_1#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_Exists_1/CS/eventlog_exists_1.cs#1)]
 [!code-vb[EventLog_Exists_1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_Exists_1/VB/eventlog_exists_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d836-665">logName 为 <see langword="null" /> 或该值为空。</span><span class="sxs-lookup"><span data-stu-id="6d836-665">The logName is <see langword="null" /> or the value is empty.</span></span></exception>
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static bool Exists (string logName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists(string logName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.Exists(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exists (logName As String, machineName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Exists(System::String ^ logName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member Exists : string * string -&gt; bool" Usage="System.Diagnostics.EventLog.Exists (logName, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoNotSupported("remote machine is not supported")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logName"><span data-ttu-id="6d836-666">要搜索的日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-666">The log for which to search.</span></span> <span data-ttu-id="6d836-667">可能的值包括：“应用程序”、“安全性”、“系统”、其他应用程序特定的日志（如与 Active Directory 关联的日志）或计算机上的任何自定义日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-667">Possible values include: Application, Security, System, other application-specific logs (such as those associated with Active Directory), or any custom log on the computer.</span></span></param>
        <param name="machineName"><span data-ttu-id="6d836-668">要在其上搜索日志的计算机的名称，对于本地计算机则为“.”。</span><span class="sxs-lookup"><span data-stu-id="6d836-668">The name of the computer on which to search for the log, or "." for the local computer.</span></span></param>
        <summary><span data-ttu-id="6d836-669">确定该日志是否存在于指定计算机上。</span><span class="sxs-lookup"><span data-stu-id="6d836-669">Determines whether the log exists on the specified computer.</span></span></summary>
        <returns><span data-ttu-id="6d836-670">如果该日志存在于指定的计算机上，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-670"><see langword="true" /> if the log exists on the specified computer; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-671">使用此方法来确定远程计算机上是否存在日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-671">Use this method to determine if a log exists on a remote computer.</span></span> <span data-ttu-id="6d836-672">如果要确定远程计算机上是否存在源，请使用 <xref:System.Diagnostics.EventLog.SourceExists%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d836-672">If you want to determine whether a source exists on a remote computer, use <xref:System.Diagnostics.EventLog.SourceExists%2A>.</span></span>  
  
 <span data-ttu-id="6d836-673">由于此方法访问注册表，因此你必须在指定的计算机上具有相应的注册表权限;否则，查询将返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="6d836-673">Because this method accesses the registry, you must have the appropriate registry permissions on the specified computer; otherwise, the query returns `false`.</span></span>  
  
 <span data-ttu-id="6d836-674">由于不能在同一台计算机上为新日志提供现有日志的名称，因此请在创建新日志之前使用此方法，以确定 `machineName` 参数所指定的服务器上是否已存在具有指定 `logName` 的日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-674">Because you cannot give a new log the name of an existing log on the same computer, use this method before creating a new log to determine if one with the specified `logName` already exists on the server specified by the `machineName` parameter.</span></span> <span data-ttu-id="6d836-675">`logName` 和 `machineName` 参数不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="6d836-675">The `logName` and `machineName` parameters are not case sensitive.</span></span>  
  
 <span data-ttu-id="6d836-676"><xref:System.Diagnostics.EventLog.Exists%2A> 是一种 `static` 方法，因此它可在类本身上调用。</span><span class="sxs-lookup"><span data-stu-id="6d836-676"><xref:System.Diagnostics.EventLog.Exists%2A> is a `static` method, so it can be called on the class itself.</span></span> <span data-ttu-id="6d836-677">不需要创建 <xref:System.Diagnostics.EventLog> 的新实例来调用 <xref:System.Diagnostics.EventLog.Exists%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d836-677">It is not necessary to create a new instance of <xref:System.Diagnostics.EventLog> to call <xref:System.Diagnostics.EventLog.Exists%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d836-678"><paramref name="machineName" /> 参数的格式无效。</span><span class="sxs-lookup"><span data-stu-id="6d836-678">The <paramref name="machineName" /> parameter is an invalid format.</span></span> <span data-ttu-id="6d836-679">请确保对在其上执行搜索的计算机使用了正确的语法。</span><span class="sxs-lookup"><span data-stu-id="6d836-679">Make sure you have used proper syntax for the computer on which you are searching.</span></span>  
  
<span data-ttu-id="6d836-680">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-680">-or-</span></span> 
<span data-ttu-id="6d836-681"><paramref name="logName" /> 为 <see langword="null" /> 或该值为空。</span><span class="sxs-lookup"><span data-stu-id="6d836-681">The <paramref name="logName" /> is <see langword="null" /> or the value is empty.</span></span></exception>
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEventLogs">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6d836-682">创建事件日志的数组。</span><span class="sxs-lookup"><span data-stu-id="6d836-682">Creates an array of the event logs.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEventLogs">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.EventLog[] GetEventLogs ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.EventLog[] GetEventLogs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.GetEventLogs" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEventLogs () As EventLog()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Diagnostics::EventLog ^&gt; ^ GetEventLogs();" />
      <MemberSignature Language="F#" Value="static member GetEventLogs : unit -&gt; System.Diagnostics.EventLog[]" Usage="System.Diagnostics.EventLog.GetEventLogs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.EventLog[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6d836-683">在本地计算机上搜索所有的事件日志并创建一个包含该列表的 <see cref="T:System.Diagnostics.EventLog" /> 对象数组。</span><span class="sxs-lookup"><span data-stu-id="6d836-683">Searches for all event logs on the local computer and creates an array of <see cref="T:System.Diagnostics.EventLog" /> objects that contain the list.</span></span></summary>
        <returns><span data-ttu-id="6d836-684"><see cref="T:System.Diagnostics.EventLog" /> 类型的数组，表示本地计算机上的日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-684">An array of type <see cref="T:System.Diagnostics.EventLog" /> that represents the logs on the local computer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-685"><xref:System.Diagnostics.EventLog> 对象的数组是对 <xref:System.Diagnostics.EventLog.GetEventLogs%2A> 进行调用时，本地计算机上所有事件日志的快照。</span><span class="sxs-lookup"><span data-stu-id="6d836-685">The array of <xref:System.Diagnostics.EventLog> objects is a snapshot of all event logs on the local computer when the call to <xref:System.Diagnostics.EventLog.GetEventLogs%2A> is made.</span></span> <span data-ttu-id="6d836-686">这不是动态集合，因此它不会实时反映日志的删除或创建。</span><span class="sxs-lookup"><span data-stu-id="6d836-686">This is not a dynamic collection, so it does not reflect the deletion or creation of logs in real time.</span></span> <span data-ttu-id="6d836-687">在读取或写入之前，应验证阵列中的日志是否存在。</span><span class="sxs-lookup"><span data-stu-id="6d836-687">You should verify that a log in the array exists before you read or write to it.</span></span> <span data-ttu-id="6d836-688">该数组通常至少包含三个日志：应用程序、系统和安全性。</span><span class="sxs-lookup"><span data-stu-id="6d836-688">The array usually includes at least three logs: Application, System, and Security.</span></span> <span data-ttu-id="6d836-689">如果在本地计算机上创建了自定义日志，则它们也会显示在该数组中。</span><span class="sxs-lookup"><span data-stu-id="6d836-689">If you created custom logs on the local computer, they will appear in the array as well.</span></span>  
  
 <span data-ttu-id="6d836-690">若要检索事件日志列表，必须具有相应的注册表权限。</span><span class="sxs-lookup"><span data-stu-id="6d836-690">To retrieve the list of event logs, you must have the appropriate registry permissions.</span></span> <span data-ttu-id="6d836-691">这些权限与调用 <xref:System.Diagnostics.EventLog.Exists%2A> 和 <xref:System.Diagnostics.EventLog.SourceExists%2A>所需的权限完全相同。</span><span class="sxs-lookup"><span data-stu-id="6d836-691">These permissions are identical to those required to call <xref:System.Diagnostics.EventLog.Exists%2A> and <xref:System.Diagnostics.EventLog.SourceExists%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d836-692">下面的示例枚举本地计算机上定义的事件日志，并显示每个事件日志的配置详细信息。</span><span class="sxs-lookup"><span data-stu-id="6d836-692">The following example enumerates the event logs defined on the local computer, and displays configuration details for each event log.</span></span>  
  
 [!code-cpp[EventLogProperties#2](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogProperties/CPP/source.cpp#2)]
 [!code-csharp[EventLogProperties#2](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogProperties/CS/source.cs#2)]
 [!code-vb[EventLogProperties#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogProperties/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="6d836-693">您对注册表没有读访问权。</span><span class="sxs-lookup"><span data-stu-id="6d836-693">You do not have read access to the registry.</span></span>  
  
 <span data-ttu-id="6d836-694">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-694">-or-</span></span>  
  
 <span data-ttu-id="6d836-695">计算机上没有事件日志服务。</span><span class="sxs-lookup"><span data-stu-id="6d836-695">There is no event log service on the computer.</span></span></exception>
        <altmember cref="M:System.Diagnostics.EventLog.Exists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
      </Docs>
    </Member>
    <Member MemberName="GetEventLogs">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.EventLog[] GetEventLogs (string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.EventLog[] GetEventLogs(string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.GetEventLogs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEventLogs (machineName As String) As EventLog()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Diagnostics::EventLog ^&gt; ^ GetEventLogs(System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member GetEventLogs : string -&gt; System.Diagnostics.EventLog[]" Usage="System.Diagnostics.EventLog.GetEventLogs machineName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoNotSupported("remote machine is not supported")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.EventLog[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="machineName"><span data-ttu-id="6d836-696">在其上搜索事件日志的计算机。</span><span class="sxs-lookup"><span data-stu-id="6d836-696">The computer on which to search for event logs.</span></span></param>
        <summary><span data-ttu-id="6d836-697">在给定计算机上搜索所有事件日志并创建一个包含该列表的 <see cref="T:System.Diagnostics.EventLog" /> 对象数组。</span><span class="sxs-lookup"><span data-stu-id="6d836-697">Searches for all event logs on the given computer and creates an array of <see cref="T:System.Diagnostics.EventLog" /> objects that contain the list.</span></span></summary>
        <returns><span data-ttu-id="6d836-698"><see cref="T:System.Diagnostics.EventLog" /> 类型的数组，表示给定计算机上的日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-698">An array of type <see cref="T:System.Diagnostics.EventLog" /> that represents the logs on the given computer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-699"><xref:System.Diagnostics.EventLog> 对象的数组是在调用 <xref:System.Diagnostics.EventLog.GetEventLogs%2A> 时 `machineName` 参数所指定的计算机上所有事件日志的快照。</span><span class="sxs-lookup"><span data-stu-id="6d836-699">The array of <xref:System.Diagnostics.EventLog> objects is a snapshot of all event logs on the computer specified by the `machineName` parameter when the call to <xref:System.Diagnostics.EventLog.GetEventLogs%2A> is made.</span></span> <span data-ttu-id="6d836-700">这不是动态集合，因此它不会实时反映日志的删除或创建。</span><span class="sxs-lookup"><span data-stu-id="6d836-700">This is not a dynamic collection, so it does not reflect the deletion or creation of logs in real time.</span></span> <span data-ttu-id="6d836-701">在读取或写入之前，应验证阵列中的日志是否存在。</span><span class="sxs-lookup"><span data-stu-id="6d836-701">You should verify that a log in the array exists before you read or write to it.</span></span> <span data-ttu-id="6d836-702">该数组通常至少包含三个日志：应用程序、系统和安全性。</span><span class="sxs-lookup"><span data-stu-id="6d836-702">The array usually includes at least three logs: Application, System, and Security.</span></span> <span data-ttu-id="6d836-703">如果在指定的计算机上创建了自定义日志，则它们也会显示在该数组中。</span><span class="sxs-lookup"><span data-stu-id="6d836-703">If you created custom logs on the specified computer, they will appear in the array as well.</span></span>  
  
 <span data-ttu-id="6d836-704"><xref:System.Diagnostics.EventLog.GetEventLogs%2A> 是一种 `static` 方法，因此它可以在 <xref:System.Diagnostics.EventLog> 类本身上进行调用。</span><span class="sxs-lookup"><span data-stu-id="6d836-704"><xref:System.Diagnostics.EventLog.GetEventLogs%2A> is a `static` method, so it can be called on the <xref:System.Diagnostics.EventLog> class itself.</span></span> <span data-ttu-id="6d836-705">不需要创建 <xref:System.Diagnostics.EventLog> 对象的实例来调用此方法。</span><span class="sxs-lookup"><span data-stu-id="6d836-705">It is not necessary to create an instance of an <xref:System.Diagnostics.EventLog> object to make a call to the method.</span></span>  
  
 <span data-ttu-id="6d836-706">若要检索事件日志列表，必须具有相应的注册表权限。</span><span class="sxs-lookup"><span data-stu-id="6d836-706">To retrieve the list of event logs, you must have the appropriate registry permissions.</span></span> <span data-ttu-id="6d836-707">这些权限与调用 <xref:System.Diagnostics.EventLog.Exists%2A> 和 <xref:System.Diagnostics.EventLog.SourceExists%2A>所需的权限完全相同。</span><span class="sxs-lookup"><span data-stu-id="6d836-707">These permissions are identical to those required to call <xref:System.Diagnostics.EventLog.Exists%2A> and <xref:System.Diagnostics.EventLog.SourceExists%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d836-708">下面的示例获取计算机 "myServer" 上的日志列表。</span><span class="sxs-lookup"><span data-stu-id="6d836-708">The following example gets a list of logs on the computer "myServer".</span></span> <span data-ttu-id="6d836-709">然后输出每个日志的名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-709">It then outputs the name of each log.</span></span>  
  
 [!code-cpp[Classic EventLog.GetEventLogs1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.GetEventLogs1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.GetEventLogs1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.GetEventLogs1 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.GetEventLogs1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.GetEventLogs1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d836-710"><paramref name="machineName" /> 参数是无效的计算机名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-710">The <paramref name="machineName" /> parameter is an invalid computer name.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6d836-711">您对注册表没有读访问权。</span><span class="sxs-lookup"><span data-stu-id="6d836-711">You do not have read access to the registry.</span></span>  
  
 <span data-ttu-id="6d836-712">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-712">-or-</span></span>  
  
 <span data-ttu-id="6d836-713">计算机上没有事件日志服务。</span><span class="sxs-lookup"><span data-stu-id="6d836-713">There is no event log service on the computer.</span></span></exception>
        <altmember cref="M:System.Diagnostics.EventLog.Exists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public string Log { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Log" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLog.Log" />
      <MemberSignature Language="VB.NET" Value="Public Property Log As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Log { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Log : string with get, set" Usage="System.Diagnostics.EventLog.Log" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.LogConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("Name of the log that is read and written.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.LogConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("LogLog")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.LogConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d836-714">获取或设置读取或写入的日志名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-714">Gets or sets the name of the log to read from or write to.</span></span></summary>
        <value><span data-ttu-id="6d836-715">日志的名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-715">The name of the log.</span></span> <span data-ttu-id="6d836-716">这可以是“应用程序”、“系统”、“安全性”或一个自定义的日志名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-716">This can be Application, System, Security, or a custom log name.</span></span> <span data-ttu-id="6d836-717">默认值为空字符串("")。</span><span class="sxs-lookup"><span data-stu-id="6d836-717">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-718">默认情况下，服务器上存在三个日志文件： "应用程序"、"系统" 和 "安全性"。</span><span class="sxs-lookup"><span data-stu-id="6d836-718">Three log files exist by default on the server: Application, System, and Security.</span></span> <span data-ttu-id="6d836-719">应用程序和服务使用应用程序日志文件。</span><span class="sxs-lookup"><span data-stu-id="6d836-719">Applications and services use the Application log file.</span></span> <span data-ttu-id="6d836-720">设备驱动程序使用系统日志文件。</span><span class="sxs-lookup"><span data-stu-id="6d836-720">Device drivers use the System log file.</span></span> <span data-ttu-id="6d836-721">当启用了审核功能时，系统将在安全日志中生成成功和失败审核事件。</span><span class="sxs-lookup"><span data-stu-id="6d836-721">The system generates success and failure audit events in the Security log when auditing is turned on.</span></span> <span data-ttu-id="6d836-722">如果安装了其他应用程序，例如 Windows server 上的 Active Directory，则可能存在其他默认的日志文件。</span><span class="sxs-lookup"><span data-stu-id="6d836-722">If you have other applications installed, like Active Directory on Windows servers, there might be other default log files.</span></span> <span data-ttu-id="6d836-723">此外，你可以在本地或远程计算机上创建自定义日志文件。</span><span class="sxs-lookup"><span data-stu-id="6d836-723">In addition, you can create custom log files on a local or remote computer.</span></span> <span data-ttu-id="6d836-724">自定义日志可帮助你在组件将事件写入默认应用程序日志时更详细地组织条目。</span><span class="sxs-lookup"><span data-stu-id="6d836-724">Custom logs help organize your entries in a more detailed way than is allowed when your components write events to the default Application log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-725">日志名称不能超过八个字符。</span><span class="sxs-lookup"><span data-stu-id="6d836-725">Log names are limited to eight characters.</span></span> <span data-ttu-id="6d836-726">根据系统，MyLogSample1 和 MyLogSample2 是相同的日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-726">According to the system, MyLogSample1 and MyLogSample2 are the same log.</span></span>  
  
 <span data-ttu-id="6d836-727">如果写入事件日志，则没有足够的指定 <xref:System.Diagnostics.EventLog.Log%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="6d836-727">If you write to an event log, it is not enough to specify the <xref:System.Diagnostics.EventLog.Log%2A> property.</span></span> <span data-ttu-id="6d836-728">必须将 <xref:System.Diagnostics.EventLog.Source%2A> 属性与事件日志资源相关联才能将其连接到特定日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-728">You must associate a <xref:System.Diagnostics.EventLog.Source%2A> property with your event log resource to connect it to a particular log.</span></span> <span data-ttu-id="6d836-729">仅从日志中读取时，无需指定 <xref:System.Diagnostics.EventLog.Source%2A>，但事件源必须与服务器的注册表中的事件日志资源相关联。</span><span class="sxs-lookup"><span data-stu-id="6d836-729">It is not necessary to specify a <xref:System.Diagnostics.EventLog.Source%2A> when only reading from a log, but an event source must be associated with the event log resource in the server's registry.</span></span> <span data-ttu-id="6d836-730">您只能指定 <xref:System.Diagnostics.EventLog.Log%2A> 名称和 <xref:System.Diagnostics.EventLog.MachineName%2A> （服务器计算机名称）来读取它。</span><span class="sxs-lookup"><span data-stu-id="6d836-730">You can specify only the <xref:System.Diagnostics.EventLog.Log%2A> name and <xref:System.Diagnostics.EventLog.MachineName%2A> (server computer name) to read from it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-731">如果要连接到日志，则无需指定 <xref:System.Diagnostics.EventLog.MachineName%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d836-731">You are not required to specify the <xref:System.Diagnostics.EventLog.MachineName%2A> if you are connecting to a log.</span></span> <span data-ttu-id="6d836-732">如果未指定 <xref:System.Diagnostics.EventLog.MachineName%2A>，则假定为本地计算机（"."）。</span><span class="sxs-lookup"><span data-stu-id="6d836-732">If you do not specify the <xref:System.Diagnostics.EventLog.MachineName%2A>, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="6d836-733">如果尚未指定 <xref:System.Diagnostics.EventLog.Source%2A> 属性，则对 <xref:System.Diagnostics.EventLog.Log%2A> 的调用将返回空字符串（如果未显式设置 <xref:System.Diagnostics.EventLog.Log%2A>，则设置 <xref:System.Diagnostics.EventLog.Log%2A> 属性或通过构造函数）。</span><span class="sxs-lookup"><span data-stu-id="6d836-733">If the <xref:System.Diagnostics.EventLog.Source%2A> property has not been specified, a call to <xref:System.Diagnostics.EventLog.Log%2A> returns an empty string if <xref:System.Diagnostics.EventLog.Log%2A> has not been explicitly set (by setting the <xref:System.Diagnostics.EventLog.Log%2A> property, or through the constructor).</span></span> <span data-ttu-id="6d836-734">如果已指定了 <xref:System.Diagnostics.EventLog.Source%2A>，<xref:System.Diagnostics.EventLog.Log%2A> 将返回该源注册到的日志的名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-734">If the <xref:System.Diagnostics.EventLog.Source%2A> has been specified, <xref:System.Diagnostics.EventLog.Log%2A> returns the name of the log to which that source was registered.</span></span>  
  
 <span data-ttu-id="6d836-735">一次只能向一个日志注册一个源。</span><span class="sxs-lookup"><span data-stu-id="6d836-735">A source can only be registered to one log at a time.</span></span> <span data-ttu-id="6d836-736">如果为 <xref:System.Diagnostics.EventLog>的实例设置了 <xref:System.Diagnostics.EventLog.Source%2A> 属性，则不能更改该 <xref:System.Diagnostics.EventLog> 的 <xref:System.Diagnostics.EventLog.Log%2A> 属性，而无需更改 <xref:System.Diagnostics.EventLog.Source%2A> 的值或先调用 <xref:System.Diagnostics.EventLog.DeleteEventSource%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d836-736">If the <xref:System.Diagnostics.EventLog.Source%2A> property was set for an instance of <xref:System.Diagnostics.EventLog>, you cannot change the <xref:System.Diagnostics.EventLog.Log%2A> property for that <xref:System.Diagnostics.EventLog> without changing the value of <xref:System.Diagnostics.EventLog.Source%2A> or calling <xref:System.Diagnostics.EventLog.DeleteEventSource%2A> first.</span></span> <span data-ttu-id="6d836-737">如果在设置了 <xref:System.Diagnostics.EventLog.Source%2A> 属性之后更改 <xref:System.Diagnostics.EventLog.Log%2A> 属性，则写入日志项会引发异常。</span><span class="sxs-lookup"><span data-stu-id="6d836-737">If you change the <xref:System.Diagnostics.EventLog.Log%2A> property after the <xref:System.Diagnostics.EventLog.Source%2A> property has been set, writing a log entry throws an exception.</span></span>  
  
 <span data-ttu-id="6d836-738">操作系统将事件日志存储为文件。</span><span class="sxs-lookup"><span data-stu-id="6d836-738">The operating system stores event logs as files.</span></span> <span data-ttu-id="6d836-739">使用 <xref:System.Diagnostics.EventLogInstaller> 或 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 创建新的事件日志时，关联的文件将存储在指定计算机上的%SystemRoot%\System32\Config 目录中。</span><span class="sxs-lookup"><span data-stu-id="6d836-739">When you use <xref:System.Diagnostics.EventLogInstaller> or <xref:System.Diagnostics.EventLog.CreateEventSource%2A> to create a new event log, the associated file is stored in the %SystemRoot%\System32\Config directory on the specified computer.</span></span> <span data-ttu-id="6d836-740">文件名的设置方法是将 <xref:System.Diagnostics.EventLog.Log%2A> 属性的前8个字符追加到文件扩展名 ".evt"。</span><span class="sxs-lookup"><span data-stu-id="6d836-740">The file name is set by appending the first 8 characters of the <xref:System.Diagnostics.EventLog.Log%2A> property with the ".evt" file name extension.</span></span>  
  
 <span data-ttu-id="6d836-741">不能单独使用 <xref:System.Diagnostics.EventLog.Log%2A> 属性创建新日志（无需指定日志的源）。</span><span class="sxs-lookup"><span data-stu-id="6d836-741">You cannot create a new log using the <xref:System.Diagnostics.EventLog.Log%2A> property alone (without specifying a source for the log).</span></span> <span data-ttu-id="6d836-742">可以调用 <xref:System.Diagnostics.EventLog.CreateEventSource%2A>，将新的日志名称作为参数传入，然后调用 <xref:System.Diagnostics.EventLog.DeleteEventSource%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d836-742">You can call <xref:System.Diagnostics.EventLog.CreateEventSource%2A>, passing in a new log name as a parameter, and then call <xref:System.Diagnostics.EventLog.DeleteEventSource%2A>.</span></span> <span data-ttu-id="6d836-743">但是，此目的通常是创建（并写入）新的特定于应用程序的日志，或从现有日志中读取。</span><span class="sxs-lookup"><span data-stu-id="6d836-743">However, the intent is usually either to create (and write entries to) new application-specific logs, or to read from existing logs.</span></span>  
  
 <span data-ttu-id="6d836-744">如果 <xref:System.Diagnostics.EventLog.Log%2A> 值发生更改，则将关闭事件日志并释放所有事件句柄。</span><span class="sxs-lookup"><span data-stu-id="6d836-744">If the <xref:System.Diagnostics.EventLog.Log%2A> value changes, the event log is closed and all event handles are released.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="6d836-745">如果将 <xref:System.Diagnostics.EventLog.Log%2A> 属性设置为不存在的日志名称，系统会将 <xref:System.Diagnostics.EventLog> 附加到应用程序日志中，但不会警告你使用的日志不是你指定的日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-745">If you set the <xref:System.Diagnostics.EventLog.Log%2A> property to the name of a log that does not exist, the system attaches the <xref:System.Diagnostics.EventLog> to the Application log, but does not warn you that it is using a log other than the one you specified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d836-746">下面的示例读取本地计算机上的事件日志 "NewEventLog" 中的条目。</span><span class="sxs-lookup"><span data-stu-id="6d836-746">The following example reads entries in the event log, "NewEventLog", on the local computer.</span></span>  
  
 [!code-cpp[Classic EventLog.Log Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.Log Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.Log Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.Log Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.Log Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.Log Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
        <altmember cref="M:System.Diagnostics.EventLog.Exists(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.Delete(System.String)" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="T:System.Diagnostics.EventLogEntryCollection" />
      </Docs>
    </Member>
    <Member MemberName="LogDisplayName">
      <MemberSignature Language="C#" Value="public string LogDisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LogDisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLog.LogDisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogDisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LogDisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogDisplayName : string" Usage="System.Diagnostics.EventLog.LogDisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d836-747">获取事件日志的友好名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-747">Gets the event log's friendly name.</span></span></summary>
        <value><span data-ttu-id="6d836-748">一个表示系统的事件查看器中事件日志的名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-748">A name that represents the event log in the system's event viewer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="6d836-749">在 Windows Vista 和更高版本中，用户没有访问安全日志的权限。</span><span class="sxs-lookup"><span data-stu-id="6d836-749">In Windows Vista and later, users do not have permission to access the security log.</span></span> <span data-ttu-id="6d836-750">如果以用户身份运行 Windows Vista 或更高版本，则在尝试访问安全日志中的事件的显示名称时，会收到 <xref:System.Security.SecurityException>。</span><span class="sxs-lookup"><span data-stu-id="6d836-750">If you are running Windows Vista or later as a user, you will get a <xref:System.Security.SecurityException> when you attempt to access the display name for an event in the security log.</span></span>  
>   
>  <span data-ttu-id="6d836-751">在 Windows Vista 或更高版本中，用户帐户控制 (UAC) 决定用户的特权。</span><span class="sxs-lookup"><span data-stu-id="6d836-751">In Windows Vista and later, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="6d836-752">如果您是内置的 Administrators 组的成员，将为您分配两个运行时访问令牌：一个标准用户访问令牌和一个管理员访问令牌。</span><span class="sxs-lookup"><span data-stu-id="6d836-752">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="6d836-753">默认情况下，您拥有标准用户角色。</span><span class="sxs-lookup"><span data-stu-id="6d836-753">By default, you are in the standard user role.</span></span> <span data-ttu-id="6d836-754">若要执行访问安全日志的代码，必须首先将你的特权从标准用户提升到管理员。</span><span class="sxs-lookup"><span data-stu-id="6d836-754">To execute the code that accesses the security log, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="6d836-755">你可以通过以下方式执行此操作：右键单击应用程序图标并指示需以管理员身份运行。</span><span class="sxs-lookup"><span data-stu-id="6d836-755">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d836-756">下面的示例枚举本地计算机上定义的事件日志，并显示每个事件日志的 <xref:System.Diagnostics.EventLog.LogDisplayName%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d836-756">The following example enumerates the event logs defined on the local computer and displays the <xref:System.Diagnostics.EventLog.LogDisplayName%2A> for each event log.</span></span>  
  
 [!code-cpp[EventLogProperties#2](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogProperties/CPP/source.cpp#2)]
 [!code-csharp[EventLogProperties#2](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogProperties/CS/source.cs#2)]
 [!code-vb[EventLogProperties#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogProperties/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6d836-757">此计算机的注册表中不存在指定的 <see cref="P:System.Diagnostics.EventLog.Log" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-757">The specified <see cref="P:System.Diagnostics.EventLog.Log" /> does not exist in the registry for this computer.</span></span></exception>
        <altmember cref="M:System.Diagnostics.EventLog.RegisterDisplayName(System.String,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="LogNameFromSourceName">
      <MemberSignature Language="C#" Value="public static string LogNameFromSourceName (string source, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string LogNameFromSourceName(string source, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.LogNameFromSourceName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogNameFromSourceName (source As String, machineName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LogNameFromSourceName(System::String ^ source, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member LogNameFromSourceName : string * string -&gt; string" Usage="System.Diagnostics.EventLog.LogNameFromSourceName (source, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoNotSupported("remote machine is not supported")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="6d836-758">事件源的名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-758">The name of the event source.</span></span></param>
        <param name="machineName"><span data-ttu-id="6d836-759">要从中删除日志的计算机名称，对于本地计算机则为“.”。</span><span class="sxs-lookup"><span data-stu-id="6d836-759">The name of the computer on which to look, or "." for the local computer.</span></span></param>
        <summary><span data-ttu-id="6d836-760">获取指定的源注册到的日志的名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-760">Gets the name of the log to which the specified source is registered.</span></span></summary>
        <returns><span data-ttu-id="6d836-761">与注册表中的指定源关联的日志名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-761">The name of the log associated with the specified source in the registry.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-762">事件源指示记录事件的内容。</span><span class="sxs-lookup"><span data-stu-id="6d836-762">The event source indicates what logs the event.</span></span> <span data-ttu-id="6d836-763">它通常是应用程序的名称，或者应用程序的子组件的名称（如果应用程序很大）。</span><span class="sxs-lookup"><span data-stu-id="6d836-763">It is often the name of the application, or the name of a subcomponent of the application, if the application is large.</span></span> <span data-ttu-id="6d836-764">应用程序和服务应写入应用程序日志或自定义日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-764">Applications and services should write to the Application log or a custom log.</span></span> <span data-ttu-id="6d836-765">设备驱动程序应该写入系统日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-765">Device drivers should write to the System log.</span></span>  
  
 <span data-ttu-id="6d836-766">当您创建一个新的源（该源只能一次写入一个日志）时，系统会将您的应用程序和事件日志注册为条目的有效源。</span><span class="sxs-lookup"><span data-stu-id="6d836-766">When you create a new source, which can only write to one log at a time, the system registers your application with the event log as a valid source of entries.</span></span> <span data-ttu-id="6d836-767"><xref:System.Diagnostics.EventLog.Source%2A> 属性可以是任意字符串，但计算机上的其他源不能使用该名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-767">The <xref:System.Diagnostics.EventLog.Source%2A> property can be any string, but the name cannot be used by other sources on the computer.</span></span> <span data-ttu-id="6d836-768">尝试创建重复的 <xref:System.Diagnostics.EventLog.Source%2A> 值会引发异常。</span><span class="sxs-lookup"><span data-stu-id="6d836-768">An attempt to create a duplicated <xref:System.Diagnostics.EventLog.Source%2A> value throws an exception.</span></span> <span data-ttu-id="6d836-769">不过，单个事件日志可能会写入多个不同的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-769">However, a single event log can have many different sources writing to it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d836-770">以下示例从本地计算机中删除源。</span><span class="sxs-lookup"><span data-stu-id="6d836-770">The following example deletes a source from the local computer.</span></span> <span data-ttu-id="6d836-771">该示例从其源确定日志，然后删除日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-771">The example determines the log from its source, and then deletes the log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-772">多个源可能会写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-772">More than one source might write to an event log.</span></span> <span data-ttu-id="6d836-773">删除自定义日志之前，请确保没有其他源写入该日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-773">Before deleting a custom log, make sure there are no other sources writing to that log.</span></span>  
  
 [!code-cpp[Classic EventLog.DeleteEventSource Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.DeleteEventSource Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.DeleteEventSource Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.DeleteEventSource Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.DeleteEventSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.DeleteEventSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLog.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MachineName : string with get, set" Usage="System.Diagnostics.EventLog.MachineName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(".")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("Name of the machine that this log get written to.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("LogMachineName")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d836-774">获取或设置在其上读取或写入事件的计算机的名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-774">Gets or sets the name of the computer on which to read or write events.</span></span></summary>
        <value><span data-ttu-id="6d836-775">事件日志驻留的服务器的名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-775">The name of the server on which the event log resides.</span></span> <span data-ttu-id="6d836-776">默认为本地计算机 (".")。</span><span class="sxs-lookup"><span data-stu-id="6d836-776">The default is the local computer (".").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-777">如果写入事件日志，则必须将 <xref:System.Diagnostics.EventLog.Source%2A> 与事件日志对象相关联，以将其连接到特定日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-777">If you write to an event log, you must associate a <xref:System.Diagnostics.EventLog.Source%2A> with your event log object to connect it to a particular log.</span></span> <span data-ttu-id="6d836-778">仅从日志中读取时，无需指定 <xref:System.Diagnostics.EventLog.Source%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="6d836-778">It is not necessary to specify the <xref:System.Diagnostics.EventLog.Source%2A> property when only reading from a log.</span></span> <span data-ttu-id="6d836-779">只能指定 <xref:System.Diagnostics.EventLog.Log%2A> 名称和 <xref:System.Diagnostics.EventLog.MachineName%2A> （服务器计算机名称）。</span><span class="sxs-lookup"><span data-stu-id="6d836-779">You can specify only the <xref:System.Diagnostics.EventLog.Log%2A> name and <xref:System.Diagnostics.EventLog.MachineName%2A> (server computer name).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-780">如果要连接到日志，则无需指定 <xref:System.Diagnostics.EventLog.MachineName%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d836-780">You need not specify the <xref:System.Diagnostics.EventLog.MachineName%2A> if you are connecting to a log.</span></span> <span data-ttu-id="6d836-781">如果未指定 <xref:System.Diagnostics.EventLog.MachineName%2A>，则假定为本地计算机（"."）。</span><span class="sxs-lookup"><span data-stu-id="6d836-781">If you do not specify the <xref:System.Diagnostics.EventLog.MachineName%2A>, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="6d836-782">一次只能向一个日志注册一个源。</span><span class="sxs-lookup"><span data-stu-id="6d836-782">A source can only be registered to one log at a time.</span></span> <span data-ttu-id="6d836-783">如果为 <xref:System.Diagnostics.EventLog>的实例设置了 <xref:System.Diagnostics.EventLog.Source%2A> 属性，则不能更改该 <xref:System.Diagnostics.EventLog> 的 <xref:System.Diagnostics.EventLog.MachineName%2A> 属性，而无需更改 <xref:System.Diagnostics.EventLog.Source%2A> 的值或先调用 <xref:System.Diagnostics.EventLog.DeleteEventSource%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d836-783">If the <xref:System.Diagnostics.EventLog.Source%2A> property was set for an instance of <xref:System.Diagnostics.EventLog>, you cannot change the <xref:System.Diagnostics.EventLog.MachineName%2A> property for that <xref:System.Diagnostics.EventLog> without changing the value of <xref:System.Diagnostics.EventLog.Source%2A> or calling <xref:System.Diagnostics.EventLog.DeleteEventSource%2A> first.</span></span> <span data-ttu-id="6d836-784">如果更改 <xref:System.Diagnostics.EventLog.MachineName%2A> 属性，则 <xref:System.Diagnostics.EventLog> 会关闭所有句柄并重新附加到新计算机上的日志和源。</span><span class="sxs-lookup"><span data-stu-id="6d836-784">If you change the <xref:System.Diagnostics.EventLog.MachineName%2A> property, the <xref:System.Diagnostics.EventLog> closes all handles and reattaches to the log and source on the new computer.</span></span>  
  
 <span data-ttu-id="6d836-785"><xref:System.Diagnostics.EventLog.MachineName%2A> 值不能为空字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-785">The <xref:System.Diagnostics.EventLog.MachineName%2A> value cannot be an empty string.</span></span> <span data-ttu-id="6d836-786">如果未显式设置，则默认为本地计算机（"."）。</span><span class="sxs-lookup"><span data-stu-id="6d836-786">If it is not explicitly set, it defaults to the local computer (".").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d836-787">下面的示例读取指定计算机上的事件日志 "NewEventLog" 中的条目。</span><span class="sxs-lookup"><span data-stu-id="6d836-787">The following example reads entries in the event log, "NewEventLog", on a specified computer.</span></span>  
  
 [!code-cpp[Classic EventLog.MachineName Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.MachineName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.MachineName Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.MachineName Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.MachineName Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.MachineName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d836-788">计算机名称无效。</span><span class="sxs-lookup"><span data-stu-id="6d836-788">The computer name is invalid.</span></span></exception>
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.Exists(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.GetEventLogs" />
      </Docs>
    </Member>
    <Member MemberName="MaximumKilobytes">
      <MemberSignature Language="C#" Value="public long MaximumKilobytes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumKilobytes" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLog.MaximumKilobytes" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumKilobytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumKilobytes { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumKilobytes : int64 with get, set" Usage="System.Diagnostics.EventLog.MaximumKilobytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;dotnet-plat-ext-5.0;net-5.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d836-789">获取或设置最大事件日志大小（以 KB 为单位）。</span><span class="sxs-lookup"><span data-stu-id="6d836-789">Gets or sets the maximum event log size in kilobytes.</span></span></summary>
        <value><span data-ttu-id="6d836-790">最大事件日志大小（以 KB 为单位）。</span><span class="sxs-lookup"><span data-stu-id="6d836-790">The maximum event log size in kilobytes.</span></span> <span data-ttu-id="6d836-791">默认值为 512，表示最大文件大小为 512 KB。</span><span class="sxs-lookup"><span data-stu-id="6d836-791">The default is 512, indicating a maximum file size of 512 kilobytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-792"><xref:System.Diagnostics.EventLog.MaximumKilobytes%2A> 属性表示事件日志文件的大小限制。</span><span class="sxs-lookup"><span data-stu-id="6d836-792">The <xref:System.Diagnostics.EventLog.MaximumKilobytes%2A> property represents the size limit of the event log file.</span></span> <span data-ttu-id="6d836-793">当事件日志达到大小限制时，配置的 <xref:System.Diagnostics.EventLog.OverflowAction%2A> 值将确定是丢弃新条目，还是新条目覆盖旧条目。</span><span class="sxs-lookup"><span data-stu-id="6d836-793">When the event log reaches the size limit, the configured <xref:System.Diagnostics.EventLog.OverflowAction%2A> value determines whether new entries are discarded, or whether new entries overwrite older entries.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-794">此属性表示此实例所表示的事件日志的配置设置。</span><span class="sxs-lookup"><span data-stu-id="6d836-794">This property represents a configuration setting for the event log represented by this instance.</span></span> <span data-ttu-id="6d836-795">当事件日志达到其最大值时，此属性指定操作系统如何处理为事件日志注册的所有事件源写入的新项。</span><span class="sxs-lookup"><span data-stu-id="6d836-795">When the event log reaches its maximum size, this property specifies how the operating system handles new entries written by all event sources registered for the event log.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d836-796">下面的示例枚举本地计算机上定义的事件日志，并显示每个事件日志的配置详细信息。</span><span class="sxs-lookup"><span data-stu-id="6d836-796">The following example enumerates the event logs defined on the local computer, and displays configuration details for each event log.</span></span>  
  
 [!code-cpp[EventLogProperties#2](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogProperties/CPP/source.cpp#2)]
 [!code-csharp[EventLogProperties#2](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogProperties/CS/source.cs#2)]
 [!code-vb[EventLogProperties#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogProperties/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6d836-797">指定值小于 64，或大于 4194240，或不是 64 的偶数倍。</span><span class="sxs-lookup"><span data-stu-id="6d836-797">The specified value is less than 64, or greater than 4194240, or not an even multiple of 64.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6d836-798"><see cref="P:System.Diagnostics.EventLog.Log" /> 值不是有效的日志名。</span><span class="sxs-lookup"><span data-stu-id="6d836-798">The <see cref="P:System.Diagnostics.EventLog.Log" /> value is not a valid log name.</span></span>  
  
<span data-ttu-id="6d836-799">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-799">-or-</span></span> 
<span data-ttu-id="6d836-800">事件日志的注册表项无法在目标计算机上打开。</span><span class="sxs-lookup"><span data-stu-id="6d836-800">The registry key for the event log could not be opened on the target computer.</span></span></exception>
        <altmember cref="P:System.Diagnostics.EventLog.OverflowAction" />
        <altmember cref="M:System.Diagnostics.EventLog.ModifyOverflowPolicy(System.Diagnostics.OverflowAction,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MinimumRetentionDays">
      <MemberSignature Language="C#" Value="public int MinimumRetentionDays { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumRetentionDays" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLog.MinimumRetentionDays" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinimumRetentionDays As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinimumRetentionDays { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinimumRetentionDays : int" Usage="System.Diagnostics.EventLog.MinimumRetentionDays" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d836-801">获取要在事件日志中保留项的天数。</span><span class="sxs-lookup"><span data-stu-id="6d836-801">Gets the number of days to retain entries in the event log.</span></span></summary>
        <value><span data-ttu-id="6d836-802">事件日志中的项被保留的天数。</span><span class="sxs-lookup"><span data-stu-id="6d836-802">The number of days that entries in the event log are retained.</span></span> <span data-ttu-id="6d836-803">默认值为 7。</span><span class="sxs-lookup"><span data-stu-id="6d836-803">The default value is 7.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-804">使用 <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> 属性检查事件日志的当前设置。</span><span class="sxs-lookup"><span data-stu-id="6d836-804">Use the <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> property to examine the current setting for an event log.</span></span> <span data-ttu-id="6d836-805">使用 <xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A> 更改事件日志中每个条目必须保留的最小天数。</span><span class="sxs-lookup"><span data-stu-id="6d836-805">Use <xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A> to change the minimum number of days that each entry in the event log must be retained.</span></span>  
  
 <span data-ttu-id="6d836-806"><xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> 值取决于事件日志的已配置溢出行为。</span><span class="sxs-lookup"><span data-stu-id="6d836-806">The <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> value depends on the configured overflow behavior of the event log.</span></span> <span data-ttu-id="6d836-807">如果事件日志的 <xref:System.Diagnostics.OverflowAction> 属性设置为 <xref:System.Diagnostics.OverflowAction.OverwriteAsNeeded>，则 <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> 值为0。</span><span class="sxs-lookup"><span data-stu-id="6d836-807">If the <xref:System.Diagnostics.OverflowAction> property for an event log is set to <xref:System.Diagnostics.OverflowAction.OverwriteAsNeeded>, then the <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> value is 0.</span></span> <span data-ttu-id="6d836-808">如果事件日志的 <xref:System.Diagnostics.OverflowAction> 属性设置为 <xref:System.Diagnostics.OverflowAction.DoNotOverwrite>，则 <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> 值为-1。</span><span class="sxs-lookup"><span data-stu-id="6d836-808">If the <xref:System.Diagnostics.OverflowAction> property for an event log is set to <xref:System.Diagnostics.OverflowAction.DoNotOverwrite>, then the <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> value is -1.</span></span> <span data-ttu-id="6d836-809">如果事件日志的 <xref:System.Diagnostics.OverflowAction> 属性设置为 <xref:System.Diagnostics.OverflowAction.OverwriteOlder>，则 <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> 值大于零，并且表示在事件日志已满时保留事件日志条目的天数。</span><span class="sxs-lookup"><span data-stu-id="6d836-809">If the <xref:System.Diagnostics.OverflowAction> property for an event log is set to <xref:System.Diagnostics.OverflowAction.OverwriteOlder>, then the <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> value is greater than zero, and represents the number of days to retain event log entries when the event log is full.</span></span>  
  
 <span data-ttu-id="6d836-810">仅当事件日志达到其大小限制时才会发生溢出行为。</span><span class="sxs-lookup"><span data-stu-id="6d836-810">The overflow behavior only occurs when an event log reaches its size limit.</span></span> <span data-ttu-id="6d836-811">如果 <xref:System.Diagnostics.EventLog> 将其 <xref:System.Diagnostics.EventLog.OverflowAction%2A> 设置为 <xref:System.Diagnostics.OverflowAction.OverwriteOlder>，并且事件日志达到其最大大小，则仅在新条目可以替换其年龄超过 <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> 句点的条目时才写入新条目。</span><span class="sxs-lookup"><span data-stu-id="6d836-811">When an <xref:System.Diagnostics.EventLog> has its <xref:System.Diagnostics.EventLog.OverflowAction%2A> set to <xref:System.Diagnostics.OverflowAction.OverwriteOlder>, and the event log reaches its maximum size, then new entries are written only if they can replace entries whose age exceeds the <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> period.</span></span> <span data-ttu-id="6d836-812">如果定期存档事件日志，则可在最短时间内保留事件条目。</span><span class="sxs-lookup"><span data-stu-id="6d836-812">Retaining event entries for a minimum period is appropriate when the event log is archived regularly.</span></span> <span data-ttu-id="6d836-813">否则，当事件日志达到其限制时，可能会丢失新条目。</span><span class="sxs-lookup"><span data-stu-id="6d836-813">Otherwise, you risk losing new entries when the event log reaches its limit.</span></span> <span data-ttu-id="6d836-814">若要避免丢失新的事件信息，请根据特定事件日志的存档计划设置事件的最短保持天数。</span><span class="sxs-lookup"><span data-stu-id="6d836-814">To avoid losing new event information, set the minimum retention days for events based on your archive schedule for a particular event log.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d836-815">下面的示例枚举本地计算机上定义的事件日志，并显示每个事件日志的配置详细信息。</span><span class="sxs-lookup"><span data-stu-id="6d836-815">The following example enumerates the event logs defined on the local computer, and displays configuration details for each event log.</span></span>  
  
 [!code-cpp[EventLogProperties#2](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogProperties/CPP/source.cpp#2)]
 [!code-csharp[EventLogProperties#2](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogProperties/CS/source.cs#2)]
 [!code-vb[EventLogProperties#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogProperties/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLog.MaximumKilobytes" />
        <altmember cref="M:System.Diagnostics.EventLog.ModifyOverflowPolicy(System.Diagnostics.OverflowAction,System.Int32)" />
        <altmember cref="P:System.Diagnostics.EventLog.OverflowAction" />
      </Docs>
    </Member>
    <Member MemberName="ModifyOverflowPolicy">
      <MemberSignature Language="C#" Value="public void ModifyOverflowPolicy (System.Diagnostics.OverflowAction action, int retentionDays);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ModifyOverflowPolicy(valuetype System.Diagnostics.OverflowAction action, int32 retentionDays) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.ModifyOverflowPolicy(System.Diagnostics.OverflowAction,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ModifyOverflowPolicy (action As OverflowAction, retentionDays As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ModifyOverflowPolicy(System::Diagnostics::OverflowAction action, int retentionDays);" />
      <MemberSignature Language="F#" Value="member this.ModifyOverflowPolicy : System.Diagnostics.OverflowAction * int -&gt; unit" Usage="eventLog.ModifyOverflowPolicy (action, retentionDays)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Diagnostics.OverflowAction" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="retentionDays" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="6d836-816">向事件日志写入新项的溢出行为。</span><span class="sxs-lookup"><span data-stu-id="6d836-816">The overflow behavior for writing new entries to the event log.</span></span></param>
        <param name="retentionDays"><span data-ttu-id="6d836-817">每个事件日志项要保留的最小天数。</span><span class="sxs-lookup"><span data-stu-id="6d836-817">The minimum number of days each event log entry is retained.</span></span> <span data-ttu-id="6d836-818">只有在 <paramref name="action" /> 设置为 <see cref="F:System.Diagnostics.OverflowAction.OverwriteOlder" /> 时，才使用此参数。</span><span class="sxs-lookup"><span data-stu-id="6d836-818">This parameter is used only if <paramref name="action" /> is set to <see cref="F:System.Diagnostics.OverflowAction.OverwriteOlder" />.</span></span></param>
        <summary><span data-ttu-id="6d836-819">更改已配置的行为，以便在事件日志达到其最大文件大小时写入新项。</span><span class="sxs-lookup"><span data-stu-id="6d836-819">Changes the configured behavior for writing new entries when the event log reaches its maximum file size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-820">事件日志的溢出行为指定将新条目写入到已达到其最大文件大小的日志时会发生的情况。</span><span class="sxs-lookup"><span data-stu-id="6d836-820">The overflow behavior for an event log specifies what happens when new entries are to be written to a log that has reached its maximum file size.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-821">仅当事件日志达到其最大文件大小时，溢出行为才会生效。</span><span class="sxs-lookup"><span data-stu-id="6d836-821">The overflow behavior takes effect only when an event log reaches its maximum file size.</span></span> <span data-ttu-id="6d836-822">溢出行为不影响将新条目写入到可容纳其他事件日志条目的日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-822">The overflow behavior does not affect writing a new entry to a log that can accommodate additional event log entries.</span></span>  
  
 <span data-ttu-id="6d836-823"><xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A> 方法配置事件日志的溢出行为。</span><span class="sxs-lookup"><span data-stu-id="6d836-823">The <xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A> method configures the overflow behavior of an event log.</span></span> <span data-ttu-id="6d836-824"><xref:System.Diagnostics.EventLog> 实例。</span><span class="sxs-lookup"><span data-stu-id="6d836-824"><xref:System.Diagnostics.EventLog> instance.</span></span> <span data-ttu-id="6d836-825">为 <xref:System.Diagnostics.EventLog.Log%2A> 属性指定的事件日志调用此方法后，<xref:System.Diagnostics.EventLog.OverflowAction%2A> 和 <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> 属性值将反映新配置的溢出行为。</span><span class="sxs-lookup"><span data-stu-id="6d836-825">After calling this method for the event log specified by the <xref:System.Diagnostics.EventLog.Log%2A> property, the <xref:System.Diagnostics.EventLog.OverflowAction%2A> and <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> property values reflect the newly configured overflow behavior.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-826">此属性表示此实例所表示的事件日志的配置设置。</span><span class="sxs-lookup"><span data-stu-id="6d836-826">This property represents a configuration setting for the event log represented by this instance.</span></span> <span data-ttu-id="6d836-827">当事件日志达到其最大值时，此属性指定操作系统如何处理为事件日志注册的所有事件源写入的新项。</span><span class="sxs-lookup"><span data-stu-id="6d836-827">When the event log reaches its maximum size, this property specifies how the operating system handles new entries written by all event sources registered for the event log.</span></span>  
  
 <span data-ttu-id="6d836-828">将 `action` 参数设置为 <xref:System.Diagnostics.OverflowAction.OverwriteAsNeeded>，以指示当 <xref:System.Diagnostics.EventLog> 达到其最大大小时，新项覆盖最旧的条目。</span><span class="sxs-lookup"><span data-stu-id="6d836-828">Set the `action` parameter to <xref:System.Diagnostics.OverflowAction.OverwriteAsNeeded> to indicate that a new entry overwrites the oldest entry when the <xref:System.Diagnostics.EventLog> reaches its maximum size.</span></span> <span data-ttu-id="6d836-829">如果 `action` 参数设置为 <xref:System.Diagnostics.OverflowAction.OverwriteAsNeeded>，则将忽略 `retentionDays` 参数值。</span><span class="sxs-lookup"><span data-stu-id="6d836-829">If the `action` parameter is set to <xref:System.Diagnostics.OverflowAction.OverwriteAsNeeded>, the `retentionDays` parameter value is ignored.</span></span>  
  
 <span data-ttu-id="6d836-830">将 `action` 参数设置为 <xref:System.Diagnostics.OverflowAction.OverwriteOlder>，以指示当 <xref:System.Diagnostics.EventLog> 达到其最大值时，每个新条目都覆盖旧条目。</span><span class="sxs-lookup"><span data-stu-id="6d836-830">Set the `action` parameter to <xref:System.Diagnostics.OverflowAction.OverwriteOlder> to indicate that each new entry overwrites older entries when the <xref:System.Diagnostics.EventLog> reaches its maximum size.</span></span> <span data-ttu-id="6d836-831">指定使用 `retentionDays` 参数在日志中保留事件的天数。</span><span class="sxs-lookup"><span data-stu-id="6d836-831">Specify the number of days that events must be retained in the log using the `retentionDays` parameter.</span></span> <span data-ttu-id="6d836-832">保留范围内写入的事件不会被新条目覆盖。</span><span class="sxs-lookup"><span data-stu-id="6d836-832">Events written within the retention range are not overwritten by new entries.</span></span>  
  
 <span data-ttu-id="6d836-833">将 `action` 参数设置为 <xref:System.Diagnostics.OverflowAction.DoNotOverwrite> 在达到最大日志大小时放弃新事件。</span><span class="sxs-lookup"><span data-stu-id="6d836-833">Set the `action` parameter to <xref:System.Diagnostics.OverflowAction.DoNotOverwrite> to discard new events when the maximum log size is reached.</span></span> <span data-ttu-id="6d836-834">如果 `action` 参数设置为 <xref:System.Diagnostics.OverflowAction.DoNotOverwrite>，则将忽略 `retentionDays` 参数值。</span><span class="sxs-lookup"><span data-stu-id="6d836-834">If the `action` parameter is set to <xref:System.Diagnostics.OverflowAction.DoNotOverwrite>, the `retentionDays` parameter value is ignored.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="6d836-835">将溢出策略设置为 <xref:System.Diagnostics.OverflowAction.DoNotOverwrite> 指定在事件日志已满时放弃新条目。</span><span class="sxs-lookup"><span data-stu-id="6d836-835">Setting the overflow policy to <xref:System.Diagnostics.OverflowAction.DoNotOverwrite> specifies that new entries are discarded when the event log is full.</span></span> <span data-ttu-id="6d836-836">如果使用此设置，请确保定期存档和清除事件日志，以避免达到其最大大小限制。</span><span class="sxs-lookup"><span data-stu-id="6d836-836">If you use this setting, ensure the event log is regularly archived and cleared to avoid reaching its maximum size limit.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d836-837">下面的示例显示指定事件日志的已配置溢出策略，并允许用户为事件日志选择新的溢出策略设置。</span><span class="sxs-lookup"><span data-stu-id="6d836-837">The following example displays the configured overflow policy for a specified event log, and allows the user to select a new overflow policy setting for the event log.</span></span>  
  
 [!code-cpp[EventLogProperties#3](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogProperties/CPP/source.cpp#3)]
 [!code-csharp[EventLogProperties#3](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogProperties/CS/source.cs#3)]
 [!code-vb[EventLogProperties#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogProperties/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="6d836-838"><paramref name="action" /> 不是有效的 <see cref="P:System.Diagnostics.EventLog.OverflowAction" /> 值。</span><span class="sxs-lookup"><span data-stu-id="6d836-838"><paramref name="action" /> is not a valid <see cref="P:System.Diagnostics.EventLog.OverflowAction" /> value.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6d836-839"><paramref name="retentionDays" /> 小于 1 或大于 365。</span><span class="sxs-lookup"><span data-stu-id="6d836-839"><paramref name="retentionDays" /> is less than one, or larger than 365.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6d836-840"><see cref="P:System.Diagnostics.EventLog.Log" /> 值不是有效的日志名。</span><span class="sxs-lookup"><span data-stu-id="6d836-840">The <see cref="P:System.Diagnostics.EventLog.Log" /> value is not a valid log name.</span></span>  
  
<span data-ttu-id="6d836-841">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-841">-or-</span></span> 
<span data-ttu-id="6d836-842">事件日志的注册表项无法在目标计算机上打开。</span><span class="sxs-lookup"><span data-stu-id="6d836-842">The registry key for the event log could not be opened on the target computer.</span></span></exception>
        <altmember cref="T:System.Diagnostics.OverflowAction" />
        <altmember cref="P:System.Diagnostics.EventLog.MaximumKilobytes" />
        <altmember cref="P:System.Diagnostics.EventLog.OverflowAction" />
        <altmember cref="P:System.Diagnostics.EventLog.MinimumRetentionDays" />
      </Docs>
    </Member>
    <Member MemberName="OverflowAction">
      <MemberSignature Language="C#" Value="public System.Diagnostics.OverflowAction OverflowAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.OverflowAction OverflowAction" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLog.OverflowAction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OverflowAction As OverflowAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::OverflowAction OverflowAction { System::Diagnostics::OverflowAction get(); };" />
      <MemberSignature Language="F#" Value="member this.OverflowAction : System.Diagnostics.OverflowAction" Usage="System.Diagnostics.EventLog.OverflowAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.OverflowAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d836-843">获取已配置的行为，以便在事件日志达到其最大文件大小时存储新项。</span><span class="sxs-lookup"><span data-stu-id="6d836-843">Gets the configured behavior for storing new entries when the event log reaches its maximum log file size.</span></span></summary>
        <value><span data-ttu-id="6d836-844"><see cref="T:System.Diagnostics.OverflowAction" /> 值，指定在事件日志达到其最大日志大小时存储新项的已配置行为。</span><span class="sxs-lookup"><span data-stu-id="6d836-844">The <see cref="T:System.Diagnostics.OverflowAction" /> value that specifies the configured behavior for storing new entries when the event log reaches its maximum log size.</span></span> <span data-ttu-id="6d836-845">默认为 <see cref="F:System.Diagnostics.OverflowAction.OverwriteOlder" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-845">The default is <see cref="F:System.Diagnostics.OverflowAction.OverwriteOlder" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-846">当向事件日志写入新事件时，事件日志的大小会增长。</span><span class="sxs-lookup"><span data-stu-id="6d836-846">Event logs grow in size as new events are written to them.</span></span> <span data-ttu-id="6d836-847">每个事件日志都具有配置的最大大小限制;<xref:System.Diagnostics.EventLog.MaximumKilobytes%2A> 属性定义事件日志文件大小所允许的最大 kb 数。</span><span class="sxs-lookup"><span data-stu-id="6d836-847">Each event log has a configured maximum size limit; the <xref:System.Diagnostics.EventLog.MaximumKilobytes%2A> property defines the maximum number of kilobytes allowed for the event log file size.</span></span>  
  
 <span data-ttu-id="6d836-848">使用 <xref:System.Diagnostics.EventLog.OverflowAction%2A> 属性值来检查事件日志的已配置溢出行为是否达到其最大大小。</span><span class="sxs-lookup"><span data-stu-id="6d836-848">Use the <xref:System.Diagnostics.EventLog.OverflowAction%2A> property value to examine the configured overflow behavior for an event log at its maximum size.</span></span> <span data-ttu-id="6d836-849">使用 <xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A> 方法可更改事件日志的溢出行为。</span><span class="sxs-lookup"><span data-stu-id="6d836-849">Use the <xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A> method to change the overflow behavior for an event log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-850">仅当事件日志达到其最大文件大小时，溢出行为才会生效。</span><span class="sxs-lookup"><span data-stu-id="6d836-850">The overflow behavior takes effect only when an event log reaches its maximum file size.</span></span> <span data-ttu-id="6d836-851">溢出行为不影响将新条目写入到可容纳其他事件日志条目的日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-851">The overflow behavior does not affect writing a new entry to a log that can accommodate additional event log entries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d836-852">下面的示例枚举本地计算机上定义的事件日志，并显示每个事件日志的配置详细信息。</span><span class="sxs-lookup"><span data-stu-id="6d836-852">The following example enumerates the event logs defined on the local computer, and displays configuration details for each event log.</span></span>  
  
 [!code-cpp[EventLogProperties#2](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogProperties/CPP/source.cpp#2)]
 [!code-csharp[EventLogProperties#2](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogProperties/CS/source.cs#2)]
 [!code-vb[EventLogProperties#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogProperties/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.OverflowAction" />
        <altmember cref="P:System.Diagnostics.EventLog.MaximumKilobytes" />
        <altmember cref="M:System.Diagnostics.EventLog.ModifyOverflowPolicy(System.Diagnostics.OverflowAction,System.Int32)" />
        <altmember cref="P:System.Diagnostics.EventLog.MinimumRetentionDays" />
      </Docs>
    </Member>
    <Member MemberName="RegisterDisplayName">
      <MemberSignature Language="C#" Value="public void RegisterDisplayName (string resourceFile, long resourceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterDisplayName(string resourceFile, int64 resourceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.RegisterDisplayName(System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterDisplayName (resourceFile As String, resourceId As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterDisplayName(System::String ^ resourceFile, long resourceId);" />
      <MemberSignature Language="F#" Value="member this.RegisterDisplayName : string * int64 -&gt; unit" Usage="eventLog.RegisterDisplayName (resourceFile, resourceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceFile" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="resourceId" Type="System.Int64" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="resourceFile"><span data-ttu-id="6d836-853">本地化资源文件的完全指定的路径。</span><span class="sxs-lookup"><span data-stu-id="6d836-853">The fully specified path to a localized resource file.</span></span></param>
        <param name="resourceId"><span data-ttu-id="6d836-854">在资源文件内指明一个本地化字符串的资源标识符。</span><span class="sxs-lookup"><span data-stu-id="6d836-854">The resource identifier that indexes a localized string within the resource file.</span></span></param>
        <summary><span data-ttu-id="6d836-855">指定该事件日志的本地化名称，它显示在服务器事件查看器中。</span><span class="sxs-lookup"><span data-stu-id="6d836-855">Specifies the localized name of the event log, which is displayed in the server Event Viewer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-856">使用 <xref:System.Diagnostics.EventLog.RegisterDisplayName%2A> 在事件查看器中注册并显示自定义事件日志的本地化名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-856">Use <xref:System.Diagnostics.EventLog.RegisterDisplayName%2A> to register and display a localized name in the Event Viewer for custom event logs.</span></span>  
  
 <span data-ttu-id="6d836-857">指定的资源标识符必须与资源文件中定义的本地化字符串相对应。</span><span class="sxs-lookup"><span data-stu-id="6d836-857">The specified resource identifier must correspond to a localized string defined in the resource file.</span></span> <span data-ttu-id="6d836-858">事件查看器使用本地化字符串和当前区域性设置显示自定义事件日志的名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-858">The Event Viewer displays the custom event log name using the localized string and the current culture settings.</span></span> <span data-ttu-id="6d836-859">例如，可以为资源文件中的不同区域性定义多个本地化的事件日志名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-859">For example, you can define multiple event log names localized for different cultures in your resource file.</span></span> <span data-ttu-id="6d836-860">事件查看器显示与当前用户的区域性设置相对应的本地化字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-860">The Event Viewer displays the localized string corresponding to the culture settings of the current user.</span></span>  
  
 <span data-ttu-id="6d836-861">如果事件查看器无法从资源文件加载本地化的字符串，或者如果没有为事件日志注册显示名称，则事件查看器将显示 <xref:System.Diagnostics.EventLog.Log%2A>中定义的事件日志名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-861">If the Event Viewer cannot load the localized string from the resource file, or if no display name was registered for the event log, then the Event Viewer displays the event log name defined in <xref:System.Diagnostics.EventLog.Log%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-862">无需注册预定义的事件日志的显示名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-862">You do not need to register a display name for the pre-defined event logs.</span></span> <span data-ttu-id="6d836-863">操作系统将为应用程序、系统和安全事件日志注册本地化的显示名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-863">The operating system registers the localized display names for the Application, System, and Security event logs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d836-864">下面的示例确定是否在本地计算机上注册了名为 `SampleApplicationSource` 的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-864">The following example determines whether the event source named `SampleApplicationSource` is registered on the local computer.</span></span> <span data-ttu-id="6d836-865">如果事件源不存在，则此示例将为源设置消息资源文件并创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-865">If the event source does not exist, the example sets the message resource file for the source and creates the new event source.</span></span> <span data-ttu-id="6d836-866">最后，该示例使用 `DisplayNameMsgId` 中的资源标识符值和 `messageFile`中的资源文件路径，为事件日志设置本地化的显示名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-866">Finally, the example sets the localized display name for the event log, using the resource identifier value in `DisplayNameMsgId` and the resource file path in `messageFile`.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#6)]
 [!code-csharp[EventLog_WriteEvent#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#6)]
 [!code-vb[EventLog_WriteEvent#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#6)]  
  
 <span data-ttu-id="6d836-867">该示例使用资源库 EventLogMsgs 中内置的以下消息文本文件。</span><span class="sxs-lookup"><span data-stu-id="6d836-867">The example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="6d836-868">消息文本文件是从中创建消息资源文件的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-868">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="6d836-869">消息文本文件定义类别、事件消息和参数插入字符串的资源标识符和文本。</span><span class="sxs-lookup"><span data-stu-id="6d836-869">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span> <span data-ttu-id="6d836-870">具体而言，为事件日志的本地化名称定义了资源标识符5001。</span><span class="sxs-lookup"><span data-stu-id="6d836-870">Specifically, resource identifier 5001 is defined for the localized name of the event log.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6d836-871"><see cref="P:System.Diagnostics.EventLog.Log" /> 值不是有效的日志名。</span><span class="sxs-lookup"><span data-stu-id="6d836-871">The <see cref="P:System.Diagnostics.EventLog.Log" /> value is not a valid log name.</span></span>  
  
<span data-ttu-id="6d836-872">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-872">-or-</span></span> 
<span data-ttu-id="6d836-873">事件日志的注册表项无法在目标计算机上打开。</span><span class="sxs-lookup"><span data-stu-id="6d836-873">The registry key for the event log could not be opened on the target computer.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6d836-874"><paramref name="resourceFile" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-874"><paramref name="resourceFile" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Diagnostics.EventLog.LogDisplayName" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLog.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : string with get, set" Usage="System.Diagnostics.EventLog.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("The application name that writes the log.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("LogSource")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d836-875">获取或设置在写入事件日志时要注册和使用的源名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-875">Gets or sets the source name to register and use when writing to the event log.</span></span></summary>
        <value><span data-ttu-id="6d836-876">在事件日志中注册为项源的名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-876">The name registered with the event log as a source of entries.</span></span> <span data-ttu-id="6d836-877">默认值为空字符串("")。</span><span class="sxs-lookup"><span data-stu-id="6d836-877">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-878">事件源指示记录事件的内容。</span><span class="sxs-lookup"><span data-stu-id="6d836-878">The event source indicates what logs the event.</span></span> <span data-ttu-id="6d836-879">它通常是应用程序的名称，或者应用程序的子组件的名称（如果应用程序很大）。</span><span class="sxs-lookup"><span data-stu-id="6d836-879">It is often the name of the application, or the name of a subcomponent of the application, if the application is large.</span></span> <span data-ttu-id="6d836-880">应用程序和服务应写入应用程序日志或自定义日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-880">Applications and services should write to the Application log or a custom log.</span></span> <span data-ttu-id="6d836-881">设备驱动程序应该写入系统日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-881">Device drivers should write to the System log.</span></span>  
  
 <span data-ttu-id="6d836-882">只需在写入事件日志时指定事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-882">You only need to specify an event source if you are writing to an event log.</span></span> <span data-ttu-id="6d836-883">向事件日志写入条目之前，必须将事件源作为事件的有效源注册到事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-883">Before writing an entry to an event log, you must register the event source with the event log as a valid source of events.</span></span> <span data-ttu-id="6d836-884">当你编写日志项时，系统会使用 <xref:System.Diagnostics.EventLog.Source%2A> 属性来查找适当的日志，以便在其中放置条目。</span><span class="sxs-lookup"><span data-stu-id="6d836-884">When you write a log entry, the system uses the <xref:System.Diagnostics.EventLog.Source%2A> property to find the appropriate log in which to place your entry.</span></span> <span data-ttu-id="6d836-885">如果要读取事件日志，可以指定 <xref:System.Diagnostics.EventLog.Source%2A>或 <xref:System.Diagnostics.EventLog.Log%2A> 并 <xref:System.Diagnostics.EventLog.MachineName%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d836-885">If you are reading the event log, you can either specify the <xref:System.Diagnostics.EventLog.Source%2A>, or a <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.MachineName%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-886">如果要连接到本地计算机上的日志，则无需指定 <xref:System.Diagnostics.EventLog.MachineName%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d836-886">You are not required to specify the <xref:System.Diagnostics.EventLog.MachineName%2A> if you are connecting to a log on the local computer.</span></span> <span data-ttu-id="6d836-887">如果未指定 <xref:System.Diagnostics.EventLog.MachineName%2A>，则假定为本地计算机（"."）。</span><span class="sxs-lookup"><span data-stu-id="6d836-887">If you do not specify the <xref:System.Diagnostics.EventLog.MachineName%2A>, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="6d836-888">使用 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 和 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 将事件写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-888">Use <xref:System.Diagnostics.EventLog.WriteEvent%2A> and <xref:System.Diagnostics.EventLog.WriteEntry%2A> to write events to an event log.</span></span> <span data-ttu-id="6d836-889">您必须指定事件源以写入事件;在写入包含源的第一个条目之前，必须创建并配置事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-889">You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="6d836-890">在应用程序安装过程中创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-890">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="6d836-891">这样，操作系统就可以刷新其已注册的事件源的列表及其配置。</span><span class="sxs-lookup"><span data-stu-id="6d836-891">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="6d836-892">如果操作系统尚未刷新其事件源列表，而你尝试使用新源写入事件，则写入操作将失败。</span><span class="sxs-lookup"><span data-stu-id="6d836-892">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="6d836-893">您可以使用 <xref:System.Diagnostics.EventLogInstaller>或 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法来配置新源。</span><span class="sxs-lookup"><span data-stu-id="6d836-893">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="6d836-894">您必须对该计算机具有管理权限才能创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-894">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="6d836-895">可以为现有事件日志或新的事件日志创建事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-895">You can create an event source for an existing event log or a new event log.</span></span> <span data-ttu-id="6d836-896">为新的事件日志创建新源时，系统将为该日志注册源，但在向其中写入第一个条目之前，不会创建日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-896">When you create a new source for a new event log, the system registers the source for that log, but the log is not created until the first entry is written to it.</span></span>  
  
 <span data-ttu-id="6d836-897">源在本地计算机上必须唯一;新的源名称不能与现有的源名称或现有的事件日志名称相匹配。</span><span class="sxs-lookup"><span data-stu-id="6d836-897">The source must be unique on the local computer; a new source name cannot match an existing source name or an existing event log name.</span></span> <span data-ttu-id="6d836-898">每个源一次只能写入一个事件日志;但是，应用程序可以使用多个源来写入多个事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-898">Each source can write to only one event log at a time; however, your application can use multiple sources to write to multiple event logs.</span></span> <span data-ttu-id="6d836-899">例如，你的应用程序可能需要为不同的事件日志或不同的资源文件配置多个源。</span><span class="sxs-lookup"><span data-stu-id="6d836-899">For example, your application might require multiple sources configured for different event logs or different resource files.</span></span>  
  
 <span data-ttu-id="6d836-900">如果更改了 <xref:System.Diagnostics.EventLog.Source%2A> 值，则将关闭它所注册到的 <xref:System.Diagnostics.EventLog> 并释放所有事件句柄。</span><span class="sxs-lookup"><span data-stu-id="6d836-900">If you change the <xref:System.Diagnostics.EventLog.Source%2A> value, the <xref:System.Diagnostics.EventLog> to which it is registered is closed and all event handles are released.</span></span>  
  
 <span data-ttu-id="6d836-901">源必须配置为写入本地化项或写入直接字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-901">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="6d836-902">如果应用程序使用资源标识符和字符串值写入条目，则必须注册两个不同的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-902">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="6d836-903">例如，将一个源配置为资源文件，然后在 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 方法中使用该源，将使用资源标识符的项写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-903">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="6d836-904">然后，创建一个没有资源文件的不同源，并在 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 方法中使用该源，使用该源直接向事件日志写入字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-904">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
 <span data-ttu-id="6d836-905">若要更改现有源的配置详细信息，必须删除该源，并使用新配置创建它。</span><span class="sxs-lookup"><span data-stu-id="6d836-905">To change the configuration details of an existing source, you must delete the source and then create it with the new configuration.</span></span> <span data-ttu-id="6d836-906">如果其他应用程序或组件使用现有源，请使用更新的配置创建新的源，而不是删除现有源。</span><span class="sxs-lookup"><span data-stu-id="6d836-906">If other applications or components use the existing source, create a new source with the updated configuration rather than deleting the existing source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-907">如果源已映射到日志，并将其重新映射到新日志，则必须重新启动计算机才能使更改生效。</span><span class="sxs-lookup"><span data-stu-id="6d836-907">If a source has already been mapped to a log and you remap it to a new log, you must restart the computer for the changes to take effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d836-908">下面的示例创建源 `MySource` （如果它尚不存在），并将项写入事件日志 `MyNewLog`。</span><span class="sxs-lookup"><span data-stu-id="6d836-908">The following example creates the source `MySource` if it does not already exist, and writes an entry to the event log `MyNewLog`.</span></span>  
  
 [!code-cpp[Classic EventLog.Source Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.Source Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.Source Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.Source Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.Source Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.Source Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d836-909">此源名称导致注册表项路径的长度超过 254 个字符。</span><span class="sxs-lookup"><span data-stu-id="6d836-909">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SourceExists">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6d836-910">在计算机的注册表中搜索给定的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-910">Searches a computer's registry for a given event source.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SourceExists">
      <MemberSignature Language="C#" Value="public static bool SourceExists (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SourceExists(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SourceExists (source As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SourceExists(System::String ^ source);" />
      <MemberSignature Language="F#" Value="static member SourceExists : string -&gt; bool" Usage="System.Diagnostics.EventLog.SourceExists source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="6d836-911">事件源的名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-911">The name of the event source.</span></span></param>
        <summary><span data-ttu-id="6d836-912">确定事件源是否已在本地计算机上注册。</span><span class="sxs-lookup"><span data-stu-id="6d836-912">Determines whether an event source is registered on the local computer.</span></span></summary>
        <returns><span data-ttu-id="6d836-913">如果事件源已在本地计算机上注册，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-913"><see langword="true" /> if the event source is registered on the local computer; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-914">使用此方法来确定本地计算机上是否存在某个事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-914">Use this method to determine whether an event source exists on the local computer.</span></span> <span data-ttu-id="6d836-915">如果要确定本地计算机上是否存在日志，请使用 <xref:System.Diagnostics.EventLog.Exists%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d836-915">If you want to determine whether a log exists on the local computer, use <xref:System.Diagnostics.EventLog.Exists%2A>.</span></span>  
  
 <span data-ttu-id="6d836-916">由于此方法访问注册表，因此你必须在本地计算机上具有相应的注册表权限;否则，将引发 <xref:System.Security.SecurityException>。</span><span class="sxs-lookup"><span data-stu-id="6d836-916">Because this method accesses the registry, you must have the appropriate registry permissions on the local computer; otherwise, a <xref:System.Security.SecurityException> will be thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-917">若要在 Windows Vista 及更高版本或 Windows Server 2003 中搜索事件源，您必须具有管理权限。</span><span class="sxs-lookup"><span data-stu-id="6d836-917">To search for an event source in Windows Vista and later or Windows Server 2003, you must have administrative privileges.</span></span>  
>   
>  <span data-ttu-id="6d836-918">此要求的原因是必须搜索所有事件日志（包括安全性），以确定事件源是否唯一。</span><span class="sxs-lookup"><span data-stu-id="6d836-918">The reason for this requirement is that all event logs, including security, must be searched to determine whether the event source is unique.</span></span> <span data-ttu-id="6d836-919">从 Windows Vista 开始，用户没有访问安全日志的权限;因此，会引发 <xref:System.Security.SecurityException>。</span><span class="sxs-lookup"><span data-stu-id="6d836-919">Starting with Windows Vista, users do not have permission to access the security log; therefore, a <xref:System.Security.SecurityException> is thrown.</span></span>  
>   
>  <span data-ttu-id="6d836-920">从 Windows Vista 开始，用户帐户控制（UAC）决定用户的特权。</span><span class="sxs-lookup"><span data-stu-id="6d836-920">Starting with Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="6d836-921">如果您是内置的 Administrators 组的成员，将为您分配两个运行时访问令牌：一个标准用户访问令牌和一个管理员访问令牌。</span><span class="sxs-lookup"><span data-stu-id="6d836-921">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="6d836-922">默认情况下，您拥有标准用户角色。</span><span class="sxs-lookup"><span data-stu-id="6d836-922">By default, you are in the standard user role.</span></span> <span data-ttu-id="6d836-923">若要执行访问性能计数器的代码，必须首先将你的特权从标准用户提升到管理员。</span><span class="sxs-lookup"><span data-stu-id="6d836-923">To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="6d836-924">你可以通过以下方式执行此操作：右键单击应用程序图标并指示需以管理员身份运行。</span><span class="sxs-lookup"><span data-stu-id="6d836-924">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-925">在 <xref:System.ServiceProcess.ServiceAccount.LocalSystem> 帐户下执行的服务没有执行此方法所需的权限。</span><span class="sxs-lookup"><span data-stu-id="6d836-925">A service that is executing under the <xref:System.ServiceProcess.ServiceAccount.LocalSystem> account does not have the privileges required to execute this method.</span></span> <span data-ttu-id="6d836-926">解决方案是检查 <xref:System.ServiceProcess.ServiceInstaller>中是否存在事件源，如果不存在，则在安装程序中创建源。</span><span class="sxs-lookup"><span data-stu-id="6d836-926">The solution is to check whether the event source exists in the <xref:System.ServiceProcess.ServiceInstaller>, and if it does not exist, to create the source in the installer.</span></span>  
  
 <span data-ttu-id="6d836-927">由于不能为新源提供同一台计算机上的现有源的名称，因此请使用此方法，然后再尝试调用 <xref:System.Diagnostics.EventLog.CreateEventSource%2A>，以确保本地计算机上尚不存在具有 `source` 指定名称的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-927">Because you cannot give a new source the name of an existing source on the same computer, use this method before attempting to call <xref:System.Diagnostics.EventLog.CreateEventSource%2A> to ensure that a source with the name specified by `source` does not already exist on the local computer.</span></span> <span data-ttu-id="6d836-928">`source` 参数不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="6d836-928">The `source` parameter is not case-sensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d836-929">下面的示例创建源 `MySource` （如果它尚不存在），并将项写入事件日志 `MyNewLog`。</span><span class="sxs-lookup"><span data-stu-id="6d836-929">The following example creates the source `MySource` if it does not already exist, and writes an entry to the event log `MyNewLog`.</span></span>  
  
 [!code-cpp[Classic EventLog.Source Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.Source Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.Source Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.Source Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.Source Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.Source Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="6d836-930">未找到 <paramref name="source" />，无法搜索部分或全部事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-930"><paramref name="source" /> was not found, but some or all of the event logs could not be searched.</span></span></exception>
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.Exists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
      </Docs>
    </Member>
    <Member MemberName="SourceExists">
      <MemberSignature Language="C#" Value="public static bool SourceExists (string source, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SourceExists(string source, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.SourceExists(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SourceExists (source As String, machineName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SourceExists(System::String ^ source, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member SourceExists : string * string -&gt; bool" Usage="System.Diagnostics.EventLog.SourceExists (source, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoNotSupported("remote machine is not supported")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="6d836-931">事件源的名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-931">The name of the event source.</span></span></param>
        <param name="machineName"><span data-ttu-id="6d836-932">在其上查看的计算机的名称，对于本地计算机则为“.”。</span><span class="sxs-lookup"><span data-stu-id="6d836-932">The name the computer on which to look, or "." for the local computer.</span></span></param>
        <summary><span data-ttu-id="6d836-933">确定事件源是否已在指定的计算机上注册。</span><span class="sxs-lookup"><span data-stu-id="6d836-933">Determines whether an event source is registered on a specified computer.</span></span></summary>
        <returns><span data-ttu-id="6d836-934">如果事件源已在给定计算机上注册，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-934"><see langword="true" /> if the event source is registered on the given computer; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-935">使用此方法可以确定 `machineName` 参数所指定的计算机上是否存在某个事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-935">Use this method to determine whether an event source exists on the computer specified by the `machineName` parameter.</span></span> <span data-ttu-id="6d836-936">如果要确定指定计算机上是否存在日志，请使用 <xref:System.Diagnostics.EventLog.Exists%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d836-936">If you want to determine whether a log exists on the specified computer, use <xref:System.Diagnostics.EventLog.Exists%2A>.</span></span>  
  
 <span data-ttu-id="6d836-937">由于此方法访问注册表，因此你必须在给定服务器上具有相应的注册表权限;否则，将引发 <xref:System.Security.SecurityException>。</span><span class="sxs-lookup"><span data-stu-id="6d836-937">Because this method accesses the registry, you must have the appropriate registry permissions on the given server; otherwise, a <xref:System.Security.SecurityException> will be thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-938">若要在 Windows Vista 及更高版本或 Windows Server 2003 中搜索事件源，您必须具有管理权限。</span><span class="sxs-lookup"><span data-stu-id="6d836-938">To search for an event source in Windows Vista and later or Windows Server 2003, you must have administrative privileges.</span></span>  
>   
>  <span data-ttu-id="6d836-939">此要求的原因是必须搜索所有事件日志（包括安全性），以确定事件源是否唯一。</span><span class="sxs-lookup"><span data-stu-id="6d836-939">The reason for this requirement is that all event logs, including security, must be searched to determine whether the event source is unique.</span></span> <span data-ttu-id="6d836-940">从 Windows Vista 开始，用户没有访问安全日志的权限;因此，会引发 <xref:System.Security.SecurityException>。</span><span class="sxs-lookup"><span data-stu-id="6d836-940">Starting with Windows Vista, users do not have permission to access the security log; therefore, a <xref:System.Security.SecurityException> is thrown.</span></span>  
>   
>  <span data-ttu-id="6d836-941">从 Windows Vista 开始，用户帐户控制（UAC）决定用户的特权。</span><span class="sxs-lookup"><span data-stu-id="6d836-941">Starting with Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="6d836-942">如果您是内置的 Administrators 组的成员，将为您分配两个运行时访问令牌：一个标准用户访问令牌和一个管理员访问令牌。</span><span class="sxs-lookup"><span data-stu-id="6d836-942">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="6d836-943">默认情况下，您拥有标准用户角色。</span><span class="sxs-lookup"><span data-stu-id="6d836-943">By default, you are in the standard user role.</span></span> <span data-ttu-id="6d836-944">若要执行访问性能计数器的代码，必须首先将你的特权从标准用户提升到管理员。</span><span class="sxs-lookup"><span data-stu-id="6d836-944">To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="6d836-945">你可以通过以下方式执行此操作：右键单击应用程序图标并指示需以管理员身份运行。</span><span class="sxs-lookup"><span data-stu-id="6d836-945">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-946">在 <xref:System.ServiceProcess.ServiceAccount.LocalSystem> 帐户下执行的服务没有执行此方法所需的权限。</span><span class="sxs-lookup"><span data-stu-id="6d836-946">A service that is executing under the <xref:System.ServiceProcess.ServiceAccount.LocalSystem> account does not have the privileges required to execute this method.</span></span> <span data-ttu-id="6d836-947">解决方案是检查 <xref:System.ServiceProcess.ServiceInstaller>中是否存在事件源，如果不存在，则在安装程序中创建源。</span><span class="sxs-lookup"><span data-stu-id="6d836-947">The solution is to check whether the event source exists in the <xref:System.ServiceProcess.ServiceInstaller>, and if it does not exist, to create the source in the installer.</span></span>  
  
 <span data-ttu-id="6d836-948">由于不能为新源提供同一台计算机上的现有源的名称，因此请使用此方法，然后再尝试调用 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 以确保计算机上尚不存在具有 `source` 指定名称的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-948">Because you cannot give a new source the name of an existing source on the same computer, use this method before attempting to call <xref:System.Diagnostics.EventLog.CreateEventSource%2A> to ensure that a source with the name specified by `source` does not already exist on the computer.</span></span> <span data-ttu-id="6d836-949">`source` 和 `machineName` 参数不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="6d836-949">The `source` and `machineName` parameters are not case sensitive.</span></span>  
  
 <span data-ttu-id="6d836-950"><xref:System.Diagnostics.EventLog.SourceExists%2A> 是一种 `static` 方法，因此它可在类本身上调用。</span><span class="sxs-lookup"><span data-stu-id="6d836-950"><xref:System.Diagnostics.EventLog.SourceExists%2A> is a `static` method, so it can be called on the class itself.</span></span> <span data-ttu-id="6d836-951">不需要创建 <xref:System.Diagnostics.EventLog> 的实例来调用 <xref:System.Diagnostics.EventLog.SourceExists%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d836-951">It is not necessary to create an instance of <xref:System.Diagnostics.EventLog> to call <xref:System.Diagnostics.EventLog.SourceExists%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d836-952">下面的示例在计算机 `MyServer`上创建源 `MySource`，并向事件日志 `MyNewLog`写入一项。</span><span class="sxs-lookup"><span data-stu-id="6d836-952">The following example creates the source `MySource` on the computer `MyServer`, and writes an entry to the event log `MyNewLog`.</span></span>  
  
 [!code-cpp[Classic EventLog.SourceExists1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.SourceExists1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.SourceExists1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.SourceExists1 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.SourceExists1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.SourceExists1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d836-953"><paramref name="machineName" /> 是无效的计算机名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-953"><paramref name="machineName" /> is an invalid computer name.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="6d836-954">未找到 <paramref name="source" />，无法搜索部分或全部事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-954"><paramref name="source" /> was not found, but some or all of the event logs could not be searched.</span></span></exception>
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.Exists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
      </Docs>
    </Member>
    <Member MemberName="SynchronizingObject">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISynchronizeInvoke SynchronizingObject" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLog.SynchronizingObject" />
      <MemberSignature Language="VB.NET" Value="Public Property SynchronizingObject As ISynchronizeInvoke" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ISynchronizeInvoke ^ SynchronizingObject { System::ComponentModel::ISynchronizeInvoke ^ get(); void set(System::ComponentModel::ISynchronizeInvoke ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizingObject : System.ComponentModel.ISynchronizeInvoke with get, set" Usage="System.Diagnostics.EventLog.SynchronizingObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("An object that synchronizes event handler calls.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("LogSynchronizingObject")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISynchronizeInvoke</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d836-955">获取或设置用于封送事件处理程序调用的对象，该调用在有 <see cref="T:System.Diagnostics.EventLog" /> 项写入事件时发出。</span><span class="sxs-lookup"><span data-stu-id="6d836-955">Gets or sets the object used to marshal the event handler calls issued as a result of an <see cref="T:System.Diagnostics.EventLog" /> entry written event.</span></span></summary>
        <value><span data-ttu-id="6d836-956"><see cref="T:System.ComponentModel.ISynchronizeInvoke" />，用于封送由事件日志上的 <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> 事件引发的事件处理程序调用。</span><span class="sxs-lookup"><span data-stu-id="6d836-956">The <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> used to marshal event-handler calls issued as a result of an <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> event on the event log.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-957">`null`<xref:System.Diagnostics.EventLog.SynchronizingObject%2A> 时，处理 <xref:System.Diagnostics.EventLog.EntryWritten> 事件的方法将在系统线程池中的线程上调用。</span><span class="sxs-lookup"><span data-stu-id="6d836-957">When <xref:System.Diagnostics.EventLog.SynchronizingObject%2A> is `null`, methods handling the <xref:System.Diagnostics.EventLog.EntryWritten> event are called on a thread from the system thread pool.</span></span> <span data-ttu-id="6d836-958">有关系统线程池的详细信息，请参阅 <xref:System.Threading.ThreadPool>。</span><span class="sxs-lookup"><span data-stu-id="6d836-958">For more information on system thread pools, see <xref:System.Threading.ThreadPool>.</span></span>  
  
 <span data-ttu-id="6d836-959">当 <xref:System.Diagnostics.EventLog.EntryWritten> 事件由 visual Windows 窗体组件（如按钮）处理时，通过系统线程池访问组件可能不起作用，或者可能会导致异常。</span><span class="sxs-lookup"><span data-stu-id="6d836-959">When the <xref:System.Diagnostics.EventLog.EntryWritten> event is handled by a visual Windows Forms component, such as a button, accessing the component through the system thread pool might not work, or might result in an exception.</span></span> <span data-ttu-id="6d836-960">通过将 <xref:System.Diagnostics.EventLog.SynchronizingObject%2A> 设置为 Windows 窗体组件来避免这种情况，这会导致在创建组件的线程上调用处理 <xref:System.Diagnostics.EventLog.EntryWritten> 事件的方法。</span><span class="sxs-lookup"><span data-stu-id="6d836-960">Avoid this by setting <xref:System.Diagnostics.EventLog.SynchronizingObject%2A> to a Windows Forms component, which causes the methods handling the <xref:System.Diagnostics.EventLog.EntryWritten> event to be called on the same thread on which the component was created.</span></span>  
  
 <span data-ttu-id="6d836-961">如果在 Windows 窗体设计器中的 [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] 内使用 <xref:System.Diagnostics.EventLog>，则 <xref:System.Diagnostics.EventLog.SynchronizingObject%2A> 将自动设置为包含 <xref:System.Diagnostics.EventLog>的控件。</span><span class="sxs-lookup"><span data-stu-id="6d836-961">If the <xref:System.Diagnostics.EventLog> is used inside [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] in a Windows Forms designer, <xref:System.Diagnostics.EventLog.SynchronizingObject%2A> is automatically set to the control containing the <xref:System.Diagnostics.EventLog>.</span></span> <span data-ttu-id="6d836-962">例如，如果你将 <xref:System.Diagnostics.EventLog> 放置在 Form1 的设计器中（继承自 <xref:System.Windows.Forms.Form>），则 <xref:System.Diagnostics.EventLog> 的 <xref:System.Diagnostics.EventLog.SynchronizingObject%2A> 属性设置为 Form1 的实例。</span><span class="sxs-lookup"><span data-stu-id="6d836-962">For example, if you place an <xref:System.Diagnostics.EventLog> on a designer for Form1 (which inherits from <xref:System.Windows.Forms.Form>) the <xref:System.Diagnostics.EventLog.SynchronizingObject%2A> property of <xref:System.Diagnostics.EventLog> is set to the instance of Form1.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Diagnostics.EventLog.EntryWritten" />
        <altmember cref="T:System.Threading.ThreadPool" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteEntry">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6d836-963">将项写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-963">Writes an entry in the event log.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public void WriteEntry (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEntry(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEntry(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEntry (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEntry(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.WriteEntry : string -&gt; unit" Usage="eventLog.WriteEntry message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="6d836-964">要写入事件日志的字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-964">The string to write to the event log.</span></span></param>
        <summary><span data-ttu-id="6d836-965">将信息类型项与给定的消息文本一起写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-965">Writes an information type entry, with the given message text, to the event log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-966">使用此方法将信息项写入与此 <xref:System.Diagnostics.EventLog> 实例相关联的事件日志中。</span><span class="sxs-lookup"><span data-stu-id="6d836-966">Use this method to write an information entry to the event log associated with this <xref:System.Diagnostics.EventLog> instance.</span></span> <span data-ttu-id="6d836-967">如果要指定任何其他 <xref:System.Diagnostics.EventLogEntryType>，请使用 <xref:System.Diagnostics.EventLog.WriteEntry%2A>的其他重载。</span><span class="sxs-lookup"><span data-stu-id="6d836-967">If you want to specify any other <xref:System.Diagnostics.EventLogEntryType>, use a different overload of <xref:System.Diagnostics.EventLog.WriteEntry%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-968">`message` 字符串不能包含%*n*，其中*n*是一个整数值（例如 %1），因为事件查看器将其视为插入字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-968">The `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="6d836-969">由于 Internet 协议版本6（IPv6）地址可以包含此字符序列，因此无法记录包含 IPv6 地址的事件消息。</span><span class="sxs-lookup"><span data-stu-id="6d836-969">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
 <span data-ttu-id="6d836-970">必须先对 <xref:System.Diagnostics.EventLog> 组件设置 <xref:System.Diagnostics.EventLog.Source%2A> 属性，然后才能将条目写入日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-970">You must set the <xref:System.Diagnostics.EventLog.Source%2A> property on your <xref:System.Diagnostics.EventLog> component before you can write entries to the log.</span></span> <span data-ttu-id="6d836-971">在写入包含源的第一个条目之前，必须创建并配置事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-971">You must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="6d836-972">在应用程序安装过程中创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-972">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="6d836-973">这样，操作系统就可以刷新其已注册的事件源的列表及其配置。</span><span class="sxs-lookup"><span data-stu-id="6d836-973">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="6d836-974">如果操作系统尚未刷新其事件源列表，而你尝试使用新源写入事件，则写入操作将失败。</span><span class="sxs-lookup"><span data-stu-id="6d836-974">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="6d836-975">您可以使用 <xref:System.Diagnostics.EventLogInstaller>或 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法来配置新源。</span><span class="sxs-lookup"><span data-stu-id="6d836-975">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="6d836-976">您必须对该计算机具有管理权限才能创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-976">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="6d836-977">如果此 <xref:System.Diagnostics.EventLog> 实例的 <xref:System.Diagnostics.EventLog.Source%2A> 属性中指定的源未在您的组件写入的计算机上注册，则 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 会调用 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 并注册源。</span><span class="sxs-lookup"><span data-stu-id="6d836-977">If the source specified in the <xref:System.Diagnostics.EventLog.Source%2A> property of this <xref:System.Diagnostics.EventLog> instance is not registered on the computer that your component is writing to, <xref:System.Diagnostics.EventLog.WriteEntry%2A> calls <xref:System.Diagnostics.EventLog.CreateEventSource%2A> and registers the source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-978">如果在调用 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 或 <xref:System.Diagnostics.EventLog.WriteEntry%2A>之前未为 <xref:System.Diagnostics.EventLog> 实例指定 <xref:System.Diagnostics.EventLog.MachineName%2A>，则假定为本地计算机（"."）。</span><span class="sxs-lookup"><span data-stu-id="6d836-978">If you do not specify a <xref:System.Diagnostics.EventLog.MachineName%2A> for your <xref:System.Diagnostics.EventLog> instance before you call <xref:System.Diagnostics.EventLog.CreateEventSource%2A> or <xref:System.Diagnostics.EventLog.WriteEntry%2A>, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="6d836-979">如果系统需要通过对 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 的调用来注册 <xref:System.Diagnostics.EventLog.Source%2A> 并且 <xref:System.Diagnostics.EventLog> 实例上尚未设置 <xref:System.Diagnostics.EventLog.Log%2A> 属性，则日志默认为应用程序日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-979">If the system needs to register the <xref:System.Diagnostics.EventLog.Source%2A> through a call to <xref:System.Diagnostics.EventLog.WriteEntry%2A> and the <xref:System.Diagnostics.EventLog.Log%2A> property has not been set on your <xref:System.Diagnostics.EventLog> instance, the log defaults to the Application log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-980">上面列出的许多异常由在注册 <xref:System.Diagnostics.EventLog.Source%2A>的过程中引发的错误生成。</span><span class="sxs-lookup"><span data-stu-id="6d836-980">Many of the exceptions listed above are generated by errors raised during the process of registering the <xref:System.Diagnostics.EventLog.Source%2A>.</span></span>  
  
 <span data-ttu-id="6d836-981">源必须配置为写入本地化项或写入直接字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-981">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="6d836-982"><xref:System.Diagnostics.EventLog.WriteEntry%2A> 方法将给定字符串直接写入事件日志;它不使用可本地化的消息资源文件。</span><span class="sxs-lookup"><span data-stu-id="6d836-982">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="6d836-983">使用 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 方法可以使用本地化的消息资源文件来编写事件。</span><span class="sxs-lookup"><span data-stu-id="6d836-983">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="6d836-984">如果应用程序使用资源标识符和字符串值写入条目，则必须注册两个不同的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-984">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="6d836-985">例如，将一个源配置为资源文件，然后在 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 方法中使用该源，将使用资源标识符的项写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-985">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="6d836-986">然后，创建一个没有资源文件的不同源，并在 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 方法中使用该源，使用该源直接向事件日志写入字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-986">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-987">如果将条目写入远程计算机，则当远程计算机未运行 .NET Framework 时，消息的值（文本字符串）可能不是预期的值。</span><span class="sxs-lookup"><span data-stu-id="6d836-987">If you write an entry to a remote computer, the value of the message (the text string) might not be what you expect if the remote computer is not running the .NET Framework.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-988">如果 `message` 参数包含 NUL 字符，则事件日志中的消息将以 NUL 字符终止。</span><span class="sxs-lookup"><span data-stu-id="6d836-988">If the `message` parameter contains a NUL character, the message in the event log is terminated at the NUL character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d836-989">下面的示例创建源 `MySource` （如果它尚不存在），并将项写入事件日志 `MyNewLog`。</span><span class="sxs-lookup"><span data-stu-id="6d836-989">The following example creates the source `MySource` if it does not already exist, and writes an entry to the event log `MyNewLog`.</span></span>  
  
 [!code-cpp[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.CreateEventSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.CreateEventSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d836-990"><see cref="P:System.Diagnostics.EventLog.Source" /> 的 <see cref="T:System.Diagnostics.EventLog" /> 属性尚未设置。</span><span class="sxs-lookup"><span data-stu-id="6d836-990">The <see cref="P:System.Diagnostics.EventLog.Source" /> property of the <see cref="T:System.Diagnostics.EventLog" /> has not been set.</span></span>  
  
<span data-ttu-id="6d836-991">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-991">-or-</span></span> 
<span data-ttu-id="6d836-992">该方法尝试注册新的事件源，但 <see cref="P:System.Diagnostics.EventLog.MachineName" /> 中的计算机名称无效。</span><span class="sxs-lookup"><span data-stu-id="6d836-992">The method attempted to register a new event source, but the computer name in <see cref="P:System.Diagnostics.EventLog.MachineName" /> is not valid.</span></span>  
  
<span data-ttu-id="6d836-993">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-993">-or-</span></span> 
<span data-ttu-id="6d836-994">已为其他事件日志注册了该源。</span><span class="sxs-lookup"><span data-stu-id="6d836-994">The source is already registered for a different event log.</span></span>  
  
<span data-ttu-id="6d836-995">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-995">-or-</span></span> 
<span data-ttu-id="6d836-996">消息字符串长于 31,839 字节（在 Windows Vista 之前，在 Windows 操作系统上为 32,766 字节)。</span><span class="sxs-lookup"><span data-stu-id="6d836-996">The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</span></span>  
  
<span data-ttu-id="6d836-997">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-997">-or-</span></span> 
<span data-ttu-id="6d836-998">此源名称导致注册表项路径的长度超过 254 个字符。</span><span class="sxs-lookup"><span data-stu-id="6d836-998">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6d836-999">事件日志的注册表项未能打开。</span><span class="sxs-lookup"><span data-stu-id="6d836-999">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="6d836-1000">将事件项写入事件日志时，操作系统报告了一个错误。</span><span class="sxs-lookup"><span data-stu-id="6d836-1000">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="6d836-1001">一个 Windows 错误代码不可用。</span><span class="sxs-lookup"><span data-stu-id="6d836-1001">A Windows error code is not available.</span></span></exception>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public void WriteEntry (string message, System.Diagnostics.EventLogEntryType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEntry(string message, valuetype System.Diagnostics.EventLogEntryType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEntry (message As String, type As EventLogEntryType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEntry(System::String ^ message, System::Diagnostics::EventLogEntryType type);" />
      <MemberSignature Language="F#" Value="member this.WriteEntry : string * System.Diagnostics.EventLogEntryType -&gt; unit" Usage="eventLog.WriteEntry (message, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="type" Type="System.Diagnostics.EventLogEntryType" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="6d836-1002">要写入事件日志的字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1002">The string to write to the event log.</span></span></param>
        <param name="type"><span data-ttu-id="6d836-1003"><see cref="T:System.Diagnostics.EventLogEntryType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="6d836-1003">One of the <see cref="T:System.Diagnostics.EventLogEntryType" /> values.</span></span></param>
        <summary><span data-ttu-id="6d836-1004">将错误、警告、信息、成功审核或失败审核项与给定的消息文本一起写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-1004">Writes an error, warning, information, success audit, or failure audit entry with the given message text to the event log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-1005">使用此方法可将指定 <xref:System.Diagnostics.EventLogEntryType> 的条目写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-1005">Use this method to write an entry of a specified <xref:System.Diagnostics.EventLogEntryType> to the event log.</span></span> <span data-ttu-id="6d836-1006">`type` 由日志的事件查看器的 "类型" 列中的图标和文本指示。</span><span class="sxs-lookup"><span data-stu-id="6d836-1006">The `type` is indicated by an icon and text in the Type column in the Event Viewer for a log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-1007">`message` 字符串不能包含%*n*，其中*n*是一个整数值（例如 %1），因为事件查看器将其视为插入字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1007">The `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="6d836-1008">由于 Internet 协议版本6（IPv6）地址可以包含此字符序列，因此无法记录包含 IPv6 地址的事件消息。</span><span class="sxs-lookup"><span data-stu-id="6d836-1008">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
 <span data-ttu-id="6d836-1009">必须先对 <xref:System.Diagnostics.EventLog> 组件设置 <xref:System.Diagnostics.EventLog.Source%2A> 属性，然后才能将条目写入日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-1009">You must set the <xref:System.Diagnostics.EventLog.Source%2A> property on your <xref:System.Diagnostics.EventLog> component before you can write entries to the log.</span></span> <span data-ttu-id="6d836-1010">在写入包含源的第一个条目之前，必须创建并配置事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1010">You must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="6d836-1011">在应用程序安装过程中创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1011">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="6d836-1012">这样，操作系统就可以刷新其已注册的事件源的列表及其配置。</span><span class="sxs-lookup"><span data-stu-id="6d836-1012">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="6d836-1013">如果操作系统尚未刷新其事件源列表，而你尝试使用新源写入事件，则写入操作将失败。</span><span class="sxs-lookup"><span data-stu-id="6d836-1013">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="6d836-1014">您可以使用 <xref:System.Diagnostics.EventLogInstaller>或 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法来配置新源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1014">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="6d836-1015">您必须对该计算机具有管理权限才能创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1015">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="6d836-1016">如果此 <xref:System.Diagnostics.EventLog> 实例的 <xref:System.Diagnostics.EventLog.Source%2A> 属性中指定的源未在您的组件写入的计算机上注册，则 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 会调用 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 并注册源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1016">If the source specified in the <xref:System.Diagnostics.EventLog.Source%2A> property of this <xref:System.Diagnostics.EventLog> instance is not registered on the computer that your component is writing to, <xref:System.Diagnostics.EventLog.WriteEntry%2A> calls <xref:System.Diagnostics.EventLog.CreateEventSource%2A> and registers the source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-1017">如果在调用 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 或 <xref:System.Diagnostics.EventLog.WriteEntry%2A>之前未为 <xref:System.Diagnostics.EventLog> 实例指定 <xref:System.Diagnostics.EventLog.MachineName%2A>，则假定为本地计算机（"."）。</span><span class="sxs-lookup"><span data-stu-id="6d836-1017">If you do not specify a <xref:System.Diagnostics.EventLog.MachineName%2A> for your <xref:System.Diagnostics.EventLog> instance before you call <xref:System.Diagnostics.EventLog.CreateEventSource%2A> or <xref:System.Diagnostics.EventLog.WriteEntry%2A>, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="6d836-1018">如果系统需要通过对 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 的调用来注册 <xref:System.Diagnostics.EventLog.Source%2A> 并且 <xref:System.Diagnostics.EventLog> 实例上尚未设置 <xref:System.Diagnostics.EventLog.Log%2A> 属性，则日志默认为应用程序日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-1018">If the system needs to register the <xref:System.Diagnostics.EventLog.Source%2A> through a call to <xref:System.Diagnostics.EventLog.WriteEntry%2A> and the <xref:System.Diagnostics.EventLog.Log%2A> property has not been set on your <xref:System.Diagnostics.EventLog> instance, the log defaults to the Application log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-1019">上面列出的许多异常由在注册 <xref:System.Diagnostics.EventLog.Source%2A>的过程中引发的错误生成。</span><span class="sxs-lookup"><span data-stu-id="6d836-1019">Many exceptions listed above are generated by errors raised during the process of registering the <xref:System.Diagnostics.EventLog.Source%2A>.</span></span>  
  
 <span data-ttu-id="6d836-1020">源必须配置为写入本地化项或写入直接字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1020">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="6d836-1021"><xref:System.Diagnostics.EventLog.WriteEntry%2A> 方法将给定字符串直接写入事件日志;它不使用可本地化的消息资源文件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1021">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="6d836-1022">使用 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 方法可以使用本地化的消息资源文件来编写事件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1022">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="6d836-1023">如果应用程序使用资源标识符和字符串值写入条目，则必须注册两个不同的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1023">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="6d836-1024">例如，将一个源配置为资源文件，然后在 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 方法中使用该源，将使用资源标识符的项写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-1024">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="6d836-1025">然后，创建一个没有资源文件的不同源，并在 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 方法中使用该源，使用该源直接向事件日志写入字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1025">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-1026">如果将条目写入远程计算机，则当远程计算机未运行 .NET Framework 时，消息的值（文本字符串）可能不是预期的值。</span><span class="sxs-lookup"><span data-stu-id="6d836-1026">If you write an entry to a remote computer, the value of the message (the text string) might not be what you expect if the remote computer is not running the .NET Framework.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-1027">如果 `message` 参数包含 NUL 字符，则事件日志中的消息将以 NUL 字符终止。</span><span class="sxs-lookup"><span data-stu-id="6d836-1027">If the `message` parameter contains a NUL character, the message in the event log is terminated at the NUL character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d836-1028">下面的示例将一个警告项写入到本地计算机上的事件日志 "MyNewLog"。</span><span class="sxs-lookup"><span data-stu-id="6d836-1028">The following example writes a warning entry to an event log, "MyNewLog", on the local computer.</span></span>  
  
 [!code-cpp[Classic EventLog.WriteEntry2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.WriteEntry2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.WriteEntry2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.WriteEntry2 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.WriteEntry2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.WriteEntry2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d836-1029"><see cref="P:System.Diagnostics.EventLog.Source" /> 的 <see cref="T:System.Diagnostics.EventLog" /> 属性尚未设置。</span><span class="sxs-lookup"><span data-stu-id="6d836-1029">The <see cref="P:System.Diagnostics.EventLog.Source" /> property of the <see cref="T:System.Diagnostics.EventLog" /> has not been set.</span></span>  
  
<span data-ttu-id="6d836-1030">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1030">-or-</span></span> 
<span data-ttu-id="6d836-1031">该方法尝试注册新的事件源，但 <see cref="P:System.Diagnostics.EventLog.MachineName" /> 中的计算机名称无效。</span><span class="sxs-lookup"><span data-stu-id="6d836-1031">The method attempted to register a new event source, but the computer name in <see cref="P:System.Diagnostics.EventLog.MachineName" /> is not valid.</span></span>  
  
<span data-ttu-id="6d836-1032">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1032">-or-</span></span> 
<span data-ttu-id="6d836-1033">已为其他事件日志注册了该源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1033">The source is already registered for a different event log.</span></span>  
  
<span data-ttu-id="6d836-1034">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1034">-or-</span></span> 
<span data-ttu-id="6d836-1035">消息字符串长于 31,839 字节（在 Windows Vista 之前，在 Windows 操作系统上为 32,766 字节)。</span><span class="sxs-lookup"><span data-stu-id="6d836-1035">The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</span></span>  
  
<span data-ttu-id="6d836-1036">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1036">-or-</span></span> 
<span data-ttu-id="6d836-1037">此源名称导致注册表项路径的长度超过 254 个字符。</span><span class="sxs-lookup"><span data-stu-id="6d836-1037">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="6d836-1038"><paramref name="type" /> 不是有效的 <see cref="T:System.Diagnostics.EventLogEntryType" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-1038"><paramref name="type" /> is not a valid <see cref="T:System.Diagnostics.EventLogEntryType" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6d836-1039">事件日志的注册表项未能打开。</span><span class="sxs-lookup"><span data-stu-id="6d836-1039">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="6d836-1040">将事件项写入事件日志时，操作系统报告了一个错误。</span><span class="sxs-lookup"><span data-stu-id="6d836-1040">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="6d836-1041">一个 Windows 错误代码不可用。</span><span class="sxs-lookup"><span data-stu-id="6d836-1041">A Windows error code is not available.</span></span></exception>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public static void WriteEntry (string source, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteEntry(string source, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteEntry (source As String, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteEntry(System::String ^ source, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member WriteEntry : string * string -&gt; unit" Usage="System.Diagnostics.EventLog.WriteEntry (source, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="6d836-1042">应用程序在指定计算机上注册时所采用的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1042">The source by which the application is registered on the specified computer.</span></span></param>
        <param name="message"><span data-ttu-id="6d836-1043">要写入事件日志的字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1043">The string to write to the event log.</span></span></param>
        <summary><span data-ttu-id="6d836-1044">使用指定的注册事件源将信息类型项与给定的消息文本一起写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-1044">Writes an information type entry with the given message text to the event log, using the specified registered event source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-1045">使用此方法可以将信息条目写入事件日志，使用已注册为相应日志的事件源的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1045">Use this method to write an information entry to the event log, using a source that is already registered as an event source for the appropriate log.</span></span> <span data-ttu-id="6d836-1046">如果要指定任何其他 <xref:System.Diagnostics.EventLogEntryType>，请使用 <xref:System.Diagnostics.EventLog.WriteEntry%2A>的其他重载。</span><span class="sxs-lookup"><span data-stu-id="6d836-1046">If you want to specify any other <xref:System.Diagnostics.EventLogEntryType>, use a different overload of <xref:System.Diagnostics.EventLog.WriteEntry%2A>.</span></span>  
  
 <span data-ttu-id="6d836-1047">在写入包含源的第一个条目之前，必须创建并配置事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1047">You must create and configure the event source before writing the first entry with the source.</span></span> <span data-ttu-id="6d836-1048">在应用程序安装过程中创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1048">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="6d836-1049">这样，操作系统就可以刷新其已注册的事件源的列表及其配置。</span><span class="sxs-lookup"><span data-stu-id="6d836-1049">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="6d836-1050">如果操作系统尚未刷新其事件源列表，而你尝试使用新源写入事件，则写入操作将失败。</span><span class="sxs-lookup"><span data-stu-id="6d836-1050">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="6d836-1051">您可以使用 <xref:System.Diagnostics.EventLogInstaller>或 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法来配置新源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1051">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="6d836-1052">您必须对该计算机具有管理权限才能创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1052">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="6d836-1053">源必须配置为写入本地化项或写入直接字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1053">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="6d836-1054"><xref:System.Diagnostics.EventLog.WriteEntry%2A> 方法将给定字符串直接写入事件日志;它不使用可本地化的消息资源文件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1054">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="6d836-1055">使用 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 方法可以使用本地化的消息资源文件来编写事件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1055">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="6d836-1056">如果应用程序使用资源标识符和字符串值写入条目，则必须注册两个不同的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1056">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="6d836-1057">例如，将一个源配置为资源文件，然后在 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 方法中使用该源，将使用资源标识符的项写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-1057">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="6d836-1058">然后，创建一个没有资源文件的不同源，并在 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 方法中使用该源，使用该源直接向事件日志写入字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1058">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-1059">如果 `message` 参数包含 NUL 字符，则事件日志中的消息将以 NUL 字符终止。</span><span class="sxs-lookup"><span data-stu-id="6d836-1059">If the `message` parameter contains a NUL character, the message in the event log is terminated at the NUL character.</span></span>  
>   
>  <span data-ttu-id="6d836-1060">`message` 字符串不能包含%*n*，其中*n*是一个整数值（例如 %1），因为事件查看器将其视为插入字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1060">The `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="6d836-1061">由于 Internet 协议版本6（IPv6）地址可以包含此字符序列，因此无法记录包含 IPv6 地址的事件消息。</span><span class="sxs-lookup"><span data-stu-id="6d836-1061">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d836-1062">下面的示例创建源 `MySource` （如果它尚不存在），并将项写入事件日志 `MyNewLog`。</span><span class="sxs-lookup"><span data-stu-id="6d836-1062">The following example creates the source `MySource` if it does not already exist, and writes an entry to the event log `MyNewLog`.</span></span>  
  
 [!code-cpp[Classic EventLog.WriteEntry1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.WriteEntry1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.WriteEntry1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.WriteEntry1 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.WriteEntry1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.WriteEntry1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d836-1063"><paramref name="source" /> 值是空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="6d836-1063">The <paramref name="source" /> value is an empty string ("").</span></span>  
  
<span data-ttu-id="6d836-1064">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1064">-or-</span></span> 
<span data-ttu-id="6d836-1065"><paramref name="source" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-1065">The <paramref name="source" /> value is <see langword="null" />.</span></span>  
  
<span data-ttu-id="6d836-1066">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1066">-or-</span></span> 
<span data-ttu-id="6d836-1067">消息字符串长于 31,839 字节（在 Windows Vista 之前，在 Windows 操作系统上为 32,766 字节)。</span><span class="sxs-lookup"><span data-stu-id="6d836-1067">The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</span></span>  
  
<span data-ttu-id="6d836-1068">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1068">-or-</span></span> 
<span data-ttu-id="6d836-1069">此源名称导致注册表项路径的长度超过 254 个字符。</span><span class="sxs-lookup"><span data-stu-id="6d836-1069">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6d836-1070">事件日志的注册表项未能打开。</span><span class="sxs-lookup"><span data-stu-id="6d836-1070">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="6d836-1071">将事件项写入事件日志时，操作系统报告了一个错误。</span><span class="sxs-lookup"><span data-stu-id="6d836-1071">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="6d836-1072">一个 Windows 错误代码不可用。</span><span class="sxs-lookup"><span data-stu-id="6d836-1072">A Windows error code is not available.</span></span></exception>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public void WriteEntry (string message, System.Diagnostics.EventLogEntryType type, int eventID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEntry(string message, valuetype System.Diagnostics.EventLogEntryType type, int32 eventID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEntry (message As String, type As EventLogEntryType, eventID As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEntry(System::String ^ message, System::Diagnostics::EventLogEntryType type, int eventID);" />
      <MemberSignature Language="F#" Value="member this.WriteEntry : string * System.Diagnostics.EventLogEntryType * int -&gt; unit" Usage="eventLog.WriteEntry (message, type, eventID)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="type" Type="System.Diagnostics.EventLogEntryType" />
        <Parameter Name="eventID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="6d836-1073">要写入事件日志的字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1073">The string to write to the event log.</span></span></param>
        <param name="type"><span data-ttu-id="6d836-1074"><see cref="T:System.Diagnostics.EventLogEntryType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="6d836-1074">One of the <see cref="T:System.Diagnostics.EventLogEntryType" /> values.</span></span></param>
        <param name="eventID"><span data-ttu-id="6d836-1075">事件的应用程序特定标识符。</span><span class="sxs-lookup"><span data-stu-id="6d836-1075">The application-specific identifier for the event.</span></span></param>
        <summary><span data-ttu-id="6d836-1076">将一个具有给定消息文本和应用程序定义的事件标识符的项写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-1076">Writes an entry with the given message text and application-defined event identifier to the event log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-1077">使用此方法可以将具有应用程序定义的 `eventID` 的条目写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-1077">Use this method to write an entry with an application-defined `eventID` to the event log.</span></span> <span data-ttu-id="6d836-1078">`eventID` 与源一起唯一标识事件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1078">The `eventID` together with the source uniquely identify an event.</span></span> <span data-ttu-id="6d836-1079">每个应用程序都可以定义自己的编号事件以及它们映射到的描述字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1079">Each application can define its own numbered events and the description strings to which they map.</span></span> <span data-ttu-id="6d836-1080">事件查看器显示这些字符串值，以帮助用户了解发生了什么问题，并建议采取什么操作。</span><span class="sxs-lookup"><span data-stu-id="6d836-1080">Event viewers display these string values to help the user understand what went wrong and suggest what actions to take.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-1081">`message` 字符串不能包含%*n*，其中*n*是一个整数值（例如 %1），因为事件查看器将其视为插入字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1081">The `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="6d836-1082">由于 Internet 协议版本6（IPv6）地址可以包含此字符序列，因此无法记录包含 IPv6 地址的事件消息。</span><span class="sxs-lookup"><span data-stu-id="6d836-1082">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
 <span data-ttu-id="6d836-1083">除了事件标识符以外，还可以指定写入事件日志的事件的 <xref:System.Diagnostics.EventLogEntryType>。</span><span class="sxs-lookup"><span data-stu-id="6d836-1083">In addition to the event identifier, you can specify an <xref:System.Diagnostics.EventLogEntryType> for the event being written to the event log.</span></span> <span data-ttu-id="6d836-1084">`type` 由日志的事件查看器的 "类型" 列中的图标和文本指示。</span><span class="sxs-lookup"><span data-stu-id="6d836-1084">The `type` is indicated by an icon and text in the Type column in the Event Viewer for a log.</span></span> <span data-ttu-id="6d836-1085">此参数指示事件类型是否为错误、警告、信息、成功审核或失败审核。</span><span class="sxs-lookup"><span data-stu-id="6d836-1085">This parameter indicates whether the event type is error, warning, information, success audit, or failure audit.</span></span>  
  
 <span data-ttu-id="6d836-1086">必须先对 <xref:System.Diagnostics.EventLog> 组件设置 <xref:System.Diagnostics.EventLog.Source%2A> 属性，然后才能将条目写入日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-1086">You must set the <xref:System.Diagnostics.EventLog.Source%2A> property on your <xref:System.Diagnostics.EventLog> component before you can write entries to the log.</span></span> <span data-ttu-id="6d836-1087">在写入包含源的第一个条目之前，必须创建并配置事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1087">You must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="6d836-1088">在应用程序安装过程中创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1088">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="6d836-1089">这样，操作系统就可以刷新其已注册的事件源的列表及其配置。</span><span class="sxs-lookup"><span data-stu-id="6d836-1089">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="6d836-1090">如果操作系统尚未刷新其事件源列表，而你尝试使用新源写入事件，则写入操作将失败。</span><span class="sxs-lookup"><span data-stu-id="6d836-1090">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="6d836-1091">您可以使用 <xref:System.Diagnostics.EventLogInstaller>或 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法来配置新源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1091">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="6d836-1092">您必须对该计算机具有管理权限才能创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1092">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="6d836-1093">如果此 <xref:System.Diagnostics.EventLog> 实例的 <xref:System.Diagnostics.EventLog.Source%2A> 属性中指定的源未在您的组件写入的计算机上注册，则 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 会调用 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 并注册源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1093">If the source specified in the <xref:System.Diagnostics.EventLog.Source%2A> property of this <xref:System.Diagnostics.EventLog> instance is not registered on the computer that your component is writing to, <xref:System.Diagnostics.EventLog.WriteEntry%2A> calls <xref:System.Diagnostics.EventLog.CreateEventSource%2A> and registers the source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-1094">如果在调用 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 或 <xref:System.Diagnostics.EventLog.WriteEntry%2A>之前未为 <xref:System.Diagnostics.EventLog> 实例指定 <xref:System.Diagnostics.EventLog.MachineName%2A>，则假定为本地计算机（"."）。</span><span class="sxs-lookup"><span data-stu-id="6d836-1094">If you do not specify a <xref:System.Diagnostics.EventLog.MachineName%2A> for your <xref:System.Diagnostics.EventLog> instance before you call <xref:System.Diagnostics.EventLog.CreateEventSource%2A> or <xref:System.Diagnostics.EventLog.WriteEntry%2A>, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="6d836-1095">如果系统需要通过对 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 的调用来注册 <xref:System.Diagnostics.EventLog.Source%2A> 并且 <xref:System.Diagnostics.EventLog> 实例上尚未设置 <xref:System.Diagnostics.EventLog.Log%2A> 属性，则日志默认为应用程序日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-1095">If the system needs to register the <xref:System.Diagnostics.EventLog.Source%2A> through a call to <xref:System.Diagnostics.EventLog.WriteEntry%2A> and the <xref:System.Diagnostics.EventLog.Log%2A> property has not been set on your <xref:System.Diagnostics.EventLog> instance, the log defaults to the Application log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-1096">上面列出的许多异常由在注册 <xref:System.Diagnostics.EventLog.Source%2A>的过程中引发的错误生成。</span><span class="sxs-lookup"><span data-stu-id="6d836-1096">Many exceptions listed above are generated by errors raised during the process of registering the <xref:System.Diagnostics.EventLog.Source%2A>.</span></span>  
  
 <span data-ttu-id="6d836-1097">源必须配置为写入本地化项或写入直接字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1097">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="6d836-1098"><xref:System.Diagnostics.EventLog.WriteEntry%2A> 方法将给定字符串直接写入事件日志;它不使用可本地化的消息资源文件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1098">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="6d836-1099">使用 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 方法可以使用本地化的消息资源文件来编写事件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1099">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="6d836-1100">如果应用程序使用资源标识符和字符串值写入条目，则必须注册两个不同的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1100">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="6d836-1101">例如，将一个源配置为资源文件，然后在 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 方法中使用该源，将使用资源标识符的项写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-1101">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="6d836-1102">然后，创建一个没有资源文件的不同源，并在 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 方法中使用该源，使用该源直接向事件日志写入字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1102">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-1103">如果将条目写入远程计算机，则当远程计算机未运行 .NET Framework 时，消息的值（文本字符串）可能不是预期的值。</span><span class="sxs-lookup"><span data-stu-id="6d836-1103">If you write an entry to a remote computer, the value of the message (the text string) might not be what you expect if the remote computer is not running the .NET Framework.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-1104">如果 `message` 参数包含 NUL 字符，则事件日志中的消息将以 NUL 字符终止。</span><span class="sxs-lookup"><span data-stu-id="6d836-1104">If the `message` parameter contains a NUL character, the message in the event log is terminated at the NUL character.</span></span>  
  
   
  
## Examples  
 [!code-cpp[EventLog_WriteEntry_1_3#3](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_WriteEntry_1_3/CPP/eventlog_writeentry_1_3.cpp#3)]
 [!code-csharp[EventLog_WriteEntry_1_3#3](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_WriteEntry_1_3/CS/eventlog_writeentry_1_3.cs#3)]
 [!code-vb[EventLog_WriteEntry_1_3#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_WriteEntry_1_3/VB/eventlog_writeentry_1_3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d836-1105"><see cref="P:System.Diagnostics.EventLog.Source" /> 的 <see cref="T:System.Diagnostics.EventLog" /> 属性尚未设置。</span><span class="sxs-lookup"><span data-stu-id="6d836-1105">The <see cref="P:System.Diagnostics.EventLog.Source" /> property of the <see cref="T:System.Diagnostics.EventLog" /> has not been set.</span></span>  
  
<span data-ttu-id="6d836-1106">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1106">-or-</span></span> 
<span data-ttu-id="6d836-1107">该方法尝试注册新的事件源，但 <see cref="P:System.Diagnostics.EventLog.MachineName" /> 中的计算机名称无效。</span><span class="sxs-lookup"><span data-stu-id="6d836-1107">The method attempted to register a new event source, but the computer name in <see cref="P:System.Diagnostics.EventLog.MachineName" /> is not valid.</span></span>  
  
<span data-ttu-id="6d836-1108">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1108">-or-</span></span> 
<span data-ttu-id="6d836-1109">已为其他事件日志注册了该源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1109">The source is already registered for a different event log.</span></span>  
  
<span data-ttu-id="6d836-1110">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1110">-or-</span></span> 
 <span data-ttu-id="6d836-1111"><paramref name="eventID" /> 小于零或大于 <see cref="F:System.UInt16.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-1111"><paramref name="eventID" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="6d836-1112">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1112">-or-</span></span> 
<span data-ttu-id="6d836-1113">消息字符串长于 31,839 字节（在 Windows Vista 之前，在 Windows 操作系统上为 32,766 字节)。</span><span class="sxs-lookup"><span data-stu-id="6d836-1113">The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</span></span>  
  
<span data-ttu-id="6d836-1114">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1114">-or-</span></span> 
<span data-ttu-id="6d836-1115">此源名称导致注册表项路径的长度超过 254 个字符。</span><span class="sxs-lookup"><span data-stu-id="6d836-1115">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6d836-1116">事件日志的注册表项未能打开。</span><span class="sxs-lookup"><span data-stu-id="6d836-1116">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="6d836-1117"><paramref name="type" /> 不是有效的 <see cref="T:System.Diagnostics.EventLogEntryType" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-1117"><paramref name="type" /> is not a valid <see cref="T:System.Diagnostics.EventLogEntryType" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="6d836-1118">将事件项写入事件日志时，操作系统报告了一个错误。</span><span class="sxs-lookup"><span data-stu-id="6d836-1118">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="6d836-1119">一个 Windows 错误代码不可用。</span><span class="sxs-lookup"><span data-stu-id="6d836-1119">A Windows error code is not available.</span></span></exception>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public static void WriteEntry (string source, string message, System.Diagnostics.EventLogEntryType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteEntry(string source, string message, valuetype System.Diagnostics.EventLogEntryType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteEntry (source As String, message As String, type As EventLogEntryType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteEntry(System::String ^ source, System::String ^ message, System::Diagnostics::EventLogEntryType type);" />
      <MemberSignature Language="F#" Value="static member WriteEntry : string * string * System.Diagnostics.EventLogEntryType -&gt; unit" Usage="System.Diagnostics.EventLog.WriteEntry (source, message, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="type" Type="System.Diagnostics.EventLogEntryType" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="6d836-1120">应用程序在指定计算机上注册时所采用的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1120">The source by which the application is registered on the specified computer.</span></span></param>
        <param name="message"><span data-ttu-id="6d836-1121">要写入事件日志的字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1121">The string to write to the event log.</span></span></param>
        <param name="type"><span data-ttu-id="6d836-1122"><see cref="T:System.Diagnostics.EventLogEntryType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="6d836-1122">One of the <see cref="T:System.Diagnostics.EventLogEntryType" /> values.</span></span></param>
        <summary><span data-ttu-id="6d836-1123">使用指定的注册事件源，将错误、警告、信息、成功审核或失败审核项与给定的消息文本一起写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-1123">Writes an error, warning, information, success audit, or failure audit entry with the given message text to the event log, using the specified registered event source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-1124">使用此方法将指定 <xref:System.Diagnostics.EventLogEntryType> 的条目写入事件日志，使用已注册为相应日志的事件源的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1124">Use this method to write an entry of a specified <xref:System.Diagnostics.EventLogEntryType> to the event log, using a source already registered as an event source for the appropriate log.</span></span> <span data-ttu-id="6d836-1125">`type` 由日志的事件查看器的 "类型" 列中的图标和文本指示。</span><span class="sxs-lookup"><span data-stu-id="6d836-1125">The `type` is indicated by an icon and text in the Type column in the Event Viewer for a log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-1126">`message` 字符串不能包含%*n*，其中*n*是一个整数值（例如 %1），因为事件查看器将其视为插入字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1126">The `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="6d836-1127">由于 Internet 协议版本6（IPv6）地址可以包含此字符序列，因此无法记录包含 IPv6 地址的事件消息。</span><span class="sxs-lookup"><span data-stu-id="6d836-1127">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
 <span data-ttu-id="6d836-1128">在写入包含源的第一个条目之前，必须创建并配置事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1128">You must create and configure the event source before writing the first entry with the source.</span></span> <span data-ttu-id="6d836-1129">在应用程序安装过程中创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1129">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="6d836-1130">这样，操作系统就可以刷新其已注册的事件源的列表及其配置。</span><span class="sxs-lookup"><span data-stu-id="6d836-1130">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="6d836-1131">如果操作系统尚未刷新其事件源列表，而你尝试使用新源写入事件，则写入操作将失败。</span><span class="sxs-lookup"><span data-stu-id="6d836-1131">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="6d836-1132">您可以使用 <xref:System.Diagnostics.EventLogInstaller>或 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法来配置新源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1132">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="6d836-1133">您必须对该计算机具有管理权限才能创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1133">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="6d836-1134">源必须配置为写入本地化项或写入直接字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1134">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="6d836-1135"><xref:System.Diagnostics.EventLog.WriteEntry%2A> 方法将给定字符串直接写入事件日志;它不使用可本地化的消息资源文件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1135">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="6d836-1136">使用 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 方法可以使用本地化的消息资源文件来编写事件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1136">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="6d836-1137">如果应用程序使用资源标识符和字符串值写入条目，则必须注册两个不同的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1137">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="6d836-1138">例如，将一个源配置为资源文件，然后在 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 方法中使用该源，将使用资源标识符的项写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-1138">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="6d836-1139">然后，创建一个没有资源文件的不同源，并在 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 方法中使用该源，使用该源直接向事件日志写入字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1139">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-1140">如果 `message` 参数包含 NUL 字符，则事件日志中的消息将以 NUL 字符终止。</span><span class="sxs-lookup"><span data-stu-id="6d836-1140">If the `message` parameter contains a NUL character, the message in the event log is terminated at the NUL character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d836-1141">下面的示例将一个警告项写入到本地计算机上的事件日志 "MyNewLog"。</span><span class="sxs-lookup"><span data-stu-id="6d836-1141">The following example writes a warning entry to an event log, "MyNewLog", on the local computer.</span></span>  
  
 [!code-cpp[Classic EventLog.WriteEntry3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLog.WriteEntry3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLog.WriteEntry3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLog.WriteEntry3 Example/CS/source.cs#1)]
 [!code-vb[Classic EventLog.WriteEntry3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLog.WriteEntry3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d836-1142"><paramref name="source" /> 值是空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="6d836-1142">The <paramref name="source" /> value is an empty string ("").</span></span>  
  
<span data-ttu-id="6d836-1143">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1143">-or-</span></span> 
<span data-ttu-id="6d836-1144"><paramref name="source" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-1144">The <paramref name="source" /> value is <see langword="null" />.</span></span>  
  
<span data-ttu-id="6d836-1145">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1145">-or-</span></span> 
<span data-ttu-id="6d836-1146">消息字符串长于 31,839 字节（在 Windows Vista 之前，在 Windows 操作系统上为 32,766 字节)。</span><span class="sxs-lookup"><span data-stu-id="6d836-1146">The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</span></span>  
  
<span data-ttu-id="6d836-1147">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1147">-or-</span></span> 
<span data-ttu-id="6d836-1148">此源名称导致注册表项路径的长度超过 254 个字符。</span><span class="sxs-lookup"><span data-stu-id="6d836-1148">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6d836-1149">事件日志的注册表项未能打开。</span><span class="sxs-lookup"><span data-stu-id="6d836-1149">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="6d836-1150"><paramref name="type" /> 不是有效的 <see cref="T:System.Diagnostics.EventLogEntryType" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-1150"><paramref name="type" /> is not a valid <see cref="T:System.Diagnostics.EventLogEntryType" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="6d836-1151">将事件项写入事件日志时，操作系统报告了一个错误。</span><span class="sxs-lookup"><span data-stu-id="6d836-1151">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="6d836-1152">一个 Windows 错误代码不可用。</span><span class="sxs-lookup"><span data-stu-id="6d836-1152">A Windows error code is not available.</span></span></exception>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public void WriteEntry (string message, System.Diagnostics.EventLogEntryType type, int eventID, short category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEntry(string message, valuetype System.Diagnostics.EventLogEntryType type, int32 eventID, int16 category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEntry (message As String, type As EventLogEntryType, eventID As Integer, category As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEntry(System::String ^ message, System::Diagnostics::EventLogEntryType type, int eventID, short category);" />
      <MemberSignature Language="F#" Value="member this.WriteEntry : string * System.Diagnostics.EventLogEntryType * int * int16 -&gt; unit" Usage="eventLog.WriteEntry (message, type, eventID, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="type" Type="System.Diagnostics.EventLogEntryType" />
        <Parameter Name="eventID" Type="System.Int32" />
        <Parameter Name="category" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="6d836-1153">要写入事件日志的字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1153">The string to write to the event log.</span></span></param>
        <param name="type"><span data-ttu-id="6d836-1154"><see cref="T:System.Diagnostics.EventLogEntryType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="6d836-1154">One of the <see cref="T:System.Diagnostics.EventLogEntryType" /> values.</span></span></param>
        <param name="eventID"><span data-ttu-id="6d836-1155">事件的应用程序特定标识符。</span><span class="sxs-lookup"><span data-stu-id="6d836-1155">The application-specific identifier for the event.</span></span></param>
        <param name="category"><span data-ttu-id="6d836-1156">与消息关联的应用程序特定子类别。</span><span class="sxs-lookup"><span data-stu-id="6d836-1156">The application-specific subcategory associated with the message.</span></span></param>
        <summary><span data-ttu-id="6d836-1157">将一个具有给定消息文本、应用程序定义的事件标识符和应用程序定义的类别的项写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-1157">Writes an entry with the given message text, application-defined event identifier, and application-defined category to the event log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-1158">使用此方法可以将具有应用程序定义的 `category` 的条目写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-1158">Use this method to write an entry with an application-defined `category` to the event log.</span></span> <span data-ttu-id="6d836-1159">事件查看器使用类别来筛选由事件源写入的事件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1159">The Event Viewer uses the category to filter events written by an event source.</span></span> <span data-ttu-id="6d836-1160">事件查看器可以将类别显示为数值，也可以将类别用作资源标识符以显示本地化的类别字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1160">The Event Viewer can display the category as a numeric value, or it can use the category as a resource identifier to display a localized category string.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-1161">`category` 参数应为正值。</span><span class="sxs-lookup"><span data-stu-id="6d836-1161">The `category` parameter should be a positive value.</span></span> <span data-ttu-id="6d836-1162">负类别值显示为事件查看器中的互补正数。</span><span class="sxs-lookup"><span data-stu-id="6d836-1162">Negative category values appear as a complementary positive number in the Event Viewer.</span></span> <span data-ttu-id="6d836-1163">例如，-10 显示为65526，a-1 显示为65535。</span><span class="sxs-lookup"><span data-stu-id="6d836-1163">For example, a -10 appears as 65,526, a -1 as 65,535.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-1164">`message` 字符串不能包含%*n*，其中*n*是一个整数值（例如 %1），因为事件查看器将其视为插入字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1164">The `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="6d836-1165">由于 Internet 协议版本6（IPv6）地址可以包含此字符序列，因此无法记录包含 IPv6 地址的事件消息。</span><span class="sxs-lookup"><span data-stu-id="6d836-1165">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
 <span data-ttu-id="6d836-1166">若要在事件查看器中显示本地化的类别字符串，必须使用配置有类别资源文件的事件源，并将 `category` 设置为类别资源文件中的资源标识符。</span><span class="sxs-lookup"><span data-stu-id="6d836-1166">To display localized category strings in the Event Viewer, you must use an event source configured with a category resource file, and set the `category` to a resource identifier in the category resource file.</span></span> <span data-ttu-id="6d836-1167">如果事件源没有已配置的类别资源文件，或者指定的 `category` 未为类别资源文件中的字符串编制索引，则事件查看器将显示该条目的数字类别值。</span><span class="sxs-lookup"><span data-stu-id="6d836-1167">If the event source does not have a configured category resource file, or the specified `category` does not index a string in the category resource file, then the Event Viewer displays the numeric category value for that entry.</span></span> <span data-ttu-id="6d836-1168">使用 <xref:System.Diagnostics.EventLogInstaller> 或 <xref:System.Diagnostics.EventSourceCreationData> 类，在资源文件中配置类别资源文件以及类别字符串的数目。</span><span class="sxs-lookup"><span data-stu-id="6d836-1168">Configure the category resource file, along with the number of category strings in the resource file, using the <xref:System.Diagnostics.EventLogInstaller> or the <xref:System.Diagnostics.EventSourceCreationData> class.</span></span>  
  
 <span data-ttu-id="6d836-1169">除了类别外，还可以指定写入事件日志的事件的事件标识符。</span><span class="sxs-lookup"><span data-stu-id="6d836-1169">In addition to the category, you can specify an event identifier for the event being written to the event log.</span></span> <span data-ttu-id="6d836-1170">事件标识符与事件源一起唯一标识事件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1170">Event identifiers, along with the event source, uniquely identify an event.</span></span> <span data-ttu-id="6d836-1171">每个应用程序都可以定义自己的编号事件以及它们映射到的描述字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1171">Each application can define its own numbered events and the description strings to which they map.</span></span> <span data-ttu-id="6d836-1172">事件查看器显示这些字符串值，以帮助用户了解发生了什么问题，并建议采取什么操作。</span><span class="sxs-lookup"><span data-stu-id="6d836-1172">Event viewers display these string values to help the user understand what went wrong and suggest what actions to take.</span></span>  
  
 <span data-ttu-id="6d836-1173">最后，可为写入事件日志的事件指定 <xref:System.Diagnostics.EventLogEntryType>。</span><span class="sxs-lookup"><span data-stu-id="6d836-1173">Finally, you can specify an <xref:System.Diagnostics.EventLogEntryType> for the event being written to the event log.</span></span> <span data-ttu-id="6d836-1174">`type` 由日志的事件查看器的 "类型" 列中的图标和文本指示。</span><span class="sxs-lookup"><span data-stu-id="6d836-1174">The `type` is indicated by an icon and text in the Type column in the Event Viewer for a log.</span></span> <span data-ttu-id="6d836-1175">此参数指示事件类型是否为错误、警告、信息、成功审核或失败审核。</span><span class="sxs-lookup"><span data-stu-id="6d836-1175">This parameter indicates whether the event type is error, warning, information, success audit, or failure audit.</span></span>  
  
 <span data-ttu-id="6d836-1176">必须先对 <xref:System.Diagnostics.EventLog> 组件设置 <xref:System.Diagnostics.EventLog.Source%2A> 属性，然后才能将条目写入日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-1176">You must set the <xref:System.Diagnostics.EventLog.Source%2A> property on your <xref:System.Diagnostics.EventLog> component before you can write entries to the log.</span></span> <span data-ttu-id="6d836-1177">在写入包含源的第一个条目之前，必须创建并配置事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1177">You must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="6d836-1178">在应用程序安装过程中创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1178">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="6d836-1179">这样，操作系统就可以刷新其已注册的事件源的列表及其配置。</span><span class="sxs-lookup"><span data-stu-id="6d836-1179">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="6d836-1180">如果操作系统尚未刷新其事件源列表，而你尝试使用新源写入事件，则写入操作将失败。</span><span class="sxs-lookup"><span data-stu-id="6d836-1180">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="6d836-1181">您可以使用 <xref:System.Diagnostics.EventLogInstaller>或 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法来配置新源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1181">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="6d836-1182">您必须对该计算机具有管理权限才能创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1182">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="6d836-1183">如果此 <xref:System.Diagnostics.EventLog> 实例的 <xref:System.Diagnostics.EventLog.Source%2A> 属性中指定的源未在您的组件写入的计算机上注册，则 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 会调用 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 并注册源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1183">If the source specified in the <xref:System.Diagnostics.EventLog.Source%2A> property of this <xref:System.Diagnostics.EventLog> instance is not registered on the computer that your component is writing to, <xref:System.Diagnostics.EventLog.WriteEntry%2A> calls <xref:System.Diagnostics.EventLog.CreateEventSource%2A> and registers the source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-1184">如果在调用 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 或 <xref:System.Diagnostics.EventLog.WriteEntry%2A>之前未为 <xref:System.Diagnostics.EventLog> 实例指定 <xref:System.Diagnostics.EventLog.MachineName%2A>，则假定为本地计算机（"."）。</span><span class="sxs-lookup"><span data-stu-id="6d836-1184">If you do not specify a <xref:System.Diagnostics.EventLog.MachineName%2A> for your <xref:System.Diagnostics.EventLog> instance before you call <xref:System.Diagnostics.EventLog.CreateEventSource%2A> or <xref:System.Diagnostics.EventLog.WriteEntry%2A>, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="6d836-1185">如果系统需要通过对 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 的调用来注册 <xref:System.Diagnostics.EventLog.Source%2A> 并且 <xref:System.Diagnostics.EventLog> 实例上尚未设置 <xref:System.Diagnostics.EventLog.Log%2A> 属性，则日志默认为应用程序日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-1185">If the system needs to register the <xref:System.Diagnostics.EventLog.Source%2A> through a call to <xref:System.Diagnostics.EventLog.WriteEntry%2A> and the <xref:System.Diagnostics.EventLog.Log%2A> property has not been set on your <xref:System.Diagnostics.EventLog> instance, the log defaults to the Application log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-1186">上面列出的许多异常由在注册 <xref:System.Diagnostics.EventLog.Source%2A>的过程中引发的错误生成。</span><span class="sxs-lookup"><span data-stu-id="6d836-1186">Many exceptions listed above are generated by errors raised during the process of registering the <xref:System.Diagnostics.EventLog.Source%2A>.</span></span>  
  
 <span data-ttu-id="6d836-1187">源必须配置为写入本地化项或写入直接字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1187">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="6d836-1188"><xref:System.Diagnostics.EventLog.WriteEntry%2A> 方法将给定字符串直接写入事件日志;它不使用可本地化的消息资源文件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1188">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="6d836-1189">使用 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 方法可以使用本地化的消息资源文件来编写事件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1189">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="6d836-1190">如果应用程序使用资源标识符和字符串值写入条目，则必须注册两个不同的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1190">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="6d836-1191">例如，将一个源配置为资源文件，然后在 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 方法中使用该源，将使用资源标识符的项写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-1191">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="6d836-1192">然后，创建一个没有资源文件的不同源，并在 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 方法中使用该源，使用该源直接向事件日志写入字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1192">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-1193">如果将条目写入远程计算机，则当远程计算机未运行 .NET Framework 时，消息的值（文本字符串）可能不是预期的值。</span><span class="sxs-lookup"><span data-stu-id="6d836-1193">If you write an entry to a remote computer, the value of the message (the text string) might not be what you expect if the remote computer is not running the .NET Framework.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-1194">如果 `message` 参数包含 NUL 字符，则事件日志中的消息将以 NUL 字符终止。</span><span class="sxs-lookup"><span data-stu-id="6d836-1194">If the `message` parameter contains a NUL character, the message in the event log is terminated at the NUL character.</span></span>  
  
   
  
## Examples  
 [!code-cpp[EventLog_WriteEntry_1_3#3](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_WriteEntry_1_3/CPP/eventlog_writeentry_1_3.cpp#3)]
 [!code-csharp[EventLog_WriteEntry_1_3#3](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_WriteEntry_1_3/CS/eventlog_writeentry_1_3.cs#3)]
 [!code-vb[EventLog_WriteEntry_1_3#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_WriteEntry_1_3/VB/eventlog_writeentry_1_3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d836-1195"><see cref="P:System.Diagnostics.EventLog.Source" /> 的 <see cref="T:System.Diagnostics.EventLog" /> 属性尚未设置。</span><span class="sxs-lookup"><span data-stu-id="6d836-1195">The <see cref="P:System.Diagnostics.EventLog.Source" /> property of the <see cref="T:System.Diagnostics.EventLog" /> has not been set.</span></span>  
  
<span data-ttu-id="6d836-1196">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1196">-or-</span></span> 
<span data-ttu-id="6d836-1197">该方法尝试注册新的事件源，但 <see cref="P:System.Diagnostics.EventLog.MachineName" /> 中的计算机名称无效。</span><span class="sxs-lookup"><span data-stu-id="6d836-1197">The method attempted to register a new event source, but the computer name in <see cref="P:System.Diagnostics.EventLog.MachineName" /> is not valid.</span></span>  
  
<span data-ttu-id="6d836-1198">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1198">-or-</span></span> 
<span data-ttu-id="6d836-1199">已为其他事件日志注册了该源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1199">The source is already registered for a different event log.</span></span>  
  
<span data-ttu-id="6d836-1200">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1200">-or-</span></span> 
 <span data-ttu-id="6d836-1201"><paramref name="eventID" /> 小于零或大于 <see cref="F:System.UInt16.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-1201"><paramref name="eventID" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="6d836-1202">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1202">-or-</span></span> 
<span data-ttu-id="6d836-1203">消息字符串长于 31,839 字节（在 Windows Vista 之前，在 Windows 操作系统上为 32,766 字节)。</span><span class="sxs-lookup"><span data-stu-id="6d836-1203">The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</span></span>  
  
<span data-ttu-id="6d836-1204">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1204">-or-</span></span> 
<span data-ttu-id="6d836-1205">此源名称导致注册表项路径的长度超过 254 个字符。</span><span class="sxs-lookup"><span data-stu-id="6d836-1205">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6d836-1206">事件日志的注册表项未能打开。</span><span class="sxs-lookup"><span data-stu-id="6d836-1206">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="6d836-1207"><paramref name="type" /> 不是有效的 <see cref="T:System.Diagnostics.EventLogEntryType" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-1207"><paramref name="type" /> is not a valid <see cref="T:System.Diagnostics.EventLogEntryType" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="6d836-1208">将事件项写入事件日志时，操作系统报告了一个错误。</span><span class="sxs-lookup"><span data-stu-id="6d836-1208">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="6d836-1209">一个 Windows 错误代码不可用。</span><span class="sxs-lookup"><span data-stu-id="6d836-1209">A Windows error code is not available.</span></span></exception>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public static void WriteEntry (string source, string message, System.Diagnostics.EventLogEntryType type, int eventID);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteEntry(string source, string message, valuetype System.Diagnostics.EventLogEntryType type, int32 eventID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteEntry (source As String, message As String, type As EventLogEntryType, eventID As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteEntry(System::String ^ source, System::String ^ message, System::Diagnostics::EventLogEntryType type, int eventID);" />
      <MemberSignature Language="F#" Value="static member WriteEntry : string * string * System.Diagnostics.EventLogEntryType * int -&gt; unit" Usage="System.Diagnostics.EventLog.WriteEntry (source, message, type, eventID)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="type" Type="System.Diagnostics.EventLogEntryType" />
        <Parameter Name="eventID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="6d836-1210">应用程序在指定计算机上注册时所采用的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1210">The source by which the application is registered on the specified computer.</span></span></param>
        <param name="message"><span data-ttu-id="6d836-1211">要写入事件日志的字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1211">The string to write to the event log.</span></span></param>
        <param name="type"><span data-ttu-id="6d836-1212"><see cref="T:System.Diagnostics.EventLogEntryType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="6d836-1212">One of the <see cref="T:System.Diagnostics.EventLogEntryType" /> values.</span></span></param>
        <param name="eventID"><span data-ttu-id="6d836-1213">事件的应用程序特定标识符。</span><span class="sxs-lookup"><span data-stu-id="6d836-1213">The application-specific identifier for the event.</span></span></param>
        <summary><span data-ttu-id="6d836-1214">使用指定的注册事件源，将一个具有给定消息文本和应用程序定义的事件标识符的项写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-1214">Writes an entry with the given message text and application-defined event identifier to the event log, using the specified registered event source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-1215">使用此方法可以将具有应用程序定义 `eventID` 的条目写入事件日志，使用已注册为相应日志的事件源的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1215">Use this method to write an entry with an application-defined `eventID` to the event log, using a source already registered as an event source for the appropriate log.</span></span> <span data-ttu-id="6d836-1216">`eventID`与源一起唯一标识事件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1216">The `eventID`, along with the source, uniquely identify an event.</span></span> <span data-ttu-id="6d836-1217">每个应用程序都可以定义自己的编号事件以及它们映射到的描述字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1217">Each application can define its own numbered events and the description strings to which they map.</span></span> <span data-ttu-id="6d836-1218">事件查看器向用户显示这些字符串，以帮助用户了解发生了什么问题，并建议采取什么操作。</span><span class="sxs-lookup"><span data-stu-id="6d836-1218">Event viewers present these strings to the user to help the user understand what went wrong and suggest what actions to take.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-1219">`message` 字符串不能包含%*n*，其中*n*是一个整数值（例如 %1），因为事件查看器将其视为插入字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1219">The `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="6d836-1220">由于 Internet 协议版本6（IPv6）地址可以包含此字符序列，因此无法记录包含 IPv6 地址的事件消息。</span><span class="sxs-lookup"><span data-stu-id="6d836-1220">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
 <span data-ttu-id="6d836-1221">除了事件标识符以外，<xref:System.Diagnostics.EventLog.WriteEntry%2A> 的此重载还允许您为写入事件日志的事件指定 <xref:System.Diagnostics.EventLogEntryType>。</span><span class="sxs-lookup"><span data-stu-id="6d836-1221">In addition to the event identifier, this overload of <xref:System.Diagnostics.EventLog.WriteEntry%2A> lets you specify an <xref:System.Diagnostics.EventLogEntryType> for the event being written to the event log.</span></span> <span data-ttu-id="6d836-1222">`type` 由日志的事件查看器的 "类型" 列中的图标和文本指示。</span><span class="sxs-lookup"><span data-stu-id="6d836-1222">The `type` is indicated by an icon and text in the Type column in the Event Viewer for a log.</span></span> <span data-ttu-id="6d836-1223">此参数指示事件类型是否为错误、警告、信息、成功审核或失败审核。</span><span class="sxs-lookup"><span data-stu-id="6d836-1223">This parameter indicates whether the event type is error, warning, information, success audit, or failure audit.</span></span>  
  
 <span data-ttu-id="6d836-1224">在写入包含源的第一个条目之前，必须创建并配置事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1224">You must create and configure the event source before writing the first entry with the source.</span></span> <span data-ttu-id="6d836-1225">在应用程序安装过程中创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1225">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="6d836-1226">这样，操作系统就可以刷新其已注册的事件源的列表及其配置。</span><span class="sxs-lookup"><span data-stu-id="6d836-1226">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="6d836-1227">如果操作系统尚未刷新其事件源列表，而你尝试使用新源写入事件，则写入操作将失败。</span><span class="sxs-lookup"><span data-stu-id="6d836-1227">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="6d836-1228">您可以使用 <xref:System.Diagnostics.EventLogInstaller>或 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法来配置新源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1228">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="6d836-1229">您必须对该计算机具有管理权限才能创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1229">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="6d836-1230">源必须配置为写入本地化项或写入直接字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1230">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="6d836-1231"><xref:System.Diagnostics.EventLog.WriteEntry%2A> 方法将给定字符串直接写入事件日志;它不使用可本地化的消息资源文件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1231">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="6d836-1232">使用 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 方法可以使用本地化的消息资源文件来编写事件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1232">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="6d836-1233">如果应用程序使用资源标识符和字符串值写入条目，则必须注册两个不同的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1233">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="6d836-1234">例如，将一个源配置为资源文件，然后在 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 方法中使用该源，将使用资源标识符的项写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-1234">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="6d836-1235">然后，创建一个没有资源文件的不同源，并在 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 方法中使用该源，使用该源直接向事件日志写入字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1235">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-1236">如果 `message` 参数包含 NUL 字符，则事件日志中的消息将以 NUL 字符终止。</span><span class="sxs-lookup"><span data-stu-id="6d836-1236">If the `message` parameter contains a NUL character, the message in the event log is terminated at the NUL character.</span></span>  
  
   
  
## Examples  
 [!code-cpp[EventLog_WriteEntry_4#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_WriteEntry_4/CPP/eventlog_writeentry_4.cpp#1)]
 [!code-csharp[EventLog_WriteEntry_4#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_WriteEntry_4/CS/eventlog_writeentry_4.cs#1)]
 [!code-vb[EventLog_WriteEntry_4#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_WriteEntry_4/VB/eventlog_writeentry_4.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d836-1237"><paramref name="source" /> 值是空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="6d836-1237">The <paramref name="source" /> value is an empty string ("").</span></span>  
  
<span data-ttu-id="6d836-1238">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1238">-or-</span></span> 
<span data-ttu-id="6d836-1239"><paramref name="source" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-1239">The <paramref name="source" /> value is <see langword="null" />.</span></span>  
  
<span data-ttu-id="6d836-1240">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1240">-or-</span></span> 
 <span data-ttu-id="6d836-1241"><paramref name="eventID" /> 小于零或大于 <see cref="F:System.UInt16.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-1241"><paramref name="eventID" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="6d836-1242">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1242">-or-</span></span> 
<span data-ttu-id="6d836-1243">消息字符串长于 31,839 字节（在 Windows Vista 之前，在 Windows 操作系统上为 32,766 字节)。</span><span class="sxs-lookup"><span data-stu-id="6d836-1243">The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</span></span>  
  
<span data-ttu-id="6d836-1244">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1244">-or-</span></span> 
<span data-ttu-id="6d836-1245">此源名称导致注册表项路径的长度超过 254 个字符。</span><span class="sxs-lookup"><span data-stu-id="6d836-1245">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6d836-1246">事件日志的注册表项未能打开。</span><span class="sxs-lookup"><span data-stu-id="6d836-1246">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="6d836-1247"><paramref name="type" /> 不是有效的 <see cref="T:System.Diagnostics.EventLogEntryType" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-1247"><paramref name="type" /> is not a valid <see cref="T:System.Diagnostics.EventLogEntryType" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="6d836-1248">将事件项写入事件日志时，操作系统报告了一个错误。</span><span class="sxs-lookup"><span data-stu-id="6d836-1248">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="6d836-1249">一个 Windows 错误代码不可用。</span><span class="sxs-lookup"><span data-stu-id="6d836-1249">A Windows error code is not available.</span></span></exception>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public void WriteEntry (string message, System.Diagnostics.EventLogEntryType type, int eventID, short category, byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEntry(string message, valuetype System.Diagnostics.EventLogEntryType type, int32 eventID, int16 category, unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEntry (message As String, type As EventLogEntryType, eventID As Integer, category As Short, rawData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEntry(System::String ^ message, System::Diagnostics::EventLogEntryType type, int eventID, short category, cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberSignature Language="F#" Value="member this.WriteEntry : string * System.Diagnostics.EventLogEntryType * int * int16 * byte[] -&gt; unit" Usage="eventLog.WriteEntry (message, type, eventID, category, rawData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="type" Type="System.Diagnostics.EventLogEntryType" />
        <Parameter Name="eventID" Type="System.Int32" />
        <Parameter Name="category" Type="System.Int16" />
        <Parameter Name="rawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="6d836-1250">要写入事件日志的字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1250">The string to write to the event log.</span></span></param>
        <param name="type"><span data-ttu-id="6d836-1251"><see cref="T:System.Diagnostics.EventLogEntryType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="6d836-1251">One of the <see cref="T:System.Diagnostics.EventLogEntryType" /> values.</span></span></param>
        <param name="eventID"><span data-ttu-id="6d836-1252">事件的应用程序特定标识符。</span><span class="sxs-lookup"><span data-stu-id="6d836-1252">The application-specific identifier for the event.</span></span></param>
        <param name="category"><span data-ttu-id="6d836-1253">与消息关联的应用程序特定子类别。</span><span class="sxs-lookup"><span data-stu-id="6d836-1253">The application-specific subcategory associated with the message.</span></span></param>
        <param name="rawData"><span data-ttu-id="6d836-1254">包含与此项关联的二进制数据的字节数组。</span><span class="sxs-lookup"><span data-stu-id="6d836-1254">An array of bytes that holds the binary data associated with the entry.</span></span></param>
        <summary><span data-ttu-id="6d836-1255">将一个具有给定消息文本、应用程序定义的事件标识符和应用程序定义的类别的项写入事件日志，并向消息追加二进制数据。</span><span class="sxs-lookup"><span data-stu-id="6d836-1255">Writes an entry with the given message text, application-defined event identifier, and application-defined category to the event log, and appends binary data to the message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-1256">使用此重载将应用程序定义的特定于事件的数据写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-1256">Use this overload to write application-defined event-specific data to the event log.</span></span> <span data-ttu-id="6d836-1257">事件查看器不会解释此数据;它仅以组合的十六进制和文本格式显示原始数据。</span><span class="sxs-lookup"><span data-stu-id="6d836-1257">The Event Viewer does not interpret this data; it displays raw data only in a combined hexadecimal and text format.</span></span> <span data-ttu-id="6d836-1258">请谨慎使用特定于事件的数据，仅当你确定此数据对调试问题的人员非常有用时才使用。</span><span class="sxs-lookup"><span data-stu-id="6d836-1258">Use event-specific data sparingly, including it only if you are sure it will be useful to someone debugging the problem.</span></span> <span data-ttu-id="6d836-1259">你还可以使用特定于事件的数据存储应用程序可以独立于事件查看器处理的信息。</span><span class="sxs-lookup"><span data-stu-id="6d836-1259">You can also use event-specific data to store information the application can process independently of the Event Viewer.</span></span> <span data-ttu-id="6d836-1260">例如，您可以专门为您的事件编写查看器，或者编写一个程序来扫描日志文件，并创建包含特定于事件的数据的信息的报表。</span><span class="sxs-lookup"><span data-stu-id="6d836-1260">For example, you could write a viewer specifically for your events, or write a program that scans the logfile and creates reports that include information from the event-specific data.</span></span>  
  
 <span data-ttu-id="6d836-1261">除了二进制数据之外，还可以指定应用程序定义的类别和应用程序定义的事件标识符。</span><span class="sxs-lookup"><span data-stu-id="6d836-1261">In addition to the binary data, you can specify an application-defined category and an application-defined event identifier.</span></span> <span data-ttu-id="6d836-1262">事件查看器使用类别来筛选由事件源写入的事件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1262">The Event Viewer uses the category to filter events written by an event source.</span></span> <span data-ttu-id="6d836-1263">事件查看器可以将类别显示为数值，也可以将类别用作资源标识符以显示本地化的类别字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1263">The Event Viewer can display the category as a numeric value, or it can use the category as a resource identifier to display a localized category string.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-1264">`message` 字符串不能包含%*n*，其中*n*是一个整数值（例如 %1），因为事件查看器将其视为插入字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1264">The `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="6d836-1265">由于 Internet 协议版本6（IPv6）地址可以包含此字符序列，因此无法记录包含 IPv6 地址的事件消息。</span><span class="sxs-lookup"><span data-stu-id="6d836-1265">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-1266">`category` 参数应为正值。</span><span class="sxs-lookup"><span data-stu-id="6d836-1266">The `category` parameter should be a positive value.</span></span> <span data-ttu-id="6d836-1267">负类别值显示为事件查看器中的互补正数。</span><span class="sxs-lookup"><span data-stu-id="6d836-1267">Negative category values appear as a complementary positive number in the Event Viewer.</span></span> <span data-ttu-id="6d836-1268">例如，-10 显示为65526，a-1 显示为65535。</span><span class="sxs-lookup"><span data-stu-id="6d836-1268">For example, a -10 appears as 65,526, a -1 as 65,535.</span></span>  
  
 <span data-ttu-id="6d836-1269">若要在事件查看器中显示本地化的类别字符串，必须使用配置有类别资源文件的事件源，并将 `category` 设置为类别资源文件中的资源标识符。</span><span class="sxs-lookup"><span data-stu-id="6d836-1269">To display localized category strings in the Event Viewer, you must use an event source configured with a category resource file, and set the `category` to a resource identifier in the category resource file.</span></span> <span data-ttu-id="6d836-1270">如果事件源没有已配置的类别资源文件，或者指定的 `category` 未为类别资源文件中的字符串编制索引，则事件查看器将显示该条目的数字类别值。</span><span class="sxs-lookup"><span data-stu-id="6d836-1270">If the event source does not have a configured category resource file, or the specified `category` does not index a string in the category resource file, then the Event Viewer displays the numeric category value for that entry.</span></span> <span data-ttu-id="6d836-1271">使用 <xref:System.Diagnostics.EventLogInstaller> 或 <xref:System.Diagnostics.EventSourceCreationData> 类，在资源文件中配置类别资源文件以及类别字符串的数目。</span><span class="sxs-lookup"><span data-stu-id="6d836-1271">Configure the category resource file, along with the number of category strings in the resource file, using the <xref:System.Diagnostics.EventLogInstaller> or the <xref:System.Diagnostics.EventSourceCreationData> class.</span></span>  
  
 <span data-ttu-id="6d836-1272">事件标识符与事件源一起唯一标识事件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1272">Event identifiers, along with the event source, uniquely identify an event.</span></span> <span data-ttu-id="6d836-1273">每个应用程序都可以定义自己的编号事件以及它们映射到的描述字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1273">Each application can define its own numbered events and the description strings to which they map.</span></span> <span data-ttu-id="6d836-1274">事件查看器显示这些字符串值，以帮助用户了解发生了什么问题，并建议采取什么操作。</span><span class="sxs-lookup"><span data-stu-id="6d836-1274">Event viewers display these string values to help the user understand what went wrong and suggest what actions to take.</span></span>  
  
 <span data-ttu-id="6d836-1275">最后，可为写入事件日志的事件指定 <xref:System.Diagnostics.EventLogEntryType>。</span><span class="sxs-lookup"><span data-stu-id="6d836-1275">Finally, you can specify an <xref:System.Diagnostics.EventLogEntryType> for the event being written to the event log.</span></span> <span data-ttu-id="6d836-1276">`type` 由日志的事件查看器的 "类型" 列中的图标和文本指示。</span><span class="sxs-lookup"><span data-stu-id="6d836-1276">The `type` is indicated by an icon and text in the Type column in the Event Viewer for a log.</span></span> <span data-ttu-id="6d836-1277">此参数指示事件类型是否为错误、警告、信息、成功审核或失败审核。</span><span class="sxs-lookup"><span data-stu-id="6d836-1277">This parameter indicates whether the event type is error, warning, information, success audit, or failure audit.</span></span>  
  
 <span data-ttu-id="6d836-1278">必须先对 <xref:System.Diagnostics.EventLog> 组件设置 <xref:System.Diagnostics.EventLog.Source%2A> 属性，然后才能将条目写入日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-1278">You must set the <xref:System.Diagnostics.EventLog.Source%2A> property on your <xref:System.Diagnostics.EventLog> component before you can write entries to the log.</span></span> <span data-ttu-id="6d836-1279">在写入包含源的第一个条目之前，必须创建并配置事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1279">You must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="6d836-1280">在应用程序安装过程中创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1280">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="6d836-1281">这样，操作系统就可以刷新其已注册的事件源的列表及其配置。</span><span class="sxs-lookup"><span data-stu-id="6d836-1281">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="6d836-1282">如果操作系统尚未刷新其事件源列表，而你尝试使用新源写入事件，则写入操作将失败。</span><span class="sxs-lookup"><span data-stu-id="6d836-1282">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="6d836-1283">您可以使用 <xref:System.Diagnostics.EventLogInstaller>或 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法来配置新源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1283">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="6d836-1284">您必须对该计算机具有管理权限才能创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1284">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="6d836-1285">如果此 <xref:System.Diagnostics.EventLog> 实例的 <xref:System.Diagnostics.EventLog.Source%2A> 属性中指定的源未在您的组件写入的计算机上注册，则 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 会调用 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 并注册源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1285">If the source specified in the <xref:System.Diagnostics.EventLog.Source%2A> property of this <xref:System.Diagnostics.EventLog> instance is not registered on the computer that your component is writing to, <xref:System.Diagnostics.EventLog.WriteEntry%2A> calls <xref:System.Diagnostics.EventLog.CreateEventSource%2A> and registers the source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-1286">如果在调用 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 或 <xref:System.Diagnostics.EventLog.WriteEntry%2A>之前未为 <xref:System.Diagnostics.EventLog> 实例指定 <xref:System.Diagnostics.EventLog.MachineName%2A>，则假定为本地计算机（"."）。</span><span class="sxs-lookup"><span data-stu-id="6d836-1286">If you do not specify a <xref:System.Diagnostics.EventLog.MachineName%2A> for your <xref:System.Diagnostics.EventLog> instance before you call <xref:System.Diagnostics.EventLog.CreateEventSource%2A> or <xref:System.Diagnostics.EventLog.WriteEntry%2A>, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="6d836-1287">如果系统需要通过对 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 的调用来注册 <xref:System.Diagnostics.EventLog.Source%2A> 并且 <xref:System.Diagnostics.EventLog> 实例上尚未设置 <xref:System.Diagnostics.EventLog.Log%2A> 属性，则日志默认为应用程序日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-1287">If the system needs to register the <xref:System.Diagnostics.EventLog.Source%2A> through a call to <xref:System.Diagnostics.EventLog.WriteEntry%2A> and the <xref:System.Diagnostics.EventLog.Log%2A> property has not been set on your <xref:System.Diagnostics.EventLog> instance, the log defaults to the Application log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-1288">上面列出的许多异常由在注册 <xref:System.Diagnostics.EventLog.Source%2A>的过程中引发的错误生成。</span><span class="sxs-lookup"><span data-stu-id="6d836-1288">Many exceptions listed above are generated by errors raised during the process of registering the <xref:System.Diagnostics.EventLog.Source%2A>.</span></span>  
  
 <span data-ttu-id="6d836-1289">源必须配置为写入本地化项或写入直接字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1289">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="6d836-1290"><xref:System.Diagnostics.EventLog.WriteEntry%2A> 方法将给定字符串直接写入事件日志;它不使用可本地化的消息资源文件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1290">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="6d836-1291">使用 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 方法可以使用本地化的消息资源文件来编写事件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1291">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="6d836-1292">如果应用程序使用资源标识符和字符串值写入条目，则必须注册两个不同的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1292">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="6d836-1293">例如，将一个源配置为资源文件，然后在 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 方法中使用该源，将使用资源标识符的项写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-1293">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="6d836-1294">然后，创建一个没有资源文件的不同源，并在 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 方法中使用该源，使用该源直接向事件日志写入字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1294">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-1295">如果将条目写入远程计算机，则当远程计算机未运行 .NET Framework 时，消息的值（文本字符串）可能不是预期的值。</span><span class="sxs-lookup"><span data-stu-id="6d836-1295">If you write an entry to a remote computer, the value of the message (the text string) might not be what you expect if the remote computer is not running the .NET Framework.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-1296">如果 `message` 参数包含 NUL 字符，则事件日志中的消息将以 NUL 字符终止。</span><span class="sxs-lookup"><span data-stu-id="6d836-1296">If the `message` parameter contains a NUL character, the message in the event log is terminated at the NUL character.</span></span>  
  
   
  
## Examples  
 [!code-cpp[EventLog_WriteEntry_5#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_WriteEntry_5/CPP/eventlog_writeentry_5.cpp#1)]
 [!code-csharp[EventLog_WriteEntry_5#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_WriteEntry_5/CS/eventlog_writeentry_5.cs#1)]
 [!code-vb[EventLog_WriteEntry_5#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_WriteEntry_5/VB/eventlog_writeentry_5.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d836-1297"><see cref="P:System.Diagnostics.EventLog.Source" /> 的 <see cref="T:System.Diagnostics.EventLog" /> 属性尚未设置。</span><span class="sxs-lookup"><span data-stu-id="6d836-1297">The <see cref="P:System.Diagnostics.EventLog.Source" /> property of the <see cref="T:System.Diagnostics.EventLog" /> has not been set.</span></span>  
  
<span data-ttu-id="6d836-1298">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1298">-or-</span></span> 
<span data-ttu-id="6d836-1299">该方法尝试注册新的事件源，但 <see cref="P:System.Diagnostics.EventLog.MachineName" /> 中的计算机名称无效。</span><span class="sxs-lookup"><span data-stu-id="6d836-1299">The method attempted to register a new event source, but the computer name in <see cref="P:System.Diagnostics.EventLog.MachineName" /> is not valid.</span></span>  
  
<span data-ttu-id="6d836-1300">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1300">-or-</span></span> 
<span data-ttu-id="6d836-1301">已为其他事件日志注册了该源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1301">The source is already registered for a different event log.</span></span>  
  
<span data-ttu-id="6d836-1302">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1302">-or-</span></span> 
 <span data-ttu-id="6d836-1303"><paramref name="eventID" /> 小于零或大于 <see cref="F:System.UInt16.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-1303"><paramref name="eventID" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="6d836-1304">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1304">-or-</span></span> 
<span data-ttu-id="6d836-1305">消息字符串长于 31,839 字节（在 Windows Vista 之前，在 Windows 操作系统上为 32,766 字节)。</span><span class="sxs-lookup"><span data-stu-id="6d836-1305">The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</span></span>  
  
<span data-ttu-id="6d836-1306">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1306">-or-</span></span> 
<span data-ttu-id="6d836-1307">此源名称导致注册表项路径的长度超过 254 个字符。</span><span class="sxs-lookup"><span data-stu-id="6d836-1307">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6d836-1308">事件日志的注册表项未能打开。</span><span class="sxs-lookup"><span data-stu-id="6d836-1308">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="6d836-1309"><paramref name="type" /> 不是有效的 <see cref="T:System.Diagnostics.EventLogEntryType" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-1309"><paramref name="type" /> is not a valid <see cref="T:System.Diagnostics.EventLogEntryType" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="6d836-1310">将事件项写入事件日志时，操作系统报告了一个错误。</span><span class="sxs-lookup"><span data-stu-id="6d836-1310">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="6d836-1311">一个 Windows 错误代码不可用。</span><span class="sxs-lookup"><span data-stu-id="6d836-1311">A Windows error code is not available.</span></span></exception>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public static void WriteEntry (string source, string message, System.Diagnostics.EventLogEntryType type, int eventID, short category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteEntry(string source, string message, valuetype System.Diagnostics.EventLogEntryType type, int32 eventID, int16 category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteEntry (source As String, message As String, type As EventLogEntryType, eventID As Integer, category As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteEntry(System::String ^ source, System::String ^ message, System::Diagnostics::EventLogEntryType type, int eventID, short category);" />
      <MemberSignature Language="F#" Value="static member WriteEntry : string * string * System.Diagnostics.EventLogEntryType * int * int16 -&gt; unit" Usage="System.Diagnostics.EventLog.WriteEntry (source, message, type, eventID, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="type" Type="System.Diagnostics.EventLogEntryType" />
        <Parameter Name="eventID" Type="System.Int32" />
        <Parameter Name="category" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="6d836-1312">应用程序在指定计算机上注册时所采用的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1312">The source by which the application is registered on the specified computer.</span></span></param>
        <param name="message"><span data-ttu-id="6d836-1313">要写入事件日志的字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1313">The string to write to the event log.</span></span></param>
        <param name="type"><span data-ttu-id="6d836-1314"><see cref="T:System.Diagnostics.EventLogEntryType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="6d836-1314">One of the <see cref="T:System.Diagnostics.EventLogEntryType" /> values.</span></span></param>
        <param name="eventID"><span data-ttu-id="6d836-1315">事件的应用程序特定标识符。</span><span class="sxs-lookup"><span data-stu-id="6d836-1315">The application-specific identifier for the event.</span></span></param>
        <param name="category"><span data-ttu-id="6d836-1316">与消息关联的应用程序特定子类别。</span><span class="sxs-lookup"><span data-stu-id="6d836-1316">The application-specific subcategory associated with the message.</span></span></param>
        <summary><span data-ttu-id="6d836-1317">通过使用指定的注册事件源，将一个具有给定消息文本、应用程序定义的事件标识符和应用程序定义的类别的项写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-1317">Writes an entry with the given message text, application-defined event identifier, and application-defined category to the event log, using the specified registered event source.</span></span> <span data-ttu-id="6d836-1318">事件查看器可使用 <paramref name="category" /> 筛选日志中的事件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1318">The <paramref name="category" /> can be used by the Event Viewer to filter events in the log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-1319">使用此方法可以将具有应用程序定义 `category` 的项写入事件日志，使用已注册为相应日志的事件源的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1319">Use this method to write an entry with an application-defined `category` to the event log, using a source that is already registered as an event source for the appropriate log.</span></span> <span data-ttu-id="6d836-1320">事件查看器使用类别来筛选由事件源写入的事件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1320">The Event Viewer uses the category to filter events written by an event source.</span></span> <span data-ttu-id="6d836-1321">事件查看器可以将类别显示为数值，也可以将类别用作资源标识符以显示本地化的类别字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1321">The Event Viewer can display the category as a numeric value, or it can use the category as a resource identifier to display a localized category string.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-1322">`category` 参数应为正值。</span><span class="sxs-lookup"><span data-stu-id="6d836-1322">The `category` parameter should be a positive value.</span></span> <span data-ttu-id="6d836-1323">负类别值显示为事件查看器中的互补正数。</span><span class="sxs-lookup"><span data-stu-id="6d836-1323">Negative category values appear as a complementary positive number in the Event Viewer.</span></span> <span data-ttu-id="6d836-1324">例如，-10 显示为65526，a-1 显示为65535。</span><span class="sxs-lookup"><span data-stu-id="6d836-1324">For example, a -10 appears as 65,526, a -1 as 65,535.</span></span>  
  
 <span data-ttu-id="6d836-1325">若要在事件查看器中显示本地化的类别字符串，必须使用配置有类别资源文件的事件源，并将 `category` 设置为类别资源文件中的资源标识符。</span><span class="sxs-lookup"><span data-stu-id="6d836-1325">To display localized category strings in the Event Viewer, you must use an event source configured with a category resource file, and set the `category` to a resource identifier in the category resource file.</span></span> <span data-ttu-id="6d836-1326">如果事件源没有已配置的类别资源文件，或者指定的 `category` 未为类别资源文件中的字符串编制索引，则事件查看器将显示该条目的数字类别值。</span><span class="sxs-lookup"><span data-stu-id="6d836-1326">If the event source does not have a configured category resource file, or the specified `category` does not index a string in the category resource file, then the Event Viewer displays the numeric category value for that entry.</span></span> <span data-ttu-id="6d836-1327">使用 <xref:System.Diagnostics.EventLogInstaller> 或 <xref:System.Diagnostics.EventSourceCreationData> 类，在资源文件中配置类别资源文件以及类别字符串的数目。</span><span class="sxs-lookup"><span data-stu-id="6d836-1327">Configure the category resource file, along with the number of category strings in the resource file, using the <xref:System.Diagnostics.EventLogInstaller> or the <xref:System.Diagnostics.EventSourceCreationData> class.</span></span>  
  
 <span data-ttu-id="6d836-1328">除了类别外，还可以指定写入事件日志的事件的事件标识符。</span><span class="sxs-lookup"><span data-stu-id="6d836-1328">In addition to the category, you can specify an event identifier for the event being written to the event log.</span></span> <span data-ttu-id="6d836-1329">事件标识符与事件源一起唯一标识事件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1329">Event identifiers, along with the event source, uniquely identify an event.</span></span> <span data-ttu-id="6d836-1330">每个应用程序都可以定义自己的编号事件以及它们映射到的描述字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1330">Each application can define its own numbered events and the description strings to which they map.</span></span> <span data-ttu-id="6d836-1331">事件查看器显示这些字符串值，以帮助用户了解发生了什么问题，并建议采取什么操作。</span><span class="sxs-lookup"><span data-stu-id="6d836-1331">Event viewers display these string values to help the user understand what went wrong and suggest what actions to take.</span></span>  
  
 <span data-ttu-id="6d836-1332">最后，可为写入事件日志的事件指定 <xref:System.Diagnostics.EventLogEntryType>。</span><span class="sxs-lookup"><span data-stu-id="6d836-1332">Finally, you can specify an <xref:System.Diagnostics.EventLogEntryType> for the event being written to the event log.</span></span> <span data-ttu-id="6d836-1333">`type` 由日志的事件查看器的 "类型" 列中的图标和文本指示。</span><span class="sxs-lookup"><span data-stu-id="6d836-1333">The `type` is indicated by an icon and text in the Type column in the Event Viewer for a log.</span></span> <span data-ttu-id="6d836-1334">此参数指示事件类型是否为错误、警告、信息、成功审核或失败审核。</span><span class="sxs-lookup"><span data-stu-id="6d836-1334">This parameter indicates whether the event type is error, warning, information, success audit, or failure audit.</span></span>  
  
 <span data-ttu-id="6d836-1335">在写入包含源的第一个条目之前，必须创建并配置事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1335">You must create and configure the event source before writing the first entry with the source.</span></span> <span data-ttu-id="6d836-1336">在应用程序安装过程中创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1336">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="6d836-1337">这样，操作系统就可以刷新其已注册的事件源的列表及其配置。</span><span class="sxs-lookup"><span data-stu-id="6d836-1337">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="6d836-1338">如果操作系统尚未刷新其事件源列表，而你尝试使用新源写入事件，则写入操作将失败。</span><span class="sxs-lookup"><span data-stu-id="6d836-1338">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="6d836-1339">您可以使用 <xref:System.Diagnostics.EventLogInstaller>或 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法来配置新源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1339">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="6d836-1340">您必须对该计算机具有管理权限才能创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1340">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="6d836-1341">源必须配置为写入本地化项或写入直接字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1341">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="6d836-1342"><xref:System.Diagnostics.EventLog.WriteEntry%2A> 方法将给定字符串直接写入事件日志;它不使用可本地化的消息资源文件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1342">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="6d836-1343">使用 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 方法可以使用本地化的消息资源文件来编写事件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1343">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="6d836-1344">如果应用程序使用资源标识符和字符串值写入条目，则必须注册两个不同的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1344">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="6d836-1345">例如，将一个源配置为资源文件，然后在 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 方法中使用该源，将使用资源标识符的项写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-1345">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="6d836-1346">然后，创建一个没有资源文件的不同源，并在 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 方法中使用该源，使用该源直接向事件日志写入字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1346">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-1347">如果 `message` 参数包含 NUL 字符，则事件日志中的消息将以 NUL 字符终止。</span><span class="sxs-lookup"><span data-stu-id="6d836-1347">If the `message` parameter contains a NUL character, the message in the event log is terminated at the NUL character.</span></span>  
>   
>  <span data-ttu-id="6d836-1348">`message` 字符串不能包含%*n*，其中*n*是一个整数值（例如 %1），因为事件查看器将其视为插入字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1348">The `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="6d836-1349">由于 Internet 协议版本6（IPv6）地址可以包含此字符序列，因此无法记录包含 IPv6 地址的事件消息。</span><span class="sxs-lookup"><span data-stu-id="6d836-1349">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
   
  
## Examples  
 [!code-cpp[EventLog_WriteEntry_1_3#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_WriteEntry_1_3/CPP/eventlog_writeentry_1_3.cpp#1)]
 [!code-csharp[EventLog_WriteEntry_1_3#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_WriteEntry_1_3/CS/eventlog_writeentry_1_3.cs#1)]
 [!code-vb[EventLog_WriteEntry_1_3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_WriteEntry_1_3/VB/eventlog_writeentry_1_3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d836-1350"><paramref name="source" /> 值是空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="6d836-1350">The <paramref name="source" /> value is an empty string ("").</span></span>  
  
<span data-ttu-id="6d836-1351">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1351">-or-</span></span> 
<span data-ttu-id="6d836-1352"><paramref name="source" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-1352">The <paramref name="source" /> value is <see langword="null" />.</span></span>  
  
<span data-ttu-id="6d836-1353">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1353">-or-</span></span> 
 <span data-ttu-id="6d836-1354"><paramref name="eventID" /> 小于零或大于 <see cref="F:System.UInt16.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-1354"><paramref name="eventID" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="6d836-1355">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1355">-or-</span></span> 
<span data-ttu-id="6d836-1356">消息字符串长于 31,839 字节（在 Windows Vista 之前，在 Windows 操作系统上为 32,766 字节)。</span><span class="sxs-lookup"><span data-stu-id="6d836-1356">The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</span></span>  
  
<span data-ttu-id="6d836-1357">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1357">-or-</span></span> 
<span data-ttu-id="6d836-1358">此源名称导致注册表项路径的长度超过 254 个字符。</span><span class="sxs-lookup"><span data-stu-id="6d836-1358">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6d836-1359">事件日志的注册表项未能打开。</span><span class="sxs-lookup"><span data-stu-id="6d836-1359">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="6d836-1360"><paramref name="type" /> 不是有效的 <see cref="T:System.Diagnostics.EventLogEntryType" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-1360"><paramref name="type" /> is not a valid <see cref="T:System.Diagnostics.EventLogEntryType" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="6d836-1361">将事件项写入事件日志时，操作系统报告了一个错误。</span><span class="sxs-lookup"><span data-stu-id="6d836-1361">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="6d836-1362">一个 Windows 错误代码不可用。</span><span class="sxs-lookup"><span data-stu-id="6d836-1362">A Windows error code is not available.</span></span></exception>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public static void WriteEntry (string source, string message, System.Diagnostics.EventLogEntryType type, int eventID, short category, byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteEntry(string source, string message, valuetype System.Diagnostics.EventLogEntryType type, int32 eventID, int16 category, unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteEntry (source As String, message As String, type As EventLogEntryType, eventID As Integer, category As Short, rawData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteEntry(System::String ^ source, System::String ^ message, System::Diagnostics::EventLogEntryType type, int eventID, short category, cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberSignature Language="F#" Value="static member WriteEntry : string * string * System.Diagnostics.EventLogEntryType * int * int16 * byte[] -&gt; unit" Usage="System.Diagnostics.EventLog.WriteEntry (source, message, type, eventID, category, rawData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="type" Type="System.Diagnostics.EventLogEntryType" />
        <Parameter Name="eventID" Type="System.Int32" />
        <Parameter Name="category" Type="System.Int16" />
        <Parameter Name="rawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="6d836-1363">应用程序在指定计算机上注册时所采用的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1363">The source by which the application is registered on the specified computer.</span></span></param>
        <param name="message"><span data-ttu-id="6d836-1364">要写入事件日志的字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1364">The string to write to the event log.</span></span></param>
        <param name="type"><span data-ttu-id="6d836-1365"><see cref="T:System.Diagnostics.EventLogEntryType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="6d836-1365">One of the <see cref="T:System.Diagnostics.EventLogEntryType" /> values.</span></span></param>
        <param name="eventID"><span data-ttu-id="6d836-1366">事件的应用程序特定标识符。</span><span class="sxs-lookup"><span data-stu-id="6d836-1366">The application-specific identifier for the event.</span></span></param>
        <param name="category"><span data-ttu-id="6d836-1367">与消息关联的应用程序特定子类别。</span><span class="sxs-lookup"><span data-stu-id="6d836-1367">The application-specific subcategory associated with the message.</span></span></param>
        <param name="rawData"><span data-ttu-id="6d836-1368">包含与此项关联的二进制数据的字节数组。</span><span class="sxs-lookup"><span data-stu-id="6d836-1368">An array of bytes that holds the binary data associated with the entry.</span></span></param>
        <summary><span data-ttu-id="6d836-1369">（使用指定的注册事件源）将一个包含给定消息文本、应用程序定义的事件标识符和应用程序定义的类别的项写入事件日志，并向消息追加二进制数据。</span><span class="sxs-lookup"><span data-stu-id="6d836-1369">Writes an entry with the given message text, application-defined event identifier, and application-defined category to the event log (using the specified registered event source) and appends binary data to the message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-1370">使用此方法可以将应用程序定义的特定于事件的数据写入事件日志，使用已注册为相应日志的事件源的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1370">Use this method to write application-defined event-specific data to the event log, using a source already registered as an event source for the appropriate log.</span></span> <span data-ttu-id="6d836-1371">事件查看器不会解释此数据;它仅以组合的十六进制和文本格式显示原始数据。</span><span class="sxs-lookup"><span data-stu-id="6d836-1371">The Event Viewer does not interpret this data; it displays raw data only in a combined hexadecimal and text format.</span></span> <span data-ttu-id="6d836-1372">谨慎使用特定于事件的数据;仅当你确定它将有用时才包含它。</span><span class="sxs-lookup"><span data-stu-id="6d836-1372">Use event-specific data sparingly; include it only if you are sure it will be useful.</span></span> <span data-ttu-id="6d836-1373">你还可以使用特定于事件的数据存储应用程序可以独立于事件查看器处理的信息。</span><span class="sxs-lookup"><span data-stu-id="6d836-1373">You can also use event-specific data to store information the application can process independently of the Event Viewer.</span></span> <span data-ttu-id="6d836-1374">例如，您可以专门为您的事件编写查看器，或者编写一个程序来扫描日志文件，并创建包含特定于事件的数据的信息的报表。</span><span class="sxs-lookup"><span data-stu-id="6d836-1374">For example, you could write a viewer specifically for your events, or write a program that scans the logfile and creates reports that include information from the event-specific data.</span></span>  
  
 <span data-ttu-id="6d836-1375">除了二进制数据之外，还可以指定应用程序定义的类别和应用程序定义的事件标识符。</span><span class="sxs-lookup"><span data-stu-id="6d836-1375">In addition to the binary data, you can specify an application-defined category and an application-defined event identifier.</span></span> <span data-ttu-id="6d836-1376">事件查看器使用类别来筛选由事件源写入的事件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1376">The Event Viewer uses the category to filter events written by an event source.</span></span> <span data-ttu-id="6d836-1377">事件查看器可以将类别显示为数值，也可以将类别用作资源标识符以显示本地化的类别字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1377">The Event Viewer can display the category as a numeric value, or it can use the category as a resource identifier to display a localized category string.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-1378">`category` 参数应为正值。</span><span class="sxs-lookup"><span data-stu-id="6d836-1378">The `category` parameter should be a positive value.</span></span> <span data-ttu-id="6d836-1379">负类别值显示为事件查看器中的互补正数。</span><span class="sxs-lookup"><span data-stu-id="6d836-1379">Negative category values appear as a complementary positive number in the Event Viewer.</span></span> <span data-ttu-id="6d836-1380">例如，-10 将显示为65526，将-1 显示为65535。</span><span class="sxs-lookup"><span data-stu-id="6d836-1380">For example, a -10 will appear as 65,526, a -1 as 65,535.</span></span>  
  
 <span data-ttu-id="6d836-1381">若要在事件查看器中显示本地化的类别字符串，必须使用配置有类别资源文件的事件源，并将 `category` 设置为类别资源文件中的资源标识符。</span><span class="sxs-lookup"><span data-stu-id="6d836-1381">To display localized category strings in the Event Viewer, you must use an event source configured with a category resource file, and set the `category` to a resource identifier in the category resource file.</span></span> <span data-ttu-id="6d836-1382">如果事件源没有已配置的类别资源文件，或者指定的 `category` 未为类别资源文件中的字符串编制索引，则事件查看器将显示该条目的数字类别值。</span><span class="sxs-lookup"><span data-stu-id="6d836-1382">If the event source does not have a configured category resource file, or the specified `category` does not index a string in the category resource file, then the Event Viewer displays the numeric category value for that entry.</span></span> <span data-ttu-id="6d836-1383">使用 <xref:System.Diagnostics.EventLogInstaller> 或 <xref:System.Diagnostics.EventSourceCreationData> 类，在资源文件中配置类别资源文件以及类别字符串的数目。</span><span class="sxs-lookup"><span data-stu-id="6d836-1383">Configure the category resource file, along with the number of category strings in the resource file, using the <xref:System.Diagnostics.EventLogInstaller> or the <xref:System.Diagnostics.EventSourceCreationData> class.</span></span>  
  
 <span data-ttu-id="6d836-1384">事件标识符与事件源一起唯一标识事件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1384">Event identifiers, together with the event source, uniquely identify an event.</span></span> <span data-ttu-id="6d836-1385">每个应用程序都可以定义自己的编号事件以及它们映射到的描述字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1385">Each application can define its own numbered events and the description strings to which they map.</span></span> <span data-ttu-id="6d836-1386">事件查看器显示这些字符串值，以帮助用户了解发生了什么问题，并建议采取什么操作。</span><span class="sxs-lookup"><span data-stu-id="6d836-1386">Event viewers display these string values to help the user understand what went wrong and suggest what actions to take.</span></span>  
  
 <span data-ttu-id="6d836-1387">最后，可为写入事件日志的事件指定 <xref:System.Diagnostics.EventLogEntryType>。</span><span class="sxs-lookup"><span data-stu-id="6d836-1387">Finally, you can specify an <xref:System.Diagnostics.EventLogEntryType> for the event being written to the event log.</span></span> <span data-ttu-id="6d836-1388">`type` 由日志的事件查看器的 "类型" 列中的图标和文本指示。</span><span class="sxs-lookup"><span data-stu-id="6d836-1388">The `type` is indicated by an icon and text in the Type column in the Event Viewer for a log.</span></span> <span data-ttu-id="6d836-1389">此参数指示事件类型是否为错误、警告、信息、成功审核或失败审核。</span><span class="sxs-lookup"><span data-stu-id="6d836-1389">This parameter indicates whether the event type is error, warning, information, success audit, or failure audit.</span></span>  
  
 <span data-ttu-id="6d836-1390">在写入包含源的第一个条目之前，必须创建并配置事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1390">You must create and configure the event source before writing the first entry with the source.</span></span> <span data-ttu-id="6d836-1391">在应用程序安装过程中创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1391">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="6d836-1392">这样，操作系统就可以刷新其已注册的事件源的列表及其配置。</span><span class="sxs-lookup"><span data-stu-id="6d836-1392">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="6d836-1393">如果操作系统尚未刷新其事件源列表，而你尝试使用新源写入事件，则写入操作将失败。</span><span class="sxs-lookup"><span data-stu-id="6d836-1393">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="6d836-1394">您可以使用 <xref:System.Diagnostics.EventLogInstaller>或 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法来配置新源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1394">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="6d836-1395">您必须对该计算机具有管理权限才能创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1395">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="6d836-1396">源必须配置为写入本地化项或写入直接字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1396">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="6d836-1397"><xref:System.Diagnostics.EventLog.WriteEntry%2A> 方法将给定字符串直接写入事件日志;它不使用可本地化的消息资源文件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1397">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="6d836-1398">使用 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 方法可以使用本地化的消息资源文件来编写事件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1398">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="6d836-1399">如果应用程序使用资源标识符和字符串值写入条目，则必须注册两个不同的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1399">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="6d836-1400">例如，将一个源配置为资源文件，然后在 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 方法中使用该源，将使用资源标识符的项写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-1400">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="6d836-1401">然后，创建一个没有资源文件的不同源，并在 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 方法中使用该源，使用该源直接向事件日志写入字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1401">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-1402">如果 `message` 参数包含 NUL 字符，则事件日志中的消息将以 NUL 字符终止。</span><span class="sxs-lookup"><span data-stu-id="6d836-1402">If the `message` parameter contains a NUL character, the message in the event log is terminated at the NUL character.</span></span>  
>   
>  <span data-ttu-id="6d836-1403">`message` 字符串不能包含%*n*，其中*n*是一个整数值（例如 %1），因为事件查看器将其视为插入字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1403">The `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="6d836-1404">由于 Internet 协议版本6（IPv6）地址可以包含此字符序列，因此无法记录包含 IPv6 地址的事件消息。</span><span class="sxs-lookup"><span data-stu-id="6d836-1404">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
   
  
## Examples  
 [!code-cpp[EventLog_WriteEntry_1_3#2](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_WriteEntry_1_3/CPP/eventlog_writeentry_1_3.cpp#2)]
 [!code-csharp[EventLog_WriteEntry_1_3#2](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_WriteEntry_1_3/CS/eventlog_writeentry_1_3.cs#2)]
 [!code-vb[EventLog_WriteEntry_1_3#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_WriteEntry_1_3/VB/eventlog_writeentry_1_3.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d836-1405"><paramref name="source" /> 值是空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="6d836-1405">The <paramref name="source" /> value is an empty string ("").</span></span>  
  
<span data-ttu-id="6d836-1406">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1406">-or-</span></span> 
<span data-ttu-id="6d836-1407"><paramref name="source" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-1407">The <paramref name="source" /> value is <see langword="null" />.</span></span>  
  
<span data-ttu-id="6d836-1408">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1408">-or-</span></span> 
 <span data-ttu-id="6d836-1409"><paramref name="eventID" /> 小于零或大于 <see cref="F:System.UInt16.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-1409"><paramref name="eventID" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="6d836-1410">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1410">-or-</span></span> 
<span data-ttu-id="6d836-1411">消息字符串长于 31,839 字节（在 Windows Vista 之前，在 Windows 操作系统上为 32,766 字节)。</span><span class="sxs-lookup"><span data-stu-id="6d836-1411">The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</span></span>  
  
<span data-ttu-id="6d836-1412">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1412">-or-</span></span> 
<span data-ttu-id="6d836-1413">此源名称导致注册表项路径的长度超过 254 个字符。</span><span class="sxs-lookup"><span data-stu-id="6d836-1413">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="6d836-1414"><paramref name="type" /> 不是有效的 <see cref="T:System.Diagnostics.EventLogEntryType" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-1414"><paramref name="type" /> is not a valid <see cref="T:System.Diagnostics.EventLogEntryType" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6d836-1415">事件日志的注册表项未能打开。</span><span class="sxs-lookup"><span data-stu-id="6d836-1415">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="6d836-1416">将事件项写入事件日志时，操作系统报告了一个错误。</span><span class="sxs-lookup"><span data-stu-id="6d836-1416">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="6d836-1417">一个 Windows 错误代码不可用。</span><span class="sxs-lookup"><span data-stu-id="6d836-1417">A Windows error code is not available.</span></span></exception>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteEvent">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6d836-1418">向事件日志写入本地化事件项。</span><span class="sxs-lookup"><span data-stu-id="6d836-1418">Writes a localized event entry to the event log.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="public void WriteEvent (System.Diagnostics.EventInstance instance, params object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEvent(class System.Diagnostics.EventInstance instance, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEvent(System.Diagnostics.EventInstance,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEvent (instance As EventInstance, ParamArray values As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEvent(System::Diagnostics::EventInstance ^ instance, ... cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : System.Diagnostics.EventInstance * obj[] -&gt; unit" Usage="eventLog.WriteEvent (instance, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Diagnostics.EventInstance" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="values" Type="System.Object[]" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="6d836-1419">表示本地化事件日志项的 <see cref="T:System.Diagnostics.EventInstance" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="6d836-1419">An <see cref="T:System.Diagnostics.EventInstance" /> instance that represents a localized event log entry.</span></span></param>
        <param name="values"><span data-ttu-id="6d836-1420">要合并到事件日志项的消息文本中的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="6d836-1420">An array of strings to merge into the message text of the event log entry.</span></span></param>
        <summary><span data-ttu-id="6d836-1421">向事件日志写入本地化项。</span><span class="sxs-lookup"><span data-stu-id="6d836-1421">Writes a localized entry to the event log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-1422">使用此方法可将本地化项写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-1422">Use this method to write a localized entry to the event log.</span></span> <span data-ttu-id="6d836-1423">用资源标识符而不是字符串值指定事件属性。</span><span class="sxs-lookup"><span data-stu-id="6d836-1423">You specify the event properties with resource identifiers rather than string values.</span></span> <span data-ttu-id="6d836-1424">事件查看器使用资源标识符显示 <xref:System.Diagnostics.EventLog.Source%2A>的本地化资源文件中的相应字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1424">The Event Viewer uses the resource identifiers to display the corresponding strings from the localized resource file for the <xref:System.Diagnostics.EventLog.Source%2A>.</span></span> <span data-ttu-id="6d836-1425">必须先向相应的资源文件注册源，然后才能使用资源标识符编写事件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1425">You must register the source with the corresponding resource file before you write events using resource identifiers.</span></span>  
  
 <span data-ttu-id="6d836-1426">输入 `instance` 实例指定事件消息和属性。</span><span class="sxs-lookup"><span data-stu-id="6d836-1426">The input `instance` instance specifies the event message and properties.</span></span> <span data-ttu-id="6d836-1427">为源消息资源文件中定义的消息设置 `instance` 输入的 <xref:System.Diagnostics.EventInstance.InstanceId%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d836-1427">Set the <xref:System.Diagnostics.EventInstance.InstanceId%2A> of the `instance` input for the defined message in the source message resource file.</span></span> <span data-ttu-id="6d836-1428">您可以选择设置 `instance` 输入的 <xref:System.Diagnostics.EventInstance.CategoryId%2A> 和 <xref:System.Diagnostics.EventInstance.EntryType%2A>，以定义事件项的类别和事件类型。</span><span class="sxs-lookup"><span data-stu-id="6d836-1428">You can optionally set the <xref:System.Diagnostics.EventInstance.CategoryId%2A> and <xref:System.Diagnostics.EventInstance.EntryType%2A> of the `instance` input to define the category and event type of your event entry.</span></span> <span data-ttu-id="6d836-1429">还可以指定要插入到本地化消息文本中的与语言无关的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="6d836-1429">You can also specify an array of language-independent strings to insert into the localized message text.</span></span> <span data-ttu-id="6d836-1430">如果事件消息不包含替换字符串的格式设置占位符，请将 `values` 设置为 `null`。</span><span class="sxs-lookup"><span data-stu-id="6d836-1430">Set `values` to `null` if the event message does not contain formatting placeholders for replacement strings.</span></span>  
  
 <span data-ttu-id="6d836-1431">使用 <xref:System.Diagnostics.EventLog.WriteEvent%2A>之前，必须先对 <xref:System.Diagnostics.EventLog> 组件设置 <xref:System.Diagnostics.EventLog.Source%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="6d836-1431">You must set the <xref:System.Diagnostics.EventLog.Source%2A> property on your <xref:System.Diagnostics.EventLog> component before using <xref:System.Diagnostics.EventLog.WriteEvent%2A>.</span></span> <span data-ttu-id="6d836-1432">指定的源必须配置为将本地化项写入日志;源必须至少定义了一个消息资源文件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1432">The specified source must be configured for writing localized entries to the log; the source must at minimum have a message resource file defined.</span></span>  
  
 <span data-ttu-id="6d836-1433">在写入包含源的第一个条目之前，必须创建并配置事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1433">You must create and configure the event source before writing the first entry with the source.</span></span> <span data-ttu-id="6d836-1434">在应用程序安装过程中创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1434">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="6d836-1435">这样，操作系统就可以刷新其已注册的事件源的列表及其配置。</span><span class="sxs-lookup"><span data-stu-id="6d836-1435">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="6d836-1436">如果操作系统尚未刷新其事件源列表，而你尝试使用新源写入事件，则写入操作将失败。</span><span class="sxs-lookup"><span data-stu-id="6d836-1436">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="6d836-1437">您可以使用 <xref:System.Diagnostics.EventLogInstaller>或 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法来配置新源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1437">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="6d836-1438">您必须对该计算机具有管理权限才能创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1438">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="6d836-1439">源必须配置为写入本地化项或写入直接字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1439">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="6d836-1440">如果你的应用程序将字符串值直接写入事件日志，请使用 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="6d836-1440">Use the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method if your application writes string values directly to the event log.</span></span>  
  
 <span data-ttu-id="6d836-1441">如果应用程序使用资源标识符和字符串值写入条目，则必须注册两个不同的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1441">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="6d836-1442">例如，将一个源配置为资源文件，然后在 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 方法中使用该源，将使用资源标识符的项写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-1442">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="6d836-1443">然后，创建一个没有资源文件的不同源，并在 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 方法中使用该源，使用该源直接向事件日志写入字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1443">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-1444">如果将条目写入远程计算机，则如果远程计算机未运行 .NET Framework，则 `message` 字符串的值可能不是预期的值。</span><span class="sxs-lookup"><span data-stu-id="6d836-1444">If you write an entry to a remote computer, the value of the `message` string might not be what you expect if the remote computer is not running the .NET Framework.</span></span> <span data-ttu-id="6d836-1445">而且，`message` 字符串不能包含%*n*，其中*n*是一个整数值（例如 %1），因为事件查看器将其视为插入字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1445">Also, the `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="6d836-1446">由于 Internet 协议版本6（IPv6）地址可以包含此字符序列，因此无法记录包含 IPv6 地址的事件消息。</span><span class="sxs-lookup"><span data-stu-id="6d836-1446">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d836-1447">下面的示例将两个审核项写入 `myNewLog`的事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-1447">The following example writes two audit entries to the event log `myNewLog`.</span></span> <span data-ttu-id="6d836-1448">该示例创建一个新的事件源和一个新的事件日志（如果它们不存在于本地计算机上）。</span><span class="sxs-lookup"><span data-stu-id="6d836-1448">The example creates a new event source and a new event log if they do not exist on the local computer.</span></span> <span data-ttu-id="6d836-1449">使用资源文件中的资源标识符指定事件消息文本。</span><span class="sxs-lookup"><span data-stu-id="6d836-1449">The event message text is specified using a resource identifier in a resource file.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#7](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#7)]
 [!code-csharp[EventLog_WriteEvent#7](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#7)]
 [!code-vb[EventLog_WriteEvent#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#7)]  
  
 <span data-ttu-id="6d836-1450">该示例使用资源库 EventLogMsgs 中内置的以下消息文本文件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1450">The example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="6d836-1451">消息文本文件是从中创建消息资源文件的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1451">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="6d836-1452">消息文本文件定义类别、事件消息和参数插入字符串的资源标识符和文本。</span><span class="sxs-lookup"><span data-stu-id="6d836-1452">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d836-1453"><see cref="P:System.Diagnostics.EventLog.Source" /> 的 <see cref="T:System.Diagnostics.EventLog" /> 属性尚未设置。</span><span class="sxs-lookup"><span data-stu-id="6d836-1453">The <see cref="P:System.Diagnostics.EventLog.Source" /> property of the <see cref="T:System.Diagnostics.EventLog" /> has not been set.</span></span>  
  
<span data-ttu-id="6d836-1454">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1454">-or-</span></span> 
<span data-ttu-id="6d836-1455">该方法尝试注册新的事件源，但 <see cref="P:System.Diagnostics.EventLog.MachineName" /> 中的计算机名称无效。</span><span class="sxs-lookup"><span data-stu-id="6d836-1455">The method attempted to register a new event source, but the computer name in <see cref="P:System.Diagnostics.EventLog.MachineName" /> is not valid.</span></span>  
  
<span data-ttu-id="6d836-1456">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1456">-or-</span></span> 
<span data-ttu-id="6d836-1457">已为其他事件日志注册了该源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1457">The source is already registered for a different event log.</span></span>  
  
<span data-ttu-id="6d836-1458">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1458">-or-</span></span> 
 <span data-ttu-id="6d836-1459"><paramref name="instance.InstanceId" /> 小于零或大于 <see cref="F:System.UInt16.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-1459"><paramref name="instance.InstanceId" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="6d836-1460">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1460">-or-</span></span> 
 <span data-ttu-id="6d836-1461"><paramref name="values" /> 超过了 256 个元素。</span><span class="sxs-lookup"><span data-stu-id="6d836-1461"><paramref name="values" /> has more than 256 elements.</span></span>  
  
<span data-ttu-id="6d836-1462">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1462">-or-</span></span> 
<span data-ttu-id="6d836-1463"><paramref name="values" /> 元素中有一个超过了 32766 个字节。</span><span class="sxs-lookup"><span data-stu-id="6d836-1463">One of the <paramref name="values" /> elements is longer than 32766 bytes.</span></span>  
  
<span data-ttu-id="6d836-1464">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1464">-or-</span></span> 
<span data-ttu-id="6d836-1465">此源名称导致注册表项路径的长度超过 254 个字符。</span><span class="sxs-lookup"><span data-stu-id="6d836-1465">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6d836-1466"><paramref name="instance" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-1466"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6d836-1467">事件日志的注册表项未能打开。</span><span class="sxs-lookup"><span data-stu-id="6d836-1467">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="6d836-1468">将事件项写入事件日志时，操作系统报告了一个错误。</span><span class="sxs-lookup"><span data-stu-id="6d836-1468">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="6d836-1469">一个 Windows 错误代码不可用。</span><span class="sxs-lookup"><span data-stu-id="6d836-1469">A Windows error code is not available.</span></span></exception>
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
        <altmember cref="T:System.Diagnostics.EventInstance" />
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="public void WriteEvent (System.Diagnostics.EventInstance instance, byte[] data, params object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEvent(class System.Diagnostics.EventInstance instance, unsigned int8[] data, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEvent(System.Diagnostics.EventInstance,System.Byte[],System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEvent (instance As EventInstance, data As Byte(), ParamArray values As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEvent(System::Diagnostics::EventInstance ^ instance, cli::array &lt;System::Byte&gt; ^ data, ... cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : System.Diagnostics.EventInstance * byte[] * obj[] -&gt; unit" Usage="eventLog.WriteEvent (instance, data, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Diagnostics.EventInstance" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.Byte[]" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="values" Type="System.Object[]" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="6d836-1470">表示本地化事件日志项的 <see cref="T:System.Diagnostics.EventInstance" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="6d836-1470">An <see cref="T:System.Diagnostics.EventInstance" /> instance that represents a localized event log entry.</span></span></param>
        <param name="data"><span data-ttu-id="6d836-1471">包含与此项关联的二进制数据的字节数组。</span><span class="sxs-lookup"><span data-stu-id="6d836-1471">An array of bytes that holds the binary data associated with the entry.</span></span></param>
        <param name="values"><span data-ttu-id="6d836-1472">要合并到事件日志项的消息文本中的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="6d836-1472">An array of strings to merge into the message text of the event log entry.</span></span></param>
        <summary><span data-ttu-id="6d836-1473">写入包含给定的事件数据、消息替换字符串和关联的二进制数据的事件日志项。</span><span class="sxs-lookup"><span data-stu-id="6d836-1473">Writes an event log entry with the given event data, message replacement strings, and associated binary data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-1474">使用此方法可以向事件日志写入包含附加事件特定数据的本地化项。</span><span class="sxs-lookup"><span data-stu-id="6d836-1474">Use this method to write a localized entry with additional event-specific data to the event log.</span></span> <span data-ttu-id="6d836-1475">用资源标识符而不是字符串值指定事件属性。</span><span class="sxs-lookup"><span data-stu-id="6d836-1475">You specify the event properties with resource identifiers rather than string values.</span></span> <span data-ttu-id="6d836-1476">事件查看器使用资源标识符显示 <xref:System.Diagnostics.EventLog.Source%2A>的本地化资源文件中的相应字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1476">The Event Viewer uses the resource identifiers to display the corresponding strings from the localized resource file for the <xref:System.Diagnostics.EventLog.Source%2A>.</span></span> <span data-ttu-id="6d836-1477">必须先向相应的资源文件注册源，然后才能使用资源标识符编写事件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1477">You must register the source with the corresponding resource file before you write events using resource identifiers.</span></span>  
  
 <span data-ttu-id="6d836-1478">输入 `instance` 实例指定事件消息和属性。</span><span class="sxs-lookup"><span data-stu-id="6d836-1478">The input `instance` instance specifies the event message and properties.</span></span> <span data-ttu-id="6d836-1479">为源消息资源文件中定义的消息设置 `instance` 输入的 <xref:System.Diagnostics.EventInstance.InstanceId%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d836-1479">Set the <xref:System.Diagnostics.EventInstance.InstanceId%2A> of the `instance` input for the defined message in the source message resource file.</span></span> <span data-ttu-id="6d836-1480">您可以选择设置 `instance` 输入的 <xref:System.Diagnostics.EventInstance.CategoryId%2A> 和 <xref:System.Diagnostics.EventInstance.EntryType%2A>，以定义事件项的类别和事件类型。</span><span class="sxs-lookup"><span data-stu-id="6d836-1480">You can optionally set the <xref:System.Diagnostics.EventInstance.CategoryId%2A> and <xref:System.Diagnostics.EventInstance.EntryType%2A> of the `instance` input to define the category and event type of your event entry.</span></span> <span data-ttu-id="6d836-1481">还可以指定要插入到本地化消息文本中的与语言无关的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="6d836-1481">You can also specify an array of language-independent strings to insert into the localized message text.</span></span> <span data-ttu-id="6d836-1482">如果事件消息不包含替换字符串的格式设置占位符，请将 `values` 设置为 `null`。</span><span class="sxs-lookup"><span data-stu-id="6d836-1482">Set `values` to `null` if the event message does not contain formatting placeholders for replacement strings.</span></span>  
  
 <span data-ttu-id="6d836-1483">如果有必要提供事件的更多详细信息，请指定包含事件的二进制数据。</span><span class="sxs-lookup"><span data-stu-id="6d836-1483">Specify binary data with an event when it is necessary to provide additional details for the event.</span></span> <span data-ttu-id="6d836-1484">例如，使用 `data` 参数来包含特定错误的相关信息。</span><span class="sxs-lookup"><span data-stu-id="6d836-1484">For example, use the `data` parameter to include information on a specific error.</span></span> <span data-ttu-id="6d836-1485">事件查看器不解释关联的事件数据;它以组合的十六进制和文本格式显示数据。</span><span class="sxs-lookup"><span data-stu-id="6d836-1485">The Event Viewer does not interpret the associated event data; it displays the data in a combined hexadecimal and text format.</span></span> <span data-ttu-id="6d836-1486">谨慎使用特定于事件的数据;仅当你确定它将有用时才包含它。</span><span class="sxs-lookup"><span data-stu-id="6d836-1486">Use event-specific data sparingly; include it only if you are sure it will be useful.</span></span> <span data-ttu-id="6d836-1487">你还可以使用特定于事件的数据存储应用程序可以独立于事件查看器处理的信息。</span><span class="sxs-lookup"><span data-stu-id="6d836-1487">You can also use event-specific data to store information the application can process independently of the Event Viewer.</span></span> <span data-ttu-id="6d836-1488">例如，您可以专门为您的事件编写查看器，或编写扫描事件日志的程序，并创建包含特定于事件的数据的信息的报表。</span><span class="sxs-lookup"><span data-stu-id="6d836-1488">For example, you could write a viewer specifically for your events, or write a program that scans the event log and creates reports that include information from the event-specific data.</span></span>  
  
 <span data-ttu-id="6d836-1489">必须先在 <xref:System.Diagnostics.EventLog> 组件上设置 <xref:System.Diagnostics.EventLog.Source%2A> 属性，然后才能使用 <xref:System.Diagnostics.EventLog.WriteEvent%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d836-1489">You must set the <xref:System.Diagnostics.EventLog.Source%2A> property on your <xref:System.Diagnostics.EventLog> component before component before using <xref:System.Diagnostics.EventLog.WriteEvent%2A>.</span></span> <span data-ttu-id="6d836-1490">指定的源必须配置为将本地化项写入日志;源必须至少定义了一个消息资源文件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1490">The specified source must be configured for writing localized entries to the log; the source must at minimum have a message resource file defined.</span></span>  
  
 <span data-ttu-id="6d836-1491">在写入包含源的第一个条目之前，必须创建并配置事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1491">You must create and configure the event source before writing the first entry with the source.</span></span> <span data-ttu-id="6d836-1492">在应用程序安装过程中创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1492">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="6d836-1493">这样，操作系统就可以刷新其已注册的事件源的列表及其配置。</span><span class="sxs-lookup"><span data-stu-id="6d836-1493">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="6d836-1494">如果操作系统尚未刷新其事件源列表，而你尝试使用新源写入事件，则写入操作将失败。</span><span class="sxs-lookup"><span data-stu-id="6d836-1494">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="6d836-1495">您可以使用 <xref:System.Diagnostics.EventLogInstaller>或 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法来配置新源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1495">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="6d836-1496">您必须对该计算机具有管理权限才能创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1496">You must have administrative rights on the computer to create a new event source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-1497">如果在调用 <xref:System.Diagnostics.EventLog.WriteEvent%2A>之前未为 <xref:System.Diagnostics.EventLog> 实例指定 <xref:System.Diagnostics.EventLog.MachineName%2A>，则将假定为本地计算机（"."）。</span><span class="sxs-lookup"><span data-stu-id="6d836-1497">If you do not specify a <xref:System.Diagnostics.EventLog.MachineName%2A> for your <xref:System.Diagnostics.EventLog> instance before you call <xref:System.Diagnostics.EventLog.WriteEvent%2A>, the local computer (".") is assumed.</span></span>  
  
 <span data-ttu-id="6d836-1498">源必须配置为写入本地化项或写入直接字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1498">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="6d836-1499">如果你的应用程序将字符串值直接写入事件日志，请使用 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="6d836-1499">Use the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method if your application writes string values directly to the event log.</span></span>  
  
 <span data-ttu-id="6d836-1500">如果应用程序使用资源标识符和字符串值写入条目，则必须注册两个不同的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1500">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="6d836-1501">例如，将一个源配置为资源文件，然后在 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 方法中使用该源，将使用资源标识符的项写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-1501">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="6d836-1502">然后，创建一个没有资源文件的不同源，并在 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 方法中使用该源，使用该源直接向事件日志写入字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1502">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d836-1503">如果将条目写入远程计算机，则如果远程计算机未运行 .NET Framework，则 `message` 字符串的值可能不是预期的值。</span><span class="sxs-lookup"><span data-stu-id="6d836-1503">If you write an entry to a remote computer, the value of the `message` string might not be what you expect if the remote computer is not running the .NET Framework.</span></span> <span data-ttu-id="6d836-1504">而且，`message` 字符串不能包含%*n*，其中*n*是一个整数值（例如 %1），因为事件查看器将其视为插入字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1504">Also, the `message` string cannot contain %*n*, where *n* is an integer value (for example, %1), because the event viewer treats it as an insertion string.</span></span> <span data-ttu-id="6d836-1505">由于 Internet 协议版本6（IPv6）地址可以包含此字符序列，因此无法记录包含 IPv6 地址的事件消息。</span><span class="sxs-lookup"><span data-stu-id="6d836-1505">Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d836-1506">下面的示例将两个审核项写入 `myNewLog`的事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-1506">The following example writes two audit entries to the event log `myNewLog`.</span></span> <span data-ttu-id="6d836-1507">该示例创建一个新的事件源和一个新的事件日志（如果它们不存在于本地计算机上）。</span><span class="sxs-lookup"><span data-stu-id="6d836-1507">The example creates a new event source and a new event log if they do not exist on the local computer.</span></span> <span data-ttu-id="6d836-1508">使用资源文件中的资源标识符指定事件消息文本。</span><span class="sxs-lookup"><span data-stu-id="6d836-1508">The event message text is specified using a resource identifier in a resource file.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#7](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#7)]
 [!code-csharp[EventLog_WriteEvent#7](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#7)]
 [!code-vb[EventLog_WriteEvent#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#7)]  
  
 <span data-ttu-id="6d836-1509">该示例使用资源库 EventLogMsgs 中内置的以下消息文本文件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1509">The example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="6d836-1510">消息文本文件是从中创建消息资源文件的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1510">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="6d836-1511">消息文本文件定义类别、事件消息和参数插入字符串的资源标识符和文本。</span><span class="sxs-lookup"><span data-stu-id="6d836-1511">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d836-1512"><see cref="P:System.Diagnostics.EventLog.Source" /> 的 <see cref="T:System.Diagnostics.EventLog" /> 属性尚未设置。</span><span class="sxs-lookup"><span data-stu-id="6d836-1512">The <see cref="P:System.Diagnostics.EventLog.Source" /> property of the <see cref="T:System.Diagnostics.EventLog" /> has not been set.</span></span>  
  
<span data-ttu-id="6d836-1513">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1513">-or-</span></span> 
<span data-ttu-id="6d836-1514">该方法尝试注册新的事件源，但 <see cref="P:System.Diagnostics.EventLog.MachineName" /> 中的计算机名称无效。</span><span class="sxs-lookup"><span data-stu-id="6d836-1514">The method attempted to register a new event source, but the computer name in <see cref="P:System.Diagnostics.EventLog.MachineName" /> is not valid.</span></span>  
  
<span data-ttu-id="6d836-1515">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1515">-or-</span></span> 
<span data-ttu-id="6d836-1516">已为其他事件日志注册了该源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1516">The source is already registered for a different event log.</span></span>  
  
<span data-ttu-id="6d836-1517">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1517">-or-</span></span> 
 <span data-ttu-id="6d836-1518"><paramref name="instance.InstanceId" /> 小于零或大于 <see cref="F:System.UInt16.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-1518"><paramref name="instance.InstanceId" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="6d836-1519">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1519">-or-</span></span> 
 <span data-ttu-id="6d836-1520"><paramref name="values" /> 超过了 256 个元素。</span><span class="sxs-lookup"><span data-stu-id="6d836-1520"><paramref name="values" /> has more than 256 elements.</span></span>  
  
<span data-ttu-id="6d836-1521">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1521">-or-</span></span> 
<span data-ttu-id="6d836-1522"><paramref name="values" /> 元素中有一个超过了 32766 个字节。</span><span class="sxs-lookup"><span data-stu-id="6d836-1522">One of the <paramref name="values" /> elements is longer than 32766 bytes.</span></span>  
  
<span data-ttu-id="6d836-1523">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1523">-or-</span></span> 
<span data-ttu-id="6d836-1524">此源名称导致注册表项路径的长度超过 254 个字符。</span><span class="sxs-lookup"><span data-stu-id="6d836-1524">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6d836-1525"><paramref name="instance" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-1525"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6d836-1526">事件日志的注册表项未能打开。</span><span class="sxs-lookup"><span data-stu-id="6d836-1526">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="6d836-1527">将事件项写入事件日志时，操作系统报告了一个错误。</span><span class="sxs-lookup"><span data-stu-id="6d836-1527">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="6d836-1528">一个 Windows 错误代码不可用。</span><span class="sxs-lookup"><span data-stu-id="6d836-1528">A Windows error code is not available.</span></span></exception>
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
        <altmember cref="T:System.Diagnostics.EventInstance" />
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="public static void WriteEvent (string source, System.Diagnostics.EventInstance instance, params object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteEvent(string source, class System.Diagnostics.EventInstance instance, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEvent(System.String,System.Diagnostics.EventInstance,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteEvent (source As String, instance As EventInstance, ParamArray values As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteEvent(System::String ^ source, System::Diagnostics::EventInstance ^ instance, ... cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="static member WriteEvent : string * System.Diagnostics.EventInstance * obj[] -&gt; unit" Usage="System.Diagnostics.EventLog.WriteEvent (source, instance, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="instance" Type="System.Diagnostics.EventInstance" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="values" Type="System.Object[]" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="6d836-1529">在指定的计算机上为应用程序注册的事件源的名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-1529">The name of the event source registered for the application on the specified computer.</span></span></param>
        <param name="instance"><span data-ttu-id="6d836-1530">表示本地化事件日志项的 <see cref="T:System.Diagnostics.EventInstance" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="6d836-1530">An <see cref="T:System.Diagnostics.EventInstance" /> instance that represents a localized event log entry.</span></span></param>
        <param name="values"><span data-ttu-id="6d836-1531">要合并到事件日志项的消息文本中的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="6d836-1531">An array of strings to merge into the message text of the event log entry.</span></span></param>
        <summary><span data-ttu-id="6d836-1532">使用指定的已注册事件源写入包含给定事件数据和消息替换字符串的事件日志项。</span><span class="sxs-lookup"><span data-stu-id="6d836-1532">Writes an event log entry with the given event data and message replacement strings, using the specified registered event source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-1533">使用此方法可将本地化项写入事件日志，使用已注册为相应日志的事件源的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1533">Use this method to write a localized entry to the event log, using a source already registered as an event source for the appropriate log.</span></span> <span data-ttu-id="6d836-1534">用资源标识符而不是字符串值指定事件属性。</span><span class="sxs-lookup"><span data-stu-id="6d836-1534">You specify the event properties with resource identifiers rather than string values.</span></span> <span data-ttu-id="6d836-1535">事件查看器使用资源标识符显示源的本地化资源文件中的相应字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1535">The Event Viewer uses the resource identifiers to display the corresponding strings from the localized resource file for the source.</span></span> <span data-ttu-id="6d836-1536">必须先向相应的资源文件注册源，然后才能使用资源标识符编写事件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1536">You must register the source with the corresponding resource file before you write events using resource identifiers.</span></span>  
  
 <span data-ttu-id="6d836-1537">输入 `instance` 实例指定事件消息和属性。</span><span class="sxs-lookup"><span data-stu-id="6d836-1537">The input `instance` instance specifies the event message and properties.</span></span> <span data-ttu-id="6d836-1538">为源消息资源文件中定义的消息设置 `instance` 输入的 <xref:System.Diagnostics.EventInstance.InstanceId%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d836-1538">Set the <xref:System.Diagnostics.EventInstance.InstanceId%2A> of the `instance` input for the defined message in the source message resource file.</span></span> <span data-ttu-id="6d836-1539">您可以选择设置 `instance` 输入的 <xref:System.Diagnostics.EventInstance.CategoryId%2A> 和 <xref:System.Diagnostics.EventInstance.EntryType%2A>，以定义事件项的类别和事件类型。</span><span class="sxs-lookup"><span data-stu-id="6d836-1539">You can optionally set the <xref:System.Diagnostics.EventInstance.CategoryId%2A> and <xref:System.Diagnostics.EventInstance.EntryType%2A> of the `instance` input to define the category and event type of your event entry.</span></span> <span data-ttu-id="6d836-1540">还可以指定要插入到本地化消息文本中的与语言无关的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="6d836-1540">You can also specify an array of language-independent strings to insert into the localized message text.</span></span> <span data-ttu-id="6d836-1541">如果事件消息不包含替换字符串的格式设置占位符，请将 `values` 设置为 `null`。</span><span class="sxs-lookup"><span data-stu-id="6d836-1541">Set `values` to `null` if the event message does not contain formatting placeholders for replacement strings.</span></span>  
  
 <span data-ttu-id="6d836-1542">必须先为事件日志注册指定的源，然后才能使用 <xref:System.Diagnostics.EventLog.WriteEvent%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d836-1542">The specified source must be registered for an event log before using <xref:System.Diagnostics.EventLog.WriteEvent%2A>.</span></span> <span data-ttu-id="6d836-1543">指定的源必须配置为将本地化项写入日志;源必须至少定义了一个消息资源文件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1543">The specified source must be configured for writing localized entries to the log; the source must at minimum have a message resource file defined.</span></span>  
  
 <span data-ttu-id="6d836-1544">在写入包含源的第一个条目之前，必须创建并配置事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1544">You must create and configure the event source before writing the first entry with the source.</span></span> <span data-ttu-id="6d836-1545">在应用程序安装过程中创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1545">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="6d836-1546">这样，操作系统就可以刷新其已注册的事件源的列表及其配置。</span><span class="sxs-lookup"><span data-stu-id="6d836-1546">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="6d836-1547">如果操作系统尚未刷新其事件源列表，而你尝试使用新源写入事件，则写入操作将失败。</span><span class="sxs-lookup"><span data-stu-id="6d836-1547">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="6d836-1548">您可以使用 <xref:System.Diagnostics.EventLogInstaller>或 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法来配置新源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1548">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="6d836-1549">您必须对该计算机具有管理权限才能创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1549">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="6d836-1550">源必须配置为写入本地化项或写入直接字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1550">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="6d836-1551">如果你的应用程序将字符串值直接写入事件日志，请使用 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="6d836-1551">Use the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method if your application writes string values directly to the event log.</span></span>  
  
 <span data-ttu-id="6d836-1552">如果应用程序使用资源标识符和字符串值写入条目，则必须注册两个不同的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1552">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="6d836-1553">例如，将一个源配置为资源文件，然后在 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 方法中使用该源，将使用资源标识符的项写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-1553">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="6d836-1554">然后，创建一个没有资源文件的不同源，并在 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 方法中使用该源，使用该源直接向事件日志写入字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1554">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d836-1555">下面的示例将信息性事件项和警告事件项写入现有的事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-1555">The following example writes an informational event entry and a warning event entry to an existing event log.</span></span> <span data-ttu-id="6d836-1556">使用资源文件中的资源标识符指定事件消息文本。</span><span class="sxs-lookup"><span data-stu-id="6d836-1556">The event message text is specified using a resource identifier in a resource file.</span></span> <span data-ttu-id="6d836-1557">该示例假设已为源注册了相应的资源文件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1557">The example assumes the corresponding resource file has been registered for the source.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#8](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#8)]
 [!code-csharp[EventLog_WriteEvent#8](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#8)]
 [!code-vb[EventLog_WriteEvent#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#8)]  
  
 <span data-ttu-id="6d836-1558">该示例使用资源库 EventLogMsgs 中内置的以下消息文本文件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1558">The example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="6d836-1559">消息文本文件是从中创建消息资源文件的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1559">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="6d836-1560">消息文本文件定义类别、事件消息和参数插入字符串的资源标识符和文本。</span><span class="sxs-lookup"><span data-stu-id="6d836-1560">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d836-1561"><paramref name="source" /> 值是空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="6d836-1561">The <paramref name="source" /> value is an empty string ("").</span></span>  
  
<span data-ttu-id="6d836-1562">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1562">-or-</span></span> 
<span data-ttu-id="6d836-1563"><paramref name="source" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-1563">The <paramref name="source" /> value is <see langword="null" />.</span></span>  
  
<span data-ttu-id="6d836-1564">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1564">-or-</span></span> 
 <span data-ttu-id="6d836-1565"><paramref name="instance.InstanceId" /> 小于零或大于 <see cref="F:System.UInt16.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-1565"><paramref name="instance.InstanceId" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="6d836-1566">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1566">-or-</span></span> 
 <span data-ttu-id="6d836-1567"><paramref name="values" /> 超过了 256 个元素。</span><span class="sxs-lookup"><span data-stu-id="6d836-1567"><paramref name="values" /> has more than 256 elements.</span></span>  
  
<span data-ttu-id="6d836-1568">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1568">-or-</span></span> 
<span data-ttu-id="6d836-1569"><paramref name="values" /> 元素中有一个超过了 32766 个字节。</span><span class="sxs-lookup"><span data-stu-id="6d836-1569">One of the <paramref name="values" /> elements is longer than 32766 bytes.</span></span>  
  
<span data-ttu-id="6d836-1570">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1570">-or-</span></span> 
<span data-ttu-id="6d836-1571">此源名称导致注册表项路径的长度超过 254 个字符。</span><span class="sxs-lookup"><span data-stu-id="6d836-1571">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6d836-1572"><paramref name="instance" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-1572"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6d836-1573">事件日志的注册表项未能打开。</span><span class="sxs-lookup"><span data-stu-id="6d836-1573">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="6d836-1574">将事件项写入事件日志时，操作系统报告了一个错误。</span><span class="sxs-lookup"><span data-stu-id="6d836-1574">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="6d836-1575">一个 Windows 错误代码不可用。</span><span class="sxs-lookup"><span data-stu-id="6d836-1575">A Windows error code is not available.</span></span></exception>
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
        <altmember cref="T:System.Diagnostics.EventInstance" />
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="public static void WriteEvent (string source, System.Diagnostics.EventInstance instance, byte[] data, params object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteEvent(string source, class System.Diagnostics.EventInstance instance, unsigned int8[] data, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLog.WriteEvent(System.String,System.Diagnostics.EventInstance,System.Byte[],System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteEvent (source As String, instance As EventInstance, data As Byte(), ParamArray values As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteEvent(System::String ^ source, System::Diagnostics::EventInstance ^ instance, cli::array &lt;System::Byte&gt; ^ data, ... cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="static member WriteEvent : string * System.Diagnostics.EventInstance * byte[] * obj[] -&gt; unit" Usage="System.Diagnostics.EventLog.WriteEvent (source, instance, data, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="instance" Type="System.Diagnostics.EventInstance" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.Byte[]" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="values" Type="System.Object[]" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="6d836-1576">在指定的计算机上为应用程序注册的事件源的名称。</span><span class="sxs-lookup"><span data-stu-id="6d836-1576">The name of the event source registered for the application on the specified computer.</span></span></param>
        <param name="instance"><span data-ttu-id="6d836-1577">表示本地化事件日志项的 <see cref="T:System.Diagnostics.EventInstance" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="6d836-1577">An <see cref="T:System.Diagnostics.EventInstance" /> instance that represents a localized event log entry.</span></span></param>
        <param name="data"><span data-ttu-id="6d836-1578">包含与此项关联的二进制数据的字节数组。</span><span class="sxs-lookup"><span data-stu-id="6d836-1578">An array of bytes that holds the binary data associated with the entry.</span></span></param>
        <param name="values"><span data-ttu-id="6d836-1579">要合并到事件日志项的消息文本中的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="6d836-1579">An array of strings to merge into the message text of the event log entry.</span></span></param>
        <summary><span data-ttu-id="6d836-1580">使用指定的已注册事件源，写入包含给定的事件数据、消息替换字符串和关联的二进制数据的事件日志项。</span><span class="sxs-lookup"><span data-stu-id="6d836-1580">Writes an event log entry with the given event data, message replacement strings, and associated binary data, and using the specified registered event source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d836-1581">使用此方法，使用已注册为相应日志的事件源的源，将具有附加事件特定数据的本地化项写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-1581">Use this method to write a localized entry with additional event-specific data to the event log, using a source already registered as an event source for the appropriate log.</span></span> <span data-ttu-id="6d836-1582">用资源标识符而不是字符串值指定事件属性。</span><span class="sxs-lookup"><span data-stu-id="6d836-1582">You specify the event properties with resource identifiers rather than string values.</span></span> <span data-ttu-id="6d836-1583">事件查看器使用资源标识符显示源的本地化资源文件中的相应字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1583">The Event Viewer uses the resource identifiers to display the corresponding strings from the localized resource file for the source.</span></span> <span data-ttu-id="6d836-1584">必须先向相应的资源文件注册源，然后才能使用资源标识符编写事件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1584">You must register the source with the corresponding resource file before you write events using resource identifiers.</span></span>  
  
 <span data-ttu-id="6d836-1585">输入 `instance` 实例指定事件消息和属性。</span><span class="sxs-lookup"><span data-stu-id="6d836-1585">The input `instance` instance specifies the event message and properties.</span></span> <span data-ttu-id="6d836-1586">为源消息资源文件中定义的消息设置 `instance` 输入的 <xref:System.Diagnostics.EventInstance.InstanceId%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d836-1586">Set the <xref:System.Diagnostics.EventInstance.InstanceId%2A> of the `instance` input for the defined message in the source message resource file.</span></span> <span data-ttu-id="6d836-1587">您可以选择设置 `instance` 输入的 <xref:System.Diagnostics.EventInstance.CategoryId%2A> 和 <xref:System.Diagnostics.EventInstance.EntryType%2A>，以定义事件项的类别和事件类型。</span><span class="sxs-lookup"><span data-stu-id="6d836-1587">You can optionally set the <xref:System.Diagnostics.EventInstance.CategoryId%2A> and <xref:System.Diagnostics.EventInstance.EntryType%2A> of the `instance` input to define the category and event type of your event entry.</span></span> <span data-ttu-id="6d836-1588">还可以指定要插入到本地化消息文本中的与语言无关的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="6d836-1588">You can also specify an array of language-independent strings to insert into the localized message text.</span></span> <span data-ttu-id="6d836-1589">如果事件消息不包含替换字符串的格式设置占位符，请将 `values` 设置为 `null`。</span><span class="sxs-lookup"><span data-stu-id="6d836-1589">Set `values` to `null` if the event message does not contain formatting placeholders for replacement strings.</span></span>  
  
 <span data-ttu-id="6d836-1590">如果有必要提供事件的更多详细信息，请指定包含事件的二进制数据。</span><span class="sxs-lookup"><span data-stu-id="6d836-1590">Specify binary data with an event when it is necessary to provide additional details for the event.</span></span> <span data-ttu-id="6d836-1591">例如，使用 `data` 参数来包含特定错误的相关信息。</span><span class="sxs-lookup"><span data-stu-id="6d836-1591">For example, use the `data` parameter to include information on a specific error.</span></span> <span data-ttu-id="6d836-1592">事件查看器不解释关联的事件数据;它以组合的十六进制和文本格式显示数据。</span><span class="sxs-lookup"><span data-stu-id="6d836-1592">The Event Viewer does not interpret the associated event data; it displays the data in a combined hexadecimal and text format.</span></span> <span data-ttu-id="6d836-1593">谨慎使用特定于事件的数据;仅当你确定它将有用时才包含它。</span><span class="sxs-lookup"><span data-stu-id="6d836-1593">Use event-specific data sparingly; include it only if you are sure it will be useful.</span></span> <span data-ttu-id="6d836-1594">你还可以使用特定于事件的数据存储应用程序可以独立于事件查看器处理的信息。</span><span class="sxs-lookup"><span data-stu-id="6d836-1594">You can also use event-specific data to store information the application can process independently of the Event Viewer.</span></span> <span data-ttu-id="6d836-1595">例如，您可以专门为您的事件编写查看器，或编写扫描事件日志的程序，并创建包含特定于事件的数据的信息的报表。</span><span class="sxs-lookup"><span data-stu-id="6d836-1595">For example, you could write a viewer specifically for your events, or write a program that scans the event log and creates reports that include information from the event-specific data.</span></span>  
  
 <span data-ttu-id="6d836-1596">必须先为事件日志注册指定的源，然后才能使用 <xref:System.Diagnostics.EventLog.WriteEvent%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d836-1596">The specified source must be registered for an event log before using <xref:System.Diagnostics.EventLog.WriteEvent%2A>.</span></span> <span data-ttu-id="6d836-1597">指定的源必须配置为将本地化项写入日志;源必须至少定义了一个消息资源文件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1597">The specified source must be configured for writing localized entries to the log; the source must at minimum have a message resource file defined.</span></span>  
  
 <span data-ttu-id="6d836-1598">在写入包含源的第一个条目之前，必须创建并配置事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1598">You must create and configure the event source before writing the first entry with the source.</span></span> <span data-ttu-id="6d836-1599">在应用程序安装过程中创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1599">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="6d836-1600">这样，操作系统就可以刷新其已注册的事件源的列表及其配置。</span><span class="sxs-lookup"><span data-stu-id="6d836-1600">This allows time for the operating system to refresh its list of registered event sources and their configuration.</span></span> <span data-ttu-id="6d836-1601">如果操作系统尚未刷新其事件源列表，而你尝试使用新源写入事件，则写入操作将失败。</span><span class="sxs-lookup"><span data-stu-id="6d836-1601">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="6d836-1602">您可以使用 <xref:System.Diagnostics.EventLogInstaller>或 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法来配置新源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1602">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="6d836-1603">您必须对该计算机具有管理权限才能创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1603">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="6d836-1604">源必须配置为写入本地化项或写入直接字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1604">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="6d836-1605">如果你的应用程序将字符串值直接写入事件日志，请使用 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="6d836-1605">Use the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method if your application writes string values directly to the event log.</span></span>  
  
 <span data-ttu-id="6d836-1606">如果应用程序使用资源标识符和字符串值写入条目，则必须注册两个不同的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1606">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="6d836-1607">例如，将一个源配置为资源文件，然后在 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 方法中使用该源，将使用资源标识符的项写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-1607">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="6d836-1608">然后，创建一个没有资源文件的不同源，并在 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 方法中使用该源，使用该源直接向事件日志写入字符串。</span><span class="sxs-lookup"><span data-stu-id="6d836-1608">Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d836-1609">下面的示例将信息性事件项和警告事件项写入现有的事件日志。</span><span class="sxs-lookup"><span data-stu-id="6d836-1609">The following example writes an informational event entry and a warning event entry to an existing event log.</span></span> <span data-ttu-id="6d836-1610">使用资源文件中的资源标识符指定事件消息文本。</span><span class="sxs-lookup"><span data-stu-id="6d836-1610">The event message text is specified using a resource identifier in a resource file.</span></span> <span data-ttu-id="6d836-1611">该示例假设已为源注册了相应的资源文件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1611">The example assumes the corresponding resource file has been registered for the source.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#8](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#8)]
 [!code-csharp[EventLog_WriteEvent#8](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#8)]
 [!code-vb[EventLog_WriteEvent#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#8)]  
  
 <span data-ttu-id="6d836-1612">该示例使用资源库 EventLogMsgs 中内置的以下消息文本文件。</span><span class="sxs-lookup"><span data-stu-id="6d836-1612">The example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="6d836-1613">消息文本文件是从中创建消息资源文件的源。</span><span class="sxs-lookup"><span data-stu-id="6d836-1613">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="6d836-1614">消息文本文件定义类别、事件消息和参数插入字符串的资源标识符和文本。</span><span class="sxs-lookup"><span data-stu-id="6d836-1614">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d836-1615"><paramref name="source" /> 值是空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="6d836-1615">The <paramref name="source" /> value is an empty string ("").</span></span>  
  
<span data-ttu-id="6d836-1616">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1616">-or-</span></span> 
<span data-ttu-id="6d836-1617"><paramref name="source" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-1617">The <paramref name="source" /> value is <see langword="null" />.</span></span>  
  
<span data-ttu-id="6d836-1618">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1618">-or-</span></span> 
 <span data-ttu-id="6d836-1619"><paramref name="instance.InstanceId" /> 小于零或大于 <see cref="F:System.UInt16.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-1619"><paramref name="instance.InstanceId" /> is less than zero or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
<span data-ttu-id="6d836-1620">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1620">-or-</span></span> 
 <span data-ttu-id="6d836-1621"><paramref name="values" /> 超过了 256 个元素。</span><span class="sxs-lookup"><span data-stu-id="6d836-1621"><paramref name="values" /> has more than 256 elements.</span></span>  
  
<span data-ttu-id="6d836-1622">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1622">-or-</span></span> 
<span data-ttu-id="6d836-1623"><paramref name="values" /> 元素中有一个超过了 32766 个字节。</span><span class="sxs-lookup"><span data-stu-id="6d836-1623">One of the <paramref name="values" /> elements is longer than 32766 bytes.</span></span>  
  
<span data-ttu-id="6d836-1624">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6d836-1624">-or-</span></span> 
<span data-ttu-id="6d836-1625">此源名称导致注册表项路径的长度超过 254 个字符。</span><span class="sxs-lookup"><span data-stu-id="6d836-1625">The source name results in a registry key path longer than 254 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6d836-1626"><paramref name="instance" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6d836-1626"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6d836-1627">事件日志的注册表项未能打开。</span><span class="sxs-lookup"><span data-stu-id="6d836-1627">The registry key for the event log could not be opened.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="6d836-1628">将事件项写入事件日志时，操作系统报告了一个错误。</span><span class="sxs-lookup"><span data-stu-id="6d836-1628">The operating system reported an error when writing the event entry to the event log.</span></span> <span data-ttu-id="6d836-1629">一个 Windows 错误代码不可用。</span><span class="sxs-lookup"><span data-stu-id="6d836-1629">A Windows error code is not available.</span></span></exception>
        <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
        <altmember cref="T:System.Diagnostics.EventInstance" />
      </Docs>
    </Member>
  </Members>
</Type>
