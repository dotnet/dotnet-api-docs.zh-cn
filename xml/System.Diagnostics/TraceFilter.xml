<Type Name="TraceFilter" FullName="System.Diagnostics.TraceFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="32c04e9328a9b063a738fc7c7816806640690325" /><Meta Name="ms.sourcegitcommit" Value="943c8cdbe5b47c6c296a6f4b73038bbd43da0dd2" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/12/2021" /><Meta Name="ms.locfileid" Value="100302972" /></Metadata><TypeSignature Language="C#" Value="public abstract class TraceFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TraceFilter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.TraceFilter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TraceFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceFilter abstract" />
  <TypeSignature Language="F#" Value="type TraceFilter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Diagnostics.TraceSource" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="824b7-101">为跟踪筛选器实现提供基类。</span><span class="sxs-lookup"><span data-stu-id="824b7-101">Provides the base class for trace filter implementations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="824b7-102">跟踪侦听器可以使用跟踪筛选器来提供除跟踪开关提供的额外筛选层。</span><span class="sxs-lookup"><span data-stu-id="824b7-102">Trace filters can be used by trace listeners to provide an extra layer of filtering beyond that provided by trace switches.</span></span> <span data-ttu-id="824b7-103">跟踪侦听器的跟踪筛选器可在侦听器的属性中找到 <xref:System.Diagnostics.TraceListener.Filter%2A> 。</span><span class="sxs-lookup"><span data-stu-id="824b7-103">The trace filter for a trace listener can be found in the listener's <xref:System.Diagnostics.TraceListener.Filter%2A> property.</span></span> <span data-ttu-id="824b7-104">跟踪开关确定是否要将跟踪发送到跟踪侦听器。</span><span class="sxs-lookup"><span data-stu-id="824b7-104">Trace switches determine if a trace is to be sent to the trace listeners.</span></span> <span data-ttu-id="824b7-105">跟踪筛选器允许各个跟踪侦听器确定是否将跟踪写入关联的输出介质。</span><span class="sxs-lookup"><span data-stu-id="824b7-105">Trace filters allow the individual trace listeners to determine whether or not the trace is to be written to the associated output medium.</span></span> <span data-ttu-id="824b7-106">例如，根据每个跟踪筛选器的确定，跟踪可能由写入控制台 <xref:System.Diagnostics.ConsoleTraceListener> ，而不是由写入事件日志 <xref:System.Diagnostics.EventLogTraceListener> 。</span><span class="sxs-lookup"><span data-stu-id="824b7-106">For example, as determined by each trace filter, a trace may be written to the console by a <xref:System.Diagnostics.ConsoleTraceListener>, but not to the event log by a <xref:System.Diagnostics.EventLogTraceListener>.</span></span>  
  
 <span data-ttu-id="824b7-107">继承自类的筛选器 <xref:System.Diagnostics.TraceFilter> 可由继承自类的跟踪侦听器用于 <xref:System.Diagnostics.TraceListener> 执行正在跟踪的事件筛选。</span><span class="sxs-lookup"><span data-stu-id="824b7-107">Filters that inherit from the <xref:System.Diagnostics.TraceFilter> class can be used by trace listeners that inherit from the <xref:System.Diagnostics.TraceListener> class to perform filtering of events being traced.</span></span> <span data-ttu-id="824b7-108"><xref:System.Diagnostics.TraceFilter> 包含一个方法， <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> 该方法采用事件数据并返回一个指示是否应跟踪事件的标志。</span><span class="sxs-lookup"><span data-stu-id="824b7-108"><xref:System.Diagnostics.TraceFilter> contains a single method, <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A>, which takes event data and returns a flag indicating whether the event should be traced.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TraceFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceFilter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TraceFilter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="824b7-109">初始化 <see cref="T:System.Diagnostics.TraceFilter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="824b7-109">Initializes a new instance of the <see cref="T:System.Diagnostics.TraceFilter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldTrace">
      <MemberSignature Language="C#" Value="public abstract bool ShouldTrace (System.Diagnostics.TraceEventCache? cache, string source, System.Diagnostics.TraceEventType eventType, int id, string? formatOrMessage, object?[]? args, object? data1, object?[]? data);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldTrace(class System.Diagnostics.TraceEventCache cache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string formatOrMessage, object[] args, object data1, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ShouldTrace (cache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, formatOrMessage As String, args As Object(), data1 As Object, data As Object()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool ShouldTrace(System::Diagnostics::TraceEventCache ^ cache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ formatOrMessage, cli::array &lt;System::Object ^&gt; ^ args, System::Object ^ data1, cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="abstract member ShouldTrace : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] * obj * obj[] -&gt; bool" Usage="traceFilter.ShouldTrace (cache, source, eventType, id, formatOrMessage, args, data1, data)" />
      <MemberSignature Language="C#" Value="public abstract bool ShouldTrace (System.Diagnostics.TraceEventCache cache, string source, System.Diagnostics.TraceEventType eventType, int id, string formatOrMessage, object[] args, object data1, object[] data);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="formatOrMessage" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="data1" Type="System.Object" />
        <Parameter Name="data" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="cache"><span data-ttu-id="824b7-110">包含跟踪事件的信息的 <see cref="T:System.Diagnostics.TraceEventCache" />。</span><span class="sxs-lookup"><span data-stu-id="824b7-110">The <see cref="T:System.Diagnostics.TraceEventCache" /> that contains information for the trace event.</span></span></param>
        <param name="source"><span data-ttu-id="824b7-111">源的名称。</span><span class="sxs-lookup"><span data-stu-id="824b7-111">The name of the source.</span></span></param>
        <param name="eventType"><span data-ttu-id="824b7-112"><see cref="T:System.Diagnostics.TraceEventType" /> 值之一，指定引发跟踪的事件类型。</span><span class="sxs-lookup"><span data-stu-id="824b7-112">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span></span></param>
        <param name="id"><span data-ttu-id="824b7-113">跟踪标识符编号。</span><span class="sxs-lookup"><span data-stu-id="824b7-113">A trace identifier number.</span></span></param>
        <param name="formatOrMessage"><span data-ttu-id="824b7-114">写入由 <paramref name="args" /> 参数指定的变量数组时使用的格式，或者要写入的消息。</span><span class="sxs-lookup"><span data-stu-id="824b7-114">Either the format to use for writing an array of arguments specified by the <paramref name="args" /> parameter, or a message to write.</span></span></param>
        <param name="args"><span data-ttu-id="824b7-115">参数对象的数组。</span><span class="sxs-lookup"><span data-stu-id="824b7-115">An array of argument objects.</span></span></param>
        <param name="data1"><span data-ttu-id="824b7-116">跟踪数据对象。</span><span class="sxs-lookup"><span data-stu-id="824b7-116">A trace data object.</span></span></param>
        <param name="data"><span data-ttu-id="824b7-117">跟踪数据对象的数组。</span><span class="sxs-lookup"><span data-stu-id="824b7-117">An array of trace data objects.</span></span></param>
        <summary><span data-ttu-id="824b7-118">在派生的类中进行重写时，确定跟踪侦听器是否应跟踪事件。</span><span class="sxs-lookup"><span data-stu-id="824b7-118">When overridden in a derived class, determines whether the trace listener should trace the event.</span></span></summary>
        <returns><span data-ttu-id="824b7-119">若要跟踪指定的事件，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="824b7-119"><see langword="true" /> to trace the specified event; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="824b7-120">下面的代码示例演示如何重写 <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> 方法，以指示当事件的跟踪事件类型等于时应进行跟踪 <xref:System.Diagnostics.TraceEventType.Error?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="824b7-120">The following code example shows how to override the <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> method to indicate tracing should occur when the trace event type of the event is equal to <xref:System.Diagnostics.TraceEventType.Error?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[System.Diagnostics.TraceFilter#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.diagnostics.tracefilter/cpp/source.cpp#2)]
 [!code-csharp[System.Diagnostics.TraceFilter#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.diagnostics.tracefilter/cs/source.cs#2)]
 [!code-vb[System.Diagnostics.TraceFilter#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.diagnostics.tracefilter/vb/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="824b7-121"><see langword="true" />如果应跟踪传递的参数指定的事件，则此方法的实现应返回。</span><span class="sxs-lookup"><span data-stu-id="824b7-121">Implementations of this method should return <see langword="true" /> if the event specified by the passed parameters should be traced.</span></span> <span data-ttu-id="824b7-122">否则，该方法应返回 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="824b7-122">Otherwise the method should return <see langword="false" />.</span></span> <span data-ttu-id="824b7-123">例如，如果跟踪事件类型级别设置为或更高，则仅允许将错误事件传递到侦听器的筛选器应检查 <paramref name="eventType" /> 参数，并在 <see langword="true" /> 跟踪事件类型级别设置为 <see cref="F:System.Diagnostics.TraceEventType.Error" /> 或更高级别时返回; 否则返回 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="824b7-123">For example, a filter that allows only error events to pass through to the listener should inspect the <paramref name="eventType" /> parameter and return <see langword="true" /> if the trace event type level is set to <see cref="F:System.Diagnostics.TraceEventType.Error" /> or greater; otherwise, it should return <see langword="false" />.</span></span>  
  
<span data-ttu-id="824b7-124">方法的实现应准备好处理 <see langword="null" /> 以下参数： <paramref name="args" /> 、 <paramref name="data1" /> 、 <paramref name="data" /> 、 <paramref name="formatOrMessage" /> 和 <paramref name="cache" /> 。</span><span class="sxs-lookup"><span data-stu-id="824b7-124">Implementations of the method should be prepared to handle <see langword="null" /> in the following parameters: <paramref name="args" />, <paramref name="data1" />, <paramref name="data" />, <paramref name="formatOrMessage" />, and <paramref name="cache" />.</span></span> <span data-ttu-id="824b7-125">如果参数值为 <see langword="null" /> ，则参数不是事件的一部分。</span><span class="sxs-lookup"><span data-stu-id="824b7-125">If the parameter value is <see langword="null" />, the parameter is not part of the event.</span></span> <span data-ttu-id="824b7-126">例如，如果 <paramref name="args" /> 参数为 <see langword="null" /> ，则表示该事件没有任何参数。</span><span class="sxs-lookup"><span data-stu-id="824b7-126">For example, if the <paramref name="args" /> parameter is <see langword="null" />, it means that the event does not have any arguments.</span></span> <span data-ttu-id="824b7-127">如果 <paramref name="data" /> 参数为 <see langword="null" /> ，则有一个或两个数据对象。</span><span class="sxs-lookup"><span data-stu-id="824b7-127">If the <paramref name="data" /> parameter is <see langword="null" />, then there are either one or no data objects.</span></span> <span data-ttu-id="824b7-128">如果有一个数据对象，将在参数中找到该对象 <paramref name="data1" /> 。</span><span class="sxs-lookup"><span data-stu-id="824b7-128">If there is one data object, it will be found in the <paramref name="data1" /> parameter.</span></span> <span data-ttu-id="824b7-129">单个数据对象和数据对象数组之间区分的原因是为了提高性能。</span><span class="sxs-lookup"><span data-stu-id="824b7-129">The reason for the distinction between a single data object and an array of data objects is for performance.</span></span> <span data-ttu-id="824b7-130">如果只跟踪一个对象（通常是这样），则没有理由创建对象数组。</span><span class="sxs-lookup"><span data-stu-id="824b7-130">There is no reason to create an object array if only one object is traced, as is normally the case.</span></span> <span data-ttu-id="824b7-131">如果 <paramref name="data" /> 参数不为 <see langword="null" /> ，则 <paramref name="data1" /> 参数也不能为 <see langword="null" /> 。</span><span class="sxs-lookup"><span data-stu-id="824b7-131">If the <paramref name="data" /> parameter is not <see langword="null" />, the <paramref name="data1" /> parameter must also not be <see langword="null" />.</span></span>  
  
<span data-ttu-id="824b7-132">确保该 <paramref name="source" /> 参数不为 <see langword="null" /> ，并且不是空字符串 ( "" ) 。</span><span class="sxs-lookup"><span data-stu-id="824b7-132">It is guaranteed that the <paramref name="source" /> parameter is not <see langword="null" /> and not an empty string ("").</span></span>  
  
<span data-ttu-id="824b7-133">方法的实现可选择性地引发以下异常：</span><span class="sxs-lookup"><span data-stu-id="824b7-133">Implementations of the method can optionally throw the following exceptions:</span></span> <span data-ttu-id="824b7-134">
-   <see cref="T:System.ArgumentNullException" /> 如果 <paramref name="source" /> 为 <see langword="null" /> 。</span><span class="sxs-lookup"><span data-stu-id="824b7-134">
-   <see cref="T:System.ArgumentNullException" /> if <paramref name="source" /> is <see langword="null" />.</span></span>  
  <span data-ttu-id="824b7-135">
-   <see cref="T:System.ArgumentException" /> 如果不 <paramref name="eventType" /> 是 <see cref="T:System.Diagnostics.TraceEventType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="824b7-135">
-   <see cref="T:System.ArgumentException" /> if <paramref name="eventType" /> is not one of the <see cref="T:System.Diagnostics.TraceEventType" /> values.</span></span>  
  
<span data-ttu-id="824b7-136">-异常与方法的实现无关。</span><span class="sxs-lookup"><span data-stu-id="824b7-136">-   Exceptions unrelated to the implementation of the method.</span></span> <span data-ttu-id="824b7-137">例如， <see cref="T:System.Threading.ThreadAbortException" /> 。</span><span class="sxs-lookup"><span data-stu-id="824b7-137">For example, a <see cref="T:System.Threading.ThreadAbortException" />.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>
