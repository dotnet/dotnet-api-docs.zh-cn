<Type Name="DataReceivedEventArgs" FullName="System.Diagnostics.DataReceivedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b70df5f73321b354cf71bd6ebed6f377d90d1af2" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89728309" /></Metadata><TypeSignature Language="C#" Value="public class DataReceivedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataReceivedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.DataReceivedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DataReceivedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataReceivedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DataReceivedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Process</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Diagnostics.Process" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="fa0b0-101">提供有关 <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> 和 <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> 事件的数据。</span><span class="sxs-lookup"><span data-stu-id="fa0b0-101">Provides data for the <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> and <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa0b0-102">若要异步收集进程的重定向 <xref:System.Diagnostics.Process.StandardOutput%2A> 或 <xref:System.Diagnostics.Process.StandardError%2A> 流输出，必须创建处理重定向流输出事件的方法。</span><span class="sxs-lookup"><span data-stu-id="fa0b0-102">To asynchronously collect the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> or <xref:System.Diagnostics.Process.StandardError%2A> stream output of a process, you must create a method that handles the redirected stream output events.</span></span> <span data-ttu-id="fa0b0-103">当进程写入重定向流时，将调用事件处理程序方法。</span><span class="sxs-lookup"><span data-stu-id="fa0b0-103">The event-handler method is called when the process writes to the redirected stream.</span></span> <span data-ttu-id="fa0b0-104">事件委托通过实例调用事件处理程序 <xref:System.Diagnostics.DataReceivedEventArgs> 。</span><span class="sxs-lookup"><span data-stu-id="fa0b0-104">The event delegate calls your event handler with an instance of <xref:System.Diagnostics.DataReceivedEventArgs>.</span></span> <span data-ttu-id="fa0b0-105"><xref:System.Diagnostics.DataReceivedEventArgs.Data%2A>属性包含进程写入重定向流中的文本行。</span><span class="sxs-lookup"><span data-stu-id="fa0b0-105">The <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property contains the text line that the process wrote to the redirected stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa0b0-106">下面的代码示例演示如何在命令的重定向流上执行异步读取操作 <xref:System.Diagnostics.Process.StandardOutput%2A> `sort` 。</span><span class="sxs-lookup"><span data-stu-id="fa0b0-106">The following code example illustrates how to perform asynchronous read operations on the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream of the `sort` command.</span></span> <span data-ttu-id="fa0b0-107">`sort`命令是一种控制台应用程序，用于读取和排序文本输入。</span><span class="sxs-lookup"><span data-stu-id="fa0b0-107">The `sort` command is a console application that reads and sorts text input.</span></span>  
  
 <span data-ttu-id="fa0b0-108">该示例创建 `SortOutputHandler` 事件处理程序的事件委托，并将其与事件相关联 <xref:System.Diagnostics.Process.OutputDataReceived> 。</span><span class="sxs-lookup"><span data-stu-id="fa0b0-108">The example creates an event delegate for the `SortOutputHandler` event handler and associates it with the <xref:System.Diagnostics.Process.OutputDataReceived> event.</span></span> <span data-ttu-id="fa0b0-109">事件处理程序接收重定向流中的文本行 <xref:System.Diagnostics.Process.StandardOutput%2A> ，设置文本的格式，并将文本写入屏幕。</span><span class="sxs-lookup"><span data-stu-id="fa0b0-109">The event handler receives text lines from the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream, formats the text, and writes the text to the screen.</span></span>  
  
 [!code-cpp[Process_AsyncStreams#1](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/sort_async.cpp#1)]
 [!code-csharp[Process_AsyncStreams#1](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/sort_async.cs#1)]
 [!code-vb[Process_AsyncStreams#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/sort_async.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.DataReceivedEventHandler" />
    <altmember cref="E:System.Diagnostics.Process.OutputDataReceived" />
    <altmember cref="E:System.Diagnostics.Process.ErrorDataReceived" />
    <altmember cref="T:System.Diagnostics.Process" />
  </Docs>
  <Members>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public string Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Data" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.DataReceivedEventArgs.Data" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Data As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Data { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Data : string" Usage="System.Diagnostics.DataReceivedEventArgs.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa0b0-110">获取写入到重定向 <see cref="T:System.Diagnostics.Process" /> 输出流的字符行。</span><span class="sxs-lookup"><span data-stu-id="fa0b0-110">Gets the line of characters that was written to a redirected <see cref="T:System.Diagnostics.Process" /> output stream.</span></span></summary>
        <value><span data-ttu-id="fa0b0-111">由关联的 <see cref="T:System.Diagnostics.Process" /> 写入到其重定向 <see cref="P:System.Diagnostics.Process.StandardOutput" /> 或 <see cref="P:System.Diagnostics.Process.StandardError" /> 流中的行。</span><span class="sxs-lookup"><span data-stu-id="fa0b0-111">The line that was written by an associated <see cref="T:System.Diagnostics.Process" /> to its redirected <see cref="P:System.Diagnostics.Process.StandardOutput" /> or <see cref="P:System.Diagnostics.Process.StandardError" /> stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa0b0-112">当你将或的流重定向 <xref:System.Diagnostics.Process.StandardOutput%2A> <xref:System.Diagnostics.Process.StandardError%2A> <xref:System.Diagnostics.Process> 到事件处理程序时，每次该进程将行写入重定向流时都会引发事件。</span><span class="sxs-lookup"><span data-stu-id="fa0b0-112">When you redirect the <xref:System.Diagnostics.Process.StandardOutput%2A> or <xref:System.Diagnostics.Process.StandardError%2A> stream of a <xref:System.Diagnostics.Process> to your event handler, an event is raised each time the process writes a line to the redirected stream.</span></span> <span data-ttu-id="fa0b0-113"><xref:System.Diagnostics.DataReceivedEventArgs.Data%2A>属性是 <xref:System.Diagnostics.Process> 写入重定向的输出流的行。</span><span class="sxs-lookup"><span data-stu-id="fa0b0-113">The <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property is the line that the <xref:System.Diagnostics.Process> wrote to the redirected output stream.</span></span> <span data-ttu-id="fa0b0-114">事件处理程序可以使用 <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> 属性来筛选进程输出或将输出写入备用位置。</span><span class="sxs-lookup"><span data-stu-id="fa0b0-114">Your event handler can use the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property to filter process output or write output to an alternate location.</span></span> <span data-ttu-id="fa0b0-115">例如，您可以创建一个事件处理程序，用于将所有错误输出行存储到指定的错误日志文件中。</span><span class="sxs-lookup"><span data-stu-id="fa0b0-115">For example, you might create an event handler that stores all error output lines into a designated error log file.</span></span>  
  
 <span data-ttu-id="fa0b0-116">行定义为一个字符序列，后跟一个换行符 ( "\n" ) 或后跟换行符的回车符 ( "\r\n" ) 。</span><span class="sxs-lookup"><span data-stu-id="fa0b0-116">A line is defined as a sequence of characters followed by a line feed ("\n") or a carriage return immediately followed by a line feed ("\r\n").</span></span> <span data-ttu-id="fa0b0-117">使用默认系统 ANSI 代码页对行字符进行编码。</span><span class="sxs-lookup"><span data-stu-id="fa0b0-117">The line characters are encoded using the default system ANSI code page.</span></span> <span data-ttu-id="fa0b0-118"><xref:System.Diagnostics.DataReceivedEventArgs.Data%2A>属性不包括终止回车符或换行符。</span><span class="sxs-lookup"><span data-stu-id="fa0b0-118">The <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property does not include the terminating carriage return or line feed.</span></span>  
  
 <span data-ttu-id="fa0b0-119">当重定向的流关闭时，会将空行发送到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="fa0b0-119">When the redirected stream is closed, a null line is sent to the event handler.</span></span> <span data-ttu-id="fa0b0-120">请确保事件处理程序在 <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> 访问属性之前对其进行了适当的检查。</span><span class="sxs-lookup"><span data-stu-id="fa0b0-120">Ensure your event handler checks the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property appropriately before accessing it.</span></span> <span data-ttu-id="fa0b0-121">例如，可以使用静态方法 <xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType> 来验证 <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> 事件处理程序中的属性。</span><span class="sxs-lookup"><span data-stu-id="fa0b0-121">For example, you can use the static method <xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType> to validate the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property in your event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa0b0-122">下面的代码示例演示与事件关联的简单事件处理程序 <xref:System.Diagnostics.Process.OutputDataReceived> 。</span><span class="sxs-lookup"><span data-stu-id="fa0b0-122">The following code example illustrates a simple event handler associated with the <xref:System.Diagnostics.Process.OutputDataReceived> event.</span></span> <span data-ttu-id="fa0b0-123">事件处理程序接收重定向流中的文本行 <xref:System.Diagnostics.Process.StandardOutput%2A> ，设置文本的格式，并将文本写入屏幕。</span><span class="sxs-lookup"><span data-stu-id="fa0b0-123">The event handler receives text lines from the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream, formats the text, and writes the text to the screen.</span></span>  
  
 [!code-cpp[Process_AsyncStreams#4](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/datareceivedevent.cpp#4)]
 [!code-csharp[Process_AsyncStreams#4](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/datareceivedevent.cs#4)]
 [!code-vb[Process_AsyncStreams#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/datareceivedevent.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
