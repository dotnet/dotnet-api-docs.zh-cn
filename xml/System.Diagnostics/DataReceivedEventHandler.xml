<Type Name="DataReceivedEventHandler" FullName="System.Diagnostics.DataReceivedEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="227d91df9ef7fd392e3cd53aa639d4c84d5a502c" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89775180" /></Metadata><TypeSignature Language="C#" Value="public delegate void DataReceivedEventHandler(object sender, DataReceivedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DataReceivedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.DataReceivedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub DataReceivedEventHandler(sender As Object, e As DataReceivedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void DataReceivedEventHandler(System::Object ^ sender, DataReceivedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type DataReceivedEventHandler = delegate of obj * DataReceivedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Process</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Diagnostics.Process" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Diagnostics.DataReceivedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="6b7cb-101">事件源。</span><span class="sxs-lookup"><span data-stu-id="6b7cb-101">The source of the event.</span></span></param>
    <param name="e"><span data-ttu-id="6b7cb-102">包含事件数据的 <see cref="T:System.Diagnostics.DataReceivedEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="6b7cb-102">A <see cref="T:System.Diagnostics.DataReceivedEventArgs" /> that contains the event data.</span></span></param>
    <summary><span data-ttu-id="6b7cb-103">表示将处理 <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> 的 <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> 事件或 <see cref="T:System.Diagnostics.Process" /> 事件的方法。</span><span class="sxs-lookup"><span data-stu-id="6b7cb-103">Represents the method that will handle the <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> event or <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> event of a <see cref="T:System.Diagnostics.Process" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b7cb-104">创建 <xref:System.Diagnostics.DataReceivedEventHandler> 委托时，需要标识将处理该事件的方法。</span><span class="sxs-lookup"><span data-stu-id="6b7cb-104">When you create a <xref:System.Diagnostics.DataReceivedEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="6b7cb-105">若要将事件与事件处理程序关联，请将该委托的一个实例添加到事件中。</span><span class="sxs-lookup"><span data-stu-id="6b7cb-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="6b7cb-106">除非移除了该委托，否则每当发生该事件时就会调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="6b7cb-106">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="6b7cb-107">有关事件处理程序委托的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="6b7cb-107">For more information about event-handler delegates, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="6b7cb-108">若要异步收集进程的重定向 <xref:System.Diagnostics.Process.StandardOutput%2A> 或 <xref:System.Diagnostics.Process.StandardError%2A> 流输出，请将事件处理程序添加到 <xref:System.Diagnostics.Process.OutputDataReceived> 或 <xref:System.Diagnostics.Process.ErrorDataReceived> 事件。</span><span class="sxs-lookup"><span data-stu-id="6b7cb-108">To asynchronously collect the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> or <xref:System.Diagnostics.Process.StandardError%2A> stream output of a process, add your event handler to the <xref:System.Diagnostics.Process.OutputDataReceived> or <xref:System.Diagnostics.Process.ErrorDataReceived> event.</span></span> <span data-ttu-id="6b7cb-109">每次进程将行写入相应的重定向流时均会引发这些事件。</span><span class="sxs-lookup"><span data-stu-id="6b7cb-109">These events are raised each time the process writes a line to the corresponding redirected stream.</span></span> <span data-ttu-id="6b7cb-110">当重定向的流关闭时，会将空行发送到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="6b7cb-110">When the redirected stream is closed, a null line is sent to the event handler.</span></span> <span data-ttu-id="6b7cb-111">请确保事件处理程序在访问属性之前检查此条件 <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> 。</span><span class="sxs-lookup"><span data-stu-id="6b7cb-111">Ensure that your event handler checks for this condition before accessing the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property.</span></span> <span data-ttu-id="6b7cb-112">例如，可以使用 `static` 方法 <xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType> 来验证 <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> 事件处理程序中的属性。</span><span class="sxs-lookup"><span data-stu-id="6b7cb-112">For example, you can use the `static` method <xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType> to validate the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property in your event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b7cb-113">下面的代码示例演示如何对 sort 命令的重定向流执行异步读取操作 <xref:System.Diagnostics.Process.StandardOutput%2A> 。 **sort**</span><span class="sxs-lookup"><span data-stu-id="6b7cb-113">The following code example illustrates how to perform asynchronous read operations on the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream of the **sort** command.</span></span> <span data-ttu-id="6b7cb-114">**Sort**命令是一种控制台应用程序，用于读取和排序文本输入。</span><span class="sxs-lookup"><span data-stu-id="6b7cb-114">The **sort** command is a console application that reads and sorts text input.</span></span>  
  
 <span data-ttu-id="6b7cb-115">该示例创建 <xref:System.Diagnostics.DataReceivedEventHandler> `SortOutputHandler` 事件处理程序的委托并将委托与 <xref:System.Diagnostics.Process.OutputDataReceived> 事件关联。</span><span class="sxs-lookup"><span data-stu-id="6b7cb-115">The example creates a <xref:System.Diagnostics.DataReceivedEventHandler> delegate for the `SortOutputHandler` event handler and associates the delegate with the <xref:System.Diagnostics.Process.OutputDataReceived> event.</span></span> <span data-ttu-id="6b7cb-116">事件处理程序接收重定向流中的文本行 <xref:System.Diagnostics.Process.StandardOutput%2A> ，设置文本的格式，并将文本写入屏幕。</span><span class="sxs-lookup"><span data-stu-id="6b7cb-116">The event handler receives text lines from the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream, formats the text, and writes the text to the screen.</span></span>  
  
 [!code-cpp[Process_AsyncStreams#1](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/sort_async.cpp#1)]
 [!code-csharp[Process_AsyncStreams#1](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/sort_async.cs#1)]
 [!code-vb[Process_AsyncStreams#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/sort_async.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.DataReceivedEventArgs" />
    <altmember cref="E:System.Diagnostics.Process.OutputDataReceived" />
    <altmember cref="E:System.Diagnostics.Process.ErrorDataReceived" />
    <altmember cref="T:System.Diagnostics.Process" />
  </Docs>
</Type>
