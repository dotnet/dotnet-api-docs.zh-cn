<Type Name="ActivityListener" FullName="System.Diagnostics.ActivityListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b9a7a2c761c8b8965fe8716cd290e29ad2fc6eab" /><Meta Name="ms.sourcegitcommit" Value="0bd9d099f2522ef14c6f48a8ea5f2c0650df0f6f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/15/2020" /><Meta Name="ms.locfileid" Value="92082799" /></Metadata><TypeSignature Language="C#" Value="public sealed class ActivityListener : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ActivityListener extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.ActivityListener" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ActivityListener&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActivityListener sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type ActivityListener = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>允许侦听开始和停止活动事件，并有机会决定为采样方案创建活动。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActivityListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivityListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActivityListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>构造新的活动侦听器对象以开始侦听活动事件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivityStarted">
      <MemberSignature Language="C#" Value="public Action&lt;System.Diagnostics.Activity&gt;? ActivityStarted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class System.Diagnostics.Activity&gt; ActivityStarted" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ActivityListener.ActivityStarted" />
      <MemberSignature Language="VB.NET" Value="Public Property ActivityStarted As Action(Of Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Diagnostics::Activity ^&gt; ^ ActivityStarted { Action&lt;System::Diagnostics::Activity ^&gt; ^ get(); void set(Action&lt;System::Diagnostics::Activity ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ActivityStarted : Action&lt;System.Diagnostics.Activity&gt; with get, set" Usage="System.Diagnostics.ActivityListener.ActivityStarted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Diagnostics.Activity&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于侦听活动开始事件的回调。</summary>
        <value>用于侦听活动开始事件的活动回调实例。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivityStopped">
      <MemberSignature Language="C#" Value="public Action&lt;System.Diagnostics.Activity&gt;? ActivityStopped { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class System.Diagnostics.Activity&gt; ActivityStopped" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ActivityListener.ActivityStopped" />
      <MemberSignature Language="VB.NET" Value="Public Property ActivityStopped As Action(Of Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Diagnostics::Activity ^&gt; ^ ActivityStopped { Action&lt;System::Diagnostics::Activity ^&gt; ^ get(); void set(Action&lt;System::Diagnostics::Activity ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ActivityStopped : Action&lt;System.Diagnostics.Activity&gt; with get, set" Usage="System.Diagnostics.ActivityListener.ActivityStopped" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Diagnostics.Activity&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于侦听活动停止事件的回调。</summary>
        <value>用于侦听活动停止事件的活动回调实例。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivityListener.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="activityListener.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从侦听活动事件取消注册此活动侦听器对象。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sample">
      <MemberSignature Language="C#" Value="public System.Diagnostics.SampleActivity&lt;System.Diagnostics.ActivityContext&gt; Sample { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.SampleActivity`1&lt;valuetype System.Diagnostics.ActivityContext&gt; Sample" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ActivityListener.Sample" />
      <MemberSignature Language="VB.NET" Value="Public Property Sample As SampleActivity(Of ActivityContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::SampleActivity&lt;System::Diagnostics::ActivityContext&gt; ^ Sample { System::Diagnostics::SampleActivity&lt;System::Diagnostics::ActivityContext&gt; ^ get(); void set(System::Diagnostics::SampleActivity&lt;System::Diagnostics::ActivityContext&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Sample : System.Diagnostics.SampleActivity&lt;System.Diagnostics.ActivityContext&gt; with get, set" Usage="System.Diagnostics.ActivityListener.Sample" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SampleActivity&lt;System.Diagnostics.ActivityContext&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置某个回调，该回调用于确定是否允许创建具有特定数据状态的 <see cref="T:System.Diagnostics.Activity" /> 对象。</summary>
        <value>示例活动实例。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SampleUsingParentId">
      <MemberSignature Language="C#" Value="public System.Diagnostics.SampleActivity&lt;string&gt;? SampleUsingParentId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.SampleActivity`1&lt;string&gt; SampleUsingParentId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ActivityListener.SampleUsingParentId" />
      <MemberSignature Language="VB.NET" Value="Public Property SampleUsingParentId As SampleActivity(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::SampleActivity&lt;System::String ^&gt; ^ SampleUsingParentId { System::Diagnostics::SampleActivity&lt;System::String ^&gt; ^ get(); void set(System::Diagnostics::SampleActivity&lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SampleUsingParentId : System.Diagnostics.SampleActivity&lt;string&gt; with get, set" Usage="System.Diagnostics.ActivityListener.SampleUsingParentId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SampleActivity&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置某个回调，该回调用于确定是否允许创建具有特定数据状态的 <see cref="T:System.Diagnostics.Activity" /> 对象。</summary>
        <value>示例活动实例。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldListenTo">
      <MemberSignature Language="C#" Value="public Func&lt;System.Diagnostics.ActivitySource,bool&gt;? ShouldListenTo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class System.Diagnostics.ActivitySource, bool&gt; ShouldListenTo" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ActivityListener.ShouldListenTo" />
      <MemberSignature Language="VB.NET" Value="Public Property ShouldListenTo As Func(Of ActivitySource, Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Diagnostics::ActivitySource ^, bool&gt; ^ ShouldListenTo { Func&lt;System::Diagnostics::ActivitySource ^, bool&gt; ^ get(); void set(Func&lt;System::Diagnostics::ActivitySource ^, bool&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ShouldListenTo : Func&lt;System.Diagnostics.ActivitySource, bool&gt; with get, set" Usage="System.Diagnostics.ActivityListener.ShouldListenTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Diagnostics.ActivitySource,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置回调，允许确定是否应侦听使用活动源对象创建的活动对象事件。</summary>
        <value><see langword="true" /> 侦听事件; <see langword="false" /> 否则为。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
