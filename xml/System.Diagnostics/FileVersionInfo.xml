<Type Name="FileVersionInfo" FullName="System.Diagnostics.FileVersionInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ae3751df43d64acfc74f87804626e7b0d898021f" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86849852" /></Metadata><TypeSignature Language="C#" Value="public sealed class FileVersionInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FileVersionInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.FileVersionInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FileVersionInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileVersionInfo sealed" />
  <TypeSignature Language="F#" Value="type FileVersionInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Diagnostics.FileVersionInfo" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为磁盘上的物理文件提供版本信息。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常，版本号显示为 "主编号. 次要版本号. 内部版本号. 内部版本号. 专用号"。 文件版本号是一个64位的数字，它保存文件的版本号，如下所示：  
  
-   前16位是 <xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A> 数字。  
  
-   接下来的16位是 <xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A> 数字。  
  
-   第三个16位集是 <xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A> 数字。  
  
-   最后16位是 <xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A> 数字。  
  
 使用 <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> 此类的方法获取 <xref:System.Diagnostics.FileVersionInfo> 包含有关文件的信息的，然后查看属性以获取有关文件的信息。 <xref:System.Diagnostics.FileVersionInfo.FileVersion%2A>属性提供有关文件的版本信息。 <xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>、、 <xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A> 、 <xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A> <xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A> 和 <xref:System.Diagnostics.FileVersionInfo.ProductVersion%2A> 属性提供指定文件所属产品的版本信息。 调用 <xref:System.Diagnostics.FileVersionInfo.ToString%2A> 以获取此文件的属性及其值的部分列表。  
  
 这些 <xref:System.Diagnostics.FileVersionInfo> 属性基于内置于文件中的版本资源信息。 版本资源通常内置于二进制文件中，如 .exe 或 .dll 文件;文本文件没有版本资源信息。  
  
 通常在 Win32 资源文件中或在程序集属性中指定版本资源。 例如， <xref:System.Diagnostics.FileVersionInfo.IsDebug%2A> 属性反映 `VS_FF_DEBUG` 文件块中的标志值 `VS_FIXEDFILEINFO` ，它是从 `VERSIONINFO` Win32 资源文件中的资源生成的。  有关在 Win32 资源文件中指定版本资源的详细信息，请参阅 Platform SDK 中的 "关于资源文件" 和 "VERSIONINFO 资源"。 有关在 .NET 模块中指定版本资源的详细信息，请参阅 [设置程序集特性](/dotnet/standard/assembly/set-attributes) 主题。  
  
> [!NOTE]
>  此类在类级别上发出一个适用于所有成员的链接要求。 <xref:System.Security.SecurityException>当直接调用方不具有完全信任权限时，将引发。 有关链接要求的详细信息，请参阅 [链接需求](/dotnet/framework/misc/link-demands)。  
  
   
  
## Examples  
 下面的示例调用 <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> 以获取 <xref:System.Diagnostics.FileVersionInfo> 记事本的。 然后，它会将文件说明和版本号打印到控制台。  
  
 [!code-cpp[Classic FileVersionInfo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />
    <altmember cref="T:System.Version" />
  </Docs>
  <Members>
    <Member MemberName="Comments">
      <MemberSignature Language="C#" Value="public string Comments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comments" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.Comments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comments As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Comments { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Comments : string" Usage="System.Diagnostics.FileVersionInfo.Comments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与文件关联的注释。</summary>
        <value>与文件关联的注释，当文件不包含版本信息时则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性包含可为诊断目的而显示的其他信息。  
  
   
  
## Examples  
 下面的示例调用 <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> 以获取 <xref:System.Diagnostics.FileVersionInfo> 记事本的。 然后，它将在文本框中打印注释。 此代码假定 `textBox1` 已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.Comments Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/Classic FileVersionInfo.Comments Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.Comments Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/Classic FileVersionInfo.Comments Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.Comments Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/Classic FileVersionInfo.Comments Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompanyName">
      <MemberSignature Language="C#" Value="public string CompanyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CompanyName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.CompanyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompanyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CompanyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CompanyName : string" Usage="System.Diagnostics.FileVersionInfo.CompanyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取生成此文件的公司的名称。</summary>
        <value>生成文件的公司的名称，当文件不包含版本信息时则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例调用 <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> 以获取 <xref:System.Diagnostics.FileVersionInfo> 记事本的。 然后，它将打印 <xref:System.Diagnostics.FileVersionInfo.CompanyName%2A> 在文本框中。 此代码假定 `textBox1` 已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.CompanyName Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.CompanyName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.CompanyName Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.CompanyName Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.CompanyName Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.CompanyName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileBuildPart">
      <MemberSignature Language="C#" Value="public int FileBuildPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FileBuildPart" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.FileBuildPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileBuildPart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FileBuildPart { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FileBuildPart : int" Usage="System.Diagnostics.FileVersionInfo.FileBuildPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取文件的生成号。</summary>
        <value>表示文件生成号的值，当文件不包含版本信息时则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常，版本号显示为 "主编号. 次要版本号. 内部版本号. 内部版本号. 专用号"。 文件版本号是一个64位的数字，它保存文件的版本号，如下所示：  
  
-   前16位是 <xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A> 数字。  
  
-   接下来的16位是 <xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A> 数字。  
  
-   第三个16位集是 <xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A> 数字。  
  
-   最后16位是 <xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A> 数字。  
  
 此属性获取第三组16位。  
  
   
  
## Examples  
 下面的示例调用 <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> 以获取 <xref:System.Diagnostics.FileVersionInfo> 记事本的。 然后，它将打印 <xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A> 在文本框中。 此代码假定 `textBox1` 已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.FileBuildPart Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileBuildPart Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.FileBuildPart Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileBuildPart Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.FileBuildPart Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileBuildPart Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMajorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />
        <altmember cref="T:System.Version" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FilePrivatePart" />
      </Docs>
    </Member>
    <Member MemberName="FileDescription">
      <MemberSignature Language="C#" Value="public string FileDescription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileDescription" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.FileDescription" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileDescription { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileDescription : string" Usage="System.Diagnostics.FileVersionInfo.FileDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取文件说明。</summary>
        <value>文件说明，当文件不包含版本信息时则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例调用 <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> 以获取 <xref:System.Diagnostics.FileVersionInfo> 记事本的。 然后，它将打印 <xref:System.Diagnostics.FileVersionInfo.FileDescription%2A> 在文本框中。 此代码假定 `textBox1` 已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.FileDescription Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileDescription Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.FileDescription Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileDescription Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.FileDescription Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileDescription Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileMajorPart">
      <MemberSignature Language="C#" Value="public int FileMajorPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FileMajorPart" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.FileMajorPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileMajorPart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FileMajorPart { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FileMajorPart : int" Usage="System.Diagnostics.FileVersionInfo.FileMajorPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取版本号的主要版本号部分。</summary>
        <value>表示版本号主要部分的值，当文件不包含版本信息时则为 0（零）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常，版本号显示为 "主编号. 次要版本号. 内部版本号. 内部版本号. 专用号"。 文件版本号是一个64位的数字，它保存文件的版本号，如下所示：  
  
-   前16位是 <xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A> 数字。  
  
-   接下来的16位是 <xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A> 数字。  
  
-   第三个16位集是 <xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A> 数字。  
  
-   最后16位是 <xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A> 数字。  
  
 此属性获取第一组16位。  
  
   
  
## Examples  
 下面的示例调用 <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> 以获取 <xref:System.Diagnostics.FileVersionInfo> 记事本的。 然后，它将打印 <xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A> 在文本框中。 此代码假定 `textBox1` 已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.FileMajorPart Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileMajorPart Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.FileMajorPart Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileMajorPart Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.FileMajorPart Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileMajorPart Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />
        <altmember cref="T:System.Version" />
      </Docs>
    </Member>
    <Member MemberName="FileMinorPart">
      <MemberSignature Language="C#" Value="public int FileMinorPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FileMinorPart" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.FileMinorPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileMinorPart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FileMinorPart { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FileMinorPart : int" Usage="System.Diagnostics.FileVersionInfo.FileMinorPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取文件版本号的次要部分。</summary>
        <value>表示文件版本号次要部分的值，当文件不包含版本信息时则为 0（零）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常，版本号显示为 "主编号. 次要版本号. 内部版本号. 内部版本号. 专用号"。 文件版本号是一个64位的数字，它保存文件的版本号，如下所示：  
  
-   前16位是 <xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A> 数字。  
  
-   接下来的16位是 <xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A> 数字。  
  
-   第三个16位集是 <xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A> 数字。  
  
-   最后16位是 <xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A> 数字。  
  
 此属性获取第二组16位。  
  
   
  
## Examples  
 下面的示例调用 <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> 以获取 <xref:System.Diagnostics.FileVersionInfo> 记事本的。 然后，它将打印 <xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A> 在文本框中。 此代码假定 `textBox1` 已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.FileMinorPart Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileMinorPart Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.FileMinorPart Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileMinorPart Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.FileMinorPart Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileMinorPart Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMajorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />
        <altmember cref="T:System.Version" />
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string? FileName { get; }" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.FileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileName : string" Usage="System.Diagnostics.FileVersionInfo.FileName" />
      <MemberSignature Language="C#" Value="public string FileName { get; }" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Diagnostics.FileVersionInfo" /> 的此实例所描述的文件的名称。</summary>
        <value><see cref="T:System.Diagnostics.FileVersionInfo" /> 的此实例所描述的文件的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例调用 <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> 以获取 <xref:System.Diagnostics.FileVersionInfo> 记事本的。 然后，它将打印 <xref:System.Diagnostics.FileVersionInfo.FileName%2A> 在文本框中。 此代码假定 `textBox1` 已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.FileName Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.FileName Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileName Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.FileName Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilePrivatePart">
      <MemberSignature Language="C#" Value="public int FilePrivatePart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FilePrivatePart" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.FilePrivatePart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilePrivatePart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FilePrivatePart { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FilePrivatePart : int" Usage="System.Diagnostics.FileVersionInfo.FilePrivatePart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取文件专用部件号。</summary>
        <value>表示文件专用部件号的值，当文件不包含版本信息时则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常，版本号显示为 "主编号. 次要版本号. 内部版本号. 内部版本号. 专用号"。 文件版本号是一个64位的数字，它保存文件的版本号，如下所示：  
  
-   前16位是 <xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A> 数字。  
  
-   接下来的16位是 <xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A> 数字。  
  
-   第三个16位集是 <xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A> 数字。  
  
-   最后16位是 <xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A> 数字。  
  
 此属性获取最后一组16位。  
  
   
  
## Examples  
 下面的示例调用 <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> 以获取 <xref:System.Diagnostics.FileVersionInfo> 记事本的。 然后，它将打印 <xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A> 在文本框中。 此代码假定 `textBox1` 已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.FilePrivatePart Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FilePrivatePart Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.FilePrivatePart Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FilePrivatePart Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.FilePrivatePart Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.FilePrivatePart Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />
        <altmember cref="T:System.Version" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMajorPart" />
      </Docs>
    </Member>
    <Member MemberName="FileVersion">
      <MemberSignature Language="C#" Value="public string FileVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileVersion" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.FileVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileVersion : string" Usage="System.Diagnostics.FileVersionInfo.FileVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取文件版本号。</summary>
        <value>文件的版本号，当文件不包含版本信息时则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常，版本号显示为 "主编号. 次要版本号. 内部版本号. 内部版本号. 专用号"。 文件版本号是一个64位的数字，它保存文件的版本号，如下所示：  
  
-   前16位是 <xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A> 数字。  
  
-   接下来的16位是 <xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A> 数字。  
  
-   第三个16位集是 <xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A> 数字。  
  
-   最后16位是 <xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A> 数字。  
  
   
  
## Examples  
 下面的示例调用 <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> 以获取 <xref:System.Diagnostics.FileVersionInfo> 记事本的。 然后，它将在文本框中打印文件说明和版本号。 此代码假定 `textBox1` 已实例化。  
  
 [!code-cpp[classic fileversioninfo example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/CPP/source.cpp#1)]
 [!code-csharp[classic fileversioninfo example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/CS/source.cs#1)]
 [!code-vb[classic fileversioninfo example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMajorPart" />
        <altmember cref="T:System.Version" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FilePrivatePart" />
      </Docs>
    </Member>
    <Member MemberName="GetVersionInfo">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.FileVersionInfo GetVersionInfo (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.FileVersionInfo GetVersionInfo(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.FileVersionInfo.GetVersionInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetVersionInfo (fileName As String) As FileVersionInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::FileVersionInfo ^ GetVersionInfo(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="static member GetVersionInfo : string -&gt; System.Diagnostics.FileVersionInfo" Usage="System.Diagnostics.FileVersionInfo.GetVersionInfo fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.FileVersionInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">要检索其版本信息的文件的完全限定路径和名称。</param>
        <summary>返回表示与指定文件关联的版本信息的 <see cref="T:System.Diagnostics.FileVersionInfo" />。</summary>
        <returns>包含文件信息的 <see cref="T:System.Diagnostics.FileVersionInfo" />。 如果文件不包含版本信息，则 <see cref="T:System.Diagnostics.FileVersionInfo" /> 仅包含所请求文件的名称。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例调用 <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> 以获取 <xref:System.Diagnostics.FileVersionInfo> 记事本，并在控制台窗口中显示文件说明和版本号。  
  
 [!code-cpp[classic fileversioninfo example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/CPP/source.cpp#1)]
 [!code-csharp[classic fileversioninfo example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/CS/source.cs#1)]
 [!code-vb[classic fileversioninfo example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">找不到指定的文件。</exception>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.SpecialBuild" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductVersion" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductPrivatePart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductName" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMajorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.PrivateBuild" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.OriginalFilename" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.LegalTrademarks" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.LegalCopyright" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsSpecialBuild" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsPreRelease" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsPrivateBuild" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsPatched" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsDebug" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.InternalName" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FilePrivatePart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileName" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMajorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileDescription" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.CompanyName" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.Comments" />
      </Docs>
    </Member>
    <Member MemberName="InternalName">
      <MemberSignature Language="C#" Value="public string InternalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InternalName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.InternalName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InternalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InternalName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InternalName : string" Usage="System.Diagnostics.FileVersionInfo.InternalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取文件的内部名称（如果存在）。</summary>
        <value>文件的内部名称。 如果不存在内部名称，则该属性将包含文件的原始名称（不带扩展名）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例调用 <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> 以获取 <xref:System.Diagnostics.FileVersionInfo> 记事本的。 然后，它将打印 <xref:System.Diagnostics.FileVersionInfo.InternalName%2A> 在文本框中。 此代码假定 `textBox1` 已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.InternalName Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.InternalName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.InternalName Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.InternalName Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.InternalName Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.InternalName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDebug">
      <MemberSignature Language="C#" Value="public bool IsDebug { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDebug" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.IsDebug" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDebug As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDebug { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDebug : bool" Usage="System.Diagnostics.FileVersionInfo.IsDebug" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指定文件是否包含调试信息或在调试功能启用的情况下进行编译。</summary>
        <value>如果文件包含调试信息或在调试功能启用的情况下进行编译，值为 <see langword="true" />；反之，值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 这些 <xref:System.Diagnostics.FileVersionInfo> 属性基于内置于文件中的版本资源信息。 版本资源通常内置于二进制文件中，如 .exe 或 .dll 文件;文本文件没有版本资源信息。  
  
 通常在 Win32 资源文件中或在程序集属性中指定版本资源。 <xref:System.Diagnostics.FileVersionInfo.IsDebug%2A>属性反映 `VS_FF_DEBUG` 文件块中的标志值 `VS_FIXEDFILEINFO` ，它是从 `VERSIONINFO` Win32 资源文件中的资源生成的。 有关在 Win32 资源文件中指定版本资源的详细信息，请参阅 Platform SDK `About Resource Files` 主题和 `VERSIONINFO Resource` 主题主题。  
  
   
  
## Examples  
 下面的示例调用 <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> 以获取 <xref:System.Diagnostics.FileVersionInfo> 记事本的。 然后，它在文本框中显示布尔值的状态 <xref:System.Diagnostics.FileVersionInfo.IsDebug%2A> 。 此代码假定 `textBox1` 已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.IsDebug Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsDebug Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.IsDebug Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsDebug Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.IsDebug Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsDebug Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPatched">
      <MemberSignature Language="C#" Value="public bool IsPatched { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPatched" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.IsPatched" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPatched As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPatched { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPatched : bool" Usage="System.Diagnostics.FileVersionInfo.IsPatched" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指定该文件是否已修改，且不同于相同版本号的原始发行文件。</summary>
        <value>如果该文件修补过，值为 <see langword="true" />；反之，值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例调用 <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> 以获取 <xref:System.Diagnostics.FileVersionInfo> 记事本的。 然后，它在文本框中显示布尔值的状态 <xref:System.Diagnostics.FileVersionInfo.IsPatched%2A> 。 此代码假定 `textBox1` 已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.IsPatched Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPatched Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.IsPatched Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPatched Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.IsPatched Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPatched Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPreRelease">
      <MemberSignature Language="C#" Value="public bool IsPreRelease { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPreRelease" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.IsPreRelease" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPreRelease As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPreRelease { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPreRelease : bool" Usage="System.Diagnostics.FileVersionInfo.IsPreRelease" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指定该文件是否为开发版本，而不是用于商业目的的发行版。</summary>
        <value>如果该文件是预发行版本，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例调用 <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> 以获取 <xref:System.Diagnostics.FileVersionInfo> 记事本的。 然后，它会显示此版本是否为文本框中的预发行版本。 此代码假定 `textBox1` 已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.IsPreRelease Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPreRelease Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.IsPreRelease Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPreRelease Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.IsPreRelease Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPreRelease Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrivateBuild">
      <MemberSignature Language="C#" Value="public bool IsPrivateBuild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrivateBuild" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.IsPrivateBuild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrivateBuild As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrivateBuild { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPrivateBuild : bool" Usage="System.Diagnostics.FileVersionInfo.IsPrivateBuild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指定文件是否采用标准的发行过程生成。</summary>
        <value>如果文件为专用版本，值为 <see langword="true" />；如果文件是采用标准发行过程生成的或如果文件不包含版本信息，则值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果此值为 `true` ， <xref:System.Diagnostics.FileVersionInfo.PrivateBuild%2A> 将描述此版本的文件与标准版本的不同之处。  
  
   
  
## Examples  
 下面的示例调用 <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> 以获取 <xref:System.Diagnostics.FileVersionInfo> 记事本的。 然后，它将在文本框中显示专用生成信息。 此代码假定 `textBox1` 已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.IsPrivateBuild Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPrivateBuild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.IsPrivateBuild Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPrivateBuild Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.IsPrivateBuild Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPrivateBuild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.PrivateBuild" />
      </Docs>
    </Member>
    <Member MemberName="IsSpecialBuild">
      <MemberSignature Language="C#" Value="public bool IsSpecialBuild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSpecialBuild" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.IsSpecialBuild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSpecialBuild As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSpecialBuild { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSpecialBuild : bool" Usage="System.Diagnostics.FileVersionInfo.IsSpecialBuild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指定该文件是否为特殊内部版本。</summary>
        <value>如果该文件为特殊内部版本，值为 <see langword="true" />；反之，值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 作为特殊版本的文件是使用标准发布过程生成的，但该文件不同于相同版本号的标准文件。 如果此值为 `true` ，则 <xref:System.Diagnostics.FileVersionInfo.SpecialBuild%2A> 属性必须指定此文件与标准版本的不同之处。  
  
   
  
## Examples  
 下面的示例调用 <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> 以获取 <xref:System.Diagnostics.FileVersionInfo> 记事本的。 然后，它会在文本框中显示此版本是否为特殊内部版本。 此代码假定 `textBox1` 已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.IsSpecialBuild Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsSpecialBuild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.IsSpecialBuild Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsSpecialBuild Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.IsSpecialBuild Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsSpecialBuild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.SpecialBuild" />
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public string Language { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Language" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.Language" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Language As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Language { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Language : string" Usage="System.Diagnostics.FileVersionInfo.Language" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取版本信息区的默认语言字符串。</summary>
        <value>版本资源中 Microsoft 语言标识符的描述字符串，当文件不包含版本信息时则为 <see langword="null" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalCopyright">
      <MemberSignature Language="C#" Value="public string LegalCopyright { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LegalCopyright" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.LegalCopyright" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LegalCopyright As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LegalCopyright { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LegalCopyright : string" Usage="System.Diagnostics.FileVersionInfo.LegalCopyright" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取所有适用于指定文件的版权声明。</summary>
        <value>适用于指定文件的版权声明。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 这应包括所有声明的完整文本、合法符号、版权日期等，或者 `null` 如果文件不包含版本信息，则为。  
  
   
  
## Examples  
 下面的示例调用 <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> 以获取 <xref:System.Diagnostics.FileVersionInfo> 记事本的。 然后，它将打印 <xref:System.Diagnostics.FileVersionInfo.LegalCopyright%2A> 在文本框中。 此代码假定 `textBox1` 已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.LegalCopyright Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.LegalCopyright Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.LegalCopyright Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.LegalCopyright Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.LegalCopyright Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.LegalCopyright Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalTrademarks">
      <MemberSignature Language="C#" Value="public string LegalTrademarks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LegalTrademarks" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.LegalTrademarks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LegalTrademarks As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LegalTrademarks { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LegalTrademarks : string" Usage="System.Diagnostics.FileVersionInfo.LegalTrademarks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取应用到文件的商标和注册商标。</summary>
        <value>应用到文件的商标和注册商标，当文件不包含版本信息时则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 法律商标包括所有声明的完整文本、合法符号和商标号。  
  
   
  
## Examples  
 下面的示例调用 <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> 以获取 <xref:System.Diagnostics.FileVersionInfo> 记事本的。 然后，它将打印 <xref:System.Diagnostics.FileVersionInfo.LegalTrademarks%2A> 在文本框中。 此代码假定 `textBox1` 已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.LegalTrademarks Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.LegalTrademarks Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.LegalTrademarks Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.LegalTrademarks Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.LegalTrademarks Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.LegalTrademarks Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalFilename">
      <MemberSignature Language="C#" Value="public string OriginalFilename { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OriginalFilename" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.OriginalFilename" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalFilename As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OriginalFilename { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OriginalFilename : string" Usage="System.Diagnostics.FileVersionInfo.OriginalFilename" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取创建文件时所使用的名称。</summary>
        <value>创建文件时使用的名称，当文件不包含版本信息时则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性使应用程序能够确定文件是否已重命名。  
  
   
  
## Examples  
 下面的示例调用 <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> 以获取 <xref:System.Diagnostics.FileVersionInfo> 记事本的。 然后，它将打印 <xref:System.Diagnostics.FileVersionInfo.OriginalFilename%2A> 在文本框中。 此代码假定 `textBox1` 已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.OriginalFilename Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.OriginalFilename Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.OriginalFilename Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.OriginalFilename Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.OriginalFilename Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.OriginalFilename Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrivateBuild">
      <MemberSignature Language="C#" Value="public string PrivateBuild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PrivateBuild" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.PrivateBuild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrivateBuild As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PrivateBuild { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrivateBuild : string" Usage="System.Diagnostics.FileVersionInfo.PrivateBuild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取文件私有版本的信息。</summary>
        <value>文件私有版本的信息，当文件不包含版本信息时则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当为时，会显示此信息 <xref:System.Diagnostics.FileVersionInfo.IsPrivateBuild%2A> `true` 。  
  
   
  
## Examples  
 下面的示例调用 <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> 以获取 <xref:System.Diagnostics.FileVersionInfo> 记事本的。 然后，它将在文本框中打印专用生成信息。 此代码假定 `textBox1` 已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.PrivateBuild Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.PrivateBuild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.PrivateBuild Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.PrivateBuild Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.PrivateBuild Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.PrivateBuild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsPrivateBuild" />
      </Docs>
    </Member>
    <Member MemberName="ProductBuildPart">
      <MemberSignature Language="C#" Value="public int ProductBuildPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProductBuildPart" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.ProductBuildPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductBuildPart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProductBuildPart { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ProductBuildPart : int" Usage="System.Diagnostics.FileVersionInfo.ProductBuildPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取该文件关联产品的生成号。</summary>
        <value>表示与此文件关联的产品的生成号的值，当文件不包含版本信息时则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常，版本号显示为 "主编号. 次要版本号. 内部版本号. 内部版本号. 专用号"。 产品版本号是一个64位的数字，它保存版本号，如下所示：  
  
-   前16位是 <xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A> 数字。  
  
-   接下来的16位是 <xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A> 数字。  
  
-   第三个16位集是 <xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A> 数字。  
  
-   最后16位是 <xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A> 数字。  
  
 此属性获取第三组16位。  
  
   
  
## Examples  
 下面的示例调用 <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> 以获取 <xref:System.Diagnostics.FileVersionInfo> 记事本的。 然后，它将打印 <xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A> 在文本框中。 此代码假定 `textBox1` 已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.ProductBuildPart Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductBuildPart Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.ProductBuildPart Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductBuildPart Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.ProductBuildPart Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductBuildPart Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductVersion" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMajorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductPrivatePart" />
      </Docs>
    </Member>
    <Member MemberName="ProductMajorPart">
      <MemberSignature Language="C#" Value="public int ProductMajorPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProductMajorPart" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.ProductMajorPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductMajorPart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProductMajorPart { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ProductMajorPart : int" Usage="System.Diagnostics.FileVersionInfo.ProductMajorPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与此文件关联的产品版本号的主要部分。</summary>
        <value>表示产品版本号主要部分的值，当文件不包含版本信息时则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常，版本号显示为 "主编号. 次要版本号. 内部版本号. 内部版本号. 专用号"。 产品版本号是一个64位的数字，它保存版本号，如下所示：  
  
-   前16位是 <xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A> 数字。  
  
-   接下来的16位是 <xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A> 数字。  
  
-   第三个16位集是 <xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A> 数字。  
  
-   最后16位是 <xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A> 数字。  
  
 此属性获取第一组16位。  
  
   
  
## Examples  
 下面的示例调用 <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> 以获取 <xref:System.Diagnostics.FileVersionInfo> 记事本的。 然后，它将打印 <xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A> 在文本框中。 此代码假定 `textBox1` 已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.ProductMajorPart Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductMajorPart Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.ProductMajorPart Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductMajorPart Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.ProductMajorPart Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductMajorPart Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductVersion" />
      </Docs>
    </Member>
    <Member MemberName="ProductMinorPart">
      <MemberSignature Language="C#" Value="public int ProductMinorPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProductMinorPart" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.ProductMinorPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductMinorPart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProductMinorPart { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ProductMinorPart : int" Usage="System.Diagnostics.FileVersionInfo.ProductMinorPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取文件关联产品版本号的次要部分。</summary>
        <value>表示产品版本号次要部分的值，当文件不包含版本信息时则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常，版本号显示为 "主编号. 次要版本号. 内部版本号. 内部版本号. 专用号"。 产品版本号是一个64位的数字，它保存版本号，如下所示：  
  
-   前16位是 <xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A> 数字。  
  
-   接下来的16位是 <xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A> 数字。  
  
-   第三个16位集是 <xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A> 数字。  
  
-   最后16位是 <xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A> 数字。  
  
 此属性获取第二组16位。  
  
   
  
## Examples  
 下面的示例调用 <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> 以获取 <xref:System.Diagnostics.FileVersionInfo> 记事本的。 然后，它将打印 <xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A> 在文本框中。 此代码假定 `textBox1` 已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.ProductMinorPart Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductMinorPart Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.ProductMinorPart Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductMinorPart Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.ProductMinorPart Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductMinorPart Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMajorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductVersion" />
      </Docs>
    </Member>
    <Member MemberName="ProductName">
      <MemberSignature Language="C#" Value="public string ProductName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProductName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.ProductName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProductName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProductName : string" Usage="System.Diagnostics.FileVersionInfo.ProductName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与此文件一起发行的产品的名称。</summary>
        <value>与此文件一起发行的产品的名称，当文件不包含版本信息则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例调用 <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> 以获取 <xref:System.Diagnostics.FileVersionInfo> 记事本的。 然后，它将打印 <xref:System.Diagnostics.FileVersionInfo.ProductName%2A> 在文本框中。 此代码假定 `textBox1` 已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.ProductName Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.ProductName Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductName Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.ProductName Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProductPrivatePart">
      <MemberSignature Language="C#" Value="public int ProductPrivatePart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProductPrivatePart" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.ProductPrivatePart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductPrivatePart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProductPrivatePart { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ProductPrivatePart : int" Usage="System.Diagnostics.FileVersionInfo.ProductPrivatePart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此文件关联产品的专用部件号。</summary>
        <value>表示生成文件时关联的专用部件号的值，或者如果文件不包含版本信息，则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常，版本号显示为 "主编号. 次要版本号. 内部版本号. 内部版本号. 专用号"。 产品版本号是一个64位的数字，它保存版本号，如下所示：  
  
-   前16位是 <xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A> 数字。  
  
-   接下来的16位是 <xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A> 数字。  
  
-   第三个16位集是 <xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A> 数字。  
  
-   最后16位是 <xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A> 数字。  
  
 此属性获取最后一组16位。  
  
   
  
## Examples  
 下面的示例调用 <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> 以获取 <xref:System.Diagnostics.FileVersionInfo> 记事本的。 然后，它将打印 <xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A> 在文本框中。 此代码假定 `textBox1` 已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.ProductPrivatePart Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductPrivatePart Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.ProductPrivatePart Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductPrivatePart Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.ProductPrivatePart Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductPrivatePart Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMajorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductVersion" />
      </Docs>
    </Member>
    <Member MemberName="ProductVersion">
      <MemberSignature Language="C#" Value="public string ProductVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProductVersion" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.ProductVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProductVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProductVersion : string" Usage="System.Diagnostics.FileVersionInfo.ProductVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与此文件一起发行的产品的版本。</summary>
        <value>与此文件一起发行的产品的版本，当文件不包含版本信息时则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常，版本号显示为 "主编号. 次要版本号. 内部版本号. 内部版本号. 专用号"。 产品版本号是一个64位的数字，它保存版本号，如下所示：  
  
-   前16位是 <xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A> 数字。  
  
-   接下来的16位是 <xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A> 数字。  
  
-   第三个16位集是 <xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A> 数字。  
  
-   最后16位是 <xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A> 数字。  
  
   
  
## Examples  
 下面的示例调用 <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> 以获取 <xref:System.Diagnostics.FileVersionInfo> 记事本的。 然后，它将打印 <xref:System.Diagnostics.FileVersionInfo.ProductVersion%2A> 在文本框中。 此代码假定 `textBox1` 已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.ProductVersion Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductVersion Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.ProductVersion Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductVersion Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.ProductVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMajorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductPrivatePart" />
      </Docs>
    </Member>
    <Member MemberName="SpecialBuild">
      <MemberSignature Language="C#" Value="public string SpecialBuild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SpecialBuild" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.SpecialBuild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SpecialBuild As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SpecialBuild { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SpecialBuild : string" Usage="System.Diagnostics.FileVersionInfo.SpecialBuild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取文件的特殊内部版本信息。</summary>
        <value>文件的特殊内部版本信息，当文件不包含版本信息时则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 <xref:System.Diagnostics.FileVersionInfo.IsSpecialBuild%2A> 为 `true` ，则 <xref:System.Diagnostics.FileVersionInfo.SpecialBuild%2A> 必须指定此文件与文件标准版本的不同之处。  
  
   
  
## Examples  
 下面的示例调用 <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> 以获取 <xref:System.Diagnostics.FileVersionInfo> 记事本的。 然后，它将在文本框中打印特殊的生成信息。 此代码假定 `textBox1` 已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.SpecialBuild Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.SpecialBuild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.SpecialBuild Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.SpecialBuild Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.SpecialBuild Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.SpecialBuild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsSpecialBuild" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.FileVersionInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="fileVersionInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回 <see cref="T:System.Diagnostics.FileVersionInfo" /> 中属性及相应值的部分列表。</summary>
        <returns>该类中下列属性及相应值的列表： 
 <see cref="P:System.Diagnostics.FileVersionInfo.FileName" />, <see cref="P:System.Diagnostics.FileVersionInfo.InternalName" />, <see cref="P:System.Diagnostics.FileVersionInfo.OriginalFilename" />, <see cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />, <see cref="P:System.Diagnostics.FileVersionInfo.FileDescription" />, <see cref="P:System.Diagnostics.FileVersionInfo.ProductName" />, <see cref="P:System.Diagnostics.FileVersionInfo.ProductVersion" />, <see cref="P:System.Diagnostics.FileVersionInfo.IsDebug" />, <see cref="P:System.Diagnostics.FileVersionInfo.IsPatched" />, <see cref="P:System.Diagnostics.FileVersionInfo.IsPreRelease" />, <see cref="P:System.Diagnostics.FileVersionInfo.IsPrivateBuild" />, <see cref="P:System.Diagnostics.FileVersionInfo.IsSpecialBuild" />, 
 <see cref="P:System.Diagnostics.FileVersionInfo.Language" />.  
  
如果文件不包含版本信息，则此列表将只包含所请求文件的名称。 布尔值将为 <see langword="false" />，其他所有项将为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例调用 <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> 以获取 <xref:System.Diagnostics.FileVersionInfo> 记事本的。 然后，它调用 <xref:System.Diagnostics.FileVersionInfo.ToString%2A> 在文本框中打印文件版本信息的列表。 此代码假定 `textBox1` 已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.ToString Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ToString Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.ToString Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ToString Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.ToString Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.ToString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileName" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.InternalName" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.OriginalFilename" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileDescription" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.Language" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductName" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductVersion" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsDebug" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsPatched" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsPreRelease" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsPrivateBuild" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsSpecialBuild" />
      </Docs>
    </Member>
  </Members>
</Type>
