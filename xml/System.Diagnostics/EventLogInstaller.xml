<Type Name="EventLogInstaller" FullName="System.Diagnostics.EventLogInstaller">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dd963d53c8f21cabd00664be1813fe1216d1e2c0" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86850120" /></Metadata><TypeSignature Language="C#" Value="public class EventLogInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventLogInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.EventLogInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class EventLogInstaller&#xA;Inherits ComponentInstaller" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventLogInstaller : System::Configuration::Install::ComponentInstaller" />
  <TypeSignature Language="F#" Value="type EventLogInstaller = class&#xA;    inherit ComponentInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration.Install</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="13901-101">使您能够安装和配置应用程序在运行时所读取或写入的事件日志。</span><span class="sxs-lookup"><span data-stu-id="13901-101">Allows you to install and configure an event log that your application reads from or writes to when running.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13901-102"><xref:System.Diagnostics.EventLogInstaller>安装事件日志时， [Installutil.exe (安装程序工具) ](/dotnet/framework/tools/installutil-exe-installer-tool)使用。</span><span class="sxs-lookup"><span data-stu-id="13901-102">The <xref:System.Diagnostics.EventLogInstaller> is used by the [Installutil.exe (Installer Tool)](/dotnet/framework/tools/installutil-exe-installer-tool) when installing an event log.</span></span> <span data-ttu-id="13901-103"><xref:System.Diagnostics.EventLogInstaller>类只能在本地计算机上安装事件日志。</span><span class="sxs-lookup"><span data-stu-id="13901-103">The <xref:System.Diagnostics.EventLogInstaller> class can install event logs only on the local computer.</span></span>  
  
 <span data-ttu-id="13901-104"><xref:System.Diagnostics.EventLogInstaller>当应用程序写入事件日志时使用类; 不需要为应用程序使用事件日志安装程序来读取事件日志。</span><span class="sxs-lookup"><span data-stu-id="13901-104">Use the <xref:System.Diagnostics.EventLogInstaller> class when your application writes to an event log; it is not necessary to use an event log installer for your application to read from an event log.</span></span> <span data-ttu-id="13901-105">应用程序和服务应写入应用程序日志或自定义日志。</span><span class="sxs-lookup"><span data-stu-id="13901-105">Applications and services should write to the Application log or a custom log.</span></span> <span data-ttu-id="13901-106">设备驱动程序应该写入系统日志。</span><span class="sxs-lookup"><span data-stu-id="13901-106">Device drivers should write to the System log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13901-107">安全日志为只读。</span><span class="sxs-lookup"><span data-stu-id="13901-107">The Security log is read-only.</span></span>  
  
 <span data-ttu-id="13901-108">安装程序将创建在属性中指定的事件源 <xref:System.Diagnostics.EventLogInstaller.Source%2A> ，并将其注册到属性中指定的事件日志 <xref:System.Diagnostics.EventLogInstaller.Log%2A> 。</span><span class="sxs-lookup"><span data-stu-id="13901-108">The installer creates the event source that you specify in the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property and registers it for the event log specified in <xref:System.Diagnostics.EventLogInstaller.Log%2A> property.</span></span> <span data-ttu-id="13901-109">此行为类似于 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 在组件上调用 <xref:System.Diagnostics.EventLog> 。</span><span class="sxs-lookup"><span data-stu-id="13901-109">This behavior is similar to calling <xref:System.Diagnostics.EventLog.CreateEventSource%2A> on the <xref:System.Diagnostics.EventLog> component.</span></span>  
  
 <span data-ttu-id="13901-110">使用 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 和 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 方法可将事件写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="13901-110">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> and <xref:System.Diagnostics.EventLog.WriteEntry%2A> methods to write events to an event log.</span></span> <span data-ttu-id="13901-111">您必须指定事件源以写入事件;在写入包含源的第一个条目之前，必须创建并配置事件源。</span><span class="sxs-lookup"><span data-stu-id="13901-111">You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="13901-112">在应用程序安装过程中创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="13901-112">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="13901-113">这样，操作系统就可以刷新其已注册事件源的列表及其配置。</span><span class="sxs-lookup"><span data-stu-id="13901-113">This allows time for the operating system to refresh its list of registered event sources and their configurations.</span></span> <span data-ttu-id="13901-114">如果操作系统尚未刷新其事件源列表，而你尝试使用新源写入事件，则写入操作将失败。</span><span class="sxs-lookup"><span data-stu-id="13901-114">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="13901-115">您可以使用或方法来配置新源 <xref:System.Diagnostics.EventLogInstaller> <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 。</span><span class="sxs-lookup"><span data-stu-id="13901-115">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="13901-116">您必须对该计算机具有管理权限才能创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="13901-116">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="13901-117">可以为现有事件日志或新的事件日志创建事件源。</span><span class="sxs-lookup"><span data-stu-id="13901-117">You can create an event source for an existing event log or a new event log.</span></span> <span data-ttu-id="13901-118">为新的事件日志创建新源时，系统将为该日志注册源，但在向其中写入第一个条目之前，不会创建日志。</span><span class="sxs-lookup"><span data-stu-id="13901-118">When you create a new source for a new event log, the system registers the source for that log, but the log is not created until the first entry is written to it.</span></span>  
  
 <span data-ttu-id="13901-119">若要安装事件日志，请创建从继承的项目安装程序类 <xref:System.Configuration.Install.Installer> ，并将 <xref:System.ComponentModel.RunInstallerAttribute> 类的设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="13901-119">To install an event log, create a project installer class that inherits from <xref:System.Configuration.Install.Installer>, and set the <xref:System.ComponentModel.RunInstallerAttribute> for the class to `true`.</span></span> <span data-ttu-id="13901-120">在项目中， <xref:System.Diagnostics.EventLogInstaller> 为应用程序将写入的每个事件日志创建，并将实例添加到项目安装程序类。</span><span class="sxs-lookup"><span data-stu-id="13901-120">Within your project, create an <xref:System.Diagnostics.EventLogInstaller> for each event log that your application will write to and add the instance to your project installer class.</span></span>  
  
 <span data-ttu-id="13901-121">调用 [Installutil.exe (安装程序工具) ](/dotnet/framework/tools/installutil-exe-installer-tool) 时，它将查看 <xref:System.ComponentModel.RunInstallerAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="13901-121">When the [Installutil.exe (Installer Tool)](/dotnet/framework/tools/installutil-exe-installer-tool) is called, it looks at the <xref:System.ComponentModel.RunInstallerAttribute>.</span></span> <span data-ttu-id="13901-122">如果是 `true` ，则该工具将安装 <xref:System.Configuration.Install.Installer.Installers%2A> 与项目安装程序关联的集合中的所有项。</span><span class="sxs-lookup"><span data-stu-id="13901-122">If it is `true`, the tool installs all the items in the <xref:System.Configuration.Install.Installer.Installers%2A> collection that are associated with your project installer.</span></span> <span data-ttu-id="13901-123">如果 <xref:System.ComponentModel.RunInstallerAttribute> 为 `false` ，则该工具将忽略项目安装程序。</span><span class="sxs-lookup"><span data-stu-id="13901-123">If <xref:System.ComponentModel.RunInstallerAttribute> is `false`, the tool ignores the project installer.</span></span>  
  
 <span data-ttu-id="13901-124">在 <xref:System.Diagnostics.EventLogInstaller> 将实例添加到 <xref:System.Configuration.Install.Installer.Installers%2A> 项目安装程序的集合之前或之后，但在安装程序工具运行之前修改的其他属性。</span><span class="sxs-lookup"><span data-stu-id="13901-124">You modify other properties of an <xref:System.Diagnostics.EventLogInstaller> either before or after adding the instance to the <xref:System.Configuration.Install.Installer.Installers%2A> collection of your project installer, but before the installer tool runs.</span></span> <span data-ttu-id="13901-125"><xref:System.Diagnostics.EventLogInstaller.Source%2A>如果你的应用程序将写入事件日志，则必须设置属性。</span><span class="sxs-lookup"><span data-stu-id="13901-125">You must set the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property if your application will be writing to the event log.</span></span>  
  
 <span data-ttu-id="13901-126">用于为 <xref:System.Diagnostics.EventLogInstaller> 新的或现有的事件日志注册新源; 不要使用 <xref:System.Diagnostics.EventLogInstaller> 来更改现有源。</span><span class="sxs-lookup"><span data-stu-id="13901-126">Use <xref:System.Diagnostics.EventLogInstaller> to register a new source for a new or existing event log; do not use <xref:System.Diagnostics.EventLogInstaller> to change an existing source.</span></span> <span data-ttu-id="13901-127"><xref:System.Diagnostics.EventLogInstaller>类不会修改现有源的配置属性以匹配指定的安装属性。</span><span class="sxs-lookup"><span data-stu-id="13901-127">The <xref:System.Diagnostics.EventLogInstaller> class does not modify the configuration properties of an existing source to match the specified installation properties.</span></span> <span data-ttu-id="13901-128"><xref:System.Diagnostics.EventLogInstaller.Install%2A>如果该 <xref:System.Diagnostics.EventLogInstaller.Source%2A> 属性与为计算机上的不同事件日志注册的源名称匹配，则该方法将引发异常。</span><span class="sxs-lookup"><span data-stu-id="13901-128">The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method throws an exception if the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property matches a source name that is registered for a different event log on the computer.</span></span> <span data-ttu-id="13901-129"><xref:System.Diagnostics.EventLogInstaller.Install%2A>如果 <xref:System.Diagnostics.EventLogInstaller.Source%2A> 属性与已为属性中指定的相同事件日志注册的源名称匹配，则该方法不会注册源 <xref:System.Diagnostics.EventLogInstaller.Log%2A> 。</span><span class="sxs-lookup"><span data-stu-id="13901-129">The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method does not register the source if the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property matches a source name that is already registered for the same event log specified in the <xref:System.Diagnostics.EventLogInstaller.Log%2A> property.</span></span>  
  
 <span data-ttu-id="13901-130">可以向事件类别和消息字符串的本地化资源文件注册事件源。</span><span class="sxs-lookup"><span data-stu-id="13901-130">You can register the event source with localized resource files for your event category and message strings.</span></span> <span data-ttu-id="13901-131">应用程序可以使用资源标识符而不是指定实际字符串来编写事件日志项。</span><span class="sxs-lookup"><span data-stu-id="13901-131">Your application can write event log entries using resource identifiers, rather than specifying the actual string.</span></span> <span data-ttu-id="13901-132">事件查看器使用资源标识符从本地化的资源文件中查找并显示相应的字符串。</span><span class="sxs-lookup"><span data-stu-id="13901-132">The Event Viewer uses the resource identifier to find and display the corresponding string from the localized resource file based on current language settings.</span></span> <span data-ttu-id="13901-133">您可以为事件类别、消息和参数插入字符串注册单独的文件，也可以为所有这三种类型的字符串注册同一资源文件。</span><span class="sxs-lookup"><span data-stu-id="13901-133">You can register a separate file for event categories, messages, and parameter insertion strings, or you can register the same resource file for all three types of strings.</span></span> <span data-ttu-id="13901-134">使用 <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> 、 <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> 、 <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> 和属性将 <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> 源配置为将本地化项写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="13901-134">Use the <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A>, <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A>, <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>, and <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> properties to configure the source to write localized entries to the event log.</span></span> <span data-ttu-id="13901-135">如果你的应用程序将字符串值直接写入事件日志，则无需设置这些属性。</span><span class="sxs-lookup"><span data-stu-id="13901-135">If your application writes strings values directly to the event log, you do not need to set these properties.</span></span>  
  
 <span data-ttu-id="13901-136">源必须配置为写入本地化项或写入直接字符串。</span><span class="sxs-lookup"><span data-stu-id="13901-136">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="13901-137">如果应用程序使用资源标识符和字符串值写入条目，则必须注册两个不同的源。</span><span class="sxs-lookup"><span data-stu-id="13901-137">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="13901-138">例如，使用资源文件配置一个源，然后在方法中使用该源，将 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 使用资源标识符的项写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="13901-138">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="13901-139">创建不含资源文件的其他源，然后在方法中使用该源，使用 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 该源直接向事件日志写入字符串。</span><span class="sxs-lookup"><span data-stu-id="13901-139">Create a different source without resource files and then use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
 <span data-ttu-id="13901-140">通常情况下，你不会 <xref:System.Diagnostics.EventLogInstaller> 从代码中调用类的方法，通常只 Installutil.exe 调用这些方法。</span><span class="sxs-lookup"><span data-stu-id="13901-140">Typically, you do not call the methods of the <xref:System.Diagnostics.EventLogInstaller> class from within your code; they are generally called only by Installutil.exe.</span></span> <span data-ttu-id="13901-141">该工具会在 <xref:System.Diagnostics.EventLogInstaller.Install%2A> 安装过程中自动调用此方法。</span><span class="sxs-lookup"><span data-stu-id="13901-141">The tool automatically calls the <xref:System.Diagnostics.EventLogInstaller.Install%2A> method during the installation process.</span></span> <span data-ttu-id="13901-142">如果需要，它会通过调用 <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> 生成异常的对象的方法来实现故障。</span><span class="sxs-lookup"><span data-stu-id="13901-142">It backs out failures, if necessary, by calling the <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> method for the object that generated the exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13901-143">下面的代码示例设置新事件源的安装属性。</span><span class="sxs-lookup"><span data-stu-id="13901-143">The following code example sets the installation properties for a new event source.</span></span> <span data-ttu-id="13901-144">此代码示例设置源名称和事件日志名称，并将添加 <xref:System.Diagnostics.EventLogInstaller> 到 <xref:System.Configuration.Install.Installer.Installers%2A> 集合中。</span><span class="sxs-lookup"><span data-stu-id="13901-144">The code example sets the source name and the event log name, and adds the <xref:System.Diagnostics.EventLogInstaller> to the <xref:System.Configuration.Install.Installer.Installers%2A> collection.</span></span>  
  
 [!code-cpp[EventLogInstaller#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogInstaller/CPP/eventloginstaller.cpp#1)]
 [!code-csharp[EventLogInstaller#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogInstaller/CS/eventloginstaller.cs#1)]
 [!code-vb[EventLogInstaller#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogInstaller/VB/eventloginstaller.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.EventLog" />
    <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
    <related type="Article" href="/dotnet/framework/tools/installutil-exe-installer-tool"><span data-ttu-id="13901-145">Installutil.exe（安装程序工具）</span><span class="sxs-lookup"><span data-stu-id="13901-145">Installutil.exe (Installer Tool)</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="13901-146">初始化 <see cref="T:System.Diagnostics.EventLogInstaller" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="13901-146">Initializes a new instance of the <see cref="T:System.Diagnostics.EventLogInstaller" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CategoryCount">
      <MemberSignature Language="C#" Value="public int CategoryCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CategoryCount" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.CategoryCount" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CategoryCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CategoryCount : int with get, set" Usage="System.Diagnostics.EventLogInstaller.CategoryCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13901-147">获取或设置类别资源文件中类别的数目。</span><span class="sxs-lookup"><span data-stu-id="13901-147">Gets or sets the number of categories in the category resource file.</span></span></summary>
        <value><span data-ttu-id="13901-148">类别资源文件中的类别的数目。</span><span class="sxs-lookup"><span data-stu-id="13901-148">The number of categories in the category resource file.</span></span> <span data-ttu-id="13901-149">默认值为零。</span><span class="sxs-lookup"><span data-stu-id="13901-149">The default value is zero.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13901-150">使用 <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> 和 <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> 属性来写入包含本地化类别字符串的事件。</span><span class="sxs-lookup"><span data-stu-id="13901-150">Use the <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> and <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> properties to write events with localized category strings.</span></span> <span data-ttu-id="13901-151">如果在编写事件时提供类别，事件查看器将显示事件条目的类别。</span><span class="sxs-lookup"><span data-stu-id="13901-151">The Event Viewer displays the category for an event entry, if you supply a category when you write the event.</span></span> <span data-ttu-id="13901-152">事件日志类别是应用程序定义的字符串，可帮助筛选事件，或提供有关事件的信息。</span><span class="sxs-lookup"><span data-stu-id="13901-152">Event log categories are application-defined strings that help filter events, or provide information on an event.</span></span> <span data-ttu-id="13901-153">例如，你的应用程序可以为不同的组件或不同的操作定义单独的类别。</span><span class="sxs-lookup"><span data-stu-id="13901-153">For example, your application can define separate categories for different components or different operations.</span></span>  
  
 <span data-ttu-id="13901-154">事件类别是可选的;如果你的应用程序不使用类别，请不要设置 <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> 和 <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="13901-154">Event categories are optional; if your application does not use categories, do not set the <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> and <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> properties.</span></span>  
  
 <span data-ttu-id="13901-155">有关定义事件消息和生成事件资源文件的详细信息，请参阅 Platform SDK 文档中的 [消息编译器](/windows/win32/wes/message-compiler--mc-exe-) 一文。</span><span class="sxs-lookup"><span data-stu-id="13901-155">For details about defining event messages and building event resource files, see the [Message Compiler](/windows/win32/wes/message-compiler--mc-exe-) article in the Platform SDK documentation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13901-156">下面的代码示例设置新事件源的安装属性。</span><span class="sxs-lookup"><span data-stu-id="13901-156">The following code example sets the installation properties for a new event source.</span></span> <span data-ttu-id="13901-157">此代码示例为本地化事件文本设置事件源名称、事件日志名称和资源文件。</span><span class="sxs-lookup"><span data-stu-id="13901-157">The code example sets the event source name, event log name, and resource file for localized event text.</span></span>  
  
 [!code-cpp[EventLogInstaller_Resources#1](~/samples/snippets/cpp/VS_Snippets_CLR/eventlogInstaller_Resources/CPP/source.cpp#1)]
 [!code-csharp[EventLogInstaller_Resources#1](~/samples/snippets/csharp/VS_Snippets_CLR/eventlogInstaller_Resources/CS/source.cs#1)]
 [!code-vb[EventLogInstaller_Resources#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlogInstaller_Resources/VB/source.vb#1)]  
  
 <span data-ttu-id="13901-158">此代码示例使用资源库中内置的以下消息文本文件 EventLogMsgs.dll。</span><span class="sxs-lookup"><span data-stu-id="13901-158">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="13901-159">消息文本文件是从中创建消息资源文件的源。</span><span class="sxs-lookup"><span data-stu-id="13901-159">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="13901-160">消息文本文件定义类别、事件消息和参数插入字符串的资源标识符和文本。</span><span class="sxs-lookup"><span data-stu-id="13901-160">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.CategoryCount" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="CategoryResourceFile">
      <MemberSignature Language="C#" Value="public string CategoryResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CategoryResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CategoryResourceFile : string with get, set" Usage="System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13901-161">获取或设置包含源的类别字符串的资源文件的路径。</span><span class="sxs-lookup"><span data-stu-id="13901-161">Gets or sets the path of the resource file that contains category strings for the source.</span></span></summary>
        <value><span data-ttu-id="13901-162">类别资源文件的路径。</span><span class="sxs-lookup"><span data-stu-id="13901-162">The path of the category resource file.</span></span> <span data-ttu-id="13901-163">默认值为空字符串("")。</span><span class="sxs-lookup"><span data-stu-id="13901-163">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13901-164">使用 <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> 和 <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> 属性来写入包含本地化类别字符串的事件。</span><span class="sxs-lookup"><span data-stu-id="13901-164">Use the <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> and <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> properties to write events with localized category strings.</span></span> <span data-ttu-id="13901-165">如果你在写入事件时提供了一个类别，则事件查看器将显示该事件项的类别。</span><span class="sxs-lookup"><span data-stu-id="13901-165">The Event Viewer displays the category for an event entry if you supply a category when you write the event.</span></span> <span data-ttu-id="13901-166">事件日志类别是应用程序定义的字符串，可帮助筛选事件，或提供有关事件的信息。</span><span class="sxs-lookup"><span data-stu-id="13901-166">Event log categories are application-defined strings that help filter events, or provide information about an event.</span></span> <span data-ttu-id="13901-167">例如，应用程序可能有不同的类别用于不同的组件或不同的操作。</span><span class="sxs-lookup"><span data-stu-id="13901-167">For example, your application might have separate categories for different components or different operations.</span></span>  
  
 <span data-ttu-id="13901-168">事件类别是可选的;如果你的应用程序不使用类别，请不要设置 <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> 和 <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="13901-168">Event categories are optional; if your application does not use categories, do not set the <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> and <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> properties.</span></span>  
  
 <span data-ttu-id="13901-169">有关定义事件消息和生成事件资源文件的详细信息，请参阅 Platform SDK 文档中的 [消息编译器](/windows/win32/wes/message-compiler--mc-exe-) 一文。</span><span class="sxs-lookup"><span data-stu-id="13901-169">For details about defining event messages and building event resource files, see the [Message Compiler](/windows/win32/wes/message-compiler--mc-exe-) article in the Platform SDK documentation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13901-170">下面的代码示例设置新事件源的安装属性。</span><span class="sxs-lookup"><span data-stu-id="13901-170">The following code example sets the installation properties for a new event source.</span></span> <span data-ttu-id="13901-171">此代码示例为本地化事件文本设置事件源名称、事件日志名称和资源文件。</span><span class="sxs-lookup"><span data-stu-id="13901-171">The code example sets the event source name, event log name, and resource file for localized event text.</span></span>  
  
 [!code-cpp[EventLogInstaller_Resources#1](~/samples/snippets/cpp/VS_Snippets_CLR/eventlogInstaller_Resources/CPP/source.cpp#1)]
 [!code-csharp[EventLogInstaller_Resources#1](~/samples/snippets/csharp/VS_Snippets_CLR/eventlogInstaller_Resources/CS/source.cs#1)]
 [!code-vb[EventLogInstaller_Resources#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlogInstaller_Resources/VB/source.vb#1)]  
  
 <span data-ttu-id="13901-172">此代码示例使用资源库中内置的以下消息文本文件 EventLogMsgs.dll。</span><span class="sxs-lookup"><span data-stu-id="13901-172">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="13901-173">消息文本文件是从中创建消息资源文件的源。</span><span class="sxs-lookup"><span data-stu-id="13901-173">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="13901-174">消息文本文件定义类别、事件消息和参数插入字符串的资源标识符和文本。</span><span class="sxs-lookup"><span data-stu-id="13901-174">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogInstaller.CategoryCount" />
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFromComponent (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFromComponent(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="override this.CopyFromComponent : System.ComponentModel.IComponent -&gt; unit" Usage="eventLogInstaller.CopyFromComponent component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="13901-175">用作 <see cref="T:System.ComponentModel.IComponent" /> 的模板的 <see cref="T:System.Diagnostics.EventLogInstaller" />。</span><span class="sxs-lookup"><span data-stu-id="13901-175">An <see cref="T:System.ComponentModel.IComponent" /> to use as a template for the <see cref="T:System.Diagnostics.EventLogInstaller" />.</span></span></param>
        <summary><span data-ttu-id="13901-176">复制安装时所需要的 <see cref="T:System.Diagnostics.EventLog" /> 组件（与事件日志对应）的属性值。</span><span class="sxs-lookup"><span data-stu-id="13901-176">Copies the property values of an <see cref="T:System.Diagnostics.EventLog" /> component that are required at installation time for an event log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13901-177">参数指定的组件 `component` 必须是 <xref:System.Diagnostics.EventLog> ; 否则，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="13901-177">The component specified by the `component` parameter must be an <xref:System.Diagnostics.EventLog>; otherwise, an exception is thrown.</span></span>  
  
 <span data-ttu-id="13901-178">通常情况下，你不会 <xref:System.Diagnostics.EventLogInstaller> 从代码中调用的方法; 它们通常仅由 [Installutil.exe (安装程序工具) ](/dotnet/framework/tools/installutil-exe-installer-tool)调用。</span><span class="sxs-lookup"><span data-stu-id="13901-178">Typically, you do not call the methods of the <xref:System.Diagnostics.EventLogInstaller> from within your code; they are generally called only by the [Installutil.exe (Installer Tool)](/dotnet/framework/tools/installutil-exe-installer-tool).</span></span> <span data-ttu-id="13901-179"><xref:System.Diagnostics.EventLogInstaller.CopyFromComponent%2A> Installutil.exe 使用将的属性值设置为现有的的 <xref:System.Diagnostics.EventLogInstaller> 值 <xref:System.Diagnostics.EventLog> 。</span><span class="sxs-lookup"><span data-stu-id="13901-179"><xref:System.Diagnostics.EventLogInstaller.CopyFromComponent%2A> is used by Installutil.exe to set the property values for the <xref:System.Diagnostics.EventLogInstaller> to the values of an existing <xref:System.Diagnostics.EventLog>.</span></span>  
  
 <span data-ttu-id="13901-180">如果传入的的为 <xref:System.Diagnostics.EventLog.Log%2A> <xref:System.Diagnostics.EventLog> 空字符串 ( "" ) ，则必须在 <xref:System.Diagnostics.EventLog.Log%2A> 安装程序执行之前将该属性设置为有效的值。</span><span class="sxs-lookup"><span data-stu-id="13901-180">If the <xref:System.Diagnostics.EventLog.Log%2A> of the <xref:System.Diagnostics.EventLog> that is passed in is an empty string (""), you must set the <xref:System.Diagnostics.EventLog.Log%2A> property to a valid value before the installer executes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="13901-181">指定的组件不是 <see cref="T:System.Diagnostics.EventLog" />。</span><span class="sxs-lookup"><span data-stu-id="13901-181">The specified component is not an <see cref="T:System.Diagnostics.EventLog" />.</span></span>  
  
<span data-ttu-id="13901-182">- 或 -</span><span class="sxs-lookup"><span data-stu-id="13901-182">-or-</span></span> 
<span data-ttu-id="13901-183">指定组件的 <see cref="P:System.Diagnostics.EventLog.Log" /> 或 <see cref="P:System.Diagnostics.EventLog.Source" /> 属性为 <see langword="null" /> 或空。</span><span class="sxs-lookup"><span data-stu-id="13901-183">The <see cref="P:System.Diagnostics.EventLog.Log" /> or <see cref="P:System.Diagnostics.EventLog.Source" /> property of the specified component is either <see langword="null" /> or empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (stateSaver As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ stateSaver);" />
      <MemberSignature Language="F#" Value="override this.Install : System.Collections.IDictionary -&gt; unit" Usage="eventLogInstaller.Install stateSaver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver"><span data-ttu-id="13901-184"><see cref="T:System.Collections.IDictionary" />，用于保存执行回滚或卸载操作所需的信息。</span><span class="sxs-lookup"><span data-stu-id="13901-184">An <see cref="T:System.Collections.IDictionary" /> used to save information needed to perform a rollback or uninstall operation.</span></span></param>
        <summary><span data-ttu-id="13901-185">执行安装并将事件日志信息写入注册表。</span><span class="sxs-lookup"><span data-stu-id="13901-185">Performs the installation and writes event log information to the registry.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13901-186"><xref:System.Diagnostics.EventLogInstaller.Install%2A>方法将事件日志信息写入注册表，并将事件日志与属性指定的日志相关联 <xref:System.Diagnostics.EventLogInstaller.Log%2A> 。</span><span class="sxs-lookup"><span data-stu-id="13901-186">The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method writes event log information to the registry, and associates the event log with a log that is specified by the <xref:System.Diagnostics.EventLogInstaller.Log%2A> property.</span></span> <span data-ttu-id="13901-187">如果该日志尚不存在 (并且) 指定了源，则将 <xref:System.Diagnostics.EventLogInstaller.Install%2A> 创建一个日志，并将新源与其关联。</span><span class="sxs-lookup"><span data-stu-id="13901-187">If the log does not already exist (and a source is specified), <xref:System.Diagnostics.EventLogInstaller.Install%2A> creates a log and associates the new source with it.</span></span>  
  
 <span data-ttu-id="13901-188">通常情况下，你不会 <xref:System.Diagnostics.EventLogInstaller> 从代码中调用的方法; 它们通常仅由 [Installutil.exe (安装程序工具) ](/dotnet/framework/tools/installutil-exe-installer-tool)调用。</span><span class="sxs-lookup"><span data-stu-id="13901-188">Typically, you do not call the methods of the <xref:System.Diagnostics.EventLogInstaller> from within your code; they are generally called only by the [Installutil.exe (Installer Tool)](/dotnet/framework/tools/installutil-exe-installer-tool).</span></span> <span data-ttu-id="13901-189">此工具会在 <xref:System.Diagnostics.EventLogInstaller.Install%2A> 安装过程中自动调用方法，以写入与要安装的事件日志关联的注册表信息。</span><span class="sxs-lookup"><span data-stu-id="13901-189">The tool automatically calls the <xref:System.Diagnostics.EventLogInstaller.Install%2A> method during the installation process to write registry information that is associated with the event log being installed.</span></span> <span data-ttu-id="13901-190">安装是事务性的，因此，如果在安装过程中任何安装项目组件发生故障，则所有以前安装的组件都将回滚到其安装前状态。</span><span class="sxs-lookup"><span data-stu-id="13901-190">Installation is transactional, so if there is a failure of any installation project component during the installation, all the previously-installed components are rolled back to their pre-installation states.</span></span> <span data-ttu-id="13901-191">这可以通过调用每个组件的 <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> 方法来实现。</span><span class="sxs-lookup"><span data-stu-id="13901-191">This is accomplished by calling each component's <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> method.</span></span>  
  
 <span data-ttu-id="13901-192">用于为 <xref:System.Diagnostics.EventLogInstaller> 新的或现有的事件日志注册新源; 不要使用 <xref:System.Diagnostics.EventLogInstaller> 来更改现有源。</span><span class="sxs-lookup"><span data-stu-id="13901-192">Use <xref:System.Diagnostics.EventLogInstaller> to register a new source for a new or existing event log; do not use <xref:System.Diagnostics.EventLogInstaller> to change an existing source.</span></span> <span data-ttu-id="13901-193"><xref:System.Diagnostics.EventLogInstaller>类不会修改现有源的配置属性以匹配指定的安装属性。</span><span class="sxs-lookup"><span data-stu-id="13901-193">The <xref:System.Diagnostics.EventLogInstaller> class does not modify the configuration properties of an existing source to match the specified installation properties.</span></span> <span data-ttu-id="13901-194"><xref:System.Diagnostics.EventLogInstaller.Install%2A>如果该 <xref:System.Diagnostics.EventLogInstaller.Source%2A> 属性与为计算机上的不同事件日志注册的源名称匹配，则该方法将引发异常。</span><span class="sxs-lookup"><span data-stu-id="13901-194">The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method throws an exception if the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property matches a source name that is registered for a different event log on the computer.</span></span> <span data-ttu-id="13901-195"><xref:System.Diagnostics.EventLogInstaller.Install%2A>如果 <xref:System.Diagnostics.EventLogInstaller.Source%2A> 属性与已为属性中指定的相同事件日志注册的源名称匹配，则该方法将跳过注册源 <xref:System.Diagnostics.EventLogInstaller.Log%2A> 。</span><span class="sxs-lookup"><span data-stu-id="13901-195">The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method skips registering the source if the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property matches a source name that is already registered for the same event log specified in the <xref:System.Diagnostics.EventLogInstaller.Log%2A> property.</span></span>  
  
 <span data-ttu-id="13901-196">应用程序的安装例程使用项目安装程序的 <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> 属性来自动维护有关已安装的组件的信息。</span><span class="sxs-lookup"><span data-stu-id="13901-196">An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> property to automatically maintain information about the components that have already been installed.</span></span> <span data-ttu-id="13901-197">当工具安装每个时，此状态信息（作为参数传递给） <xref:System.Diagnostics.EventLogInstaller.Install%2A> `stateSaver` 将持续更新 <xref:System.Diagnostics.EventLogInstaller> 。</span><span class="sxs-lookup"><span data-stu-id="13901-197">This state information, which is passed to <xref:System.Diagnostics.EventLogInstaller.Install%2A> as the `stateSaver` parameter, is continuously updated as the tool installs each <xref:System.Diagnostics.EventLogInstaller>.</span></span> <span data-ttu-id="13901-198">通常，你的代码不需要显式修改此状态信息。</span><span class="sxs-lookup"><span data-stu-id="13901-198">Usually, it is not necessary for your code to explicitly modify this state information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="13901-199">已经为另一个事件日志注册了 <see cref="P:System.Diagnostics.EventLogInstaller.Source" /> 属性中指定的名称。</span><span class="sxs-lookup"><span data-stu-id="13901-199">The name specified in the <see cref="P:System.Diagnostics.EventLogInstaller.Source" /> property is already registered for a different event log.</span></span></exception>
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="IsEquivalentInstaller">
      <MemberSignature Language="C#" Value="public override bool IsEquivalentInstaller (System.Configuration.Install.ComponentInstaller otherInstaller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsEquivalentInstaller(class System.Configuration.Install.ComponentInstaller otherInstaller) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsEquivalentInstaller (otherInstaller As ComponentInstaller) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsEquivalentInstaller(System::Configuration::Install::ComponentInstaller ^ otherInstaller);" />
      <MemberSignature Language="F#" Value="override this.IsEquivalentInstaller : System.Configuration.Install.ComponentInstaller -&gt; bool" Usage="eventLogInstaller.IsEquivalentInstaller otherInstaller" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherInstaller" Type="System.Configuration.Install.ComponentInstaller" />
      </Parameters>
      <Docs>
        <param name="otherInstaller"><span data-ttu-id="13901-200">要比较的安装程序。</span><span class="sxs-lookup"><span data-stu-id="13901-200">The installer to compare.</span></span></param>
        <summary><span data-ttu-id="13901-201">确定安装程序和指定的另一个安装程序是否引用同一个源。</span><span class="sxs-lookup"><span data-stu-id="13901-201">Determines whether an installer and another specified installer refer to the same source.</span></span></summary>
        <returns><span data-ttu-id="13901-202">如果当前安装程序和由 <paramref name="otherInstaller" /> 参数指定的安装程序安装或卸载相同的源，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="13901-202"><see langword="true" /> if this installer and the installer specified by the <paramref name="otherInstaller" /> parameter would install or uninstall the same source; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13901-203">通常情况下，你不会 <xref:System.Diagnostics.EventLogInstaller> 从代码中调用的方法; 它们通常仅由安装程序工具 ( # A0) 中调用。</span><span class="sxs-lookup"><span data-stu-id="13901-203">Typically, you do not call the methods of the <xref:System.Diagnostics.EventLogInstaller> from within your code; they are generally called only by the Installer tool (Installutil.exe).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.EventLogInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public string Log { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Log" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.Log" />
      <MemberSignature Language="VB.NET" Value="Public Property Log As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Log { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Log : string with get, set" Usage="System.Diagnostics.EventLogInstaller.Log" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13901-204">获取或设置要向其设置源的日志的名称。</span><span class="sxs-lookup"><span data-stu-id="13901-204">Gets or sets the name of the log to set the source to.</span></span></summary>
        <value><span data-ttu-id="13901-205">日志的名称。</span><span class="sxs-lookup"><span data-stu-id="13901-205">The name of the log.</span></span> <span data-ttu-id="13901-206">这可以是 Application、System 或一个自定义的日志名称。</span><span class="sxs-lookup"><span data-stu-id="13901-206">This can be Application, System, or a custom log name.</span></span> <span data-ttu-id="13901-207">默认值为空字符串("")。</span><span class="sxs-lookup"><span data-stu-id="13901-207">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13901-208">您可以使用属性将在 <xref:System.Diagnostics.EventLogInstaller.Log%2A> 属性中指定的源 <xref:System.Diagnostics.EventLogInstaller.Source%2A> 与本地计算机上的现有日志或新日志相关联。</span><span class="sxs-lookup"><span data-stu-id="13901-208">You can use the <xref:System.Diagnostics.EventLogInstaller.Log%2A> property to associate the source you specify in the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property with either an existing log or a new log on the local computer.</span></span> <span data-ttu-id="13901-209">[安装程序工具) 的Installutil.exe (](/dotnet/framework/tools/installutil-exe-installer-tool)使用此信息将源映射到计算机注册表中的日志。</span><span class="sxs-lookup"><span data-stu-id="13901-209">The [Installutil.exe (Installer Tool)](/dotnet/framework/tools/installutil-exe-installer-tool) uses this information to map the source to the log in the computer's registry.</span></span> <span data-ttu-id="13901-210">应用程序和服务应写入应用程序日志或自定义日志。</span><span class="sxs-lookup"><span data-stu-id="13901-210">Applications and services should write to the Application log or a custom log.</span></span> <span data-ttu-id="13901-211">设备驱动程序应该写入系统日志。</span><span class="sxs-lookup"><span data-stu-id="13901-211">Device drivers should write to the System log.</span></span>  
  
 <span data-ttu-id="13901-212">若要将条目写入事件日志，必须创建一个源，并将其注册到事件日志。</span><span class="sxs-lookup"><span data-stu-id="13901-212">To write entries to an event log, you must create a source and register it with an event log.</span></span> <span data-ttu-id="13901-213">一个事件源一次只能写入一个日志。</span><span class="sxs-lookup"><span data-stu-id="13901-213">An event source can only write to one log at a time.</span></span> <span data-ttu-id="13901-214">安装程序使用属性的值 <xref:System.Diagnostics.EventLogInstaller.Source%2A> 将应用程序和事件日志注册为条目的有效源。</span><span class="sxs-lookup"><span data-stu-id="13901-214">The installer uses the value of the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property to register your application with the event log as a valid source of entries.</span></span> <span data-ttu-id="13901-215">如果在安装程序运行之前未指定日志名称，则安装程序会将源注册到应用程序日志。</span><span class="sxs-lookup"><span data-stu-id="13901-215">If you do not specify a log name before the installer runs, the installer registers your source to the Application log.</span></span> <span data-ttu-id="13901-216">如果指定新的源和现有日志，安装程序将创建一个新的事件源，并将其与指定的日志关联。</span><span class="sxs-lookup"><span data-stu-id="13901-216">If you specify a new source and an existing log, the installer creates a new event source and associates it with the log you specify.</span></span> <span data-ttu-id="13901-217">如果同时指定新源和新日志，则安装程序会将新的源与注册表中的新日志关联，但在向其中写入第一个条目之前，不会创建日志。</span><span class="sxs-lookup"><span data-stu-id="13901-217">If you specify both a new source and a new log, the installer associates the new source with the new log in the registry, but the log is not created until the first entry is written to it.</span></span>  
  
 <span data-ttu-id="13901-218">操作系统将事件日志存储为文件。</span><span class="sxs-lookup"><span data-stu-id="13901-218">The operating system stores event logs as files.</span></span> <span data-ttu-id="13901-219">当使用 <xref:System.Diagnostics.EventLogInstaller> 或 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 方法创建新的事件日志时，关联的文件将存储在指定计算机上的%SystemRoot%\System32\Config 目录中。</span><span class="sxs-lookup"><span data-stu-id="13901-219">When you use <xref:System.Diagnostics.EventLogInstaller> or the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method to create a new event log, the associated file is stored in the %SystemRoot%\System32\Config directory on the specified computer.</span></span> <span data-ttu-id="13901-220">文件名的设置方法是将属性的前8个字符追加到 <xref:System.Diagnostics.EventLogInstaller.Log%2A> 文件扩展名 ".evt"。</span><span class="sxs-lookup"><span data-stu-id="13901-220">The file name is set by appending the first 8 characters of the <xref:System.Diagnostics.EventLogInstaller.Log%2A> property with the ".evt" file name extension.</span></span>  
  
 <span data-ttu-id="13901-221">用于为 <xref:System.Diagnostics.EventLogInstaller> 新的或现有的事件日志注册新源; 不要使用 <xref:System.Diagnostics.EventLogInstaller> 来更改现有源。</span><span class="sxs-lookup"><span data-stu-id="13901-221">Use <xref:System.Diagnostics.EventLogInstaller> to register a new source for a new or existing event log; do not use <xref:System.Diagnostics.EventLogInstaller> to change an existing source.</span></span> <span data-ttu-id="13901-222"><xref:System.Diagnostics.EventLogInstaller>类不会修改现有源的配置属性以匹配指定的安装属性。</span><span class="sxs-lookup"><span data-stu-id="13901-222">The <xref:System.Diagnostics.EventLogInstaller> class does not modify the configuration properties of an existing source to match the specified installation properties.</span></span> <span data-ttu-id="13901-223"><xref:System.Diagnostics.EventLogInstaller.Install%2A>如果该 <xref:System.Diagnostics.EventLogInstaller.Source%2A> 属性与为计算机上的不同事件日志注册的源名称匹配，则该方法将引发异常。</span><span class="sxs-lookup"><span data-stu-id="13901-223">The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method throws an exception if the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property matches a source name that is registered for a different event log on the computer.</span></span> <span data-ttu-id="13901-224"><xref:System.Diagnostics.EventLogInstaller.Install%2A>如果 <xref:System.Diagnostics.EventLogInstaller.Source%2A> 属性与已为属性中指定的相同事件日志注册的源名称匹配，则该方法不会注册源 <xref:System.Diagnostics.EventLogInstaller.Log%2A> 。</span><span class="sxs-lookup"><span data-stu-id="13901-224">The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method does not register the source if the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property matches a source name that is already registered for the same event log specified in the <xref:System.Diagnostics.EventLogInstaller.Log%2A> property.</span></span>  
  
 <span data-ttu-id="13901-225">有关事件日志和源行为的详细信息，请参阅 <xref:System.Diagnostics.EventLog> 和属性的类文档 <xref:System.Diagnostics.EventLog.Log%2A> <xref:System.Diagnostics.EventLog.Source%2A> 。</span><span class="sxs-lookup"><span data-stu-id="13901-225">For more detailed information about the behaviors of event logs and sources, see the <xref:System.Diagnostics.EventLog> class documentation for the <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.Source%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="T:System.Diagnostics.EventLog" />
      </Docs>
    </Member>
    <Member MemberName="MessageResourceFile">
      <MemberSignature Language="C#" Value="public string MessageResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MessageResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.MessageResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MessageResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MessageResourceFile : string with get, set" Usage="System.Diagnostics.EventLogInstaller.MessageResourceFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13901-226">获取或设置资源文件的路径，该文件包含源的消息格式字符串。</span><span class="sxs-lookup"><span data-stu-id="13901-226">Gets or sets the path of the resource file that contains message formatting strings for the source.</span></span></summary>
        <value><span data-ttu-id="13901-227">消息资源文件的路径。</span><span class="sxs-lookup"><span data-stu-id="13901-227">The path of the message resource file.</span></span> <span data-ttu-id="13901-228">默认值为空字符串("")。</span><span class="sxs-lookup"><span data-stu-id="13901-228">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13901-229">使用 <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> 属性将事件日志源配置为写入本地化事件消息。</span><span class="sxs-lookup"><span data-stu-id="13901-229">Use the <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> property to configure an event log source to write localized event messages.</span></span> <span data-ttu-id="13901-230">事件消息是应用程序定义的字符串，用于向用户描述事件。</span><span class="sxs-lookup"><span data-stu-id="13901-230">Event messages are application-defined strings that describe the event to the user.</span></span>  
  
 <span data-ttu-id="13901-231">应用程序可以使用资源标识符编写事件日志项。</span><span class="sxs-lookup"><span data-stu-id="13901-231">Your application can write event log entries using resource identifiers.</span></span> <span data-ttu-id="13901-232">资源标识符对位于中的消息进行索引 <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> 。</span><span class="sxs-lookup"><span data-stu-id="13901-232">A resource identifier indexes a message located in the <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>.</span></span> <span data-ttu-id="13901-233">事件查看器使用资源标识符从本地化的资源文件中查找并显示相应的字符串。</span><span class="sxs-lookup"><span data-stu-id="13901-233">The Event Viewer uses the resource identifier to find and display the corresponding string from the localized resource file based on current language settings.</span></span>  
  
 <span data-ttu-id="13901-234">事件源必须配置为写入本地化项或写入直接字符串。</span><span class="sxs-lookup"><span data-stu-id="13901-234">The event source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="13901-235">使用 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 方法为使用消息资源文件配置的源写入本地化项。</span><span class="sxs-lookup"><span data-stu-id="13901-235">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write localized entries for a source configured with a message resource file.</span></span>  
  
 <span data-ttu-id="13901-236">如果你的应用程序直接写入事件消息字符串，而不是在本地化的资源文件中使用资源标识符，请不要设置 <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="13901-236">If your application writes event message strings directly, rather than using a resource identifier in a localized resource file, do not set the <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> property.</span></span>  
  
 <span data-ttu-id="13901-237">如果该 <xref:System.Diagnostics.EventLog.MachineName%2A> 属性不是本地计算机标识符 ( "。) ，.NET Framework 假定资源文件位于远程计算机上。</span><span class="sxs-lookup"><span data-stu-id="13901-237">If the <xref:System.Diagnostics.EventLog.MachineName%2A> property is not the local computer identifier ("."), the .NET Framework assumes that the resource file is on a remote computer.</span></span> <span data-ttu-id="13901-238">如果 <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> 属性值包含驱动器号，则假定资源文件位于 \\ \\<machinename \> \\<drive \> $ share (例如， \\ \server\c $) 。</span><span class="sxs-lookup"><span data-stu-id="13901-238">If the <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> property value contains a drive letter, the resource file is assumed to be on the \\\\<machinename\>\\<drive\>$ share (for example, \\\server\c$).</span></span> <span data-ttu-id="13901-239">如果值包含字符串% systemroot%，则假定资源文件位于 \\ \\<machinename \> \admin $ share (例如， \\ \server\admin $) 。</span><span class="sxs-lookup"><span data-stu-id="13901-239">If the value contains the string %systemroot%, the resource file is assumed to be on the \\\\<machinename\>\admin$ share (for example, \\\server\admin$).</span></span>  
  
 <span data-ttu-id="13901-240">有关定义事件消息和生成事件资源文件的详细信息，请参阅 Platform SDK 文档中的 [消息编译器](/windows/win32/wes/message-compiler--mc-exe-) 一文。</span><span class="sxs-lookup"><span data-stu-id="13901-240">For details about defining event messages and building event resource files, see the [Message Compiler](/windows/win32/wes/message-compiler--mc-exe-) article in the Platform SDK documentation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13901-241">下面的代码示例设置新事件源的安装属性。</span><span class="sxs-lookup"><span data-stu-id="13901-241">The following code example sets the installation properties for a new event source.</span></span> <span data-ttu-id="13901-242">此代码示例为本地化事件文本设置事件源名称、事件日志名称和资源文件。</span><span class="sxs-lookup"><span data-stu-id="13901-242">The code example sets the event source name, event log name, and resource file for localized event text.</span></span>  
  
 [!code-cpp[EventLogInstaller_Resources#1](~/samples/snippets/cpp/VS_Snippets_CLR/eventlogInstaller_Resources/CPP/source.cpp#1)]
 [!code-csharp[EventLogInstaller_Resources#1](~/samples/snippets/csharp/VS_Snippets_CLR/eventlogInstaller_Resources/CS/source.cs#1)]
 [!code-vb[EventLogInstaller_Resources#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlogInstaller_Resources/VB/source.vb#1)]  
  
 <span data-ttu-id="13901-243">此代码示例使用资源库中内置的以下消息文本文件 EventLogMsgs.dll。</span><span class="sxs-lookup"><span data-stu-id="13901-243">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="13901-244">消息文本文件是从中创建消息资源文件的源。</span><span class="sxs-lookup"><span data-stu-id="13901-244">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="13901-245">消息文本文件定义类别、事件消息和参数插入字符串的资源标识符和文本。</span><span class="sxs-lookup"><span data-stu-id="13901-245">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile" />
      </Docs>
    </Member>
    <Member MemberName="ParameterResourceFile">
      <MemberSignature Language="C#" Value="public string ParameterResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.ParameterResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property ParameterResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ParameterResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ParameterResourceFile : string with get, set" Usage="System.Diagnostics.EventLogInstaller.ParameterResourceFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13901-246">获取或设置资源文件的路径，该文件包含源的消息参数字符串。</span><span class="sxs-lookup"><span data-stu-id="13901-246">Gets or sets the path of the resource file that contains message parameter strings for the source.</span></span></summary>
        <value><span data-ttu-id="13901-247">消息参数资源文件的路径。</span><span class="sxs-lookup"><span data-stu-id="13901-247">The path of the message parameter resource file.</span></span> <span data-ttu-id="13901-248">默认值为空字符串("")。</span><span class="sxs-lookup"><span data-stu-id="13901-248">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13901-249">使用 <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> 属性来配置事件日志源，以使用插入的参数字符串写入本地化事件消息。</span><span class="sxs-lookup"><span data-stu-id="13901-249">Use the <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> property to configure an event log source to write localized event messages with inserted parameter strings.</span></span> <span data-ttu-id="13901-250">属性中指定的每个本地化事件消息 <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> 可以包含插入字符串的占位符。</span><span class="sxs-lookup"><span data-stu-id="13901-250">Each localized event message specified in the <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> property can contain placeholders for insertion strings.</span></span> <span data-ttu-id="13901-251">这些占位符用于指定事件消息中与语言无关的字符串的位置和资源标识符。</span><span class="sxs-lookup"><span data-stu-id="13901-251">These placeholders are used to specify the position and resource identifier for a language-independent string within the event message.</span></span> <span data-ttu-id="13901-252">事件查看器将占位符替换为相应的字符串 <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> ，并为本地化事件项设置事件日志消息的格式。</span><span class="sxs-lookup"><span data-stu-id="13901-252">The Event Viewer replaces the placeholders with the corresponding strings from the <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> and formats the event log message for the localized event entry.</span></span>  
  
 <span data-ttu-id="13901-253">例如，消息文本文件的以下部分定义带有参数占位符的字符串：</span><span class="sxs-lookup"><span data-stu-id="13901-253">For example, the following section of a message text file defines a string with a parameter placeholder:</span></span>  
  
```  
  
MessageId = 1501  
Severity = Success  
Facility = Application  
SymbolicName = COMPONENT_STARTING  
Language=English  
Component %%6050 is starting.  
.  
```  
  
 <span data-ttu-id="13901-254">在参数资源文件中，插入字符串必须定义为与占位符对应的资源标识符，如下所示：</span><span class="sxs-lookup"><span data-stu-id="13901-254">Within the parameter resource file, the insertion string must be defined with the resource identifier that corresponds to the placeholder, as shown below:</span></span>  
  
```  
MessageId = 6050  
Severity = Success  
Facility = Application  
SymbolicName = COMPONENT_NAME_MSGID  
Language=English  
TRIGGER.EXE  
.  
```  
  
 <span data-ttu-id="13901-255">事件源必须配置为写入本地化项或写入直接字符串。</span><span class="sxs-lookup"><span data-stu-id="13901-255">The event source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="13901-256">使用 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 方法为使用消息资源文件配置的源写入本地化项。</span><span class="sxs-lookup"><span data-stu-id="13901-256">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write localized entries for a source configured with a message resource file.</span></span>  
  
 <span data-ttu-id="13901-257">如果你的应用程序将事件消息字符串直接写入事件日志，或者，如果不 <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> 包含具有参数插入占位符的消息，请不要设置 <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="13901-257">If your application writes event message strings directly to the event log, or if your <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> does not contain messages with parameter insertion placeholders, do not set the <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> property.</span></span>  
  
 <span data-ttu-id="13901-258">有关定义事件消息和生成事件资源文件的详细信息，请参阅 Platform SDK 文档中的 [消息编译器](/windows/win32/wes/message-compiler--mc-exe-) 一文。</span><span class="sxs-lookup"><span data-stu-id="13901-258">For details about defining event messages and building event resource files, see the [Message Compiler](/windows/win32/wes/message-compiler--mc-exe-) article in the Platform SDK documentation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13901-259">下面的代码示例设置新事件源的安装属性。</span><span class="sxs-lookup"><span data-stu-id="13901-259">The following code example sets the installation properties for a new event source.</span></span> <span data-ttu-id="13901-260">此代码示例为本地化事件文本设置事件源名称、事件日志名称和资源文件。</span><span class="sxs-lookup"><span data-stu-id="13901-260">The code example sets the event source name, event log name, and resource file for localized event text.</span></span>  
  
 [!code-cpp[EventLogInstaller_Resources#1](~/samples/snippets/cpp/VS_Snippets_CLR/eventlogInstaller_Resources/CPP/source.cpp#1)]
 [!code-csharp[EventLogInstaller_Resources#1](~/samples/snippets/csharp/VS_Snippets_CLR/eventlogInstaller_Resources/CS/source.cs#1)]
 [!code-vb[EventLogInstaller_Resources#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlogInstaller_Resources/VB/source.vb#1)]  
  
 <span data-ttu-id="13901-261">此代码示例使用资源库中内置的以下消息文本文件 EventLogMsgs.dll。</span><span class="sxs-lookup"><span data-stu-id="13901-261">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="13901-262">消息文本文件是从中创建消息资源文件的源。</span><span class="sxs-lookup"><span data-stu-id="13901-262">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="13901-263">消息文本文件定义类别、事件消息和参数插入字符串的资源标识符和文本。</span><span class="sxs-lookup"><span data-stu-id="13901-263">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span> <span data-ttu-id="13901-264">具体而言，为资源标识符1004定义的消息使用占位符作为为资源标识符5002定义的参数字符串。</span><span class="sxs-lookup"><span data-stu-id="13901-264">Specifically, the message defined for resource identifier 1004 uses a placeholder for a parameter string defined for resource identifier 5002.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Rollback : System.Collections.IDictionary -&gt; unit" Usage="eventLogInstaller.Rollback savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState"><span data-ttu-id="13901-265"><see cref="T:System.Collections.IDictionary" /> 包含计算机的安装前状态。</span><span class="sxs-lookup"><span data-stu-id="13901-265">An <see cref="T:System.Collections.IDictionary" /> that contains the pre-installation state of the computer.</span></span></param>
        <summary><span data-ttu-id="13901-266">通过回滚安装过程写入注册表的事件日志信息，将计算机还原为安装前的状态。</span><span class="sxs-lookup"><span data-stu-id="13901-266">Restores the computer to the state it was in before the installation by rolling back the event log information that the installation procedure wrote to the registry.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13901-267"><xref:System.Diagnostics.EventLogInstaller.Rollback%2A>方法撤消方法的效果 <xref:System.Diagnostics.EventLogInstaller.Install%2A> 。</span><span class="sxs-lookup"><span data-stu-id="13901-267">The <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> method undoes the effects of the <xref:System.Diagnostics.EventLogInstaller.Install%2A> method.</span></span> <span data-ttu-id="13901-268"><xref:System.Diagnostics.EventLogInstaller.Rollback%2A> 如果安装项目中的任何组件的安装失败，则调用。</span><span class="sxs-lookup"><span data-stu-id="13901-268"><xref:System.Diagnostics.EventLogInstaller.Rollback%2A> is called if the installation of any component in the installation project fails.</span></span> <span data-ttu-id="13901-269"><xref:System.Diagnostics.EventLogInstaller.Install%2A>方法创建或设置事件日志和事件源的属性。</span><span class="sxs-lookup"><span data-stu-id="13901-269">The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method creates or sets the properties for an event log and event source.</span></span> <span data-ttu-id="13901-270"><xref:System.Diagnostics.EventLogInstaller.Rollback%2A> 删除事件日志和源，或将预先存在的源的属性重置为其预安装值。</span><span class="sxs-lookup"><span data-stu-id="13901-270"><xref:System.Diagnostics.EventLogInstaller.Rollback%2A> either deletes the event log and source or resets the properties of a pre-existing source to its pre-installation values.</span></span>  
  
 <span data-ttu-id="13901-271">通常情况下，你不会 <xref:System.Diagnostics.EventLogInstaller> 从代码中调用的方法; 它们通常仅由 [Installutil.exe (安装程序工具) ](/dotnet/framework/tools/installutil-exe-installer-tool)调用。</span><span class="sxs-lookup"><span data-stu-id="13901-271">Typically, you do not call the methods of the <xref:System.Diagnostics.EventLogInstaller> from within your code; they are generally called only by the [Installutil.exe (Installer Tool)](/dotnet/framework/tools/installutil-exe-installer-tool).</span></span> <span data-ttu-id="13901-272">此工具会调用 <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> 方法，当此组件或其他组件安装失败时，将撤消安装过程中的任何更改。</span><span class="sxs-lookup"><span data-stu-id="13901-272">The tool calls the <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> method, when this or another component has failed to install, to undo any changes that the installation process has already made.</span></span>  
  
 <span data-ttu-id="13901-273">应用程序的安装例程使用项目安装程序的 <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> 属性来自动维护有关已安装的组件的信息。</span><span class="sxs-lookup"><span data-stu-id="13901-273">An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> property to automatically maintain information about the components that have already been installed.</span></span> <span data-ttu-id="13901-274">当工具回滚每个时，此状态信息（作为参数传递给） <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> `savedState` 会不断更新 <xref:System.Diagnostics.EventLogInstaller> 。</span><span class="sxs-lookup"><span data-stu-id="13901-274">This state information, which is passed to <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> as the `savedState` parameter, is continuously updated as the tool rolls back each <xref:System.Diagnostics.EventLogInstaller>.</span></span> <span data-ttu-id="13901-275">通常，你的代码不需要显式修改此状态信息。</span><span class="sxs-lookup"><span data-stu-id="13901-275">Usually, it is not necessary for your code to explicitly modify this state information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : string with get, set" Usage="System.Diagnostics.EventLogInstaller.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13901-276">获取或设置要在日志中注册的源名称。</span><span class="sxs-lookup"><span data-stu-id="13901-276">Gets or sets the source name to register with the log.</span></span></summary>
        <value><span data-ttu-id="13901-277">要在事件日志中注册为项源的名称。</span><span class="sxs-lookup"><span data-stu-id="13901-277">The name to register with the event log as a source of entries.</span></span> <span data-ttu-id="13901-278">默认值为空字符串("")。</span><span class="sxs-lookup"><span data-stu-id="13901-278">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13901-279">事件源指示记录事件的内容。</span><span class="sxs-lookup"><span data-stu-id="13901-279">The event source indicates what logs the event.</span></span> <span data-ttu-id="13901-280">它通常是应用程序的名称，或者是大型应用程序中组件的名称。</span><span class="sxs-lookup"><span data-stu-id="13901-280">It is often the name of the application, or the name of a component within a large application.</span></span>  
  
 <span data-ttu-id="13901-281">安装程序使用属性的值 <xref:System.Diagnostics.EventLogInstaller.Source%2A> 将应用程序和事件日志注册为条目的有效源。</span><span class="sxs-lookup"><span data-stu-id="13901-281">The installer uses the value of the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property to register your application with the event log as a valid source of entries.</span></span> <span data-ttu-id="13901-282">新的源名称不能与现有的源名称或现有的事件日志名称相匹配。</span><span class="sxs-lookup"><span data-stu-id="13901-282">A new source name cannot match an existing source name or an existing event log name.</span></span> <span data-ttu-id="13901-283">每个源一次只能写入一个事件日志;但是，应用程序可以使用多个源来写入多个事件日志。</span><span class="sxs-lookup"><span data-stu-id="13901-283">Each source can only write to one event log at a time; however, your application can use multiple sources to write to multiple event logs.</span></span> <span data-ttu-id="13901-284">例如，你的应用程序可能需要为不同的事件日志或不同的资源文件配置多个源。</span><span class="sxs-lookup"><span data-stu-id="13901-284">For example, your application might require multiple sources configured for different event logs or different resource files.</span></span>  
  
 <span data-ttu-id="13901-285">应用程序和服务应写入应用程序日志或自定义日志。</span><span class="sxs-lookup"><span data-stu-id="13901-285">Applications and services should write to the Application log or a custom log.</span></span> <span data-ttu-id="13901-286">设备驱动程序应该写入系统日志。</span><span class="sxs-lookup"><span data-stu-id="13901-286">Device drivers should write to the System log.</span></span> <span data-ttu-id="13901-287">如果在安装程序运行之前未指定日志名称，则安装程序会将源注册到应用程序日志。</span><span class="sxs-lookup"><span data-stu-id="13901-287">If you do not specify a log name before the installer runs, the installer registers your source to the Application log.</span></span> <span data-ttu-id="13901-288">如果指定不存在的日志的名称，系统会将注册 <xref:System.Diagnostics.EventLogInstaller.Source%2A> 到该日志，但在向其中写入第一个条目之前，不会创建该日志。</span><span class="sxs-lookup"><span data-stu-id="13901-288">If you specify the name of a log that does not exist, the system registers the <xref:System.Diagnostics.EventLogInstaller.Source%2A> to that log, but the log is not created until the first entry is written to it.</span></span>  
  
 <span data-ttu-id="13901-289">用于为 <xref:System.Diagnostics.EventLogInstaller> 新的或现有的事件日志注册新源; 不要使用 <xref:System.Diagnostics.EventLogInstaller> 来更改现有源。</span><span class="sxs-lookup"><span data-stu-id="13901-289">Use <xref:System.Diagnostics.EventLogInstaller> to register a new source for a new or existing event log; do not use <xref:System.Diagnostics.EventLogInstaller> to change an existing source.</span></span> <span data-ttu-id="13901-290"><xref:System.Diagnostics.EventLogInstaller>类不会修改现有源的配置属性以匹配指定的安装属性。</span><span class="sxs-lookup"><span data-stu-id="13901-290">The <xref:System.Diagnostics.EventLogInstaller> class does not modify the configuration properties of an existing source to match the specified installation properties.</span></span> <span data-ttu-id="13901-291"><xref:System.Diagnostics.EventLogInstaller.Install%2A>如果该 <xref:System.Diagnostics.EventLogInstaller.Source%2A> 属性与为计算机上的不同事件日志注册的源名称匹配，则该方法将引发异常。</span><span class="sxs-lookup"><span data-stu-id="13901-291">The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method throws an exception if the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property matches a source name that is registered for a different event log on the computer.</span></span> <span data-ttu-id="13901-292"><xref:System.Diagnostics.EventLogInstaller.Install%2A>如果 <xref:System.Diagnostics.EventLogInstaller.Source%2A> 属性与已为属性中指定的相同事件日志注册的源名称匹配，则该方法不会注册源 <xref:System.Diagnostics.EventLogInstaller.Log%2A> 。</span><span class="sxs-lookup"><span data-stu-id="13901-292">The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method does not register the source if the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property matches a source name that is already registered for the same event log specified in the <xref:System.Diagnostics.EventLogInstaller.Log%2A> property.</span></span>  
  
 <span data-ttu-id="13901-293">有关事件日志和源行为的详细信息，请参阅 <xref:System.Diagnostics.EventLog> 和属性的类文档 <xref:System.Diagnostics.EventLog.Log%2A> <xref:System.Diagnostics.EventLog.Source%2A> 。</span><span class="sxs-lookup"><span data-stu-id="13901-293">For more detailed information about the behaviors of event logs and sources, see the <xref:System.Diagnostics.EventLog> class documentation for the <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.Source%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="T:System.Diagnostics.EventLog" />
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public override void Uninstall (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Uninstall(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.Uninstall(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Uninstall (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Uninstall(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Uninstall : System.Collections.IDictionary -&gt; unit" Usage="eventLogInstaller.Uninstall savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState"><span data-ttu-id="13901-294"><see cref="T:System.Collections.IDictionary" /> 包含计算机的安装前状态。</span><span class="sxs-lookup"><span data-stu-id="13901-294">An <see cref="T:System.Collections.IDictionary" /> that contains the pre-installation state of the computer.</span></span></param>
        <summary><span data-ttu-id="13901-295">通过从注册表中移除事件日志信息来移除安装。</span><span class="sxs-lookup"><span data-stu-id="13901-295">Removes an installation by removing event log information from the registry.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13901-296">如果 <xref:System.Diagnostics.EventLogInstaller.UninstallAction%2A> 属性值为 `Remove` ，则 <xref:System.Diagnostics.EventLogInstaller.Uninstall%2A> 当 <xref:System.Diagnostics.EventLogInstaller.Log%2A> 和 <xref:System.Diagnostics.EventLogInstaller.Source%2A> 属性指定创建新的事件日志和源时，该方法会删除安装程序创建的源和关联日志。</span><span class="sxs-lookup"><span data-stu-id="13901-296">If the <xref:System.Diagnostics.EventLogInstaller.UninstallAction%2A> property value is `Remove`, the <xref:System.Diagnostics.EventLogInstaller.Uninstall%2A> method deletes the source and the associated log that the installer created if the <xref:System.Diagnostics.EventLogInstaller.Log%2A> and <xref:System.Diagnostics.EventLogInstaller.Source%2A> properties specified the creation of a new event log and source.</span></span>  
  
 <span data-ttu-id="13901-297">通常情况下，你不会 <xref:System.Diagnostics.EventLogInstaller> 从代码中调用的方法; 它们通常仅由 [Installutil.exe 的 (安装程序工具) ](/dotnet/framework/tools/installutil-exe-installer-tool) 在卸载模式下调用。</span><span class="sxs-lookup"><span data-stu-id="13901-297">Typically, you do not call the methods of the <xref:System.Diagnostics.EventLogInstaller> from within your code; they are generally called only by the [Installutil.exe (Installer Tool)](/dotnet/framework/tools/installutil-exe-installer-tool) in uninstall mode.</span></span> <span data-ttu-id="13901-298">该工具会自动调用 <xref:System.Diagnostics.EventLogInstaller.Uninstall%2A> 方法，将受安装影响的系统部件还原为其安装前的状态。</span><span class="sxs-lookup"><span data-stu-id="13901-298">The tool automatically calls the <xref:System.Diagnostics.EventLogInstaller.Uninstall%2A> method to restore the parts of the system that were affected by the installation to their pre-installation states.</span></span> <span data-ttu-id="13901-299">这包括删除与要卸载的事件日志关联的注册表信息。</span><span class="sxs-lookup"><span data-stu-id="13901-299">This includes deleting registry information that is associated with the event log being uninstalled.</span></span>  
  
 <span data-ttu-id="13901-300">应用程序的卸载例程使用项目安装程序的 <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> 属性来自动维护有关已卸载的组件的信息。</span><span class="sxs-lookup"><span data-stu-id="13901-300">An application's uninstall routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> property to automatically maintain information about the components that have already been uninstalled.</span></span> <span data-ttu-id="13901-301">此状态信息作为参数传递给 <xref:System.Diagnostics.EventLogInstaller.Uninstall%2A> `savedState` ，在工具卸载每个时，会不断更新 <xref:System.Diagnostics.EventLogInstaller> 。</span><span class="sxs-lookup"><span data-stu-id="13901-301">This state information, which is passed to <xref:System.Diagnostics.EventLogInstaller.Uninstall%2A> as the `savedState` parameter, is continuously updated as the tool uninstalls each <xref:System.Diagnostics.EventLogInstaller>.</span></span> <span data-ttu-id="13901-302">通常，你的代码不需要显式修改此状态信息。</span><span class="sxs-lookup"><span data-stu-id="13901-302">Usually, it is not necessary for your code to explicitly modify this state information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="UninstallAction">
      <MemberSignature Language="C#" Value="public System.Configuration.Install.UninstallAction UninstallAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.Install.UninstallAction UninstallAction" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.UninstallAction" />
      <MemberSignature Language="VB.NET" Value="Public Property UninstallAction As UninstallAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::Install::UninstallAction UninstallAction { System::Configuration::Install::UninstallAction get(); void set(System::Configuration::Install::UninstallAction value); };" />
      <MemberSignature Language="F#" Value="member this.UninstallAction : System.Configuration.Install.UninstallAction with get, set" Usage="System.Diagnostics.EventLogInstaller.UninstallAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.Install.UninstallAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13901-303">获取或设置一个值，以指示 <see href="https://docs.microsoft.com/dotnet/framework/tools/installutil-exe-installer-tool">Installutil.exe（安装程序工具）</see>在卸载时应删除事件日志还是保留其安装状态。</span><span class="sxs-lookup"><span data-stu-id="13901-303">Gets or sets a value that indicates whether the <see href="https://docs.microsoft.com/dotnet/framework/tools/installutil-exe-installer-tool">Installutil.exe (Installer Tool)</see> should remove the event log or leave it in its installed state at uninstall time.</span></span></summary>
        <value><span data-ttu-id="13901-304"><see cref="T:System.Configuration.Install.UninstallAction" /> 值之一，它指示在卸载 <see cref="T:System.Diagnostics.EventLog" /> 时将事件日志保留在何种状态。</span><span class="sxs-lookup"><span data-stu-id="13901-304">One of the <see cref="T:System.Configuration.Install.UninstallAction" /> values that indicates what state to leave the event log in when the <see cref="T:System.Diagnostics.EventLog" /> is uninstalled.</span></span> <span data-ttu-id="13901-305">默认为 <see langword="Remove" />。</span><span class="sxs-lookup"><span data-stu-id="13901-305">The default is <see langword="Remove" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13901-306">当你安装事件日志时，可以选择将其连接到现有日志。</span><span class="sxs-lookup"><span data-stu-id="13901-306">When you install an event log, you can optionally connect it to an existing log.</span></span> <span data-ttu-id="13901-307">如果这样做，则必须决定日志是否应恢复为其安装前的状态，或保持其当前的安装后状态。</span><span class="sxs-lookup"><span data-stu-id="13901-307">If you do so, you must decide whether the log should return to its pre-installation state, or remain in its current, post-installation state.</span></span> <span data-ttu-id="13901-308">如果您选择将事件日志恢复为其安装前的状态，则不会还原在安装时对事件日志条目所做的更改。</span><span class="sxs-lookup"><span data-stu-id="13901-308">If you elect to return the event log to its pre-installation state, changes to the event log entries at installation are not restored.</span></span> <span data-ttu-id="13901-309">你可以仅将与相关联的事件日志属性重置 <xref:System.Diagnostics.EventLogInstaller> 为其预安装值。</span><span class="sxs-lookup"><span data-stu-id="13901-309">You can reset only the event log properties that are associated with the <xref:System.Diagnostics.EventLogInstaller> to their pre-installation values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="13901-310"><see cref="P:System.Diagnostics.EventLogInstaller.UninstallAction" /> 包含无效值。</span><span class="sxs-lookup"><span data-stu-id="13901-310"><see cref="P:System.Diagnostics.EventLogInstaller.UninstallAction" /> contains an invalid value.</span></span> <span data-ttu-id="13901-311">只有 <see langword="Remove" /> 和 <see langword="NoAction" /> 才是此属性的有效值。</span><span class="sxs-lookup"><span data-stu-id="13901-311">The only valid values for this property are <see langword="Remove" /> and <see langword="NoAction" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
